import { notFound } from 'next/navigation'
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import { Badge } from '@/components/ui/badge'
import { Button } from '@/components/ui/button'
import { 
  ChevronRight,
  Home,
  Download,
  ExternalLink,
  CheckCircle2,
  Zap,
  Shield,
  Cpu,
  Calendar,
  User,
  ArrowRight,
  Car,
  Wifi,
  Battery
} from 'lucide-react'
import Link from 'next/link'

// 品牌数据
const getBrandName = (brandSlug: string) => {
  const brands = {
    'stmicroelectronics': 'STMicroelectronics',
    'texas-instruments': 'Texas Instruments',
    'espressif': 'Espressif Systems',
    'analog-devices': 'Analog Devices',
    'infineon': 'Infineon Technologies',
    'nxp': 'NXP Semiconductors',
    'microchip': 'Microchip Technology',
    'qualcomm': 'Qualcomm'
  }
  return brands[brandSlug as keyof typeof brands] || brandSlug
}

// 解决方案数据
const getSolutionData = (brandSlug: string, solutionSlug: string) => {
  const solutions: any = {
    'stmicroelectronics': {
      'automotive-gateway': {
        title: '汽车网关解决方案',
        description: '基于STM32的汽车网关系统，支持多协议通信和安全认证',
        category: '汽车电子',
        overview: 'STMicroelectronics汽车网关解决方案提供了完整的硬件和软件平台，支持CAN、LIN、FlexRay等多种汽车总线协议。',
        keyFeatures: [
          '支持多种汽车通信协议 (CAN, LIN, FlexRay, Ethernet)',
          'HSM硬件安全模块，确保通信安全',
          '低功耗设计，支持休眠唤醒',
          '丰富的I/O接口和外设'
        ],
        applications: ['汽车中央网关', '域控制器', 'T-Box远程信息处理单元'],
        products: [
          {
            name: 'STM32H7系列',
            description: '高性能Arm® Cortex®-M7内核微控制器',
            features: ['480MHz主频', '2MB Flash', '1MB RAM', '以太网MAC']
          }
        ]
      },
      'iot-connectivity': {
        title: '物联网连接解决方案',
        description: '基于STM32WL的低功耗广域网(LPWAN)解决方案',
        category: '物联网',
        overview: '提供完整的LoRaWAN和Sigfox连接解决方案，适用于各种物联网应用。',
        keyFeatures: [
          'LoRaWAN和Sigfox双协议支持',
          '超低功耗设计，电池续航数年',
          '集成射频前端和天线匹配',
          '完整的协议栈和开发工具'
        ],
        applications: ['智能表计', '资产追踪', '环境监测', '智能农业'],
        products: [
          {
            name: 'STM32WL系列',
            description: '集成Sub-GHz射频的MCU',
            features: ['集成LoRa调制解调器', '256KB Flash', 'AES-256加密']
          }
        ]
      },
      'power-management': {
        title: '电源管理解决方案',
        description: 'STM32集成的电源管理解决方案，优化系统功耗',
        category: '电源管理',
        overview: 'STMicroelectronics提供完整的电源管理解决方案，包括低功耗MCU、电源管理IC和智能电源控制算法。',
        keyFeatures: [
          'Ultra-low-power设计，待机功耗nA级别',
          '动态电压调节和频率调节',
          '多种低功耗模式支持',
          '集成电源监控和故障检测'
        ],
        applications: ['便携式设备', '无线传感器', '物联网终端', '智能穿戴'],
        products: [
          {
            name: 'STM32L4系列',
            description: 'Ultra-low-power ARM Cortex-M4 MCU',
            features: ['80MHz主频', '1MB Flash', 'BAM功耗33nA', '模拟前端']
          },
          {
            name: 'STM32U5系列',
            description: '下一代超低功耗MCU',
            features: ['160MHz主频', '4MB Flash', '待机功耗16nA', 'AI加速器']
          }
        ]
      }
    },
    'texas-instruments': {
      'power-management': {
        title: '电源管理解决方案',
        description: 'TI完整的电源管理IC产品组合',
        category: '电源管理',
        overview: 'Texas Instruments提供业界最广泛的电源管理解决方案。',
        keyFeatures: [
          '高效率DC-DC转换器',
          '精密线性稳压器',
          '电池充电管理',
          '电源监控和保护'
        ],
        applications: ['移动设备', '工业控制', '汽车电子', '服务器'],
        products: [
          {
            name: 'TPS系列',
            description: '开关电源控制器',
            features: ['95%+ 效率', '宽输入电压', '集成FET']
          }
        ]
      }
    }
  }
  
  return solutions[brandSlug]?.[solutionSlug] || null
}

// 新闻数据
const getNewsData = (brandSlug: string, newsSlug: string) => {
  const news: any = {
    'stmicroelectronics': {
      'stm32-new-release': {
        title: 'STM32新系列发布',
        date: '2024-09-01',
        author: 'STMicroelectronics',
        category: '产品发布',
        summary: 'STMicroelectronics发布全新STM32H5系列微控制器',
        content: '新的STM32H5系列采用了最新的Arm Cortex-M33内核...',
        tags: ['STM32', '微控制器', '新品发布']
      },
      'automotive-partnership': {
        title: '汽车行业战略合作',
        date: '2024-08-15',
        author: 'STMicroelectronics',
        category: '合作伙伴',
        summary: 'STMicroelectronics与领先汽车制造商签署战略合作协议',
        content: '此次合作将推动下一代汽车电子技术的发展...',
        tags: ['汽车电子', '合作伙伴', '战略']
      }
    }
  }
  
  return news[brandSlug]?.[newsSlug] || null
}

// 技术支持数据
const getSupportData = (brandSlug: string, supportSlug: string) => {
  const support: any = {
    'stmicroelectronics': {
      'getting-started-stm32': {
        title: 'STM32快速入门指南',
        category: '开发指南',
        difficulty: '初级',
        readTime: '15分钟',
        summary: '从零开始学习STM32微控制器开发',
        content: '本指南将帮助您快速上手STM32开发...',
        tools: ['STM32CubeMX', 'STM32CubeIDE', 'ST-LINK'],
        downloads: [
          { name: 'STM32CubeMX', size: '245MB', type: '开发工具' },
          { name: '示例代码', size: '12MB', type: 'ZIP' }
        ]
      }
    }
  }
  
  return support[brandSlug]?.[supportSlug] || null
}

// 解决方案列表渲染函数
function renderSolutionsList(brandSlug: string, brandName: string) {
  const solutions = [
    {
      slug: 'automotive-gateway',
      title: '汽车网关解决方案',
      description: '基于STM32的汽车网关系统，支持多协议通信和安全认证',
      category: '汽车电子',
      icon: Car,
      features: ['CAN/LIN/FlexRay支持', 'HSM安全模块', '低功耗设计', '完整开发工具'],
      applications: ['中央网关', '域控制器', 'T-Box', '以太网交换机'],
      isFeatured: true,
      difficulty: '中级'
    },
    {
      slug: 'iot-connectivity',
      title: '物联网连接解决方案',
      description: '基于STM32WL的低功耗广域网(LPWAN)解决方案',
      category: '物联网',
      icon: Wifi,
      features: ['LoRaWAN/Sigfox双协议', '超低功耗', '集成射频前端', '完整协议栈'],
      applications: ['智能表计', '资产追踪', '环境监测', '智能农业'],
      isFeatured: true,
      difficulty: '初级'
    },
    {
      slug: 'power-management',
      title: '电源管理解决方案',
      description: '完整的电源管理IC解决方案',
      category: '电源管理',
      icon: Battery,
      features: ['高效转换', '多路输出', '动态调节', '保护功能'],
      applications: ['便携设备', '工业设备', '通信设备', '汽车电子'],
      isFeatured: false,
      difficulty: '中级'
    }
  ]

  const featuredSolutions = solutions.filter(s => s.isFeatured)
  
  const getDifficultyColor = (difficulty: string) => {
    switch (difficulty) {
      case '初级':
        return 'bg-green-100 text-green-800'
      case '中级':
        return 'bg-yellow-100 text-yellow-800'
      case '高级':
        return 'bg-red-100 text-red-800'
      default:
        return 'bg-gray-100 text-gray-800'
    }
  }

  return (
    <div className="max-w-7xl mx-auto">
      <nav className="flex items-center space-x-2 text-sm text-gray-500 mb-6">
        <Link href="/" className="hover:text-blue-600 flex items-center">
          <Home className="h-4 w-4" />
        </Link>
        <ChevronRight className="h-4 w-4" />
        <Link href="/brands" className="hover:text-blue-600">品牌列表</Link>
        <ChevronRight className="h-4 w-4" />
        <Link href={`/brands/${brandSlug}`} className="hover:text-blue-600">{brandName}</Link>
        <ChevronRight className="h-4 w-4" />
        <span className="text-gray-900">解决方案</span>
      </nav>

      <div className="mb-8">
        <h1 className="text-4xl font-bold text-gray-900 mb-4">
          {brandName} 解决方案
        </h1>
        <p className="text-xl text-gray-600 leading-relaxed max-w-3xl">
          探索 {brandName} 提供的完整解决方案组合，从设计概念到产品实现，
          我们为您提供全方位的技术支持和专业指导。
        </p>
      </div>

      <div className="grid md:grid-cols-3 gap-6 mb-12">
        <Card>
          <CardContent className="pt-6">
            <div className="text-center">
              <div className="text-3xl font-bold text-blue-600 mb-2">{solutions.length}</div>
              <div className="text-gray-600">解决方案</div>
            </div>
          </CardContent>
        </Card>
        <Card>
          <CardContent className="pt-6">
            <div className="text-center">
              <div className="text-3xl font-bold text-green-600 mb-2">{featuredSolutions.length}</div>
              <div className="text-gray-600">重点推荐</div>
            </div>
          </CardContent>
        </Card>
        <Card>
          <CardContent className="pt-6">
            <div className="text-center">
              <div className="text-3xl font-bold text-purple-600 mb-2">
                {new Set(solutions.map(s => s.category)).size}
              </div>
              <div className="text-gray-600">应用领域</div>
            </div>
          </CardContent>
        </Card>
      </div>

      {featuredSolutions.length > 0 && (
        <section className="mb-12">
          <div className="flex items-center gap-3 mb-6">
            <h2 className="text-2xl font-bold text-gray-900">重点推荐</h2>
            <Badge className="bg-yellow-100 text-yellow-800">
              <Shield className="h-3 w-3 mr-1" />
              官方推荐
            </Badge>
          </div>
          
          <div className="grid lg:grid-cols-2 gap-6">
            {featuredSolutions.map((solution) => (
              <Card key={solution.slug} className="hover:shadow-lg transition-shadow group">
                <CardHeader>
                  <div className="flex items-start justify-between">
                    <div className="flex items-center gap-3 mb-3">
                      <div className="w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center">
                        <solution.icon className="h-6 w-6 text-blue-600" />
                      </div>
                      <div>
                        <Badge className="mb-2">{solution.category}</Badge>
                        <Badge className={getDifficultyColor(solution.difficulty)} variant="secondary">
                          {solution.difficulty}
                        </Badge>
                      </div>
                    </div>
                  </div>
                  <CardTitle className="group-hover:text-blue-600 transition-colors">
                    {solution.title}
                  </CardTitle>
                  <p className="text-gray-600">{solution.description}</p>
                </CardHeader>
                
                <CardContent>
                  <div className="mb-4">
                    <h4 className="font-medium text-gray-900 mb-2">核心特性</h4>
                    <div className="grid grid-cols-2 gap-2">
                      {solution.features.slice(0, 4).map((feature, index) => (
                        <div key={index} className="flex items-center gap-2 text-sm text-gray-600">
                          <div className="w-1.5 h-1.5 bg-blue-600 rounded-full"></div>
                          {feature}
                        </div>
                      ))}
                    </div>
                  </div>

                  <div className="mb-6">
                    <h4 className="font-medium text-gray-900 mb-2">应用场景</h4>
                    <div className="flex flex-wrap gap-1">
                      {solution.applications.slice(0, 3).map((app, index) => (
                        <Badge key={index} variant="secondary" className="text-xs">
                          {app}
                        </Badge>
                      ))}
                      {solution.applications.length > 3 && (
                        <Badge variant="secondary" className="text-xs">
                          +{solution.applications.length - 3} 更多
                        </Badge>
                      )}
                    </div>
                  </div>

                  <div className="flex gap-3">
                    <Button asChild className="flex-1">
                      <Link href={`/brands/${brandSlug}/solutions/${solution.slug}`}>
                        查看详情
                        <ArrowRight className="h-4 w-4 ml-1" />
                      </Link>
                    </Button>
                    <Button variant="outline">
                      下载资料
                    </Button>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </section>
      )}

      <section>
        <h2 className="text-2xl font-bold text-gray-900 mb-6">所有解决方案</h2>
        
        <div className="flex flex-wrap gap-2 mb-6">
          <Button size="sm" variant="default">全部</Button>
          {Array.from(new Set(solutions.map(s => s.category))).map((category) => (
            <Button key={category} size="sm" variant="outline">
              {category}
            </Button>
          ))}
        </div>

        <div className="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
          {solutions.map((solution) => (
            <Card key={solution.slug} className="hover:shadow-md transition-shadow group">
              <CardHeader className="pb-3">
                <div className="flex items-center gap-3 mb-3">
                  <div className="w-10 h-10 bg-gray-100 rounded-lg flex items-center justify-center">
                    <solution.icon className="h-5 w-5 text-gray-600" />
                  </div>
                  <div className="flex-1">
                    <Badge className="mb-1" variant="secondary">{solution.category}</Badge>
                    {solution.isFeatured && (
                      <Badge className="ml-1 bg-yellow-100 text-yellow-800" variant="secondary">推荐</Badge>
                    )}
                  </div>
                </div>
                <CardTitle className="text-lg group-hover:text-blue-600 transition-colors line-clamp-2">
                  {solution.title}
                </CardTitle>
              </CardHeader>
              
              <CardContent>
                <p className="text-gray-600 text-sm mb-4 line-clamp-2">
                  {solution.description}
                </p>
                
                <div className="flex items-center justify-between">
                  <Badge className={getDifficultyColor(solution.difficulty)} variant="secondary">
                    {solution.difficulty}
                  </Badge>
                  <Button size="sm" variant="outline" asChild>
                    <Link href={`/brands/${brandSlug}/solutions/${solution.slug}`}>
                      查看详情
                    </Link>
                  </Button>
                </div>
              </CardContent>
            </Card>
          ))}
        </div>
      </section>

      <div className="mt-12 bg-gradient-to-r from-blue-50 to-purple-50 rounded-2xl p-8 text-center">
        <h3 className="text-2xl font-bold text-gray-900 mb-4">
          需要定制化解决方案？
        </h3>
        <p className="text-gray-600 mb-6 max-w-2xl mx-auto">
          我们的技术团队拥有丰富的 {brandName} 产品经验，
          可以为您提供从概念设计到产品量产的全程技术支持服务。
        </p>
        <div className="flex gap-4 justify-center">
          <Button size="lg">
            联系技术专家
          </Button>
          <Button size="lg" variant="outline">
            申请技术支持
          </Button>
        </div>
      </div>
    </div>
  )
}

// 新闻列表渲染函数
function renderNewsList(brandSlug: string, brandName: string) {
  const allNews = [
    {
      slug: 'stm32-new-release',
      title: 'STM32新系列发布',
      date: '2024-09-01',
      author: 'STMicroelectronics',
      category: '产品发布',
      summary: 'STMicroelectronics发布全新STM32H5系列微控制器，带来更高性能和更低功耗',
      tags: ['STM32', '微控制器', '新品发布'],
      isFeatured: true
    },
    {
      slug: 'automotive-partnership',
      title: '汽车行业战略合作',
      date: '2024-08-15',
      author: 'STMicroelectronics',
      category: '合作伙伴',
      summary: 'STMicroelectronics与领先汽车制造商签署战略合作协议，共同推动汽车电子创新',
      tags: ['汽车电子', '合作伙伴', '战略'],
      isFeatured: true
    }
  ]

  const featuredNews = allNews.filter(n => n.isFeatured)
  const categories = Array.from(new Set(allNews.map(n => n.category)))

  return (
    <div className="max-w-7xl mx-auto">
      <nav className="flex items-center space-x-2 text-sm text-gray-500 mb-6">
        <Link href="/" className="hover:text-blue-600 flex items-center">
          <Home className="h-4 w-4" />
        </Link>
        <ChevronRight className="h-4 w-4" />
        <Link href="/brands" className="hover:text-blue-600">品牌列表</Link>
        <ChevronRight className="h-4 w-4" />
        <Link href={`/brands/${brandSlug}`} className="hover:text-blue-600">{brandName}</Link>
        <ChevronRight className="h-4 w-4" />
        <span className="text-gray-900">新闻中心</span>
      </nav>

      <div className="mb-8">
        <h1 className="text-4xl font-bold text-gray-900 mb-4">
          {brandName} 新闻中心
        </h1>
        <p className="text-xl text-gray-600 leading-relaxed max-w-3xl">
          获取 {brandName} 最新的产品发布、技术突破和市场动态，
          让您第一时间了解行业前沿信息。
        </p>
      </div>

      {featuredNews.length > 0 && (
        <section className="mb-12">
          <div className="flex items-center gap-3 mb-6">
            <h2 className="text-2xl font-bold text-gray-900">头条新闻</h2>
            <Badge className="bg-red-100 text-red-800">最新</Badge>
          </div>
          
          <div className="grid lg:grid-cols-2 gap-6">
            {featuredNews.map((news) => (
              <Card key={news.slug} className="hover:shadow-lg transition-shadow group">
                <CardHeader>
                  <div className="flex items-center justify-between mb-3">
                    <Badge>{news.category}</Badge>
                    <div className="text-sm text-gray-500">{news.date}</div>
                  </div>
                  <CardTitle className="group-hover:text-blue-600 transition-colors mb-2">
                    {news.title}
                  </CardTitle>
                  <p className="text-gray-600">{news.summary}</p>
                </CardHeader>
                
                <CardContent>
                  <div className="flex items-center justify-between">
                    <div className="flex items-center gap-2 text-sm text-gray-500">
                      <User className="h-4 w-4" />
                      {news.author}
                    </div>
                    <Button size="sm" variant="outline" asChild>
                      <Link href={`/brands/${brandSlug}/news/${news.slug}`}>
                        阅读全文
                        <ArrowRight className="h-4 w-4 ml-1" />
                      </Link>
                    </Button>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </section>
      )}

      <section>
        <h2 className="text-2xl font-bold text-gray-900 mb-6">所有新闻</h2>
        
        <div className="flex flex-wrap gap-2 mb-6">
          <Button size="sm" variant="default">全部</Button>
          {categories.map((category) => (
            <Button key={category} size="sm" variant="outline">
              {category}
            </Button>
          ))}
        </div>

        <div className="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
          {allNews.map((news) => (
            <Card key={news.slug} className="hover:shadow-md transition-shadow group">
              <CardHeader className="pb-3">
                <div className="flex items-center justify-between mb-3">
                  <Badge variant="secondary">{news.category}</Badge>
                  <div className="text-xs text-gray-500">{news.date}</div>
                </div>
                <CardTitle className="text-lg group-hover:text-blue-600 transition-colors line-clamp-2 mb-2">
                  {news.title}
                </CardTitle>
                <p className="text-gray-600 text-sm line-clamp-2">
                  {news.summary}
                </p>
              </CardHeader>
              
              <CardContent>
                <div className="flex flex-wrap gap-1 mb-4">
                  {news.tags.slice(0, 2).map((tag, index) => (
                    <Badge key={index} variant="secondary" className="text-xs">
                      {tag}
                    </Badge>
                  ))}
                </div>
                
                <Button size="sm" variant="outline" className="w-full" asChild>
                  <Link href={`/brands/${brandSlug}/news/${news.slug}`}>
                    阅读全文
                  </Link>
                </Button>
              </CardContent>
            </Card>
          ))}
        </div>
      </section>
    </div>
  )
}

// 技术支持列表渲染函数
function renderSupportList(brandSlug: string, brandName: string) {
  const supportResources = [
    {
      slug: 'getting-started-stm32',
      title: 'STM32快速入门指南',
      category: '开发指南',
      difficulty: '初级',
      readTime: '15分钟',
      summary: '从零开始学习STM32微控制器开发，包含完整的开发环境搭建和示例项目',
      downloads: 3,
      isFeatured: true
    }
  ]

  const categories = ['开发指南', '故障排除', '设计参考', 'API文档']
  const featuredResources = supportResources.filter(r => r.isFeatured)
  
  const getDifficultyColor = (difficulty: string) => {
    switch (difficulty) {
      case '初级':
        return 'bg-green-100 text-green-800'
      case '中级':
        return 'bg-yellow-100 text-yellow-800'
      case '高级':
        return 'bg-red-100 text-red-800'
      default:
        return 'bg-gray-100 text-gray-800'
    }
  }

  return (
    <div className="max-w-7xl mx-auto">
      <nav className="flex items-center space-x-2 text-sm text-gray-500 mb-6">
        <Link href="/" className="hover:text-blue-600 flex items-center">
          <Home className="h-4 w-4" />
        </Link>
        <ChevronRight className="h-4 w-4" />
        <Link href="/brands" className="hover:text-blue-600">品牌列表</Link>
        <ChevronRight className="h-4 w-4" />
        <Link href={`/brands/${brandSlug}`} className="hover:text-blue-600">{brandName}</Link>
        <ChevronRight className="h-4 w-4" />
        <span className="text-gray-900">技术支持</span>
      </nav>

      <div className="mb-8">
        <h1 className="text-4xl font-bold text-gray-900 mb-4">
          {brandName} 技术支持
        </h1>
        <p className="text-xl text-gray-600 leading-relaxed max-w-3xl">
          获取 {brandName} 产品的专业技术支持，包含开发指南、设计参考、
          故障排除和完整的技术文档资源。
        </p>
      </div>

      <div className="grid md:grid-cols-4 gap-6 mb-12">
        <Card className="text-center">
          <CardContent className="pt-6">
            <div className="text-3xl font-bold text-blue-600 mb-2">50+</div>
            <div className="text-gray-600">技术文档</div>
          </CardContent>
        </Card>
        <Card className="text-center">
          <CardContent className="pt-6">
            <div className="text-3xl font-bold text-green-600 mb-2">24/7</div>
            <div className="text-gray-600">在线支持</div>
          </CardContent>
        </Card>
        <Card className="text-center">
          <CardContent className="pt-6">
            <div className="text-3xl font-bold text-purple-600 mb-2">200+</div>
            <div className="text-gray-600">代码示例</div>
          </CardContent>
        </Card>
        <Card className="text-center">
          <CardContent className="pt-6">
            <div className="text-3xl font-bold text-orange-600 mb-2">15+</div>
            <div className="text-gray-600">开发工具</div>
          </CardContent>
        </Card>
      </div>

      {featuredResources.length > 0 && (
        <section className="mb-12">
          <div className="flex items-center gap-3 mb-6">
            <h2 className="text-2xl font-bold text-gray-900">推荐资源</h2>
            <Badge className="bg-blue-100 text-blue-800">精选</Badge>
          </div>
          
          <div className="grid lg:grid-cols-2 gap-6">
            {featuredResources.map((resource) => (
              <Card key={resource.slug} className="hover:shadow-lg transition-shadow group">
                <CardHeader>
                  <div className="flex items-center justify-between mb-3">
                    <Badge>{resource.category}</Badge>
                    <Badge className={getDifficultyColor(resource.difficulty)} variant="secondary">
                      {resource.difficulty}
                    </Badge>
                  </div>
                  <CardTitle className="group-hover:text-blue-600 transition-colors mb-2">
                    {resource.title}
                  </CardTitle>
                  <p className="text-gray-600">{resource.summary}</p>
                </CardHeader>
                
                <CardContent>
                  <div className="flex items-center justify-between mb-4">
                    <div className="text-sm text-gray-500">
                      阅读时间: {resource.readTime}
                    </div>
                    <div className="flex items-center gap-1 text-sm text-gray-500">
                      <Download className="h-4 w-4" />
                      {resource.downloads} 下载
                    </div>
                  </div>
                  
                  <div className="flex gap-3">
                    <Button asChild className="flex-1">
                      <Link href={`/brands/${brandSlug}/support/${resource.slug}`}>
                        查看详情
                        <ArrowRight className="h-4 w-4 ml-1" />
                      </Link>
                    </Button>
                    <Button variant="outline">
                      <Download className="h-4 w-4" />
                    </Button>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </section>
      )}

      <section>
        <h2 className="text-2xl font-bold text-gray-900 mb-6">技术资源</h2>
        
        <div className="flex flex-wrap gap-2 mb-6">
          <Button size="sm" variant="default">全部</Button>
          {categories.map((category) => (
            <Button key={category} size="sm" variant="outline">
              {category}
            </Button>
          ))}
        </div>

        <div className="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
          {supportResources.map((resource) => (
            <Card key={resource.slug} className="hover:shadow-md transition-shadow group">
              <CardHeader className="pb-3">
                <div className="flex items-center justify-between mb-3">
                  <Badge variant="secondary">{resource.category}</Badge>
                  <Badge className={getDifficultyColor(resource.difficulty)} variant="secondary">
                    {resource.difficulty}
                  </Badge>
                </div>
                <CardTitle className="text-lg group-hover:text-blue-600 transition-colors line-clamp-2 mb-2">
                  {resource.title}
                </CardTitle>
                <p className="text-gray-600 text-sm line-clamp-2">
                  {resource.summary}
                </p>
              </CardHeader>
              
              <CardContent>
                <div className="text-sm text-gray-500 mb-4">
                  阅读时间: {resource.readTime}
                </div>
                
                <Button size="sm" variant="outline" className="w-full" asChild>
                  <Link href={`/brands/${brandSlug}/support/${resource.slug}`}>
                    查看详情
                  </Link>
                </Button>
              </CardContent>
            </Card>
          ))}
        </div>
      </section>
    </div>
  )
}

interface BrandDynamicPageProps {
  params: {
    slug: string
    segments: string[]
  }
}

export default function BrandDynamicPage({ params }: BrandDynamicPageProps) {
  const { slug: brandSlug, segments } = params
  const brandName = getBrandName(brandSlug)
  
  if (!segments || segments.length === 0) {
    notFound()
  }
  
  const [section, itemSlug] = segments
  
  // 处理列表页面（如 /solutions, /news, /support）
  if (segments.length === 1) {
    if (section === 'solutions') {
      return renderSolutionsList(brandSlug, brandName)
    }
    if (section === 'news') {
      return renderNewsList(brandSlug, brandName)
    }
    if (section === 'support') {
      return renderSupportList(brandSlug, brandName)
    }
  }
  
  // 根据不同的section渲染不同的内容
  if (section === 'solutions' && itemSlug) {
    const solution = getSolutionData(brandSlug, itemSlug)
    if (!solution) notFound()
    
    return (
      <div className="max-w-6xl mx-auto">
        {/* 面包屑导航 */}
        <nav className="flex items-center space-x-2 text-sm text-gray-500 mb-6">
          <Link href="/" className="hover:text-blue-600 flex items-center">
            <Home className="h-4 w-4" />
          </Link>
          <ChevronRight className="h-4 w-4" />
          <Link href="/brands" className="hover:text-blue-600">品牌列表</Link>
          <ChevronRight className="h-4 w-4" />
          <Link href={`/brands/${brandSlug}`} className="hover:text-blue-600">{brandName}</Link>
          <ChevronRight className="h-4 w-4" />
          <Link href={`/brands/${brandSlug}/solutions`} className="hover:text-blue-600">解决方案</Link>
          <ChevronRight className="h-4 w-4" />
          <span className="text-gray-900">{solution.title}</span>
        </nav>

        {/* 解决方案内容 */}
        <div className="mb-8">
          <div className="flex items-center gap-3 mb-3">
            <Badge className="bg-blue-100 text-blue-800">{solution.category}</Badge>
          </div>
          <h1 className="text-4xl font-bold text-gray-900 mb-4">{solution.title}</h1>
          <p className="text-xl text-gray-600 leading-relaxed">{solution.description}</p>
        </div>

        <div className="grid lg:grid-cols-3 gap-8">
          <div className="lg:col-span-2 space-y-8">
            <Card>
              <CardHeader>
                <CardTitle>方案概述</CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-gray-600 leading-relaxed">{solution.overview}</p>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Zap className="h-5 w-5 text-blue-600" />
                  核心特性
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="grid gap-3">
                  {solution.keyFeatures.map((feature: string, index: number) => (
                    <div key={index} className="flex items-start gap-3">
                      <CheckCircle2 className="h-5 w-5 text-green-600 mt-0.5 flex-shrink-0" />
                      <span className="text-gray-700">{feature}</span>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Cpu className="h-5 w-5 text-blue-600" />
                  推荐产品
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="grid gap-6">
                  {solution.products.map((product: any, index: number) => (
                    <div key={index} className="border border-gray-200 rounded-lg p-4">
                      <h4 className="font-semibold text-gray-900 mb-2">{product.name}</h4>
                      <p className="text-gray-600 text-sm mb-3">{product.description}</p>
                      <div className="flex flex-wrap gap-2">
                        {product.features.map((feature: string, idx: number) => (
                          <Badge key={idx} variant="secondary" className="text-xs">{feature}</Badge>
                        ))}
                      </div>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>
          </div>

          <div className="space-y-6">
            <Card>
              <CardHeader>
                <CardTitle>应用场景</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-2">
                  {solution.applications.map((app: string, index: number) => (
                    <div key={index} className="p-2 bg-blue-50 rounded text-sm text-blue-800">{app}</div>
                  ))}
                </div>
              </CardContent>
            </Card>

            <Card className="bg-blue-50 border-blue-200">
              <CardContent className="pt-6">
                <h3 className="font-semibold text-gray-900 mb-2">需要技术支持？</h3>
                <p className="text-sm text-gray-600 mb-4">我们的工程师团队随时为您提供专业的技术支持。</p>
                <div className="space-y-2">
                  <Button className="w-full" size="sm">联系技术专家</Button>
                  <Button variant="outline" className="w-full" size="sm">
                    <ExternalLink className="h-4 w-4 mr-1" />
                    查看更多方案
                  </Button>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    )
  }
  
  if (section === 'news' && itemSlug) {
    const news = getNewsData(brandSlug, itemSlug)
    if (!news) notFound()
    
    return (
      <div className="max-w-4xl mx-auto">
        <nav className="flex items-center space-x-2 text-sm text-gray-500 mb-6">
          <Link href="/" className="hover:text-blue-600 flex items-center">
            <Home className="h-4 w-4" />
          </Link>
          <ChevronRight className="h-4 w-4" />
          <Link href="/brands" className="hover:text-blue-600">品牌列表</Link>
          <ChevronRight className="h-4 w-4" />
          <Link href={`/brands/${brandSlug}`} className="hover:text-blue-600">{brandName}</Link>
          <ChevronRight className="h-4 w-4" />
          <Link href={`/brands/${brandSlug}/news`} className="hover:text-blue-600">新闻中心</Link>
          <ChevronRight className="h-4 w-4" />
          <span className="text-gray-900">{news.title}</span>
        </nav>

        <article className="bg-white rounded-lg shadow-sm">
          <div className="p-8">
            <div className="mb-6">
              <Badge className="mb-3">{news.category}</Badge>
              <h1 className="text-4xl font-bold text-gray-900 mb-4">{news.title}</h1>
              <div className="flex items-center gap-4 text-sm text-gray-500">
                <div className="flex items-center gap-1">
                  <User className="h-4 w-4" />
                  {news.author}
                </div>
                <div className="flex items-center gap-1">
                  <Calendar className="h-4 w-4" />
                  {news.date}
                </div>
              </div>
            </div>
            
            <div className="prose prose-lg max-w-none">
              <p className="text-xl text-gray-600 leading-relaxed mb-6">{news.summary}</p>
              <p className="text-gray-700 leading-relaxed">{news.content}</p>
            </div>

            <div className="mt-8 pt-8 border-t border-gray-200">
              <div className="flex flex-wrap gap-2">
                {news.tags.map((tag: string, index: number) => (
                  <Badge key={index} variant="secondary">{tag}</Badge>
                ))}
              </div>
            </div>
          </div>
        </article>
      </div>
    )
  }
  
  if (section === 'support' && itemSlug) {
    const support = getSupportData(brandSlug, itemSlug)
    if (!support) notFound()
    
    return (
      <div className="max-w-6xl mx-auto">
        <nav className="flex items-center space-x-2 text-sm text-gray-500 mb-6">
          <Link href="/" className="hover:text-blue-600 flex items-center">
            <Home className="h-4 w-4" />
          </Link>
          <ChevronRight className="h-4 w-4" />
          <Link href="/brands" className="hover:text-blue-600">品牌列表</Link>
          <ChevronRight className="h-4 w-4" />
          <Link href={`/brands/${brandSlug}`} className="hover:text-blue-600">{brandName}</Link>
          <ChevronRight className="h-4 w-4" />
          <Link href={`/brands/${brandSlug}/support`} className="hover:text-blue-600">技术支持</Link>
          <ChevronRight className="h-4 w-4" />
          <span className="text-gray-900">{support.title}</span>
        </nav>

        <div className="grid lg:grid-cols-3 gap-8">
          <div className="lg:col-span-2">
            <Card>
              <CardHeader>
                <div className="flex items-center gap-3 mb-3">
                  <Badge>{support.category}</Badge>
                  <Badge variant="secondary">{support.difficulty}</Badge>
                </div>
                <CardTitle className="text-3xl">{support.title}</CardTitle>
                <p className="text-gray-600">{support.summary}</p>
                <div className="text-sm text-gray-500">阅读时间: {support.readTime}</div>
              </CardHeader>
              <CardContent>
                <div className="prose max-w-none">
                  <p>{support.content}</p>
                </div>
              </CardContent>
            </Card>
          </div>

          <div className="space-y-6">
            <Card>
              <CardHeader>
                <CardTitle>所需工具</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-2">
                  {support.tools?.map((tool: string, index: number) => (
                    <div key={index} className="p-2 bg-gray-50 rounded text-sm">{tool}</div>
                  ))}
                </div>
              </CardContent>
            </Card>

            {support.downloads && (
              <Card>
                <CardHeader>
                  <CardTitle>相关下载</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-3">
                    {support.downloads.map((download: any, index: number) => (
                      <div key={index} className="flex items-center justify-between p-3 border rounded-lg">
                        <div>
                          <div className="font-medium text-sm">{download.name}</div>
                          <div className="text-xs text-gray-500">{download.type} • {download.size}</div>
                        </div>
                        <Button size="sm" variant="outline">
                          <Download className="h-4 w-4" />
                        </Button>
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>
            )}
          </div>
        </div>
      </div>
    )
  }
  
  // 默认404
  notFound()
}

// 生成所有可能的静态路径
export async function generateStaticParams() {
  const brands = ['stmicroelectronics', 'texas-instruments', 'espressif']
  const routes = []
  
  // 解决方案路由
  routes.push(
    { slug: 'stmicroelectronics', segments: ['solutions', 'automotive-gateway'] },
    { slug: 'stmicroelectronics', segments: ['solutions', 'iot-connectivity'] },
    { slug: 'texas-instruments', segments: ['solutions', 'power-management'] }
  )
  
  // 新闻路由
  routes.push(
    { slug: 'stmicroelectronics', segments: ['news', 'stm32-new-release'] },
    { slug: 'stmicroelectronics', segments: ['news', 'automotive-partnership'] }
  )
  
  // 技术支持路由
  routes.push(
    { slug: 'stmicroelectronics', segments: ['support', 'getting-started-stm32'] }
  )
  
  return routes
}

export async function generateMetadata({ params }: BrandDynamicPageProps) {
  const { slug: brandSlug, segments } = params
  const brandName = getBrandName(brandSlug)
  
  if (segments.length >= 2) {
    const [section, itemSlug] = segments
    
    if (section === 'solutions') {
      const solution = getSolutionData(brandSlug, itemSlug)
      if (solution) {
        return {
          title: `${solution.title} - ${brandName} | 力通电子`,
          description: solution.description,
        }
      }
    }
    
    if (section === 'news') {
      const news = getNewsData(brandSlug, itemSlug)
      if (news) {
        return {
          title: `${news.title} - ${brandName} | 力通电子`,
          description: news.summary,
        }
      }
    }
    
    if (section === 'support') {
      const support = getSupportData(brandSlug, itemSlug)
      if (support) {
        return {
          title: `${support.title} - ${brandName} | 力通电子`,
          description: support.summary,
        }
      }
    }
  }
  
  return {
    title: `${brandName} | 力通电子`,
    description: `${brandName} 品牌详情页面`,
  }
}