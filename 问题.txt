2025-09-16T23:44:11.991528Z	Cloning repository...
2025-09-16T23:44:12.829151Z	From https://github.com/befpail737-glitch/litong
2025-09-16T23:44:12.82959Z	 * branch            55a53f05b336b2b08e5176d96f177ba1fda34acf -> FETCH_HEAD
2025-09-16T23:44:12.829716Z	
2025-09-16T23:44:12.890597Z	HEAD is now at 55a53f0 Add missing detail pages for products, solutions, and articles
2025-09-16T23:44:12.891047Z	
2025-09-16T23:44:12.973167Z	
2025-09-16T23:44:12.974Z	Using v2 root directory strategy
2025-09-16T23:44:12.998032Z	Success: Finished cloning repository files
2025-09-16T23:44:14.881455Z	Checking for configuration in a Wrangler configuration file (BETA)
2025-09-16T23:44:14.882233Z	
2025-09-16T23:44:15.987085Z	No wrangler.toml file found. Continuing.
2025-09-16T23:44:16.06655Z	Detected the following tools from environment: nodejs@18.17.0, npm@10.9.2
2025-09-16T23:44:16.067315Z	Installing nodejs 18.17.0
2025-09-16T23:44:17.136298Z	Trying to update node-build... ok
2025-09-16T23:44:17.238138Z	To follow progress, use 'tail -f /tmp/node-build.20250916234417.494.log' or pass --verbose
2025-09-16T23:44:17.347489Z	Downloading node-v18.17.0-linux-x64.tar.gz...
2025-09-16T23:44:17.626595Z	-> https://nodejs.org/dist/v18.17.0/node-v18.17.0-linux-x64.tar.gz
2025-09-16T23:44:19.35519Z	
2025-09-16T23:44:19.355582Z	WARNING: node-v18.17.0-linux-x64 is in LTS Maintenance mode and nearing its end of life.
2025-09-16T23:44:19.355796Z	It only receives *critical* security updates, *critical* bug fixes and documentation updates.
2025-09-16T23:44:19.355906Z	
2025-09-16T23:44:19.355977Z	Installing node-v18.17.0-linux-x64...
2025-09-16T23:44:19.780422Z	Installed node-v18.17.0-linux-x64 to /opt/buildhome/.asdf/installs/nodejs/18.17.0
2025-09-16T23:44:19.780756Z	
2025-09-16T23:44:20.835628Z	Installing project dependencies: npm clean-install --progress=false
2025-09-16T23:44:22.312291Z	npm WARN EBADENGINE Unsupported engine {
2025-09-16T23:44:22.312643Z	npm WARN EBADENGINE   package: '@isaacs/brace-expansion@5.0.0',
2025-09-16T23:44:22.312789Z	npm WARN EBADENGINE   required: { node: '20 || >=22' },
2025-09-16T23:44:22.312887Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-16T23:44:22.313599Z	npm WARN EBADENGINE }
2025-09-16T23:44:22.314285Z	npm WARN EBADENGINE Unsupported engine {
2025-09-16T23:44:22.314446Z	npm WARN EBADENGINE   package: '@isaacs/balanced-match@4.0.1',
2025-09-16T23:44:22.314583Z	npm WARN EBADENGINE   required: { node: '20 || >=22' },
2025-09-16T23:44:22.314709Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-16T23:44:22.314814Z	npm WARN EBADENGINE }
2025-09-16T23:44:22.316244Z	npm WARN EBADENGINE Unsupported engine {
2025-09-16T23:44:22.316453Z	npm WARN EBADENGINE   package: '@sanity/client@7.11.1',
2025-09-16T23:44:22.316583Z	npm WARN EBADENGINE   required: { node: '>=20' },
2025-09-16T23:44:22.316703Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-16T23:44:22.316832Z	npm WARN EBADENGINE }
2025-09-16T23:44:22.317909Z	npm WARN EBADENGINE Unsupported engine {
2025-09-16T23:44:22.318171Z	npm WARN EBADENGINE   package: '@sanity/runtime-cli@9.2.0',
2025-09-16T23:44:22.318443Z	npm WARN EBADENGINE   required: { node: '>=20.11.0' },
2025-09-16T23:44:22.31878Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-16T23:44:22.318878Z	npm WARN EBADENGINE }
2025-09-16T23:44:22.319019Z	npm WARN EBADENGINE Unsupported engine {
2025-09-16T23:44:22.319141Z	npm WARN EBADENGINE   package: '@sanity/client@7.11.1',
2025-09-16T23:44:22.319254Z	npm WARN EBADENGINE   required: { node: '>=20' },
2025-09-16T23:44:22.319359Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-16T23:44:22.319504Z	npm WARN EBADENGINE }
2025-09-16T23:44:22.319816Z	npm WARN EBADENGINE Unsupported engine {
2025-09-16T23:44:22.320029Z	npm WARN EBADENGINE   package: 'eventsource@4.0.0',
2025-09-16T23:44:22.320134Z	npm WARN EBADENGINE   required: { node: '>=20.0.0' },
2025-09-16T23:44:22.320374Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-16T23:44:22.320523Z	npm WARN EBADENGINE }
2025-09-16T23:44:22.321055Z	npm WARN EBADENGINE Unsupported engine {
2025-09-16T23:44:22.321346Z	npm WARN EBADENGINE   package: '@sanity/client@7.11.1',
2025-09-16T23:44:22.321437Z	npm WARN EBADENGINE   required: { node: '>=20' },
2025-09-16T23:44:22.321783Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-16T23:44:22.321874Z	npm WARN EBADENGINE }
2025-09-16T23:44:22.326666Z	npm WARN EBADENGINE Unsupported engine {
2025-09-16T23:44:22.327082Z	npm WARN EBADENGINE   package: '@sanity/client@7.11.1',
2025-09-16T23:44:22.327233Z	npm WARN EBADENGINE   required: { node: '>=20' },
2025-09-16T23:44:22.327425Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-16T23:44:22.327517Z	npm WARN EBADENGINE }
2025-09-16T23:44:22.327582Z	npm WARN EBADENGINE Unsupported engine {
2025-09-16T23:44:22.327894Z	npm WARN EBADENGINE   package: '@sanity/diff-match-patch@3.2.0',
2025-09-16T23:44:22.327989Z	npm WARN EBADENGINE   required: { node: '>=18.18' },
2025-09-16T23:44:22.328089Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-16T23:44:22.328201Z	npm WARN EBADENGINE }
2025-09-16T23:44:22.328428Z	npm WARN EBADENGINE Unsupported engine {
2025-09-16T23:44:22.328525Z	npm WARN EBADENGINE   package: 'glob@11.0.3',
2025-09-16T23:44:22.328776Z	npm WARN EBADENGINE   required: { node: '20 || >=22' },
2025-09-16T23:44:22.329044Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-16T23:44:22.32926Z	npm WARN EBADENGINE }
2025-09-16T23:44:22.329426Z	npm WARN EBADENGINE Unsupported engine {
2025-09-16T23:44:22.32957Z	npm WARN EBADENGINE   package: 'jackspeak@4.1.1',
2025-09-16T23:44:22.329707Z	npm WARN EBADENGINE   required: { node: '20 || >=22' },
2025-09-16T23:44:22.329817Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-16T23:44:22.329925Z	npm WARN EBADENGINE }
2025-09-16T23:44:22.33004Z	npm WARN EBADENGINE Unsupported engine {
2025-09-16T23:44:22.330152Z	npm WARN EBADENGINE   package: 'lru-cache@11.2.1',
2025-09-16T23:44:22.330255Z	npm WARN EBADENGINE   required: { node: '20 || >=22' },
2025-09-16T23:44:22.330371Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-16T23:44:22.330527Z	npm WARN EBADENGINE }
2025-09-16T23:44:22.330699Z	npm WARN EBADENGINE Unsupported engine {
2025-09-16T23:44:22.330831Z	npm WARN EBADENGINE   package: 'minimatch@10.0.3',
2025-09-16T23:44:22.330942Z	npm WARN EBADENGINE   required: { node: '20 || >=22' },
2025-09-16T23:44:22.331174Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-16T23:44:22.331297Z	npm WARN EBADENGINE }
2025-09-16T23:44:22.331412Z	npm WARN EBADENGINE Unsupported engine {
2025-09-16T23:44:22.331559Z	npm WARN EBADENGINE   package: 'path-scurry@2.0.0',
2025-09-16T23:44:22.331709Z	npm WARN EBADENGINE   required: { node: '20 || >=22' },
2025-09-16T23:44:22.331842Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-16T23:44:22.331949Z	npm WARN EBADENGINE }
2025-09-16T23:44:22.332053Z	npm WARN EBADENGINE Unsupported engine {
2025-09-16T23:44:22.332158Z	npm WARN EBADENGINE   package: 'rimraf@6.0.1',
2025-09-16T23:44:22.332264Z	npm WARN EBADENGINE   required: { node: '20 || >=22' },
2025-09-16T23:44:22.332353Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-16T23:44:22.332463Z	npm WARN EBADENGINE }
2025-09-16T23:44:22.332584Z	npm WARN EBADENGINE Unsupported engine {
2025-09-16T23:44:22.332701Z	npm WARN EBADENGINE   package: 'glob@11.0.3',
2025-09-16T23:44:22.332801Z	npm WARN EBADENGINE   required: { node: '20 || >=22' },
2025-09-16T23:44:22.332915Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-16T23:44:22.333028Z	npm WARN EBADENGINE }
2025-09-16T23:44:22.333147Z	npm WARN EBADENGINE Unsupported engine {
2025-09-16T23:44:22.333285Z	npm WARN EBADENGINE   package: 'jackspeak@4.1.1',
2025-09-16T23:44:22.333421Z	npm WARN EBADENGINE   required: { node: '20 || >=22' },
2025-09-16T23:44:22.333538Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-16T23:44:22.333651Z	npm WARN EBADENGINE }
2025-09-16T23:44:22.333778Z	npm WARN EBADENGINE Unsupported engine {
2025-09-16T23:44:22.333888Z	npm WARN EBADENGINE   package: 'lru-cache@11.2.1',
2025-09-16T23:44:22.333993Z	npm WARN EBADENGINE   required: { node: '20 || >=22' },
2025-09-16T23:44:22.3341Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-16T23:44:22.334208Z	npm WARN EBADENGINE }
2025-09-16T23:44:22.334336Z	npm WARN EBADENGINE Unsupported engine {
2025-09-16T23:44:22.334461Z	npm WARN EBADENGINE   package: 'minimatch@10.0.3',
2025-09-16T23:44:22.33457Z	npm WARN EBADENGINE   required: { node: '20 || >=22' },
2025-09-16T23:44:22.334702Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-16T23:44:22.334822Z	npm WARN EBADENGINE }
2025-09-16T23:44:22.334927Z	npm WARN EBADENGINE Unsupported engine {
2025-09-16T23:44:22.335035Z	npm WARN EBADENGINE   package: 'path-scurry@2.0.0',
2025-09-16T23:44:22.335143Z	npm WARN EBADENGINE   required: { node: '20 || >=22' },
2025-09-16T23:44:22.335248Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-16T23:44:22.335347Z	npm WARN EBADENGINE }
2025-09-16T23:44:22.335446Z	npm WARN EBADENGINE Unsupported engine {
2025-09-16T23:44:22.33555Z	npm WARN EBADENGINE   package: 'rimraf@6.0.1',
2025-09-16T23:44:22.335653Z	npm WARN EBADENGINE   required: { node: '20 || >=22' },
2025-09-16T23:44:22.335774Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-16T23:44:22.335874Z	npm WARN EBADENGINE }
2025-09-16T23:44:22.335967Z	npm WARN EBADENGINE Unsupported engine {
2025-09-16T23:44:22.33606Z	npm WARN EBADENGINE   package: '@sanity/message-protocol@0.13.3',
2025-09-16T23:44:22.336151Z	npm WARN EBADENGINE   required: { node: '>=20.0.0' },
2025-09-16T23:44:22.336232Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-16T23:44:22.336312Z	npm WARN EBADENGINE }
2025-09-16T23:44:22.336403Z	npm WARN EBADENGINE Unsupported engine {
2025-09-16T23:44:22.336495Z	npm WARN EBADENGINE   package: '@sanity/sdk@0.0.0-alpha.25',
2025-09-16T23:44:22.336586Z	npm WARN EBADENGINE   required: { node: '>=20.0.0' },
2025-09-16T23:44:22.336694Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-16T23:44:22.336786Z	npm WARN EBADENGINE }
2025-09-16T23:44:22.6309Z	npm WARN reify invalid or damaged lockfile detected
2025-09-16T23:44:22.631473Z	npm WARN reify please re-try this operation once it completes
2025-09-16T23:44:22.631734Z	npm WARN reify so that the damage can be corrected, or perform
2025-09-16T23:44:22.63206Z	npm WARN reify a fresh install with no lockfile if the problem persists.
2025-09-16T23:44:22.632512Z	npm WARN reify invalid or damaged lockfile detected
2025-09-16T23:44:22.632655Z	npm WARN reify please re-try this operation once it completes
2025-09-16T23:44:22.632793Z	npm WARN reify so that the damage can be corrected, or perform
2025-09-16T23:44:22.633044Z	npm WARN reify a fresh install with no lockfile if the problem persists.
2025-09-16T23:44:22.633186Z	npm WARN reify invalid or damaged lockfile detected
2025-09-16T23:44:22.633457Z	npm WARN reify please re-try this operation once it completes
2025-09-16T23:44:22.633532Z	npm WARN reify so that the damage can be corrected, or perform
2025-09-16T23:44:22.63362Z	npm WARN reify a fresh install with no lockfile if the problem persists.
2025-09-16T23:45:27.572455Z	
2025-09-16T23:45:27.57315Z	added 2140 packages in 1m
2025-09-16T23:45:27.613362Z	Executing user command: npm run build
2025-09-16T23:45:28.183821Z	
2025-09-16T23:45:28.184343Z	> litong-electronics-website@0.1.0 build
2025-09-16T23:45:28.184551Z	> npm run clear-cache && next build
2025-09-16T23:45:28.184703Z	
2025-09-16T23:45:28.573697Z	
2025-09-16T23:45:28.574135Z	> litong-electronics-website@0.1.0 clear-cache
2025-09-16T23:45:28.574302Z	> node scripts/clear-cache.js
2025-09-16T23:45:28.574444Z	
2025-09-16T23:45:28.629443Z	🧹 Clearing Next.js caches...
2025-09-16T23:45:28.630416Z	ℹ️  /opt/buildhome/repo/.next does not exist
2025-09-16T23:45:28.630705Z	ℹ️  /opt/buildhome/repo/node_modules/.cache does not exist
2025-09-16T23:45:28.631091Z	✅ Cache cleared! Please restart your development server.
2025-09-16T23:45:28.631183Z	Run: npm run dev
2025-09-16T23:45:29.284698Z	⚠ No build cache found. Please configure build caching for faster rebuilds. Read more: https://nextjs.org/docs/messages/no-cache
2025-09-16T23:45:29.289082Z	Attention: Next.js now collects completely anonymous telemetry regarding usage.
2025-09-16T23:45:29.289445Z	This information is used to shape Next.js' roadmap and prioritize features.
2025-09-16T23:45:29.289547Z	You can learn more, including how to opt-out if you'd not like to participate in this anonymous program, by visiting the following URL:
2025-09-16T23:45:29.289924Z	https://nextjs.org/telemetry
2025-09-16T23:45:29.290154Z	
2025-09-16T23:45:29.361924Z	  ▲ Next.js 14.2.32
2025-09-16T23:45:29.362217Z	
2025-09-16T23:45:29.427032Z	   Creating an optimized production build ...
2025-09-16T23:45:48.248495Z	 ✓ Compiled successfully
2025-09-16T23:45:48.249745Z	   Skipping validation of types
2025-09-16T23:45:48.250009Z	   Skipping linting
2025-09-16T23:45:48.600964Z	   Collecting page data ...
2025-09-16T23:45:49.849919Z	Fetching products with query: 
2025-09-16T23:45:49.850214Z	    {
2025-09-16T23:45:49.850361Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**"))] | order(_createdAt desc) [0...1000] {
2025-09-16T23:45:49.85049Z	        
2025-09-16T23:45:49.850603Z	    _id,
2025-09-16T23:45:49.85075Z	    _type,
2025-09-16T23:45:49.850861Z	    partNumber,
2025-09-16T23:45:49.850965Z	    "slug": slug.current,
2025-09-16T23:45:49.851069Z	    title,
2025-09-16T23:45:49.851172Z	    shortDescription,
2025-09-16T23:45:49.851269Z	    image,
2025-09-16T23:45:49.851359Z	    brand->{
2025-09-16T23:45:49.851458Z	      name,
2025-09-16T23:45:49.85156Z	      "slug": slug.current,
2025-09-16T23:45:49.851659Z	      logo
2025-09-16T23:45:49.85178Z	    },
2025-09-16T23:45:49.851887Z	    category->{
2025-09-16T23:45:49.851983Z	      name,
2025-09-16T23:45:49.852077Z	      "slug": slug.current
2025-09-16T23:45:49.852173Z	    },
2025-09-16T23:45:49.852287Z	    pricing{
2025-09-16T23:45:49.852382Z	      currency,
2025-09-16T23:45:49.852479Z	      tiers[]{
2025-09-16T23:45:49.852573Z	        quantity,
2025-09-16T23:45:49.852699Z	        price,
2025-09-16T23:45:49.852801Z	        unit
2025-09-16T23:45:49.852897Z	      },
2025-09-16T23:45:49.852987Z	      moq,
2025-09-16T23:45:49.853076Z	      leadTime,
2025-09-16T23:45:49.853169Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:49.853287Z	      "price": tiers[0].price,
2025-09-16T23:45:49.853378Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:49.853477Z	    },
2025-09-16T23:45:49.853572Z	    inventory{
2025-09-16T23:45:49.853688Z	      quantity,
2025-09-16T23:45:49.853798Z	      status,
2025-09-16T23:45:49.853902Z	      warehouse,
2025-09-16T23:45:49.854004Z	      lastUpdated,
2025-09-16T23:45:49.854122Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:49.854227Z	      "inStock": status == "in_stock",
2025-09-16T23:45:49.854321Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:49.854413Z	    },
2025-09-16T23:45:49.854506Z	    isActive,
2025-09-16T23:45:49.854619Z	    isFeatured,
2025-09-16T23:45:49.854805Z	    isNew,
2025-09-16T23:45:49.854972Z	    _createdAt,
2025-09-16T23:45:49.855172Z	    _updatedAt
2025-09-16T23:45:49.855338Z	  
2025-09-16T23:45:49.855484Z	      },
2025-09-16T23:45:49.855641Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**"))])
2025-09-16T23:45:49.855813Z	    }
2025-09-16T23:45:49.855964Z	  
2025-09-16T23:45:49.857811Z	Query parameters: {
2025-09-16T23:45:49.858233Z	  limit: 1000,
2025-09-16T23:45:49.858564Z	  offset: 0,
2025-09-16T23:45:49.858937Z	  category: undefined,
2025-09-16T23:45:49.859378Z	  brand: undefined,
2025-09-16T23:45:49.859604Z	  featured: undefined
2025-09-16T23:45:49.860657Z	}
2025-09-16T23:45:49.865093Z	🔍 [getAllBrands] Starting brand data fetch from Sanity...
2025-09-16T23:45:49.865813Z	🔍 [getAllBrands] Executing Sanity query...
2025-09-16T23:45:49.930228Z	🔍 [getAllBrands] Starting brand data fetch from Sanity...
2025-09-16T23:45:49.930636Z	🔍 [getAllBrands] Executing Sanity query...
2025-09-16T23:45:49.933135Z	Fetching solutions with query: 
2025-09-16T23:45:49.933352Z	    {
2025-09-16T23:45:49.933499Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished))] | order(publishedAt desc) [0...1000] {
2025-09-16T23:45:49.933632Z	        
2025-09-16T23:45:49.933772Z	    _id,
2025-09-16T23:45:49.933874Z	    title,
2025-09-16T23:45:49.933974Z	    "slug": slug.current,
2025-09-16T23:45:49.934116Z	    summary,
2025-09-16T23:45:49.934315Z	    description,
2025-09-16T23:45:49.934461Z	    coverImage,
2025-09-16T23:45:49.934582Z	    primaryBrand->{
2025-09-16T23:45:49.934719Z	      _id,
2025-09-16T23:45:49.934834Z	      name,
2025-09-16T23:45:49.937745Z	      "slug": slug.current,
2025-09-16T23:45:49.937982Z	      logo
2025-09-16T23:45:49.938144Z	    },
2025-09-16T23:45:49.938295Z	    relatedBrands[]->{
2025-09-16T23:45:49.938438Z	      _id,
2025-09-16T23:45:49.938589Z	      name,
2025-09-16T23:45:49.93875Z	      "slug": slug.current,
2025-09-16T23:45:49.938896Z	      logo
2025-09-16T23:45:49.939033Z	    },
2025-09-16T23:45:49.939158Z	    targetMarket,
2025-09-16T23:45:49.939287Z	    complexity,
2025-09-16T23:45:49.939391Z	    publishedAt,
2025-09-16T23:45:49.939499Z	    isPublished,
2025-09-16T23:45:49.939599Z	    isFeatured,
2025-09-16T23:45:49.939729Z	    viewCount,
2025-09-16T23:45:49.939837Z	    _createdAt,
2025-09-16T23:45:49.939934Z	    _updatedAt
2025-09-16T23:45:49.940045Z	  
2025-09-16T23:45:49.940148Z	      },
2025-09-16T23:45:49.940244Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished))])
2025-09-16T23:45:49.940369Z	    }
2025-09-16T23:45:49.940509Z	  
2025-09-16T23:45:49.940635Z	Query parameters: {
2025-09-16T23:45:49.94078Z	  limit: 1000,
2025-09-16T23:45:49.940926Z	  offset: 0,
2025-09-16T23:45:49.941052Z	  targetMarket: undefined,
2025-09-16T23:45:49.941185Z	  brand: undefined,
2025-09-16T23:45:49.941316Z	  featured: undefined
2025-09-16T23:45:49.941437Z	}
2025-09-16T23:45:49.946293Z	🔍 [getAllBrands] Starting brand data fetch from Sanity...
2025-09-16T23:45:49.946525Z	🔍 [getAllBrands] Executing Sanity query...
2025-09-16T23:45:49.949252Z	🔍 [getAllBrands] Starting brand data fetch from Sanity...
2025-09-16T23:45:49.949667Z	🔍 [getAllBrands] Executing Sanity query...
2025-09-16T23:45:50.249038Z	Products fetch result: {
2025-09-16T23:45:50.249398Z	  totalProducts: 14,
2025-09-16T23:45:50.249552Z	  fetchedProducts: 14,
2025-09-16T23:45:50.249658Z	  firstProduct: {
2025-09-16T23:45:50.249787Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:45:50.249866Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:45:50.250152Z	    _type: 'product',
2025-09-16T23:45:50.250387Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:45:50.250484Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:45:50.250572Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:45:50.250702Z	    image: null,
2025-09-16T23:45:50.250806Z	    inventory: {
2025-09-16T23:45:50.250931Z	      inStock: true,
2025-09-16T23:45:50.251066Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:45:50.251184Z	      quantity: 0,
2025-09-16T23:45:50.25129Z	      status: 'in_stock',
2025-09-16T23:45:50.251426Z	      warehouse: null
2025-09-16T23:45:50.251506Z	    },
2025-09-16T23:45:50.2516Z	    isActive: true,
2025-09-16T23:45:50.251774Z	    isFeatured: false,
2025-09-16T23:45:50.251986Z	    isNew: false,
2025-09-16T23:45:50.252094Z	    partNumber: '99999',
2025-09-16T23:45:50.25219Z	    pricing: {
2025-09-16T23:45:50.252309Z	      currency: 'CNY',
2025-09-16T23:45:50.252421Z	      leadTime: null,
2025-09-16T23:45:50.252522Z	      moq: null,
2025-09-16T23:45:50.252665Z	      price: null,
2025-09-16T23:45:50.25279Z	      tiers: null
2025-09-16T23:45:50.252895Z	    },
2025-09-16T23:45:50.252985Z	    shortDescription: null,
2025-09-16T23:45:50.253061Z	    slug: '99999',
2025-09-16T23:45:50.253156Z	    title: '99999'
2025-09-16T23:45:50.253275Z	  }
2025-09-16T23:45:50.253391Z	}
2025-09-16T23:45:50.253543Z	Generated static params for products: 140
2025-09-16T23:45:50.30215Z	🔍 [getAllBrands] Sanity query returned: 13 brands
2025-09-16T23:45:50.305207Z	Generated static params for brand products: 140
2025-09-16T23:45:50.345937Z	🔍 [getAllBrands] Sanity query returned: 13 brands
2025-09-16T23:45:50.349249Z	Generated static params for brands: 140
2025-09-16T23:45:50.435986Z	Generated static params for articles: 50
2025-09-16T23:45:50.449515Z	Solutions fetch result: {
2025-09-16T23:45:50.450092Z	  totalSolutions: 12,
2025-09-16T23:45:50.450258Z	  fetchedSolutions: 12,
2025-09-16T23:45:50.450366Z	  firstSolution: {
2025-09-16T23:45:50.450573Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-16T23:45:50.450764Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-16T23:45:50.450892Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-16T23:45:50.451017Z	    complexity: 'medium',
2025-09-16T23:45:50.451121Z	    coverImage: null,
2025-09-16T23:45:50.451224Z	    description: [ [Object] ],
2025-09-16T23:45:50.451325Z	    isFeatured: false,
2025-09-16T23:45:50.451432Z	    isPublished: true,
2025-09-16T23:45:50.451549Z	    primaryBrand: {
2025-09-16T23:45:50.451849Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:45:50.452012Z	      logo: null,
2025-09-16T23:45:50.452106Z	      name: 'IXYS',
2025-09-16T23:45:50.452231Z	      slug: 'ixys'
2025-09-16T23:45:50.452336Z	    },
2025-09-16T23:45:50.452435Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-16T23:45:50.453523Z	    relatedBrands: null,
2025-09-16T23:45:50.453773Z	    slug: '99999',
2025-09-16T23:45:50.453911Z	    summary: '99999',
2025-09-16T23:45:50.454021Z	    targetMarket: 'industrial-automation',
2025-09-16T23:45:50.454212Z	    title: '99999',
2025-09-16T23:45:50.454339Z	    viewCount: 0
2025-09-16T23:45:50.454456Z	  }
2025-09-16T23:45:50.454559Z	}
2025-09-16T23:45:50.454659Z	Generated static params for solutions: 120
2025-09-16T23:45:50.473579Z	🔍 [getAllBrands] Sanity query returned: 13 brands
2025-09-16T23:45:50.474651Z	Generated static params for brand solutions: 140
2025-09-16T23:45:50.539947Z	🔍 [getAllBrands] Sanity query returned: 13 brands
2025-09-16T23:45:50.544121Z	Generated static params for brand support: 140
2025-09-16T23:45:51.502597Z	   Generating static pages (0/894) ...
2025-09-16T23:45:52.278652Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:52.278956Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:52.279087Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:52.279193Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:52.27931Z	}
2025-09-16T23:45:52.279624Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:52.280076Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:52.280298Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:52.28046Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:52.280598Z	}
2025-09-16T23:45:52.281074Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:52.281241Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:52.281366Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:52.281472Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:52.281602Z	}
2025-09-16T23:45:52.282181Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:52.282317Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:52.282509Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:52.282667Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:52.282886Z	}
2025-09-16T23:45:52.416933Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:52.417344Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:52.417493Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:52.417622Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:52.41777Z	}
2025-09-16T23:45:52.417884Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:52.417984Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:52.418089Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:52.418192Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:52.418294Z	}
2025-09-16T23:45:52.620483Z	Error fetching product data: Error: Unable to resolve image URL from source ({"_type":"image","alt":"STMicroelectronics Logo"})
2025-09-16T23:45:52.621147Z	    at t.default (/opt/buildhome/repo/.next/server/chunks/460.js:1:8379)
2025-09-16T23:45:52.621325Z	    at e.url (/opt/buildhome/repo/.next/server/chunks/460.js:1:4682)
2025-09-16T23:45:52.621445Z	    at j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:7143)
2025-09-16T23:45:52.621554Z	Error fetching product data: Error: Unable to resolve image URL from source ({"_type":"image","alt":"STMicroelectronics Logo"})
2025-09-16T23:45:52.621665Z	    at t.default (/opt/buildhome/repo/.next/server/chunks/460.js:1:8379)
2025-09-16T23:45:52.621811Z	    at e.url (/opt/buildhome/repo/.next/server/chunks/460.js:1:4682)
2025-09-16T23:45:52.62191Z	    at j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:7143)
2025-09-16T23:45:52.848536Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:52.848865Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:52.849002Z	    at runNextTicks (node:internal/process/task_queues:60:5)
2025-09-16T23:45:52.849114Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:45:52.84957Z	    at process.processTimers (node:internal/timers:512:7)
2025-09-16T23:45:52.85023Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:52.850359Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:52.850485Z	}
2025-09-16T23:45:52.85059Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:52.85072Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:52.850824Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:52.850961Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:52.851065Z	}
2025-09-16T23:45:52.851171Z	Error fetching product data: Error: Unable to resolve image URL from source ({"_type":"image","alt":"STMicroelectronics Logo"})
2025-09-16T23:45:52.851278Z	    at t.default (/opt/buildhome/repo/.next/server/chunks/460.js:1:8379)
2025-09-16T23:45:52.851372Z	    at e.url (/opt/buildhome/repo/.next/server/chunks/460.js:1:4682)
2025-09-16T23:45:52.851511Z	    at j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:7143)
2025-09-16T23:45:52.851626Z	Error fetching product data: Error: Unable to resolve image URL from source ({"_type":"image","alt":"STMicroelectronics Logo"})
2025-09-16T23:45:52.851759Z	    at t.default (/opt/buildhome/repo/.next/server/chunks/460.js:1:8379)
2025-09-16T23:45:52.851876Z	    at e.url (/opt/buildhome/repo/.next/server/chunks/460.js:1:4682)
2025-09-16T23:45:52.851981Z	    at j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:7143)
2025-09-16T23:45:52.97212Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:52.972604Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:52.972905Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:52.973024Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:52.973096Z	}
2025-09-16T23:45:52.973357Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:52.973436Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:52.973647Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:52.973871Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:52.973996Z	}
2025-09-16T23:45:53.00808Z	Error fetching product data: Error: Unable to resolve image URL from source ({"_type":"image","alt":"STMicroelectronics Logo"})
2025-09-16T23:45:53.008496Z	    at t.default (/opt/buildhome/repo/.next/server/chunks/460.js:1:8379)
2025-09-16T23:45:53.009252Z	    at e.url (/opt/buildhome/repo/.next/server/chunks/460.js:1:4682)
2025-09-16T23:45:53.009498Z	    at j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:7143)
2025-09-16T23:45:53.010199Z	Error fetching product data: Error: Unable to resolve image URL from source ({"_type":"image","alt":"STMicroelectronics Logo"})
2025-09-16T23:45:53.010603Z	    at t.default (/opt/buildhome/repo/.next/server/chunks/460.js:1:8379)
2025-09-16T23:45:53.010899Z	    at e.url (/opt/buildhome/repo/.next/server/chunks/460.js:1:4682)
2025-09-16T23:45:53.011034Z	    at j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:7143)
2025-09-16T23:45:53.011303Z	    at runNextTicks (node:internal/process/task_queues:60:5)
2025-09-16T23:45:53.011433Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:45:53.011719Z	    at process.processTimers (node:internal/timers:512:7)
2025-09-16T23:45:53.012003Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:53.012128Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:53.012237Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:53.012423Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:53.012522Z	}
2025-09-16T23:45:53.012621Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:53.012734Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:53.012824Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:53.012914Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:53.01331Z	}
2025-09-16T23:45:53.048803Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:53.05285Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:53.053087Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:53.053211Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:53.053313Z	}
2025-09-16T23:45:53.053458Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:53.053565Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:53.053666Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:53.0633Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:53.06356Z	}
2025-09-16T23:45:53.151776Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:53.152054Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:53.15224Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:53.152416Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:53.152606Z	}
2025-09-16T23:45:53.152797Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:53.152871Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:53.152966Z	    at runNextTicks (node:internal/process/task_queues:60:5)
2025-09-16T23:45:53.153059Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:45:53.153157Z	    at process.processTimers (node:internal/timers:512:7)
2025-09-16T23:45:53.153259Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:53.153358Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:53.153485Z	}
2025-09-16T23:45:53.153686Z	Error fetching product data: Error: Unable to resolve image URL from source ({"_type":"image","alt":"STMicroelectronics Logo"})
2025-09-16T23:45:53.153828Z	    at t.default (/opt/buildhome/repo/.next/server/chunks/460.js:1:8379)
2025-09-16T23:45:53.153933Z	    at e.url (/opt/buildhome/repo/.next/server/chunks/460.js:1:4682)
2025-09-16T23:45:53.154276Z	    at j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:7143)
2025-09-16T23:45:53.154582Z	Error fetching product data: Error: Unable to resolve image URL from source ({"_type":"image","alt":"STMicroelectronics Logo"})
2025-09-16T23:45:53.154884Z	    at t.default (/opt/buildhome/repo/.next/server/chunks/460.js:1:8379)
2025-09-16T23:45:53.154993Z	    at e.url (/opt/buildhome/repo/.next/server/chunks/460.js:1:4682)
2025-09-16T23:45:53.155088Z	    at j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:7143)
2025-09-16T23:45:53.184171Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:53.184365Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:53.184438Z	    at runNextTicks (node:internal/process/task_queues:60:5)
2025-09-16T23:45:53.184495Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:45:53.18455Z	    at process.processTimers (node:internal/timers:512:7)
2025-09-16T23:45:53.184607Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:53.223868Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:53.224139Z	}
2025-09-16T23:45:53.22476Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:53.224899Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:53.225008Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:53.225107Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:53.225213Z	}
2025-09-16T23:45:53.272779Z	Error fetching product data: Error: Unable to resolve image URL from source ({"_type":"image","alt":"STMicroelectronics Logo"})
2025-09-16T23:45:53.273284Z	    at t.default (/opt/buildhome/repo/.next/server/chunks/460.js:1:8379)
2025-09-16T23:45:53.273422Z	    at e.url (/opt/buildhome/repo/.next/server/chunks/460.js:1:4682)
2025-09-16T23:45:53.273546Z	    at j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:7143)
2025-09-16T23:45:53.27366Z	Error fetching product data: Error: Unable to resolve image URL from source ({"_type":"image","alt":"STMicroelectronics Logo"})
2025-09-16T23:45:53.273804Z	    at t.default (/opt/buildhome/repo/.next/server/chunks/460.js:1:8379)
2025-09-16T23:45:53.273919Z	    at e.url (/opt/buildhome/repo/.next/server/chunks/460.js:1:4682)
2025-09-16T23:45:53.274031Z	    at j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:7143)
2025-09-16T23:45:53.274424Z	    at runNextTicks (node:internal/process/task_queues:60:5)
2025-09-16T23:45:53.274704Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:45:53.274964Z	    at process.processTimers (node:internal/timers:512:7)
2025-09-16T23:45:53.28321Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:53.283463Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:53.283749Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:53.283859Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:53.283921Z	}
2025-09-16T23:45:53.284031Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:53.284258Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:53.284478Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:53.28464Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:53.285007Z	}
2025-09-16T23:45:53.382469Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:53.382872Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:53.383119Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:53.383234Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:53.383339Z	}
2025-09-16T23:45:53.383471Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:53.383555Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:53.383615Z	    at runNextTicks (node:internal/process/task_queues:60:5)
2025-09-16T23:45:53.383693Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:45:53.383791Z	    at process.processTimers (node:internal/timers:512:7)
2025-09-16T23:45:53.383895Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:53.384135Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:53.384285Z	}
2025-09-16T23:45:53.448881Z	Error fetching product data: Error: Unable to resolve image URL from source ({"_type":"image","alt":"STMicroelectronics Logo"})
2025-09-16T23:45:53.449347Z	    at t.default (/opt/buildhome/repo/.next/server/chunks/460.js:1:8379)
2025-09-16T23:45:53.449671Z	    at e.url (/opt/buildhome/repo/.next/server/chunks/460.js:1:4682)
2025-09-16T23:45:53.44983Z	    at j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:7143)
2025-09-16T23:45:53.449947Z	Error fetching product data: Error: Unable to resolve image URL from source ({"_type":"image","alt":"STMicroelectronics Logo"})
2025-09-16T23:45:53.450054Z	    at t.default (/opt/buildhome/repo/.next/server/chunks/460.js:1:8379)
2025-09-16T23:45:53.450221Z	    at e.url (/opt/buildhome/repo/.next/server/chunks/460.js:1:4682)
2025-09-16T23:45:53.451062Z	    at j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:7143)
2025-09-16T23:45:53.451374Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:53.451517Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:53.453464Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:53.453624Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:53.453992Z	}
2025-09-16T23:45:53.454426Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:53.454785Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:53.454973Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:53.455283Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:53.455712Z	}
2025-09-16T23:45:53.468499Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:53.4688Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:53.46894Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:53.469052Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:53.469165Z	}
2025-09-16T23:45:53.469268Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:53.469365Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:53.469482Z	    at runNextTicks (node:internal/process/task_queues:60:5)
2025-09-16T23:45:53.469594Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:45:53.469715Z	    at process.processTimers (node:internal/timers:512:7)
2025-09-16T23:45:53.469821Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:53.46992Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:53.470012Z	}
2025-09-16T23:45:53.624611Z	Error fetching product data: Error: Unable to resolve image URL from source ({"_type":"image","alt":"STMicroelectronics Logo"})
2025-09-16T23:45:53.624939Z	    at t.default (/opt/buildhome/repo/.next/server/chunks/460.js:1:8379)
2025-09-16T23:45:53.62508Z	    at e.url (/opt/buildhome/repo/.next/server/chunks/460.js:1:4682)
2025-09-16T23:45:53.625177Z	    at j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:7143)
2025-09-16T23:45:53.625265Z	Error fetching product data: Error: Unable to resolve image URL from source ({"_type":"image","alt":"STMicroelectronics Logo"})
2025-09-16T23:45:53.625708Z	    at t.default (/opt/buildhome/repo/.next/server/chunks/460.js:1:8379)
2025-09-16T23:45:53.62587Z	    at e.url (/opt/buildhome/repo/.next/server/chunks/460.js:1:4682)
2025-09-16T23:45:53.62599Z	    at j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:7143)
2025-09-16T23:45:53.626098Z	    at runNextTicks (node:internal/process/task_queues:60:5)
2025-09-16T23:45:53.626197Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:45:53.626816Z	    at process.processTimers (node:internal/timers:512:7)
2025-09-16T23:45:53.627067Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:53.62726Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:53.62743Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:53.627626Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:53.627786Z	}
2025-09-16T23:45:53.627905Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:53.628044Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:53.628179Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:53.628311Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:53.628458Z	}
2025-09-16T23:45:53.662415Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:53.663522Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:53.663837Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:53.664011Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:53.664131Z	}
2025-09-16T23:45:53.664236Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:53.664339Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:53.66446Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:53.664775Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:53.666025Z	}
2025-09-16T23:45:53.675065Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:53.676059Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:53.677709Z	    at runNextTicks (node:internal/process/task_queues:60:5)
2025-09-16T23:45:53.678251Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:45:53.678505Z	    at process.processTimers (node:internal/timers:512:7)
2025-09-16T23:45:53.679664Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:53.679839Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:53.679978Z	}
2025-09-16T23:45:53.750746Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:53.751104Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:53.751266Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:53.751426Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:53.751622Z	}
2025-09-16T23:45:53.76241Z	Error fetching product data: Error: Unable to resolve image URL from source ({"_type":"image","alt":"STMicroelectronics Logo"})
2025-09-16T23:45:53.763059Z	    at t.default (/opt/buildhome/repo/.next/server/chunks/460.js:1:8379)
2025-09-16T23:45:53.763226Z	    at e.url (/opt/buildhome/repo/.next/server/chunks/460.js:1:4682)
2025-09-16T23:45:53.763364Z	    at j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:7143)
2025-09-16T23:45:53.763495Z	Error fetching product data: Error: Unable to resolve image URL from source ({"_type":"image","alt":"STMicroelectronics Logo"})
2025-09-16T23:45:53.763625Z	    at t.default (/opt/buildhome/repo/.next/server/chunks/460.js:1:8379)
2025-09-16T23:45:53.763755Z	    at e.url (/opt/buildhome/repo/.next/server/chunks/460.js:1:4682)
2025-09-16T23:45:53.763869Z	    at j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:7143)
2025-09-16T23:45:53.763982Z	    at runNextTicks (node:internal/process/task_queues:60:5)
2025-09-16T23:45:53.764089Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:45:53.764186Z	    at process.processTimers (node:internal/timers:512:7)
2025-09-16T23:45:53.774109Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:53.774469Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:53.774592Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:53.77472Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:53.774875Z	}
2025-09-16T23:45:53.775056Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:53.775163Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:53.775269Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:53.775371Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:53.775465Z	}
2025-09-16T23:45:53.858761Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:53.859042Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:53.859194Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:53.85934Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:53.859458Z	}
2025-09-16T23:45:53.859562Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:53.859688Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:53.859811Z	    at runNextTicks (node:internal/process/task_queues:60:5)
2025-09-16T23:45:53.859918Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:45:53.860022Z	    at process.processTimers (node:internal/timers:512:7)
2025-09-16T23:45:53.860125Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:53.860234Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:53.860365Z	}
2025-09-16T23:45:53.876619Z	Error fetching product data: Error: Unable to resolve image URL from source ({"_type":"image","alt":"STMicroelectronics Logo"})
2025-09-16T23:45:53.877222Z	    at t.default (/opt/buildhome/repo/.next/server/chunks/460.js:1:8379)
2025-09-16T23:45:53.880852Z	    at e.url (/opt/buildhome/repo/.next/server/chunks/460.js:1:4682)
2025-09-16T23:45:53.880966Z	    at j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:7143)
2025-09-16T23:45:53.881217Z	Error fetching product data: Error: Unable to resolve image URL from source ({"_type":"image","alt":"STMicroelectronics Logo"})
2025-09-16T23:45:53.881344Z	    at t.default (/opt/buildhome/repo/.next/server/chunks/460.js:1:8379)
2025-09-16T23:45:53.881532Z	    at e.url (/opt/buildhome/repo/.next/server/chunks/460.js:1:4682)
2025-09-16T23:45:53.881618Z	    at j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:7143)
2025-09-16T23:45:54.150155Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:54.150439Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:54.150577Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:54.153833Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:54.154012Z	}
2025-09-16T23:45:54.154082Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:54.154149Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:54.154206Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:54.154263Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:54.154317Z	}
2025-09-16T23:45:54.203114Z	Error fetching product data: Error: Unable to resolve image URL from source ({"_type":"image","alt":"STMicroelectronics Logo"})
2025-09-16T23:45:54.203426Z	    at t.default (/opt/buildhome/repo/.next/server/chunks/460.js:1:8379)
2025-09-16T23:45:54.203591Z	    at e.url (/opt/buildhome/repo/.next/server/chunks/460.js:1:4682)
2025-09-16T23:45:54.203747Z	    at j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:7143)
2025-09-16T23:45:54.203889Z	Error fetching product data: Error: Unable to resolve image URL from source ({"_type":"image","alt":"STMicroelectronics Logo"})
2025-09-16T23:45:54.204099Z	    at t.default (/opt/buildhome/repo/.next/server/chunks/460.js:1:8379)
2025-09-16T23:45:54.204322Z	    at e.url (/opt/buildhome/repo/.next/server/chunks/460.js:1:4682)
2025-09-16T23:45:54.204813Z	    at j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:7143)
2025-09-16T23:45:54.204985Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:54.205108Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:54.205214Z	    at runNextTicks (node:internal/process/task_queues:60:5)
2025-09-16T23:45:54.205313Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:45:54.20542Z	    at process.processTimers (node:internal/timers:512:7)
2025-09-16T23:45:54.205538Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:54.205642Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:54.205781Z	}
2025-09-16T23:45:54.205918Z	Error fetching product data: l [SanityError]: Product not found
2025-09-16T23:45:54.206038Z	    at u (/opt/buildhome/repo/.next/server/chunks/439.js:186:70)
2025-09-16T23:45:54.206158Z	    at async j (/opt/buildhome/repo/.next/server/app/[locale]/products/[slug]/page.js:1:4741) {
2025-09-16T23:45:54.206314Z	  code: 'PRODUCT_NOT_FOUND'
2025-09-16T23:45:54.206472Z	}
2025-09-16T23:45:54.210572Z	🔍 执行品牌查询: {
2025-09-16T23:45:54.210852Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-16T23:45:54.210977Z	  'GROQ查询': '\n' +
2025-09-16T23:45:54.211069Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-16T23:45:54.211189Z	    '      \n' +
2025-09-16T23:45:54.211284Z	    '    _id,\n' +
2025-09-16T23:45:54.211368Z	    '    name,\n' +
2025-09-16T23:45:54.211462Z	    '    "slug": slug.current,\n' +
2025-09-16T23:45:54.211544Z	    '    logo,\n' +
2025-09-16T23:45:54.21163Z	    '    description,\n' +
2025-09-16T23:45:54.211751Z	    '    website,\n' +
2025-09-16T23:45:54.211865Z	    '    country,\n' +
2025-09-16T23:45:54.212246Z	    '    isActive,\n' +
2025-09-16T23:45:54.212634Z	    '    isFeatured\n' +
2025-09-16T23:45:54.212789Z	    '  \n' +
2025-09-16T23:45:54.214189Z	    '    }\n' +
2025-09-16T23:45:54.214605Z	    '  ',
2025-09-16T23:45:54.214745Z	  '是否仅获取推荐': false
2025-09-16T23:45:54.214825Z	}
2025-09-16T23:45:54.214888Z	🔍 执行品牌查询: {
2025-09-16T23:45:54.21495Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-16T23:45:54.215011Z	  'GROQ查询': '\n' +
2025-09-16T23:45:54.215067Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-16T23:45:54.215122Z	    '      \n' +
2025-09-16T23:45:54.215177Z	    '    _id,\n' +
2025-09-16T23:45:54.21523Z	    '    name,\n' +
2025-09-16T23:45:54.215284Z	    '    "slug": slug.current,\n' +
2025-09-16T23:45:54.21534Z	    '    logo,\n' +
2025-09-16T23:45:54.215401Z	    '    description,\n' +
2025-09-16T23:45:54.215457Z	    '    website,\n' +
2025-09-16T23:45:54.215512Z	    '    country,\n' +
2025-09-16T23:45:54.215567Z	    '    isActive,\n' +
2025-09-16T23:45:54.215629Z	    '    isFeatured\n' +
2025-09-16T23:45:54.215725Z	    '  \n' +
2025-09-16T23:45:54.215785Z	    '    }\n' +
2025-09-16T23:45:54.215839Z	    '  ',
2025-09-16T23:45:54.215892Z	  '是否仅获取推荐': false
2025-09-16T23:45:54.215997Z	}
2025-09-16T23:45:54.233726Z	🔍 执行品牌查询: {
2025-09-16T23:45:54.234048Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-16T23:45:54.234242Z	  'GROQ查询': '\n' +
2025-09-16T23:45:54.234374Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-16T23:45:54.234534Z	    '      \n' +
2025-09-16T23:45:54.23466Z	    '    _id,\n' +
2025-09-16T23:45:54.234777Z	    '    name,\n' +
2025-09-16T23:45:54.234874Z	    '    "slug": slug.current,\n' +
2025-09-16T23:45:54.234977Z	    '    logo,\n' +
2025-09-16T23:45:54.235076Z	    '    description,\n' +
2025-09-16T23:45:54.235166Z	    '    website,\n' +
2025-09-16T23:45:54.235257Z	    '    country,\n' +
2025-09-16T23:45:54.236034Z	    '    isActive,\n' +
2025-09-16T23:45:54.236198Z	    '    isFeatured\n' +
2025-09-16T23:45:54.236318Z	    '  \n' +
2025-09-16T23:45:54.236428Z	    '    }\n' +
2025-09-16T23:45:54.236529Z	    '  ',
2025-09-16T23:45:54.23673Z	  '是否仅获取推荐': false
2025-09-16T23:45:54.237064Z	}
2025-09-16T23:45:54.237226Z	🔍 执行品牌查询: {
2025-09-16T23:45:54.237373Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-16T23:45:54.237537Z	  'GROQ查询': '\n' +
2025-09-16T23:45:54.237654Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-16T23:45:54.237789Z	    '      \n' +
2025-09-16T23:45:54.237886Z	    '    _id,\n' +
2025-09-16T23:45:54.237975Z	    '    name,\n' +
2025-09-16T23:45:54.238067Z	    '    "slug": slug.current,\n' +
2025-09-16T23:45:54.238176Z	    '    logo,\n' +
2025-09-16T23:45:54.238284Z	    '    description,\n' +
2025-09-16T23:45:54.238383Z	    '    website,\n' +
2025-09-16T23:45:54.23859Z	    '    country,\n' +
2025-09-16T23:45:54.238726Z	    '    isActive,\n' +
2025-09-16T23:45:54.238852Z	    '    isFeatured\n' +
2025-09-16T23:45:54.238961Z	    '  \n' +
2025-09-16T23:45:54.239056Z	    '    }\n' +
2025-09-16T23:45:54.239157Z	    '  ',
2025-09-16T23:45:54.239283Z	  '是否仅获取推荐': false
2025-09-16T23:45:54.239384Z	}
2025-09-16T23:45:54.239503Z	🔍 执行品牌查询: {
2025-09-16T23:45:54.239611Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-16T23:45:54.23974Z	  'GROQ查询': '\n' +
2025-09-16T23:45:54.239835Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-16T23:45:54.239934Z	    '      \n' +
2025-09-16T23:45:54.240037Z	    '    _id,\n' +
2025-09-16T23:45:54.240136Z	    '    name,\n' +
2025-09-16T23:45:54.240313Z	    '    "slug": slug.current,\n' +
2025-09-16T23:45:54.240468Z	    '    logo,\n' +
2025-09-16T23:45:54.240576Z	    '    description,\n' +
2025-09-16T23:45:54.2407Z	    '    website,\n' +
2025-09-16T23:45:54.240808Z	    '    country,\n' +
2025-09-16T23:45:54.240914Z	    '    isActive,\n' +
2025-09-16T23:45:54.241012Z	    '    isFeatured\n' +
2025-09-16T23:45:54.241109Z	    '  \n' +
2025-09-16T23:45:54.24122Z	    '    }\n' +
2025-09-16T23:45:54.241353Z	    '  ',
2025-09-16T23:45:54.241459Z	  '是否仅获取推荐': false
2025-09-16T23:45:54.241568Z	}
2025-09-16T23:45:54.241668Z	🔍 执行品牌查询: {
2025-09-16T23:45:54.2418Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-16T23:45:54.241917Z	  'GROQ查询': '\n' +
2025-09-16T23:45:54.242232Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-16T23:45:54.2424Z	    '      \n' +
2025-09-16T23:45:54.242534Z	    '    _id,\n' +
2025-09-16T23:45:54.242663Z	    '    name,\n' +
2025-09-16T23:45:54.242827Z	    '    "slug": slug.current,\n' +
2025-09-16T23:45:54.243259Z	    '    logo,\n' +
2025-09-16T23:45:54.243356Z	    '    description,\n' +
2025-09-16T23:45:54.243601Z	    '    website,\n' +
2025-09-16T23:45:54.243733Z	    '    country,\n' +
2025-09-16T23:45:54.24413Z	    '    isActive,\n' +
2025-09-16T23:45:54.244229Z	    '    isFeatured\n' +
2025-09-16T23:45:54.244299Z	    '  \n' +
2025-09-16T23:45:54.24445Z	    '    }\n' +
2025-09-16T23:45:54.244574Z	    '  ',
2025-09-16T23:45:54.244801Z	  '是否仅获取推荐': false
2025-09-16T23:45:54.244933Z	}
2025-09-16T23:45:54.24507Z	🔍 执行品牌查询: {
2025-09-16T23:45:54.245201Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-16T23:45:54.245314Z	  'GROQ查询': '\n' +
2025-09-16T23:45:54.24543Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-16T23:45:54.245547Z	    '      \n' +
2025-09-16T23:45:54.245656Z	    '    _id,\n' +
2025-09-16T23:45:54.24584Z	    '    name,\n' +
2025-09-16T23:45:54.245954Z	    '    "slug": slug.current,\n' +
2025-09-16T23:45:54.246074Z	    '    logo,\n' +
2025-09-16T23:45:54.246252Z	    '    description,\n' +
2025-09-16T23:45:54.246373Z	    '    website,\n' +
2025-09-16T23:45:54.246769Z	    '    country,\n' +
2025-09-16T23:45:54.246869Z	    '    isActive,\n' +
2025-09-16T23:45:54.247175Z	    '    isFeatured\n' +
2025-09-16T23:45:54.247428Z	    '  \n' +
2025-09-16T23:45:54.247669Z	    '    }\n' +
2025-09-16T23:45:54.247799Z	    '  ',
2025-09-16T23:45:54.248068Z	  '是否仅获取推荐': false
2025-09-16T23:45:54.24815Z	}
2025-09-16T23:45:54.248423Z	🔍 执行品牌查询: {
2025-09-16T23:45:54.248698Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-16T23:45:54.248876Z	  'GROQ查询': '\n' +
2025-09-16T23:45:54.249045Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-16T23:45:54.249149Z	    '      \n' +
2025-09-16T23:45:54.24926Z	    '    _id,\n' +
2025-09-16T23:45:54.249414Z	    '    name,\n' +
2025-09-16T23:45:54.249597Z	    '    "slug": slug.current,\n' +
2025-09-16T23:45:54.249753Z	    '    logo,\n' +
2025-09-16T23:45:54.249865Z	    '    description,\n' +
2025-09-16T23:45:54.249976Z	    '    website,\n' +
2025-09-16T23:45:54.25009Z	    '    country,\n' +
2025-09-16T23:45:54.250209Z	    '    isActive,\n' +
2025-09-16T23:45:54.250318Z	    '    isFeatured\n' +
2025-09-16T23:45:54.250456Z	    '  \n' +
2025-09-16T23:45:54.250562Z	    '    }\n' +
2025-09-16T23:45:54.2507Z	    '  ',
2025-09-16T23:45:54.250807Z	  '是否仅获取推荐': false
2025-09-16T23:45:54.250914Z	}
2025-09-16T23:45:54.25101Z	🔍 执行品牌查询: {
2025-09-16T23:45:54.251105Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-16T23:45:54.251206Z	  'GROQ查询': '\n' +
2025-09-16T23:45:54.251324Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-16T23:45:54.251415Z	    '      \n' +
2025-09-16T23:45:54.251522Z	    '    _id,\n' +
2025-09-16T23:45:54.251628Z	    '    name,\n' +
2025-09-16T23:45:54.25184Z	    '    "slug": slug.current,\n' +
2025-09-16T23:45:54.251961Z	    '    logo,\n' +
2025-09-16T23:45:54.252107Z	    '    description,\n' +
2025-09-16T23:45:54.252195Z	    '    website,\n' +
2025-09-16T23:45:54.25229Z	    '    country,\n' +
2025-09-16T23:45:54.252421Z	    '    isActive,\n' +
2025-09-16T23:45:54.252522Z	    '    isFeatured\n' +
2025-09-16T23:45:54.252613Z	    '  \n' +
2025-09-16T23:45:54.252715Z	    '    }\n' +
2025-09-16T23:45:54.252815Z	    '  ',
2025-09-16T23:45:54.252914Z	  '是否仅获取推荐': false
2025-09-16T23:45:54.253008Z	}
2025-09-16T23:45:54.253103Z	🔍 执行品牌查询: {
2025-09-16T23:45:54.253198Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-16T23:45:54.253299Z	  'GROQ查询': '\n' +
2025-09-16T23:45:54.253416Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-16T23:45:54.253522Z	    '      \n' +
2025-09-16T23:45:54.253625Z	    '    _id,\n' +
2025-09-16T23:45:54.253929Z	    '    name,\n' +
2025-09-16T23:45:54.254009Z	    '    "slug": slug.current,\n' +
2025-09-16T23:45:54.254233Z	    '    logo,\n' +
2025-09-16T23:45:54.254414Z	    '    description,\n' +
2025-09-16T23:45:54.254495Z	    '    website,\n' +
2025-09-16T23:45:54.254776Z	    '    country,\n' +
2025-09-16T23:45:54.254865Z	    '    isActive,\n' +
2025-09-16T23:45:54.255101Z	    '    isFeatured\n' +
2025-09-16T23:45:54.255607Z	    '  \n' +
2025-09-16T23:45:54.256064Z	    '    }\n' +
2025-09-16T23:45:54.256147Z	    '  ',
2025-09-16T23:45:54.256266Z	  '是否仅获取推荐': false
2025-09-16T23:45:54.256418Z	}
2025-09-16T23:45:54.256532Z	🔍 执行品牌查询: {
2025-09-16T23:45:54.256701Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-16T23:45:54.256799Z	  'GROQ查询': '\n' +
2025-09-16T23:45:54.256917Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-16T23:45:54.257086Z	    '      \n' +
2025-09-16T23:45:54.257249Z	    '    _id,\n' +
2025-09-16T23:45:54.25735Z	    '    name,\n' +
2025-09-16T23:45:54.25757Z	    '    "slug": slug.current,\n' +
2025-09-16T23:45:54.257736Z	    '    logo,\n' +
2025-09-16T23:45:54.2579Z	    '    description,\n' +
2025-09-16T23:45:54.258046Z	    '    website,\n' +
2025-09-16T23:45:54.258199Z	    '    country,\n' +
2025-09-16T23:45:54.258296Z	    '    isActive,\n' +
2025-09-16T23:45:54.258434Z	    '    isFeatured\n' +
2025-09-16T23:45:54.258531Z	    '  \n' +
2025-09-16T23:45:54.258844Z	    '    }\n' +
2025-09-16T23:45:54.258925Z	    '  ',
2025-09-16T23:45:54.258984Z	  '是否仅获取推荐': false
2025-09-16T23:45:54.259275Z	}
2025-09-16T23:45:54.259364Z	🔍 执行品牌查询: {
2025-09-16T23:45:54.259437Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-16T23:45:54.259748Z	  'GROQ查询': '\n' +
2025-09-16T23:45:54.259909Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-16T23:45:54.260055Z	    '      \n' +
2025-09-16T23:45:54.260298Z	    '    _id,\n' +
2025-09-16T23:45:54.260559Z	    '    name,\n' +
2025-09-16T23:45:54.260644Z	    '    "slug": slug.current,\n' +
2025-09-16T23:45:54.260903Z	    '    logo,\n' +
2025-09-16T23:45:54.261137Z	    '    description,\n' +
2025-09-16T23:45:54.261379Z	    '    website,\n' +
2025-09-16T23:45:54.261465Z	    '    country,\n' +
2025-09-16T23:45:54.261689Z	    '    isActive,\n' +
2025-09-16T23:45:54.261958Z	    '    isFeatured\n' +
2025-09-16T23:45:54.262041Z	    '  \n' +
2025-09-16T23:45:54.26229Z	    '    }\n' +
2025-09-16T23:45:54.262383Z	    '  ',
2025-09-16T23:45:54.262636Z	  '是否仅获取推荐': false
2025-09-16T23:45:54.262894Z	}
2025-09-16T23:45:54.262987Z	🔍 执行品牌查询: {
2025-09-16T23:45:54.263206Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-16T23:45:54.263471Z	  'GROQ查询': '\n' +
2025-09-16T23:45:54.263718Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-16T23:45:54.263823Z	    '      \n' +
2025-09-16T23:45:54.264071Z	    '    _id,\n' +
2025-09-16T23:45:54.26416Z	    '    name,\n' +
2025-09-16T23:45:54.264406Z	    '    "slug": slug.current,\n' +
2025-09-16T23:45:54.26449Z	    '    logo,\n' +
2025-09-16T23:45:54.264739Z	    '    description,\n' +
2025-09-16T23:45:54.264831Z	    '    website,\n' +
2025-09-16T23:45:54.265077Z	    '    country,\n' +
2025-09-16T23:45:54.265328Z	    '    isActive,\n' +
2025-09-16T23:45:54.265418Z	    '    isFeatured\n' +
2025-09-16T23:45:54.265665Z	    '  \n' +
2025-09-16T23:45:54.265782Z	    '    }\n' +
2025-09-16T23:45:54.266024Z	    '  ',
2025-09-16T23:45:54.266271Z	  '是否仅获取推荐': false
2025-09-16T23:45:54.266363Z	}
2025-09-16T23:45:54.266595Z	🔍 执行品牌查询: {
2025-09-16T23:45:54.266871Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-16T23:45:54.266964Z	  'GROQ查询': '\n' +
2025-09-16T23:45:54.267193Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-16T23:45:54.267443Z	    '      \n' +
2025-09-16T23:45:54.267697Z	    '    _id,\n' +
2025-09-16T23:45:54.267952Z	    '    name,\n' +
2025-09-16T23:45:54.268181Z	    '    "slug": slug.current,\n' +
2025-09-16T23:45:54.268435Z	    '    logo,\n' +
2025-09-16T23:45:54.268528Z	    '    description,\n' +
2025-09-16T23:45:54.268798Z	    '    website,\n' +
2025-09-16T23:45:54.269044Z	    '    country,\n' +
2025-09-16T23:45:54.269281Z	    '    isActive,\n' +
2025-09-16T23:45:54.26943Z	    '    isFeatured\n' +
2025-09-16T23:45:54.269847Z	    '  \n' +
2025-09-16T23:45:54.269935Z	    '    }\n' +
2025-09-16T23:45:54.27019Z	    '  ',
2025-09-16T23:45:54.270281Z	  '是否仅获取推荐': false
2025-09-16T23:45:54.270524Z	}
2025-09-16T23:45:54.695503Z	📊 品牌查询结果: {
2025-09-16T23:45:54.695774Z	  '数量': 13,
2025-09-16T23:45:54.695904Z	  '品牌列表': [
2025-09-16T23:45:54.696056Z	    {
2025-09-16T23:45:54.696208Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:45:54.696358Z	      '名称': 'CREE',
2025-09-16T23:45:54.696469Z	      slug: 'cree',
2025-09-16T23:45:54.696577Z	      '是否激活': true,
2025-09-16T23:45:54.69667Z	      '是否推荐': false
2025-09-16T23:45:54.696829Z	    },
2025-09-16T23:45:54.696919Z	    {
2025-09-16T23:45:54.697014Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-16T23:45:54.697147Z	      '名称': 'Electronicon',
2025-09-16T23:45:54.697257Z	      slug: 'Electronicon',
2025-09-16T23:45:54.697365Z	      '是否激活': true,
2025-09-16T23:45:54.697471Z	      '是否推荐': false
2025-09-16T23:45:54.697571Z	    },
2025-09-16T23:45:54.697688Z	    {
2025-09-16T23:45:54.697798Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-16T23:45:54.697905Z	      '名称': 'Epcos',
2025-09-16T23:45:54.708633Z	      slug: 'epcos',
2025-09-16T23:45:54.708904Z	      '是否激活': true,
2025-09-16T23:45:54.709017Z	      '是否推荐': false
2025-09-16T23:45:54.709112Z	    },
2025-09-16T23:45:54.709203Z	    {
2025-09-16T23:45:54.709319Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:45:54.709413Z	      '名称': 'IXYS',
2025-09-16T23:45:54.709512Z	      slug: 'ixys',
2025-09-16T23:45:54.709603Z	      '是否激活': true,
2025-09-16T23:45:54.709738Z	      '是否推荐': false
2025-09-16T23:45:54.70983Z	    },
2025-09-16T23:45:54.709917Z	    {
2025-09-16T23:45:54.710004Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-16T23:45:54.71009Z	      '名称': 'LEM',
2025-09-16T23:45:54.710182Z	      slug: 'lem',
2025-09-16T23:45:54.71027Z	      '是否激活': true,
2025-09-16T23:45:54.710359Z	      '是否推荐': false
2025-09-16T23:45:54.710448Z	    },
2025-09-16T23:45:54.710535Z	    {
2025-09-16T23:45:54.710616Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-16T23:45:54.710727Z	      '名称': 'Littelfuse',
2025-09-16T23:45:54.710812Z	      slug: 'littelfuse',
2025-09-16T23:45:54.710894Z	      '是否激活': true,
2025-09-16T23:45:54.710974Z	      '是否推荐': false
2025-09-16T23:45:54.711055Z	    },
2025-09-16T23:45:54.711139Z	    {
2025-09-16T23:45:54.711218Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-16T23:45:54.711298Z	      '名称': 'MediaTek',
2025-09-16T23:45:54.711377Z	      slug: 'mediatek',
2025-09-16T23:45:54.711459Z	      '是否激活': true,
2025-09-16T23:45:54.711543Z	      '是否推荐': false
2025-09-16T23:45:54.711629Z	    },
2025-09-16T23:45:54.711736Z	    {
2025-09-16T23:45:54.711828Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-16T23:45:54.711917Z	      '名称': 'PI',
2025-09-16T23:45:54.712008Z	      slug: 'pi',
2025-09-16T23:45:54.712098Z	      '是否激活': true,
2025-09-16T23:45:54.712188Z	      '是否推荐': false
2025-09-16T23:45:54.712282Z	    },
2025-09-16T23:45:54.712372Z	    {
2025-09-16T23:45:54.712462Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-16T23:45:54.71255Z	      '名称': 'Qualcomm',
2025-09-16T23:45:54.712646Z	      slug: 'qualcomm',
2025-09-16T23:45:54.712749Z	      '是否激活': true,
2025-09-16T23:45:54.712833Z	      '是否推荐': true
2025-09-16T23:45:54.712915Z	    },
2025-09-16T23:45:54.712996Z	    {
2025-09-16T23:45:54.713076Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-16T23:45:54.71316Z	      '名称': 'Sanrex',
2025-09-16T23:45:54.713242Z	      slug: 'sanrex',
2025-09-16T23:45:54.713324Z	      '是否激活': true,
2025-09-16T23:45:54.713441Z	      '是否推荐': false
2025-09-16T23:45:54.713527Z	    },
2025-09-16T23:45:54.71361Z	    {
2025-09-16T23:45:54.713718Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-16T23:45:54.71381Z	      '名称': 'Semikron',
2025-09-16T23:45:54.713899Z	      slug: 'semikron',
2025-09-16T23:45:54.713988Z	      '是否激活': true,
2025-09-16T23:45:54.714094Z	      '是否推荐': true
2025-09-16T23:45:54.714187Z	    },
2025-09-16T23:45:54.714284Z	    {
2025-09-16T23:45:54.714373Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-16T23:45:54.71447Z	      '名称': 'ncc',
2025-09-16T23:45:54.714564Z	      slug: 'ncc',
2025-09-16T23:45:54.714657Z	      '是否激活': true,
2025-09-16T23:45:54.714761Z	      '是否推荐': false
2025-09-16T23:45:54.714851Z	    },
2025-09-16T23:45:54.714937Z	    {
2025-09-16T23:45:54.715024Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-16T23:45:54.715112Z	      '名称': '英飞凌',
2025-09-16T23:45:54.715198Z	      slug: '英飞凌',
2025-09-16T23:45:54.715284Z	      '是否激活': true,
2025-09-16T23:45:54.715372Z	      '是否推荐': true
2025-09-16T23:45:54.71547Z	    }
2025-09-16T23:45:54.715557Z	  ]
2025-09-16T23:45:54.715649Z	}
2025-09-16T23:45:54.715747Z	📊 品牌查询结果: {
2025-09-16T23:45:54.715835Z	  '数量': 13,
2025-09-16T23:45:54.71592Z	  '品牌列表': [
2025-09-16T23:45:54.716014Z	    {
2025-09-16T23:45:54.716102Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:45:54.716193Z	      '名称': 'CREE',
2025-09-16T23:45:54.716621Z	      slug: 'cree',
2025-09-16T23:45:54.716831Z	      '是否激活': true,
2025-09-16T23:45:54.716951Z	      '是否推荐': false
2025-09-16T23:45:54.71706Z	    },
2025-09-16T23:45:54.717176Z	    {
2025-09-16T23:45:54.717359Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-16T23:45:54.717499Z	      '名称': 'Electronicon',
2025-09-16T23:45:54.717593Z	      slug: 'Electronicon',
2025-09-16T23:45:54.717697Z	      '是否激活': true,
2025-09-16T23:45:54.717815Z	      '是否推荐': false
2025-09-16T23:45:54.717927Z	    },
2025-09-16T23:45:54.722435Z	    {
2025-09-16T23:45:54.722641Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-16T23:45:54.722911Z	      '名称': 'Epcos',
2025-09-16T23:45:54.723058Z	      slug: 'epcos',
2025-09-16T23:45:54.723176Z	      '是否激活': true,
2025-09-16T23:45:54.723284Z	      '是否推荐': false
2025-09-16T23:45:54.723382Z	    },
2025-09-16T23:45:54.723494Z	    {
2025-09-16T23:45:54.723825Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:45:54.724152Z	      '名称': 'IXYS',
2025-09-16T23:45:54.724732Z	      slug: 'ixys',
2025-09-16T23:45:54.725196Z	      '是否激活': true,
2025-09-16T23:45:54.72531Z	      '是否推荐': false
2025-09-16T23:45:54.72593Z	    },
2025-09-16T23:45:54.726094Z	    {
2025-09-16T23:45:54.726203Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-16T23:45:54.726619Z	      '名称': 'LEM',
2025-09-16T23:45:54.726774Z	      slug: 'lem',
2025-09-16T23:45:54.726911Z	      '是否激活': true,
2025-09-16T23:45:54.727045Z	      '是否推荐': false
2025-09-16T23:45:54.727159Z	    },
2025-09-16T23:45:54.727262Z	    {
2025-09-16T23:45:54.727373Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-16T23:45:54.728549Z	      '名称': 'Littelfuse',
2025-09-16T23:45:54.730196Z	      slug: 'littelfuse',
2025-09-16T23:45:54.73037Z	      '是否激活': true,
2025-09-16T23:45:54.730513Z	      '是否推荐': false
2025-09-16T23:45:54.730639Z	    },
2025-09-16T23:45:54.730775Z	    {
2025-09-16T23:45:54.73089Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-16T23:45:54.731008Z	      '名称': 'MediaTek',
2025-09-16T23:45:54.732102Z	      slug: 'mediatek',
2025-09-16T23:45:54.732926Z	      '是否激活': true,
2025-09-16T23:45:54.733078Z	      '是否推荐': false
2025-09-16T23:45:54.733191Z	    },
2025-09-16T23:45:54.733298Z	    {
2025-09-16T23:45:54.733389Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-16T23:45:54.733478Z	      '名称': 'PI',
2025-09-16T23:45:54.733591Z	      slug: 'pi',
2025-09-16T23:45:54.734743Z	      '是否激活': true,
2025-09-16T23:45:54.734909Z	      '是否推荐': false
2025-09-16T23:45:54.735028Z	    },
2025-09-16T23:45:54.735133Z	    {
2025-09-16T23:45:54.735236Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-16T23:45:54.735337Z	      '名称': 'Qualcomm',
2025-09-16T23:45:54.73544Z	      slug: 'qualcomm',
2025-09-16T23:45:54.735638Z	      '是否激活': true,
2025-09-16T23:45:54.737402Z	      '是否推荐': true
2025-09-16T23:45:54.737572Z	    },
2025-09-16T23:45:54.737784Z	    {
2025-09-16T23:45:54.737911Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-16T23:45:54.738018Z	      '名称': 'Sanrex',
2025-09-16T23:45:54.738122Z	      slug: 'sanrex',
2025-09-16T23:45:54.738232Z	      '是否激活': true,
2025-09-16T23:45:54.738361Z	      '是否推荐': false
2025-09-16T23:45:54.738474Z	    },
2025-09-16T23:45:54.738586Z	    {
2025-09-16T23:45:54.738733Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-16T23:45:54.738854Z	      '名称': 'Semikron',
2025-09-16T23:45:54.738972Z	      slug: 'semikron',
2025-09-16T23:45:54.739093Z	      '是否激活': true,
2025-09-16T23:45:54.739203Z	      '是否推荐': true
2025-09-16T23:45:54.739347Z	    },
2025-09-16T23:45:54.739472Z	    {
2025-09-16T23:45:54.739573Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-16T23:45:54.739757Z	      '名称': 'ncc',
2025-09-16T23:45:54.739943Z	      slug: 'ncc',
2025-09-16T23:45:54.740094Z	      '是否激活': true,
2025-09-16T23:45:54.740207Z	      '是否推荐': false
2025-09-16T23:45:54.740319Z	    },
2025-09-16T23:45:54.740426Z	    {
2025-09-16T23:45:54.740624Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-16T23:45:54.740827Z	      '名称': '英飞凌',
2025-09-16T23:45:54.740955Z	      slug: '英飞凌',
2025-09-16T23:45:54.74107Z	      '是否激活': true,
2025-09-16T23:45:54.741177Z	      '是否推荐': true
2025-09-16T23:45:54.74128Z	    }
2025-09-16T23:45:54.741643Z	  ]
2025-09-16T23:45:54.741804Z	}
2025-09-16T23:45:54.742122Z	📊 品牌查询结果: {
2025-09-16T23:45:54.742464Z	  '数量': 13,
2025-09-16T23:45:54.742788Z	  '品牌列表': [
2025-09-16T23:45:54.743328Z	    {
2025-09-16T23:45:54.743542Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:45:54.743664Z	      '名称': 'CREE',
2025-09-16T23:45:54.743816Z	      slug: 'cree',
2025-09-16T23:45:54.743965Z	      '是否激活': true,
2025-09-16T23:45:54.744096Z	      '是否推荐': false
2025-09-16T23:45:54.744252Z	    },
2025-09-16T23:45:54.744401Z	    {
2025-09-16T23:45:54.74461Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-16T23:45:54.744819Z	      '名称': 'Electronicon',
2025-09-16T23:45:54.744945Z	      slug: 'Electronicon',
2025-09-16T23:45:54.745058Z	      '是否激活': true,
2025-09-16T23:45:54.745172Z	      '是否推荐': false
2025-09-16T23:45:54.745312Z	    },
2025-09-16T23:45:54.745437Z	    {
2025-09-16T23:45:54.745538Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-16T23:45:54.745633Z	      '名称': 'Epcos',
2025-09-16T23:45:54.745756Z	      slug: 'epcos',
2025-09-16T23:45:54.745898Z	      '是否激活': true,
2025-09-16T23:45:54.746086Z	      '是否推荐': false
2025-09-16T23:45:54.746341Z	    },
2025-09-16T23:45:54.746565Z	    {
2025-09-16T23:45:54.746746Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:45:54.747056Z	      '名称': 'IXYS',
2025-09-16T23:45:54.747231Z	      slug: 'ixys',
2025-09-16T23:45:54.747611Z	      '是否激活': true,
2025-09-16T23:45:54.747829Z	      '是否推荐': false
2025-09-16T23:45:54.748Z	    },
2025-09-16T23:45:54.74817Z	    {
2025-09-16T23:45:54.74829Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-16T23:45:54.748412Z	      '名称': 'LEM',
2025-09-16T23:45:54.748517Z	      slug: 'lem',
2025-09-16T23:45:54.748668Z	      '是否激活': true,
2025-09-16T23:45:54.748852Z	      '是否推荐': false
2025-09-16T23:45:54.748978Z	    },
2025-09-16T23:45:54.749088Z	    {
2025-09-16T23:45:54.749194Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-16T23:45:54.749296Z	      '名称': 'Littelfuse',
2025-09-16T23:45:54.749406Z	      slug: 'littelfuse',
2025-09-16T23:45:54.749512Z	      '是否激活': true,
2025-09-16T23:45:54.749622Z	      '是否推荐': false
2025-09-16T23:45:54.749799Z	    },
2025-09-16T23:45:54.749916Z	    {
2025-09-16T23:45:54.750033Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-16T23:45:54.750144Z	      '名称': 'MediaTek',
2025-09-16T23:45:54.750247Z	      slug: 'mediatek',
2025-09-16T23:45:54.750354Z	      '是否激活': true,
2025-09-16T23:45:54.750472Z	      '是否推荐': false
2025-09-16T23:45:54.750575Z	    },
2025-09-16T23:45:54.750692Z	    {
2025-09-16T23:45:54.750802Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-16T23:45:54.750903Z	      '名称': 'PI',
2025-09-16T23:45:54.751018Z	      slug: 'pi',
2025-09-16T23:45:54.751121Z	      '是否激活': true,
2025-09-16T23:45:54.751223Z	      '是否推荐': false
2025-09-16T23:45:54.751327Z	    },
2025-09-16T23:45:54.751453Z	    {
2025-09-16T23:45:54.75156Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-16T23:45:54.75167Z	      '名称': 'Qualcomm',
2025-09-16T23:45:54.751804Z	      slug: 'qualcomm',
2025-09-16T23:45:54.751911Z	      '是否激活': true,
2025-09-16T23:45:54.75203Z	      '是否推荐': true
2025-09-16T23:45:54.752139Z	    },
2025-09-16T23:45:54.752235Z	    {
2025-09-16T23:45:54.752339Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-16T23:45:54.752464Z	      '名称': 'Sanrex',
2025-09-16T23:45:54.752589Z	      slug: 'sanrex',
2025-09-16T23:45:54.752727Z	      '是否激活': true,
2025-09-16T23:45:54.752848Z	      '是否推荐': false
2025-09-16T23:45:54.752976Z	    },
2025-09-16T23:45:54.753089Z	    {
2025-09-16T23:45:54.7532Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-16T23:45:54.75331Z	      '名称': 'Semikron',
2025-09-16T23:45:54.753437Z	      slug: 'semikron',
2025-09-16T23:45:54.753569Z	      '是否激活': true,
2025-09-16T23:45:54.753701Z	      '是否推荐': true
2025-09-16T23:45:54.753826Z	    },
2025-09-16T23:45:54.753943Z	    {
2025-09-16T23:45:54.754051Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-16T23:45:54.754152Z	      '名称': 'ncc',
2025-09-16T23:45:54.754254Z	      slug: 'ncc',
2025-09-16T23:45:54.754367Z	      '是否激活': true,
2025-09-16T23:45:54.75448Z	      '是否推荐': false
2025-09-16T23:45:54.754589Z	    },
2025-09-16T23:45:54.754707Z	    {
2025-09-16T23:45:54.754807Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-16T23:45:54.754913Z	      '名称': '英飞凌',
2025-09-16T23:45:54.755008Z	      slug: '英飞凌',
2025-09-16T23:45:54.755097Z	      '是否激活': true,
2025-09-16T23:45:54.75519Z	      '是否推荐': true
2025-09-16T23:45:54.755285Z	    }
2025-09-16T23:45:54.755421Z	  ]
2025-09-16T23:45:54.755541Z	}
2025-09-16T23:45:54.755789Z	📊 品牌查询结果: {
2025-09-16T23:45:54.756073Z	  '数量': 13,
2025-09-16T23:45:54.756201Z	  '品牌列表': [
2025-09-16T23:45:54.756557Z	    {
2025-09-16T23:45:54.756906Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:45:54.757061Z	      '名称': 'CREE',
2025-09-16T23:45:54.757186Z	      slug: 'cree',
2025-09-16T23:45:54.757289Z	      '是否激活': true,
2025-09-16T23:45:54.75739Z	      '是否推荐': false
2025-09-16T23:45:54.757863Z	    },
2025-09-16T23:45:54.757993Z	    {
2025-09-16T23:45:54.758524Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-16T23:45:54.758875Z	      '名称': 'Electronicon',
2025-09-16T23:45:54.759199Z	      slug: 'Electronicon',
2025-09-16T23:45:54.75935Z	      '是否激活': true,
2025-09-16T23:45:54.759877Z	      '是否推荐': false
2025-09-16T23:45:54.760207Z	    },
2025-09-16T23:45:54.760536Z	    {
2025-09-16T23:45:54.760695Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-16T23:45:54.760815Z	      '名称': 'Epcos',
2025-09-16T23:45:54.760917Z	      slug: 'epcos',
2025-09-16T23:45:54.761017Z	      '是否激活': true,
2025-09-16T23:45:54.761113Z	      '是否推荐': false
2025-09-16T23:45:54.761206Z	    },
2025-09-16T23:45:54.761301Z	    {
2025-09-16T23:45:54.761396Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:45:54.761502Z	      '名称': 'IXYS',
2025-09-16T23:45:54.761597Z	      slug: 'ixys',
2025-09-16T23:45:54.761706Z	      '是否激活': true,
2025-09-16T23:45:54.761819Z	      '是否推荐': false
2025-09-16T23:45:54.761913Z	    },
2025-09-16T23:45:54.761998Z	    {
2025-09-16T23:45:54.762133Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-16T23:45:54.762305Z	      '名称': 'LEM',
2025-09-16T23:45:54.762431Z	      slug: 'lem',
2025-09-16T23:45:54.762538Z	      '是否激活': true,
2025-09-16T23:45:54.76265Z	      '是否推荐': false
2025-09-16T23:45:54.762779Z	    },
2025-09-16T23:45:54.762888Z	    {
2025-09-16T23:45:54.762991Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-16T23:45:54.763097Z	      '名称': 'Littelfuse',
2025-09-16T23:45:54.763197Z	      slug: 'littelfuse',
2025-09-16T23:45:54.76329Z	      '是否激活': true,
2025-09-16T23:45:54.763391Z	      '是否推荐': false
2025-09-16T23:45:54.763484Z	    },
2025-09-16T23:45:54.763584Z	    {
2025-09-16T23:45:54.763703Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-16T23:45:54.763806Z	      '名称': 'MediaTek',
2025-09-16T23:45:54.7639Z	      slug: 'mediatek',
2025-09-16T23:45:54.763991Z	      '是否激活': true,
2025-09-16T23:45:54.764083Z	      '是否推荐': false
2025-09-16T23:45:54.764177Z	    },
2025-09-16T23:45:54.764262Z	    {
2025-09-16T23:45:54.764363Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-16T23:45:54.764462Z	      '名称': 'PI',
2025-09-16T23:45:54.764552Z	      slug: 'pi',
2025-09-16T23:45:54.764657Z	      '是否激活': true,
2025-09-16T23:45:54.7648Z	      '是否推荐': false
2025-09-16T23:45:54.764911Z	    },
2025-09-16T23:45:54.765014Z	    {
2025-09-16T23:45:54.76511Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-16T23:45:54.765207Z	      '名称': 'Qualcomm',
2025-09-16T23:45:54.765315Z	      slug: 'qualcomm',
2025-09-16T23:45:54.765423Z	      '是否激活': true,
2025-09-16T23:45:54.765524Z	      '是否推荐': true
2025-09-16T23:45:54.765627Z	    },
2025-09-16T23:45:54.765754Z	    {
2025-09-16T23:45:54.76585Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-16T23:45:54.765939Z	      '名称': 'Sanrex',
2025-09-16T23:45:54.766029Z	      slug: 'sanrex',
2025-09-16T23:45:54.766128Z	      '是否激活': true,
2025-09-16T23:45:54.766222Z	      '是否推荐': false
2025-09-16T23:45:54.766314Z	    },
2025-09-16T23:45:54.7664Z	    {
2025-09-16T23:45:54.766491Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-16T23:45:54.766587Z	      '名称': 'Semikron',
2025-09-16T23:45:54.766718Z	      slug: 'semikron',
2025-09-16T23:45:54.766815Z	      '是否激活': true,
2025-09-16T23:45:54.766911Z	      '是否推荐': true
2025-09-16T23:45:54.767001Z	    },
2025-09-16T23:45:54.767089Z	    {
2025-09-16T23:45:54.767182Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-16T23:45:54.767277Z	      '名称': 'ncc',
2025-09-16T23:45:54.767376Z	      slug: 'ncc',
2025-09-16T23:45:54.767474Z	      '是否激活': true,
2025-09-16T23:45:54.767572Z	      '是否推荐': false
2025-09-16T23:45:54.767703Z	    },
2025-09-16T23:45:54.767817Z	    {
2025-09-16T23:45:54.767913Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-16T23:45:54.768008Z	      '名称': '英飞凌',
2025-09-16T23:45:54.768101Z	      slug: '英飞凌',
2025-09-16T23:45:54.76819Z	      '是否激活': true,
2025-09-16T23:45:54.768286Z	      '是否推荐': true
2025-09-16T23:45:54.768378Z	    }
2025-09-16T23:45:54.768472Z	  ]
2025-09-16T23:45:54.768565Z	}
2025-09-16T23:45:54.768666Z	📊 品牌查询结果: {
2025-09-16T23:45:54.768783Z	  '数量': 13,
2025-09-16T23:45:54.768878Z	  '品牌列表': [
2025-09-16T23:45:54.768976Z	    {
2025-09-16T23:45:54.76916Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:45:54.7694Z	      '名称': 'CREE',
2025-09-16T23:45:54.769581Z	      slug: 'cree',
2025-09-16T23:45:54.769778Z	      '是否激活': true,
2025-09-16T23:45:54.769944Z	      '是否推荐': false
2025-09-16T23:45:54.770276Z	    },
2025-09-16T23:45:54.770758Z	    {
2025-09-16T23:45:54.771117Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-16T23:45:54.771552Z	      '名称': 'Electronicon',
2025-09-16T23:45:54.775233Z	      slug: 'Electronicon',
2025-09-16T23:45:54.775478Z	      '是否激活': true,
2025-09-16T23:45:54.77561Z	      '是否推荐': false
2025-09-16T23:45:54.775748Z	    },
2025-09-16T23:45:54.775872Z	    {
2025-09-16T23:45:54.776013Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-16T23:45:54.77612Z	      '名称': 'Epcos',
2025-09-16T23:45:54.776226Z	      slug: 'epcos',
2025-09-16T23:45:54.776328Z	      '是否激活': true,
2025-09-16T23:45:54.776444Z	      '是否推荐': false
2025-09-16T23:45:54.776557Z	    },
2025-09-16T23:45:54.776657Z	    {
2025-09-16T23:45:54.776791Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:45:54.777113Z	      '名称': 'IXYS',
2025-09-16T23:45:54.777537Z	      slug: 'ixys',
2025-09-16T23:45:54.777942Z	      '是否激活': true,
2025-09-16T23:45:54.778072Z	      '是否推荐': false
2025-09-16T23:45:54.778588Z	    },
2025-09-16T23:45:54.779054Z	    {
2025-09-16T23:45:54.779216Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-16T23:45:54.779353Z	      '名称': 'LEM',
2025-09-16T23:45:54.779482Z	      slug: 'lem',
2025-09-16T23:45:54.779595Z	      '是否激活': true,
2025-09-16T23:45:54.779888Z	      '是否推荐': false
2025-09-16T23:45:54.780034Z	    },
2025-09-16T23:45:54.780385Z	    {
2025-09-16T23:45:54.780758Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-16T23:45:54.780872Z	      '名称': 'Littelfuse',
2025-09-16T23:45:54.781447Z	      slug: 'littelfuse',
2025-09-16T23:45:54.781574Z	      '是否激活': true,
2025-09-16T23:45:54.781847Z	      '是否推荐': false
2025-09-16T23:45:54.781976Z	    },
2025-09-16T23:45:54.782078Z	    {
2025-09-16T23:45:54.782182Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-16T23:45:54.78245Z	      '名称': 'MediaTek',
2025-09-16T23:45:54.782529Z	      slug: 'mediatek',
2025-09-16T23:45:54.782589Z	      '是否激活': true,
2025-09-16T23:45:54.782644Z	      '是否推荐': false
2025-09-16T23:45:54.782746Z	    },
2025-09-16T23:45:54.782811Z	    {
2025-09-16T23:45:54.782879Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-16T23:45:54.782946Z	      '名称': 'PI',
2025-09-16T23:45:54.783003Z	      slug: 'pi',
2025-09-16T23:45:54.783058Z	      '是否激活': true,
2025-09-16T23:45:54.783112Z	      '是否推荐': false
2025-09-16T23:45:54.783165Z	    },
2025-09-16T23:45:54.783224Z	    {
2025-09-16T23:45:54.783278Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-16T23:45:54.783336Z	      '名称': 'Qualcomm',
2025-09-16T23:45:54.78339Z	      slug: 'qualcomm',
2025-09-16T23:45:54.783443Z	      '是否激活': true,
2025-09-16T23:45:54.783497Z	      '是否推荐': true
2025-09-16T23:45:54.78355Z	    },
2025-09-16T23:45:54.783603Z	    {
2025-09-16T23:45:54.783657Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-16T23:45:54.783751Z	      '名称': 'Sanrex',
2025-09-16T23:45:54.78381Z	      slug: 'sanrex',
2025-09-16T23:45:54.783865Z	      '是否激活': true,
2025-09-16T23:45:54.783922Z	      '是否推荐': false
2025-09-16T23:45:54.783977Z	    },
2025-09-16T23:45:54.784033Z	    {
2025-09-16T23:45:54.784099Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-16T23:45:54.784154Z	      '名称': 'Semikron',
2025-09-16T23:45:54.784208Z	      slug: 'semikron',
2025-09-16T23:45:54.784265Z	      '是否激活': true,
2025-09-16T23:45:54.784321Z	      '是否推荐': true
2025-09-16T23:45:54.784379Z	    },
2025-09-16T23:45:54.784433Z	    {
2025-09-16T23:45:54.784487Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-16T23:45:54.784548Z	      '名称': 'ncc',
2025-09-16T23:45:54.784604Z	      slug: 'ncc',
2025-09-16T23:45:54.784658Z	      '是否激活': true,
2025-09-16T23:45:54.784734Z	      '是否推荐': false
2025-09-16T23:45:54.784794Z	    },
2025-09-16T23:45:54.784847Z	    {
2025-09-16T23:45:54.784901Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-16T23:45:54.784956Z	      '名称': '英飞凌',
2025-09-16T23:45:54.785011Z	      slug: '英飞凌',
2025-09-16T23:45:54.785067Z	      '是否激活': true,
2025-09-16T23:45:54.785121Z	      '是否推荐': true
2025-09-16T23:45:54.785175Z	    }
2025-09-16T23:45:54.785231Z	  ]
2025-09-16T23:45:54.785285Z	}
2025-09-16T23:45:54.785341Z	📊 品牌查询结果: {
2025-09-16T23:45:54.785397Z	  '数量': 13,
2025-09-16T23:45:54.785459Z	  '品牌列表': [
2025-09-16T23:45:54.785515Z	    {
2025-09-16T23:45:54.785569Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:45:54.785624Z	      '名称': 'CREE',
2025-09-16T23:45:54.824458Z	      slug: 'cree',
2025-09-16T23:45:54.82471Z	      '是否激活': true,
2025-09-16T23:45:54.825089Z	      '是否推荐': false
2025-09-16T23:45:54.825274Z	    },
2025-09-16T23:45:54.825415Z	    {
2025-09-16T23:45:54.825544Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-16T23:45:54.825666Z	      '名称': 'Electronicon',
2025-09-16T23:45:54.825801Z	      slug: 'Electronicon',
2025-09-16T23:45:54.825908Z	      '是否激活': true,
2025-09-16T23:45:54.826006Z	      '是否推荐': false
2025-09-16T23:45:54.826099Z	    },
2025-09-16T23:45:54.826193Z	    {
2025-09-16T23:45:54.826292Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-16T23:45:54.82642Z	      '名称': 'Epcos',
2025-09-16T23:45:54.826533Z	      slug: 'epcos',
2025-09-16T23:45:54.826754Z	      '是否激活': true,
2025-09-16T23:45:54.82689Z	      '是否推荐': false
2025-09-16T23:45:54.82699Z	    },
2025-09-16T23:45:54.827124Z	    {
2025-09-16T23:45:54.827248Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:45:54.827364Z	      '名称': 'IXYS',
2025-09-16T23:45:54.82753Z	      slug: 'ixys',
2025-09-16T23:45:54.827792Z	      '是否激活': true,
2025-09-16T23:45:54.827905Z	      '是否推荐': false
2025-09-16T23:45:54.82817Z	    },
2025-09-16T23:45:54.828289Z	    {
2025-09-16T23:45:54.828597Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-16T23:45:54.828855Z	      '名称': 'LEM',
2025-09-16T23:45:54.828938Z	      slug: 'lem',
2025-09-16T23:45:54.829115Z	      '是否激活': true,
2025-09-16T23:45:54.82933Z	      '是否推荐': false
2025-09-16T23:45:54.829404Z	    },
2025-09-16T23:45:54.829523Z	    {
2025-09-16T23:45:54.82971Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-16T23:45:54.829794Z	      '名称': 'Littelfuse',
2025-09-16T23:45:54.829854Z	      slug: 'littelfuse',
2025-09-16T23:45:54.829989Z	      '是否激活': true,
2025-09-16T23:45:54.830093Z	      '是否推荐': false
2025-09-16T23:45:54.830393Z	    },
2025-09-16T23:45:54.830476Z	    {
2025-09-16T23:45:54.830541Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-16T23:45:54.830883Z	      '名称': 'MediaTek',
2025-09-16T23:45:54.830978Z	      slug: 'mediatek',
2025-09-16T23:45:54.831195Z	      '是否激活': true,
2025-09-16T23:45:54.831288Z	      '是否推荐': false
2025-09-16T23:45:54.831497Z	    },
2025-09-16T23:45:54.831714Z	    {
2025-09-16T23:45:54.832026Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-16T23:45:54.832115Z	      '名称': 'PI',
2025-09-16T23:45:54.832213Z	      slug: 'pi',
2025-09-16T23:45:54.832516Z	      '是否激活': true,
2025-09-16T23:45:54.832692Z	      '是否推荐': false
2025-09-16T23:45:54.832786Z	    },
2025-09-16T23:45:54.832972Z	    {
2025-09-16T23:45:54.833082Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-16T23:45:54.833261Z	      '名称': 'Qualcomm',
2025-09-16T23:45:54.83347Z	      slug: 'qualcomm',
2025-09-16T23:45:54.833668Z	      '是否激活': true,
2025-09-16T23:45:54.833843Z	      '是否推荐': true
2025-09-16T23:45:54.834055Z	    },
2025-09-16T23:45:54.834154Z	    {
2025-09-16T23:45:54.834268Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-16T23:45:54.834385Z	      '名称': 'Sanrex',
2025-09-16T23:45:54.8345Z	      slug: 'sanrex',
2025-09-16T23:45:54.834664Z	      '是否激活': true,
2025-09-16T23:45:54.834812Z	      '是否推荐': false
2025-09-16T23:45:54.834956Z	    },
2025-09-16T23:45:54.835059Z	    {
2025-09-16T23:45:54.835193Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-16T23:45:54.835319Z	      '名称': 'Semikron',
2025-09-16T23:45:54.83546Z	      slug: 'semikron',
2025-09-16T23:45:54.835569Z	      '是否激活': true,
2025-09-16T23:45:54.835722Z	      '是否推荐': true
2025-09-16T23:45:54.835841Z	    },
2025-09-16T23:45:54.835949Z	    {
2025-09-16T23:45:54.83608Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-16T23:45:54.836168Z	      '名称': 'ncc',
2025-09-16T23:45:54.836285Z	      slug: 'ncc',
2025-09-16T23:45:54.83642Z	      '是否激活': true,
2025-09-16T23:45:54.836557Z	      '是否推荐': false
2025-09-16T23:45:54.83664Z	    },
2025-09-16T23:45:54.836746Z	    {
2025-09-16T23:45:54.836858Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-16T23:45:54.836966Z	      '名称': '英飞凌',
2025-09-16T23:45:54.837062Z	      slug: '英飞凌',
2025-09-16T23:45:54.83717Z	      '是否激活': true,
2025-09-16T23:45:54.837266Z	      '是否推荐': true
2025-09-16T23:45:54.837354Z	    }
2025-09-16T23:45:54.837431Z	  ]
2025-09-16T23:45:54.837521Z	}
2025-09-16T23:45:54.837628Z	📊 品牌查询结果: {
2025-09-16T23:45:54.83775Z	  '数量': 13,
2025-09-16T23:45:54.837858Z	  '品牌列表': [
2025-09-16T23:45:54.837962Z	    {
2025-09-16T23:45:54.838067Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:45:54.838176Z	      '名称': 'CREE',
2025-09-16T23:45:54.838274Z	      slug: 'cree',
2025-09-16T23:45:54.838385Z	      '是否激活': true,
2025-09-16T23:45:54.838485Z	      '是否推荐': false
2025-09-16T23:45:54.838576Z	    },
2025-09-16T23:45:54.838717Z	    {
2025-09-16T23:45:54.838821Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-16T23:45:54.838916Z	      '名称': 'Electronicon',
2025-09-16T23:45:54.839063Z	      slug: 'Electronicon',
2025-09-16T23:45:54.839165Z	      '是否激活': true,
2025-09-16T23:45:54.839279Z	      '是否推荐': false
2025-09-16T23:45:54.839387Z	    },
2025-09-16T23:45:54.839489Z	    {
2025-09-16T23:45:54.839554Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-16T23:45:54.839639Z	      '名称': 'Epcos',
2025-09-16T23:45:54.839801Z	      slug: 'epcos',
2025-09-16T23:45:54.839879Z	      '是否激活': true,
2025-09-16T23:45:54.839992Z	      '是否推荐': false
2025-09-16T23:45:54.840111Z	    },
2025-09-16T23:45:54.840235Z	    {
2025-09-16T23:45:54.840336Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:45:54.840452Z	      '名称': 'IXYS',
2025-09-16T23:45:54.840515Z	      slug: 'ixys',
2025-09-16T23:45:54.840577Z	      '是否激活': true,
2025-09-16T23:45:54.840636Z	      '是否推荐': false
2025-09-16T23:45:54.840824Z	    },
2025-09-16T23:45:54.84092Z	    {
2025-09-16T23:45:54.841038Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-16T23:45:54.84119Z	      '名称': 'LEM',
2025-09-16T23:45:54.841277Z	      slug: 'lem',
2025-09-16T23:45:54.841428Z	      '是否激活': true,
2025-09-16T23:45:54.841609Z	      '是否推荐': false
2025-09-16T23:45:54.841803Z	    },
2025-09-16T23:45:54.841972Z	    {
2025-09-16T23:45:54.842053Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-16T23:45:54.842197Z	      '名称': 'Littelfuse',
2025-09-16T23:45:54.842415Z	      slug: 'littelfuse',
2025-09-16T23:45:54.842602Z	      '是否激活': true,
2025-09-16T23:45:54.842797Z	      '是否推荐': false
2025-09-16T23:45:54.843024Z	    },
2025-09-16T23:45:54.843306Z	    {
2025-09-16T23:45:54.843402Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-16T23:45:54.843644Z	      '名称': 'MediaTek',
2025-09-16T23:45:54.843771Z	      slug: 'mediatek',
2025-09-16T23:45:54.843876Z	      '是否激活': true,
2025-09-16T23:45:54.843978Z	      '是否推荐': false
2025-09-16T23:45:54.844077Z	    },
2025-09-16T23:45:54.844173Z	    {
2025-09-16T23:45:54.844243Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-16T23:45:54.844314Z	      '名称': 'PI',
2025-09-16T23:45:54.844427Z	      slug: 'pi',
2025-09-16T23:45:54.844529Z	      '是否激活': true,
2025-09-16T23:45:54.844652Z	      '是否推荐': false
2025-09-16T23:45:54.844776Z	    },
2025-09-16T23:45:54.844887Z	    {
2025-09-16T23:45:54.844992Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-16T23:45:54.845114Z	      '名称': 'Qualcomm',
2025-09-16T23:45:54.845237Z	      slug: 'qualcomm',
2025-09-16T23:45:54.845353Z	      '是否激活': true,
2025-09-16T23:45:54.845419Z	      '是否推荐': true
2025-09-16T23:45:54.845474Z	    },
2025-09-16T23:45:54.845527Z	    {
2025-09-16T23:45:54.84581Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-16T23:45:54.845947Z	      '名称': 'Sanrex',
2025-09-16T23:45:54.846072Z	      slug: 'sanrex',
2025-09-16T23:45:54.84618Z	      '是否激活': true,
2025-09-16T23:45:54.846295Z	      '是否推荐': false
2025-09-16T23:45:54.84644Z	    },
2025-09-16T23:45:54.846552Z	    {
2025-09-16T23:45:54.846865Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-16T23:45:54.847035Z	      '名称': 'Semikron',
2025-09-16T23:45:54.847211Z	      slug: 'semikron',
2025-09-16T23:45:54.847377Z	      '是否激活': true,
2025-09-16T23:45:54.847483Z	      '是否推荐': true
2025-09-16T23:45:54.847706Z	    },
2025-09-16T23:45:54.847801Z	    {
2025-09-16T23:45:54.847943Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-16T23:45:54.848051Z	      '名称': 'ncc',
2025-09-16T23:45:54.848201Z	      slug: 'ncc',
2025-09-16T23:45:54.848312Z	      '是否激活': true,
2025-09-16T23:45:54.848498Z	      '是否推荐': false
2025-09-16T23:45:54.848637Z	    },
2025-09-16T23:45:54.848812Z	    {
2025-09-16T23:45:54.848964Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-16T23:45:54.84915Z	      '名称': '英飞凌',
2025-09-16T23:45:54.849252Z	      slug: '英飞凌',
2025-09-16T23:45:54.849349Z	      '是否激活': true,
2025-09-16T23:45:54.849467Z	      '是否推荐': true
2025-09-16T23:45:54.849589Z	    }
2025-09-16T23:45:54.849725Z	  ]
2025-09-16T23:45:54.849869Z	}
2025-09-16T23:45:54.850016Z	📊 品牌查询结果: {
2025-09-16T23:45:54.850148Z	  '数量': 13,
2025-09-16T23:45:54.850466Z	  '品牌列表': [
2025-09-16T23:45:54.850544Z	    {
2025-09-16T23:45:54.850602Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:45:54.850729Z	      '名称': 'CREE',
2025-09-16T23:45:54.850923Z	      slug: 'cree',
2025-09-16T23:45:54.851016Z	      '是否激活': true,
2025-09-16T23:45:54.851117Z	      '是否推荐': false
2025-09-16T23:45:54.851264Z	    },
2025-09-16T23:45:54.851403Z	    {
2025-09-16T23:45:54.851503Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-16T23:45:54.851611Z	      '名称': 'Electronicon',
2025-09-16T23:45:54.851747Z	      slug: 'Electronicon',
2025-09-16T23:45:54.852159Z	      '是否激活': true,
2025-09-16T23:45:54.852442Z	      '是否推荐': false
2025-09-16T23:45:54.852748Z	    },
2025-09-16T23:45:54.853026Z	    {
2025-09-16T23:45:54.853193Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-16T23:45:54.85333Z	      '名称': 'Epcos',
2025-09-16T23:45:54.85347Z	      slug: 'epcos',
2025-09-16T23:45:54.853624Z	      '是否激活': true,
2025-09-16T23:45:54.853783Z	      '是否推荐': false
2025-09-16T23:45:54.853879Z	    },
2025-09-16T23:45:54.854082Z	    {
2025-09-16T23:45:54.854163Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:45:54.85422Z	      '名称': 'IXYS',
2025-09-16T23:45:54.854275Z	      slug: 'ixys',
2025-09-16T23:45:54.854329Z	      '是否激活': true,
2025-09-16T23:45:54.85461Z	      '是否推荐': false
2025-09-16T23:45:54.854797Z	    },
2025-09-16T23:45:54.854906Z	    {
2025-09-16T23:45:54.855023Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-16T23:45:54.855191Z	      '名称': 'LEM',
2025-09-16T23:45:54.855383Z	      slug: 'lem',
2025-09-16T23:45:54.85551Z	      '是否激活': true,
2025-09-16T23:45:54.855874Z	      '是否推荐': false
2025-09-16T23:45:54.856105Z	    },
2025-09-16T23:45:54.856204Z	    {
2025-09-16T23:45:54.856328Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-16T23:45:54.856481Z	      '名称': 'Littelfuse',
2025-09-16T23:45:54.856618Z	      slug: 'littelfuse',
2025-09-16T23:45:54.856817Z	      '是否激活': true,
2025-09-16T23:45:54.856954Z	      '是否推荐': false
2025-09-16T23:45:54.857054Z	    },
2025-09-16T23:45:54.857224Z	    {
2025-09-16T23:45:54.857394Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-16T23:45:54.857698Z	      '名称': 'MediaTek',
2025-09-16T23:45:54.857899Z	      slug: 'mediatek',
2025-09-16T23:45:54.858168Z	      '是否激活': true,
2025-09-16T23:45:54.858287Z	      '是否推荐': false
2025-09-16T23:45:54.858393Z	    },
2025-09-16T23:45:54.858487Z	    {
2025-09-16T23:45:54.858559Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-16T23:45:54.858631Z	      '名称': 'PI',
2025-09-16T23:45:54.858795Z	      slug: 'pi',
2025-09-16T23:45:54.858948Z	      '是否激活': true,
2025-09-16T23:45:54.859059Z	      '是否推荐': false
2025-09-16T23:45:54.859211Z	    },
2025-09-16T23:45:54.859361Z	    {
2025-09-16T23:45:54.859451Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-16T23:45:54.859589Z	      '名称': 'Qualcomm',
2025-09-16T23:45:54.859698Z	      slug: 'qualcomm',
2025-09-16T23:45:54.860103Z	      '是否激活': true,
2025-09-16T23:45:54.8602Z	      '是否推荐': true
2025-09-16T23:45:54.860345Z	    },
2025-09-16T23:45:54.860645Z	    {
2025-09-16T23:45:54.860858Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-16T23:45:54.86102Z	      '名称': 'Sanrex',
2025-09-16T23:45:54.861321Z	      slug: 'sanrex',
2025-09-16T23:45:54.861498Z	      '是否激活': true,
2025-09-16T23:45:54.861606Z	      '是否推荐': false
2025-09-16T23:45:54.861757Z	    },
2025-09-16T23:45:54.861919Z	    {
2025-09-16T23:45:54.862017Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-16T23:45:54.862129Z	      '名称': 'Semikron',
2025-09-16T23:45:54.862335Z	      slug: 'semikron',
2025-09-16T23:45:54.862497Z	      '是否激活': true,
2025-09-16T23:45:54.862585Z	      '是否推荐': true
2025-09-16T23:45:54.862758Z	    },
2025-09-16T23:45:54.862996Z	    {
2025-09-16T23:45:54.863137Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-16T23:45:54.863246Z	      '名称': 'ncc',
2025-09-16T23:45:54.863484Z	      slug: 'ncc',
2025-09-16T23:45:54.86365Z	      '是否激活': true,
2025-09-16T23:45:54.863829Z	      '是否推荐': false
2025-09-16T23:45:54.864004Z	    },
2025-09-16T23:45:54.864151Z	    {
2025-09-16T23:45:54.864252Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-16T23:45:54.864425Z	      '名称': '英飞凌',
2025-09-16T23:45:54.864499Z	      slug: '英飞凌',
2025-09-16T23:45:54.864606Z	      '是否激活': true,
2025-09-16T23:45:54.864743Z	      '是否推荐': true
2025-09-16T23:45:54.864906Z	    }
2025-09-16T23:45:54.865077Z	  ]
2025-09-16T23:45:54.865229Z	}
2025-09-16T23:45:54.865354Z	📊 品牌查询结果: {
2025-09-16T23:45:54.86563Z	  '数量': 13,
2025-09-16T23:45:54.865791Z	  '品牌列表': [
2025-09-16T23:45:54.865929Z	    {
2025-09-16T23:45:54.866115Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:45:54.866206Z	      '名称': 'CREE',
2025-09-16T23:45:54.866327Z	      slug: 'cree',
2025-09-16T23:45:54.86662Z	      '是否激活': true,
2025-09-16T23:45:54.8669Z	      '是否推荐': false
2025-09-16T23:45:54.866997Z	    },
2025-09-16T23:45:54.867259Z	    {
2025-09-16T23:45:54.867419Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-16T23:45:54.867536Z	      '名称': 'Electronicon',
2025-09-16T23:45:54.867639Z	      slug: 'Electronicon',
2025-09-16T23:45:54.867778Z	      '是否激活': true,
2025-09-16T23:45:54.867885Z	      '是否推荐': false
2025-09-16T23:45:54.867963Z	    },
2025-09-16T23:45:54.868334Z	    {
2025-09-16T23:45:54.868457Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-16T23:45:54.868565Z	      '名称': 'Epcos',
2025-09-16T23:45:54.86873Z	      slug: 'epcos',
2025-09-16T23:45:54.868866Z	      '是否激活': true,
2025-09-16T23:45:54.868976Z	      '是否推荐': false
2025-09-16T23:45:54.869073Z	    },
2025-09-16T23:45:54.869171Z	    {
2025-09-16T23:45:54.869305Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:45:54.869778Z	      '名称': 'IXYS',
2025-09-16T23:45:54.8699Z	      slug: 'ixys',
2025-09-16T23:45:54.870051Z	      '是否激活': true,
2025-09-16T23:45:54.878207Z	      '是否推荐': false
2025-09-16T23:45:54.878958Z	    },
2025-09-16T23:45:54.879085Z	    {
2025-09-16T23:45:54.879181Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-16T23:45:54.879289Z	      '名称': 'LEM',
2025-09-16T23:45:54.8794Z	      slug: 'lem',
2025-09-16T23:45:54.879504Z	      '是否激活': true,
2025-09-16T23:45:54.879779Z	      '是否推荐': false
2025-09-16T23:45:54.880013Z	    },
2025-09-16T23:45:54.880143Z	    {
2025-09-16T23:45:54.880264Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-16T23:45:54.880369Z	      '名称': 'Littelfuse',
2025-09-16T23:45:54.880481Z	      slug: 'littelfuse',
2025-09-16T23:45:54.880594Z	      '是否激活': true,
2025-09-16T23:45:54.880774Z	      '是否推荐': false
2025-09-16T23:45:54.880902Z	    },
2025-09-16T23:45:54.881042Z	    {
2025-09-16T23:45:54.88116Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-16T23:45:54.881308Z	      '名称': 'MediaTek',
2025-09-16T23:45:54.881531Z	      slug: 'mediatek',
2025-09-16T23:45:54.881689Z	      '是否激活': true,
2025-09-16T23:45:54.88192Z	      '是否推荐': false
2025-09-16T23:45:54.882054Z	    },
2025-09-16T23:45:54.882158Z	    {
2025-09-16T23:45:54.882245Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-16T23:45:54.882334Z	      '名称': 'PI',
2025-09-16T23:45:54.882424Z	      slug: 'pi',
2025-09-16T23:45:54.882514Z	      '是否激活': true,
2025-09-16T23:45:54.882626Z	      '是否推荐': false
2025-09-16T23:45:54.882756Z	    },
2025-09-16T23:45:54.882853Z	    {
2025-09-16T23:45:54.882945Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-16T23:45:54.883037Z	      '名称': 'Qualcomm',
2025-09-16T23:45:54.883138Z	      slug: 'qualcomm',
2025-09-16T23:45:54.88324Z	      '是否激活': true,
2025-09-16T23:45:54.883342Z	      '是否推荐': true
2025-09-16T23:45:54.883436Z	    },
2025-09-16T23:45:54.883887Z	    {
2025-09-16T23:45:54.88442Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-16T23:45:54.884568Z	      '名称': 'Sanrex',
2025-09-16T23:45:54.884726Z	      slug: 'sanrex',
2025-09-16T23:45:54.884849Z	      '是否激活': true,
2025-09-16T23:45:54.884961Z	      '是否推荐': false
2025-09-16T23:45:54.885067Z	    },
2025-09-16T23:45:54.885491Z	    {
2025-09-16T23:45:54.885621Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-16T23:45:54.885955Z	      '名称': 'Semikron',
2025-09-16T23:45:54.886058Z	      slug: 'semikron',
2025-09-16T23:45:54.887251Z	      '是否激活': true,
2025-09-16T23:45:54.887381Z	      '是否推荐': true
2025-09-16T23:45:54.888097Z	    },
2025-09-16T23:45:54.888228Z	    {
2025-09-16T23:45:54.88833Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-16T23:45:54.888433Z	      '名称': 'ncc',
2025-09-16T23:45:54.888535Z	      slug: 'ncc',
2025-09-16T23:45:54.88867Z	      '是否激活': true,
2025-09-16T23:45:54.889234Z	      '是否推荐': false
2025-09-16T23:45:54.889414Z	    },
2025-09-16T23:45:54.889535Z	    {
2025-09-16T23:45:54.889654Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-16T23:45:54.889829Z	      '名称': '英飞凌',
2025-09-16T23:45:54.889945Z	      slug: '英飞凌',
2025-09-16T23:45:54.890047Z	      '是否激活': true,
2025-09-16T23:45:54.890138Z	      '是否推荐': true
2025-09-16T23:45:54.890239Z	    }
2025-09-16T23:45:54.890345Z	  ]
2025-09-16T23:45:54.890439Z	}
2025-09-16T23:45:54.890543Z	📊 品牌查询结果: {
2025-09-16T23:45:54.890645Z	  '数量': 13,
2025-09-16T23:45:54.890773Z	  '品牌列表': [
2025-09-16T23:45:54.890877Z	    {
2025-09-16T23:45:54.89099Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:45:54.891097Z	      '名称': 'CREE',
2025-09-16T23:45:54.891198Z	      slug: 'cree',
2025-09-16T23:45:54.891296Z	      '是否激活': true,
2025-09-16T23:45:54.8914Z	      '是否推荐': false
2025-09-16T23:45:54.891505Z	    },
2025-09-16T23:45:54.891617Z	    {
2025-09-16T23:45:54.891738Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-16T23:45:54.891836Z	      '名称': 'Electronicon',
2025-09-16T23:45:54.891949Z	      slug: 'Electronicon',
2025-09-16T23:45:54.892069Z	      '是否激活': true,
2025-09-16T23:45:54.892168Z	      '是否推荐': false
2025-09-16T23:45:54.892272Z	    },
2025-09-16T23:45:54.892371Z	    {
2025-09-16T23:45:54.892477Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-16T23:45:54.892578Z	      '名称': 'Epcos',
2025-09-16T23:45:54.892745Z	      slug: 'epcos',
2025-09-16T23:45:54.89286Z	      '是否激活': true,
2025-09-16T23:45:54.893024Z	      '是否推荐': false
2025-09-16T23:45:54.893129Z	    },
2025-09-16T23:45:54.893228Z	    {
2025-09-16T23:45:54.893317Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:45:54.893408Z	      '名称': 'IXYS',
2025-09-16T23:45:54.893498Z	      slug: 'ixys',
2025-09-16T23:45:54.893586Z	      '是否激活': true,
2025-09-16T23:45:54.893669Z	      '是否推荐': false
2025-09-16T23:45:54.8938Z	    },
2025-09-16T23:45:54.893903Z	    {
2025-09-16T23:45:54.893988Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-16T23:45:54.894081Z	      '名称': 'LEM',
2025-09-16T23:45:54.89417Z	      slug: 'lem',
2025-09-16T23:45:54.894254Z	      '是否激活': true,
2025-09-16T23:45:54.894353Z	      '是否推荐': false
2025-09-16T23:45:54.894444Z	    },
2025-09-16T23:45:54.894534Z	    {
2025-09-16T23:45:54.894631Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-16T23:45:54.894755Z	      '名称': 'Littelfuse',
2025-09-16T23:45:54.894853Z	      slug: 'littelfuse',
2025-09-16T23:45:54.894962Z	      '是否激活': true,
2025-09-16T23:45:54.895067Z	      '是否推荐': false
2025-09-16T23:45:54.895164Z	    },
2025-09-16T23:45:54.895267Z	    {
2025-09-16T23:45:54.895381Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-16T23:45:54.895478Z	      '名称': 'MediaTek',
2025-09-16T23:45:54.895582Z	      slug: 'mediatek',
2025-09-16T23:45:54.895698Z	      '是否激活': true,
2025-09-16T23:45:54.895802Z	      '是否推荐': false
2025-09-16T23:45:54.895906Z	    },
2025-09-16T23:45:54.896015Z	    {
2025-09-16T23:45:54.896197Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-16T23:45:54.896529Z	      '名称': 'PI',
2025-09-16T23:45:54.896718Z	      slug: 'pi',
2025-09-16T23:45:54.896889Z	      '是否激活': true,
2025-09-16T23:45:54.897025Z	      '是否推荐': false
2025-09-16T23:45:54.897165Z	    },
2025-09-16T23:45:54.897328Z	    {
2025-09-16T23:45:54.897814Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-16T23:45:54.898004Z	      '名称': 'Qualcomm',
2025-09-16T23:45:54.898465Z	      slug: 'qualcomm',
2025-09-16T23:45:54.898938Z	      '是否激活': true,
2025-09-16T23:45:54.899446Z	      '是否推荐': true
2025-09-16T23:45:54.899924Z	    },
2025-09-16T23:45:54.900292Z	    {
2025-09-16T23:45:54.905467Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-16T23:45:54.905619Z	      '名称': 'Sanrex',
2025-09-16T23:45:54.905724Z	      slug: 'sanrex',
2025-09-16T23:45:54.905792Z	      '是否激活': true,
2025-09-16T23:45:54.905851Z	      '是否推荐': false
2025-09-16T23:45:54.905907Z	    },
2025-09-16T23:45:54.905961Z	    {
2025-09-16T23:45:54.906014Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-16T23:45:54.906068Z	      '名称': 'Semikron',
2025-09-16T23:45:54.906122Z	      slug: 'semikron',
2025-09-16T23:45:54.906178Z	      '是否激活': true,
2025-09-16T23:45:54.906232Z	      '是否推荐': true
2025-09-16T23:45:54.906286Z	    },
2025-09-16T23:45:54.906339Z	    {
2025-09-16T23:45:54.906391Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-16T23:45:54.906451Z	      '名称': 'ncc',
2025-09-16T23:45:54.906509Z	      slug: 'ncc',
2025-09-16T23:45:54.906565Z	      '是否激活': true,
2025-09-16T23:45:54.906629Z	      '是否推荐': false
2025-09-16T23:45:54.92574Z	    },
2025-09-16T23:45:54.926611Z	    {
2025-09-16T23:45:54.926882Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-16T23:45:54.92712Z	      '名称': '英飞凌',
2025-09-16T23:45:54.927253Z	      slug: '英飞凌',
2025-09-16T23:45:54.927394Z	      '是否激活': true,
2025-09-16T23:45:54.927531Z	      '是否推荐': true
2025-09-16T23:45:54.927658Z	    }
2025-09-16T23:45:54.927841Z	  ]
2025-09-16T23:45:54.92798Z	}
2025-09-16T23:45:54.928114Z	📊 品牌查询结果: {
2025-09-16T23:45:54.928232Z	  '数量': 13,
2025-09-16T23:45:54.928363Z	  '品牌列表': [
2025-09-16T23:45:54.928488Z	    {
2025-09-16T23:45:54.928632Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:45:54.928949Z	      '名称': 'CREE',
2025-09-16T23:45:54.929081Z	      slug: 'cree',
2025-09-16T23:45:54.92923Z	      '是否激活': true,
2025-09-16T23:45:54.92937Z	      '是否推荐': false
2025-09-16T23:45:54.929511Z	    },
2025-09-16T23:45:54.929638Z	    {
2025-09-16T23:45:54.930294Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-16T23:45:54.930475Z	      '名称': 'Electronicon',
2025-09-16T23:45:54.930623Z	      slug: 'Electronicon',
2025-09-16T23:45:54.930786Z	      '是否激活': true,
2025-09-16T23:45:54.930927Z	      '是否推荐': false
2025-09-16T23:45:54.93106Z	    },
2025-09-16T23:45:54.931204Z	    {
2025-09-16T23:45:54.931341Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-16T23:45:54.931459Z	      '名称': 'Epcos',
2025-09-16T23:45:54.931609Z	      slug: 'epcos',
2025-09-16T23:45:54.93179Z	      '是否激活': true,
2025-09-16T23:45:54.931917Z	      '是否推荐': false
2025-09-16T23:45:54.932065Z	    },
2025-09-16T23:45:54.932202Z	    {
2025-09-16T23:45:54.933707Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:45:54.93387Z	      '名称': 'IXYS',
2025-09-16T23:45:54.933978Z	      slug: 'ixys',
2025-09-16T23:45:54.934372Z	      '是否激活': true,
2025-09-16T23:45:54.934488Z	      '是否推荐': false
2025-09-16T23:45:54.93458Z	    },
2025-09-16T23:45:54.935362Z	    {
2025-09-16T23:45:54.935729Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-16T23:45:54.936041Z	      '名称': 'LEM',
2025-09-16T23:45:54.936408Z	      slug: 'lem',
2025-09-16T23:45:54.936775Z	      '是否激活': true,
2025-09-16T23:45:54.936895Z	      '是否推荐': false
2025-09-16T23:45:54.937396Z	    },
2025-09-16T23:45:54.937721Z	    {
2025-09-16T23:45:54.938046Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-16T23:45:54.938166Z	      '名称': 'Littelfuse',
2025-09-16T23:45:54.938503Z	      slug: 'littelfuse',
2025-09-16T23:45:54.938638Z	      '是否激活': true,
2025-09-16T23:45:54.93877Z	      '是否推荐': false
2025-09-16T23:45:54.9389Z	    },
2025-09-16T23:45:54.939005Z	    {
2025-09-16T23:45:54.939102Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-16T23:45:54.939204Z	      '名称': 'MediaTek',
2025-09-16T23:45:54.939327Z	      slug: 'mediatek',
2025-09-16T23:45:54.939431Z	      '是否激活': true,
2025-09-16T23:45:54.939551Z	      '是否推荐': false
2025-09-16T23:45:54.939654Z	    },
2025-09-16T23:45:54.939784Z	    {
2025-09-16T23:45:54.939931Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-16T23:45:54.940101Z	      '名称': 'PI',
2025-09-16T23:45:54.940227Z	      slug: 'pi',
2025-09-16T23:45:54.940344Z	      '是否激活': true,
2025-09-16T23:45:54.940479Z	      '是否推荐': false
2025-09-16T23:45:54.940606Z	    },
2025-09-16T23:45:54.940754Z	    {
2025-09-16T23:45:54.940863Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-16T23:45:54.940959Z	      '名称': 'Qualcomm',
2025-09-16T23:45:54.941054Z	      slug: 'qualcomm',
2025-09-16T23:45:54.941156Z	      '是否激活': true,
2025-09-16T23:45:54.941258Z	      '是否推荐': true
2025-09-16T23:45:54.941358Z	    },
2025-09-16T23:45:54.941504Z	    {
2025-09-16T23:45:54.941609Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-16T23:45:54.941728Z	      '名称': 'Sanrex',
2025-09-16T23:45:54.941836Z	      slug: 'sanrex',
2025-09-16T23:45:54.941948Z	      '是否激活': true,
2025-09-16T23:45:54.942052Z	      '是否推荐': false
2025-09-16T23:45:54.942153Z	    },
2025-09-16T23:45:54.942253Z	    {
2025-09-16T23:45:54.942352Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-16T23:45:54.942474Z	      '名称': 'Semikron',
2025-09-16T23:45:54.942584Z	      slug: 'semikron',
2025-09-16T23:45:54.942714Z	      '是否激活': true,
2025-09-16T23:45:54.942846Z	      '是否推荐': true
2025-09-16T23:45:54.942953Z	    },
2025-09-16T23:45:54.943056Z	    {
2025-09-16T23:45:54.943177Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-16T23:45:54.943295Z	      '名称': 'ncc',
2025-09-16T23:45:54.943408Z	      slug: 'ncc',
2025-09-16T23:45:54.943517Z	      '是否激活': true,
2025-09-16T23:45:54.943624Z	      '是否推荐': false
2025-09-16T23:45:54.943764Z	    },
2025-09-16T23:45:54.943876Z	    {
2025-09-16T23:45:54.943982Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-16T23:45:54.944089Z	      '名称': '英飞凌',
2025-09-16T23:45:54.944188Z	      slug: '英飞凌',
2025-09-16T23:45:54.944283Z	      '是否激活': true,
2025-09-16T23:45:54.944387Z	      '是否推荐': true
2025-09-16T23:45:54.944487Z	    }
2025-09-16T23:45:54.944583Z	  ]
2025-09-16T23:45:54.944712Z	}
2025-09-16T23:45:54.944819Z	📊 品牌查询结果: {
2025-09-16T23:45:54.944926Z	  '数量': 13,
2025-09-16T23:45:54.945034Z	  '品牌列表': [
2025-09-16T23:45:54.945136Z	    {
2025-09-16T23:45:54.945235Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:45:54.94534Z	      '名称': 'CREE',
2025-09-16T23:45:54.945461Z	      slug: 'cree',
2025-09-16T23:45:54.945565Z	      '是否激活': true,
2025-09-16T23:45:54.945711Z	      '是否推荐': false
2025-09-16T23:45:54.945822Z	    },
2025-09-16T23:45:54.945919Z	    {
2025-09-16T23:45:54.946015Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-16T23:45:54.946115Z	      '名称': 'Electronicon',
2025-09-16T23:45:54.946214Z	      slug: 'Electronicon',
2025-09-16T23:45:54.946327Z	      '是否激活': true,
2025-09-16T23:45:54.946455Z	      '是否推荐': false
2025-09-16T23:45:54.946561Z	    },
2025-09-16T23:45:54.946668Z	    {
2025-09-16T23:45:54.946823Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-16T23:45:54.946932Z	      '名称': 'Epcos',
2025-09-16T23:45:54.947036Z	      slug: 'epcos',
2025-09-16T23:45:54.947144Z	      '是否激活': true,
2025-09-16T23:45:54.94726Z	      '是否推荐': false
2025-09-16T23:45:54.947443Z	    },
2025-09-16T23:45:54.947599Z	    {
2025-09-16T23:45:54.947737Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:45:54.947849Z	      '名称': 'IXYS',
2025-09-16T23:45:54.947959Z	      slug: 'ixys',
2025-09-16T23:45:54.948058Z	      '是否激活': true,
2025-09-16T23:45:54.948153Z	      '是否推荐': false
2025-09-16T23:45:54.948554Z	    },
2025-09-16T23:45:54.948756Z	    {
2025-09-16T23:45:54.948865Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-16T23:45:54.948971Z	      '名称': 'LEM',
2025-09-16T23:45:54.949068Z	      slug: 'lem',
2025-09-16T23:45:54.949158Z	      '是否激活': true,
2025-09-16T23:45:54.949632Z	      '是否推荐': false
2025-09-16T23:45:54.949782Z	    },
2025-09-16T23:45:54.94991Z	    {
2025-09-16T23:45:54.950021Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-16T23:45:54.950121Z	      '名称': 'Littelfuse',
2025-09-16T23:45:54.950216Z	      slug: 'littelfuse',
2025-09-16T23:45:54.950309Z	      '是否激活': true,
2025-09-16T23:45:54.950402Z	      '是否推荐': false
2025-09-16T23:45:54.950498Z	    },
2025-09-16T23:45:54.950597Z	    {
2025-09-16T23:45:54.95088Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-16T23:45:54.951086Z	      '名称': 'MediaTek',
2025-09-16T23:45:54.951412Z	      slug: 'mediatek',
2025-09-16T23:45:54.951957Z	      '是否激活': true,
2025-09-16T23:45:54.952119Z	      '是否推荐': false
2025-09-16T23:45:54.952256Z	    },
2025-09-16T23:45:54.95239Z	    {
2025-09-16T23:45:54.952513Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-16T23:45:54.952661Z	      '名称': 'PI',
2025-09-16T23:45:54.952822Z	      slug: 'pi',
2025-09-16T23:45:54.952962Z	      '是否激活': true,
2025-09-16T23:45:54.953087Z	      '是否推荐': false
2025-09-16T23:45:54.953225Z	    },
2025-09-16T23:45:54.953354Z	    {
2025-09-16T23:45:54.953525Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-16T23:45:54.953665Z	      '名称': 'Qualcomm',
2025-09-16T23:45:54.953813Z	      slug: 'qualcomm',
2025-09-16T23:45:54.953971Z	      '是否激活': true,
2025-09-16T23:45:54.954115Z	      '是否推荐': true
2025-09-16T23:45:54.95425Z	    },
2025-09-16T23:45:54.954389Z	    {
2025-09-16T23:45:54.954524Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-16T23:45:54.954652Z	      '名称': 'Sanrex',
2025-09-16T23:45:54.954792Z	      slug: 'sanrex',
2025-09-16T23:45:54.954927Z	      '是否激活': true,
2025-09-16T23:45:54.955051Z	      '是否推荐': false
2025-09-16T23:45:54.955195Z	    },
2025-09-16T23:45:54.955391Z	    {
2025-09-16T23:45:54.955669Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-16T23:45:54.955874Z	      '名称': 'Semikron',
2025-09-16T23:45:54.956185Z	      slug: 'semikron',
2025-09-16T23:45:54.95634Z	      '是否激活': true,
2025-09-16T23:45:54.956481Z	      '是否推荐': true
2025-09-16T23:45:54.956595Z	    },
2025-09-16T23:45:54.956733Z	    {
2025-09-16T23:45:54.956845Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-16T23:45:54.956947Z	      '名称': 'ncc',
2025-09-16T23:45:54.957044Z	      slug: 'ncc',
2025-09-16T23:45:54.95721Z	      '是否激活': true,
2025-09-16T23:45:54.957343Z	      '是否推荐': false
2025-09-16T23:45:54.957616Z	    },
2025-09-16T23:45:54.957821Z	    {
2025-09-16T23:45:54.958113Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-16T23:45:54.958423Z	      '名称': '英飞凌',
2025-09-16T23:45:54.958729Z	      slug: '英飞凌',
2025-09-16T23:45:54.958846Z	      '是否激活': true,
2025-09-16T23:45:54.959089Z	      '是否推荐': true
2025-09-16T23:45:54.959215Z	    }
2025-09-16T23:45:54.959383Z	  ]
2025-09-16T23:45:54.95951Z	}
2025-09-16T23:45:54.959629Z	📊 品牌查询结果: {
2025-09-16T23:45:54.95977Z	  '数量': 13,
2025-09-16T23:45:54.959865Z	  '品牌列表': [
2025-09-16T23:45:54.959982Z	    {
2025-09-16T23:45:54.960131Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:45:54.960252Z	      '名称': 'CREE',
2025-09-16T23:45:54.960374Z	      slug: 'cree',
2025-09-16T23:45:54.96051Z	      '是否激活': true,
2025-09-16T23:45:54.960631Z	      '是否推荐': false
2025-09-16T23:45:54.960778Z	    },
2025-09-16T23:45:54.960892Z	    {
2025-09-16T23:45:54.961023Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-16T23:45:54.961144Z	      '名称': 'Electronicon',
2025-09-16T23:45:54.961286Z	      slug: 'Electronicon',
2025-09-16T23:45:54.961418Z	      '是否激活': true,
2025-09-16T23:45:54.96154Z	      '是否推荐': false
2025-09-16T23:45:54.961654Z	    },
2025-09-16T23:45:54.961847Z	    {
2025-09-16T23:45:54.961979Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-16T23:45:54.96212Z	      '名称': 'Epcos',
2025-09-16T23:45:54.962247Z	      slug: 'epcos',
2025-09-16T23:45:54.962362Z	      '是否激活': true,
2025-09-16T23:45:54.9625Z	      '是否推荐': false
2025-09-16T23:45:54.962629Z	    },
2025-09-16T23:45:54.962762Z	    {
2025-09-16T23:45:54.962881Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:45:54.963022Z	      '名称': 'IXYS',
2025-09-16T23:45:54.963149Z	      slug: 'ixys',
2025-09-16T23:45:54.96328Z	      '是否激活': true,
2025-09-16T23:45:54.963435Z	      '是否推荐': false
2025-09-16T23:45:54.96365Z	    },
2025-09-16T23:45:54.96389Z	    {
2025-09-16T23:45:54.964092Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-16T23:45:54.964188Z	      '名称': 'LEM',
2025-09-16T23:45:54.964291Z	      slug: 'lem',
2025-09-16T23:45:54.964369Z	      '是否激活': true,
2025-09-16T23:45:54.964446Z	      '是否推荐': false
2025-09-16T23:45:54.964506Z	    },
2025-09-16T23:45:54.964563Z	    {
2025-09-16T23:45:54.96462Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-16T23:45:54.964723Z	      '名称': 'Littelfuse',
2025-09-16T23:45:54.964811Z	      slug: 'littelfuse',
2025-09-16T23:45:54.964875Z	      '是否激活': true,
2025-09-16T23:45:54.964962Z	      '是否推荐': false
2025-09-16T23:45:54.965044Z	    },
2025-09-16T23:45:54.96513Z	    {
2025-09-16T23:45:54.965249Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-16T23:45:54.965361Z	      '名称': 'MediaTek',
2025-09-16T23:45:54.965467Z	      slug: 'mediatek',
2025-09-16T23:45:54.965534Z	      '是否激活': true,
2025-09-16T23:45:54.965641Z	      '是否推荐': false
2025-09-16T23:45:54.965757Z	    },
2025-09-16T23:45:54.965856Z	    {
2025-09-16T23:45:54.965946Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-16T23:45:54.96604Z	      '名称': 'PI',
2025-09-16T23:45:54.966137Z	      slug: 'pi',
2025-09-16T23:45:54.966203Z	      '是否激活': true,
2025-09-16T23:45:54.966294Z	      '是否推荐': false
2025-09-16T23:45:54.966381Z	    },
2025-09-16T23:45:54.966478Z	    {
2025-09-16T23:45:54.96671Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-16T23:45:54.966863Z	      '名称': 'Qualcomm',
2025-09-16T23:45:54.966982Z	      slug: 'qualcomm',
2025-09-16T23:45:54.967104Z	      '是否激活': true,
2025-09-16T23:45:54.967251Z	      '是否推荐': true
2025-09-16T23:45:54.967451Z	    },
2025-09-16T23:45:54.967586Z	    {
2025-09-16T23:45:54.967717Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-16T23:45:54.96786Z	      '名称': 'Sanrex',
2025-09-16T23:45:54.96799Z	      slug: 'sanrex',
2025-09-16T23:45:54.968131Z	      '是否激活': true,
2025-09-16T23:45:54.968453Z	      '是否推荐': false
2025-09-16T23:45:54.968608Z	    },
2025-09-16T23:45:54.968836Z	    {
2025-09-16T23:45:54.968929Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-16T23:45:54.969108Z	      '名称': 'Semikron',
2025-09-16T23:45:54.969267Z	      slug: 'semikron',
2025-09-16T23:45:54.969355Z	      '是否激活': true,
2025-09-16T23:45:54.969494Z	      '是否推荐': true
2025-09-16T23:45:54.969616Z	    },
2025-09-16T23:45:54.969793Z	    {
2025-09-16T23:45:54.969905Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-16T23:45:54.970194Z	      '名称': 'ncc',
2025-09-16T23:45:54.970301Z	      slug: 'ncc',
2025-09-16T23:45:54.970501Z	      '是否激活': true,
2025-09-16T23:45:54.970665Z	      '是否推荐': false
2025-09-16T23:45:54.970884Z	    },
2025-09-16T23:45:54.970967Z	    {
2025-09-16T23:45:54.9711Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-16T23:45:54.971314Z	      '名称': '英飞凌',
2025-09-16T23:45:54.97138Z	      slug: '英飞凌',
2025-09-16T23:45:54.971523Z	      '是否激活': true,
2025-09-16T23:45:54.971604Z	      '是否推荐': true
2025-09-16T23:45:54.971697Z	    }
2025-09-16T23:45:54.971892Z	  ]
2025-09-16T23:45:54.972032Z	}
2025-09-16T23:45:54.972223Z	📊 品牌查询结果: {
2025-09-16T23:45:54.97231Z	  '数量': 13,
2025-09-16T23:45:54.972369Z	  '品牌列表': [
2025-09-16T23:45:54.972532Z	    {
2025-09-16T23:45:54.97273Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:45:54.97284Z	      '名称': 'CREE',
2025-09-16T23:45:54.97295Z	      slug: 'cree',
2025-09-16T23:45:54.973054Z	      '是否激活': true,
2025-09-16T23:45:54.973152Z	      '是否推荐': false
2025-09-16T23:45:54.973285Z	    },
2025-09-16T23:45:54.973401Z	    {
2025-09-16T23:45:54.973729Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-16T23:45:54.973906Z	      '名称': 'Electronicon',
2025-09-16T23:45:54.973991Z	      slug: 'Electronicon',
2025-09-16T23:45:54.974136Z	      '是否激活': true,
2025-09-16T23:45:54.974246Z	      '是否推荐': false
2025-09-16T23:45:54.974337Z	    },
2025-09-16T23:45:54.974505Z	    {
2025-09-16T23:45:54.974662Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-16T23:45:54.974864Z	      '名称': 'Epcos',
2025-09-16T23:45:54.974998Z	      slug: 'epcos',
2025-09-16T23:45:54.97511Z	      '是否激活': true,
2025-09-16T23:45:54.975246Z	      '是否推荐': false
2025-09-16T23:45:54.975484Z	    },
2025-09-16T23:45:54.975573Z	    {
2025-09-16T23:45:54.975777Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:45:54.975951Z	      '名称': 'IXYS',
2025-09-16T23:45:54.976116Z	      slug: 'ixys',
2025-09-16T23:45:54.976192Z	      '是否激活': true,
2025-09-16T23:45:54.976255Z	      '是否推荐': false
2025-09-16T23:45:54.976466Z	    },
2025-09-16T23:45:54.976537Z	    {
2025-09-16T23:45:54.976638Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-16T23:45:54.976811Z	      '名称': 'LEM',
2025-09-16T23:45:54.976897Z	      slug: 'lem',
2025-09-16T23:45:54.976956Z	      '是否激活': true,
2025-09-16T23:45:54.977113Z	      '是否推荐': false
2025-09-16T23:45:54.977187Z	    },
2025-09-16T23:45:54.977268Z	    {
2025-09-16T23:45:54.977433Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-16T23:45:54.977499Z	      '名称': 'Littelfuse',
2025-09-16T23:45:54.977759Z	      slug: 'littelfuse',
2025-09-16T23:45:54.977868Z	      '是否激活': true,
2025-09-16T23:45:54.978114Z	      '是否推荐': false
2025-09-16T23:45:54.978208Z	    },
2025-09-16T23:45:54.978495Z	    {
2025-09-16T23:45:54.978583Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-16T23:45:54.978883Z	      '名称': 'MediaTek',
2025-09-16T23:45:54.978964Z	      slug: 'mediatek',
2025-09-16T23:45:54.979146Z	      '是否激活': true,
2025-09-16T23:45:54.97923Z	      '是否推荐': false
2025-09-16T23:45:54.979452Z	    },
2025-09-16T23:45:54.979571Z	    {
2025-09-16T23:45:54.979852Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-16T23:45:54.979936Z	      '名称': 'PI',
2025-09-16T23:45:54.980173Z	      slug: 'pi',
2025-09-16T23:45:54.980269Z	      '是否激活': true,
2025-09-16T23:45:54.980511Z	      '是否推荐': false
2025-09-16T23:45:54.980599Z	    },
2025-09-16T23:45:54.98074Z	    {
2025-09-16T23:45:54.980913Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-16T23:45:54.981108Z	      '名称': 'Qualcomm',
2025-09-16T23:45:54.981425Z	      slug: 'qualcomm',
2025-09-16T23:45:54.981602Z	      '是否激活': true,
2025-09-16T23:45:54.98176Z	      '是否推荐': true
2025-09-16T23:45:54.98189Z	    },
2025-09-16T23:45:54.981998Z	    {
2025-09-16T23:45:54.98213Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-16T23:45:54.982255Z	      '名称': 'Sanrex',
2025-09-16T23:45:54.982388Z	      slug: 'sanrex',
2025-09-16T23:45:54.982508Z	      '是否激活': true,
2025-09-16T23:45:54.982626Z	      '是否推荐': false
2025-09-16T23:45:54.982757Z	    },
2025-09-16T23:45:54.982885Z	    {
2025-09-16T23:45:54.983007Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-16T23:45:54.983124Z	      '名称': 'Semikron',
2025-09-16T23:45:54.983239Z	      slug: 'semikron',
2025-09-16T23:45:54.983352Z	      '是否激活': true,
2025-09-16T23:45:54.983482Z	      '是否推荐': true
2025-09-16T23:45:54.983598Z	    },
2025-09-16T23:45:54.983729Z	    {
2025-09-16T23:45:54.983855Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-16T23:45:54.983963Z	      '名称': 'ncc',
2025-09-16T23:45:54.984063Z	      slug: 'ncc',
2025-09-16T23:45:54.984185Z	      '是否激活': true,
2025-09-16T23:45:54.984305Z	      '是否推荐': false
2025-09-16T23:45:54.984429Z	    },
2025-09-16T23:45:54.984537Z	    {
2025-09-16T23:45:54.98464Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-16T23:45:54.984788Z	      '名称': '英飞凌',
2025-09-16T23:45:54.984908Z	      slug: '英飞凌',
2025-09-16T23:45:54.985017Z	      '是否激活': true,
2025-09-16T23:45:54.985134Z	      '是否推荐': true
2025-09-16T23:45:54.985252Z	    }
2025-09-16T23:45:54.985358Z	  ]
2025-09-16T23:45:54.985481Z	}
2025-09-16T23:45:54.985592Z	🔍 执行品牌查询: {
2025-09-16T23:45:54.985742Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-16T23:45:54.985867Z	  'GROQ查询': '\n' +
2025-09-16T23:45:54.98599Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-16T23:45:54.98614Z	    '      \n' +
2025-09-16T23:45:54.98626Z	    '    _id,\n' +
2025-09-16T23:45:54.986374Z	    '    name,\n' +
2025-09-16T23:45:54.986496Z	    '    "slug": slug.current,\n' +
2025-09-16T23:45:54.986595Z	    '    logo,\n' +
2025-09-16T23:45:54.986722Z	    '    description,\n' +
2025-09-16T23:45:54.986837Z	    '    website,\n' +
2025-09-16T23:45:54.98696Z	    '    country,\n' +
2025-09-16T23:45:54.987098Z	    '    isActive,\n' +
2025-09-16T23:45:54.98722Z	    '    isFeatured\n' +
2025-09-16T23:45:54.98734Z	    '  \n' +
2025-09-16T23:45:54.987476Z	    '    }\n' +
2025-09-16T23:45:54.987586Z	    '  ',
2025-09-16T23:45:54.98771Z	  '是否仅获取推荐': false
2025-09-16T23:45:54.987951Z	}
2025-09-16T23:45:54.988092Z	📊 品牌查询结果: {
2025-09-16T23:45:54.988204Z	  '数量': 13,
2025-09-16T23:45:54.988426Z	  '品牌列表': [
2025-09-16T23:45:54.98855Z	    {
2025-09-16T23:45:54.988663Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:45:54.988799Z	      '名称': 'CREE',
2025-09-16T23:45:54.988913Z	      slug: 'cree',
2025-09-16T23:45:54.989015Z	      '是否激活': true,
2025-09-16T23:45:54.989124Z	      '是否推荐': false
2025-09-16T23:45:54.989227Z	    },
2025-09-16T23:45:54.989346Z	    {
2025-09-16T23:45:54.989467Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-16T23:45:54.989576Z	      '名称': 'Electronicon',
2025-09-16T23:45:54.989696Z	      slug: 'Electronicon',
2025-09-16T23:45:54.989818Z	      '是否激活': true,
2025-09-16T23:45:54.989931Z	      '是否推荐': false
2025-09-16T23:45:54.990037Z	    },
2025-09-16T23:45:54.990139Z	    {
2025-09-16T23:45:54.99024Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-16T23:45:54.99035Z	      '名称': 'Epcos',
2025-09-16T23:45:54.99048Z	      slug: 'epcos',
2025-09-16T23:45:54.990594Z	      '是否激活': true,
2025-09-16T23:45:54.990718Z	      '是否推荐': false
2025-09-16T23:45:54.990837Z	    },
2025-09-16T23:45:54.990948Z	    {
2025-09-16T23:45:54.991056Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:45:54.99116Z	      '名称': 'IXYS',
2025-09-16T23:45:54.991267Z	      slug: 'ixys',
2025-09-16T23:45:54.991377Z	      '是否激活': true,
2025-09-16T23:45:54.9915Z	      '是否推荐': false
2025-09-16T23:45:54.99162Z	    },
2025-09-16T23:45:54.991747Z	    {
2025-09-16T23:45:54.99186Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-16T23:45:54.991967Z	      '名称': 'LEM',
2025-09-16T23:45:54.992078Z	      slug: 'lem',
2025-09-16T23:45:54.99218Z	      '是否激活': true,
2025-09-16T23:45:54.992278Z	      '是否推荐': false
2025-09-16T23:45:54.992392Z	    },
2025-09-16T23:45:54.992503Z	    {
2025-09-16T23:45:54.99261Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-16T23:45:54.992736Z	      '名称': 'Littelfuse',
2025-09-16T23:45:54.99286Z	      slug: 'littelfuse',
2025-09-16T23:45:54.992965Z	      '是否激活': true,
2025-09-16T23:45:54.99307Z	      '是否推荐': false
2025-09-16T23:45:54.993172Z	    },
2025-09-16T23:45:54.993279Z	    {
2025-09-16T23:45:54.9934Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-16T23:45:54.993535Z	      '名称': 'MediaTek',
2025-09-16T23:45:54.99374Z	      slug: 'mediatek',
2025-09-16T23:45:54.993874Z	      '是否激活': true,
2025-09-16T23:45:54.993986Z	      '是否推荐': false
2025-09-16T23:45:54.994084Z	    },
2025-09-16T23:45:54.994187Z	    {
2025-09-16T23:45:54.994286Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-16T23:45:54.994398Z	      '名称': 'PI',
2025-09-16T23:45:54.994502Z	      slug: 'pi',
2025-09-16T23:45:54.994616Z	      '是否激活': true,
2025-09-16T23:45:55.024096Z	      '是否推荐': false
2025-09-16T23:45:55.024304Z	    },
2025-09-16T23:45:55.024421Z	    {
2025-09-16T23:45:55.024532Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-16T23:45:55.024654Z	      '名称': 'Qualcomm',
2025-09-16T23:45:55.024838Z	      slug: 'qualcomm',
2025-09-16T23:45:55.024952Z	      '是否激活': true,
2025-09-16T23:45:55.025052Z	      '是否推荐': true
2025-09-16T23:45:55.025198Z	    },
2025-09-16T23:45:55.025315Z	    {
2025-09-16T23:45:55.025415Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-16T23:45:55.025779Z	      '名称': 'Sanrex',
2025-09-16T23:45:55.025963Z	      slug: 'sanrex',
2025-09-16T23:45:55.026207Z	      '是否激活': true,
2025-09-16T23:45:55.026348Z	      '是否推荐': false
2025-09-16T23:45:55.026458Z	    },
2025-09-16T23:45:55.02672Z	    {
2025-09-16T23:45:55.026907Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-16T23:45:55.027065Z	      '名称': 'Semikron',
2025-09-16T23:45:55.027283Z	      slug: 'semikron',
2025-09-16T23:45:55.027474Z	      '是否激活': true,
2025-09-16T23:45:55.027718Z	      '是否推荐': true
2025-09-16T23:45:55.027853Z	    },
2025-09-16T23:45:55.028218Z	    {
2025-09-16T23:45:55.028391Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-16T23:45:55.028585Z	      '名称': 'ncc',
2025-09-16T23:45:55.028788Z	      slug: 'ncc',
2025-09-16T23:45:55.029044Z	      '是否激活': true,
2025-09-16T23:45:55.029407Z	      '是否推荐': false
2025-09-16T23:45:55.02964Z	    },
2025-09-16T23:45:55.029856Z	    {
2025-09-16T23:45:55.03005Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-16T23:45:55.030249Z	      '名称': '英飞凌',
2025-09-16T23:45:55.030431Z	      slug: '英飞凌',
2025-09-16T23:45:55.03059Z	      '是否激活': true,
2025-09-16T23:45:55.030808Z	      '是否推荐': true
2025-09-16T23:45:55.030994Z	    }
2025-09-16T23:45:55.0312Z	  ]
2025-09-16T23:45:55.031315Z	}
2025-09-16T23:45:55.031423Z	🔍 执行品牌查询: {
2025-09-16T23:45:55.031528Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-16T23:45:55.031637Z	  'GROQ查询': '\n' +
2025-09-16T23:45:55.031776Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-16T23:45:55.031877Z	    '      \n' +
2025-09-16T23:45:55.03197Z	    '    _id,\n' +
2025-09-16T23:45:55.032062Z	    '    name,\n' +
2025-09-16T23:45:55.032161Z	    '    "slug": slug.current,\n' +
2025-09-16T23:45:55.032257Z	    '    logo,\n' +
2025-09-16T23:45:55.032347Z	    '    description,\n' +
2025-09-16T23:45:55.032434Z	    '    website,\n' +
2025-09-16T23:45:55.03252Z	    '    country,\n' +
2025-09-16T23:45:55.032789Z	    '    isActive,\n' +
2025-09-16T23:45:55.032965Z	    '    isFeatured\n' +
2025-09-16T23:45:55.033091Z	    '  \n' +
2025-09-16T23:45:55.033308Z	    '    }\n' +
2025-09-16T23:45:55.033479Z	    '  ',
2025-09-16T23:45:55.03365Z	  '是否仅获取推荐': false
2025-09-16T23:45:55.036037Z	}
2025-09-16T23:45:55.036158Z	🔍 执行品牌查询: {
2025-09-16T23:45:55.036516Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-16T23:45:55.036652Z	  'GROQ查询': '\n' +
2025-09-16T23:45:55.03684Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-16T23:45:55.036974Z	    '      \n' +
2025-09-16T23:45:55.037152Z	    '    _id,\n' +
2025-09-16T23:45:55.037276Z	    '    name,\n' +
2025-09-16T23:45:55.037387Z	    '    "slug": slug.current,\n' +
2025-09-16T23:45:55.037494Z	    '    logo,\n' +
2025-09-16T23:45:55.037629Z	    '    description,\n' +
2025-09-16T23:45:55.037767Z	    '    website,\n' +
2025-09-16T23:45:55.037875Z	    '    country,\n' +
2025-09-16T23:45:55.037979Z	    '    isActive,\n' +
2025-09-16T23:45:55.038085Z	    '    isFeatured\n' +
2025-09-16T23:45:55.038189Z	    '  \n' +
2025-09-16T23:45:55.038292Z	    '    }\n' +
2025-09-16T23:45:55.038394Z	    '  ',
2025-09-16T23:45:55.038501Z	  '是否仅获取推荐': false
2025-09-16T23:45:55.038634Z	}
2025-09-16T23:45:55.038775Z	📊 品牌查询结果: {
2025-09-16T23:45:55.038896Z	  '数量': 13,
2025-09-16T23:45:55.039049Z	  '品牌列表': [
2025-09-16T23:45:55.039179Z	    {
2025-09-16T23:45:55.039323Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:45:55.039456Z	      '名称': 'CREE',
2025-09-16T23:45:55.039627Z	      slug: 'cree',
2025-09-16T23:45:55.039778Z	      '是否激活': true,
2025-09-16T23:45:55.039906Z	      '是否推荐': false
2025-09-16T23:45:55.040019Z	    },
2025-09-16T23:45:55.040142Z	    {
2025-09-16T23:45:55.040272Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-16T23:45:55.040392Z	      '名称': 'Electronicon',
2025-09-16T23:45:55.040503Z	      slug: 'Electronicon',
2025-09-16T23:45:55.04063Z	      '是否激活': true,
2025-09-16T23:45:55.040762Z	      '是否推荐': false
2025-09-16T23:45:55.040894Z	    },
2025-09-16T23:45:55.041005Z	    {
2025-09-16T23:45:55.041108Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-16T23:45:55.041194Z	      '名称': 'Epcos',
2025-09-16T23:45:55.041296Z	      slug: 'epcos',
2025-09-16T23:45:55.041393Z	      '是否激活': true,
2025-09-16T23:45:55.0415Z	      '是否推荐': false
2025-09-16T23:45:55.04158Z	    },
2025-09-16T23:45:55.041668Z	    {
2025-09-16T23:45:55.041791Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:45:55.041883Z	      '名称': 'IXYS',
2025-09-16T23:45:55.041986Z	      slug: 'ixys',
2025-09-16T23:45:55.042052Z	      '是否激活': true,
2025-09-16T23:45:55.042108Z	      '是否推荐': false
2025-09-16T23:45:55.042164Z	    },
2025-09-16T23:45:55.042237Z	    {
2025-09-16T23:45:55.042295Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-16T23:45:55.042376Z	      '名称': 'LEM',
2025-09-16T23:45:55.042464Z	      slug: 'lem',
2025-09-16T23:45:55.042523Z	      '是否激活': true,
2025-09-16T23:45:55.042616Z	      '是否推荐': false
2025-09-16T23:45:55.042721Z	    },
2025-09-16T23:45:55.042803Z	    {
2025-09-16T23:45:55.04286Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-16T23:45:55.042918Z	      '名称': 'Littelfuse',
2025-09-16T23:45:55.042975Z	      slug: 'littelfuse',
2025-09-16T23:45:55.043046Z	      '是否激活': true,
2025-09-16T23:45:55.043119Z	      '是否推荐': false
2025-09-16T23:45:55.0432Z	    },
2025-09-16T23:45:55.043297Z	    {
2025-09-16T23:45:55.043401Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-16T23:45:55.043504Z	      '名称': 'MediaTek',
2025-09-16T23:45:55.043595Z	      slug: 'mediatek',
2025-09-16T23:45:55.043663Z	      '是否激活': true,
2025-09-16T23:45:55.043786Z	      '是否推荐': false
2025-09-16T23:45:55.043887Z	    },
2025-09-16T23:45:55.043978Z	    {
2025-09-16T23:45:55.044061Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-16T23:45:55.04414Z	      '名称': 'PI',
2025-09-16T23:45:55.04422Z	      slug: 'pi',
2025-09-16T23:45:55.044303Z	      '是否激活': true,
2025-09-16T23:45:55.044386Z	      '是否推荐': false
2025-09-16T23:45:55.044479Z	    },
2025-09-16T23:45:55.044577Z	    {
2025-09-16T23:45:55.044695Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-16T23:45:55.044797Z	      '名称': 'Qualcomm',
2025-09-16T23:45:55.044885Z	      slug: 'qualcomm',
2025-09-16T23:45:55.044965Z	      '是否激活': true,
2025-09-16T23:45:55.045048Z	      '是否推荐': true
2025-09-16T23:45:55.04513Z	    },
2025-09-16T23:45:55.045207Z	    {
2025-09-16T23:45:55.045303Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-16T23:45:55.045393Z	      '名称': 'Sanrex',
2025-09-16T23:45:55.045482Z	      slug: 'sanrex',
2025-09-16T23:45:55.045595Z	      '是否激活': true,
2025-09-16T23:45:55.045722Z	      '是否推荐': false
2025-09-16T23:45:55.045822Z	    },
2025-09-16T23:45:55.045929Z	    {
2025-09-16T23:45:55.046046Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-16T23:45:55.046145Z	      '名称': 'Semikron',
2025-09-16T23:45:55.046276Z	      slug: 'semikron',
2025-09-16T23:45:55.0465Z	      '是否激活': true,
2025-09-16T23:45:55.046614Z	      '是否推荐': true
2025-09-16T23:45:55.04676Z	    },
2025-09-16T23:45:55.046867Z	    {
2025-09-16T23:45:55.046968Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-16T23:45:55.047086Z	      '名称': 'ncc',
2025-09-16T23:45:55.047191Z	      slug: 'ncc',
2025-09-16T23:45:55.047302Z	      '是否激活': true,
2025-09-16T23:45:55.047414Z	      '是否推荐': false
2025-09-16T23:45:55.047518Z	    },
2025-09-16T23:45:55.047612Z	    {
2025-09-16T23:45:55.047747Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-16T23:45:55.047849Z	      '名称': '英飞凌',
2025-09-16T23:45:55.047959Z	      slug: '英飞凌',
2025-09-16T23:45:55.048082Z	      '是否激活': true,
2025-09-16T23:45:55.048478Z	      '是否推荐': true
2025-09-16T23:45:55.048614Z	    }
2025-09-16T23:45:55.048719Z	  ]
2025-09-16T23:45:55.049072Z	}
2025-09-16T23:45:55.04916Z	🔍 执行品牌查询: {
2025-09-16T23:45:55.049404Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-16T23:45:55.049506Z	  'GROQ查询': '\n' +
2025-09-16T23:45:55.049903Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-16T23:45:55.049999Z	    '      \n' +
2025-09-16T23:45:55.050234Z	    '    _id,\n' +
2025-09-16T23:45:55.050315Z	    '    name,\n' +
2025-09-16T23:45:55.050553Z	    '    "slug": slug.current,\n' +
2025-09-16T23:45:55.05064Z	    '    logo,\n' +
2025-09-16T23:45:55.050927Z	    '    description,\n' +
2025-09-16T23:45:55.051003Z	    '    website,\n' +
2025-09-16T23:45:55.05106Z	    '    country,\n' +
2025-09-16T23:45:55.051289Z	    '    isActive,\n' +
2025-09-16T23:45:55.051375Z	    '    isFeatured\n' +
2025-09-16T23:45:55.051614Z	    '  \n' +
2025-09-16T23:45:55.05174Z	    '    }\n' +
2025-09-16T23:45:55.052071Z	    '  ',
2025-09-16T23:45:55.052198Z	  '是否仅获取推荐': false
2025-09-16T23:45:55.052319Z	}
2025-09-16T23:45:55.052445Z	🔍 执行品牌查询: {
2025-09-16T23:45:55.052561Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-16T23:45:55.052745Z	  'GROQ查询': '\n' +
2025-09-16T23:45:55.052901Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-16T23:45:55.053111Z	    '      \n' +
2025-09-16T23:45:55.053282Z	    '    _id,\n' +
2025-09-16T23:45:55.053396Z	    '    name,\n' +
2025-09-16T23:45:55.053502Z	    '    "slug": slug.current,\n' +
2025-09-16T23:45:55.053643Z	    '    logo,\n' +
2025-09-16T23:45:55.053821Z	    '    description,\n' +
2025-09-16T23:45:55.053955Z	    '    website,\n' +
2025-09-16T23:45:55.05408Z	    '    country,\n' +
2025-09-16T23:45:55.054186Z	    '    isActive,\n' +
2025-09-16T23:45:55.054313Z	    '    isFeatured\n' +
2025-09-16T23:45:55.054454Z	    '  \n' +
2025-09-16T23:45:55.054582Z	    '    }\n' +
2025-09-16T23:45:55.054737Z	    '  ',
2025-09-16T23:45:55.054885Z	  '是否仅获取推荐': false
2025-09-16T23:45:55.055029Z	}
2025-09-16T23:45:55.055208Z	📊 品牌查询结果: {
2025-09-16T23:45:55.055296Z	  '数量': 13,
2025-09-16T23:45:55.055505Z	  '品牌列表': [
2025-09-16T23:45:55.055697Z	    {
2025-09-16T23:45:55.055992Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:45:55.056176Z	      '名称': 'CREE',
2025-09-16T23:45:55.056351Z	      slug: 'cree',
2025-09-16T23:45:55.05649Z	      '是否激活': true,
2025-09-16T23:45:55.056641Z	      '是否推荐': false
2025-09-16T23:45:55.056792Z	    },
2025-09-16T23:45:55.056915Z	    {
2025-09-16T23:45:55.057032Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-16T23:45:55.057158Z	      '名称': 'Electronicon',
2025-09-16T23:45:55.05727Z	      slug: 'Electronicon',
2025-09-16T23:45:55.057391Z	      '是否激活': true,
2025-09-16T23:45:55.057498Z	      '是否推荐': false
2025-09-16T23:45:55.057591Z	    },
2025-09-16T23:45:55.057705Z	    {
2025-09-16T23:45:55.057869Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-16T23:45:55.057942Z	      '名称': 'Epcos',
2025-09-16T23:45:55.05802Z	      slug: 'epcos',
2025-09-16T23:45:55.058196Z	      '是否激活': true,
2025-09-16T23:45:55.058298Z	      '是否推荐': false
2025-09-16T23:45:55.058417Z	    },
2025-09-16T23:45:55.05853Z	    {
2025-09-16T23:45:55.058643Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:45:55.058771Z	      '名称': 'IXYS',
2025-09-16T23:45:55.058875Z	      slug: 'ixys',
2025-09-16T23:45:55.058971Z	      '是否激活': true,
2025-09-16T23:45:55.059069Z	      '是否推荐': false
2025-09-16T23:45:55.05933Z	    },
2025-09-16T23:45:55.059457Z	    {
2025-09-16T23:45:55.059727Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-16T23:45:55.059822Z	      '名称': 'LEM',
2025-09-16T23:45:55.059951Z	      slug: 'lem',
2025-09-16T23:45:55.060047Z	      '是否激活': true,
2025-09-16T23:45:55.060196Z	      '是否推荐': false
2025-09-16T23:45:55.060466Z	    },
2025-09-16T23:45:55.060552Z	    {
2025-09-16T23:45:55.060819Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-16T23:45:55.061097Z	      '名称': 'Littelfuse',
2025-09-16T23:45:55.061351Z	      slug: 'littelfuse',
2025-09-16T23:45:55.061449Z	      '是否激活': true,
2025-09-16T23:45:55.061727Z	      '是否推荐': false
2025-09-16T23:45:55.06182Z	    },
2025-09-16T23:45:55.062109Z	    {
2025-09-16T23:45:55.062185Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-16T23:45:55.062303Z	      '名称': 'MediaTek',
2025-09-16T23:45:55.062384Z	      slug: 'mediatek',
2025-09-16T23:45:55.062443Z	      '是否激活': true,
2025-09-16T23:45:55.06254Z	      '是否推荐': false
2025-09-16T23:45:55.062597Z	    },
2025-09-16T23:45:55.062797Z	    {
2025-09-16T23:45:55.062904Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-16T23:45:55.063055Z	      '名称': 'PI',
2025-09-16T23:45:55.063159Z	      slug: 'pi',
2025-09-16T23:45:55.063274Z	      '是否激活': true,
2025-09-16T23:45:55.063386Z	      '是否推荐': false
2025-09-16T23:45:55.063593Z	    },
2025-09-16T23:45:55.063728Z	    {
2025-09-16T23:45:55.063838Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-16T23:45:55.063942Z	      '名称': 'Qualcomm',
2025-09-16T23:45:55.064072Z	      slug: 'qualcomm',
2025-09-16T23:45:55.064174Z	      '是否激活': true,
2025-09-16T23:45:55.064286Z	      '是否推荐': true
2025-09-16T23:45:55.064398Z	    },
2025-09-16T23:45:55.064499Z	    {
2025-09-16T23:45:55.064598Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-16T23:45:55.064715Z	      '名称': 'Sanrex',
2025-09-16T23:45:55.064823Z	      slug: 'sanrex',
2025-09-16T23:45:55.064908Z	      '是否激活': true,
2025-09-16T23:45:55.065091Z	      '是否推荐': false
2025-09-16T23:45:55.065194Z	    },
2025-09-16T23:45:55.065306Z	    {
2025-09-16T23:45:55.065417Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-16T23:45:55.065518Z	      '名称': 'Semikron',
2025-09-16T23:45:55.065615Z	      slug: 'semikron',
2025-09-16T23:45:55.065736Z	      '是否激活': true,
2025-09-16T23:45:55.065805Z	      '是否推荐': true
2025-09-16T23:45:55.06586Z	    },
2025-09-16T23:45:55.065914Z	    {
2025-09-16T23:45:55.065967Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-16T23:45:55.066027Z	      '名称': 'ncc',
2025-09-16T23:45:55.066111Z	      slug: 'ncc',
2025-09-16T23:45:55.066213Z	      '是否激活': true,
2025-09-16T23:45:55.066337Z	      '是否推荐': false
2025-09-16T23:45:55.066471Z	    },
2025-09-16T23:45:55.066582Z	    {
2025-09-16T23:45:55.06672Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-16T23:45:55.066828Z	      '名称': '英飞凌',
2025-09-16T23:45:55.066933Z	      slug: '英飞凌',
2025-09-16T23:45:55.067031Z	      '是否激活': true,
2025-09-16T23:45:55.06715Z	      '是否推荐': true
2025-09-16T23:45:55.067257Z	    }
2025-09-16T23:45:55.067359Z	  ]
2025-09-16T23:45:55.067458Z	}
2025-09-16T23:45:55.067557Z	🔍 执行品牌查询: {
2025-09-16T23:45:55.067693Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-16T23:45:55.067836Z	  'GROQ查询': '\n' +
2025-09-16T23:45:55.067955Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-16T23:45:55.068099Z	    '      \n' +
2025-09-16T23:45:55.068228Z	    '    _id,\n' +
2025-09-16T23:45:55.068339Z	    '    name,\n' +
2025-09-16T23:45:55.068485Z	    '    "slug": slug.current,\n' +
2025-09-16T23:45:55.068604Z	    '    logo,\n' +
2025-09-16T23:45:55.068765Z	    '    description,\n' +
2025-09-16T23:45:55.068888Z	    '    website,\n' +
2025-09-16T23:45:55.069005Z	    '    country,\n' +
2025-09-16T23:45:55.069114Z	    '    isActive,\n' +
2025-09-16T23:45:55.06924Z	    '    isFeatured\n' +
2025-09-16T23:45:55.069358Z	    '  \n' +
2025-09-16T23:45:55.069499Z	    '    }\n' +
2025-09-16T23:45:55.069577Z	    '  ',
2025-09-16T23:45:55.069693Z	  '是否仅获取推荐': false
2025-09-16T23:45:55.069798Z	}
2025-09-16T23:45:55.069901Z	📊 品牌查询结果: {
2025-09-16T23:45:55.069996Z	  '数量': 13,
2025-09-16T23:45:55.070086Z	  '品牌列表': [
2025-09-16T23:45:55.070179Z	    {
2025-09-16T23:45:55.070272Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:45:55.070365Z	      '名称': 'CREE',
2025-09-16T23:45:55.070467Z	      slug: 'cree',
2025-09-16T23:45:55.070564Z	      '是否激活': true,
2025-09-16T23:45:55.070725Z	      '是否推荐': false
2025-09-16T23:45:55.070849Z	    },
2025-09-16T23:45:55.070958Z	    {
2025-09-16T23:45:55.071058Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-16T23:45:55.071172Z	      '名称': 'Electronicon',
2025-09-16T23:45:55.071398Z	      slug: 'Electronicon',
2025-09-16T23:45:55.071619Z	      '是否激活': true,
2025-09-16T23:45:55.071973Z	      '是否推荐': false
2025-09-16T23:45:55.07215Z	    },
2025-09-16T23:45:55.072354Z	    {
2025-09-16T23:45:55.072514Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-16T23:45:55.072695Z	      '名称': 'Epcos',
2025-09-16T23:45:55.072845Z	      slug: 'epcos',
2025-09-16T23:45:55.073021Z	      '是否激活': true,
2025-09-16T23:45:55.073166Z	      '是否推荐': false
2025-09-16T23:45:55.07336Z	    },
2025-09-16T23:45:55.073546Z	    {
2025-09-16T23:45:55.073753Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:45:55.073909Z	      '名称': 'IXYS',
2025-09-16T23:45:55.074068Z	      slug: 'ixys',
2025-09-16T23:45:55.07424Z	      '是否激活': true,
2025-09-16T23:45:55.074363Z	      '是否推荐': false
2025-09-16T23:45:55.074656Z	    },
2025-09-16T23:45:55.074784Z	    {
2025-09-16T23:45:55.07503Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-16T23:45:55.075142Z	      '名称': 'LEM',
2025-09-16T23:45:55.075247Z	      slug: 'lem',
2025-09-16T23:45:55.075353Z	      '是否激活': true,
2025-09-16T23:45:55.075464Z	      '是否推荐': false
2025-09-16T23:45:55.075563Z	    },
2025-09-16T23:45:55.075724Z	    {
2025-09-16T23:45:55.075833Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-16T23:45:55.075967Z	      '名称': 'Littelfuse',
2025-09-16T23:45:55.07608Z	      slug: 'littelfuse',
2025-09-16T23:45:55.076151Z	      '是否激活': true,
2025-09-16T23:45:55.076231Z	      '是否推荐': false
2025-09-16T23:45:55.07633Z	    },
2025-09-16T23:45:55.076436Z	    {
2025-09-16T23:45:55.076538Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-16T23:45:55.076629Z	      '名称': 'MediaTek',
2025-09-16T23:45:55.076768Z	      slug: 'mediatek',
2025-09-16T23:45:55.077005Z	      '是否激活': true,
2025-09-16T23:45:55.077092Z	      '是否推荐': false
2025-09-16T23:45:55.077211Z	    },
2025-09-16T23:45:55.07734Z	    {
2025-09-16T23:45:55.077455Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-16T23:45:55.077592Z	      '名称': 'PI',
2025-09-16T23:45:55.077768Z	      slug: 'pi',
2025-09-16T23:45:55.07791Z	      '是否激活': true,
2025-09-16T23:45:55.078048Z	      '是否推荐': false
2025-09-16T23:45:55.078184Z	    },
2025-09-16T23:45:55.078299Z	    {
2025-09-16T23:45:55.078418Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-16T23:45:55.078561Z	      '名称': 'Qualcomm',
2025-09-16T23:45:55.078688Z	      slug: 'qualcomm',
2025-09-16T23:45:55.078819Z	      '是否激活': true,
2025-09-16T23:45:55.078926Z	      '是否推荐': true
2025-09-16T23:45:55.079031Z	    },
2025-09-16T23:45:55.079148Z	    {
2025-09-16T23:45:55.079303Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-16T23:45:55.07941Z	      '名称': 'Sanrex',
2025-09-16T23:45:55.079537Z	      slug: 'sanrex',
2025-09-16T23:45:55.079648Z	      '是否激活': true,
2025-09-16T23:45:55.079785Z	      '是否推荐': false
2025-09-16T23:45:55.07989Z	    },
2025-09-16T23:45:55.079995Z	    {
2025-09-16T23:45:55.08012Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-16T23:45:55.080254Z	      '名称': 'Semikron',
2025-09-16T23:45:55.080387Z	      slug: 'semikron',
2025-09-16T23:45:55.080525Z	      '是否激活': true,
2025-09-16T23:45:55.080644Z	      '是否推荐': true
2025-09-16T23:45:55.080974Z	    },
2025-09-16T23:45:55.081108Z	    {
2025-09-16T23:45:55.081221Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-16T23:45:55.081357Z	      '名称': 'ncc',
2025-09-16T23:45:55.081492Z	      slug: 'ncc',
2025-09-16T23:45:55.081613Z	      '是否激活': true,
2025-09-16T23:45:55.081764Z	      '是否推荐': false
2025-09-16T23:45:55.081875Z	    },
2025-09-16T23:45:55.081976Z	    {
2025-09-16T23:45:55.082073Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-16T23:45:55.082181Z	      '名称': '英飞凌',
2025-09-16T23:45:55.082292Z	      slug: '英飞凌',
2025-09-16T23:45:55.0824Z	      '是否激活': true,
2025-09-16T23:45:55.082509Z	      '是否推荐': true
2025-09-16T23:45:55.082625Z	    }
2025-09-16T23:45:55.082757Z	  ]
2025-09-16T23:45:55.082859Z	}
2025-09-16T23:45:55.082961Z	📊 品牌查询结果: {
2025-09-16T23:45:55.083073Z	  '数量': 13,
2025-09-16T23:45:55.083172Z	  '品牌列表': [
2025-09-16T23:45:55.083274Z	    {
2025-09-16T23:45:55.083379Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:45:55.083486Z	      '名称': 'CREE',
2025-09-16T23:45:55.083586Z	      slug: 'cree',
2025-09-16T23:45:55.083723Z	      '是否激活': true,
2025-09-16T23:45:55.08384Z	      '是否推荐': false
2025-09-16T23:45:55.083943Z	    },
2025-09-16T23:45:55.084052Z	    {
2025-09-16T23:45:55.084166Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-16T23:45:55.084278Z	      '名称': 'Electronicon',
2025-09-16T23:45:55.084392Z	      slug: 'Electronicon',
2025-09-16T23:45:55.084504Z	      '是否激活': true,
2025-09-16T23:45:55.084616Z	      '是否推荐': false
2025-09-16T23:45:55.084751Z	    },
2025-09-16T23:45:55.08486Z	    {
2025-09-16T23:45:55.084974Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-16T23:45:55.085085Z	      '名称': 'Epcos',
2025-09-16T23:45:55.085201Z	      slug: 'epcos',
2025-09-16T23:45:55.085317Z	      '是否激活': true,
2025-09-16T23:45:55.08543Z	      '是否推荐': false
2025-09-16T23:45:55.085541Z	    },
2025-09-16T23:45:55.085658Z	    {
2025-09-16T23:45:55.085776Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:45:55.0859Z	      '名称': 'IXYS',
2025-09-16T23:45:55.086013Z	      slug: 'ixys',
2025-09-16T23:45:55.086124Z	      '是否激活': true,
2025-09-16T23:45:55.08623Z	      '是否推荐': false
2025-09-16T23:45:55.086328Z	    },
2025-09-16T23:45:55.086436Z	    {
2025-09-16T23:45:55.086597Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-16T23:45:55.086761Z	      '名称': 'LEM',
2025-09-16T23:45:55.086902Z	      slug: 'lem',
2025-09-16T23:45:55.087022Z	      '是否激活': true,
2025-09-16T23:45:55.087129Z	      '是否推荐': false
2025-09-16T23:45:55.087231Z	    },
2025-09-16T23:45:55.087358Z	    {
2025-09-16T23:45:55.087463Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-16T23:45:55.0876Z	      '名称': 'Littelfuse',
2025-09-16T23:45:55.087739Z	      slug: 'littelfuse',
2025-09-16T23:45:55.087859Z	      '是否激活': true,
2025-09-16T23:45:55.08798Z	      '是否推荐': false
2025-09-16T23:45:55.088093Z	    },
2025-09-16T23:45:55.088195Z	    {
2025-09-16T23:45:55.088306Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-16T23:45:55.088411Z	      '名称': 'MediaTek',
2025-09-16T23:45:55.088514Z	      slug: 'mediatek',
2025-09-16T23:45:55.088614Z	      '是否激活': true,
2025-09-16T23:45:55.088761Z	      '是否推荐': false
2025-09-16T23:45:55.08887Z	    },
2025-09-16T23:45:55.089029Z	    {
2025-09-16T23:45:55.089147Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-16T23:45:55.08925Z	      '名称': 'PI',
2025-09-16T23:45:55.089446Z	      slug: 'pi',
2025-09-16T23:45:55.089644Z	      '是否激活': true,
2025-09-16T23:45:55.089821Z	      '是否推荐': false
2025-09-16T23:45:55.089939Z	    },
2025-09-16T23:45:55.090067Z	    {
2025-09-16T23:45:55.090187Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-16T23:45:55.090305Z	      '名称': 'Qualcomm',
2025-09-16T23:45:55.090416Z	      slug: 'qualcomm',
2025-09-16T23:45:55.090527Z	      '是否激活': true,
2025-09-16T23:45:55.090646Z	      '是否推荐': true
2025-09-16T23:45:55.090782Z	    },
2025-09-16T23:45:55.09089Z	    {
2025-09-16T23:45:55.090993Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-16T23:45:55.091098Z	      '名称': 'Sanrex',
2025-09-16T23:45:55.091206Z	      slug: 'sanrex',
2025-09-16T23:45:55.091308Z	      '是否激活': true,
2025-09-16T23:45:55.091409Z	      '是否推荐': false
2025-09-16T23:45:55.091537Z	    },
2025-09-16T23:45:55.091656Z	    {
2025-09-16T23:45:55.091781Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-16T23:45:55.091892Z	      '名称': 'Semikron',
2025-09-16T23:45:55.092011Z	      slug: 'semikron',
2025-09-16T23:45:55.092134Z	      '是否激活': true,
2025-09-16T23:45:55.092236Z	      '是否推荐': true
2025-09-16T23:45:55.092336Z	    },
2025-09-16T23:45:55.092427Z	    {
2025-09-16T23:45:55.092507Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-16T23:45:55.09259Z	      '名称': 'ncc',
2025-09-16T23:45:55.09272Z	      slug: 'ncc',
2025-09-16T23:45:55.093966Z	      '是否激活': true,
2025-09-16T23:45:55.094115Z	      '是否推荐': false
2025-09-16T23:45:55.094234Z	    },
2025-09-16T23:45:55.094345Z	    {
2025-09-16T23:45:55.094451Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-16T23:45:55.094565Z	      '名称': '英飞凌',
2025-09-16T23:45:55.094659Z	      slug: '英飞凌',
2025-09-16T23:45:55.094778Z	      '是否激活': true,
2025-09-16T23:45:55.094863Z	      '是否推荐': true
2025-09-16T23:45:55.094973Z	    }
2025-09-16T23:45:55.09506Z	  ]
2025-09-16T23:45:55.095147Z	}
2025-09-16T23:45:55.095239Z	📊 品牌查询结果: {
2025-09-16T23:45:55.095397Z	  '数量': 13,
2025-09-16T23:45:55.09551Z	  '品牌列表': [
2025-09-16T23:45:55.095691Z	    {
2025-09-16T23:45:55.095818Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:45:55.095887Z	      '名称': 'CREE',
2025-09-16T23:45:55.095943Z	      slug: 'cree',
2025-09-16T23:45:55.096047Z	      '是否激活': true,
2025-09-16T23:45:55.09618Z	      '是否推荐': false
2025-09-16T23:45:55.096399Z	    },
2025-09-16T23:45:55.096515Z	    {
2025-09-16T23:45:55.096661Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-16T23:45:55.096798Z	      '名称': 'Electronicon',
2025-09-16T23:45:55.096923Z	      slug: 'Electronicon',
2025-09-16T23:45:55.09703Z	      '是否激活': true,
2025-09-16T23:45:55.097252Z	      '是否推荐': false
2025-09-16T23:45:55.097423Z	    },
2025-09-16T23:45:55.097531Z	    {
2025-09-16T23:45:55.097632Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-16T23:45:55.097823Z	      '名称': 'Epcos',
2025-09-16T23:45:55.097902Z	      slug: 'epcos',
2025-09-16T23:45:55.097991Z	      '是否激活': true,
2025-09-16T23:45:55.098095Z	      '是否推荐': false
2025-09-16T23:45:55.098213Z	    },
2025-09-16T23:45:55.098317Z	    {
2025-09-16T23:45:55.098422Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:45:55.098504Z	      '名称': 'IXYS',
2025-09-16T23:45:55.098594Z	      slug: 'ixys',
2025-09-16T23:45:55.098693Z	      '是否激活': true,
2025-09-16T23:45:55.098792Z	      '是否推荐': false
2025-09-16T23:45:55.09888Z	    },
2025-09-16T23:45:55.098973Z	    {
2025-09-16T23:45:55.09908Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-16T23:45:55.099192Z	      '名称': 'LEM',
2025-09-16T23:45:55.099308Z	      slug: 'lem',
2025-09-16T23:45:55.099434Z	      '是否激活': true,
2025-09-16T23:45:55.099537Z	      '是否推荐': false
2025-09-16T23:45:55.099634Z	    },
2025-09-16T23:45:55.099752Z	    {
2025-09-16T23:45:55.099852Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-16T23:45:55.099944Z	      '名称': 'Littelfuse',
2025-09-16T23:45:55.10005Z	      slug: 'littelfuse',
2025-09-16T23:45:55.100295Z	      '是否激活': true,
2025-09-16T23:45:55.100422Z	      '是否推荐': false
2025-09-16T23:45:55.10054Z	    },
2025-09-16T23:45:55.100639Z	    {
2025-09-16T23:45:55.100793Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-16T23:45:55.100963Z	      '名称': 'MediaTek',
2025-09-16T23:45:55.101066Z	      slug: 'mediatek',
2025-09-16T23:45:55.101152Z	      '是否激活': true,
2025-09-16T23:45:55.101297Z	      '是否推荐': false
2025-09-16T23:45:55.101424Z	    },
2025-09-16T23:45:55.101534Z	    {
2025-09-16T23:45:55.10163Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-16T23:45:55.101781Z	      '名称': 'PI',
2025-09-16T23:45:55.101906Z	      slug: 'pi',
2025-09-16T23:45:55.102032Z	      '是否激活': true,
2025-09-16T23:45:55.102152Z	      '是否推荐': false
2025-09-16T23:45:55.102253Z	    },
2025-09-16T23:45:55.10235Z	    {
2025-09-16T23:45:55.102449Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-16T23:45:55.102551Z	      '名称': 'Qualcomm',
2025-09-16T23:45:55.102648Z	      slug: 'qualcomm',
2025-09-16T23:45:55.102753Z	      '是否激活': true,
2025-09-16T23:45:55.102853Z	      '是否推荐': true
2025-09-16T23:45:55.102946Z	    },
2025-09-16T23:45:55.103052Z	    {
2025-09-16T23:45:55.10322Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-16T23:45:55.103334Z	      '名称': 'Sanrex',
2025-09-16T23:45:55.103402Z	      slug: 'sanrex',
2025-09-16T23:45:55.103473Z	      '是否激活': true,
2025-09-16T23:45:55.103587Z	      '是否推荐': false
2025-09-16T23:45:55.103809Z	    },
2025-09-16T23:45:55.103944Z	    {
2025-09-16T23:45:55.104078Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-16T23:45:55.104195Z	      '名称': 'Semikron',
2025-09-16T23:45:55.10431Z	      slug: 'semikron',
2025-09-16T23:45:55.104452Z	      '是否激活': true,
2025-09-16T23:45:55.104588Z	      '是否推荐': true
2025-09-16T23:45:55.104728Z	    },
2025-09-16T23:45:55.104843Z	    {
2025-09-16T23:45:55.104963Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-16T23:45:55.105083Z	      '名称': 'ncc',
2025-09-16T23:45:55.105218Z	      slug: 'ncc',
2025-09-16T23:45:55.105352Z	      '是否激活': true,
2025-09-16T23:45:55.105471Z	      '是否推荐': false
2025-09-16T23:45:55.105592Z	    },
2025-09-16T23:45:55.105715Z	    {
2025-09-16T23:45:55.105821Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-16T23:45:55.105917Z	      '名称': '英飞凌',
2025-09-16T23:45:55.106015Z	      slug: '英飞凌',
2025-09-16T23:45:55.106125Z	      '是否激活': true,
2025-09-16T23:45:55.10623Z	      '是否推荐': true
2025-09-16T23:45:55.106329Z	    }
2025-09-16T23:45:55.106414Z	  ]
2025-09-16T23:45:55.106495Z	}
2025-09-16T23:45:55.10658Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-16T23:45:55.10667Z	Fetching products with query: 
2025-09-16T23:45:55.106784Z	    {
2025-09-16T23:45:55.106958Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:55.107062Z	        
2025-09-16T23:45:55.107202Z	    _id,
2025-09-16T23:45:55.107324Z	    _type,
2025-09-16T23:45:55.107439Z	    partNumber,
2025-09-16T23:45:55.107537Z	    "slug": slug.current,
2025-09-16T23:45:55.107628Z	    title,
2025-09-16T23:45:55.107741Z	    shortDescription,
2025-09-16T23:45:55.107839Z	    image,
2025-09-16T23:45:55.107938Z	    brand->{
2025-09-16T23:45:55.108028Z	      name,
2025-09-16T23:45:55.108111Z	      "slug": slug.current,
2025-09-16T23:45:55.108197Z	      logo
2025-09-16T23:45:55.108281Z	    },
2025-09-16T23:45:55.108367Z	    category->{
2025-09-16T23:45:55.108453Z	      name,
2025-09-16T23:45:55.10855Z	      "slug": slug.current
2025-09-16T23:45:55.108631Z	    },
2025-09-16T23:45:55.108746Z	    pricing{
2025-09-16T23:45:55.108836Z	      currency,
2025-09-16T23:45:55.108923Z	      tiers[]{
2025-09-16T23:45:55.10901Z	        quantity,
2025-09-16T23:45:55.1091Z	        price,
2025-09-16T23:45:55.109188Z	        unit
2025-09-16T23:45:55.109276Z	      },
2025-09-16T23:45:55.109406Z	      moq,
2025-09-16T23:45:55.109736Z	      leadTime,
2025-09-16T23:45:55.109878Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:55.110061Z	      "price": tiers[0].price,
2025-09-16T23:45:55.110198Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:55.110322Z	    },
2025-09-16T23:45:55.110466Z	    inventory{
2025-09-16T23:45:55.110596Z	      quantity,
2025-09-16T23:45:55.110754Z	      status,
2025-09-16T23:45:55.110901Z	      warehouse,
2025-09-16T23:45:55.111024Z	      lastUpdated,
2025-09-16T23:45:55.111135Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:55.11123Z	      "inStock": status == "in_stock",
2025-09-16T23:45:55.111336Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:55.111436Z	    },
2025-09-16T23:45:55.111551Z	    isActive,
2025-09-16T23:45:55.111648Z	    isFeatured,
2025-09-16T23:45:55.111753Z	    isNew,
2025-09-16T23:45:55.11185Z	    _createdAt,
2025-09-16T23:45:55.111945Z	    _updatedAt
2025-09-16T23:45:55.112032Z	  
2025-09-16T23:45:55.112129Z	      },
2025-09-16T23:45:55.112244Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-16T23:45:55.112377Z	    }
2025-09-16T23:45:55.112523Z	  
2025-09-16T23:45:55.112636Z	Query parameters: {
2025-09-16T23:45:55.112754Z	  limit: 8,
2025-09-16T23:45:55.112864Z	  offset: 0,
2025-09-16T23:45:55.112964Z	  category: undefined,
2025-09-16T23:45:55.113076Z	  brand: 'epcos',
2025-09-16T23:45:55.113191Z	  featured: undefined
2025-09-16T23:45:55.1133Z	}
2025-09-16T23:45:55.113408Z	Fetching solutions with query: 
2025-09-16T23:45:55.113523Z	    {
2025-09-16T23:45:55.113644Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:55.113798Z	        
2025-09-16T23:45:55.113914Z	    _id,
2025-09-16T23:45:55.114028Z	    title,
2025-09-16T23:45:55.114137Z	    "slug": slug.current,
2025-09-16T23:45:55.114234Z	    summary,
2025-09-16T23:45:55.114333Z	    description,
2025-09-16T23:45:55.114461Z	    coverImage,
2025-09-16T23:45:55.114566Z	    primaryBrand->{
2025-09-16T23:45:55.114735Z	      _id,
2025-09-16T23:45:55.114865Z	      name,
2025-09-16T23:45:55.114994Z	      "slug": slug.current,
2025-09-16T23:45:55.115107Z	      logo
2025-09-16T23:45:55.115229Z	    },
2025-09-16T23:45:55.115343Z	    relatedBrands[]->{
2025-09-16T23:45:55.115457Z	      _id,
2025-09-16T23:45:55.115569Z	      name,
2025-09-16T23:45:55.115671Z	      "slug": slug.current,
2025-09-16T23:45:55.124016Z	      logo
2025-09-16T23:45:55.124147Z	    },
2025-09-16T23:45:55.124252Z	    targetMarket,
2025-09-16T23:45:55.124352Z	    complexity,
2025-09-16T23:45:55.124469Z	    publishedAt,
2025-09-16T23:45:55.124572Z	    isPublished,
2025-09-16T23:45:55.124671Z	    isFeatured,
2025-09-16T23:45:55.124804Z	    viewCount,
2025-09-16T23:45:55.124922Z	    _createdAt,
2025-09-16T23:45:55.125023Z	    _updatedAt
2025-09-16T23:45:55.125125Z	  
2025-09-16T23:45:55.125216Z	      },
2025-09-16T23:45:55.125318Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-16T23:45:55.125425Z	    }
2025-09-16T23:45:55.125537Z	  
2025-09-16T23:45:55.125648Z	Query parameters: {
2025-09-16T23:45:55.125773Z	  limit: 4,
2025-09-16T23:45:55.125886Z	  offset: 0,
2025-09-16T23:45:55.125984Z	  targetMarket: undefined,
2025-09-16T23:45:55.126223Z	  brand: 'epcos',
2025-09-16T23:45:55.126374Z	  featured: undefined
2025-09-16T23:45:55.126491Z	}
2025-09-16T23:45:55.126596Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-16T23:45:55.126756Z	Fetching products with query: 
2025-09-16T23:45:55.126875Z	    {
2025-09-16T23:45:55.127001Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:55.127113Z	        
2025-09-16T23:45:55.127225Z	    _id,
2025-09-16T23:45:55.127342Z	    _type,
2025-09-16T23:45:55.127464Z	    partNumber,
2025-09-16T23:45:55.127581Z	    "slug": slug.current,
2025-09-16T23:45:55.127723Z	    title,
2025-09-16T23:45:55.127847Z	    shortDescription,
2025-09-16T23:45:55.127954Z	    image,
2025-09-16T23:45:55.128057Z	    brand->{
2025-09-16T23:45:55.128158Z	      name,
2025-09-16T23:45:55.128274Z	      "slug": slug.current,
2025-09-16T23:45:55.128418Z	      logo
2025-09-16T23:45:55.128595Z	    },
2025-09-16T23:45:55.128751Z	    category->{
2025-09-16T23:45:55.128886Z	      name,
2025-09-16T23:45:55.128996Z	      "slug": slug.current
2025-09-16T23:45:55.129097Z	    },
2025-09-16T23:45:55.12919Z	    pricing{
2025-09-16T23:45:55.129284Z	      currency,
2025-09-16T23:45:55.129381Z	      tiers[]{
2025-09-16T23:45:55.12947Z	        quantity,
2025-09-16T23:45:55.129565Z	        price,
2025-09-16T23:45:55.129684Z	        unit
2025-09-16T23:45:55.129794Z	      },
2025-09-16T23:45:55.129906Z	      moq,
2025-09-16T23:45:55.130008Z	      leadTime,
2025-09-16T23:45:55.13011Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:55.130222Z	      "price": tiers[0].price,
2025-09-16T23:45:55.130382Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:55.130583Z	    },
2025-09-16T23:45:55.130726Z	    inventory{
2025-09-16T23:45:55.130846Z	      quantity,
2025-09-16T23:45:55.130945Z	      status,
2025-09-16T23:45:55.131046Z	      warehouse,
2025-09-16T23:45:55.131145Z	      lastUpdated,
2025-09-16T23:45:55.131246Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:55.131344Z	      "inStock": status == "in_stock",
2025-09-16T23:45:55.131438Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:55.13164Z	    },
2025-09-16T23:45:55.13189Z	    isActive,
2025-09-16T23:45:55.131992Z	    isFeatured,
2025-09-16T23:45:55.132104Z	    isNew,
2025-09-16T23:45:55.132206Z	    _createdAt,
2025-09-16T23:45:55.132287Z	    _updatedAt
2025-09-16T23:45:55.132344Z	  
2025-09-16T23:45:55.132412Z	      },
2025-09-16T23:45:55.132593Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-16T23:45:55.132789Z	    }
2025-09-16T23:45:55.132902Z	  
2025-09-16T23:45:55.133044Z	Query parameters: {
2025-09-16T23:45:55.133147Z	  limit: 8,
2025-09-16T23:45:55.133248Z	  offset: 0,
2025-09-16T23:45:55.133344Z	  category: undefined,
2025-09-16T23:45:55.133503Z	  brand: 'epcos',
2025-09-16T23:45:55.133577Z	  featured: undefined
2025-09-16T23:45:55.133784Z	}
2025-09-16T23:45:55.133992Z	Fetching solutions with query: 
2025-09-16T23:45:55.134125Z	    {
2025-09-16T23:45:55.134221Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:55.134316Z	        
2025-09-16T23:45:55.134431Z	    _id,
2025-09-16T23:45:55.134534Z	    title,
2025-09-16T23:45:55.134634Z	    "slug": slug.current,
2025-09-16T23:45:55.134763Z	    summary,
2025-09-16T23:45:55.134866Z	    description,
2025-09-16T23:45:55.13496Z	    coverImage,
2025-09-16T23:45:55.135055Z	    primaryBrand->{
2025-09-16T23:45:55.135153Z	      _id,
2025-09-16T23:45:55.135241Z	      name,
2025-09-16T23:45:55.135371Z	      "slug": slug.current,
2025-09-16T23:45:55.135483Z	      logo
2025-09-16T23:45:55.135587Z	    },
2025-09-16T23:45:55.135701Z	    relatedBrands[]->{
2025-09-16T23:45:55.135811Z	      _id,
2025-09-16T23:45:55.135968Z	      name,
2025-09-16T23:45:55.136045Z	      "slug": slug.current,
2025-09-16T23:45:55.136211Z	      logo
2025-09-16T23:45:55.13632Z	    },
2025-09-16T23:45:55.136433Z	    targetMarket,
2025-09-16T23:45:55.136539Z	    complexity,
2025-09-16T23:45:55.136642Z	    publishedAt,
2025-09-16T23:45:55.136769Z	    isPublished,
2025-09-16T23:45:55.136872Z	    isFeatured,
2025-09-16T23:45:55.136991Z	    viewCount,
2025-09-16T23:45:55.137104Z	    _createdAt,
2025-09-16T23:45:55.137231Z	    _updatedAt
2025-09-16T23:45:55.137327Z	  
2025-09-16T23:45:55.137418Z	      },
2025-09-16T23:45:55.13751Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-16T23:45:55.137612Z	    }
2025-09-16T23:45:55.137772Z	  
2025-09-16T23:45:55.137913Z	Query parameters: {
2025-09-16T23:45:55.138124Z	  limit: 4,
2025-09-16T23:45:55.138205Z	  offset: 0,
2025-09-16T23:45:55.138395Z	  targetMarket: undefined,
2025-09-16T23:45:55.138587Z	  brand: 'epcos',
2025-09-16T23:45:55.138788Z	  featured: undefined
2025-09-16T23:45:55.139005Z	}
2025-09-16T23:45:55.13921Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:45:55.139415Z	Fetching products with query: 
2025-09-16T23:45:55.139587Z	    {
2025-09-16T23:45:55.139784Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:55.139973Z	        
2025-09-16T23:45:55.140179Z	    _id,
2025-09-16T23:45:55.140385Z	    _type,
2025-09-16T23:45:55.14056Z	    partNumber,
2025-09-16T23:45:55.140634Z	    "slug": slug.current,
2025-09-16T23:45:55.140823Z	    title,
2025-09-16T23:45:55.140905Z	    shortDescription,
2025-09-16T23:45:55.141058Z	    image,
2025-09-16T23:45:55.141146Z	    brand->{
2025-09-16T23:45:55.141425Z	      name,
2025-09-16T23:45:55.141706Z	      "slug": slug.current,
2025-09-16T23:45:55.141997Z	      logo
2025-09-16T23:45:55.142079Z	    },
2025-09-16T23:45:55.142352Z	    category->{
2025-09-16T23:45:55.142435Z	      name,
2025-09-16T23:45:55.142874Z	      "slug": slug.current
2025-09-16T23:45:55.142954Z	    },
2025-09-16T23:45:55.143187Z	    pricing{
2025-09-16T23:45:55.143454Z	      currency,
2025-09-16T23:45:55.14374Z	      tiers[]{
2025-09-16T23:45:55.143823Z	        quantity,
2025-09-16T23:45:55.144051Z	        price,
2025-09-16T23:45:55.144159Z	        unit
2025-09-16T23:45:55.144424Z	      },
2025-09-16T23:45:55.144671Z	      moq,
2025-09-16T23:45:55.144794Z	      leadTime,
2025-09-16T23:45:55.145076Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:55.145228Z	      "price": tiers[0].price,
2025-09-16T23:45:55.145319Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:55.14538Z	    },
2025-09-16T23:45:55.145568Z	    inventory{
2025-09-16T23:45:55.145714Z	      quantity,
2025-09-16T23:45:55.145881Z	      status,
2025-09-16T23:45:55.145959Z	      warehouse,
2025-09-16T23:45:55.146097Z	      lastUpdated,
2025-09-16T23:45:55.146179Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:55.146417Z	      "inStock": status == "in_stock",
2025-09-16T23:45:55.146583Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:55.146762Z	    },
2025-09-16T23:45:55.146895Z	    isActive,
2025-09-16T23:45:55.147024Z	    isFeatured,
2025-09-16T23:45:55.147143Z	    isNew,
2025-09-16T23:45:55.147285Z	    _createdAt,
2025-09-16T23:45:55.14744Z	    _updatedAt
2025-09-16T23:45:55.147539Z	  
2025-09-16T23:45:55.14763Z	      },
2025-09-16T23:45:55.147782Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:45:55.147895Z	    }
2025-09-16T23:45:55.148004Z	  
2025-09-16T23:45:55.148099Z	Query parameters: {
2025-09-16T23:45:55.1482Z	  limit: 8,
2025-09-16T23:45:55.14831Z	  offset: 0,
2025-09-16T23:45:55.14842Z	  category: undefined,
2025-09-16T23:45:55.148518Z	  brand: 'cree',
2025-09-16T23:45:55.148616Z	  featured: undefined
2025-09-16T23:45:55.148746Z	}
2025-09-16T23:45:55.148862Z	Fetching solutions with query: 
2025-09-16T23:45:55.14897Z	    {
2025-09-16T23:45:55.149212Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:55.149405Z	        
2025-09-16T23:45:55.149575Z	    _id,
2025-09-16T23:45:55.149766Z	    title,
2025-09-16T23:45:55.149952Z	    "slug": slug.current,
2025-09-16T23:45:55.150141Z	    summary,
2025-09-16T23:45:55.150279Z	    description,
2025-09-16T23:45:55.1504Z	    coverImage,
2025-09-16T23:45:55.150519Z	    primaryBrand->{
2025-09-16T23:45:55.150648Z	      _id,
2025-09-16T23:45:55.150778Z	      name,
2025-09-16T23:45:55.150887Z	      "slug": slug.current,
2025-09-16T23:45:55.151008Z	      logo
2025-09-16T23:45:55.151128Z	    },
2025-09-16T23:45:55.151249Z	    relatedBrands[]->{
2025-09-16T23:45:55.151367Z	      _id,
2025-09-16T23:45:55.151492Z	      name,
2025-09-16T23:45:55.15161Z	      "slug": slug.current,
2025-09-16T23:45:55.151756Z	      logo
2025-09-16T23:45:55.151869Z	    },
2025-09-16T23:45:55.151969Z	    targetMarket,
2025-09-16T23:45:55.152066Z	    complexity,
2025-09-16T23:45:55.152181Z	    publishedAt,
2025-09-16T23:45:55.152319Z	    isPublished,
2025-09-16T23:45:55.152428Z	    isFeatured,
2025-09-16T23:45:55.15257Z	    viewCount,
2025-09-16T23:45:55.15272Z	    _createdAt,
2025-09-16T23:45:55.152965Z	    _updatedAt
2025-09-16T23:45:55.153173Z	  
2025-09-16T23:45:55.153311Z	      },
2025-09-16T23:45:55.153434Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:45:55.153578Z	    }
2025-09-16T23:45:55.153703Z	  
2025-09-16T23:45:55.153812Z	Query parameters: {
2025-09-16T23:45:55.153915Z	  limit: 4,
2025-09-16T23:45:55.154022Z	  offset: 0,
2025-09-16T23:45:55.154124Z	  targetMarket: undefined,
2025-09-16T23:45:55.154226Z	  brand: 'cree',
2025-09-16T23:45:55.154326Z	  featured: undefined
2025-09-16T23:45:55.154428Z	}
2025-09-16T23:45:55.15455Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:45:55.154664Z	Fetching products with query: 
2025-09-16T23:45:55.154793Z	    {
2025-09-16T23:45:55.154907Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:55.155045Z	        
2025-09-16T23:45:55.15515Z	    _id,
2025-09-16T23:45:55.155253Z	    _type,
2025-09-16T23:45:55.155358Z	    partNumber,
2025-09-16T23:45:55.155473Z	    "slug": slug.current,
2025-09-16T23:45:55.155588Z	    title,
2025-09-16T23:45:55.155707Z	    shortDescription,
2025-09-16T23:45:55.15583Z	    image,
2025-09-16T23:45:55.155939Z	    brand->{
2025-09-16T23:45:55.156038Z	      name,
2025-09-16T23:45:55.156144Z	      "slug": slug.current,
2025-09-16T23:45:55.156253Z	      logo
2025-09-16T23:45:55.156362Z	    },
2025-09-16T23:45:55.156741Z	    category->{
2025-09-16T23:45:55.156891Z	      name,
2025-09-16T23:45:55.157002Z	      "slug": slug.current
2025-09-16T23:45:55.157113Z	    },
2025-09-16T23:45:55.157218Z	    pricing{
2025-09-16T23:45:55.157325Z	      currency,
2025-09-16T23:45:55.157428Z	      tiers[]{
2025-09-16T23:45:55.157547Z	        quantity,
2025-09-16T23:45:55.157658Z	        price,
2025-09-16T23:45:55.157887Z	        unit
2025-09-16T23:45:55.158017Z	      },
2025-09-16T23:45:55.158122Z	      moq,
2025-09-16T23:45:55.158245Z	      leadTime,
2025-09-16T23:45:55.158352Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:55.158607Z	      "price": tiers[0].price,
2025-09-16T23:45:55.158783Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:55.158919Z	    },
2025-09-16T23:45:55.159041Z	    inventory{
2025-09-16T23:45:55.15914Z	      quantity,
2025-09-16T23:45:55.159246Z	      status,
2025-09-16T23:45:55.159342Z	      warehouse,
2025-09-16T23:45:55.159442Z	      lastUpdated,
2025-09-16T23:45:55.159553Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:55.159656Z	      "inStock": status == "in_stock",
2025-09-16T23:45:55.159772Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:55.159873Z	    },
2025-09-16T23:45:55.160064Z	    isActive,
2025-09-16T23:45:55.160191Z	    isFeatured,
2025-09-16T23:45:55.160296Z	    isNew,
2025-09-16T23:45:55.160408Z	    _createdAt,
2025-09-16T23:45:55.160505Z	    _updatedAt
2025-09-16T23:45:55.160592Z	  
2025-09-16T23:45:55.160725Z	      },
2025-09-16T23:45:55.160843Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:45:55.160949Z	    }
2025-09-16T23:45:55.161049Z	  
2025-09-16T23:45:55.161149Z	Query parameters: {
2025-09-16T23:45:55.161243Z	  limit: 8,
2025-09-16T23:45:55.161347Z	  offset: 0,
2025-09-16T23:45:55.161458Z	  category: undefined,
2025-09-16T23:45:55.161565Z	  brand: 'cree',
2025-09-16T23:45:55.161658Z	  featured: undefined
2025-09-16T23:45:55.161771Z	}
2025-09-16T23:45:55.16186Z	Fetching solutions with query: 
2025-09-16T23:45:55.161954Z	    {
2025-09-16T23:45:55.162065Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:55.162149Z	        
2025-09-16T23:45:55.162239Z	    _id,
2025-09-16T23:45:55.162335Z	    title,
2025-09-16T23:45:55.162432Z	    "slug": slug.current,
2025-09-16T23:45:55.162524Z	    summary,
2025-09-16T23:45:55.162622Z	    description,
2025-09-16T23:45:55.16274Z	    coverImage,
2025-09-16T23:45:55.162831Z	    primaryBrand->{
2025-09-16T23:45:55.16292Z	      _id,
2025-09-16T23:45:55.163007Z	      name,
2025-09-16T23:45:55.163093Z	      "slug": slug.current,
2025-09-16T23:45:55.163175Z	      logo
2025-09-16T23:45:55.163257Z	    },
2025-09-16T23:45:55.16338Z	    relatedBrands[]->{
2025-09-16T23:45:55.163469Z	      _id,
2025-09-16T23:45:55.163543Z	      name,
2025-09-16T23:45:55.16361Z	      "slug": slug.current,
2025-09-16T23:45:55.163719Z	      logo
2025-09-16T23:45:55.163818Z	    },
2025-09-16T23:45:55.163908Z	    targetMarket,
2025-09-16T23:45:55.163994Z	    complexity,
2025-09-16T23:45:55.16408Z	    publishedAt,
2025-09-16T23:45:55.164168Z	    isPublished,
2025-09-16T23:45:55.164258Z	    isFeatured,
2025-09-16T23:45:55.164348Z	    viewCount,
2025-09-16T23:45:55.164456Z	    _createdAt,
2025-09-16T23:45:55.164544Z	    _updatedAt
2025-09-16T23:45:55.164631Z	  
2025-09-16T23:45:55.16474Z	      },
2025-09-16T23:45:55.164829Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:45:55.164963Z	    }
2025-09-16T23:45:55.165116Z	  
2025-09-16T23:45:55.16522Z	Query parameters: {
2025-09-16T23:45:55.165319Z	  limit: 4,
2025-09-16T23:45:55.165428Z	  offset: 0,
2025-09-16T23:45:55.165546Z	  targetMarket: undefined,
2025-09-16T23:45:55.16567Z	  brand: 'cree',
2025-09-16T23:45:55.165843Z	  featured: undefined
2025-09-16T23:45:55.165958Z	}
2025-09-16T23:45:55.166064Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:45:55.166168Z	Fetching products with query: 
2025-09-16T23:45:55.16638Z	    {
2025-09-16T23:45:55.166552Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:55.166702Z	        
2025-09-16T23:45:55.166831Z	    _id,
2025-09-16T23:45:55.167013Z	    _type,
2025-09-16T23:45:55.167136Z	    partNumber,
2025-09-16T23:45:55.167259Z	    "slug": slug.current,
2025-09-16T23:45:55.16738Z	    title,
2025-09-16T23:45:55.167493Z	    shortDescription,
2025-09-16T23:45:55.167602Z	    image,
2025-09-16T23:45:55.167735Z	    brand->{
2025-09-16T23:45:55.167904Z	      name,
2025-09-16T23:45:55.168091Z	      "slug": slug.current,
2025-09-16T23:45:55.168216Z	      logo
2025-09-16T23:45:55.168352Z	    },
2025-09-16T23:45:55.168493Z	    category->{
2025-09-16T23:45:55.1686Z	      name,
2025-09-16T23:45:55.168734Z	      "slug": slug.current
2025-09-16T23:45:55.168851Z	    },
2025-09-16T23:45:55.168955Z	    pricing{
2025-09-16T23:45:55.169056Z	      currency,
2025-09-16T23:45:55.169169Z	      tiers[]{
2025-09-16T23:45:55.169462Z	        quantity,
2025-09-16T23:45:55.169706Z	        price,
2025-09-16T23:45:55.16984Z	        unit
2025-09-16T23:45:55.169957Z	      },
2025-09-16T23:45:55.170076Z	      moq,
2025-09-16T23:45:55.170193Z	      leadTime,
2025-09-16T23:45:55.170298Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:55.170431Z	      "price": tiers[0].price,
2025-09-16T23:45:55.170548Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:55.170655Z	    },
2025-09-16T23:45:55.170769Z	    inventory{
2025-09-16T23:45:55.170888Z	      quantity,
2025-09-16T23:45:55.170992Z	      status,
2025-09-16T23:45:55.171092Z	      warehouse,
2025-09-16T23:45:55.171185Z	      lastUpdated,
2025-09-16T23:45:55.171283Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:55.171402Z	      "inStock": status == "in_stock",
2025-09-16T23:45:55.171535Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:55.171637Z	    },
2025-09-16T23:45:55.171757Z	    isActive,
2025-09-16T23:45:55.171865Z	    isFeatured,
2025-09-16T23:45:55.171956Z	    isNew,
2025-09-16T23:45:55.172043Z	    _createdAt,
2025-09-16T23:45:55.172138Z	    _updatedAt
2025-09-16T23:45:55.172233Z	  
2025-09-16T23:45:55.172369Z	      },
2025-09-16T23:45:55.172476Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:45:55.172575Z	    }
2025-09-16T23:45:55.172698Z	  
2025-09-16T23:45:55.172813Z	Query parameters: {
2025-09-16T23:45:55.172923Z	  limit: 8,
2025-09-16T23:45:55.173017Z	  offset: 0,
2025-09-16T23:45:55.173109Z	  category: undefined,
2025-09-16T23:45:55.173211Z	  brand: 'Electronicon',
2025-09-16T23:45:55.173305Z	  featured: undefined
2025-09-16T23:45:55.173406Z	}
2025-09-16T23:45:55.17354Z	Fetching solutions with query: 
2025-09-16T23:45:55.173671Z	    {
2025-09-16T23:45:55.173823Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:55.173941Z	        
2025-09-16T23:45:55.174043Z	    _id,
2025-09-16T23:45:55.174136Z	    title,
2025-09-16T23:45:55.174242Z	    "slug": slug.current,
2025-09-16T23:45:55.17433Z	    summary,
2025-09-16T23:45:55.174434Z	    description,
2025-09-16T23:45:55.174526Z	    coverImage,
2025-09-16T23:45:55.174631Z	    primaryBrand->{
2025-09-16T23:45:55.174742Z	      _id,
2025-09-16T23:45:55.174851Z	      name,
2025-09-16T23:45:55.174953Z	      "slug": slug.current,
2025-09-16T23:45:55.175052Z	      logo
2025-09-16T23:45:55.175137Z	    },
2025-09-16T23:45:55.175219Z	    relatedBrands[]->{
2025-09-16T23:45:55.175303Z	      _id,
2025-09-16T23:45:55.175395Z	      name,
2025-09-16T23:45:55.175485Z	      "slug": slug.current,
2025-09-16T23:45:55.175544Z	      logo
2025-09-16T23:45:55.175599Z	    },
2025-09-16T23:45:55.175697Z	    targetMarket,
2025-09-16T23:45:55.175811Z	    complexity,
2025-09-16T23:45:55.175946Z	    publishedAt,
2025-09-16T23:45:55.176051Z	    isPublished,
2025-09-16T23:45:55.176143Z	    isFeatured,
2025-09-16T23:45:55.176232Z	    viewCount,
2025-09-16T23:45:55.176322Z	    _createdAt,
2025-09-16T23:45:55.176433Z	    _updatedAt
2025-09-16T23:45:55.176532Z	  
2025-09-16T23:45:55.176682Z	      },
2025-09-16T23:45:55.176818Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:45:55.176926Z	    }
2025-09-16T23:45:55.177068Z	  
2025-09-16T23:45:55.177202Z	Query parameters: {
2025-09-16T23:45:55.17731Z	  limit: 4,
2025-09-16T23:45:55.177558Z	  offset: 0,
2025-09-16T23:45:55.177685Z	  targetMarket: undefined,
2025-09-16T23:45:55.177798Z	  brand: 'Electronicon',
2025-09-16T23:45:55.177941Z	  featured: undefined
2025-09-16T23:45:55.178102Z	}
2025-09-16T23:45:55.178311Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:45:55.178491Z	Fetching products with query: 
2025-09-16T23:45:55.178748Z	    {
2025-09-16T23:45:55.178905Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:55.179138Z	        
2025-09-16T23:45:55.179399Z	    _id,
2025-09-16T23:45:55.179597Z	    _type,
2025-09-16T23:45:55.17987Z	    partNumber,
2025-09-16T23:45:55.18009Z	    "slug": slug.current,
2025-09-16T23:45:55.180175Z	    title,
2025-09-16T23:45:55.180233Z	    shortDescription,
2025-09-16T23:45:55.180287Z	    image,
2025-09-16T23:45:55.180341Z	    brand->{
2025-09-16T23:45:55.180413Z	      name,
2025-09-16T23:45:55.180579Z	      "slug": slug.current,
2025-09-16T23:45:55.181102Z	      logo
2025-09-16T23:45:55.181355Z	    },
2025-09-16T23:45:55.181503Z	    category->{
2025-09-16T23:45:55.181632Z	      name,
2025-09-16T23:45:55.181785Z	      "slug": slug.current
2025-09-16T23:45:55.181895Z	    },
2025-09-16T23:45:55.182028Z	    pricing{
2025-09-16T23:45:55.182144Z	      currency,
2025-09-16T23:45:55.182253Z	      tiers[]{
2025-09-16T23:45:55.182372Z	        quantity,
2025-09-16T23:45:55.182488Z	        price,
2025-09-16T23:45:55.182596Z	        unit
2025-09-16T23:45:55.182722Z	      },
2025-09-16T23:45:55.182829Z	      moq,
2025-09-16T23:45:55.182928Z	      leadTime,
2025-09-16T23:45:55.183028Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:55.183157Z	      "price": tiers[0].price,
2025-09-16T23:45:55.183262Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:55.183363Z	    },
2025-09-16T23:45:55.183462Z	    inventory{
2025-09-16T23:45:55.183563Z	      quantity,
2025-09-16T23:45:55.183685Z	      status,
2025-09-16T23:45:55.183814Z	      warehouse,
2025-09-16T23:45:55.183925Z	      lastUpdated,
2025-09-16T23:45:55.184034Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:55.184174Z	      "inStock": status == "in_stock",
2025-09-16T23:45:55.184282Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:55.184396Z	    },
2025-09-16T23:45:55.184505Z	    isActive,
2025-09-16T23:45:55.184616Z	    isFeatured,
2025-09-16T23:45:55.184755Z	    isNew,
2025-09-16T23:45:55.184893Z	    _createdAt,
2025-09-16T23:45:55.18501Z	    _updatedAt
2025-09-16T23:45:55.185122Z	  
2025-09-16T23:45:55.185237Z	      },
2025-09-16T23:45:55.185339Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:45:55.185456Z	    }
2025-09-16T23:45:55.185568Z	  
2025-09-16T23:45:55.185669Z	Query parameters: {
2025-09-16T23:45:55.18582Z	  limit: 8,
2025-09-16T23:45:55.18592Z	  offset: 0,
2025-09-16T23:45:55.186Z	  category: undefined,
2025-09-16T23:45:55.186077Z	  brand: 'Electronicon',
2025-09-16T23:45:55.186173Z	  featured: undefined
2025-09-16T23:45:55.186262Z	}
2025-09-16T23:45:55.186344Z	Fetching solutions with query: 
2025-09-16T23:45:55.186434Z	    {
2025-09-16T23:45:55.18658Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:55.186736Z	        
2025-09-16T23:45:55.186849Z	    _id,
2025-09-16T23:45:55.186949Z	    title,
2025-09-16T23:45:55.187054Z	    "slug": slug.current,
2025-09-16T23:45:55.187166Z	    summary,
2025-09-16T23:45:55.187262Z	    description,
2025-09-16T23:45:55.187381Z	    coverImage,
2025-09-16T23:45:55.187496Z	    primaryBrand->{
2025-09-16T23:45:55.187615Z	      _id,
2025-09-16T23:45:55.187758Z	      name,
2025-09-16T23:45:55.187866Z	      "slug": slug.current,
2025-09-16T23:45:55.18796Z	      logo
2025-09-16T23:45:55.188056Z	    },
2025-09-16T23:45:55.188156Z	    relatedBrands[]->{
2025-09-16T23:45:55.188258Z	      _id,
2025-09-16T23:45:55.188351Z	      name,
2025-09-16T23:45:55.188445Z	      "slug": slug.current,
2025-09-16T23:45:55.188569Z	      logo
2025-09-16T23:45:55.188699Z	    },
2025-09-16T23:45:55.188826Z	    targetMarket,
2025-09-16T23:45:55.188936Z	    complexity,
2025-09-16T23:45:55.189045Z	    publishedAt,
2025-09-16T23:45:55.189156Z	    isPublished,
2025-09-16T23:45:55.189257Z	    isFeatured,
2025-09-16T23:45:55.189354Z	    viewCount,
2025-09-16T23:45:55.189444Z	    _createdAt,
2025-09-16T23:45:55.189535Z	    _updatedAt
2025-09-16T23:45:55.189626Z	  
2025-09-16T23:45:55.18975Z	      },
2025-09-16T23:45:55.189876Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:45:55.189994Z	    }
2025-09-16T23:45:55.190105Z	  
2025-09-16T23:45:55.190208Z	Query parameters: {
2025-09-16T23:45:55.19031Z	  limit: 4,
2025-09-16T23:45:55.19042Z	  offset: 0,
2025-09-16T23:45:55.190518Z	  targetMarket: undefined,
2025-09-16T23:45:55.190619Z	  brand: 'Electronicon',
2025-09-16T23:45:55.190753Z	  featured: undefined
2025-09-16T23:45:55.190888Z	}
2025-09-16T23:45:55.191007Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-16T23:45:55.19113Z	Fetching products with query: 
2025-09-16T23:45:55.191247Z	    {
2025-09-16T23:45:55.191468Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:55.191604Z	        
2025-09-16T23:45:55.191755Z	    _id,
2025-09-16T23:45:55.191884Z	    _type,
2025-09-16T23:45:55.192003Z	    partNumber,
2025-09-16T23:45:55.19211Z	    "slug": slug.current,
2025-09-16T23:45:55.192219Z	    title,
2025-09-16T23:45:55.192355Z	    shortDescription,
2025-09-16T23:45:55.192536Z	    image,
2025-09-16T23:45:55.192667Z	    brand->{
2025-09-16T23:45:55.19281Z	      name,
2025-09-16T23:45:55.192939Z	      "slug": slug.current,
2025-09-16T23:45:55.193055Z	      logo
2025-09-16T23:45:55.193164Z	    },
2025-09-16T23:45:55.193272Z	    category->{
2025-09-16T23:45:55.193378Z	      name,
2025-09-16T23:45:55.193487Z	      "slug": slug.current
2025-09-16T23:45:55.1936Z	    },
2025-09-16T23:45:55.193733Z	    pricing{
2025-09-16T23:45:55.193835Z	      currency,
2025-09-16T23:45:55.193944Z	      tiers[]{
2025-09-16T23:45:55.194047Z	        quantity,
2025-09-16T23:45:55.194157Z	        price,
2025-09-16T23:45:55.194267Z	        unit
2025-09-16T23:45:55.194377Z	      },
2025-09-16T23:45:55.194484Z	      moq,
2025-09-16T23:45:55.19459Z	      leadTime,
2025-09-16T23:45:55.194736Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:55.194854Z	      "price": tiers[0].price,
2025-09-16T23:45:55.194966Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:55.195081Z	    },
2025-09-16T23:45:55.195188Z	    inventory{
2025-09-16T23:45:55.195298Z	      quantity,
2025-09-16T23:45:55.195415Z	      status,
2025-09-16T23:45:55.19555Z	      warehouse,
2025-09-16T23:45:55.195671Z	      lastUpdated,
2025-09-16T23:45:55.195824Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:55.195943Z	      "inStock": status == "in_stock",
2025-09-16T23:45:55.196059Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:55.196173Z	    },
2025-09-16T23:45:55.196281Z	    isActive,
2025-09-16T23:45:55.1964Z	    isFeatured,
2025-09-16T23:45:55.196509Z	    isNew,
2025-09-16T23:45:55.196606Z	    _createdAt,
2025-09-16T23:45:55.196734Z	    _updatedAt
2025-09-16T23:45:55.196845Z	  
2025-09-16T23:45:55.196963Z	      },
2025-09-16T23:45:55.197081Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-16T23:45:55.197202Z	    }
2025-09-16T23:45:55.197302Z	  
2025-09-16T23:45:55.197408Z	Query parameters: {
2025-09-16T23:45:55.197517Z	  limit: 8,
2025-09-16T23:45:55.197642Z	  offset: 0,
2025-09-16T23:45:55.197811Z	  category: undefined,
2025-09-16T23:45:55.197934Z	  brand: 'ixys',
2025-09-16T23:45:55.198065Z	  featured: undefined
2025-09-16T23:45:55.198182Z	}
2025-09-16T23:45:55.198294Z	Fetching solutions with query: 
2025-09-16T23:45:55.19842Z	    {
2025-09-16T23:45:55.198544Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:55.198667Z	        
2025-09-16T23:45:55.198812Z	    _id,
2025-09-16T23:45:55.198939Z	    title,
2025-09-16T23:45:55.199063Z	    "slug": slug.current,
2025-09-16T23:45:55.199188Z	    summary,
2025-09-16T23:45:55.199333Z	    description,
2025-09-16T23:45:55.199444Z	    coverImage,
2025-09-16T23:45:55.199556Z	    primaryBrand->{
2025-09-16T23:45:55.199696Z	      _id,
2025-09-16T23:45:55.199823Z	      name,
2025-09-16T23:45:55.199954Z	      "slug": slug.current,
2025-09-16T23:45:55.200088Z	      logo
2025-09-16T23:45:55.200283Z	    },
2025-09-16T23:45:55.200412Z	    relatedBrands[]->{
2025-09-16T23:45:55.200529Z	      _id,
2025-09-16T23:45:55.200729Z	      name,
2025-09-16T23:45:55.200866Z	      "slug": slug.current,
2025-09-16T23:45:55.200978Z	      logo
2025-09-16T23:45:55.20109Z	    },
2025-09-16T23:45:55.201212Z	    targetMarket,
2025-09-16T23:45:55.201336Z	    complexity,
2025-09-16T23:45:55.201453Z	    publishedAt,
2025-09-16T23:45:55.201583Z	    isPublished,
2025-09-16T23:45:55.20174Z	    isFeatured,
2025-09-16T23:45:55.201858Z	    viewCount,
2025-09-16T23:45:55.201967Z	    _createdAt,
2025-09-16T23:45:55.202082Z	    _updatedAt
2025-09-16T23:45:55.202236Z	  
2025-09-16T23:45:55.202366Z	      },
2025-09-16T23:45:55.202481Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-16T23:45:55.20263Z	    }
2025-09-16T23:45:55.202796Z	  
2025-09-16T23:45:55.202922Z	Query parameters: {
2025-09-16T23:45:55.203046Z	  limit: 4,
2025-09-16T23:45:55.203164Z	  offset: 0,
2025-09-16T23:45:55.203293Z	  targetMarket: undefined,
2025-09-16T23:45:55.203414Z	  brand: 'ixys',
2025-09-16T23:45:55.20355Z	  featured: undefined
2025-09-16T23:45:55.203701Z	}
2025-09-16T23:45:55.203832Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-16T23:45:55.203971Z	Fetching products with query: 
2025-09-16T23:45:55.204093Z	    {
2025-09-16T23:45:55.204251Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:55.204438Z	        
2025-09-16T23:45:55.204557Z	    _id,
2025-09-16T23:45:55.204687Z	    _type,
2025-09-16T23:45:55.204814Z	    partNumber,
2025-09-16T23:45:55.204936Z	    "slug": slug.current,
2025-09-16T23:45:55.205058Z	    title,
2025-09-16T23:45:55.205172Z	    shortDescription,
2025-09-16T23:45:55.205287Z	    image,
2025-09-16T23:45:55.205397Z	    brand->{
2025-09-16T23:45:55.205535Z	      name,
2025-09-16T23:45:55.205657Z	      "slug": slug.current,
2025-09-16T23:45:55.20581Z	      logo
2025-09-16T23:45:55.206015Z	    },
2025-09-16T23:45:55.206138Z	    category->{
2025-09-16T23:45:55.20626Z	      name,
2025-09-16T23:45:55.206367Z	      "slug": slug.current
2025-09-16T23:45:55.206458Z	    },
2025-09-16T23:45:55.206541Z	    pricing{
2025-09-16T23:45:55.206689Z	      currency,
2025-09-16T23:45:55.206893Z	      tiers[]{
2025-09-16T23:45:55.207073Z	        quantity,
2025-09-16T23:45:55.207197Z	        price,
2025-09-16T23:45:55.207323Z	        unit
2025-09-16T23:45:55.207446Z	      },
2025-09-16T23:45:55.207556Z	      moq,
2025-09-16T23:45:55.207669Z	      leadTime,
2025-09-16T23:45:55.207801Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:55.207949Z	      "price": tiers[0].price,
2025-09-16T23:45:55.208082Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:55.208214Z	    },
2025-09-16T23:45:55.20833Z	    inventory{
2025-09-16T23:45:55.208462Z	      quantity,
2025-09-16T23:45:55.208574Z	      status,
2025-09-16T23:45:55.208692Z	      warehouse,
2025-09-16T23:45:55.208823Z	      lastUpdated,
2025-09-16T23:45:55.208946Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:55.209054Z	      "inStock": status == "in_stock",
2025-09-16T23:45:55.209195Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:55.209322Z	    },
2025-09-16T23:45:55.209446Z	    isActive,
2025-09-16T23:45:55.209551Z	    isFeatured,
2025-09-16T23:45:55.209657Z	    isNew,
2025-09-16T23:45:55.209791Z	    _createdAt,
2025-09-16T23:45:55.209945Z	    _updatedAt
2025-09-16T23:45:55.210137Z	  
2025-09-16T23:45:55.210478Z	      },
2025-09-16T23:45:55.210749Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-16T23:45:55.210994Z	    }
2025-09-16T23:45:55.211151Z	  
2025-09-16T23:45:55.211352Z	Query parameters: {
2025-09-16T23:45:55.211523Z	  limit: 8,
2025-09-16T23:45:55.21165Z	  offset: 0,
2025-09-16T23:45:55.211839Z	  category: undefined,
2025-09-16T23:45:55.211948Z	  brand: 'ixys',
2025-09-16T23:45:55.21207Z	  featured: undefined
2025-09-16T23:45:55.212173Z	}
2025-09-16T23:45:55.212248Z	Fetching solutions with query: 
2025-09-16T23:45:55.212358Z	    {
2025-09-16T23:45:55.212481Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:55.21258Z	        
2025-09-16T23:45:55.21264Z	    _id,
2025-09-16T23:45:55.212731Z	    title,
2025-09-16T23:45:55.212815Z	    "slug": slug.current,
2025-09-16T23:45:55.212871Z	    summary,
2025-09-16T23:45:55.212936Z	    description,
2025-09-16T23:45:55.21299Z	    coverImage,
2025-09-16T23:45:55.213043Z	    primaryBrand->{
2025-09-16T23:45:55.213096Z	      _id,
2025-09-16T23:45:55.213149Z	      name,
2025-09-16T23:45:55.213202Z	      "slug": slug.current,
2025-09-16T23:45:55.213254Z	      logo
2025-09-16T23:45:55.213306Z	    },
2025-09-16T23:45:55.213359Z	    relatedBrands[]->{
2025-09-16T23:45:55.213427Z	      _id,
2025-09-16T23:45:55.213489Z	      name,
2025-09-16T23:45:55.213542Z	      "slug": slug.current,
2025-09-16T23:45:55.213595Z	      logo
2025-09-16T23:45:55.213647Z	    },
2025-09-16T23:45:55.213731Z	    targetMarket,
2025-09-16T23:45:55.213797Z	    complexity,
2025-09-16T23:45:55.213855Z	    publishedAt,
2025-09-16T23:45:55.213909Z	    isPublished,
2025-09-16T23:45:55.213966Z	    isFeatured,
2025-09-16T23:45:55.21402Z	    viewCount,
2025-09-16T23:45:55.214073Z	    _createdAt,
2025-09-16T23:45:55.214126Z	    _updatedAt
2025-09-16T23:45:55.214179Z	  
2025-09-16T23:45:55.214233Z	      },
2025-09-16T23:45:55.214288Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-16T23:45:55.214343Z	    }
2025-09-16T23:45:55.214395Z	  
2025-09-16T23:45:55.214452Z	Query parameters: {
2025-09-16T23:45:55.214506Z	  limit: 4,
2025-09-16T23:45:55.214559Z	  offset: 0,
2025-09-16T23:45:55.214612Z	  targetMarket: undefined,
2025-09-16T23:45:55.214666Z	  brand: 'ixys',
2025-09-16T23:45:55.224077Z	  featured: undefined
2025-09-16T23:45:55.224228Z	}
2025-09-16T23:45:55.224348Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-16T23:45:55.224468Z	Fetching products with query: 
2025-09-16T23:45:55.224576Z	    {
2025-09-16T23:45:55.22471Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:55.224835Z	        
2025-09-16T23:45:55.224949Z	    _id,
2025-09-16T23:45:55.225048Z	    _type,
2025-09-16T23:45:55.225152Z	    partNumber,
2025-09-16T23:45:55.225254Z	    "slug": slug.current,
2025-09-16T23:45:55.225352Z	    title,
2025-09-16T23:45:55.225506Z	    shortDescription,
2025-09-16T23:45:55.225618Z	    image,
2025-09-16T23:45:55.225748Z	    brand->{
2025-09-16T23:45:55.225891Z	      name,
2025-09-16T23:45:55.226012Z	      "slug": slug.current,
2025-09-16T23:45:55.226119Z	      logo
2025-09-16T23:45:55.226249Z	    },
2025-09-16T23:45:55.226396Z	    category->{
2025-09-16T23:45:55.226629Z	      name,
2025-09-16T23:45:55.22694Z	      "slug": slug.current
2025-09-16T23:45:55.227065Z	    },
2025-09-16T23:45:55.227212Z	    pricing{
2025-09-16T23:45:55.227327Z	      currency,
2025-09-16T23:45:55.227454Z	      tiers[]{
2025-09-16T23:45:55.227582Z	        quantity,
2025-09-16T23:45:55.227751Z	        price,
2025-09-16T23:45:55.227877Z	        unit
2025-09-16T23:45:55.228019Z	      },
2025-09-16T23:45:55.228163Z	      moq,
2025-09-16T23:45:55.228276Z	      leadTime,
2025-09-16T23:45:55.228414Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:55.228537Z	      "price": tiers[0].price,
2025-09-16T23:45:55.228659Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:55.228796Z	    },
2025-09-16T23:45:55.229006Z	    inventory{
2025-09-16T23:45:55.229117Z	      quantity,
2025-09-16T23:45:55.229361Z	      status,
2025-09-16T23:45:55.229576Z	      warehouse,
2025-09-16T23:45:55.229827Z	      lastUpdated,
2025-09-16T23:45:55.229966Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:55.230192Z	      "inStock": status == "in_stock",
2025-09-16T23:45:55.230372Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:55.230484Z	    },
2025-09-16T23:45:55.230588Z	    isActive,
2025-09-16T23:45:55.230712Z	    isFeatured,
2025-09-16T23:45:55.230821Z	    isNew,
2025-09-16T23:45:55.230925Z	    _createdAt,
2025-09-16T23:45:55.231029Z	    _updatedAt
2025-09-16T23:45:55.231126Z	  
2025-09-16T23:45:55.231229Z	      },
2025-09-16T23:45:55.231337Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-16T23:45:55.231452Z	    }
2025-09-16T23:45:55.231565Z	  
2025-09-16T23:45:55.231688Z	Query parameters: {
2025-09-16T23:45:55.231808Z	  limit: 8,
2025-09-16T23:45:55.231912Z	  offset: 0,
2025-09-16T23:45:55.23201Z	  category: undefined,
2025-09-16T23:45:55.232108Z	  brand: 'mediatek',
2025-09-16T23:45:55.232202Z	  featured: undefined
2025-09-16T23:45:55.232295Z	}
2025-09-16T23:45:55.232388Z	Fetching solutions with query: 
2025-09-16T23:45:55.232495Z	    {
2025-09-16T23:45:55.232602Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:55.232733Z	        
2025-09-16T23:45:55.232842Z	    _id,
2025-09-16T23:45:55.232943Z	    title,
2025-09-16T23:45:55.233042Z	    "slug": slug.current,
2025-09-16T23:45:55.233144Z	    summary,
2025-09-16T23:45:55.233241Z	    description,
2025-09-16T23:45:55.233345Z	    coverImage,
2025-09-16T23:45:55.233427Z	    primaryBrand->{
2025-09-16T23:45:55.233522Z	      _id,
2025-09-16T23:45:55.233619Z	      name,
2025-09-16T23:45:55.233765Z	      "slug": slug.current,
2025-09-16T23:45:55.233884Z	      logo
2025-09-16T23:45:55.233985Z	    },
2025-09-16T23:45:55.234101Z	    relatedBrands[]->{
2025-09-16T23:45:55.234204Z	      _id,
2025-09-16T23:45:55.23432Z	      name,
2025-09-16T23:45:55.234428Z	      "slug": slug.current,
2025-09-16T23:45:55.234532Z	      logo
2025-09-16T23:45:55.234637Z	    },
2025-09-16T23:45:55.234799Z	    targetMarket,
2025-09-16T23:45:55.234916Z	    complexity,
2025-09-16T23:45:55.235017Z	    publishedAt,
2025-09-16T23:45:55.235177Z	    isPublished,
2025-09-16T23:45:55.235377Z	    isFeatured,
2025-09-16T23:45:55.235498Z	    viewCount,
2025-09-16T23:45:55.235624Z	    _createdAt,
2025-09-16T23:45:55.235749Z	    _updatedAt
2025-09-16T23:45:55.235822Z	  
2025-09-16T23:45:55.235881Z	      },
2025-09-16T23:45:55.235938Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-16T23:45:55.236004Z	    }
2025-09-16T23:45:55.236349Z	  
2025-09-16T23:45:55.236434Z	Query parameters: {
2025-09-16T23:45:55.236579Z	  limit: 4,
2025-09-16T23:45:55.236663Z	  offset: 0,
2025-09-16T23:45:55.236777Z	  targetMarket: undefined,
2025-09-16T23:45:55.236837Z	  brand: 'mediatek',
2025-09-16T23:45:55.236891Z	  featured: undefined
2025-09-16T23:45:55.236947Z	}
2025-09-16T23:45:55.237009Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-16T23:45:55.23707Z	Fetching products with query: 
2025-09-16T23:45:55.237126Z	    {
2025-09-16T23:45:55.237186Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:55.237242Z	        
2025-09-16T23:45:55.237303Z	    _id,
2025-09-16T23:45:55.23736Z	    _type,
2025-09-16T23:45:55.237414Z	    partNumber,
2025-09-16T23:45:55.237468Z	    "slug": slug.current,
2025-09-16T23:45:55.237521Z	    title,
2025-09-16T23:45:55.237574Z	    shortDescription,
2025-09-16T23:45:55.237638Z	    image,
2025-09-16T23:45:55.237719Z	    brand->{
2025-09-16T23:45:55.237816Z	      name,
2025-09-16T23:45:55.237902Z	      "slug": slug.current,
2025-09-16T23:45:55.237995Z	      logo
2025-09-16T23:45:55.238095Z	    },
2025-09-16T23:45:55.238199Z	    category->{
2025-09-16T23:45:55.238293Z	      name,
2025-09-16T23:45:55.238388Z	      "slug": slug.current
2025-09-16T23:45:55.238564Z	    },
2025-09-16T23:45:55.23869Z	    pricing{
2025-09-16T23:45:55.23879Z	      currency,
2025-09-16T23:45:55.23889Z	      tiers[]{
2025-09-16T23:45:55.238986Z	        quantity,
2025-09-16T23:45:55.239076Z	        price,
2025-09-16T23:45:55.239163Z	        unit
2025-09-16T23:45:55.239277Z	      },
2025-09-16T23:45:55.239378Z	      moq,
2025-09-16T23:45:55.239469Z	      leadTime,
2025-09-16T23:45:55.239566Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:55.239689Z	      "price": tiers[0].price,
2025-09-16T23:45:55.239786Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:55.239996Z	    },
2025-09-16T23:45:55.240222Z	    inventory{
2025-09-16T23:45:55.24032Z	      quantity,
2025-09-16T23:45:55.240512Z	      status,
2025-09-16T23:45:55.24072Z	      warehouse,
2025-09-16T23:45:55.240811Z	      lastUpdated,
2025-09-16T23:45:55.240874Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:55.240932Z	      "inStock": status == "in_stock",
2025-09-16T23:45:55.241001Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:55.241057Z	    },
2025-09-16T23:45:55.241112Z	    isActive,
2025-09-16T23:45:55.241166Z	    isFeatured,
2025-09-16T23:45:55.241218Z	    isNew,
2025-09-16T23:45:55.241291Z	    _createdAt,
2025-09-16T23:45:55.241606Z	    _updatedAt
2025-09-16T23:45:55.241733Z	  
2025-09-16T23:45:55.241931Z	      },
2025-09-16T23:45:55.242232Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-16T23:45:55.242322Z	    }
2025-09-16T23:45:55.242491Z	  
2025-09-16T23:45:55.2427Z	Query parameters: {
2025-09-16T23:45:55.242796Z	  limit: 8,
2025-09-16T23:45:55.242976Z	  offset: 0,
2025-09-16T23:45:55.243045Z	  category: undefined,
2025-09-16T23:45:55.243211Z	  brand: 'mediatek',
2025-09-16T23:45:55.24329Z	  featured: undefined
2025-09-16T23:45:55.243352Z	}
2025-09-16T23:45:55.243416Z	Fetching solutions with query: 
2025-09-16T23:45:55.243471Z	    {
2025-09-16T23:45:55.243526Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:55.243587Z	        
2025-09-16T23:45:55.24365Z	    _id,
2025-09-16T23:45:55.243872Z	    title,
2025-09-16T23:45:55.243985Z	    "slug": slug.current,
2025-09-16T23:45:55.244075Z	    summary,
2025-09-16T23:45:55.24427Z	    description,
2025-09-16T23:45:55.244463Z	    coverImage,
2025-09-16T23:45:55.244541Z	    primaryBrand->{
2025-09-16T23:45:55.244605Z	      _id,
2025-09-16T23:45:55.244828Z	      name,
2025-09-16T23:45:55.244935Z	      "slug": slug.current,
2025-09-16T23:45:55.245046Z	      logo
2025-09-16T23:45:55.245152Z	    },
2025-09-16T23:45:55.245248Z	    relatedBrands[]->{
2025-09-16T23:45:55.245474Z	      _id,
2025-09-16T23:45:55.245565Z	      name,
2025-09-16T23:45:55.245671Z	      "slug": slug.current,
2025-09-16T23:45:55.245828Z	      logo
2025-09-16T23:45:55.245922Z	    },
2025-09-16T23:45:55.246078Z	    targetMarket,
2025-09-16T23:45:55.246193Z	    complexity,
2025-09-16T23:45:55.246386Z	    publishedAt,
2025-09-16T23:45:55.246657Z	    isPublished,
2025-09-16T23:45:55.24683Z	    isFeatured,
2025-09-16T23:45:55.246974Z	    viewCount,
2025-09-16T23:45:55.247076Z	    _createdAt,
2025-09-16T23:45:55.247232Z	    _updatedAt
2025-09-16T23:45:55.247301Z	  
2025-09-16T23:45:55.247399Z	      },
2025-09-16T23:45:55.247524Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-16T23:45:55.247791Z	    }
2025-09-16T23:45:55.247876Z	  
2025-09-16T23:45:55.248121Z	Query parameters: {
2025-09-16T23:45:55.248432Z	  limit: 4,
2025-09-16T23:45:55.248767Z	  offset: 0,
2025-09-16T23:45:55.248855Z	  targetMarket: undefined,
2025-09-16T23:45:55.24892Z	  brand: 'mediatek',
2025-09-16T23:45:55.249255Z	  featured: undefined
2025-09-16T23:45:55.249558Z	}
2025-09-16T23:45:55.249651Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-16T23:45:55.249956Z	Fetching products with query: 
2025-09-16T23:45:55.250242Z	    {
2025-09-16T23:45:55.250337Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:55.250635Z	        
2025-09-16T23:45:55.250757Z	    _id,
2025-09-16T23:45:55.251047Z	    _type,
2025-09-16T23:45:55.251333Z	    partNumber,
2025-09-16T23:45:55.251472Z	    "slug": slug.current,
2025-09-16T23:45:55.251888Z	    title,
2025-09-16T23:45:55.252007Z	    shortDescription,
2025-09-16T23:45:55.252355Z	    image,
2025-09-16T23:45:55.252464Z	    brand->{
2025-09-16T23:45:55.252809Z	      name,
2025-09-16T23:45:55.253134Z	      "slug": slug.current,
2025-09-16T23:45:55.253254Z	      logo
2025-09-16T23:45:55.253493Z	    },
2025-09-16T23:45:55.253573Z	    category->{
2025-09-16T23:45:55.253925Z	      name,
2025-09-16T23:45:55.254187Z	      "slug": slug.current
2025-09-16T23:45:55.254471Z	    },
2025-09-16T23:45:55.254742Z	    pricing{
2025-09-16T23:45:55.25498Z	      currency,
2025-09-16T23:45:55.255269Z	      tiers[]{
2025-09-16T23:45:55.255464Z	        quantity,
2025-09-16T23:45:55.255648Z	        price,
2025-09-16T23:45:55.255791Z	        unit
2025-09-16T23:45:55.255905Z	      },
2025-09-16T23:45:55.256018Z	      moq,
2025-09-16T23:45:55.256134Z	      leadTime,
2025-09-16T23:45:55.256256Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:55.256388Z	      "price": tiers[0].price,
2025-09-16T23:45:55.256504Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:55.2567Z	    },
2025-09-16T23:45:55.256829Z	    inventory{
2025-09-16T23:45:55.256944Z	      quantity,
2025-09-16T23:45:55.257047Z	      status,
2025-09-16T23:45:55.257162Z	      warehouse,
2025-09-16T23:45:55.257282Z	      lastUpdated,
2025-09-16T23:45:55.257416Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:55.257533Z	      "inStock": status == "in_stock",
2025-09-16T23:45:55.257646Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:55.257784Z	    },
2025-09-16T23:45:55.257901Z	    isActive,
2025-09-16T23:45:55.258007Z	    isFeatured,
2025-09-16T23:45:55.258114Z	    isNew,
2025-09-16T23:45:55.258228Z	    _createdAt,
2025-09-16T23:45:55.25836Z	    _updatedAt
2025-09-16T23:45:55.258479Z	  
2025-09-16T23:45:55.258594Z	      },
2025-09-16T23:45:55.25873Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-16T23:45:55.258877Z	    }
2025-09-16T23:45:55.259001Z	  
2025-09-16T23:45:55.259116Z	Query parameters: {
2025-09-16T23:45:55.259244Z	  limit: 8,
2025-09-16T23:45:55.259379Z	  offset: 0,
2025-09-16T23:45:55.259496Z	  category: undefined,
2025-09-16T23:45:55.25961Z	  brand: 'lem',
2025-09-16T23:45:55.259766Z	  featured: undefined
2025-09-16T23:45:55.259892Z	}
2025-09-16T23:45:55.260017Z	Fetching solutions with query: 
2025-09-16T23:45:55.260142Z	    {
2025-09-16T23:45:55.260268Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:55.260405Z	        
2025-09-16T23:45:55.26052Z	    _id,
2025-09-16T23:45:55.260631Z	    title,
2025-09-16T23:45:55.260761Z	    "slug": slug.current,
2025-09-16T23:45:55.260877Z	    summary,
2025-09-16T23:45:55.260983Z	    description,
2025-09-16T23:45:55.2611Z	    coverImage,
2025-09-16T23:45:55.261211Z	    primaryBrand->{
2025-09-16T23:45:55.261323Z	      _id,
2025-09-16T23:45:55.261452Z	      name,
2025-09-16T23:45:55.261574Z	      "slug": slug.current,
2025-09-16T23:45:55.261712Z	      logo
2025-09-16T23:45:55.261837Z	    },
2025-09-16T23:45:55.26195Z	    relatedBrands[]->{
2025-09-16T23:45:55.262065Z	      _id,
2025-09-16T23:45:55.262183Z	      name,
2025-09-16T23:45:55.262319Z	      "slug": slug.current,
2025-09-16T23:45:55.262447Z	      logo
2025-09-16T23:45:55.262561Z	    },
2025-09-16T23:45:55.262689Z	    targetMarket,
2025-09-16T23:45:55.262815Z	    complexity,
2025-09-16T23:45:55.26293Z	    publishedAt,
2025-09-16T23:45:55.263053Z	    isPublished,
2025-09-16T23:45:55.263166Z	    isFeatured,
2025-09-16T23:45:55.263276Z	    viewCount,
2025-09-16T23:45:55.263396Z	    _createdAt,
2025-09-16T23:45:55.263507Z	    _updatedAt
2025-09-16T23:45:55.263622Z	  
2025-09-16T23:45:55.263763Z	      },
2025-09-16T23:45:55.26388Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-16T23:45:55.263993Z	    }
2025-09-16T23:45:55.264099Z	  
2025-09-16T23:45:55.2642Z	Query parameters: {
2025-09-16T23:45:55.264305Z	  limit: 4,
2025-09-16T23:45:55.264431Z	  offset: 0,
2025-09-16T23:45:55.264557Z	  targetMarket: undefined,
2025-09-16T23:45:55.26467Z	  brand: 'lem',
2025-09-16T23:45:55.264814Z	  featured: undefined
2025-09-16T23:45:55.264923Z	}
2025-09-16T23:45:55.265027Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-16T23:45:55.265141Z	Fetching products with query: 
2025-09-16T23:45:55.265246Z	    {
2025-09-16T23:45:55.265404Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:55.265551Z	        
2025-09-16T23:45:55.26573Z	    _id,
2025-09-16T23:45:55.265866Z	    _type,
2025-09-16T23:45:55.265977Z	    partNumber,
2025-09-16T23:45:55.266092Z	    "slug": slug.current,
2025-09-16T23:45:55.266198Z	    title,
2025-09-16T23:45:55.266301Z	    shortDescription,
2025-09-16T23:45:55.266433Z	    image,
2025-09-16T23:45:55.266542Z	    brand->{
2025-09-16T23:45:55.266642Z	      name,
2025-09-16T23:45:55.266765Z	      "slug": slug.current,
2025-09-16T23:45:55.266969Z	      logo
2025-09-16T23:45:55.267077Z	    },
2025-09-16T23:45:55.26719Z	    category->{
2025-09-16T23:45:55.267295Z	      name,
2025-09-16T23:45:55.267434Z	      "slug": slug.current
2025-09-16T23:45:55.26755Z	    },
2025-09-16T23:45:55.267658Z	    pricing{
2025-09-16T23:45:55.267791Z	      currency,
2025-09-16T23:45:55.267904Z	      tiers[]{
2025-09-16T23:45:55.268003Z	        quantity,
2025-09-16T23:45:55.268116Z	        price,
2025-09-16T23:45:55.268213Z	        unit
2025-09-16T23:45:55.268318Z	      },
2025-09-16T23:45:55.268443Z	      moq,
2025-09-16T23:45:55.268551Z	      leadTime,
2025-09-16T23:45:55.268656Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:55.268794Z	      "price": tiers[0].price,
2025-09-16T23:45:55.268902Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:55.269013Z	    },
2025-09-16T23:45:55.26913Z	    inventory{
2025-09-16T23:45:55.269238Z	      quantity,
2025-09-16T23:45:55.269363Z	      status,
2025-09-16T23:45:55.26948Z	      warehouse,
2025-09-16T23:45:55.269582Z	      lastUpdated,
2025-09-16T23:45:55.269705Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:55.269824Z	      "inStock": status == "in_stock",
2025-09-16T23:45:55.269946Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:55.270055Z	    },
2025-09-16T23:45:55.270175Z	    isActive,
2025-09-16T23:45:55.270325Z	    isFeatured,
2025-09-16T23:45:55.27073Z	    isNew,
2025-09-16T23:45:55.270844Z	    _createdAt,
2025-09-16T23:45:55.270958Z	    _updatedAt
2025-09-16T23:45:55.271066Z	  
2025-09-16T23:45:55.271179Z	      },
2025-09-16T23:45:55.271289Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-16T23:45:55.271494Z	    }
2025-09-16T23:45:55.271796Z	  
2025-09-16T23:45:55.27207Z	Query parameters: {
2025-09-16T23:45:55.272238Z	  limit: 8,
2025-09-16T23:45:55.272352Z	  offset: 0,
2025-09-16T23:45:55.272473Z	  category: undefined,
2025-09-16T23:45:55.27258Z	  brand: 'lem',
2025-09-16T23:45:55.272671Z	  featured: undefined
2025-09-16T23:45:55.272791Z	}
2025-09-16T23:45:55.272957Z	Fetching solutions with query: 
2025-09-16T23:45:55.273256Z	    {
2025-09-16T23:45:55.273449Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:55.273614Z	        
2025-09-16T23:45:55.273759Z	    _id,
2025-09-16T23:45:55.273877Z	    title,
2025-09-16T23:45:55.273998Z	    "slug": slug.current,
2025-09-16T23:45:55.274143Z	    summary,
2025-09-16T23:45:55.274519Z	    description,
2025-09-16T23:45:55.274639Z	    coverImage,
2025-09-16T23:45:55.274965Z	    primaryBrand->{
2025-09-16T23:45:55.27522Z	      _id,
2025-09-16T23:45:55.275467Z	      name,
2025-09-16T23:45:55.276382Z	      "slug": slug.current,
2025-09-16T23:45:55.276498Z	      logo
2025-09-16T23:45:55.276739Z	    },
2025-09-16T23:45:55.277282Z	    relatedBrands[]->{
2025-09-16T23:45:55.277442Z	      _id,
2025-09-16T23:45:55.277561Z	      name,
2025-09-16T23:45:55.277705Z	      "slug": slug.current,
2025-09-16T23:45:55.277874Z	      logo
2025-09-16T23:45:55.277984Z	    },
2025-09-16T23:45:55.27815Z	    targetMarket,
2025-09-16T23:45:55.278415Z	    complexity,
2025-09-16T23:45:55.278616Z	    publishedAt,
2025-09-16T23:45:55.278845Z	    isPublished,
2025-09-16T23:45:55.279018Z	    isFeatured,
2025-09-16T23:45:55.279239Z	    viewCount,
2025-09-16T23:45:55.279374Z	    _createdAt,
2025-09-16T23:45:55.27952Z	    _updatedAt
2025-09-16T23:45:55.279707Z	  
2025-09-16T23:45:55.279873Z	      },
2025-09-16T23:45:55.280082Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-16T23:45:55.280279Z	    }
2025-09-16T23:45:55.280432Z	  
2025-09-16T23:45:55.280688Z	Query parameters: {
2025-09-16T23:45:55.2809Z	  limit: 4,
2025-09-16T23:45:55.281152Z	  offset: 0,
2025-09-16T23:45:55.281376Z	  targetMarket: undefined,
2025-09-16T23:45:55.28157Z	  brand: 'lem',
2025-09-16T23:45:55.281742Z	  featured: undefined
2025-09-16T23:45:55.281846Z	}
2025-09-16T23:45:55.282007Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:45:55.282164Z	Fetching products with query: 
2025-09-16T23:45:55.282366Z	    {
2025-09-16T23:45:55.282537Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:55.282661Z	        
2025-09-16T23:45:55.282992Z	    _id,
2025-09-16T23:45:55.283089Z	    _type,
2025-09-16T23:45:55.283239Z	    partNumber,
2025-09-16T23:45:55.283328Z	    "slug": slug.current,
2025-09-16T23:45:55.28349Z	    title,
2025-09-16T23:45:55.283632Z	    shortDescription,
2025-09-16T23:45:55.283794Z	    image,
2025-09-16T23:45:55.283889Z	    brand->{
2025-09-16T23:45:55.284014Z	      name,
2025-09-16T23:45:55.2841Z	      "slug": slug.current,
2025-09-16T23:45:55.28425Z	      logo
2025-09-16T23:45:55.284428Z	    },
2025-09-16T23:45:55.284891Z	    category->{
2025-09-16T23:45:55.285104Z	      name,
2025-09-16T23:45:55.285332Z	      "slug": slug.current
2025-09-16T23:45:55.285448Z	    },
2025-09-16T23:45:55.285661Z	    pricing{
2025-09-16T23:45:55.285864Z	      currency,
2025-09-16T23:45:55.285932Z	      tiers[]{
2025-09-16T23:45:55.285987Z	        quantity,
2025-09-16T23:45:55.286043Z	        price,
2025-09-16T23:45:55.286097Z	        unit
2025-09-16T23:45:55.28615Z	      },
2025-09-16T23:45:55.286203Z	      moq,
2025-09-16T23:45:55.286256Z	      leadTime,
2025-09-16T23:45:55.286457Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:55.286646Z	      "price": tiers[0].price,
2025-09-16T23:45:55.286843Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:55.286924Z	    },
2025-09-16T23:45:55.286987Z	    inventory{
2025-09-16T23:45:55.287248Z	      quantity,
2025-09-16T23:45:55.28743Z	      status,
2025-09-16T23:45:55.287614Z	      warehouse,
2025-09-16T23:45:55.287799Z	      lastUpdated,
2025-09-16T23:45:55.287996Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:55.288073Z	      "inStock": status == "in_stock",
2025-09-16T23:45:55.288235Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:55.288318Z	    },
2025-09-16T23:45:55.288498Z	    isActive,
2025-09-16T23:45:55.288573Z	    isFeatured,
2025-09-16T23:45:55.288749Z	    isNew,
2025-09-16T23:45:55.288902Z	    _createdAt,
2025-09-16T23:45:55.288982Z	    _updatedAt
2025-09-16T23:45:55.28908Z	  
2025-09-16T23:45:55.289163Z	      },
2025-09-16T23:45:55.289325Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:45:55.289407Z	    }
2025-09-16T23:45:55.28947Z	  
2025-09-16T23:45:55.289668Z	Query parameters: {
2025-09-16T23:45:55.289783Z	  limit: 8,
2025-09-16T23:45:55.289878Z	  offset: 0,
2025-09-16T23:45:55.290082Z	  category: undefined,
2025-09-16T23:45:55.290221Z	  brand: 'littelfuse',
2025-09-16T23:45:55.290373Z	  featured: undefined
2025-09-16T23:45:55.290485Z	}
2025-09-16T23:45:55.290562Z	Fetching solutions with query: 
2025-09-16T23:45:55.290691Z	    {
2025-09-16T23:45:55.290832Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:55.290993Z	        
2025-09-16T23:45:55.291071Z	    _id,
2025-09-16T23:45:55.291213Z	    title,
2025-09-16T23:45:55.291338Z	    "slug": slug.current,
2025-09-16T23:45:55.291457Z	    summary,
2025-09-16T23:45:55.2916Z	    description,
2025-09-16T23:45:55.291798Z	    coverImage,
2025-09-16T23:45:55.291887Z	    primaryBrand->{
2025-09-16T23:45:55.291951Z	      _id,
2025-09-16T23:45:55.292079Z	      name,
2025-09-16T23:45:55.292253Z	      "slug": slug.current,
2025-09-16T23:45:55.292379Z	      logo
2025-09-16T23:45:55.292453Z	    },
2025-09-16T23:45:55.292543Z	    relatedBrands[]->{
2025-09-16T23:45:55.292657Z	      _id,
2025-09-16T23:45:55.292769Z	      name,
2025-09-16T23:45:55.292866Z	      "slug": slug.current,
2025-09-16T23:45:55.292959Z	      logo
2025-09-16T23:45:55.293061Z	    },
2025-09-16T23:45:55.293162Z	    targetMarket,
2025-09-16T23:45:55.293261Z	    complexity,
2025-09-16T23:45:55.293376Z	    publishedAt,
2025-09-16T23:45:55.293482Z	    isPublished,
2025-09-16T23:45:55.293593Z	    isFeatured,
2025-09-16T23:45:55.293723Z	    viewCount,
2025-09-16T23:45:55.293803Z	    _createdAt,
2025-09-16T23:45:55.293904Z	    _updatedAt
2025-09-16T23:45:55.294026Z	  
2025-09-16T23:45:55.294147Z	      },
2025-09-16T23:45:55.294268Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:45:55.294446Z	    }
2025-09-16T23:45:55.294532Z	  
2025-09-16T23:45:55.294621Z	Query parameters: {
2025-09-16T23:45:55.294742Z	  limit: 4,
2025-09-16T23:45:55.294886Z	  offset: 0,
2025-09-16T23:45:55.294975Z	  targetMarket: undefined,
2025-09-16T23:45:55.29507Z	  brand: 'littelfuse',
2025-09-16T23:45:55.295218Z	  featured: undefined
2025-09-16T23:45:55.295328Z	}
2025-09-16T23:45:55.295489Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:45:55.295623Z	Fetching products with query: 
2025-09-16T23:45:55.295783Z	    {
2025-09-16T23:45:55.295968Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:55.296118Z	        
2025-09-16T23:45:55.296221Z	    _id,
2025-09-16T23:45:55.296331Z	    _type,
2025-09-16T23:45:55.296446Z	    partNumber,
2025-09-16T23:45:55.296619Z	    "slug": slug.current,
2025-09-16T23:45:55.296714Z	    title,
2025-09-16T23:45:55.296889Z	    shortDescription,
2025-09-16T23:45:55.297031Z	    image,
2025-09-16T23:45:55.297173Z	    brand->{
2025-09-16T23:45:55.297256Z	      name,
2025-09-16T23:45:55.297384Z	      "slug": slug.current,
2025-09-16T23:45:55.297479Z	      logo
2025-09-16T23:45:55.2976Z	    },
2025-09-16T23:45:55.297719Z	    category->{
2025-09-16T23:45:55.297817Z	      name,
2025-09-16T23:45:55.29791Z	      "slug": slug.current
2025-09-16T23:45:55.298044Z	    },
2025-09-16T23:45:55.298198Z	    pricing{
2025-09-16T23:45:55.298275Z	      currency,
2025-09-16T23:45:55.298355Z	      tiers[]{
2025-09-16T23:45:55.298461Z	        quantity,
2025-09-16T23:45:55.298601Z	        price,
2025-09-16T23:45:55.298771Z	        unit
2025-09-16T23:45:55.29892Z	      },
2025-09-16T23:45:55.299057Z	      moq,
2025-09-16T23:45:55.299289Z	      leadTime,
2025-09-16T23:45:55.299371Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:55.299504Z	      "price": tiers[0].price,
2025-09-16T23:45:55.299624Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:55.299798Z	    },
2025-09-16T23:45:55.299958Z	    inventory{
2025-09-16T23:45:55.300038Z	      quantity,
2025-09-16T23:45:55.300154Z	      status,
2025-09-16T23:45:55.300237Z	      warehouse,
2025-09-16T23:45:55.300293Z	      lastUpdated,
2025-09-16T23:45:55.300355Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:55.300414Z	      "inStock": status == "in_stock",
2025-09-16T23:45:55.300468Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:55.300536Z	    },
2025-09-16T23:45:55.300589Z	    isActive,
2025-09-16T23:45:55.300652Z	    isFeatured,
2025-09-16T23:45:55.300723Z	    isNew,
2025-09-16T23:45:55.300777Z	    _createdAt,
2025-09-16T23:45:55.30083Z	    _updatedAt
2025-09-16T23:45:55.300883Z	  
2025-09-16T23:45:55.300935Z	      },
2025-09-16T23:45:55.300987Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:45:55.301055Z	    }
2025-09-16T23:45:55.301112Z	  
2025-09-16T23:45:55.301166Z	Query parameters: {
2025-09-16T23:45:55.301219Z	  limit: 8,
2025-09-16T23:45:55.301272Z	  offset: 0,
2025-09-16T23:45:55.301324Z	  category: undefined,
2025-09-16T23:45:55.301386Z	  brand: 'littelfuse',
2025-09-16T23:45:55.30144Z	  featured: undefined
2025-09-16T23:45:55.301494Z	}
2025-09-16T23:45:55.30155Z	Fetching solutions with query: 
2025-09-16T23:45:55.301603Z	    {
2025-09-16T23:45:55.301656Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:55.301728Z	        
2025-09-16T23:45:55.301782Z	    _id,
2025-09-16T23:45:55.301835Z	    title,
2025-09-16T23:45:55.301888Z	    "slug": slug.current,
2025-09-16T23:45:55.301948Z	    summary,
2025-09-16T23:45:55.302002Z	    description,
2025-09-16T23:45:55.302055Z	    coverImage,
2025-09-16T23:45:55.302107Z	    primaryBrand->{
2025-09-16T23:45:55.30216Z	      _id,
2025-09-16T23:45:55.302212Z	      name,
2025-09-16T23:45:55.302268Z	      "slug": slug.current,
2025-09-16T23:45:55.30232Z	      logo
2025-09-16T23:45:55.302384Z	    },
2025-09-16T23:45:55.30244Z	    relatedBrands[]->{
2025-09-16T23:45:55.302494Z	      _id,
2025-09-16T23:45:55.302546Z	      name,
2025-09-16T23:45:55.302598Z	      "slug": slug.current,
2025-09-16T23:45:55.302663Z	      logo
2025-09-16T23:45:55.302737Z	    },
2025-09-16T23:45:55.302791Z	    targetMarket,
2025-09-16T23:45:55.302844Z	    complexity,
2025-09-16T23:45:55.302897Z	    publishedAt,
2025-09-16T23:45:55.302949Z	    isPublished,
2025-09-16T23:45:55.303001Z	    isFeatured,
2025-09-16T23:45:55.303055Z	    viewCount,
2025-09-16T23:45:55.303107Z	    _createdAt,
2025-09-16T23:45:55.303159Z	    _updatedAt
2025-09-16T23:45:55.30322Z	  
2025-09-16T23:45:55.303274Z	      },
2025-09-16T23:45:55.303327Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:45:55.303397Z	    }
2025-09-16T23:45:55.303456Z	  
2025-09-16T23:45:55.303514Z	Query parameters: {
2025-09-16T23:45:55.303569Z	  limit: 4,
2025-09-16T23:45:55.303622Z	  offset: 0,
2025-09-16T23:45:55.323814Z	  targetMarket: undefined,
2025-09-16T23:45:55.324076Z	  brand: 'littelfuse',
2025-09-16T23:45:55.324155Z	  featured: undefined
2025-09-16T23:45:55.324214Z	}
2025-09-16T23:45:55.324272Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:45:55.32433Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:45:55.324402Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:45:55.324463Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:45:55.32452Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:55.324579Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:55.547534Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:55.547849Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:55.547994Z	✅ [getBrandData] Found brand: Epcos
2025-09-16T23:45:55.548277Z	✅ [getBrandData] Found brand: Epcos
2025-09-16T23:45:55.548437Z	Products fetch result: {
2025-09-16T23:45:55.548653Z	  totalProducts: 2,
2025-09-16T23:45:55.548828Z	  fetchedProducts: 2,
2025-09-16T23:45:55.548961Z	  firstProduct: {
2025-09-16T23:45:55.549087Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:45:55.54927Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:45:55.549501Z	    _type: 'product',
2025-09-16T23:45:55.549661Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:45:55.549823Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:45:55.550055Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:45:55.550165Z	    image: null,
2025-09-16T23:45:55.550287Z	    inventory: {
2025-09-16T23:45:55.550375Z	      inStock: true,
2025-09-16T23:45:55.5505Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:45:55.550582Z	      quantity: 0,
2025-09-16T23:45:55.550666Z	      status: 'in_stock',
2025-09-16T23:45:55.550789Z	      warehouse: null
2025-09-16T23:45:55.550892Z	    },
2025-09-16T23:45:55.551044Z	    isActive: true,
2025-09-16T23:45:55.551161Z	    isFeatured: false,
2025-09-16T23:45:55.551258Z	    isNew: false,
2025-09-16T23:45:55.551352Z	    partNumber: '99999',
2025-09-16T23:45:55.551421Z	    pricing: {
2025-09-16T23:45:55.5515Z	      currency: 'CNY',
2025-09-16T23:45:55.551598Z	      leadTime: null,
2025-09-16T23:45:55.551758Z	      moq: null,
2025-09-16T23:45:55.551936Z	      price: null,
2025-09-16T23:45:55.552114Z	      tiers: null
2025-09-16T23:45:55.55225Z	    },
2025-09-16T23:45:55.552389Z	    shortDescription: null,
2025-09-16T23:45:55.552507Z	    slug: '99999',
2025-09-16T23:45:55.552611Z	    title: '99999'
2025-09-16T23:45:55.552759Z	  }
2025-09-16T23:45:55.552865Z	}
2025-09-16T23:45:55.552964Z	Products fetch result: {
2025-09-16T23:45:55.553063Z	  totalProducts: 2,
2025-09-16T23:45:55.553159Z	  fetchedProducts: 2,
2025-09-16T23:45:55.553257Z	  firstProduct: {
2025-09-16T23:45:55.553353Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:45:55.553442Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:45:55.55353Z	    _type: 'product',
2025-09-16T23:45:55.553624Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:45:55.553788Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:45:55.553893Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:45:55.553994Z	    image: null,
2025-09-16T23:45:55.554092Z	    inventory: {
2025-09-16T23:45:55.554247Z	      inStock: true,
2025-09-16T23:45:55.554378Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:45:55.554482Z	      quantity: 0,
2025-09-16T23:45:55.554575Z	      status: 'in_stock',
2025-09-16T23:45:55.55469Z	      warehouse: null
2025-09-16T23:45:55.554795Z	    },
2025-09-16T23:45:55.554893Z	    isActive: true,
2025-09-16T23:45:55.554988Z	    isFeatured: false,
2025-09-16T23:45:55.555079Z	    isNew: false,
2025-09-16T23:45:55.55518Z	    partNumber: '99999',
2025-09-16T23:45:55.55528Z	    pricing: {
2025-09-16T23:45:55.55538Z	      currency: 'CNY',
2025-09-16T23:45:55.555476Z	      leadTime: null,
2025-09-16T23:45:55.555571Z	      moq: null,
2025-09-16T23:45:55.555758Z	      price: null,
2025-09-16T23:45:55.555902Z	      tiers: null
2025-09-16T23:45:55.556011Z	    },
2025-09-16T23:45:55.556216Z	    shortDescription: null,
2025-09-16T23:45:55.556587Z	    slug: '99999',
2025-09-16T23:45:55.558896Z	    title: '99999'
2025-09-16T23:45:55.559019Z	  }
2025-09-16T23:45:55.559088Z	}
2025-09-16T23:45:55.559384Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:55.559485Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:55.559552Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:55.559857Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:55.560047Z	Solutions fetch result: {
2025-09-16T23:45:55.560175Z	  totalSolutions: 1,
2025-09-16T23:45:55.560292Z	  fetchedSolutions: 1,
2025-09-16T23:45:55.560399Z	  firstSolution: {
2025-09-16T23:45:55.560507Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-16T23:45:55.560614Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-16T23:45:55.560752Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-16T23:45:55.560864Z	    complexity: 'medium',
2025-09-16T23:45:55.560967Z	    coverImage: null,
2025-09-16T23:45:55.561073Z	    description: [ [Object] ],
2025-09-16T23:45:55.561184Z	    isFeatured: false,
2025-09-16T23:45:55.5613Z	    isPublished: true,
2025-09-16T23:45:55.561406Z	    primaryBrand: {
2025-09-16T23:45:55.561513Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:45:55.561622Z	      logo: null,
2025-09-16T23:45:55.561757Z	      name: 'IXYS',
2025-09-16T23:45:55.561861Z	      slug: 'ixys'
2025-09-16T23:45:55.561977Z	    },
2025-09-16T23:45:55.562085Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-16T23:45:55.562194Z	    relatedBrands: null,
2025-09-16T23:45:55.562299Z	    slug: '99999',
2025-09-16T23:45:55.562397Z	    summary: '99999',
2025-09-16T23:45:55.562496Z	    targetMarket: 'industrial-automation',
2025-09-16T23:45:55.562606Z	    title: '99999',
2025-09-16T23:45:55.562741Z	    viewCount: 0
2025-09-16T23:45:55.562853Z	  }
2025-09-16T23:45:55.562954Z	}
2025-09-16T23:45:55.563062Z	Solutions fetch result: {
2025-09-16T23:45:55.563184Z	  totalSolutions: 1,
2025-09-16T23:45:55.563298Z	  fetchedSolutions: 1,
2025-09-16T23:45:55.563405Z	  firstSolution: {
2025-09-16T23:45:55.564592Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-16T23:45:55.565003Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-16T23:45:55.565962Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-16T23:45:55.566111Z	    complexity: 'medium',
2025-09-16T23:45:55.56623Z	    coverImage: null,
2025-09-16T23:45:55.566353Z	    description: [ [Object] ],
2025-09-16T23:45:55.56647Z	    isFeatured: false,
2025-09-16T23:45:55.566579Z	    isPublished: true,
2025-09-16T23:45:55.566697Z	    primaryBrand: {
2025-09-16T23:45:55.566827Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:45:55.566948Z	      logo: null,
2025-09-16T23:45:55.567069Z	      name: 'IXYS',
2025-09-16T23:45:55.567182Z	      slug: 'ixys'
2025-09-16T23:45:55.567289Z	    },
2025-09-16T23:45:55.567398Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-16T23:45:55.567509Z	    relatedBrands: null,
2025-09-16T23:45:55.567629Z	    slug: '99999',
2025-09-16T23:45:55.567783Z	    summary: '99999',
2025-09-16T23:45:55.567901Z	    targetMarket: 'industrial-automation',
2025-09-16T23:45:55.568013Z	    title: '99999',
2025-09-16T23:45:55.568113Z	    viewCount: 0
2025-09-16T23:45:55.568212Z	  }
2025-09-16T23:45:55.568323Z	}
2025-09-16T23:45:55.56846Z	✅ [getBrandData] Found brand: IXYS
2025-09-16T23:45:55.568662Z	✅ [getBrandData] Found brand: IXYS
2025-09-16T23:45:55.568882Z	Products fetch result: {
2025-09-16T23:45:55.569025Z	  totalProducts: 4,
2025-09-16T23:45:55.569172Z	  fetchedProducts: 4,
2025-09-16T23:45:55.56935Z	  firstProduct: {
2025-09-16T23:45:55.569536Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:45:55.569794Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:45:55.569934Z	    _type: 'product',
2025-09-16T23:45:55.57005Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:45:55.570157Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:45:55.57028Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:45:55.570418Z	    image: null,
2025-09-16T23:45:55.570531Z	    inventory: {
2025-09-16T23:45:55.570637Z	      inStock: true,
2025-09-16T23:45:55.570778Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:45:55.570891Z	      quantity: 0,
2025-09-16T23:45:55.570988Z	      status: 'in_stock',
2025-09-16T23:45:55.571085Z	      warehouse: null
2025-09-16T23:45:55.571181Z	    },
2025-09-16T23:45:55.571274Z	    isActive: true,
2025-09-16T23:45:55.57147Z	    isFeatured: false,
2025-09-16T23:45:55.571615Z	    isNew: false,
2025-09-16T23:45:55.571803Z	    partNumber: '11111',
2025-09-16T23:45:55.571933Z	    pricing: {
2025-09-16T23:45:55.572048Z	      currency: 'CNY',
2025-09-16T23:45:55.572224Z	      leadTime: null,
2025-09-16T23:45:55.572412Z	      moq: null,
2025-09-16T23:45:55.57254Z	      price: null,
2025-09-16T23:45:55.572768Z	      tiers: null
2025-09-16T23:45:55.572943Z	    },
2025-09-16T23:45:55.573109Z	    shortDescription: '11111',
2025-09-16T23:45:55.573311Z	    slug: 'sic mosfet',
2025-09-16T23:45:55.573505Z	    title: '111111'
2025-09-16T23:45:55.573665Z	  }
2025-09-16T23:45:55.573807Z	}
2025-09-16T23:45:55.573911Z	Products fetch result: {
2025-09-16T23:45:55.574018Z	  totalProducts: 4,
2025-09-16T23:45:55.57412Z	  fetchedProducts: 4,
2025-09-16T23:45:55.574218Z	  firstProduct: {
2025-09-16T23:45:55.574359Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:45:55.574515Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:45:55.57473Z	    _type: 'product',
2025-09-16T23:45:55.574924Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:45:55.57511Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:45:55.575289Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:45:55.575466Z	    image: null,
2025-09-16T23:45:55.575648Z	    inventory: {
2025-09-16T23:45:55.575862Z	      inStock: true,
2025-09-16T23:45:55.576022Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:45:55.576187Z	      quantity: 0,
2025-09-16T23:45:55.576327Z	      status: 'in_stock',
2025-09-16T23:45:55.576478Z	      warehouse: null
2025-09-16T23:45:55.576613Z	    },
2025-09-16T23:45:55.576804Z	    isActive: true,
2025-09-16T23:45:55.577167Z	    isFeatured: false,
2025-09-16T23:45:55.577398Z	    isNew: false,
2025-09-16T23:45:55.577574Z	    partNumber: '11111',
2025-09-16T23:45:55.57781Z	    pricing: {
2025-09-16T23:45:55.577973Z	      currency: 'CNY',
2025-09-16T23:45:55.57812Z	      leadTime: null,
2025-09-16T23:45:55.578297Z	      moq: null,
2025-09-16T23:45:55.578532Z	      price: null,
2025-09-16T23:45:55.578888Z	      tiers: null
2025-09-16T23:45:55.579023Z	    },
2025-09-16T23:45:55.579136Z	    shortDescription: '11111',
2025-09-16T23:45:55.579277Z	    slug: 'sic mosfet',
2025-09-16T23:45:55.579426Z	    title: '111111'
2025-09-16T23:45:55.57964Z	  }
2025-09-16T23:45:55.579845Z	}
2025-09-16T23:45:55.580028Z	✅ [getBrandData] Found brand: LEM
2025-09-16T23:45:55.580316Z	✅ [getBrandData] Found brand: LEM
2025-09-16T23:45:55.580644Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:55.580865Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:55.581042Z	Products fetch result: {
2025-09-16T23:45:55.581309Z	  totalProducts: 3,
2025-09-16T23:45:55.58144Z	  fetchedProducts: 3,
2025-09-16T23:45:55.581654Z	  firstProduct: {
2025-09-16T23:45:55.581806Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-16T23:45:55.582072Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-16T23:45:55.582284Z	    _type: 'product',
2025-09-16T23:45:55.582414Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-16T23:45:55.582508Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-16T23:45:55.582891Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-16T23:45:55.583017Z	    image: null,
2025-09-16T23:45:55.583256Z	    inventory: {
2025-09-16T23:45:55.583384Z	      inStock: true,
2025-09-16T23:45:55.583551Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-16T23:45:55.583787Z	      quantity: 0,
2025-09-16T23:45:55.58402Z	      status: 'in_stock',
2025-09-16T23:45:55.584191Z	      warehouse: null
2025-09-16T23:45:55.584403Z	    },
2025-09-16T23:45:55.5846Z	    isActive: true,
2025-09-16T23:45:55.584804Z	    isFeatured: false,
2025-09-16T23:45:55.585028Z	    isNew: false,
2025-09-16T23:45:55.585189Z	    partNumber: 'la55-p',
2025-09-16T23:45:55.585314Z	    pricing: {
2025-09-16T23:45:55.585433Z	      currency: 'CNY',
2025-09-16T23:45:55.585547Z	      leadTime: null,
2025-09-16T23:45:55.585761Z	      moq: null,
2025-09-16T23:45:55.585952Z	      price: null,
2025-09-16T23:45:55.586099Z	      tiers: null
2025-09-16T23:45:55.58626Z	    },
2025-09-16T23:45:55.586407Z	    shortDescription: '电流传感器la55-p',
2025-09-16T23:45:55.586525Z	    slug: 'la55-p',
2025-09-16T23:45:55.58669Z	    title: '电流传感器la55-p'
2025-09-16T23:45:55.586842Z	  }
2025-09-16T23:45:55.587027Z	}
2025-09-16T23:45:55.587171Z	Products fetch result: {
2025-09-16T23:45:55.587278Z	  totalProducts: 3,
2025-09-16T23:45:55.587423Z	  fetchedProducts: 3,
2025-09-16T23:45:55.587567Z	  firstProduct: {
2025-09-16T23:45:55.587721Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-16T23:45:55.587866Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-16T23:45:55.588006Z	    _type: 'product',
2025-09-16T23:45:55.588151Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-16T23:45:55.58831Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-16T23:45:55.588444Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-16T23:45:55.588613Z	    image: null,
2025-09-16T23:45:55.588786Z	    inventory: {
2025-09-16T23:45:55.588943Z	      inStock: true,
2025-09-16T23:45:55.589084Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-16T23:45:55.589239Z	      quantity: 0,
2025-09-16T23:45:55.589371Z	      status: 'in_stock',
2025-09-16T23:45:55.589544Z	      warehouse: null
2025-09-16T23:45:55.589756Z	    },
2025-09-16T23:45:55.589902Z	    isActive: true,
2025-09-16T23:45:55.590031Z	    isFeatured: false,
2025-09-16T23:45:55.590178Z	    isNew: false,
2025-09-16T23:45:55.590317Z	    partNumber: 'la55-p',
2025-09-16T23:45:55.590442Z	    pricing: {
2025-09-16T23:45:55.590591Z	      currency: 'CNY',
2025-09-16T23:45:55.590752Z	      leadTime: null,
2025-09-16T23:45:55.590871Z	      moq: null,
2025-09-16T23:45:55.590997Z	      price: null,
2025-09-16T23:45:55.591144Z	      tiers: null
2025-09-16T23:45:55.591295Z	    },
2025-09-16T23:45:55.591455Z	    shortDescription: '电流传感器la55-p',
2025-09-16T23:45:55.591633Z	    slug: 'la55-p',
2025-09-16T23:45:55.591757Z	    title: '电流传感器la55-p'
2025-09-16T23:45:55.591935Z	  }
2025-09-16T23:45:55.592085Z	}
2025-09-16T23:45:55.592231Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:55.592346Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:55.592457Z	✅ [getBrandData] Found brand: MediaTek
2025-09-16T23:45:55.592606Z	✅ [getBrandData] Found brand: MediaTek
2025-09-16T23:45:55.592737Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:55.592851Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:55.592951Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:55.593053Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:55.593155Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:55.593296Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:55.593412Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:45:55.59351Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:45:55.597078Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-16T23:45:55.597271Z	Fetching products with query: 
2025-09-16T23:45:55.597432Z	    {
2025-09-16T23:45:55.597552Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:55.597658Z	        
2025-09-16T23:45:55.597773Z	    _id,
2025-09-16T23:45:55.597877Z	    _type,
2025-09-16T23:45:55.597978Z	    partNumber,
2025-09-16T23:45:55.598078Z	    "slug": slug.current,
2025-09-16T23:45:55.598203Z	    title,
2025-09-16T23:45:55.598372Z	    shortDescription,
2025-09-16T23:45:55.598537Z	    image,
2025-09-16T23:45:55.598611Z	    brand->{
2025-09-16T23:45:55.598719Z	      name,
2025-09-16T23:45:55.598816Z	      "slug": slug.current,
2025-09-16T23:45:55.598918Z	      logo
2025-09-16T23:45:55.59902Z	    },
2025-09-16T23:45:55.599142Z	    category->{
2025-09-16T23:45:55.599262Z	      name,
2025-09-16T23:45:55.599359Z	      "slug": slug.current
2025-09-16T23:45:55.599467Z	    },
2025-09-16T23:45:55.599577Z	    pricing{
2025-09-16T23:45:55.599696Z	      currency,
2025-09-16T23:45:55.599839Z	      tiers[]{
2025-09-16T23:45:55.600063Z	        quantity,
2025-09-16T23:45:55.600165Z	        price,
2025-09-16T23:45:55.600326Z	        unit
2025-09-16T23:45:55.600427Z	      },
2025-09-16T23:45:55.600518Z	      moq,
2025-09-16T23:45:55.600628Z	      leadTime,
2025-09-16T23:45:55.600767Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:55.600892Z	      "price": tiers[0].price,
2025-09-16T23:45:55.600996Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:55.601086Z	    },
2025-09-16T23:45:55.601214Z	    inventory{
2025-09-16T23:45:55.601322Z	      quantity,
2025-09-16T23:45:55.601458Z	      status,
2025-09-16T23:45:55.601564Z	      warehouse,
2025-09-16T23:45:55.601722Z	      lastUpdated,
2025-09-16T23:45:55.601842Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:55.601957Z	      "inStock": status == "in_stock",
2025-09-16T23:45:55.602095Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:55.60223Z	    },
2025-09-16T23:45:55.602335Z	    isActive,
2025-09-16T23:45:55.602453Z	    isFeatured,
2025-09-16T23:45:55.602772Z	    isNew,
2025-09-16T23:45:55.602893Z	    _createdAt,
2025-09-16T23:45:55.602992Z	    _updatedAt
2025-09-16T23:45:55.603091Z	  
2025-09-16T23:45:55.603251Z	      },
2025-09-16T23:45:55.603378Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-16T23:45:55.603547Z	    }
2025-09-16T23:45:55.603727Z	  
2025-09-16T23:45:55.603872Z	Query parameters: {
2025-09-16T23:45:55.603978Z	  limit: 8,
2025-09-16T23:45:55.604069Z	  offset: 0,
2025-09-16T23:45:55.604177Z	  category: undefined,
2025-09-16T23:45:55.604282Z	  brand: 'sanrex',
2025-09-16T23:45:55.604428Z	  featured: undefined
2025-09-16T23:45:55.60462Z	}
2025-09-16T23:45:55.604752Z	Fetching solutions with query: 
2025-09-16T23:45:55.604922Z	    {
2025-09-16T23:45:55.605021Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:55.60533Z	        
2025-09-16T23:45:55.605419Z	    _id,
2025-09-16T23:45:55.605485Z	    title,
2025-09-16T23:45:55.605832Z	    "slug": slug.current,
2025-09-16T23:45:55.605934Z	    summary,
2025-09-16T23:45:55.606208Z	    description,
2025-09-16T23:45:55.606318Z	    coverImage,
2025-09-16T23:45:55.606524Z	    primaryBrand->{
2025-09-16T23:45:55.606871Z	      _id,
2025-09-16T23:45:55.606968Z	      name,
2025-09-16T23:45:55.607028Z	      "slug": slug.current,
2025-09-16T23:45:55.607273Z	      logo
2025-09-16T23:45:55.607353Z	    },
2025-09-16T23:45:55.607537Z	    relatedBrands[]->{
2025-09-16T23:45:55.607687Z	      _id,
2025-09-16T23:45:55.607842Z	      name,
2025-09-16T23:45:55.607977Z	      "slug": slug.current,
2025-09-16T23:45:55.608095Z	      logo
2025-09-16T23:45:55.608259Z	    },
2025-09-16T23:45:55.608414Z	    targetMarket,
2025-09-16T23:45:55.608494Z	    complexity,
2025-09-16T23:45:55.608633Z	    publishedAt,
2025-09-16T23:45:55.608796Z	    isPublished,
2025-09-16T23:45:55.608882Z	    isFeatured,
2025-09-16T23:45:55.608993Z	    viewCount,
2025-09-16T23:45:55.609124Z	    _createdAt,
2025-09-16T23:45:55.609272Z	    _updatedAt
2025-09-16T23:45:55.609384Z	  
2025-09-16T23:45:55.609547Z	      },
2025-09-16T23:45:55.609717Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-16T23:45:55.609834Z	    }
2025-09-16T23:45:55.610019Z	  
2025-09-16T23:45:55.610174Z	Query parameters: {
2025-09-16T23:45:55.61028Z	  limit: 4,
2025-09-16T23:45:55.610529Z	  offset: 0,
2025-09-16T23:45:55.610607Z	  targetMarket: undefined,
2025-09-16T23:45:55.610807Z	  brand: 'sanrex',
2025-09-16T23:45:55.610972Z	  featured: undefined
2025-09-16T23:45:55.611087Z	}
2025-09-16T23:45:55.611216Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-16T23:45:55.611364Z	Fetching products with query: 
2025-09-16T23:45:55.611498Z	    {
2025-09-16T23:45:55.611612Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:55.611688Z	        
2025-09-16T23:45:55.611814Z	    _id,
2025-09-16T23:45:55.611911Z	    _type,
2025-09-16T23:45:55.612014Z	    partNumber,
2025-09-16T23:45:55.612171Z	    "slug": slug.current,
2025-09-16T23:45:55.612317Z	    title,
2025-09-16T23:45:55.612477Z	    shortDescription,
2025-09-16T23:45:55.612705Z	    image,
2025-09-16T23:45:55.61287Z	    brand->{
2025-09-16T23:45:55.613034Z	      name,
2025-09-16T23:45:55.613181Z	      "slug": slug.current,
2025-09-16T23:45:55.613338Z	      logo
2025-09-16T23:45:55.613494Z	    },
2025-09-16T23:45:55.613707Z	    category->{
2025-09-16T23:45:55.613794Z	      name,
2025-09-16T23:45:55.613859Z	      "slug": slug.current
2025-09-16T23:45:55.614086Z	    },
2025-09-16T23:45:55.614209Z	    pricing{
2025-09-16T23:45:55.614332Z	      currency,
2025-09-16T23:45:55.614555Z	      tiers[]{
2025-09-16T23:45:55.614719Z	        quantity,
2025-09-16T23:45:55.614823Z	        price,
2025-09-16T23:45:55.614936Z	        unit
2025-09-16T23:45:55.615081Z	      },
2025-09-16T23:45:55.615154Z	      moq,
2025-09-16T23:45:55.615297Z	      leadTime,
2025-09-16T23:45:55.615379Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:55.615531Z	      "price": tiers[0].price,
2025-09-16T23:45:55.615712Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:55.615815Z	    },
2025-09-16T23:45:55.61593Z	    inventory{
2025-09-16T23:45:55.616041Z	      quantity,
2025-09-16T23:45:55.616138Z	      status,
2025-09-16T23:45:55.616233Z	      warehouse,
2025-09-16T23:45:55.616333Z	      lastUpdated,
2025-09-16T23:45:55.616438Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:55.616548Z	      "inStock": status == "in_stock",
2025-09-16T23:45:55.616646Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:55.61677Z	    },
2025-09-16T23:45:55.616854Z	    isActive,
2025-09-16T23:45:55.616946Z	    isFeatured,
2025-09-16T23:45:55.617059Z	    isNew,
2025-09-16T23:45:55.617169Z	    _createdAt,
2025-09-16T23:45:55.617272Z	    _updatedAt
2025-09-16T23:45:55.617332Z	  
2025-09-16T23:45:55.617403Z	      },
2025-09-16T23:45:55.623841Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-16T23:45:55.62415Z	    }
2025-09-16T23:45:55.624304Z	  
2025-09-16T23:45:55.624425Z	Query parameters: {
2025-09-16T23:45:55.624529Z	  limit: 8,
2025-09-16T23:45:55.624634Z	  offset: 0,
2025-09-16T23:45:55.624762Z	  category: undefined,
2025-09-16T23:45:55.624887Z	  brand: 'sanrex',
2025-09-16T23:45:55.625Z	  featured: undefined
2025-09-16T23:45:55.625104Z	}
2025-09-16T23:45:55.62522Z	Fetching solutions with query: 
2025-09-16T23:45:55.625357Z	    {
2025-09-16T23:45:55.625509Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:55.625635Z	        
2025-09-16T23:45:55.625744Z	    _id,
2025-09-16T23:45:55.625839Z	    title,
2025-09-16T23:45:55.625927Z	    "slug": slug.current,
2025-09-16T23:45:55.626049Z	    summary,
2025-09-16T23:45:55.626162Z	    description,
2025-09-16T23:45:55.62626Z	    coverImage,
2025-09-16T23:45:55.626352Z	    primaryBrand->{
2025-09-16T23:45:55.626444Z	      _id,
2025-09-16T23:45:55.626533Z	      name,
2025-09-16T23:45:55.626757Z	      "slug": slug.current,
2025-09-16T23:45:55.626897Z	      logo
2025-09-16T23:45:55.627066Z	    },
2025-09-16T23:45:55.627195Z	    relatedBrands[]->{
2025-09-16T23:45:55.627303Z	      _id,
2025-09-16T23:45:55.627407Z	      name,
2025-09-16T23:45:55.627513Z	      "slug": slug.current,
2025-09-16T23:45:55.627635Z	      logo
2025-09-16T23:45:55.627811Z	    },
2025-09-16T23:45:55.627932Z	    targetMarket,
2025-09-16T23:45:55.628036Z	    complexity,
2025-09-16T23:45:55.628143Z	    publishedAt,
2025-09-16T23:45:55.628246Z	    isPublished,
2025-09-16T23:45:55.628343Z	    isFeatured,
2025-09-16T23:45:55.628447Z	    viewCount,
2025-09-16T23:45:55.628553Z	    _createdAt,
2025-09-16T23:45:55.628695Z	    _updatedAt
2025-09-16T23:45:55.628801Z	  
2025-09-16T23:45:55.62891Z	      },
2025-09-16T23:45:55.629011Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-16T23:45:55.629118Z	    }
2025-09-16T23:45:55.629205Z	  
2025-09-16T23:45:55.629294Z	Query parameters: {
2025-09-16T23:45:55.629388Z	  limit: 4,
2025-09-16T23:45:55.629492Z	  offset: 0,
2025-09-16T23:45:55.629609Z	  targetMarket: undefined,
2025-09-16T23:45:55.629733Z	  brand: 'sanrex',
2025-09-16T23:45:55.629843Z	  featured: undefined
2025-09-16T23:45:55.629943Z	}
2025-09-16T23:45:55.764417Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-16T23:45:55.765006Z	Fetching products with query: 
2025-09-16T23:45:55.765182Z	    {
2025-09-16T23:45:55.765739Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:55.765927Z	        
2025-09-16T23:45:55.766091Z	    _id,
2025-09-16T23:45:55.766241Z	    _type,
2025-09-16T23:45:55.766354Z	    partNumber,
2025-09-16T23:45:55.7665Z	    "slug": slug.current,
2025-09-16T23:45:55.766658Z	    title,
2025-09-16T23:45:55.766816Z	    shortDescription,
2025-09-16T23:45:55.767084Z	    image,
2025-09-16T23:45:55.767251Z	    brand->{
2025-09-16T23:45:55.767396Z	      name,
2025-09-16T23:45:55.767566Z	      "slug": slug.current,
2025-09-16T23:45:55.767753Z	      logo
2025-09-16T23:45:55.769649Z	    },
2025-09-16T23:45:55.769896Z	    category->{
2025-09-16T23:45:55.77013Z	      name,
2025-09-16T23:45:55.770389Z	      "slug": slug.current
2025-09-16T23:45:55.770572Z	    },
2025-09-16T23:45:55.770728Z	    pricing{
2025-09-16T23:45:55.771153Z	      currency,
2025-09-16T23:45:55.771302Z	      tiers[]{
2025-09-16T23:45:55.77141Z	        quantity,
2025-09-16T23:45:55.771508Z	        price,
2025-09-16T23:45:55.771619Z	        unit
2025-09-16T23:45:55.771739Z	      },
2025-09-16T23:45:55.771841Z	      moq,
2025-09-16T23:45:55.771942Z	      leadTime,
2025-09-16T23:45:55.772445Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:55.772838Z	      "price": tiers[0].price,
2025-09-16T23:45:55.773188Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:55.773544Z	    },
2025-09-16T23:45:55.774403Z	    inventory{
2025-09-16T23:45:55.77462Z	      quantity,
2025-09-16T23:45:55.774876Z	      status,
2025-09-16T23:45:55.775037Z	      warehouse,
2025-09-16T23:45:55.775258Z	      lastUpdated,
2025-09-16T23:45:55.775439Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:55.775609Z	      "inStock": status == "in_stock",
2025-09-16T23:45:55.775783Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:55.775954Z	    },
2025-09-16T23:45:55.776104Z	    isActive,
2025-09-16T23:45:55.776261Z	    isFeatured,
2025-09-16T23:45:55.776475Z	    isNew,
2025-09-16T23:45:55.776652Z	    _createdAt,
2025-09-16T23:45:55.776832Z	    _updatedAt
2025-09-16T23:45:55.776988Z	  
2025-09-16T23:45:55.777202Z	      },
2025-09-16T23:45:55.777382Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-16T23:45:55.777493Z	    }
2025-09-16T23:45:55.777625Z	  
2025-09-16T23:45:55.778011Z	Query parameters: {
2025-09-16T23:45:55.778133Z	  limit: 8,
2025-09-16T23:45:55.778253Z	  offset: 0,
2025-09-16T23:45:55.778364Z	  category: undefined,
2025-09-16T23:45:55.778735Z	  brand: 'pi',
2025-09-16T23:45:55.778863Z	  featured: undefined
2025-09-16T23:45:55.778974Z	}
2025-09-16T23:45:55.779085Z	Fetching solutions with query: 
2025-09-16T23:45:55.779188Z	    {
2025-09-16T23:45:55.779305Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:55.779411Z	        
2025-09-16T23:45:55.779514Z	    _id,
2025-09-16T23:45:55.779625Z	    title,
2025-09-16T23:45:55.779754Z	    "slug": slug.current,
2025-09-16T23:45:55.779864Z	    summary,
2025-09-16T23:45:55.779964Z	    description,
2025-09-16T23:45:55.780065Z	    coverImage,
2025-09-16T23:45:55.78017Z	    primaryBrand->{
2025-09-16T23:45:55.780307Z	      _id,
2025-09-16T23:45:55.780415Z	      name,
2025-09-16T23:45:55.780521Z	      "slug": slug.current,
2025-09-16T23:45:55.780624Z	      logo
2025-09-16T23:45:55.780769Z	    },
2025-09-16T23:45:55.780879Z	    relatedBrands[]->{
2025-09-16T23:45:55.781061Z	      _id,
2025-09-16T23:45:55.781192Z	      name,
2025-09-16T23:45:55.781312Z	      "slug": slug.current,
2025-09-16T23:45:55.781418Z	      logo
2025-09-16T23:45:55.781515Z	    },
2025-09-16T23:45:55.78162Z	    targetMarket,
2025-09-16T23:45:55.78175Z	    complexity,
2025-09-16T23:45:55.781857Z	    publishedAt,
2025-09-16T23:45:55.781968Z	    isPublished,
2025-09-16T23:45:55.782108Z	    isFeatured,
2025-09-16T23:45:55.782295Z	    viewCount,
2025-09-16T23:45:55.782738Z	    _createdAt,
2025-09-16T23:45:55.782864Z	    _updatedAt
2025-09-16T23:45:55.782973Z	  
2025-09-16T23:45:55.783111Z	      },
2025-09-16T23:45:55.785546Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-16T23:45:55.785728Z	    }
2025-09-16T23:45:55.78586Z	  
2025-09-16T23:45:55.786009Z	Query parameters: {
2025-09-16T23:45:55.786123Z	  limit: 4,
2025-09-16T23:45:55.786236Z	  offset: 0,
2025-09-16T23:45:55.786341Z	  targetMarket: undefined,
2025-09-16T23:45:55.786461Z	  brand: 'pi',
2025-09-16T23:45:55.786564Z	  featured: undefined
2025-09-16T23:45:55.786702Z	}
2025-09-16T23:45:55.786826Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-16T23:45:55.786945Z	Fetching products with query: 
2025-09-16T23:45:55.787162Z	    {
2025-09-16T23:45:55.787279Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:55.787382Z	        
2025-09-16T23:45:55.787481Z	    _id,
2025-09-16T23:45:55.787586Z	    _type,
2025-09-16T23:45:55.787738Z	    partNumber,
2025-09-16T23:45:55.787866Z	    "slug": slug.current,
2025-09-16T23:45:55.78798Z	    title,
2025-09-16T23:45:55.788078Z	    shortDescription,
2025-09-16T23:45:55.788183Z	    image,
2025-09-16T23:45:55.788342Z	    brand->{
2025-09-16T23:45:55.788577Z	      name,
2025-09-16T23:45:55.788822Z	      "slug": slug.current,
2025-09-16T23:45:55.78903Z	      logo
2025-09-16T23:45:55.789181Z	    },
2025-09-16T23:45:55.789347Z	    category->{
2025-09-16T23:45:55.789541Z	      name,
2025-09-16T23:45:55.789767Z	      "slug": slug.current
2025-09-16T23:45:55.789947Z	    },
2025-09-16T23:45:55.790129Z	    pricing{
2025-09-16T23:45:55.79028Z	      currency,
2025-09-16T23:45:55.790519Z	      tiers[]{
2025-09-16T23:45:55.790711Z	        quantity,
2025-09-16T23:45:55.790859Z	        price,
2025-09-16T23:45:55.791039Z	        unit
2025-09-16T23:45:55.79121Z	      },
2025-09-16T23:45:55.791382Z	      moq,
2025-09-16T23:45:55.791521Z	      leadTime,
2025-09-16T23:45:55.791666Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:55.792018Z	      "price": tiers[0].price,
2025-09-16T23:45:55.792206Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:55.792417Z	    },
2025-09-16T23:45:55.792591Z	    inventory{
2025-09-16T23:45:55.792817Z	      quantity,
2025-09-16T23:45:55.79299Z	      status,
2025-09-16T23:45:55.793227Z	      warehouse,
2025-09-16T23:45:55.793457Z	      lastUpdated,
2025-09-16T23:45:55.793642Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:55.793836Z	      "inStock": status == "in_stock",
2025-09-16T23:45:55.794019Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:55.794222Z	    },
2025-09-16T23:45:55.794403Z	    isActive,
2025-09-16T23:45:55.794584Z	    isFeatured,
2025-09-16T23:45:55.794796Z	    isNew,
2025-09-16T23:45:55.794974Z	    _createdAt,
2025-09-16T23:45:55.795148Z	    _updatedAt
2025-09-16T23:45:55.795328Z	  
2025-09-16T23:45:55.795517Z	      },
2025-09-16T23:45:55.795734Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-16T23:45:55.795923Z	    }
2025-09-16T23:45:55.796176Z	  
2025-09-16T23:45:55.796317Z	Query parameters: {
2025-09-16T23:45:55.796482Z	  limit: 8,
2025-09-16T23:45:55.796923Z	  offset: 0,
2025-09-16T23:45:55.797045Z	  category: undefined,
2025-09-16T23:45:55.797138Z	  brand: 'pi',
2025-09-16T23:45:55.797256Z	  featured: undefined
2025-09-16T23:45:55.797434Z	}
2025-09-16T23:45:55.797753Z	Fetching solutions with query: 
2025-09-16T23:45:55.797947Z	    {
2025-09-16T23:45:55.79819Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:55.798284Z	        
2025-09-16T23:45:55.798362Z	    _id,
2025-09-16T23:45:55.798424Z	    title,
2025-09-16T23:45:55.798478Z	    "slug": slug.current,
2025-09-16T23:45:55.798532Z	    summary,
2025-09-16T23:45:55.798586Z	    description,
2025-09-16T23:45:55.798839Z	    coverImage,
2025-09-16T23:45:55.798923Z	    primaryBrand->{
2025-09-16T23:45:55.798987Z	      _id,
2025-09-16T23:45:55.799205Z	      name,
2025-09-16T23:45:55.79929Z	      "slug": slug.current,
2025-09-16T23:45:55.79936Z	      logo
2025-09-16T23:45:55.799417Z	    },
2025-09-16T23:45:55.79948Z	    relatedBrands[]->{
2025-09-16T23:45:55.799534Z	      _id,
2025-09-16T23:45:55.79959Z	      name,
2025-09-16T23:45:55.799653Z	      "slug": slug.current,
2025-09-16T23:45:55.799743Z	      logo
2025-09-16T23:45:55.799803Z	    },
2025-09-16T23:45:55.799856Z	    targetMarket,
2025-09-16T23:45:55.799909Z	    complexity,
2025-09-16T23:45:55.799973Z	    publishedAt,
2025-09-16T23:45:55.800157Z	    isPublished,
2025-09-16T23:45:55.800237Z	    isFeatured,
2025-09-16T23:45:55.800294Z	    viewCount,
2025-09-16T23:45:55.800353Z	    _createdAt,
2025-09-16T23:45:55.800408Z	    _updatedAt
2025-09-16T23:45:55.800481Z	  
2025-09-16T23:45:55.800537Z	      },
2025-09-16T23:45:55.800591Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-16T23:45:55.80066Z	    }
2025-09-16T23:45:55.824376Z	  
2025-09-16T23:45:55.824595Z	Query parameters: {
2025-09-16T23:45:55.824779Z	  limit: 4,
2025-09-16T23:45:55.824922Z	  offset: 0,
2025-09-16T23:45:55.825051Z	  targetMarket: undefined,
2025-09-16T23:45:55.825182Z	  brand: 'pi',
2025-09-16T23:45:55.825283Z	  featured: undefined
2025-09-16T23:45:55.825406Z	}
2025-09-16T23:45:55.825518Z	✅ [getBrandData] Found brand: PI
2025-09-16T23:45:55.825613Z	✅ [getBrandData] Found brand: PI
2025-09-16T23:45:55.825729Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:55.825838Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:55.825934Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:55.82608Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:55.826219Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-16T23:45:55.826344Z	Fetching products with query: 
2025-09-16T23:45:55.826463Z	    {
2025-09-16T23:45:55.826564Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:55.826667Z	        
2025-09-16T23:45:55.826803Z	    _id,
2025-09-16T23:45:55.826901Z	    _type,
2025-09-16T23:45:55.826988Z	    partNumber,
2025-09-16T23:45:55.827075Z	    "slug": slug.current,
2025-09-16T23:45:55.827257Z	    title,
2025-09-16T23:45:55.827382Z	    shortDescription,
2025-09-16T23:45:55.827482Z	    image,
2025-09-16T23:45:55.827589Z	    brand->{
2025-09-16T23:45:55.82772Z	      name,
2025-09-16T23:45:55.827839Z	      "slug": slug.current,
2025-09-16T23:45:55.827943Z	      logo
2025-09-16T23:45:55.828048Z	    },
2025-09-16T23:45:55.828138Z	    category->{
2025-09-16T23:45:55.82823Z	      name,
2025-09-16T23:45:55.828316Z	      "slug": slug.current
2025-09-16T23:45:55.828422Z	    },
2025-09-16T23:45:55.828534Z	    pricing{
2025-09-16T23:45:55.828636Z	      currency,
2025-09-16T23:45:55.828768Z	      tiers[]{
2025-09-16T23:45:55.828889Z	        quantity,
2025-09-16T23:45:55.828993Z	        price,
2025-09-16T23:45:55.829086Z	        unit
2025-09-16T23:45:55.829177Z	      },
2025-09-16T23:45:55.829277Z	      moq,
2025-09-16T23:45:55.829388Z	      leadTime,
2025-09-16T23:45:55.829502Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:55.829608Z	      "price": tiers[0].price,
2025-09-16T23:45:55.829725Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:55.829853Z	    },
2025-09-16T23:45:55.829954Z	    inventory{
2025-09-16T23:45:55.830039Z	      quantity,
2025-09-16T23:45:55.830151Z	      status,
2025-09-16T23:45:55.830251Z	      warehouse,
2025-09-16T23:45:55.83036Z	      lastUpdated,
2025-09-16T23:45:55.830457Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:55.830559Z	      "inStock": status == "in_stock",
2025-09-16T23:45:55.830657Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:55.830781Z	    },
2025-09-16T23:45:55.830883Z	    isActive,
2025-09-16T23:45:55.830989Z	    isFeatured,
2025-09-16T23:45:55.831104Z	    isNew,
2025-09-16T23:45:55.831211Z	    _createdAt,
2025-09-16T23:45:55.831314Z	    _updatedAt
2025-09-16T23:45:55.831423Z	  
2025-09-16T23:45:55.831519Z	      },
2025-09-16T23:45:55.831616Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-16T23:45:55.831751Z	    }
2025-09-16T23:45:55.831853Z	  
2025-09-16T23:45:55.831945Z	Query parameters: {
2025-09-16T23:45:55.832039Z	  limit: 8,
2025-09-16T23:45:55.83215Z	  offset: 0,
2025-09-16T23:45:55.832245Z	  category: undefined,
2025-09-16T23:45:55.832355Z	  brand: 'semikron',
2025-09-16T23:45:55.832456Z	  featured: undefined
2025-09-16T23:45:55.832549Z	}
2025-09-16T23:45:55.832655Z	Fetching solutions with query: 
2025-09-16T23:45:55.832771Z	    {
2025-09-16T23:45:55.83287Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:55.832971Z	        
2025-09-16T23:45:55.833064Z	    _id,
2025-09-16T23:45:55.833156Z	    title,
2025-09-16T23:45:55.833245Z	    "slug": slug.current,
2025-09-16T23:45:55.833342Z	    summary,
2025-09-16T23:45:55.833457Z	    description,
2025-09-16T23:45:55.833558Z	    coverImage,
2025-09-16T23:45:55.833664Z	    primaryBrand->{
2025-09-16T23:45:55.833784Z	      _id,
2025-09-16T23:45:55.833887Z	      name,
2025-09-16T23:45:55.83398Z	      "slug": slug.current,
2025-09-16T23:45:55.83409Z	      logo
2025-09-16T23:45:55.834191Z	    },
2025-09-16T23:45:55.834289Z	    relatedBrands[]->{
2025-09-16T23:45:55.834395Z	      _id,
2025-09-16T23:45:55.834497Z	      name,
2025-09-16T23:45:55.834588Z	      "slug": slug.current,
2025-09-16T23:45:55.834719Z	      logo
2025-09-16T23:45:55.83484Z	    },
2025-09-16T23:45:55.834949Z	    targetMarket,
2025-09-16T23:45:55.835069Z	    complexity,
2025-09-16T23:45:55.835165Z	    publishedAt,
2025-09-16T23:45:55.835322Z	    isPublished,
2025-09-16T23:45:55.835447Z	    isFeatured,
2025-09-16T23:45:55.835548Z	    viewCount,
2025-09-16T23:45:55.835658Z	    _createdAt,
2025-09-16T23:45:55.835775Z	    _updatedAt
2025-09-16T23:45:55.835892Z	  
2025-09-16T23:45:55.83599Z	      },
2025-09-16T23:45:55.836078Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-16T23:45:55.836174Z	    }
2025-09-16T23:45:55.836263Z	  
2025-09-16T23:45:55.836445Z	Query parameters: {
2025-09-16T23:45:55.83656Z	  limit: 4,
2025-09-16T23:45:55.836656Z	  offset: 0,
2025-09-16T23:45:55.836793Z	  targetMarket: undefined,
2025-09-16T23:45:55.836904Z	  brand: 'semikron',
2025-09-16T23:45:55.836999Z	  featured: undefined
2025-09-16T23:45:55.8371Z	}
2025-09-16T23:45:55.837206Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-16T23:45:55.837317Z	Fetching products with query: 
2025-09-16T23:45:55.837423Z	    {
2025-09-16T23:45:55.837514Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:55.83762Z	        
2025-09-16T23:45:55.837736Z	    _id,
2025-09-16T23:45:55.837839Z	    _type,
2025-09-16T23:45:55.837941Z	    partNumber,
2025-09-16T23:45:55.838042Z	    "slug": slug.current,
2025-09-16T23:45:55.838151Z	    title,
2025-09-16T23:45:55.83825Z	    shortDescription,
2025-09-16T23:45:55.838353Z	    image,
2025-09-16T23:45:55.83845Z	    brand->{
2025-09-16T23:45:55.83854Z	      name,
2025-09-16T23:45:55.838644Z	      "slug": slug.current,
2025-09-16T23:45:55.838762Z	      logo
2025-09-16T23:45:55.838858Z	    },
2025-09-16T23:45:55.838993Z	    category->{
2025-09-16T23:45:55.839113Z	      name,
2025-09-16T23:45:55.839251Z	      "slug": slug.current
2025-09-16T23:45:55.839363Z	    },
2025-09-16T23:45:55.839467Z	    pricing{
2025-09-16T23:45:55.839574Z	      currency,
2025-09-16T23:45:55.839705Z	      tiers[]{
2025-09-16T23:45:55.839826Z	        quantity,
2025-09-16T23:45:55.839931Z	        price,
2025-09-16T23:45:55.840021Z	        unit
2025-09-16T23:45:55.840116Z	      },
2025-09-16T23:45:55.840208Z	      moq,
2025-09-16T23:45:55.840301Z	      leadTime,
2025-09-16T23:45:55.840407Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:55.840505Z	      "price": tiers[0].price,
2025-09-16T23:45:55.840614Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:55.84073Z	    },
2025-09-16T23:45:55.840828Z	    inventory{
2025-09-16T23:45:55.840953Z	      quantity,
2025-09-16T23:45:55.841053Z	      status,
2025-09-16T23:45:55.841176Z	      warehouse,
2025-09-16T23:45:55.841297Z	      lastUpdated,
2025-09-16T23:45:55.841446Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:55.841565Z	      "inStock": status == "in_stock",
2025-09-16T23:45:55.841691Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:55.841823Z	    },
2025-09-16T23:45:55.841934Z	    isActive,
2025-09-16T23:45:55.842046Z	    isFeatured,
2025-09-16T23:45:55.842146Z	    isNew,
2025-09-16T23:45:55.842237Z	    _createdAt,
2025-09-16T23:45:55.842325Z	    _updatedAt
2025-09-16T23:45:55.842399Z	  
2025-09-16T23:45:55.84249Z	      },
2025-09-16T23:45:55.842588Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-16T23:45:55.842707Z	    }
2025-09-16T23:45:55.842805Z	  
2025-09-16T23:45:55.842904Z	Query parameters: {
2025-09-16T23:45:55.843005Z	  limit: 8,
2025-09-16T23:45:55.843099Z	  offset: 0,
2025-09-16T23:45:55.843163Z	  category: undefined,
2025-09-16T23:45:55.843217Z	  brand: 'semikron',
2025-09-16T23:45:55.843307Z	  featured: undefined
2025-09-16T23:45:55.843408Z	}
2025-09-16T23:45:55.843486Z	Fetching solutions with query: 
2025-09-16T23:45:55.843594Z	    {
2025-09-16T23:45:55.843707Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:55.843817Z	        
2025-09-16T23:45:55.843913Z	    _id,
2025-09-16T23:45:55.844012Z	    title,
2025-09-16T23:45:55.84412Z	    "slug": slug.current,
2025-09-16T23:45:55.844221Z	    summary,
2025-09-16T23:45:55.844309Z	    description,
2025-09-16T23:45:55.844437Z	    coverImage,
2025-09-16T23:45:55.844601Z	    primaryBrand->{
2025-09-16T23:45:55.844714Z	      _id,
2025-09-16T23:45:55.844788Z	      name,
2025-09-16T23:45:55.84485Z	      "slug": slug.current,
2025-09-16T23:45:55.844904Z	      logo
2025-09-16T23:45:55.844959Z	    },
2025-09-16T23:45:55.845017Z	    relatedBrands[]->{
2025-09-16T23:45:55.84507Z	      _id,
2025-09-16T23:45:55.845123Z	      name,
2025-09-16T23:45:55.845177Z	      "slug": slug.current,
2025-09-16T23:45:55.845282Z	      logo
2025-09-16T23:45:55.8454Z	    },
2025-09-16T23:45:55.84555Z	    targetMarket,
2025-09-16T23:45:55.845629Z	    complexity,
2025-09-16T23:45:55.845773Z	    publishedAt,
2025-09-16T23:45:55.845894Z	    isPublished,
2025-09-16T23:45:55.845997Z	    isFeatured,
2025-09-16T23:45:55.846115Z	    viewCount,
2025-09-16T23:45:55.846235Z	    _createdAt,
2025-09-16T23:45:55.846355Z	    _updatedAt
2025-09-16T23:45:55.846457Z	  
2025-09-16T23:45:55.846558Z	      },
2025-09-16T23:45:55.846662Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-16T23:45:55.84678Z	    }
2025-09-16T23:45:55.846886Z	  
2025-09-16T23:45:55.84698Z	Query parameters: {
2025-09-16T23:45:55.847059Z	  limit: 4,
2025-09-16T23:45:55.847175Z	  offset: 0,
2025-09-16T23:45:55.847409Z	  targetMarket: undefined,
2025-09-16T23:45:55.847567Z	  brand: 'semikron',
2025-09-16T23:45:55.847641Z	  featured: undefined
2025-09-16T23:45:55.847841Z	}
2025-09-16T23:45:55.847976Z	✅ [getBrandData] Found brand: Semikron
2025-09-16T23:45:55.848049Z	✅ [getBrandData] Found brand: Semikron
2025-09-16T23:45:55.848161Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:45:55.848242Z	Fetching products with query: 
2025-09-16T23:45:55.848412Z	    {
2025-09-16T23:45:55.848526Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:55.849044Z	        
2025-09-16T23:45:55.84913Z	    _id,
2025-09-16T23:45:55.849188Z	    _type,
2025-09-16T23:45:55.849292Z	    partNumber,
2025-09-16T23:45:55.849371Z	    "slug": slug.current,
2025-09-16T23:45:55.849485Z	    title,
2025-09-16T23:45:55.849587Z	    shortDescription,
2025-09-16T23:45:55.849652Z	    image,
2025-09-16T23:45:55.84975Z	    brand->{
2025-09-16T23:45:55.849814Z	      name,
2025-09-16T23:45:55.849877Z	      "slug": slug.current,
2025-09-16T23:45:55.849957Z	      logo
2025-09-16T23:45:55.850119Z	    },
2025-09-16T23:45:55.850193Z	    category->{
2025-09-16T23:45:55.850253Z	      name,
2025-09-16T23:45:55.85039Z	      "slug": slug.current
2025-09-16T23:45:55.850491Z	    },
2025-09-16T23:45:55.850558Z	    pricing{
2025-09-16T23:45:55.850753Z	      currency,
2025-09-16T23:45:55.850885Z	      tiers[]{
2025-09-16T23:45:55.851045Z	        quantity,
2025-09-16T23:45:55.851126Z	        price,
2025-09-16T23:45:55.85124Z	        unit
2025-09-16T23:45:55.851316Z	      },
2025-09-16T23:45:55.851471Z	      moq,
2025-09-16T23:45:55.851618Z	      leadTime,
2025-09-16T23:45:55.851819Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:55.851964Z	      "price": tiers[0].price,
2025-09-16T23:45:55.852102Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:55.852281Z	    },
2025-09-16T23:45:55.852363Z	    inventory{
2025-09-16T23:45:55.85249Z	      quantity,
2025-09-16T23:45:55.852646Z	      status,
2025-09-16T23:45:55.8528Z	      warehouse,
2025-09-16T23:45:55.85295Z	      lastUpdated,
2025-09-16T23:45:55.853103Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:55.85325Z	      "inStock": status == "in_stock",
2025-09-16T23:45:55.853394Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:55.853495Z	    },
2025-09-16T23:45:55.853682Z	    isActive,
2025-09-16T23:45:55.85387Z	    isFeatured,
2025-09-16T23:45:55.853997Z	    isNew,
2025-09-16T23:45:55.854123Z	    _createdAt,
2025-09-16T23:45:55.854235Z	    _updatedAt
2025-09-16T23:45:55.85439Z	  
2025-09-16T23:45:55.854497Z	      },
2025-09-16T23:45:55.85459Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:45:55.854748Z	    }
2025-09-16T23:45:55.854864Z	  
2025-09-16T23:45:55.854969Z	Query parameters: {
2025-09-16T23:45:55.85507Z	  limit: 8,
2025-09-16T23:45:55.855175Z	  offset: 0,
2025-09-16T23:45:55.855272Z	  category: undefined,
2025-09-16T23:45:55.855359Z	  brand: 'qualcomm',
2025-09-16T23:45:55.855419Z	  featured: undefined
2025-09-16T23:45:55.855491Z	}
2025-09-16T23:45:55.855584Z	Fetching solutions with query: 
2025-09-16T23:45:55.855727Z	    {
2025-09-16T23:45:55.85584Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:55.855938Z	        
2025-09-16T23:45:55.856024Z	    _id,
2025-09-16T23:45:55.856143Z	    title,
2025-09-16T23:45:55.856283Z	    "slug": slug.current,
2025-09-16T23:45:55.856438Z	    summary,
2025-09-16T23:45:55.856513Z	    description,
2025-09-16T23:45:55.856585Z	    coverImage,
2025-09-16T23:45:55.856693Z	    primaryBrand->{
2025-09-16T23:45:55.856795Z	      _id,
2025-09-16T23:45:55.856893Z	      name,
2025-09-16T23:45:55.856993Z	      "slug": slug.current,
2025-09-16T23:45:55.857103Z	      logo
2025-09-16T23:45:55.857232Z	    },
2025-09-16T23:45:55.857307Z	    relatedBrands[]->{
2025-09-16T23:45:55.857374Z	      _id,
2025-09-16T23:45:55.857499Z	      name,
2025-09-16T23:45:55.857651Z	      "slug": slug.current,
2025-09-16T23:45:55.857793Z	      logo
2025-09-16T23:45:55.857887Z	    },
2025-09-16T23:45:55.858012Z	    targetMarket,
2025-09-16T23:45:55.858145Z	    complexity,
2025-09-16T23:45:55.858246Z	    publishedAt,
2025-09-16T23:45:55.858342Z	    isPublished,
2025-09-16T23:45:55.858461Z	    isFeatured,
2025-09-16T23:45:55.858568Z	    viewCount,
2025-09-16T23:45:55.858692Z	    _createdAt,
2025-09-16T23:45:55.858806Z	    _updatedAt
2025-09-16T23:45:55.858929Z	  
2025-09-16T23:45:55.859026Z	      },
2025-09-16T23:45:55.859126Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:45:55.859208Z	    }
2025-09-16T23:45:55.859314Z	  
2025-09-16T23:45:55.859419Z	Query parameters: {
2025-09-16T23:45:55.859515Z	  limit: 4,
2025-09-16T23:45:55.859612Z	  offset: 0,
2025-09-16T23:45:55.85972Z	  targetMarket: undefined,
2025-09-16T23:45:55.859828Z	  brand: 'qualcomm',
2025-09-16T23:45:55.85994Z	  featured: undefined
2025-09-16T23:45:55.860042Z	}
2025-09-16T23:45:55.860138Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:45:55.860247Z	Fetching products with query: 
2025-09-16T23:45:55.86036Z	    {
2025-09-16T23:45:55.860468Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:55.860614Z	        
2025-09-16T23:45:55.860778Z	    _id,
2025-09-16T23:45:55.860905Z	    _type,
2025-09-16T23:45:55.861171Z	    partNumber,
2025-09-16T23:45:55.861274Z	    "slug": slug.current,
2025-09-16T23:45:55.861404Z	    title,
2025-09-16T23:45:55.861491Z	    shortDescription,
2025-09-16T23:45:55.861628Z	    image,
2025-09-16T23:45:55.861745Z	    brand->{
2025-09-16T23:45:55.86185Z	      name,
2025-09-16T23:45:55.861953Z	      "slug": slug.current,
2025-09-16T23:45:55.862164Z	      logo
2025-09-16T23:45:55.862297Z	    },
2025-09-16T23:45:55.862462Z	    category->{
2025-09-16T23:45:55.862533Z	      name,
2025-09-16T23:45:55.862631Z	      "slug": slug.current
2025-09-16T23:45:55.862756Z	    },
2025-09-16T23:45:55.86285Z	    pricing{
2025-09-16T23:45:55.862954Z	      currency,
2025-09-16T23:45:55.863329Z	      tiers[]{
2025-09-16T23:45:55.863474Z	        quantity,
2025-09-16T23:45:55.863773Z	        price,
2025-09-16T23:45:55.863862Z	        unit
2025-09-16T23:45:55.864101Z	      },
2025-09-16T23:45:55.864194Z	      moq,
2025-09-16T23:45:55.864254Z	      leadTime,
2025-09-16T23:45:55.8645Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:55.864585Z	      "price": tiers[0].price,
2025-09-16T23:45:55.864655Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:55.86492Z	    },
2025-09-16T23:45:55.864995Z	    inventory{
2025-09-16T23:45:55.865126Z	      quantity,
2025-09-16T23:45:55.865208Z	      status,
2025-09-16T23:45:55.865268Z	      warehouse,
2025-09-16T23:45:55.865359Z	      lastUpdated,
2025-09-16T23:45:55.865518Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:55.865775Z	      "inStock": status == "in_stock",
2025-09-16T23:45:55.865868Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:55.866028Z	    },
2025-09-16T23:45:55.866127Z	    isActive,
2025-09-16T23:45:55.866374Z	    isFeatured,
2025-09-16T23:45:55.866495Z	    isNew,
2025-09-16T23:45:55.866713Z	    _createdAt,
2025-09-16T23:45:55.866896Z	    _updatedAt
2025-09-16T23:45:55.86712Z	  
2025-09-16T23:45:55.867231Z	      },
2025-09-16T23:45:55.867335Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:45:55.867462Z	    }
2025-09-16T23:45:55.867621Z	  
2025-09-16T23:45:55.867762Z	Query parameters: {
2025-09-16T23:45:55.867878Z	  limit: 8,
2025-09-16T23:45:55.867978Z	  offset: 0,
2025-09-16T23:45:55.868155Z	  category: undefined,
2025-09-16T23:45:55.868291Z	  brand: 'qualcomm',
2025-09-16T23:45:55.868423Z	  featured: undefined
2025-09-16T23:45:55.868681Z	}
2025-09-16T23:45:55.868878Z	Fetching solutions with query: 
2025-09-16T23:45:55.868956Z	    {
2025-09-16T23:45:55.869024Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:55.86913Z	        
2025-09-16T23:45:55.869235Z	    _id,
2025-09-16T23:45:55.869341Z	    title,
2025-09-16T23:45:55.869441Z	    "slug": slug.current,
2025-09-16T23:45:55.869549Z	    summary,
2025-09-16T23:45:55.869641Z	    description,
2025-09-16T23:45:55.869853Z	    coverImage,
2025-09-16T23:45:55.869959Z	    primaryBrand->{
2025-09-16T23:45:55.870062Z	      _id,
2025-09-16T23:45:55.870158Z	      name,
2025-09-16T23:45:55.870274Z	      "slug": slug.current,
2025-09-16T23:45:55.870415Z	      logo
2025-09-16T23:45:55.870518Z	    },
2025-09-16T23:45:55.870753Z	    relatedBrands[]->{
2025-09-16T23:45:55.87101Z	      _id,
2025-09-16T23:45:55.87125Z	      name,
2025-09-16T23:45:55.871496Z	      "slug": slug.current,
2025-09-16T23:45:55.87158Z	      logo
2025-09-16T23:45:55.871745Z	    },
2025-09-16T23:45:55.871825Z	    targetMarket,
2025-09-16T23:45:55.871883Z	    complexity,
2025-09-16T23:45:55.871946Z	    publishedAt,
2025-09-16T23:45:55.872001Z	    isPublished,
2025-09-16T23:45:55.872056Z	    isFeatured,
2025-09-16T23:45:55.872109Z	    viewCount,
2025-09-16T23:45:55.872165Z	    _createdAt,
2025-09-16T23:45:55.87222Z	    _updatedAt
2025-09-16T23:45:55.872281Z	  
2025-09-16T23:45:55.872344Z	      },
2025-09-16T23:45:55.872411Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:45:55.872474Z	    }
2025-09-16T23:45:55.872535Z	  
2025-09-16T23:45:55.872596Z	Query parameters: {
2025-09-16T23:45:55.872658Z	  limit: 4,
2025-09-16T23:45:55.872752Z	  offset: 0,
2025-09-16T23:45:55.872811Z	  targetMarket: undefined,
2025-09-16T23:45:55.872868Z	  brand: 'qualcomm',
2025-09-16T23:45:55.872925Z	  featured: undefined
2025-09-16T23:45:55.872979Z	}
2025-09-16T23:45:55.873035Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:45:55.873092Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:45:55.873157Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:55.87322Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:55.873283Z	Solutions fetch result: {
2025-09-16T23:45:55.873343Z	  totalSolutions: 6,
2025-09-16T23:45:55.873404Z	  fetchedSolutions: 4,
2025-09-16T23:45:55.87346Z	  firstSolution: {
2025-09-16T23:45:55.873514Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:45:55.873575Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:45:55.87366Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:45:55.873768Z	    complexity: 'medium',
2025-09-16T23:45:55.873827Z	    coverImage: null,
2025-09-16T23:45:55.873881Z	    description: [ [Object] ],
2025-09-16T23:45:55.873934Z	    isFeatured: false,
2025-09-16T23:45:55.873995Z	    isPublished: true,
2025-09-16T23:45:55.874095Z	    primaryBrand: {
2025-09-16T23:45:55.87419Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:45:55.874303Z	      logo: null,
2025-09-16T23:45:55.874404Z	      name: 'CREE',
2025-09-16T23:45:55.874634Z	      slug: 'cree'
2025-09-16T23:45:55.874774Z	    },
2025-09-16T23:45:55.874883Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:45:55.874951Z	    relatedBrands: null,
2025-09-16T23:45:55.875189Z	    slug: '11111',
2025-09-16T23:45:55.875275Z	    summary: '11111',
2025-09-16T23:45:55.875333Z	    targetMarket: 'industrial-automation',
2025-09-16T23:45:55.875565Z	    title: '11111',
2025-09-16T23:45:55.875655Z	    viewCount: 0
2025-09-16T23:45:55.875833Z	  }
2025-09-16T23:45:55.875907Z	}
2025-09-16T23:45:55.875964Z	Solutions fetch result: {
2025-09-16T23:45:55.876106Z	  totalSolutions: 6,
2025-09-16T23:45:55.876166Z	  fetchedSolutions: 4,
2025-09-16T23:45:55.876319Z	  firstSolution: {
2025-09-16T23:45:55.876442Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:45:55.876562Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:45:55.876712Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:45:55.876825Z	    complexity: 'medium',
2025-09-16T23:45:55.876929Z	    coverImage: null,
2025-09-16T23:45:55.877041Z	    description: [ [Object] ],
2025-09-16T23:45:55.877152Z	    isFeatured: false,
2025-09-16T23:45:55.877313Z	    isPublished: true,
2025-09-16T23:45:55.877415Z	    primaryBrand: {
2025-09-16T23:45:55.877525Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:45:55.877636Z	      logo: null,
2025-09-16T23:45:55.877757Z	      name: 'CREE',
2025-09-16T23:45:55.877855Z	      slug: 'cree'
2025-09-16T23:45:55.877944Z	    },
2025-09-16T23:45:55.878038Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:45:55.878142Z	    relatedBrands: null,
2025-09-16T23:45:55.878238Z	    slug: '11111',
2025-09-16T23:45:55.878336Z	    summary: '11111',
2025-09-16T23:45:55.878428Z	    targetMarket: 'industrial-automation',
2025-09-16T23:45:55.878576Z	    title: '11111',
2025-09-16T23:45:55.878694Z	    viewCount: 0
2025-09-16T23:45:55.878824Z	  }
2025-09-16T23:45:55.878944Z	}
2025-09-16T23:45:55.879055Z	✅ [getBrandData] Found brand: Sanrex
2025-09-16T23:45:55.879163Z	✅ [getBrandData] Found brand: Sanrex
2025-09-16T23:45:55.879283Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:55.87947Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:55.879612Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:55.87978Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:55.948426Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:55.94873Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:55.948976Z	Products fetch result: {
2025-09-16T23:45:55.949165Z	  totalProducts: 1,
2025-09-16T23:45:55.949312Z	  fetchedProducts: 1,
2025-09-16T23:45:55.949461Z	  firstProduct: {
2025-09-16T23:45:55.949704Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-16T23:45:55.949873Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-16T23:45:55.949995Z	    _type: 'product',
2025-09-16T23:45:55.95012Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-16T23:45:55.950228Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-16T23:45:55.950335Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:45:55.950446Z	    image: null,
2025-09-16T23:45:55.950557Z	    inventory: {
2025-09-16T23:45:55.95066Z	      inStock: true,
2025-09-16T23:45:55.950791Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-16T23:45:55.950886Z	      quantity: 0,
2025-09-16T23:45:55.950977Z	      status: 'in_stock',
2025-09-16T23:45:55.951051Z	      warehouse: null
2025-09-16T23:45:55.951149Z	    },
2025-09-16T23:45:55.951245Z	    isActive: true,
2025-09-16T23:45:55.951354Z	    isFeatured: false,
2025-09-16T23:45:55.951461Z	    isNew: false,
2025-09-16T23:45:55.951598Z	    partNumber: 'SKKT106/16E',
2025-09-16T23:45:55.951732Z	    pricing: {
2025-09-16T23:45:55.95188Z	      currency: 'CNY',
2025-09-16T23:45:55.952056Z	      leadTime: null,
2025-09-16T23:45:55.952183Z	      moq: null,
2025-09-16T23:45:55.952346Z	      price: null,
2025-09-16T23:45:55.952485Z	      tiers: null
2025-09-16T23:45:55.952753Z	    },
2025-09-16T23:45:55.95291Z	    shortDescription: 'SKKT106/16E',
2025-09-16T23:45:55.953032Z	    slug: 'SKKT106/16E',
2025-09-16T23:45:55.953202Z	    title: 'SKKT106/16E'
2025-09-16T23:45:55.953319Z	  }
2025-09-16T23:45:55.953456Z	}
2025-09-16T23:45:55.953606Z	Products fetch result: {
2025-09-16T23:45:55.953799Z	  totalProducts: 1,
2025-09-16T23:45:55.95475Z	  fetchedProducts: 1,
2025-09-16T23:45:55.955034Z	  firstProduct: {
2025-09-16T23:45:55.955175Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-16T23:45:55.95529Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-16T23:45:55.955396Z	    _type: 'product',
2025-09-16T23:45:55.955502Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-16T23:45:55.955609Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-16T23:45:55.955756Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:45:55.955889Z	    image: null,
2025-09-16T23:45:55.956259Z	    inventory: {
2025-09-16T23:45:55.956395Z	      inStock: true,
2025-09-16T23:45:55.956643Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-16T23:45:55.956767Z	      quantity: 0,
2025-09-16T23:45:55.956877Z	      status: 'in_stock',
2025-09-16T23:45:55.956966Z	      warehouse: null
2025-09-16T23:45:55.957052Z	    },
2025-09-16T23:45:55.957218Z	    isActive: true,
2025-09-16T23:45:55.957328Z	    isFeatured: false,
2025-09-16T23:45:55.957409Z	    isNew: false,
2025-09-16T23:45:55.957501Z	    partNumber: 'SKKT106/16E',
2025-09-16T23:45:55.957585Z	    pricing: {
2025-09-16T23:45:55.957663Z	      currency: 'CNY',
2025-09-16T23:45:55.957771Z	      leadTime: null,
2025-09-16T23:45:55.957869Z	      moq: null,
2025-09-16T23:45:55.958168Z	      price: null,
2025-09-16T23:45:55.958371Z	      tiers: null
2025-09-16T23:45:55.958618Z	    },
2025-09-16T23:45:55.958965Z	    shortDescription: 'SKKT106/16E',
2025-09-16T23:45:55.959132Z	    slug: 'SKKT106/16E',
2025-09-16T23:45:55.959299Z	    title: 'SKKT106/16E'
2025-09-16T23:45:55.959415Z	  }
2025-09-16T23:45:55.959539Z	}
2025-09-16T23:45:55.95966Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-16T23:45:55.959826Z	Fetching products with query: 
2025-09-16T23:45:55.959948Z	    {
2025-09-16T23:45:55.960056Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:55.960161Z	        
2025-09-16T23:45:55.960268Z	    _id,
2025-09-16T23:45:55.960373Z	    _type,
2025-09-16T23:45:55.960481Z	    partNumber,
2025-09-16T23:45:55.960581Z	    "slug": slug.current,
2025-09-16T23:45:55.960704Z	    title,
2025-09-16T23:45:55.960835Z	    shortDescription,
2025-09-16T23:45:55.960962Z	    image,
2025-09-16T23:45:55.961076Z	    brand->{
2025-09-16T23:45:55.961193Z	      name,
2025-09-16T23:45:55.961302Z	      "slug": slug.current,
2025-09-16T23:45:55.961409Z	      logo
2025-09-16T23:45:55.961518Z	    },
2025-09-16T23:45:55.961623Z	    category->{
2025-09-16T23:45:55.961761Z	      name,
2025-09-16T23:45:55.961866Z	      "slug": slug.current
2025-09-16T23:45:55.961963Z	    },
2025-09-16T23:45:55.962062Z	    pricing{
2025-09-16T23:45:55.96218Z	      currency,
2025-09-16T23:45:55.9623Z	      tiers[]{
2025-09-16T23:45:55.962409Z	        quantity,
2025-09-16T23:45:55.962519Z	        price,
2025-09-16T23:45:55.962627Z	        unit
2025-09-16T23:45:55.962767Z	      },
2025-09-16T23:45:55.962899Z	      moq,
2025-09-16T23:45:55.963013Z	      leadTime,
2025-09-16T23:45:55.963136Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:55.963244Z	      "price": tiers[0].price,
2025-09-16T23:45:55.963345Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:55.963451Z	    },
2025-09-16T23:45:55.963567Z	    inventory{
2025-09-16T23:45:55.96367Z	      quantity,
2025-09-16T23:45:55.96383Z	      status,
2025-09-16T23:45:55.96394Z	      warehouse,
2025-09-16T23:45:55.964071Z	      lastUpdated,
2025-09-16T23:45:55.964184Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:55.964341Z	      "inStock": status == "in_stock",
2025-09-16T23:45:55.964581Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:55.964877Z	    },
2025-09-16T23:45:55.965274Z	    isActive,
2025-09-16T23:45:55.965509Z	    isFeatured,
2025-09-16T23:45:55.965717Z	    isNew,
2025-09-16T23:45:55.96606Z	    _createdAt,
2025-09-16T23:45:55.966293Z	    _updatedAt
2025-09-16T23:45:55.966626Z	  
2025-09-16T23:45:55.966884Z	      },
2025-09-16T23:45:55.967186Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-16T23:45:55.96764Z	    }
2025-09-16T23:45:55.967958Z	  
2025-09-16T23:45:55.968548Z	Query parameters: {
2025-09-16T23:45:55.969652Z	  limit: 8,
2025-09-16T23:45:55.969803Z	  offset: 0,
2025-09-16T23:45:55.97009Z	  category: undefined,
2025-09-16T23:45:55.970287Z	  brand: 'ncc',
2025-09-16T23:45:55.970426Z	  featured: undefined
2025-09-16T23:45:55.970534Z	}
2025-09-16T23:45:55.970635Z	Fetching solutions with query: 
2025-09-16T23:45:55.971411Z	    {
2025-09-16T23:45:55.971539Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:55.974238Z	        
2025-09-16T23:45:55.974406Z	    _id,
2025-09-16T23:45:55.974527Z	    title,
2025-09-16T23:45:55.974624Z	    "slug": slug.current,
2025-09-16T23:45:55.97503Z	    summary,
2025-09-16T23:45:55.975142Z	    description,
2025-09-16T23:45:55.975733Z	    coverImage,
2025-09-16T23:45:55.976124Z	    primaryBrand->{
2025-09-16T23:45:55.976292Z	      _id,
2025-09-16T23:45:55.976402Z	      name,
2025-09-16T23:45:55.976625Z	      "slug": slug.current,
2025-09-16T23:45:55.976776Z	      logo
2025-09-16T23:45:55.976881Z	    },
2025-09-16T23:45:55.976978Z	    relatedBrands[]->{
2025-09-16T23:45:55.977076Z	      _id,
2025-09-16T23:45:55.977174Z	      name,
2025-09-16T23:45:55.977363Z	      "slug": slug.current,
2025-09-16T23:45:55.977497Z	      logo
2025-09-16T23:45:55.977594Z	    },
2025-09-16T23:45:55.977728Z	    targetMarket,
2025-09-16T23:45:55.977837Z	    complexity,
2025-09-16T23:45:55.977952Z	    publishedAt,
2025-09-16T23:45:55.978343Z	    isPublished,
2025-09-16T23:45:55.978489Z	    isFeatured,
2025-09-16T23:45:55.978596Z	    viewCount,
2025-09-16T23:45:55.978717Z	    _createdAt,
2025-09-16T23:45:55.978825Z	    _updatedAt
2025-09-16T23:45:55.978941Z	  
2025-09-16T23:45:55.979043Z	      },
2025-09-16T23:45:55.979149Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-16T23:45:55.979299Z	    }
2025-09-16T23:45:55.979428Z	  
2025-09-16T23:45:55.979548Z	Query parameters: {
2025-09-16T23:45:55.97966Z	  limit: 4,
2025-09-16T23:45:55.979831Z	  offset: 0,
2025-09-16T23:45:55.979946Z	  targetMarket: undefined,
2025-09-16T23:45:55.980053Z	  brand: 'ncc',
2025-09-16T23:45:55.980156Z	  featured: undefined
2025-09-16T23:45:55.980276Z	}
2025-09-16T23:45:55.980405Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-16T23:45:55.980513Z	Fetching products with query: 
2025-09-16T23:45:55.98062Z	    {
2025-09-16T23:45:55.980749Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:55.980863Z	        
2025-09-16T23:45:55.980967Z	    _id,
2025-09-16T23:45:55.98107Z	    _type,
2025-09-16T23:45:55.981172Z	    partNumber,
2025-09-16T23:45:55.981271Z	    "slug": slug.current,
2025-09-16T23:45:55.981387Z	    title,
2025-09-16T23:45:55.981497Z	    shortDescription,
2025-09-16T23:45:55.981627Z	    image,
2025-09-16T23:45:55.98176Z	    brand->{
2025-09-16T23:45:55.981871Z	      name,
2025-09-16T23:45:55.98198Z	      "slug": slug.current,
2025-09-16T23:45:55.982087Z	      logo
2025-09-16T23:45:55.982192Z	    },
2025-09-16T23:45:55.982304Z	    category->{
2025-09-16T23:45:55.982432Z	      name,
2025-09-16T23:45:55.982543Z	      "slug": slug.current
2025-09-16T23:45:55.982666Z	    },
2025-09-16T23:45:55.982811Z	    pricing{
2025-09-16T23:45:55.982917Z	      currency,
2025-09-16T23:45:55.983024Z	      tiers[]{
2025-09-16T23:45:55.983129Z	        quantity,
2025-09-16T23:45:55.983234Z	        price,
2025-09-16T23:45:55.983354Z	        unit
2025-09-16T23:45:55.983494Z	      },
2025-09-16T23:45:55.983617Z	      moq,
2025-09-16T23:45:55.984326Z	      leadTime,
2025-09-16T23:45:55.984855Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:55.98506Z	      "price": tiers[0].price,
2025-09-16T23:45:55.985227Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:55.98542Z	    },
2025-09-16T23:45:55.985596Z	    inventory{
2025-09-16T23:45:55.985788Z	      quantity,
2025-09-16T23:45:55.985949Z	      status,
2025-09-16T23:45:55.986106Z	      warehouse,
2025-09-16T23:45:55.988458Z	      lastUpdated,
2025-09-16T23:45:55.988713Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:55.988972Z	      "inStock": status == "in_stock",
2025-09-16T23:45:55.989111Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:55.989224Z	    },
2025-09-16T23:45:55.989325Z	    isActive,
2025-09-16T23:45:55.989448Z	    isFeatured,
2025-09-16T23:45:55.989568Z	    isNew,
2025-09-16T23:45:55.989689Z	    _createdAt,
2025-09-16T23:45:55.98981Z	    _updatedAt
2025-09-16T23:45:55.989932Z	  
2025-09-16T23:45:55.990037Z	      },
2025-09-16T23:45:55.990141Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-16T23:45:55.990256Z	    }
2025-09-16T23:45:55.990358Z	  
2025-09-16T23:45:55.990475Z	Query parameters: {
2025-09-16T23:45:55.990578Z	  limit: 8,
2025-09-16T23:45:55.990686Z	  offset: 0,
2025-09-16T23:45:55.990806Z	  category: undefined,
2025-09-16T23:45:55.990908Z	  brand: 'ncc',
2025-09-16T23:45:55.991007Z	  featured: undefined
2025-09-16T23:45:55.991112Z	}
2025-09-16T23:45:55.991212Z	Fetching solutions with query: 
2025-09-16T23:45:55.991319Z	    {
2025-09-16T23:45:55.991423Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:55.99156Z	        
2025-09-16T23:45:55.991691Z	    _id,
2025-09-16T23:45:55.991816Z	    title,
2025-09-16T23:45:55.991928Z	    "slug": slug.current,
2025-09-16T23:45:55.992235Z	    summary,
2025-09-16T23:45:55.992342Z	    description,
2025-09-16T23:45:55.992437Z	    coverImage,
2025-09-16T23:45:55.992899Z	    primaryBrand->{
2025-09-16T23:45:55.993021Z	      _id,
2025-09-16T23:45:55.99313Z	      name,
2025-09-16T23:45:55.993239Z	      "slug": slug.current,
2025-09-16T23:45:55.993332Z	      logo
2025-09-16T23:45:55.993568Z	    },
2025-09-16T23:45:55.993763Z	    relatedBrands[]->{
2025-09-16T23:45:55.993883Z	      _id,
2025-09-16T23:45:55.994045Z	      name,
2025-09-16T23:45:55.994229Z	      "slug": slug.current,
2025-09-16T23:45:55.994341Z	      logo
2025-09-16T23:45:55.994432Z	    },
2025-09-16T23:45:55.994542Z	    targetMarket,
2025-09-16T23:45:55.994647Z	    complexity,
2025-09-16T23:45:55.994768Z	    publishedAt,
2025-09-16T23:45:55.99487Z	    isPublished,
2025-09-16T23:45:55.994967Z	    isFeatured,
2025-09-16T23:45:55.995069Z	    viewCount,
2025-09-16T23:45:55.995476Z	    _createdAt,
2025-09-16T23:45:55.995767Z	    _updatedAt
2025-09-16T23:45:55.996007Z	  
2025-09-16T23:45:55.996437Z	      },
2025-09-16T23:45:55.996541Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-16T23:45:55.996873Z	    }
2025-09-16T23:45:55.99694Z	  
2025-09-16T23:45:55.996995Z	Query parameters: {
2025-09-16T23:45:55.997049Z	  limit: 4,
2025-09-16T23:45:55.997105Z	  offset: 0,
2025-09-16T23:45:55.99716Z	  targetMarket: undefined,
2025-09-16T23:45:55.997215Z	  brand: 'ncc',
2025-09-16T23:45:55.997268Z	  featured: undefined
2025-09-16T23:45:55.99732Z	}
2025-09-16T23:45:55.997385Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-16T23:45:55.997459Z	Fetching products with query: 
2025-09-16T23:45:55.997896Z	    {
2025-09-16T23:45:55.997963Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:55.998021Z	        
2025-09-16T23:45:55.998341Z	    _id,
2025-09-16T23:45:55.998789Z	    _type,
2025-09-16T23:45:55.998947Z	    partNumber,
2025-09-16T23:45:55.999104Z	    "slug": slug.current,
2025-09-16T23:45:55.999285Z	    title,
2025-09-16T23:45:55.999414Z	    shortDescription,
2025-09-16T23:45:55.99953Z	    image,
2025-09-16T23:45:55.999635Z	    brand->{
2025-09-16T23:45:55.999758Z	      name,
2025-09-16T23:45:55.999864Z	      "slug": slug.current,
2025-09-16T23:45:56.000012Z	      logo
2025-09-16T23:45:56.024047Z	    },
2025-09-16T23:45:56.024249Z	    category->{
2025-09-16T23:45:56.024491Z	      name,
2025-09-16T23:45:56.02462Z	      "slug": slug.current
2025-09-16T23:45:56.02477Z	    },
2025-09-16T23:45:56.02488Z	    pricing{
2025-09-16T23:45:56.024982Z	      currency,
2025-09-16T23:45:56.025101Z	      tiers[]{
2025-09-16T23:45:56.025206Z	        quantity,
2025-09-16T23:45:56.02531Z	        price,
2025-09-16T23:45:56.025744Z	        unit
2025-09-16T23:45:56.025916Z	      },
2025-09-16T23:45:56.026301Z	      moq,
2025-09-16T23:45:56.026521Z	      leadTime,
2025-09-16T23:45:56.026704Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:56.026932Z	      "price": tiers[0].price,
2025-09-16T23:45:56.027054Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:56.027239Z	    },
2025-09-16T23:45:56.027413Z	    inventory{
2025-09-16T23:45:56.027501Z	      quantity,
2025-09-16T23:45:56.027562Z	      status,
2025-09-16T23:45:56.027628Z	      warehouse,
2025-09-16T23:45:56.027742Z	      lastUpdated,
2025-09-16T23:45:56.027853Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:56.027947Z	      "inStock": status == "in_stock",
2025-09-16T23:45:56.028045Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:56.028156Z	    },
2025-09-16T23:45:56.028251Z	    isActive,
2025-09-16T23:45:56.028351Z	    isFeatured,
2025-09-16T23:45:56.02847Z	    isNew,
2025-09-16T23:45:56.028653Z	    _createdAt,
2025-09-16T23:45:56.028789Z	    _updatedAt
2025-09-16T23:45:56.028898Z	  
2025-09-16T23:45:56.029005Z	      },
2025-09-16T23:45:56.029111Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-16T23:45:56.029224Z	    }
2025-09-16T23:45:56.029332Z	  
2025-09-16T23:45:56.029446Z	Query parameters: {
2025-09-16T23:45:56.029549Z	  limit: 8,
2025-09-16T23:45:56.029653Z	  offset: 0,
2025-09-16T23:45:56.02977Z	  category: undefined,
2025-09-16T23:45:56.029863Z	  brand: '英飞凌',
2025-09-16T23:45:56.03Z	  featured: undefined
2025-09-16T23:45:56.03011Z	}
2025-09-16T23:45:56.030212Z	Fetching solutions with query: 
2025-09-16T23:45:56.030319Z	    {
2025-09-16T23:45:56.030435Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:56.030556Z	        
2025-09-16T23:45:56.030662Z	    _id,
2025-09-16T23:45:56.030781Z	    title,
2025-09-16T23:45:56.030885Z	    "slug": slug.current,
2025-09-16T23:45:56.030995Z	    summary,
2025-09-16T23:45:56.031099Z	    description,
2025-09-16T23:45:56.031208Z	    coverImage,
2025-09-16T23:45:56.031307Z	    primaryBrand->{
2025-09-16T23:45:56.031414Z	      _id,
2025-09-16T23:45:56.03152Z	      name,
2025-09-16T23:45:56.031626Z	      "slug": slug.current,
2025-09-16T23:45:56.031759Z	      logo
2025-09-16T23:45:56.031858Z	    },
2025-09-16T23:45:56.03196Z	    relatedBrands[]->{
2025-09-16T23:45:56.032057Z	      _id,
2025-09-16T23:45:56.032149Z	      name,
2025-09-16T23:45:56.032254Z	      "slug": slug.current,
2025-09-16T23:45:56.032363Z	      logo
2025-09-16T23:45:56.032472Z	    },
2025-09-16T23:45:56.032569Z	    targetMarket,
2025-09-16T23:45:56.032667Z	    complexity,
2025-09-16T23:45:56.0328Z	    publishedAt,
2025-09-16T23:45:56.032907Z	    isPublished,
2025-09-16T23:45:56.033006Z	    isFeatured,
2025-09-16T23:45:56.0331Z	    viewCount,
2025-09-16T23:45:56.033211Z	    _createdAt,
2025-09-16T23:45:56.033312Z	    _updatedAt
2025-09-16T23:45:56.033429Z	  
2025-09-16T23:45:56.033542Z	      },
2025-09-16T23:45:56.033653Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-16T23:45:56.033793Z	    }
2025-09-16T23:45:56.033901Z	  
2025-09-16T23:45:56.033999Z	Query parameters: {
2025-09-16T23:45:56.034104Z	  limit: 4,
2025-09-16T23:45:56.03421Z	  offset: 0,
2025-09-16T23:45:56.034314Z	  targetMarket: undefined,
2025-09-16T23:45:56.034422Z	  brand: '英飞凌',
2025-09-16T23:45:56.034525Z	  featured: undefined
2025-09-16T23:45:56.034626Z	}
2025-09-16T23:45:56.03474Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-16T23:45:56.034856Z	Fetching products with query: 
2025-09-16T23:45:56.034959Z	    {
2025-09-16T23:45:56.035061Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:56.035167Z	        
2025-09-16T23:45:56.035267Z	    _id,
2025-09-16T23:45:56.035377Z	    _type,
2025-09-16T23:45:56.035473Z	    partNumber,
2025-09-16T23:45:56.035563Z	    "slug": slug.current,
2025-09-16T23:45:56.035701Z	    title,
2025-09-16T23:45:56.035805Z	    shortDescription,
2025-09-16T23:45:56.035918Z	    image,
2025-09-16T23:45:56.036034Z	    brand->{
2025-09-16T23:45:56.036157Z	      name,
2025-09-16T23:45:56.036364Z	      "slug": slug.current,
2025-09-16T23:45:56.036571Z	      logo
2025-09-16T23:45:56.036749Z	    },
2025-09-16T23:45:56.036906Z	    category->{
2025-09-16T23:45:56.037045Z	      name,
2025-09-16T23:45:56.037181Z	      "slug": slug.current
2025-09-16T23:45:56.03731Z	    },
2025-09-16T23:45:56.037467Z	    pricing{
2025-09-16T23:45:56.037626Z	      currency,
2025-09-16T23:45:56.037759Z	      tiers[]{
2025-09-16T23:45:56.037876Z	        quantity,
2025-09-16T23:45:56.037976Z	        price,
2025-09-16T23:45:56.038074Z	        unit
2025-09-16T23:45:56.038168Z	      },
2025-09-16T23:45:56.038268Z	      moq,
2025-09-16T23:45:56.038376Z	      leadTime,
2025-09-16T23:45:56.038495Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:56.038602Z	      "price": tiers[0].price,
2025-09-16T23:45:56.038736Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:56.038854Z	    },
2025-09-16T23:45:56.038963Z	    inventory{
2025-09-16T23:45:56.039065Z	      quantity,
2025-09-16T23:45:56.039162Z	      status,
2025-09-16T23:45:56.039288Z	      warehouse,
2025-09-16T23:45:56.039398Z	      lastUpdated,
2025-09-16T23:45:56.039512Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:56.039621Z	      "inStock": status == "in_stock",
2025-09-16T23:45:56.039743Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:56.039843Z	    },
2025-09-16T23:45:56.039936Z	    isActive,
2025-09-16T23:45:56.040028Z	    isFeatured,
2025-09-16T23:45:56.040133Z	    isNew,
2025-09-16T23:45:56.040235Z	    _createdAt,
2025-09-16T23:45:56.040334Z	    _updatedAt
2025-09-16T23:45:56.040443Z	  
2025-09-16T23:45:56.040544Z	      },
2025-09-16T23:45:56.040655Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-16T23:45:56.0408Z	    }
2025-09-16T23:45:56.041103Z	  
2025-09-16T23:45:56.041251Z	Query parameters: {
2025-09-16T23:45:56.041366Z	  limit: 8,
2025-09-16T23:45:56.041476Z	  offset: 0,
2025-09-16T23:45:56.041599Z	  category: undefined,
2025-09-16T23:45:56.041726Z	  brand: '英飞凌',
2025-09-16T23:45:56.041841Z	  featured: undefined
2025-09-16T23:45:56.041944Z	}
2025-09-16T23:45:56.042033Z	Fetching solutions with query: 
2025-09-16T23:45:56.042125Z	    {
2025-09-16T23:45:56.042228Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:56.042364Z	        
2025-09-16T23:45:56.042506Z	    _id,
2025-09-16T23:45:56.042617Z	    title,
2025-09-16T23:45:56.042741Z	    "slug": slug.current,
2025-09-16T23:45:56.042847Z	    summary,
2025-09-16T23:45:56.042953Z	    description,
2025-09-16T23:45:56.043055Z	    coverImage,
2025-09-16T23:45:56.043157Z	    primaryBrand->{
2025-09-16T23:45:56.043249Z	      _id,
2025-09-16T23:45:56.04334Z	      name,
2025-09-16T23:45:56.043453Z	      "slug": slug.current,
2025-09-16T23:45:56.043562Z	      logo
2025-09-16T23:45:56.043669Z	    },
2025-09-16T23:45:56.043792Z	    relatedBrands[]->{
2025-09-16T23:45:56.043894Z	      _id,
2025-09-16T23:45:56.043993Z	      name,
2025-09-16T23:45:56.044093Z	      "slug": slug.current,
2025-09-16T23:45:56.044213Z	      logo
2025-09-16T23:45:56.04431Z	    },
2025-09-16T23:45:56.044445Z	    targetMarket,
2025-09-16T23:45:56.0447Z	    complexity,
2025-09-16T23:45:56.04484Z	    publishedAt,
2025-09-16T23:45:56.044955Z	    isPublished,
2025-09-16T23:45:56.045058Z	    isFeatured,
2025-09-16T23:45:56.045159Z	    viewCount,
2025-09-16T23:45:56.045259Z	    _createdAt,
2025-09-16T23:45:56.045373Z	    _updatedAt
2025-09-16T23:45:56.045478Z	  
2025-09-16T23:45:56.045572Z	      },
2025-09-16T23:45:56.04569Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-16T23:45:56.045825Z	    }
2025-09-16T23:45:56.04594Z	  
2025-09-16T23:45:56.046042Z	Query parameters: {
2025-09-16T23:45:56.046153Z	  limit: 4,
2025-09-16T23:45:56.046256Z	  offset: 0,
2025-09-16T23:45:56.046367Z	  targetMarket: undefined,
2025-09-16T23:45:56.046468Z	  brand: '英飞凌',
2025-09-16T23:45:56.046573Z	  featured: undefined
2025-09-16T23:45:56.046668Z	}
2025-09-16T23:45:56.046786Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:56.046892Z	Fetching products with query: 
2025-09-16T23:45:56.047001Z	    {
2025-09-16T23:45:56.047119Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:56.04734Z	        
2025-09-16T23:45:56.047583Z	    _id,
2025-09-16T23:45:56.047814Z	    _type,
2025-09-16T23:45:56.048039Z	    partNumber,
2025-09-16T23:45:56.048243Z	    "slug": slug.current,
2025-09-16T23:45:56.048489Z	    title,
2025-09-16T23:45:56.048733Z	    shortDescription,
2025-09-16T23:45:56.048957Z	    image,
2025-09-16T23:45:56.049175Z	    brand->{
2025-09-16T23:45:56.049381Z	      name,
2025-09-16T23:45:56.049579Z	      "slug": slug.current,
2025-09-16T23:45:56.0498Z	      logo
2025-09-16T23:45:56.050014Z	    },
2025-09-16T23:45:56.050235Z	    category->{
2025-09-16T23:45:56.050489Z	      name,
2025-09-16T23:45:56.050751Z	      "slug": slug.current
2025-09-16T23:45:56.051009Z	    },
2025-09-16T23:45:56.051243Z	    pricing{
2025-09-16T23:45:56.051486Z	      currency,
2025-09-16T23:45:56.051729Z	      tiers[]{
2025-09-16T23:45:56.05198Z	        quantity,
2025-09-16T23:45:56.052238Z	        price,
2025-09-16T23:45:56.052486Z	        unit
2025-09-16T23:45:56.052609Z	      },
2025-09-16T23:45:56.052741Z	      moq,
2025-09-16T23:45:56.052846Z	      leadTime,
2025-09-16T23:45:56.05295Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:56.053061Z	      "price": tiers[0].price,
2025-09-16T23:45:56.053162Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:56.053271Z	    },
2025-09-16T23:45:56.053469Z	    inventory{
2025-09-16T23:45:56.053625Z	      quantity,
2025-09-16T23:45:56.053775Z	      status,
2025-09-16T23:45:56.053876Z	      warehouse,
2025-09-16T23:45:56.053974Z	      lastUpdated,
2025-09-16T23:45:56.054035Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:56.054097Z	      "inStock": status == "in_stock",
2025-09-16T23:45:56.054169Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:56.054229Z	    },
2025-09-16T23:45:56.054305Z	    isActive,
2025-09-16T23:45:56.054364Z	    isFeatured,
2025-09-16T23:45:56.05442Z	    isNew,
2025-09-16T23:45:56.05455Z	    _createdAt,
2025-09-16T23:45:56.05479Z	    _updatedAt
2025-09-16T23:45:56.054928Z	  
2025-09-16T23:45:56.055152Z	      },
2025-09-16T23:45:56.055274Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-16T23:45:56.055499Z	    }
2025-09-16T23:45:56.055703Z	  
2025-09-16T23:45:56.055972Z	Query parameters: {
2025-09-16T23:45:56.056093Z	  limit: 8,
2025-09-16T23:45:56.056202Z	  offset: 0,
2025-09-16T23:45:56.056311Z	  category: undefined,
2025-09-16T23:45:56.056433Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:45:56.056554Z	  featured: undefined
2025-09-16T23:45:56.056653Z	}
2025-09-16T23:45:56.056769Z	Fetching solutions with query: 
2025-09-16T23:45:56.056872Z	    {
2025-09-16T23:45:56.056964Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:56.057063Z	        
2025-09-16T23:45:56.057154Z	    _id,
2025-09-16T23:45:56.057247Z	    title,
2025-09-16T23:45:56.057335Z	    "slug": slug.current,
2025-09-16T23:45:56.057448Z	    summary,
2025-09-16T23:45:56.057561Z	    description,
2025-09-16T23:45:56.05767Z	    coverImage,
2025-09-16T23:45:56.057794Z	    primaryBrand->{
2025-09-16T23:45:56.057901Z	      _id,
2025-09-16T23:45:56.058032Z	      name,
2025-09-16T23:45:56.05814Z	      "slug": slug.current,
2025-09-16T23:45:56.058244Z	      logo
2025-09-16T23:45:56.05834Z	    },
2025-09-16T23:45:56.058483Z	    relatedBrands[]->{
2025-09-16T23:45:56.058591Z	      _id,
2025-09-16T23:45:56.058718Z	      name,
2025-09-16T23:45:56.058856Z	      "slug": slug.current,
2025-09-16T23:45:56.05895Z	      logo
2025-09-16T23:45:56.059045Z	    },
2025-09-16T23:45:56.059149Z	    targetMarket,
2025-09-16T23:45:56.059269Z	    complexity,
2025-09-16T23:45:56.059389Z	    publishedAt,
2025-09-16T23:45:56.0595Z	    isPublished,
2025-09-16T23:45:56.059609Z	    isFeatured,
2025-09-16T23:45:56.059739Z	    viewCount,
2025-09-16T23:45:56.059846Z	    _createdAt,
2025-09-16T23:45:56.059958Z	    _updatedAt
2025-09-16T23:45:56.060072Z	  
2025-09-16T23:45:56.060181Z	      },
2025-09-16T23:45:56.060291Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-16T23:45:56.060424Z	    }
2025-09-16T23:45:56.060528Z	  
2025-09-16T23:45:56.060647Z	Query parameters: {
2025-09-16T23:45:56.060769Z	  limit: 4,
2025-09-16T23:45:56.060874Z	  offset: 0,
2025-09-16T23:45:56.060976Z	  targetMarket: undefined,
2025-09-16T23:45:56.061081Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:45:56.061174Z	  featured: undefined
2025-09-16T23:45:56.061284Z	}
2025-09-16T23:45:56.061402Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:56.061518Z	Fetching products with query: 
2025-09-16T23:45:56.06162Z	    {
2025-09-16T23:45:56.061747Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:56.061861Z	        
2025-09-16T23:45:56.061965Z	    _id,
2025-09-16T23:45:56.062059Z	    _type,
2025-09-16T23:45:56.06215Z	    partNumber,
2025-09-16T23:45:56.062241Z	    "slug": slug.current,
2025-09-16T23:45:56.062335Z	    title,
2025-09-16T23:45:56.062449Z	    shortDescription,
2025-09-16T23:45:56.062551Z	    image,
2025-09-16T23:45:56.062669Z	    brand->{
2025-09-16T23:45:56.06279Z	      name,
2025-09-16T23:45:56.06289Z	      "slug": slug.current,
2025-09-16T23:45:56.062989Z	      logo
2025-09-16T23:45:56.063141Z	    },
2025-09-16T23:45:56.063317Z	    category->{
2025-09-16T23:45:56.063461Z	      name,
2025-09-16T23:45:56.063588Z	      "slug": slug.current
2025-09-16T23:45:56.06373Z	    },
2025-09-16T23:45:56.063849Z	    pricing{
2025-09-16T23:45:56.063964Z	      currency,
2025-09-16T23:45:56.064085Z	      tiers[]{
2025-09-16T23:45:56.064199Z	        quantity,
2025-09-16T23:45:56.064297Z	        price,
2025-09-16T23:45:56.064571Z	        unit
2025-09-16T23:45:56.064799Z	      },
2025-09-16T23:45:56.064936Z	      moq,
2025-09-16T23:45:56.065073Z	      leadTime,
2025-09-16T23:45:56.065201Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:56.065304Z	      "price": tiers[0].price,
2025-09-16T23:45:56.065407Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:56.065522Z	    },
2025-09-16T23:45:56.06562Z	    inventory{
2025-09-16T23:45:56.065797Z	      quantity,
2025-09-16T23:45:56.065964Z	      status,
2025-09-16T23:45:56.066095Z	      warehouse,
2025-09-16T23:45:56.066195Z	      lastUpdated,
2025-09-16T23:45:56.066351Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:56.066553Z	      "inStock": status == "in_stock",
2025-09-16T23:45:56.066686Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:56.066786Z	    },
2025-09-16T23:45:56.066904Z	    isActive,
2025-09-16T23:45:56.067007Z	    isFeatured,
2025-09-16T23:45:56.067127Z	    isNew,
2025-09-16T23:45:56.067236Z	    _createdAt,
2025-09-16T23:45:56.067337Z	    _updatedAt
2025-09-16T23:45:56.067441Z	  
2025-09-16T23:45:56.067637Z	      },
2025-09-16T23:45:56.06781Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-16T23:45:56.067887Z	    }
2025-09-16T23:45:56.067945Z	  
2025-09-16T23:45:56.068078Z	Query parameters: {
2025-09-16T23:45:56.068226Z	  limit: 8,
2025-09-16T23:45:56.068372Z	  offset: 0,
2025-09-16T23:45:56.068516Z	  category: undefined,
2025-09-16T23:45:56.068683Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:45:56.068779Z	  featured: undefined
2025-09-16T23:45:56.068916Z	}
2025-09-16T23:45:56.069048Z	Fetching solutions with query: 
2025-09-16T23:45:56.069192Z	    {
2025-09-16T23:45:56.069277Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:56.069459Z	        
2025-09-16T23:45:56.069534Z	    _id,
2025-09-16T23:45:56.069662Z	    title,
2025-09-16T23:45:56.069814Z	    "slug": slug.current,
2025-09-16T23:45:56.069959Z	    summary,
2025-09-16T23:45:56.070104Z	    description,
2025-09-16T23:45:56.070214Z	    coverImage,
2025-09-16T23:45:56.070295Z	    primaryBrand->{
2025-09-16T23:45:56.070418Z	      _id,
2025-09-16T23:45:56.0705Z	      name,
2025-09-16T23:45:56.070607Z	      "slug": slug.current,
2025-09-16T23:45:56.07078Z	      logo
2025-09-16T23:45:56.070948Z	    },
2025-09-16T23:45:56.071021Z	    relatedBrands[]->{
2025-09-16T23:45:56.071077Z	      _id,
2025-09-16T23:45:56.071314Z	      name,
2025-09-16T23:45:56.071473Z	      "slug": slug.current,
2025-09-16T23:45:56.07162Z	      logo
2025-09-16T23:45:56.071791Z	    },
2025-09-16T23:45:56.071867Z	    targetMarket,
2025-09-16T23:45:56.072001Z	    complexity,
2025-09-16T23:45:56.072318Z	    publishedAt,
2025-09-16T23:45:56.072429Z	    isPublished,
2025-09-16T23:45:56.072528Z	    isFeatured,
2025-09-16T23:45:56.072911Z	    viewCount,
2025-09-16T23:45:56.073Z	    _createdAt,
2025-09-16T23:45:56.073122Z	    _updatedAt
2025-09-16T23:45:56.073224Z	  
2025-09-16T23:45:56.073321Z	      },
2025-09-16T23:45:56.073433Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-16T23:45:56.073547Z	    }
2025-09-16T23:45:56.073694Z	  
2025-09-16T23:45:56.07382Z	Query parameters: {
2025-09-16T23:45:56.073941Z	  limit: 4,
2025-09-16T23:45:56.074043Z	  offset: 0,
2025-09-16T23:45:56.074108Z	  targetMarket: undefined,
2025-09-16T23:45:56.074245Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:45:56.074359Z	  featured: undefined
2025-09-16T23:45:56.074456Z	}
2025-09-16T23:45:56.074546Z	✅ [getBrandData] Found brand: ncc
2025-09-16T23:45:56.074608Z	✅ [getBrandData] Found brand: ncc
2025-09-16T23:45:56.109631Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:56.110055Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:56.11027Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:56.110391Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:56.110559Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-16T23:45:56.110771Z	Fetching products with query: 
2025-09-16T23:45:56.110874Z	    {
2025-09-16T23:45:56.111054Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:56.111199Z	        
2025-09-16T23:45:56.11156Z	    _id,
2025-09-16T23:45:56.11166Z	    _type,
2025-09-16T23:45:56.111809Z	    partNumber,
2025-09-16T23:45:56.111893Z	    "slug": slug.current,
2025-09-16T23:45:56.112066Z	    title,
2025-09-16T23:45:56.112159Z	    shortDescription,
2025-09-16T23:45:56.112307Z	    image,
2025-09-16T23:45:56.112418Z	    brand->{
2025-09-16T23:45:56.112568Z	      name,
2025-09-16T23:45:56.112715Z	      "slug": slug.current,
2025-09-16T23:45:56.112875Z	      logo
2025-09-16T23:45:56.112977Z	    },
2025-09-16T23:45:56.113086Z	    category->{
2025-09-16T23:45:56.113207Z	      name,
2025-09-16T23:45:56.113524Z	      "slug": slug.current
2025-09-16T23:45:56.113634Z	    },
2025-09-16T23:45:56.113757Z	    pricing{
2025-09-16T23:45:56.113862Z	      currency,
2025-09-16T23:45:56.113966Z	      tiers[]{
2025-09-16T23:45:56.114139Z	        quantity,
2025-09-16T23:45:56.114243Z	        price,
2025-09-16T23:45:56.114386Z	        unit
2025-09-16T23:45:56.114458Z	      },
2025-09-16T23:45:56.114529Z	      moq,
2025-09-16T23:45:56.114638Z	      leadTime,
2025-09-16T23:45:56.114765Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:56.114888Z	      "price": tiers[0].price,
2025-09-16T23:45:56.115017Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:56.11513Z	    },
2025-09-16T23:45:56.11523Z	    inventory{
2025-09-16T23:45:56.115325Z	      quantity,
2025-09-16T23:45:56.11543Z	      status,
2025-09-16T23:45:56.115534Z	      warehouse,
2025-09-16T23:45:56.11571Z	      lastUpdated,
2025-09-16T23:45:56.115804Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:56.11587Z	      "inStock": status == "in_stock",
2025-09-16T23:45:56.115995Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:56.116129Z	    },
2025-09-16T23:45:56.116245Z	    isActive,
2025-09-16T23:45:56.116387Z	    isFeatured,
2025-09-16T23:45:56.116503Z	    isNew,
2025-09-16T23:45:56.116609Z	    _createdAt,
2025-09-16T23:45:56.116749Z	    _updatedAt
2025-09-16T23:45:56.116854Z	  
2025-09-16T23:45:56.117048Z	      },
2025-09-16T23:45:56.117192Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-16T23:45:56.117345Z	    }
2025-09-16T23:45:56.117451Z	  
2025-09-16T23:45:56.117555Z	Query parameters: {
2025-09-16T23:45:56.117658Z	  limit: 8,
2025-09-16T23:45:56.117953Z	  offset: 0,
2025-09-16T23:45:56.118072Z	  category: undefined,
2025-09-16T23:45:56.118177Z	  brand: 'epcos',
2025-09-16T23:45:56.118288Z	  featured: undefined
2025-09-16T23:45:56.118464Z	}
2025-09-16T23:45:56.118564Z	Fetching solutions with query: 
2025-09-16T23:45:56.118669Z	    {
2025-09-16T23:45:56.118803Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:56.11908Z	        
2025-09-16T23:45:56.119171Z	    _id,
2025-09-16T23:45:56.119277Z	    title,
2025-09-16T23:45:56.119384Z	    "slug": slug.current,
2025-09-16T23:45:56.119486Z	    summary,
2025-09-16T23:45:56.119591Z	    description,
2025-09-16T23:45:56.119714Z	    coverImage,
2025-09-16T23:45:56.119814Z	    primaryBrand->{
2025-09-16T23:45:56.119907Z	      _id,
2025-09-16T23:45:56.120066Z	      name,
2025-09-16T23:45:56.12018Z	      "slug": slug.current,
2025-09-16T23:45:56.120266Z	      logo
2025-09-16T23:45:56.120375Z	    },
2025-09-16T23:45:56.120457Z	    relatedBrands[]->{
2025-09-16T23:45:56.12063Z	      _id,
2025-09-16T23:45:56.120785Z	      name,
2025-09-16T23:45:56.120942Z	      "slug": slug.current,
2025-09-16T23:45:56.121045Z	      logo
2025-09-16T23:45:56.121138Z	    },
2025-09-16T23:45:56.121242Z	    targetMarket,
2025-09-16T23:45:56.121346Z	    complexity,
2025-09-16T23:45:56.121432Z	    publishedAt,
2025-09-16T23:45:56.121587Z	    isPublished,
2025-09-16T23:45:56.121739Z	    isFeatured,
2025-09-16T23:45:56.121827Z	    viewCount,
2025-09-16T23:45:56.121891Z	    _createdAt,
2025-09-16T23:45:56.122054Z	    _updatedAt
2025-09-16T23:45:56.122171Z	  
2025-09-16T23:45:56.122281Z	      },
2025-09-16T23:45:56.12243Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-16T23:45:56.122556Z	    }
2025-09-16T23:45:56.122632Z	  
2025-09-16T23:45:56.122756Z	Query parameters: {
2025-09-16T23:45:56.122882Z	  limit: 4,
2025-09-16T23:45:56.122981Z	  offset: 0,
2025-09-16T23:45:56.123114Z	  targetMarket: undefined,
2025-09-16T23:45:56.123194Z	  brand: 'epcos',
2025-09-16T23:45:56.123285Z	  featured: undefined
2025-09-16T23:45:56.123395Z	}
2025-09-16T23:45:56.12364Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-16T23:45:56.123771Z	Fetching products with query: 
2025-09-16T23:45:56.123972Z	    {
2025-09-16T23:45:56.124037Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:56.124184Z	        
2025-09-16T23:45:56.124361Z	    _id,
2025-09-16T23:45:56.12443Z	    _type,
2025-09-16T23:45:56.124553Z	    partNumber,
2025-09-16T23:45:56.124723Z	    "slug": slug.current,
2025-09-16T23:45:56.124804Z	    title,
2025-09-16T23:45:56.124982Z	    shortDescription,
2025-09-16T23:45:56.125113Z	    image,
2025-09-16T23:45:56.125244Z	    brand->{
2025-09-16T23:45:56.125375Z	      name,
2025-09-16T23:45:56.125443Z	      "slug": slug.current,
2025-09-16T23:45:56.125578Z	      logo
2025-09-16T23:45:56.12573Z	    },
2025-09-16T23:45:56.125849Z	    category->{
2025-09-16T23:45:56.125914Z	      name,
2025-09-16T23:45:56.126104Z	      "slug": slug.current
2025-09-16T23:45:56.126251Z	    },
2025-09-16T23:45:56.126326Z	    pricing{
2025-09-16T23:45:56.126465Z	      currency,
2025-09-16T23:45:56.12661Z	      tiers[]{
2025-09-16T23:45:56.126724Z	        quantity,
2025-09-16T23:45:56.126864Z	        price,
2025-09-16T23:45:56.126977Z	        unit
2025-09-16T23:45:56.127084Z	      },
2025-09-16T23:45:56.127193Z	      moq,
2025-09-16T23:45:56.127434Z	      leadTime,
2025-09-16T23:45:56.127532Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:56.127597Z	      "price": tiers[0].price,
2025-09-16T23:45:56.127888Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:56.128012Z	    },
2025-09-16T23:45:56.128265Z	    inventory{
2025-09-16T23:45:56.128345Z	      quantity,
2025-09-16T23:45:56.128416Z	      status,
2025-09-16T23:45:56.128522Z	      warehouse,
2025-09-16T23:45:56.128705Z	      lastUpdated,
2025-09-16T23:45:56.128793Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:56.128955Z	      "inStock": status == "in_stock",
2025-09-16T23:45:56.129032Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:56.129144Z	    },
2025-09-16T23:45:56.129241Z	    isActive,
2025-09-16T23:45:56.129335Z	    isFeatured,
2025-09-16T23:45:56.129453Z	    isNew,
2025-09-16T23:45:56.129566Z	    _createdAt,
2025-09-16T23:45:56.129669Z	    _updatedAt
2025-09-16T23:45:56.129787Z	  
2025-09-16T23:45:56.129899Z	      },
2025-09-16T23:45:56.130002Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-16T23:45:56.130254Z	    }
2025-09-16T23:45:56.130339Z	  
2025-09-16T23:45:56.130435Z	Query parameters: {
2025-09-16T23:45:56.130535Z	  limit: 8,
2025-09-16T23:45:56.130631Z	  offset: 0,
2025-09-16T23:45:56.130754Z	  category: undefined,
2025-09-16T23:45:56.13084Z	  brand: 'epcos',
2025-09-16T23:45:56.130939Z	  featured: undefined
2025-09-16T23:45:56.131122Z	}
2025-09-16T23:45:56.131235Z	Fetching solutions with query: 
2025-09-16T23:45:56.131394Z	    {
2025-09-16T23:45:56.131488Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:56.131729Z	        
2025-09-16T23:45:56.131883Z	    _id,
2025-09-16T23:45:56.132004Z	    title,
2025-09-16T23:45:56.132114Z	    "slug": slug.current,
2025-09-16T23:45:56.132229Z	    summary,
2025-09-16T23:45:56.132346Z	    description,
2025-09-16T23:45:56.132488Z	    coverImage,
2025-09-16T23:45:56.132618Z	    primaryBrand->{
2025-09-16T23:45:56.13276Z	      _id,
2025-09-16T23:45:56.132893Z	      name,
2025-09-16T23:45:56.133011Z	      "slug": slug.current,
2025-09-16T23:45:56.133123Z	      logo
2025-09-16T23:45:56.133237Z	    },
2025-09-16T23:45:56.133362Z	    relatedBrands[]->{
2025-09-16T23:45:56.13351Z	      _id,
2025-09-16T23:45:56.13364Z	      name,
2025-09-16T23:45:56.133765Z	      "slug": slug.current,
2025-09-16T23:45:56.133881Z	      logo
2025-09-16T23:45:56.133999Z	    },
2025-09-16T23:45:56.134125Z	    targetMarket,
2025-09-16T23:45:56.134233Z	    complexity,
2025-09-16T23:45:56.134349Z	    publishedAt,
2025-09-16T23:45:56.134474Z	    isPublished,
2025-09-16T23:45:56.134596Z	    isFeatured,
2025-09-16T23:45:56.134731Z	    viewCount,
2025-09-16T23:45:56.134847Z	    _createdAt,
2025-09-16T23:45:56.135044Z	    _updatedAt
2025-09-16T23:45:56.135179Z	  
2025-09-16T23:45:56.135299Z	      },
2025-09-16T23:45:56.135419Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-16T23:45:56.135559Z	    }
2025-09-16T23:45:56.13572Z	  
2025-09-16T23:45:56.135827Z	Query parameters: {
2025-09-16T23:45:56.135935Z	  limit: 4,
2025-09-16T23:45:56.136056Z	  offset: 0,
2025-09-16T23:45:56.136183Z	  targetMarket: undefined,
2025-09-16T23:45:56.136304Z	  brand: 'epcos',
2025-09-16T23:45:56.136556Z	  featured: undefined
2025-09-16T23:45:56.13664Z	}
2025-09-16T23:45:56.136823Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:56.136987Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:56.137112Z	✅ [getBrandData] Found brand: Epcos
2025-09-16T23:45:56.137237Z	✅ [getBrandData] Found brand: Epcos
2025-09-16T23:45:56.137362Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:56.137471Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:56.137581Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:45:56.137718Z	Fetching products with query: 
2025-09-16T23:45:56.137821Z	    {
2025-09-16T23:45:56.138178Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:56.138274Z	        
2025-09-16T23:45:56.138537Z	    _id,
2025-09-16T23:45:56.138614Z	    _type,
2025-09-16T23:45:56.138944Z	    partNumber,
2025-09-16T23:45:56.139036Z	    "slug": slug.current,
2025-09-16T23:45:56.139125Z	    title,
2025-09-16T23:45:56.139279Z	    shortDescription,
2025-09-16T23:45:56.139409Z	    image,
2025-09-16T23:45:56.139697Z	    brand->{
2025-09-16T23:45:56.139955Z	      name,
2025-09-16T23:45:56.140039Z	      "slug": slug.current,
2025-09-16T23:45:56.140294Z	      logo
2025-09-16T23:45:56.140544Z	    },
2025-09-16T23:45:56.140801Z	    category->{
2025-09-16T23:45:56.140889Z	      name,
2025-09-16T23:45:56.141123Z	      "slug": slug.current
2025-09-16T23:45:56.141225Z	    },
2025-09-16T23:45:56.14147Z	    pricing{
2025-09-16T23:45:56.141554Z	      currency,
2025-09-16T23:45:56.141802Z	      tiers[]{
2025-09-16T23:45:56.142049Z	        quantity,
2025-09-16T23:45:56.142136Z	        price,
2025-09-16T23:45:56.142372Z	        unit
2025-09-16T23:45:56.142455Z	      },
2025-09-16T23:45:56.142693Z	      moq,
2025-09-16T23:45:56.142802Z	      leadTime,
2025-09-16T23:45:56.14309Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:56.143228Z	      "price": tiers[0].price,
2025-09-16T23:45:56.143316Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:56.143464Z	    },
2025-09-16T23:45:56.143538Z	    inventory{
2025-09-16T23:45:56.143635Z	      quantity,
2025-09-16T23:45:56.143767Z	      status,
2025-09-16T23:45:56.143875Z	      warehouse,
2025-09-16T23:45:56.144Z	      lastUpdated,
2025-09-16T23:45:56.144075Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:56.144358Z	      "inStock": status == "in_stock",
2025-09-16T23:45:56.144436Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:56.144671Z	    },
2025-09-16T23:45:56.144895Z	    isActive,
2025-09-16T23:45:56.145053Z	    isFeatured,
2025-09-16T23:45:56.145179Z	    isNew,
2025-09-16T23:45:56.145405Z	    _createdAt,
2025-09-16T23:45:56.145533Z	    _updatedAt
2025-09-16T23:45:56.145809Z	  
2025-09-16T23:45:56.145894Z	      },
2025-09-16T23:45:56.145957Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:45:56.146134Z	    }
2025-09-16T23:45:56.146208Z	  
2025-09-16T23:45:56.146271Z	Query parameters: {
2025-09-16T23:45:56.146334Z	  limit: 8,
2025-09-16T23:45:56.146391Z	  offset: 0,
2025-09-16T23:45:56.146452Z	  category: undefined,
2025-09-16T23:45:56.146506Z	  brand: 'cree',
2025-09-16T23:45:56.146563Z	  featured: undefined
2025-09-16T23:45:56.146872Z	}
2025-09-16T23:45:56.146987Z	Fetching solutions with query: 
2025-09-16T23:45:56.147206Z	    {
2025-09-16T23:45:56.147298Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:56.147444Z	        
2025-09-16T23:45:56.147524Z	    _id,
2025-09-16T23:45:56.147587Z	    title,
2025-09-16T23:45:56.147737Z	    "slug": slug.current,
2025-09-16T23:45:56.147822Z	    summary,
2025-09-16T23:45:56.147881Z	    description,
2025-09-16T23:45:56.148093Z	    coverImage,
2025-09-16T23:45:56.148221Z	    primaryBrand->{
2025-09-16T23:45:56.148329Z	      _id,
2025-09-16T23:45:56.148451Z	      name,
2025-09-16T23:45:56.148582Z	      "slug": slug.current,
2025-09-16T23:45:56.148714Z	      logo
2025-09-16T23:45:56.148856Z	    },
2025-09-16T23:45:56.148991Z	    relatedBrands[]->{
2025-09-16T23:45:56.149098Z	      _id,
2025-09-16T23:45:56.149239Z	      name,
2025-09-16T23:45:56.149312Z	      "slug": slug.current,
2025-09-16T23:45:56.149473Z	      logo
2025-09-16T23:45:56.1496Z	    },
2025-09-16T23:45:56.149765Z	    targetMarket,
2025-09-16T23:45:56.149844Z	    complexity,
2025-09-16T23:45:56.149981Z	    publishedAt,
2025-09-16T23:45:56.15006Z	    isPublished,
2025-09-16T23:45:56.150134Z	    isFeatured,
2025-09-16T23:45:56.150212Z	    viewCount,
2025-09-16T23:45:56.150292Z	    _createdAt,
2025-09-16T23:45:56.150379Z	    _updatedAt
2025-09-16T23:45:56.150483Z	  
2025-09-16T23:45:56.150779Z	      },
2025-09-16T23:45:56.150914Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:45:56.150999Z	    }
2025-09-16T23:45:56.151133Z	  
2025-09-16T23:45:56.151207Z	Query parameters: {
2025-09-16T23:45:56.151327Z	  limit: 4,
2025-09-16T23:45:56.151539Z	  offset: 0,
2025-09-16T23:45:56.151633Z	  targetMarket: undefined,
2025-09-16T23:45:56.151723Z	  brand: 'cree',
2025-09-16T23:45:56.151796Z	  featured: undefined
2025-09-16T23:45:56.151854Z	}
2025-09-16T23:45:56.151912Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:45:56.151989Z	Fetching products with query: 
2025-09-16T23:45:56.152046Z	    {
2025-09-16T23:45:56.152102Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:56.152162Z	        
2025-09-16T23:45:56.152218Z	    _id,
2025-09-16T23:45:56.152288Z	    _type,
2025-09-16T23:45:56.152347Z	    partNumber,
2025-09-16T23:45:56.15241Z	    "slug": slug.current,
2025-09-16T23:45:56.152479Z	    title,
2025-09-16T23:45:56.152546Z	    shortDescription,
2025-09-16T23:45:56.152601Z	    image,
2025-09-16T23:45:56.152656Z	    brand->{
2025-09-16T23:45:56.15273Z	      name,
2025-09-16T23:45:56.152788Z	      "slug": slug.current,
2025-09-16T23:45:56.152849Z	      logo
2025-09-16T23:45:56.153261Z	    },
2025-09-16T23:45:56.15353Z	    category->{
2025-09-16T23:45:56.153685Z	      name,
2025-09-16T23:45:56.15379Z	      "slug": slug.current
2025-09-16T23:45:56.153942Z	    },
2025-09-16T23:45:56.154077Z	    pricing{
2025-09-16T23:45:56.154161Z	      currency,
2025-09-16T23:45:56.154219Z	      tiers[]{
2025-09-16T23:45:56.154335Z	        quantity,
2025-09-16T23:45:56.154411Z	        price,
2025-09-16T23:45:56.154477Z	        unit
2025-09-16T23:45:56.154578Z	      },
2025-09-16T23:45:56.154721Z	      moq,
2025-09-16T23:45:56.154863Z	      leadTime,
2025-09-16T23:45:56.155011Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:56.155147Z	      "price": tiers[0].price,
2025-09-16T23:45:56.15523Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:56.155376Z	    },
2025-09-16T23:45:56.155454Z	    inventory{
2025-09-16T23:45:56.155586Z	      quantity,
2025-09-16T23:45:56.155645Z	      status,
2025-09-16T23:45:56.155788Z	      warehouse,
2025-09-16T23:45:56.155908Z	      lastUpdated,
2025-09-16T23:45:56.156132Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:56.156219Z	      "inStock": status == "in_stock",
2025-09-16T23:45:56.156358Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:56.156516Z	    },
2025-09-16T23:45:56.15666Z	    isActive,
2025-09-16T23:45:56.156815Z	    isFeatured,
2025-09-16T23:45:56.156893Z	    isNew,
2025-09-16T23:45:56.157118Z	    _createdAt,
2025-09-16T23:45:56.157207Z	    _updatedAt
2025-09-16T23:45:56.157267Z	  
2025-09-16T23:45:56.157453Z	      },
2025-09-16T23:45:56.157527Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:45:56.157697Z	    }
2025-09-16T23:45:56.157781Z	  
2025-09-16T23:45:56.157966Z	Query parameters: {
2025-09-16T23:45:56.158097Z	  limit: 8,
2025-09-16T23:45:56.15822Z	  offset: 0,
2025-09-16T23:45:56.158314Z	  category: undefined,
2025-09-16T23:45:56.158411Z	  brand: 'cree',
2025-09-16T23:45:56.158551Z	  featured: undefined
2025-09-16T23:45:56.158641Z	}
2025-09-16T23:45:56.158793Z	Fetching solutions with query: 
2025-09-16T23:45:56.158953Z	    {
2025-09-16T23:45:56.159082Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:56.15917Z	        
2025-09-16T23:45:56.159298Z	    _id,
2025-09-16T23:45:56.159411Z	    title,
2025-09-16T23:45:56.159557Z	    "slug": slug.current,
2025-09-16T23:45:56.159648Z	    summary,
2025-09-16T23:45:56.159769Z	    description,
2025-09-16T23:45:56.159869Z	    coverImage,
2025-09-16T23:45:56.160037Z	    primaryBrand->{
2025-09-16T23:45:56.160317Z	      _id,
2025-09-16T23:45:56.160424Z	      name,
2025-09-16T23:45:56.160779Z	      "slug": slug.current,
2025-09-16T23:45:56.16086Z	      logo
2025-09-16T23:45:56.16094Z	    },
2025-09-16T23:45:56.161043Z	    relatedBrands[]->{
2025-09-16T23:45:56.161153Z	      _id,
2025-09-16T23:45:56.161252Z	      name,
2025-09-16T23:45:56.161337Z	      "slug": slug.current,
2025-09-16T23:45:56.161448Z	      logo
2025-09-16T23:45:56.161554Z	    },
2025-09-16T23:45:56.161828Z	    targetMarket,
2025-09-16T23:45:56.162003Z	    complexity,
2025-09-16T23:45:56.162106Z	    publishedAt,
2025-09-16T23:45:56.162221Z	    isPublished,
2025-09-16T23:45:56.162317Z	    isFeatured,
2025-09-16T23:45:56.16244Z	    viewCount,
2025-09-16T23:45:56.162537Z	    _createdAt,
2025-09-16T23:45:56.162628Z	    _updatedAt
2025-09-16T23:45:56.162769Z	  
2025-09-16T23:45:56.162864Z	      },
2025-09-16T23:45:56.162973Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:45:56.163067Z	    }
2025-09-16T23:45:56.163188Z	  
2025-09-16T23:45:56.163315Z	Query parameters: {
2025-09-16T23:45:56.163499Z	  limit: 4,
2025-09-16T23:45:56.163598Z	  offset: 0,
2025-09-16T23:45:56.163669Z	  targetMarket: undefined,
2025-09-16T23:45:56.163756Z	  brand: 'cree',
2025-09-16T23:45:56.163849Z	  featured: undefined
2025-09-16T23:45:56.163918Z	}
2025-09-16T23:45:56.163976Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:45:56.164113Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:45:56.164202Z	Products fetch result: {
2025-09-16T23:45:56.16426Z	  totalProducts: 4,
2025-09-16T23:45:56.164317Z	  fetchedProducts: 4,
2025-09-16T23:45:56.164372Z	  firstProduct: {
2025-09-16T23:45:56.164428Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:45:56.164487Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:45:56.164626Z	    _type: 'product',
2025-09-16T23:45:56.164735Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:45:56.164986Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:45:56.165099Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:45:56.165241Z	    image: null,
2025-09-16T23:45:56.165372Z	    inventory: {
2025-09-16T23:45:56.165451Z	      inStock: true,
2025-09-16T23:45:56.165591Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:45:56.165754Z	      quantity: 0,
2025-09-16T23:45:56.16589Z	      status: 'in_stock',
2025-09-16T23:45:56.166019Z	      warehouse: null
2025-09-16T23:45:56.166129Z	    },
2025-09-16T23:45:56.166224Z	    isActive: true,
2025-09-16T23:45:56.166371Z	    isFeatured: false,
2025-09-16T23:45:56.166502Z	    isNew: false,
2025-09-16T23:45:56.166597Z	    partNumber: '11111',
2025-09-16T23:45:56.166732Z	    pricing: {
2025-09-16T23:45:56.166833Z	      currency: 'CNY',
2025-09-16T23:45:56.166932Z	      leadTime: null,
2025-09-16T23:45:56.167098Z	      moq: null,
2025-09-16T23:45:56.16718Z	      price: null,
2025-09-16T23:45:56.167238Z	      tiers: null
2025-09-16T23:45:56.167572Z	    },
2025-09-16T23:45:56.167661Z	    shortDescription: '11111',
2025-09-16T23:45:56.167838Z	    slug: 'sic mosfet',
2025-09-16T23:45:56.167907Z	    title: '111111'
2025-09-16T23:45:56.167967Z	  }
2025-09-16T23:45:56.168063Z	}
2025-09-16T23:45:56.168205Z	Products fetch result: {
2025-09-16T23:45:56.168299Z	  totalProducts: 4,
2025-09-16T23:45:56.16842Z	  fetchedProducts: 4,
2025-09-16T23:45:56.168553Z	  firstProduct: {
2025-09-16T23:45:56.168659Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:45:56.168777Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:45:56.168888Z	    _type: 'product',
2025-09-16T23:45:56.168996Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:45:56.169101Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:45:56.16921Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:45:56.16935Z	    image: null,
2025-09-16T23:45:56.169462Z	    inventory: {
2025-09-16T23:45:56.169625Z	      inStock: true,
2025-09-16T23:45:56.16976Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:45:56.169846Z	      quantity: 0,
2025-09-16T23:45:56.169939Z	      status: 'in_stock',
2025-09-16T23:45:56.170052Z	      warehouse: null
2025-09-16T23:45:56.170154Z	    },
2025-09-16T23:45:56.170248Z	    isActive: true,
2025-09-16T23:45:56.170367Z	    isFeatured: false,
2025-09-16T23:45:56.170475Z	    isNew: false,
2025-09-16T23:45:56.170579Z	    partNumber: '11111',
2025-09-16T23:45:56.170716Z	    pricing: {
2025-09-16T23:45:56.170817Z	      currency: 'CNY',
2025-09-16T23:45:56.170909Z	      leadTime: null,
2025-09-16T23:45:56.171011Z	      moq: null,
2025-09-16T23:45:56.171082Z	      price: null,
2025-09-16T23:45:56.171143Z	      tiers: null
2025-09-16T23:45:56.17133Z	    },
2025-09-16T23:45:56.171456Z	    shortDescription: '11111',
2025-09-16T23:45:56.171566Z	    slug: 'sic mosfet',
2025-09-16T23:45:56.171683Z	    title: '111111'
2025-09-16T23:45:56.171817Z	  }
2025-09-16T23:45:56.171915Z	}
2025-09-16T23:45:56.172022Z	Solutions fetch result: {
2025-09-16T23:45:56.172131Z	  totalSolutions: 6,
2025-09-16T23:45:56.172233Z	  fetchedSolutions: 4,
2025-09-16T23:45:56.172341Z	  firstSolution: {
2025-09-16T23:45:56.172466Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:45:56.172649Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:45:56.172779Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:45:56.172865Z	    complexity: 'medium',
2025-09-16T23:45:56.172925Z	    coverImage: null,
2025-09-16T23:45:56.17298Z	    description: [ [Object] ],
2025-09-16T23:45:56.173035Z	    isFeatured: false,
2025-09-16T23:45:56.173121Z	    isPublished: true,
2025-09-16T23:45:56.173215Z	    primaryBrand: {
2025-09-16T23:45:56.17334Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:45:56.17345Z	      logo: null,
2025-09-16T23:45:56.173563Z	      name: 'CREE',
2025-09-16T23:45:56.173647Z	      slug: 'cree'
2025-09-16T23:45:56.173751Z	    },
2025-09-16T23:45:56.173863Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:45:56.173947Z	    relatedBrands: null,
2025-09-16T23:45:56.174045Z	    slug: '11111',
2025-09-16T23:45:56.174157Z	    summary: '11111',
2025-09-16T23:45:56.174264Z	    targetMarket: 'industrial-automation',
2025-09-16T23:45:56.174358Z	    title: '11111',
2025-09-16T23:45:56.174433Z	    viewCount: 0
2025-09-16T23:45:56.174508Z	  }
2025-09-16T23:45:56.174642Z	}
2025-09-16T23:45:56.17477Z	Solutions fetch result: {
2025-09-16T23:45:56.174918Z	  totalSolutions: 6,
2025-09-16T23:45:56.17502Z	  fetchedSolutions: 4,
2025-09-16T23:45:56.175101Z	  firstSolution: {
2025-09-16T23:45:56.17522Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:45:56.175321Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:45:56.17543Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:45:56.175542Z	    complexity: 'medium',
2025-09-16T23:45:56.175641Z	    coverImage: null,
2025-09-16T23:45:56.175759Z	    description: [ [Object] ],
2025-09-16T23:45:56.175897Z	    isFeatured: false,
2025-09-16T23:45:56.176009Z	    isPublished: true,
2025-09-16T23:45:56.176146Z	    primaryBrand: {
2025-09-16T23:45:56.176333Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:45:56.17644Z	      logo: null,
2025-09-16T23:45:56.17654Z	      name: 'CREE',
2025-09-16T23:45:56.176703Z	      slug: 'cree'
2025-09-16T23:45:56.176818Z	    },
2025-09-16T23:45:56.176995Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:45:56.177109Z	    relatedBrands: null,
2025-09-16T23:45:56.177202Z	    slug: '11111',
2025-09-16T23:45:56.177543Z	    summary: '11111',
2025-09-16T23:45:56.177657Z	    targetMarket: 'industrial-automation',
2025-09-16T23:45:56.177795Z	    title: '11111',
2025-09-16T23:45:56.177958Z	    viewCount: 0
2025-09-16T23:45:56.178038Z	  }
2025-09-16T23:45:56.178176Z	}
2025-09-16T23:45:56.182185Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:45:56.18237Z	Fetching products with query: 
2025-09-16T23:45:56.182466Z	    {
2025-09-16T23:45:56.182671Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:56.182833Z	        
2025-09-16T23:45:56.182952Z	    _id,
2025-09-16T23:45:56.183052Z	    _type,
2025-09-16T23:45:56.183163Z	    partNumber,
2025-09-16T23:45:56.18326Z	    "slug": slug.current,
2025-09-16T23:45:56.183356Z	    title,
2025-09-16T23:45:56.185042Z	    shortDescription,
2025-09-16T23:45:56.185209Z	    image,
2025-09-16T23:45:56.185341Z	    brand->{
2025-09-16T23:45:56.185462Z	      name,
2025-09-16T23:45:56.185572Z	      "slug": slug.current,
2025-09-16T23:45:56.185782Z	      logo
2025-09-16T23:45:56.185909Z	    },
2025-09-16T23:45:56.186007Z	    category->{
2025-09-16T23:45:56.186113Z	      name,
2025-09-16T23:45:56.186219Z	      "slug": slug.current
2025-09-16T23:45:56.186324Z	    },
2025-09-16T23:45:56.186442Z	    pricing{
2025-09-16T23:45:56.186552Z	      currency,
2025-09-16T23:45:56.186656Z	      tiers[]{
2025-09-16T23:45:56.186779Z	        quantity,
2025-09-16T23:45:56.186865Z	        price,
2025-09-16T23:45:56.186951Z	        unit
2025-09-16T23:45:56.187047Z	      },
2025-09-16T23:45:56.187214Z	      moq,
2025-09-16T23:45:56.18733Z	      leadTime,
2025-09-16T23:45:56.187453Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:56.187566Z	      "price": tiers[0].price,
2025-09-16T23:45:56.187686Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:56.187807Z	    },
2025-09-16T23:45:56.187907Z	    inventory{
2025-09-16T23:45:56.188016Z	      quantity,
2025-09-16T23:45:56.188115Z	      status,
2025-09-16T23:45:56.188207Z	      warehouse,
2025-09-16T23:45:56.188298Z	      lastUpdated,
2025-09-16T23:45:56.188391Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:56.188499Z	      "inStock": status == "in_stock",
2025-09-16T23:45:56.188584Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:56.188684Z	    },
2025-09-16T23:45:56.188785Z	    isActive,
2025-09-16T23:45:56.188874Z	    isFeatured,
2025-09-16T23:45:56.188959Z	    isNew,
2025-09-16T23:45:56.189044Z	    _createdAt,
2025-09-16T23:45:56.189142Z	    _updatedAt
2025-09-16T23:45:56.189235Z	  
2025-09-16T23:45:56.189333Z	      },
2025-09-16T23:45:56.189455Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:45:56.18957Z	    }
2025-09-16T23:45:56.189692Z	  
2025-09-16T23:45:56.189814Z	Query parameters: {
2025-09-16T23:45:56.18993Z	  limit: 8,
2025-09-16T23:45:56.190038Z	  offset: 0,
2025-09-16T23:45:56.191077Z	  category: undefined,
2025-09-16T23:45:56.191441Z	  brand: 'Electronicon',
2025-09-16T23:45:56.191997Z	  featured: undefined
2025-09-16T23:45:56.19211Z	}
2025-09-16T23:45:56.192313Z	Fetching solutions with query: 
2025-09-16T23:45:56.192429Z	    {
2025-09-16T23:45:56.193064Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:56.193236Z	        
2025-09-16T23:45:56.193356Z	    _id,
2025-09-16T23:45:56.193468Z	    title,
2025-09-16T23:45:56.193572Z	    "slug": slug.current,
2025-09-16T23:45:56.193819Z	    summary,
2025-09-16T23:45:56.194327Z	    description,
2025-09-16T23:45:56.194513Z	    coverImage,
2025-09-16T23:45:56.19466Z	    primaryBrand->{
2025-09-16T23:45:56.194847Z	      _id,
2025-09-16T23:45:56.194964Z	      name,
2025-09-16T23:45:56.195073Z	      "slug": slug.current,
2025-09-16T23:45:56.195328Z	      logo
2025-09-16T23:45:56.195456Z	    },
2025-09-16T23:45:56.195637Z	    relatedBrands[]->{
2025-09-16T23:45:56.195942Z	      _id,
2025-09-16T23:45:56.196104Z	      name,
2025-09-16T23:45:56.19626Z	      "slug": slug.current,
2025-09-16T23:45:56.196884Z	      logo
2025-09-16T23:45:56.197035Z	    },
2025-09-16T23:45:56.197164Z	    targetMarket,
2025-09-16T23:45:56.197312Z	    complexity,
2025-09-16T23:45:56.197691Z	    publishedAt,
2025-09-16T23:45:56.197908Z	    isPublished,
2025-09-16T23:45:56.198051Z	    isFeatured,
2025-09-16T23:45:56.198497Z	    viewCount,
2025-09-16T23:45:56.198647Z	    _createdAt,
2025-09-16T23:45:56.198809Z	    _updatedAt
2025-09-16T23:45:56.198973Z	  
2025-09-16T23:45:56.199099Z	      },
2025-09-16T23:45:56.199283Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:45:56.199462Z	    }
2025-09-16T23:45:56.199619Z	  
2025-09-16T23:45:56.199781Z	Query parameters: {
2025-09-16T23:45:56.199948Z	  limit: 4,
2025-09-16T23:45:56.200054Z	  offset: 0,
2025-09-16T23:45:56.200208Z	  targetMarket: undefined,
2025-09-16T23:45:56.20039Z	  brand: 'Electronicon',
2025-09-16T23:45:56.200539Z	  featured: undefined
2025-09-16T23:45:56.200691Z	}
2025-09-16T23:45:56.200835Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:45:56.20097Z	Fetching products with query: 
2025-09-16T23:45:56.201095Z	    {
2025-09-16T23:45:56.201224Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:56.201355Z	        
2025-09-16T23:45:56.201484Z	    _id,
2025-09-16T23:45:56.201625Z	    _type,
2025-09-16T23:45:56.201808Z	    partNumber,
2025-09-16T23:45:56.201944Z	    "slug": slug.current,
2025-09-16T23:45:56.202089Z	    title,
2025-09-16T23:45:56.202233Z	    shortDescription,
2025-09-16T23:45:56.202391Z	    image,
2025-09-16T23:45:56.202539Z	    brand->{
2025-09-16T23:45:56.202646Z	      name,
2025-09-16T23:45:56.202779Z	      "slug": slug.current,
2025-09-16T23:45:56.202928Z	      logo
2025-09-16T23:45:56.203065Z	    },
2025-09-16T23:45:56.203198Z	    category->{
2025-09-16T23:45:56.203342Z	      name,
2025-09-16T23:45:56.203521Z	      "slug": slug.current
2025-09-16T23:45:56.203638Z	    },
2025-09-16T23:45:56.203789Z	    pricing{
2025-09-16T23:45:56.203942Z	      currency,
2025-09-16T23:45:56.204101Z	      tiers[]{
2025-09-16T23:45:56.204256Z	        quantity,
2025-09-16T23:45:56.204451Z	        price,
2025-09-16T23:45:56.204581Z	        unit
2025-09-16T23:45:56.204716Z	      },
2025-09-16T23:45:56.20483Z	      moq,
2025-09-16T23:45:56.204929Z	      leadTime,
2025-09-16T23:45:56.20503Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:56.205133Z	      "price": tiers[0].price,
2025-09-16T23:45:56.205231Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:56.205331Z	    },
2025-09-16T23:45:56.205439Z	    inventory{
2025-09-16T23:45:56.205539Z	      quantity,
2025-09-16T23:45:56.205639Z	      status,
2025-09-16T23:45:56.205766Z	      warehouse,
2025-09-16T23:45:56.205868Z	      lastUpdated,
2025-09-16T23:45:56.205968Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:56.206067Z	      "inStock": status == "in_stock",
2025-09-16T23:45:56.206161Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:56.206251Z	    },
2025-09-16T23:45:56.206342Z	    isActive,
2025-09-16T23:45:56.206437Z	    isFeatured,
2025-09-16T23:45:56.206529Z	    isNew,
2025-09-16T23:45:56.206621Z	    _createdAt,
2025-09-16T23:45:56.206733Z	    _updatedAt
2025-09-16T23:45:56.206831Z	  
2025-09-16T23:45:56.20692Z	      },
2025-09-16T23:45:56.207031Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:45:56.207125Z	    }
2025-09-16T23:45:56.207211Z	  
2025-09-16T23:45:56.207296Z	Query parameters: {
2025-09-16T23:45:56.207383Z	  limit: 8,
2025-09-16T23:45:56.207484Z	  offset: 0,
2025-09-16T23:45:56.207589Z	  category: undefined,
2025-09-16T23:45:56.20772Z	  brand: 'Electronicon',
2025-09-16T23:45:56.207825Z	  featured: undefined
2025-09-16T23:45:56.207927Z	}
2025-09-16T23:45:56.208086Z	Fetching solutions with query: 
2025-09-16T23:45:56.208201Z	    {
2025-09-16T23:45:56.208303Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:56.208415Z	        
2025-09-16T23:45:56.208493Z	    _id,
2025-09-16T23:45:56.208549Z	    title,
2025-09-16T23:45:56.208609Z	    "slug": slug.current,
2025-09-16T23:45:56.208664Z	    summary,
2025-09-16T23:45:56.208778Z	    description,
2025-09-16T23:45:56.208883Z	    coverImage,
2025-09-16T23:45:56.209083Z	    primaryBrand->{
2025-09-16T23:45:56.209261Z	      _id,
2025-09-16T23:45:56.209421Z	      name,
2025-09-16T23:45:56.209551Z	      "slug": slug.current,
2025-09-16T23:45:56.209639Z	      logo
2025-09-16T23:45:56.209745Z	    },
2025-09-16T23:45:56.209836Z	    relatedBrands[]->{
2025-09-16T23:45:56.209929Z	      _id,
2025-09-16T23:45:56.210021Z	      name,
2025-09-16T23:45:56.210111Z	      "slug": slug.current,
2025-09-16T23:45:56.210204Z	      logo
2025-09-16T23:45:56.210295Z	    },
2025-09-16T23:45:56.210387Z	    targetMarket,
2025-09-16T23:45:56.210481Z	    complexity,
2025-09-16T23:45:56.210562Z	    publishedAt,
2025-09-16T23:45:56.210697Z	    isPublished,
2025-09-16T23:45:56.210793Z	    isFeatured,
2025-09-16T23:45:56.210884Z	    viewCount,
2025-09-16T23:45:56.21097Z	    _createdAt,
2025-09-16T23:45:56.211258Z	    _updatedAt
2025-09-16T23:45:56.211378Z	  
2025-09-16T23:45:56.211483Z	      },
2025-09-16T23:45:56.211991Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:45:56.212205Z	    }
2025-09-16T23:45:56.212392Z	  
2025-09-16T23:45:56.212555Z	Query parameters: {
2025-09-16T23:45:56.212753Z	  limit: 4,
2025-09-16T23:45:56.21294Z	  offset: 0,
2025-09-16T23:45:56.213112Z	  targetMarket: undefined,
2025-09-16T23:45:56.213269Z	  brand: 'Electronicon',
2025-09-16T23:45:56.213787Z	  featured: undefined
2025-09-16T23:45:56.213936Z	}
2025-09-16T23:45:56.214048Z	Products fetch result: {
2025-09-16T23:45:56.214162Z	  totalProducts: 2,
2025-09-16T23:45:56.214296Z	  fetchedProducts: 2,
2025-09-16T23:45:56.214447Z	  firstProduct: {
2025-09-16T23:45:56.214558Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:45:56.214665Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:45:56.214786Z	    _type: 'product',
2025-09-16T23:45:56.214896Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:45:56.215001Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:45:56.215112Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:45:56.215213Z	    image: null,
2025-09-16T23:45:56.215313Z	    inventory: {
2025-09-16T23:45:56.215396Z	      inStock: true,
2025-09-16T23:45:56.215486Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:45:56.215597Z	      quantity: 0,
2025-09-16T23:45:56.215736Z	      status: 'in_stock',
2025-09-16T23:45:56.215857Z	      warehouse: null
2025-09-16T23:45:56.215966Z	    },
2025-09-16T23:45:56.216069Z	    isActive: true,
2025-09-16T23:45:56.216165Z	    isFeatured: false,
2025-09-16T23:45:56.21627Z	    isNew: false,
2025-09-16T23:45:56.216381Z	    partNumber: '99999',
2025-09-16T23:45:56.216499Z	    pricing: {
2025-09-16T23:45:56.216608Z	      currency: 'CNY',
2025-09-16T23:45:56.216746Z	      leadTime: null,
2025-09-16T23:45:56.216864Z	      moq: null,
2025-09-16T23:45:56.216975Z	      price: null,
2025-09-16T23:45:56.217085Z	      tiers: null
2025-09-16T23:45:56.217192Z	    },
2025-09-16T23:45:56.217322Z	    shortDescription: null,
2025-09-16T23:45:56.217565Z	    slug: '99999',
2025-09-16T23:45:56.217744Z	    title: '99999'
2025-09-16T23:45:56.217966Z	  }
2025-09-16T23:45:56.218105Z	}
2025-09-16T23:45:56.218169Z	Products fetch result: {
2025-09-16T23:45:56.218225Z	  totalProducts: 2,
2025-09-16T23:45:56.21828Z	  fetchedProducts: 2,
2025-09-16T23:45:56.218378Z	  firstProduct: {
2025-09-16T23:45:56.218478Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:45:56.218595Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:45:56.223848Z	    _type: 'product',
2025-09-16T23:45:56.22403Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:45:56.224156Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:45:56.224277Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:45:56.224388Z	    image: null,
2025-09-16T23:45:56.224499Z	    inventory: {
2025-09-16T23:45:56.224603Z	      inStock: true,
2025-09-16T23:45:56.22473Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:45:56.224846Z	      quantity: 0,
2025-09-16T23:45:56.224945Z	      status: 'in_stock',
2025-09-16T23:45:56.225037Z	      warehouse: null
2025-09-16T23:45:56.225127Z	    },
2025-09-16T23:45:56.225221Z	    isActive: true,
2025-09-16T23:45:56.225452Z	    isFeatured: false,
2025-09-16T23:45:56.225788Z	    isNew: false,
2025-09-16T23:45:56.226057Z	    partNumber: '99999',
2025-09-16T23:45:56.226187Z	    pricing: {
2025-09-16T23:45:56.226298Z	      currency: 'CNY',
2025-09-16T23:45:56.226484Z	      leadTime: null,
2025-09-16T23:45:56.226821Z	      moq: null,
2025-09-16T23:45:56.226948Z	      price: null,
2025-09-16T23:45:56.227052Z	      tiers: null
2025-09-16T23:45:56.227157Z	    },
2025-09-16T23:45:56.227263Z	    shortDescription: null,
2025-09-16T23:45:56.227365Z	    slug: '99999',
2025-09-16T23:45:56.227472Z	    title: '99999'
2025-09-16T23:45:56.227918Z	  }
2025-09-16T23:45:56.228126Z	}
2025-09-16T23:45:56.228421Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:56.228559Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:56.228727Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:45:56.228855Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:45:56.228973Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:56.229082Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:56.229194Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:56.229298Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:56.229404Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-16T23:45:56.229542Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-16T23:45:56.22969Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:56.229809Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:56.229917Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:56.230022Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:56.230139Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:56.230265Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:56.230376Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-16T23:45:56.230486Z	Fetching products with query: 
2025-09-16T23:45:56.230595Z	    {
2025-09-16T23:45:56.230741Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:56.230869Z	        
2025-09-16T23:45:56.230982Z	    _id,
2025-09-16T23:45:56.231089Z	    _type,
2025-09-16T23:45:56.231198Z	    partNumber,
2025-09-16T23:45:56.231299Z	    "slug": slug.current,
2025-09-16T23:45:56.231404Z	    title,
2025-09-16T23:45:56.231508Z	    shortDescription,
2025-09-16T23:45:56.231602Z	    image,
2025-09-16T23:45:56.231741Z	    brand->{
2025-09-16T23:45:56.231846Z	      name,
2025-09-16T23:45:56.231946Z	      "slug": slug.current,
2025-09-16T23:45:56.232047Z	      logo
2025-09-16T23:45:56.232148Z	    },
2025-09-16T23:45:56.232289Z	    category->{
2025-09-16T23:45:56.232454Z	      name,
2025-09-16T23:45:56.232605Z	      "slug": slug.current
2025-09-16T23:45:56.232764Z	    },
2025-09-16T23:45:56.232886Z	    pricing{
2025-09-16T23:45:56.232991Z	      currency,
2025-09-16T23:45:56.233092Z	      tiers[]{
2025-09-16T23:45:56.233189Z	        quantity,
2025-09-16T23:45:56.233287Z	        price,
2025-09-16T23:45:56.233383Z	        unit
2025-09-16T23:45:56.233476Z	      },
2025-09-16T23:45:56.233578Z	      moq,
2025-09-16T23:45:56.233715Z	      leadTime,
2025-09-16T23:45:56.23383Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:56.234092Z	      "price": tiers[0].price,
2025-09-16T23:45:56.234223Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:56.234333Z	    },
2025-09-16T23:45:56.234435Z	    inventory{
2025-09-16T23:45:56.234529Z	      quantity,
2025-09-16T23:45:56.234627Z	      status,
2025-09-16T23:45:56.234731Z	      warehouse,
2025-09-16T23:45:56.234819Z	      lastUpdated,
2025-09-16T23:45:56.23491Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:56.234999Z	      "inStock": status == "in_stock",
2025-09-16T23:45:56.235085Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:56.235171Z	    },
2025-09-16T23:45:56.235257Z	    isActive,
2025-09-16T23:45:56.235352Z	    isFeatured,
2025-09-16T23:45:56.235448Z	    isNew,
2025-09-16T23:45:56.235545Z	    _createdAt,
2025-09-16T23:45:56.235645Z	    _updatedAt
2025-09-16T23:45:56.235755Z	  
2025-09-16T23:45:56.235862Z	      },
2025-09-16T23:45:56.235961Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-16T23:45:56.236077Z	    }
2025-09-16T23:45:56.236174Z	  
2025-09-16T23:45:56.236269Z	Query parameters: {
2025-09-16T23:45:56.236362Z	  limit: 8,
2025-09-16T23:45:56.236489Z	  offset: 0,
2025-09-16T23:45:56.236591Z	  category: undefined,
2025-09-16T23:45:56.236712Z	  brand: 'lem',
2025-09-16T23:45:56.236812Z	  featured: undefined
2025-09-16T23:45:56.236968Z	}
2025-09-16T23:45:56.237125Z	Fetching solutions with query: 
2025-09-16T23:45:56.237279Z	    {
2025-09-16T23:45:56.237822Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:56.238117Z	        
2025-09-16T23:45:56.23841Z	    _id,
2025-09-16T23:45:56.238553Z	    title,
2025-09-16T23:45:56.238689Z	    "slug": slug.current,
2025-09-16T23:45:56.238814Z	    summary,
2025-09-16T23:45:56.238914Z	    description,
2025-09-16T23:45:56.239008Z	    coverImage,
2025-09-16T23:45:56.239407Z	    primaryBrand->{
2025-09-16T23:45:56.239551Z	      _id,
2025-09-16T23:45:56.239654Z	      name,
2025-09-16T23:45:56.239787Z	      "slug": slug.current,
2025-09-16T23:45:56.240324Z	      logo
2025-09-16T23:45:56.240475Z	    },
2025-09-16T23:45:56.24102Z	    relatedBrands[]->{
2025-09-16T23:45:56.24119Z	      _id,
2025-09-16T23:45:56.241288Z	      name,
2025-09-16T23:45:56.241385Z	      "slug": slug.current,
2025-09-16T23:45:56.241495Z	      logo
2025-09-16T23:45:56.241603Z	    },
2025-09-16T23:45:56.241732Z	    targetMarket,
2025-09-16T23:45:56.241839Z	    complexity,
2025-09-16T23:45:56.241937Z	    publishedAt,
2025-09-16T23:45:56.242023Z	    isPublished,
2025-09-16T23:45:56.242121Z	    isFeatured,
2025-09-16T23:45:56.24223Z	    viewCount,
2025-09-16T23:45:56.242353Z	    _createdAt,
2025-09-16T23:45:56.242478Z	    _updatedAt
2025-09-16T23:45:56.242593Z	  
2025-09-16T23:45:56.242714Z	      },
2025-09-16T23:45:56.242828Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-16T23:45:56.243014Z	    }
2025-09-16T23:45:56.243474Z	  
2025-09-16T23:45:56.2438Z	Query parameters: {
2025-09-16T23:45:56.244038Z	  limit: 4,
2025-09-16T23:45:56.244364Z	  offset: 0,
2025-09-16T23:45:56.244516Z	  targetMarket: undefined,
2025-09-16T23:45:56.244662Z	  brand: 'lem',
2025-09-16T23:45:56.244789Z	  featured: undefined
2025-09-16T23:45:56.244925Z	}
2025-09-16T23:45:56.245107Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-16T23:45:56.245415Z	Fetching products with query: 
2025-09-16T23:45:56.24555Z	    {
2025-09-16T23:45:56.245656Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:56.246021Z	        
2025-09-16T23:45:56.246147Z	    _id,
2025-09-16T23:45:56.246549Z	    _type,
2025-09-16T23:45:56.246791Z	    partNumber,
2025-09-16T23:45:56.247099Z	    "slug": slug.current,
2025-09-16T23:45:56.247433Z	    title,
2025-09-16T23:45:56.24778Z	    shortDescription,
2025-09-16T23:45:56.247914Z	    image,
2025-09-16T23:45:56.248023Z	    brand->{
2025-09-16T23:45:56.248418Z	      name,
2025-09-16T23:45:56.248758Z	      "slug": slug.current,
2025-09-16T23:45:56.24898Z	      logo
2025-09-16T23:45:56.249449Z	    },
2025-09-16T23:45:56.249576Z	    category->{
2025-09-16T23:45:56.249687Z	      name,
2025-09-16T23:45:56.249792Z	      "slug": slug.current
2025-09-16T23:45:56.251708Z	    },
2025-09-16T23:45:56.252146Z	    pricing{
2025-09-16T23:45:56.252511Z	      currency,
2025-09-16T23:45:56.253464Z	      tiers[]{
2025-09-16T23:45:56.254288Z	        quantity,
2025-09-16T23:45:56.254438Z	        price,
2025-09-16T23:45:56.25457Z	        unit
2025-09-16T23:45:56.254732Z	      },
2025-09-16T23:45:56.254946Z	      moq,
2025-09-16T23:45:56.255103Z	      leadTime,
2025-09-16T23:45:56.255278Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:56.255475Z	      "price": tiers[0].price,
2025-09-16T23:45:56.255611Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:56.255769Z	    },
2025-09-16T23:45:56.255954Z	    inventory{
2025-09-16T23:45:56.256066Z	      quantity,
2025-09-16T23:45:56.256173Z	      status,
2025-09-16T23:45:56.256282Z	      warehouse,
2025-09-16T23:45:56.256449Z	      lastUpdated,
2025-09-16T23:45:56.256637Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:56.256807Z	      "inStock": status == "in_stock",
2025-09-16T23:45:56.256924Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:56.257035Z	    },
2025-09-16T23:45:56.257166Z	    isActive,
2025-09-16T23:45:56.257573Z	    isFeatured,
2025-09-16T23:45:56.257885Z	    isNew,
2025-09-16T23:45:56.258172Z	    _createdAt,
2025-09-16T23:45:56.258307Z	    _updatedAt
2025-09-16T23:45:56.25865Z	  
2025-09-16T23:45:56.25881Z	      },
2025-09-16T23:45:56.258922Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-16T23:45:56.259038Z	    }
2025-09-16T23:45:56.259137Z	  
2025-09-16T23:45:56.259261Z	Query parameters: {
2025-09-16T23:45:56.259378Z	  limit: 8,
2025-09-16T23:45:56.259489Z	  offset: 0,
2025-09-16T23:45:56.259591Z	  category: undefined,
2025-09-16T23:45:56.259768Z	  brand: 'ixys',
2025-09-16T23:45:56.259934Z	  featured: undefined
2025-09-16T23:45:56.26011Z	}
2025-09-16T23:45:56.260255Z	Fetching solutions with query: 
2025-09-16T23:45:56.260363Z	    {
2025-09-16T23:45:56.260472Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:56.260579Z	        
2025-09-16T23:45:56.260692Z	    _id,
2025-09-16T23:45:56.260802Z	    title,
2025-09-16T23:45:56.260896Z	    "slug": slug.current,
2025-09-16T23:45:56.260998Z	    summary,
2025-09-16T23:45:56.261091Z	    description,
2025-09-16T23:45:56.26118Z	    coverImage,
2025-09-16T23:45:56.261271Z	    primaryBrand->{
2025-09-16T23:45:56.261364Z	      _id,
2025-09-16T23:45:56.26147Z	      name,
2025-09-16T23:45:56.261572Z	      "slug": slug.current,
2025-09-16T23:45:56.26172Z	      logo
2025-09-16T23:45:56.262591Z	    },
2025-09-16T23:45:56.262755Z	    relatedBrands[]->{
2025-09-16T23:45:56.262844Z	      _id,
2025-09-16T23:45:56.262932Z	      name,
2025-09-16T23:45:56.263016Z	      "slug": slug.current,
2025-09-16T23:45:56.263101Z	      logo
2025-09-16T23:45:56.263183Z	    },
2025-09-16T23:45:56.263276Z	    targetMarket,
2025-09-16T23:45:56.263369Z	    complexity,
2025-09-16T23:45:56.263462Z	    publishedAt,
2025-09-16T23:45:56.263551Z	    isPublished,
2025-09-16T23:45:56.26367Z	    isFeatured,
2025-09-16T23:45:56.26379Z	    viewCount,
2025-09-16T23:45:56.263884Z	    _createdAt,
2025-09-16T23:45:56.263976Z	    _updatedAt
2025-09-16T23:45:56.26407Z	  
2025-09-16T23:45:56.264158Z	      },
2025-09-16T23:45:56.264246Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-16T23:45:56.264338Z	    }
2025-09-16T23:45:56.264435Z	  
2025-09-16T23:45:56.26454Z	Query parameters: {
2025-09-16T23:45:56.264664Z	  limit: 4,
2025-09-16T23:45:56.264788Z	  offset: 0,
2025-09-16T23:45:56.264896Z	  targetMarket: undefined,
2025-09-16T23:45:56.264998Z	  brand: 'ixys',
2025-09-16T23:45:56.265107Z	  featured: undefined
2025-09-16T23:45:56.265221Z	}
2025-09-16T23:45:56.265353Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-16T23:45:56.265966Z	Fetching products with query: 
2025-09-16T23:45:56.26612Z	    {
2025-09-16T23:45:56.266233Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:56.266398Z	        
2025-09-16T23:45:56.266528Z	    _id,
2025-09-16T23:45:56.266634Z	    _type,
2025-09-16T23:45:56.266757Z	    partNumber,
2025-09-16T23:45:56.26685Z	    "slug": slug.current,
2025-09-16T23:45:56.266936Z	    title,
2025-09-16T23:45:56.267027Z	    shortDescription,
2025-09-16T23:45:56.267114Z	    image,
2025-09-16T23:45:56.2672Z	    brand->{
2025-09-16T23:45:56.267283Z	      name,
2025-09-16T23:45:56.267371Z	      "slug": slug.current,
2025-09-16T23:45:56.267469Z	      logo
2025-09-16T23:45:56.267625Z	    },
2025-09-16T23:45:56.267782Z	    category->{
2025-09-16T23:45:56.268165Z	      name,
2025-09-16T23:45:56.268301Z	      "slug": slug.current
2025-09-16T23:45:56.268414Z	    },
2025-09-16T23:45:56.26852Z	    pricing{
2025-09-16T23:45:56.268653Z	      currency,
2025-09-16T23:45:56.268791Z	      tiers[]{
2025-09-16T23:45:56.268924Z	        quantity,
2025-09-16T23:45:56.269029Z	        price,
2025-09-16T23:45:56.26933Z	        unit
2025-09-16T23:45:56.269491Z	      },
2025-09-16T23:45:56.269653Z	      moq,
2025-09-16T23:45:56.269794Z	      leadTime,
2025-09-16T23:45:56.269906Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:56.270012Z	      "price": tiers[0].price,
2025-09-16T23:45:56.270121Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:56.270228Z	    },
2025-09-16T23:45:56.27036Z	    inventory{
2025-09-16T23:45:56.270471Z	      quantity,
2025-09-16T23:45:56.270572Z	      status,
2025-09-16T23:45:56.270697Z	      warehouse,
2025-09-16T23:45:56.270809Z	      lastUpdated,
2025-09-16T23:45:56.270926Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:56.271054Z	      "inStock": status == "in_stock",
2025-09-16T23:45:56.271166Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:56.271274Z	    },
2025-09-16T23:45:56.271385Z	    isActive,
2025-09-16T23:45:56.271493Z	    isFeatured,
2025-09-16T23:45:56.271616Z	    isNew,
2025-09-16T23:45:56.271748Z	    _createdAt,
2025-09-16T23:45:56.271863Z	    _updatedAt
2025-09-16T23:45:56.271971Z	  
2025-09-16T23:45:56.272069Z	      },
2025-09-16T23:45:56.272171Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-16T23:45:56.272332Z	    }
2025-09-16T23:45:56.272441Z	  
2025-09-16T23:45:56.272547Z	Query parameters: {
2025-09-16T23:45:56.272643Z	  limit: 8,
2025-09-16T23:45:56.272781Z	  offset: 0,
2025-09-16T23:45:56.272883Z	  category: undefined,
2025-09-16T23:45:56.272978Z	  brand: 'mediatek',
2025-09-16T23:45:56.273075Z	  featured: undefined
2025-09-16T23:45:56.27317Z	}
2025-09-16T23:45:56.273268Z	Fetching solutions with query: 
2025-09-16T23:45:56.273364Z	    {
2025-09-16T23:45:56.273457Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:56.27357Z	        
2025-09-16T23:45:56.273702Z	    _id,
2025-09-16T23:45:56.273818Z	    title,
2025-09-16T23:45:56.273919Z	    "slug": slug.current,
2025-09-16T23:45:56.27402Z	    summary,
2025-09-16T23:45:56.274117Z	    description,
2025-09-16T23:45:56.274217Z	    coverImage,
2025-09-16T23:45:56.274316Z	    primaryBrand->{
2025-09-16T23:45:56.274422Z	      _id,
2025-09-16T23:45:56.274533Z	      name,
2025-09-16T23:45:56.274639Z	      "slug": slug.current,
2025-09-16T23:45:56.274754Z	      logo
2025-09-16T23:45:56.274845Z	    },
2025-09-16T23:45:56.274938Z	    relatedBrands[]->{
2025-09-16T23:45:56.275031Z	      _id,
2025-09-16T23:45:56.275119Z	      name,
2025-09-16T23:45:56.275207Z	      "slug": slug.current,
2025-09-16T23:45:56.275294Z	      logo
2025-09-16T23:45:56.275382Z	    },
2025-09-16T23:45:56.27547Z	    targetMarket,
2025-09-16T23:45:56.275583Z	    complexity,
2025-09-16T23:45:56.276068Z	    publishedAt,
2025-09-16T23:45:56.276245Z	    isPublished,
2025-09-16T23:45:56.276398Z	    isFeatured,
2025-09-16T23:45:56.276549Z	    viewCount,
2025-09-16T23:45:56.276742Z	    _createdAt,
2025-09-16T23:45:56.276889Z	    _updatedAt
2025-09-16T23:45:56.277039Z	  
2025-09-16T23:45:56.277179Z	      },
2025-09-16T23:45:56.277419Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-16T23:45:56.27749Z	    }
2025-09-16T23:45:56.277605Z	  
2025-09-16T23:45:56.277765Z	Query parameters: {
2025-09-16T23:45:56.278026Z	  limit: 4,
2025-09-16T23:45:56.278194Z	  offset: 0,
2025-09-16T23:45:56.278518Z	  targetMarket: undefined,
2025-09-16T23:45:56.27876Z	  brand: 'mediatek',
2025-09-16T23:45:56.279008Z	  featured: undefined
2025-09-16T23:45:56.27917Z	}
2025-09-16T23:45:56.279484Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-16T23:45:56.279654Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:45:56.279923Z	Fetching products with query: 
2025-09-16T23:45:56.280161Z	    {
2025-09-16T23:45:56.280398Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:56.280633Z	        
2025-09-16T23:45:56.324458Z	    _id,
2025-09-16T23:45:56.32464Z	    _type,
2025-09-16T23:45:56.324862Z	    partNumber,
2025-09-16T23:45:56.325135Z	    "slug": slug.current,
2025-09-16T23:45:56.325715Z	    title,
2025-09-16T23:45:56.325906Z	    shortDescription,
2025-09-16T23:45:56.326118Z	    image,
2025-09-16T23:45:56.326343Z	    brand->{
2025-09-16T23:45:56.326778Z	      name,
2025-09-16T23:45:56.327267Z	      "slug": slug.current,
2025-09-16T23:45:56.327694Z	      logo
2025-09-16T23:45:56.328178Z	    },
2025-09-16T23:45:56.328629Z	    category->{
2025-09-16T23:45:56.328808Z	      name,
2025-09-16T23:45:56.328939Z	      "slug": slug.current
2025-09-16T23:45:56.329057Z	    },
2025-09-16T23:45:56.32921Z	    pricing{
2025-09-16T23:45:56.32945Z	      currency,
2025-09-16T23:45:56.329627Z	      tiers[]{
2025-09-16T23:45:56.329816Z	        quantity,
2025-09-16T23:45:56.329948Z	        price,
2025-09-16T23:45:56.330057Z	        unit
2025-09-16T23:45:56.330183Z	      },
2025-09-16T23:45:56.331326Z	      moq,
2025-09-16T23:45:56.332666Z	      leadTime,
2025-09-16T23:45:56.332859Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:56.332993Z	      "price": tiers[0].price,
2025-09-16T23:45:56.333133Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:56.333285Z	    },
2025-09-16T23:45:56.334042Z	    inventory{
2025-09-16T23:45:56.334414Z	      quantity,
2025-09-16T23:45:56.334785Z	      status,
2025-09-16T23:45:56.335096Z	      warehouse,
2025-09-16T23:45:56.335404Z	      lastUpdated,
2025-09-16T23:45:56.335738Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:56.33605Z	      "inStock": status == "in_stock",
2025-09-16T23:45:56.336364Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:56.33648Z	    },
2025-09-16T23:45:56.337042Z	    isActive,
2025-09-16T23:45:56.337334Z	    isFeatured,
2025-09-16T23:45:56.337621Z	    isNew,
2025-09-16T23:45:56.337964Z	    _createdAt,
2025-09-16T23:45:56.338249Z	    _updatedAt
2025-09-16T23:45:56.338392Z	  
2025-09-16T23:45:56.338659Z	      },
2025-09-16T23:45:56.338959Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-16T23:45:56.339258Z	    }
2025-09-16T23:45:56.339554Z	  
2025-09-16T23:45:56.339662Z	Query parameters: {
2025-09-16T23:45:56.340104Z	  limit: 8,
2025-09-16T23:45:56.340392Z	  offset: 0,
2025-09-16T23:45:56.340695Z	  category: undefined,
2025-09-16T23:45:56.341019Z	  brand: 'pi',
2025-09-16T23:45:56.341329Z	  featured: undefined
2025-09-16T23:45:56.341476Z	}
2025-09-16T23:45:56.341606Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:56.341737Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:56.341869Z	Fetching solutions with query: 
2025-09-16T23:45:56.341986Z	    {
2025-09-16T23:45:56.342088Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:56.342208Z	        
2025-09-16T23:45:56.342323Z	    _id,
2025-09-16T23:45:56.342441Z	    title,
2025-09-16T23:45:56.34255Z	    "slug": slug.current,
2025-09-16T23:45:56.342658Z	    summary,
2025-09-16T23:45:56.342777Z	    description,
2025-09-16T23:45:56.342878Z	    coverImage,
2025-09-16T23:45:56.342983Z	    primaryBrand->{
2025-09-16T23:45:56.34308Z	      _id,
2025-09-16T23:45:56.343189Z	      name,
2025-09-16T23:45:56.343289Z	      "slug": slug.current,
2025-09-16T23:45:56.343404Z	      logo
2025-09-16T23:45:56.343517Z	    },
2025-09-16T23:45:56.343626Z	    relatedBrands[]->{
2025-09-16T23:45:56.343763Z	      _id,
2025-09-16T23:45:56.343878Z	      name,
2025-09-16T23:45:56.344003Z	      "slug": slug.current,
2025-09-16T23:45:56.344114Z	      logo
2025-09-16T23:45:56.344227Z	    },
2025-09-16T23:45:56.344368Z	    targetMarket,
2025-09-16T23:45:56.3445Z	    complexity,
2025-09-16T23:45:56.344632Z	    publishedAt,
2025-09-16T23:45:56.344769Z	    isPublished,
2025-09-16T23:45:56.344879Z	    isFeatured,
2025-09-16T23:45:56.344984Z	    viewCount,
2025-09-16T23:45:56.345103Z	    _createdAt,
2025-09-16T23:45:56.345228Z	    _updatedAt
2025-09-16T23:45:56.345339Z	  
2025-09-16T23:45:56.345459Z	      },
2025-09-16T23:45:56.345585Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-16T23:45:56.345732Z	    }
2025-09-16T23:45:56.345845Z	  
2025-09-16T23:45:56.345952Z	Query parameters: {
2025-09-16T23:45:56.346053Z	  limit: 4,
2025-09-16T23:45:56.346156Z	  offset: 0,
2025-09-16T23:45:56.346311Z	  targetMarket: undefined,
2025-09-16T23:45:56.346443Z	  brand: 'pi',
2025-09-16T23:45:56.346578Z	  featured: undefined
2025-09-16T23:45:56.346704Z	}
2025-09-16T23:45:56.346842Z	Fetching products with query: 
2025-09-16T23:45:56.346959Z	    {
2025-09-16T23:45:56.347084Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:56.347216Z	        
2025-09-16T23:45:56.347431Z	    _id,
2025-09-16T23:45:56.347555Z	    _type,
2025-09-16T23:45:56.347661Z	    partNumber,
2025-09-16T23:45:56.347804Z	    "slug": slug.current,
2025-09-16T23:45:56.34792Z	    title,
2025-09-16T23:45:56.348027Z	    shortDescription,
2025-09-16T23:45:56.34813Z	    image,
2025-09-16T23:45:56.348232Z	    brand->{
2025-09-16T23:45:56.348341Z	      name,
2025-09-16T23:45:56.34844Z	      "slug": slug.current,
2025-09-16T23:45:56.348539Z	      logo
2025-09-16T23:45:56.348657Z	    },
2025-09-16T23:45:56.348801Z	    category->{
2025-09-16T23:45:56.348921Z	      name,
2025-09-16T23:45:56.349038Z	      "slug": slug.current
2025-09-16T23:45:56.349157Z	    },
2025-09-16T23:45:56.349271Z	    pricing{
2025-09-16T23:45:56.349453Z	      currency,
2025-09-16T23:45:56.349618Z	      tiers[]{
2025-09-16T23:45:56.349757Z	        quantity,
2025-09-16T23:45:56.34999Z	        price,
2025-09-16T23:45:56.35014Z	        unit
2025-09-16T23:45:56.350366Z	      },
2025-09-16T23:45:56.35059Z	      moq,
2025-09-16T23:45:56.350823Z	      leadTime,
2025-09-16T23:45:56.351014Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:56.351218Z	      "price": tiers[0].price,
2025-09-16T23:45:56.351414Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:56.351539Z	    },
2025-09-16T23:45:56.351746Z	    inventory{
2025-09-16T23:45:56.351817Z	      quantity,
2025-09-16T23:45:56.351983Z	      status,
2025-09-16T23:45:56.352171Z	      warehouse,
2025-09-16T23:45:56.352444Z	      lastUpdated,
2025-09-16T23:45:56.352757Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:56.352993Z	      "inStock": status == "in_stock",
2025-09-16T23:45:56.353097Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:56.353179Z	    },
2025-09-16T23:45:56.353264Z	    isActive,
2025-09-16T23:45:56.353559Z	    isFeatured,
2025-09-16T23:45:56.353685Z	    isNew,
2025-09-16T23:45:56.354015Z	    _createdAt,
2025-09-16T23:45:56.354139Z	    _updatedAt
2025-09-16T23:45:56.354238Z	  
2025-09-16T23:45:56.354335Z	      },
2025-09-16T23:45:56.354732Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:45:56.354842Z	    }
2025-09-16T23:45:56.354934Z	  
2025-09-16T23:45:56.355019Z	Query parameters: {
2025-09-16T23:45:56.355101Z	  limit: 8,
2025-09-16T23:45:56.355178Z	  offset: 0,
2025-09-16T23:45:56.355278Z	  category: undefined,
2025-09-16T23:45:56.355383Z	  brand: 'littelfuse',
2025-09-16T23:45:56.35548Z	  featured: undefined
2025-09-16T23:45:56.355874Z	}
2025-09-16T23:45:56.355999Z	Fetching solutions with query: 
2025-09-16T23:45:56.356111Z	    {
2025-09-16T23:45:56.356216Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:56.356437Z	        
2025-09-16T23:45:56.356529Z	    _id,
2025-09-16T23:45:56.356749Z	    title,
2025-09-16T23:45:56.356954Z	    "slug": slug.current,
2025-09-16T23:45:56.357101Z	    summary,
2025-09-16T23:45:56.357208Z	    description,
2025-09-16T23:45:56.357299Z	    coverImage,
2025-09-16T23:45:56.357385Z	    primaryBrand->{
2025-09-16T23:45:56.357491Z	      _id,
2025-09-16T23:45:56.357608Z	      name,
2025-09-16T23:45:56.357891Z	      "slug": slug.current,
2025-09-16T23:45:56.358204Z	      logo
2025-09-16T23:45:56.358503Z	    },
2025-09-16T23:45:56.358629Z	    relatedBrands[]->{
2025-09-16T23:45:56.359175Z	      _id,
2025-09-16T23:45:56.359497Z	      name,
2025-09-16T23:45:56.35963Z	      "slug": slug.current,
2025-09-16T23:45:56.359955Z	      logo
2025-09-16T23:45:56.360283Z	    },
2025-09-16T23:45:56.360634Z	    targetMarket,
2025-09-16T23:45:56.360779Z	    complexity,
2025-09-16T23:45:56.361182Z	    publishedAt,
2025-09-16T23:45:56.361506Z	    isPublished,
2025-09-16T23:45:56.361846Z	    isFeatured,
2025-09-16T23:45:56.361974Z	    viewCount,
2025-09-16T23:45:56.362433Z	    _createdAt,
2025-09-16T23:45:56.362565Z	    _updatedAt
2025-09-16T23:45:56.363118Z	  
2025-09-16T23:45:56.363293Z	      },
2025-09-16T23:45:56.363413Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:45:56.363523Z	    }
2025-09-16T23:45:56.363634Z	  
2025-09-16T23:45:56.363758Z	Query parameters: {
2025-09-16T23:45:56.363851Z	  limit: 4,
2025-09-16T23:45:56.363936Z	  offset: 0,
2025-09-16T23:45:56.364021Z	  targetMarket: undefined,
2025-09-16T23:45:56.364118Z	  brand: 'littelfuse',
2025-09-16T23:45:56.364214Z	  featured: undefined
2025-09-16T23:45:56.364309Z	}
2025-09-16T23:45:56.364401Z	✅ [getBrandData] Found brand: LEM
2025-09-16T23:45:56.364499Z	Products fetch result: {
2025-09-16T23:45:56.364594Z	  totalProducts: 3,
2025-09-16T23:45:56.364712Z	  fetchedProducts: 3,
2025-09-16T23:45:56.364803Z	  firstProduct: {
2025-09-16T23:45:56.364891Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-16T23:45:56.364977Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-16T23:45:56.365092Z	    _type: 'product',
2025-09-16T23:45:56.365197Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-16T23:45:56.365331Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-16T23:45:56.365435Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-16T23:45:56.365533Z	    image: null,
2025-09-16T23:45:56.365636Z	    inventory: {
2025-09-16T23:45:56.365797Z	      inStock: true,
2025-09-16T23:45:56.365904Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-16T23:45:56.366001Z	      quantity: 0,
2025-09-16T23:45:56.366099Z	      status: 'in_stock',
2025-09-16T23:45:56.3662Z	      warehouse: null
2025-09-16T23:45:56.366313Z	    },
2025-09-16T23:45:56.366414Z	    isActive: true,
2025-09-16T23:45:56.36651Z	    isFeatured: false,
2025-09-16T23:45:56.366647Z	    isNew: false,
2025-09-16T23:45:56.366813Z	    partNumber: 'la55-p',
2025-09-16T23:45:56.36695Z	    pricing: {
2025-09-16T23:45:56.367063Z	      currency: 'CNY',
2025-09-16T23:45:56.367163Z	      leadTime: null,
2025-09-16T23:45:56.367273Z	      moq: null,
2025-09-16T23:45:56.367374Z	      price: null,
2025-09-16T23:45:56.367477Z	      tiers: null
2025-09-16T23:45:56.367575Z	    },
2025-09-16T23:45:56.367688Z	    shortDescription: '电流传感器la55-p',
2025-09-16T23:45:56.367807Z	    slug: 'la55-p',
2025-09-16T23:45:56.367911Z	    title: '电流传感器la55-p'
2025-09-16T23:45:56.368005Z	  }
2025-09-16T23:45:56.368103Z	}
2025-09-16T23:45:56.368222Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:56.368336Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-16T23:45:56.368437Z	Fetching products with query: 
2025-09-16T23:45:56.368544Z	    {
2025-09-16T23:45:56.368667Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:56.368805Z	        
2025-09-16T23:45:56.368917Z	    _id,
2025-09-16T23:45:56.369043Z	    _type,
2025-09-16T23:45:56.369151Z	    partNumber,
2025-09-16T23:45:56.369255Z	    "slug": slug.current,
2025-09-16T23:45:56.369349Z	    title,
2025-09-16T23:45:56.369445Z	    shortDescription,
2025-09-16T23:45:56.369539Z	    image,
2025-09-16T23:45:56.369639Z	    brand->{
2025-09-16T23:45:56.369753Z	      name,
2025-09-16T23:45:56.369862Z	      "slug": slug.current,
2025-09-16T23:45:56.36996Z	      logo
2025-09-16T23:45:56.370062Z	    },
2025-09-16T23:45:56.370184Z	    category->{
2025-09-16T23:45:56.370296Z	      name,
2025-09-16T23:45:56.37041Z	      "slug": slug.current
2025-09-16T23:45:56.370521Z	    },
2025-09-16T23:45:56.370647Z	    pricing{
2025-09-16T23:45:56.370785Z	      currency,
2025-09-16T23:45:56.370901Z	      tiers[]{
2025-09-16T23:45:56.371042Z	        quantity,
2025-09-16T23:45:56.371148Z	        price,
2025-09-16T23:45:56.371253Z	        unit
2025-09-16T23:45:56.371364Z	      },
2025-09-16T23:45:56.371461Z	      moq,
2025-09-16T23:45:56.371572Z	      leadTime,
2025-09-16T23:45:56.371696Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:56.371814Z	      "price": tiers[0].price,
2025-09-16T23:45:56.371969Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:56.372091Z	    },
2025-09-16T23:45:56.372196Z	    inventory{
2025-09-16T23:45:56.372296Z	      quantity,
2025-09-16T23:45:56.372396Z	      status,
2025-09-16T23:45:56.37251Z	      warehouse,
2025-09-16T23:45:56.372614Z	      lastUpdated,
2025-09-16T23:45:56.37284Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:56.373066Z	      "inStock": status == "in_stock",
2025-09-16T23:45:56.373165Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:56.373254Z	    },
2025-09-16T23:45:56.373548Z	    isActive,
2025-09-16T23:45:56.373933Z	    isFeatured,
2025-09-16T23:45:56.374225Z	    isNew,
2025-09-16T23:45:56.374349Z	    _createdAt,
2025-09-16T23:45:56.374644Z	    _updatedAt
2025-09-16T23:45:56.374858Z	  
2025-09-16T23:45:56.374981Z	      },
2025-09-16T23:45:56.375154Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-16T23:45:56.375393Z	    }
2025-09-16T23:45:56.37562Z	  
2025-09-16T23:45:56.375838Z	Query parameters: {
2025-09-16T23:45:56.376087Z	  limit: 8,
2025-09-16T23:45:56.376199Z	  offset: 0,
2025-09-16T23:45:56.376422Z	  category: undefined,
2025-09-16T23:45:56.376632Z	  brand: 'lem',
2025-09-16T23:45:56.376769Z	  featured: undefined
2025-09-16T23:45:56.377079Z	}
2025-09-16T23:45:56.377161Z	Fetching solutions with query: 
2025-09-16T23:45:56.377376Z	    {
2025-09-16T23:45:56.377516Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:56.37763Z	        
2025-09-16T23:45:56.377787Z	    _id,
2025-09-16T23:45:56.377895Z	    title,
2025-09-16T23:45:56.378041Z	    "slug": slug.current,
2025-09-16T23:45:56.378125Z	    summary,
2025-09-16T23:45:56.378236Z	    description,
2025-09-16T23:45:56.378349Z	    coverImage,
2025-09-16T23:45:56.378495Z	    primaryBrand->{
2025-09-16T23:45:56.378596Z	      _id,
2025-09-16T23:45:56.378717Z	      name,
2025-09-16T23:45:56.378826Z	      "slug": slug.current,
2025-09-16T23:45:56.37893Z	      logo
2025-09-16T23:45:56.37902Z	    },
2025-09-16T23:45:56.379114Z	    relatedBrands[]->{
2025-09-16T23:45:56.37921Z	      _id,
2025-09-16T23:45:56.379319Z	      name,
2025-09-16T23:45:56.379416Z	      "slug": slug.current,
2025-09-16T23:45:56.379516Z	      logo
2025-09-16T23:45:56.379617Z	    },
2025-09-16T23:45:56.379764Z	    targetMarket,
2025-09-16T23:45:56.379839Z	    complexity,
2025-09-16T23:45:56.379964Z	    publishedAt,
2025-09-16T23:45:56.380094Z	    isPublished,
2025-09-16T23:45:56.380211Z	    isFeatured,
2025-09-16T23:45:56.380313Z	    viewCount,
2025-09-16T23:45:56.380428Z	    _createdAt,
2025-09-16T23:45:56.380572Z	    _updatedAt
2025-09-16T23:45:56.380692Z	  
2025-09-16T23:45:56.380815Z	      },
2025-09-16T23:45:56.381Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-16T23:45:56.381131Z	    }
2025-09-16T23:45:56.381247Z	  
2025-09-16T23:45:56.381375Z	Query parameters: {
2025-09-16T23:45:56.381482Z	  limit: 4,
2025-09-16T23:45:56.38158Z	  offset: 0,
2025-09-16T23:45:56.381889Z	  targetMarket: undefined,
2025-09-16T23:45:56.381972Z	  brand: 'lem',
2025-09-16T23:45:56.382188Z	  featured: undefined
2025-09-16T23:45:56.382268Z	}
2025-09-16T23:45:56.382329Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-16T23:45:56.382543Z	Fetching products with query: 
2025-09-16T23:45:56.382667Z	    {
2025-09-16T23:45:56.382786Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:56.382969Z	        
2025-09-16T23:45:56.383066Z	    _id,
2025-09-16T23:45:56.383177Z	    _type,
2025-09-16T23:45:56.383353Z	    partNumber,
2025-09-16T23:45:56.383433Z	    "slug": slug.current,
2025-09-16T23:45:56.383499Z	    title,
2025-09-16T23:45:56.383658Z	    shortDescription,
2025-09-16T23:45:56.383788Z	    image,
2025-09-16T23:45:56.383904Z	    brand->{
2025-09-16T23:45:56.383998Z	      name,
2025-09-16T23:45:56.384091Z	      "slug": slug.current,
2025-09-16T23:45:56.384183Z	      logo
2025-09-16T23:45:56.384274Z	    },
2025-09-16T23:45:56.384361Z	    category->{
2025-09-16T23:45:56.384427Z	      name,
2025-09-16T23:45:56.384544Z	      "slug": slug.current
2025-09-16T23:45:56.384725Z	    },
2025-09-16T23:45:56.384843Z	    pricing{
2025-09-16T23:45:56.384962Z	      currency,
2025-09-16T23:45:56.385076Z	      tiers[]{
2025-09-16T23:45:56.385205Z	        quantity,
2025-09-16T23:45:56.385304Z	        price,
2025-09-16T23:45:56.385392Z	        unit
2025-09-16T23:45:56.385453Z	      },
2025-09-16T23:45:56.38551Z	      moq,
2025-09-16T23:45:56.38561Z	      leadTime,
2025-09-16T23:45:56.385766Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:56.385876Z	      "price": tiers[0].price,
2025-09-16T23:45:56.386081Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:56.386185Z	    },
2025-09-16T23:45:56.38629Z	    inventory{
2025-09-16T23:45:56.38639Z	      quantity,
2025-09-16T23:45:56.386476Z	      status,
2025-09-16T23:45:56.386566Z	      warehouse,
2025-09-16T23:45:56.386668Z	      lastUpdated,
2025-09-16T23:45:56.386794Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:56.3869Z	      "inStock": status == "in_stock",
2025-09-16T23:45:56.38699Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:56.387057Z	    },
2025-09-16T23:45:56.387137Z	    isActive,
2025-09-16T23:45:56.387394Z	    isFeatured,
2025-09-16T23:45:56.387594Z	    isNew,
2025-09-16T23:45:56.38774Z	    _createdAt,
2025-09-16T23:45:56.387852Z	    _updatedAt
2025-09-16T23:45:56.387967Z	  
2025-09-16T23:45:56.388074Z	      },
2025-09-16T23:45:56.388181Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-16T23:45:56.388319Z	    }
2025-09-16T23:45:56.388508Z	  
2025-09-16T23:45:56.388636Z	Query parameters: {
2025-09-16T23:45:56.388763Z	  limit: 8,
2025-09-16T23:45:56.38888Z	  offset: 0,
2025-09-16T23:45:56.389013Z	  category: undefined,
2025-09-16T23:45:56.389138Z	  brand: 'mediatek',
2025-09-16T23:45:56.389281Z	  featured: undefined
2025-09-16T23:45:56.389408Z	}
2025-09-16T23:45:56.389523Z	Fetching solutions with query: 
2025-09-16T23:45:56.389704Z	    {
2025-09-16T23:45:56.390131Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:56.390301Z	        
2025-09-16T23:45:56.390458Z	    _id,
2025-09-16T23:45:56.390608Z	    title,
2025-09-16T23:45:56.390767Z	    "slug": slug.current,
2025-09-16T23:45:56.390881Z	    summary,
2025-09-16T23:45:56.391016Z	    description,
2025-09-16T23:45:56.391175Z	    coverImage,
2025-09-16T23:45:56.391308Z	    primaryBrand->{
2025-09-16T23:45:56.391444Z	      _id,
2025-09-16T23:45:56.39157Z	      name,
2025-09-16T23:45:56.391711Z	      "slug": slug.current,
2025-09-16T23:45:56.391821Z	      logo
2025-09-16T23:45:56.391936Z	    },
2025-09-16T23:45:56.392057Z	    relatedBrands[]->{
2025-09-16T23:45:56.392182Z	      _id,
2025-09-16T23:45:56.392404Z	      name,
2025-09-16T23:45:56.392553Z	      "slug": slug.current,
2025-09-16T23:45:56.392662Z	      logo
2025-09-16T23:45:56.392785Z	    },
2025-09-16T23:45:56.392909Z	    targetMarket,
2025-09-16T23:45:56.393014Z	    complexity,
2025-09-16T23:45:56.393119Z	    publishedAt,
2025-09-16T23:45:56.393231Z	    isPublished,
2025-09-16T23:45:56.393334Z	    isFeatured,
2025-09-16T23:45:56.393431Z	    viewCount,
2025-09-16T23:45:56.393526Z	    _createdAt,
2025-09-16T23:45:56.393618Z	    _updatedAt
2025-09-16T23:45:56.393745Z	  
2025-09-16T23:45:56.393861Z	      },
2025-09-16T23:45:56.394348Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-16T23:45:56.394593Z	    }
2025-09-16T23:45:56.395739Z	  
2025-09-16T23:45:56.396123Z	Query parameters: {
2025-09-16T23:45:56.397836Z	  limit: 4,
2025-09-16T23:45:56.397955Z	  offset: 0,
2025-09-16T23:45:56.398031Z	  targetMarket: undefined,
2025-09-16T23:45:56.39809Z	  brand: 'mediatek',
2025-09-16T23:45:56.398146Z	  featured: undefined
2025-09-16T23:45:56.3982Z	}
2025-09-16T23:45:56.398263Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:45:56.398323Z	Fetching products with query: 
2025-09-16T23:45:56.398382Z	    {
2025-09-16T23:45:56.398437Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:56.398494Z	        
2025-09-16T23:45:56.398547Z	    _id,
2025-09-16T23:45:56.3986Z	    _type,
2025-09-16T23:45:56.398664Z	    partNumber,
2025-09-16T23:45:56.398748Z	    "slug": slug.current,
2025-09-16T23:45:56.398807Z	    title,
2025-09-16T23:45:56.39886Z	    shortDescription,
2025-09-16T23:45:56.398913Z	    image,
2025-09-16T23:45:56.398966Z	    brand->{
2025-09-16T23:45:56.399019Z	      name,
2025-09-16T23:45:56.399072Z	      "slug": slug.current,
2025-09-16T23:45:56.399125Z	      logo
2025-09-16T23:45:56.399178Z	    },
2025-09-16T23:45:56.399248Z	    category->{
2025-09-16T23:45:56.39931Z	      name,
2025-09-16T23:45:56.399368Z	      "slug": slug.current
2025-09-16T23:45:56.399423Z	    },
2025-09-16T23:45:56.399476Z	    pricing{
2025-09-16T23:45:56.399529Z	      currency,
2025-09-16T23:45:56.399585Z	      tiers[]{
2025-09-16T23:45:56.399644Z	        quantity,
2025-09-16T23:45:56.399727Z	        price,
2025-09-16T23:45:56.399787Z	        unit
2025-09-16T23:45:56.39984Z	      },
2025-09-16T23:45:56.399893Z	      moq,
2025-09-16T23:45:56.399946Z	      leadTime,
2025-09-16T23:45:56.400001Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:56.400058Z	      "price": tiers[0].price,
2025-09-16T23:45:56.400111Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:56.400167Z	    },
2025-09-16T23:45:56.40022Z	    inventory{
2025-09-16T23:45:56.400273Z	      quantity,
2025-09-16T23:45:56.400326Z	      status,
2025-09-16T23:45:56.400384Z	      warehouse,
2025-09-16T23:45:56.400439Z	      lastUpdated,
2025-09-16T23:45:56.400493Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:56.400554Z	      "inStock": status == "in_stock",
2025-09-16T23:45:56.400615Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:56.40067Z	    },
2025-09-16T23:45:56.400753Z	    isActive,
2025-09-16T23:45:56.400809Z	    isFeatured,
2025-09-16T23:45:56.400862Z	    isNew,
2025-09-16T23:45:56.400923Z	    _createdAt,
2025-09-16T23:45:56.401001Z	    _updatedAt
2025-09-16T23:45:56.401058Z	  
2025-09-16T23:45:56.401113Z	      },
2025-09-16T23:45:56.401167Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:45:56.401223Z	    }
2025-09-16T23:45:56.401277Z	  
2025-09-16T23:45:56.40133Z	Query parameters: {
2025-09-16T23:45:56.40139Z	  limit: 8,
2025-09-16T23:45:56.401447Z	  offset: 0,
2025-09-16T23:45:56.401501Z	  category: undefined,
2025-09-16T23:45:56.40156Z	  brand: 'littelfuse',
2025-09-16T23:45:56.401624Z	  featured: undefined
2025-09-16T23:45:56.423888Z	}
2025-09-16T23:45:56.424306Z	Fetching solutions with query: 
2025-09-16T23:45:56.424521Z	    {
2025-09-16T23:45:56.424656Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:56.425404Z	        
2025-09-16T23:45:56.425562Z	    _id,
2025-09-16T23:45:56.425709Z	    title,
2025-09-16T23:45:56.425832Z	    "slug": slug.current,
2025-09-16T23:45:56.425948Z	    summary,
2025-09-16T23:45:56.426058Z	    description,
2025-09-16T23:45:56.426272Z	    coverImage,
2025-09-16T23:45:56.426507Z	    primaryBrand->{
2025-09-16T23:45:56.426853Z	      _id,
2025-09-16T23:45:56.427871Z	      name,
2025-09-16T23:45:56.428264Z	      "slug": slug.current,
2025-09-16T23:45:56.428639Z	      logo
2025-09-16T23:45:56.428997Z	    },
2025-09-16T23:45:56.42925Z	    relatedBrands[]->{
2025-09-16T23:45:56.429489Z	      _id,
2025-09-16T23:45:56.429753Z	      name,
2025-09-16T23:45:56.430001Z	      "slug": slug.current,
2025-09-16T23:45:56.430272Z	      logo
2025-09-16T23:45:56.43055Z	    },
2025-09-16T23:45:56.43071Z	    targetMarket,
2025-09-16T23:45:56.430828Z	    complexity,
2025-09-16T23:45:56.431505Z	    publishedAt,
2025-09-16T23:45:56.432563Z	    isPublished,
2025-09-16T23:45:56.432781Z	    isFeatured,
2025-09-16T23:45:56.432947Z	    viewCount,
2025-09-16T23:45:56.433097Z	    _createdAt,
2025-09-16T23:45:56.433251Z	    _updatedAt
2025-09-16T23:45:56.433374Z	  
2025-09-16T23:45:56.4335Z	      },
2025-09-16T23:45:56.433637Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:45:56.442933Z	    }
2025-09-16T23:45:56.443106Z	  
2025-09-16T23:45:56.443205Z	Query parameters: {
2025-09-16T23:45:56.443299Z	  limit: 4,
2025-09-16T23:45:56.443393Z	  offset: 0,
2025-09-16T23:45:56.44348Z	  targetMarket: undefined,
2025-09-16T23:45:56.443576Z	  brand: 'littelfuse',
2025-09-16T23:45:56.443665Z	  featured: undefined
2025-09-16T23:45:56.443796Z	}
2025-09-16T23:45:56.443901Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:45:56.444018Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:45:56.444111Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:56.444201Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:56.444299Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:56.444395Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:56.446755Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-16T23:45:56.447181Z	Fetching products with query: 
2025-09-16T23:45:56.447325Z	    {
2025-09-16T23:45:56.447445Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:56.447565Z	        
2025-09-16T23:45:56.447693Z	    _id,
2025-09-16T23:45:56.447818Z	    _type,
2025-09-16T23:45:56.447939Z	    partNumber,
2025-09-16T23:45:56.448048Z	    "slug": slug.current,
2025-09-16T23:45:56.448157Z	    title,
2025-09-16T23:45:56.448268Z	    shortDescription,
2025-09-16T23:45:56.448376Z	    image,
2025-09-16T23:45:56.448974Z	    brand->{
2025-09-16T23:45:56.449423Z	      name,
2025-09-16T23:45:56.449655Z	      "slug": slug.current,
2025-09-16T23:45:56.449833Z	      logo
2025-09-16T23:45:56.450038Z	    },
2025-09-16T23:45:56.450159Z	    category->{
2025-09-16T23:45:56.450264Z	      name,
2025-09-16T23:45:56.450372Z	      "slug": slug.current
2025-09-16T23:45:56.452404Z	    },
2025-09-16T23:45:56.452555Z	    pricing{
2025-09-16T23:45:56.452745Z	      currency,
2025-09-16T23:45:56.452895Z	      tiers[]{
2025-09-16T23:45:56.453041Z	        quantity,
2025-09-16T23:45:56.45317Z	        price,
2025-09-16T23:45:56.453315Z	        unit
2025-09-16T23:45:56.453462Z	      },
2025-09-16T23:45:56.453584Z	      moq,
2025-09-16T23:45:56.453734Z	      leadTime,
2025-09-16T23:45:56.45392Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:56.454066Z	      "price": tiers[0].price,
2025-09-16T23:45:56.454185Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:56.454329Z	    },
2025-09-16T23:45:56.45458Z	    inventory{
2025-09-16T23:45:56.45484Z	      quantity,
2025-09-16T23:45:56.454996Z	      status,
2025-09-16T23:45:56.455246Z	      warehouse,
2025-09-16T23:45:56.455405Z	      lastUpdated,
2025-09-16T23:45:56.455516Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:56.45562Z	      "inStock": status == "in_stock",
2025-09-16T23:45:56.455983Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:56.456143Z	    },
2025-09-16T23:45:56.456275Z	    isActive,
2025-09-16T23:45:56.456425Z	    isFeatured,
2025-09-16T23:45:56.456542Z	    isNew,
2025-09-16T23:45:56.456857Z	    _createdAt,
2025-09-16T23:45:56.457077Z	    _updatedAt
2025-09-16T23:45:56.457253Z	  
2025-09-16T23:45:56.457426Z	      },
2025-09-16T23:45:56.458329Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-16T23:45:56.45862Z	    }
2025-09-16T23:45:56.458877Z	  
2025-09-16T23:45:56.459112Z	Query parameters: {
2025-09-16T23:45:56.459248Z	  limit: 8,
2025-09-16T23:45:56.459353Z	  offset: 0,
2025-09-16T23:45:56.459457Z	  category: undefined,
2025-09-16T23:45:56.459564Z	  brand: 'pi',
2025-09-16T23:45:56.459657Z	  featured: undefined
2025-09-16T23:45:56.459778Z	}
2025-09-16T23:45:56.459881Z	Fetching solutions with query: 
2025-09-16T23:45:56.459982Z	    {
2025-09-16T23:45:56.460087Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:56.460207Z	        
2025-09-16T23:45:56.460302Z	    _id,
2025-09-16T23:45:56.460401Z	    title,
2025-09-16T23:45:56.460524Z	    "slug": slug.current,
2025-09-16T23:45:56.460693Z	    summary,
2025-09-16T23:45:56.460856Z	    description,
2025-09-16T23:45:56.461125Z	    coverImage,
2025-09-16T23:45:56.461496Z	    primaryBrand->{
2025-09-16T23:45:56.461752Z	      _id,
2025-09-16T23:45:56.461912Z	      name,
2025-09-16T23:45:56.462043Z	      "slug": slug.current,
2025-09-16T23:45:56.462225Z	      logo
2025-09-16T23:45:56.463659Z	    },
2025-09-16T23:45:56.464271Z	    relatedBrands[]->{
2025-09-16T23:45:56.464432Z	      _id,
2025-09-16T23:45:56.464559Z	      name,
2025-09-16T23:45:56.464694Z	      "slug": slug.current,
2025-09-16T23:45:56.4651Z	      logo
2025-09-16T23:45:56.465424Z	    },
2025-09-16T23:45:56.465669Z	    targetMarket,
2025-09-16T23:45:56.465831Z	    complexity,
2025-09-16T23:45:56.46594Z	    publishedAt,
2025-09-16T23:45:56.467071Z	    isPublished,
2025-09-16T23:45:56.46734Z	    isFeatured,
2025-09-16T23:45:56.467799Z	    viewCount,
2025-09-16T23:45:56.46794Z	    _createdAt,
2025-09-16T23:45:56.468052Z	    _updatedAt
2025-09-16T23:45:56.468164Z	  
2025-09-16T23:45:56.468784Z	      },
2025-09-16T23:45:56.46894Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-16T23:45:56.469107Z	    }
2025-09-16T23:45:56.469348Z	  
2025-09-16T23:45:56.469697Z	Query parameters: {
2025-09-16T23:45:56.469947Z	  limit: 4,
2025-09-16T23:45:56.470366Z	  offset: 0,
2025-09-16T23:45:56.471385Z	  targetMarket: undefined,
2025-09-16T23:45:56.471555Z	  brand: 'pi',
2025-09-16T23:45:56.471706Z	  featured: undefined
2025-09-16T23:45:56.471831Z	}
2025-09-16T23:45:56.471953Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-16T23:45:56.472088Z	Fetching products with query: 
2025-09-16T23:45:56.472202Z	    {
2025-09-16T23:45:56.472303Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:56.472412Z	        
2025-09-16T23:45:56.47252Z	    _id,
2025-09-16T23:45:56.472629Z	    _type,
2025-09-16T23:45:56.472753Z	    partNumber,
2025-09-16T23:45:56.472857Z	    "slug": slug.current,
2025-09-16T23:45:56.47297Z	    title,
2025-09-16T23:45:56.473085Z	    shortDescription,
2025-09-16T23:45:56.473182Z	    image,
2025-09-16T23:45:56.473277Z	    brand->{
2025-09-16T23:45:56.474855Z	      name,
2025-09-16T23:45:56.475133Z	      "slug": slug.current,
2025-09-16T23:45:56.475637Z	      logo
2025-09-16T23:45:56.475873Z	    },
2025-09-16T23:45:56.476032Z	    category->{
2025-09-16T23:45:56.476203Z	      name,
2025-09-16T23:45:56.476374Z	      "slug": slug.current
2025-09-16T23:45:56.476555Z	    },
2025-09-16T23:45:56.52394Z	    pricing{
2025-09-16T23:45:56.524537Z	      currency,
2025-09-16T23:45:56.524834Z	      tiers[]{
2025-09-16T23:45:56.52502Z	        quantity,
2025-09-16T23:45:56.525195Z	        price,
2025-09-16T23:45:56.525346Z	        unit
2025-09-16T23:45:56.525469Z	      },
2025-09-16T23:45:56.525581Z	      moq,
2025-09-16T23:45:56.525709Z	      leadTime,
2025-09-16T23:45:56.525842Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:56.525955Z	      "price": tiers[0].price,
2025-09-16T23:45:56.52606Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:56.5262Z	    },
2025-09-16T23:45:56.526341Z	    inventory{
2025-09-16T23:45:56.52645Z	      quantity,
2025-09-16T23:45:56.526559Z	      status,
2025-09-16T23:45:56.52666Z	      warehouse,
2025-09-16T23:45:56.526787Z	      lastUpdated,
2025-09-16T23:45:56.526914Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:56.527033Z	      "inStock": status == "in_stock",
2025-09-16T23:45:56.527146Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:56.5273Z	    },
2025-09-16T23:45:56.527405Z	    isActive,
2025-09-16T23:45:56.527703Z	    isFeatured,
2025-09-16T23:45:56.538822Z	    isNew,
2025-09-16T23:45:56.539058Z	    _createdAt,
2025-09-16T23:45:56.539168Z	    _updatedAt
2025-09-16T23:45:56.539285Z	  
2025-09-16T23:45:56.539389Z	      },
2025-09-16T23:45:56.539488Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-16T23:45:56.539598Z	    }
2025-09-16T23:45:56.539723Z	  
2025-09-16T23:45:56.539829Z	Query parameters: {
2025-09-16T23:45:56.53994Z	  limit: 8,
2025-09-16T23:45:56.540025Z	  offset: 0,
2025-09-16T23:45:56.540111Z	  category: undefined,
2025-09-16T23:45:56.540227Z	  brand: 'ixys',
2025-09-16T23:45:56.540321Z	  featured: undefined
2025-09-16T23:45:56.540921Z	}
2025-09-16T23:45:56.541023Z	Fetching solutions with query: 
2025-09-16T23:45:56.541104Z	    {
2025-09-16T23:45:56.54119Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:56.541281Z	        
2025-09-16T23:45:56.541379Z	    _id,
2025-09-16T23:45:56.541479Z	    title,
2025-09-16T23:45:56.541573Z	    "slug": slug.current,
2025-09-16T23:45:56.541699Z	    summary,
2025-09-16T23:45:56.541811Z	    description,
2025-09-16T23:45:56.54191Z	    coverImage,
2025-09-16T23:45:56.541998Z	    primaryBrand->{
2025-09-16T23:45:56.54208Z	      _id,
2025-09-16T23:45:56.542177Z	      name,
2025-09-16T23:45:56.542278Z	      "slug": slug.current,
2025-09-16T23:45:56.542413Z	      logo
2025-09-16T23:45:56.542524Z	    },
2025-09-16T23:45:56.542637Z	    relatedBrands[]->{
2025-09-16T23:45:56.542765Z	      _id,
2025-09-16T23:45:56.542862Z	      name,
2025-09-16T23:45:56.543003Z	      "slug": slug.current,
2025-09-16T23:45:56.543103Z	      logo
2025-09-16T23:45:56.543208Z	    },
2025-09-16T23:45:56.543297Z	    targetMarket,
2025-09-16T23:45:56.543449Z	    complexity,
2025-09-16T23:45:56.54365Z	    publishedAt,
2025-09-16T23:45:56.543793Z	    isPublished,
2025-09-16T23:45:56.543902Z	    isFeatured,
2025-09-16T23:45:56.544024Z	    viewCount,
2025-09-16T23:45:56.544137Z	    _createdAt,
2025-09-16T23:45:56.544245Z	    _updatedAt
2025-09-16T23:45:56.544354Z	  
2025-09-16T23:45:56.544567Z	      },
2025-09-16T23:45:56.545161Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-16T23:45:56.545301Z	    }
2025-09-16T23:45:56.546118Z	  
2025-09-16T23:45:56.546323Z	Query parameters: {
2025-09-16T23:45:56.546665Z	  limit: 4,
2025-09-16T23:45:56.54742Z	  offset: 0,
2025-09-16T23:45:56.547917Z	  targetMarket: undefined,
2025-09-16T23:45:56.548377Z	  brand: 'ixys',
2025-09-16T23:45:56.548932Z	  featured: undefined
2025-09-16T23:45:56.549338Z	}
2025-09-16T23:45:56.549897Z	✅ [getBrandData] Found brand: LEM
2025-09-16T23:45:56.550301Z	Products fetch result: {
2025-09-16T23:45:56.550689Z	  totalProducts: 3,
2025-09-16T23:45:56.551317Z	  fetchedProducts: 3,
2025-09-16T23:45:56.552411Z	  firstProduct: {
2025-09-16T23:45:56.554245Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-16T23:45:56.554412Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-16T23:45:56.554562Z	    _type: 'product',
2025-09-16T23:45:56.554983Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-16T23:45:56.555103Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-16T23:45:56.555214Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-16T23:45:56.555348Z	    image: null,
2025-09-16T23:45:56.55546Z	    inventory: {
2025-09-16T23:45:56.555567Z	      inStock: true,
2025-09-16T23:45:56.55735Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-16T23:45:56.558253Z	      quantity: 0,
2025-09-16T23:45:56.558456Z	      status: 'in_stock',
2025-09-16T23:45:56.558623Z	      warehouse: null
2025-09-16T23:45:56.558793Z	    },
2025-09-16T23:45:56.559059Z	    isActive: true,
2025-09-16T23:45:56.559259Z	    isFeatured: false,
2025-09-16T23:45:56.55942Z	    isNew: false,
2025-09-16T23:45:56.559644Z	    partNumber: 'la55-p',
2025-09-16T23:45:56.559838Z	    pricing: {
2025-09-16T23:45:56.5601Z	      currency: 'CNY',
2025-09-16T23:45:56.560182Z	      leadTime: null,
2025-09-16T23:45:56.560358Z	      moq: null,
2025-09-16T23:45:56.560467Z	      price: null,
2025-09-16T23:45:56.560778Z	      tiers: null
2025-09-16T23:45:56.560865Z	    },
2025-09-16T23:45:56.560937Z	    shortDescription: '电流传感器la55-p',
2025-09-16T23:45:56.560997Z	    slug: 'la55-p',
2025-09-16T23:45:56.561104Z	    title: '电流传感器la55-p'
2025-09-16T23:45:56.561659Z	  }
2025-09-16T23:45:56.562109Z	}
2025-09-16T23:45:56.563782Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:56.564157Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:45:56.564407Z	Fetching products with query: 
2025-09-16T23:45:56.568485Z	    {
2025-09-16T23:45:56.568788Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:56.568969Z	        
2025-09-16T23:45:56.569183Z	    _id,
2025-09-16T23:45:56.569312Z	    _type,
2025-09-16T23:45:56.574114Z	    partNumber,
2025-09-16T23:45:56.574287Z	    "slug": slug.current,
2025-09-16T23:45:56.574389Z	    title,
2025-09-16T23:45:56.57448Z	    shortDescription,
2025-09-16T23:45:56.574568Z	    image,
2025-09-16T23:45:56.574652Z	    brand->{
2025-09-16T23:45:56.574777Z	      name,
2025-09-16T23:45:56.574878Z	      "slug": slug.current,
2025-09-16T23:45:56.574979Z	      logo
2025-09-16T23:45:56.575077Z	    },
2025-09-16T23:45:56.575171Z	    category->{
2025-09-16T23:45:56.575266Z	      name,
2025-09-16T23:45:56.575367Z	      "slug": slug.current
2025-09-16T23:45:56.575456Z	    },
2025-09-16T23:45:56.575538Z	    pricing{
2025-09-16T23:45:56.575627Z	      currency,
2025-09-16T23:45:56.575755Z	      tiers[]{
2025-09-16T23:45:56.575855Z	        quantity,
2025-09-16T23:45:56.575945Z	        price,
2025-09-16T23:45:56.576041Z	        unit
2025-09-16T23:45:56.576128Z	      },
2025-09-16T23:45:56.576944Z	      moq,
2025-09-16T23:45:56.577088Z	      leadTime,
2025-09-16T23:45:56.577202Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:56.577343Z	      "price": tiers[0].price,
2025-09-16T23:45:56.578089Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:56.578229Z	    },
2025-09-16T23:45:56.57859Z	    inventory{
2025-09-16T23:45:56.578931Z	      quantity,
2025-09-16T23:45:56.579052Z	      status,
2025-09-16T23:45:56.579161Z	      warehouse,
2025-09-16T23:45:56.592004Z	      lastUpdated,
2025-09-16T23:45:56.592153Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:56.592248Z	      "inStock": status == "in_stock",
2025-09-16T23:45:56.592338Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:56.592444Z	    },
2025-09-16T23:45:56.592545Z	    isActive,
2025-09-16T23:45:56.592646Z	    isFeatured,
2025-09-16T23:45:56.592768Z	    isNew,
2025-09-16T23:45:56.592869Z	    _createdAt,
2025-09-16T23:45:56.592961Z	    _updatedAt
2025-09-16T23:45:56.59305Z	  
2025-09-16T23:45:56.593148Z	      },
2025-09-16T23:45:56.593238Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:45:56.593339Z	    }
2025-09-16T23:45:56.593439Z	  
2025-09-16T23:45:56.593524Z	Query parameters: {
2025-09-16T23:45:56.593609Z	  limit: 8,
2025-09-16T23:45:56.593938Z	  offset: 0,
2025-09-16T23:45:56.594063Z	  category: undefined,
2025-09-16T23:45:56.594164Z	  brand: 'qualcomm',
2025-09-16T23:45:56.594256Z	  featured: undefined
2025-09-16T23:45:56.594347Z	}
2025-09-16T23:45:56.594467Z	Fetching solutions with query: 
2025-09-16T23:45:56.594562Z	    {
2025-09-16T23:45:56.594665Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:56.624899Z	        
2025-09-16T23:45:56.625279Z	    _id,
2025-09-16T23:45:56.625426Z	    title,
2025-09-16T23:45:56.625533Z	    "slug": slug.current,
2025-09-16T23:45:56.625873Z	    summary,
2025-09-16T23:45:56.626006Z	    description,
2025-09-16T23:45:56.626103Z	    coverImage,
2025-09-16T23:45:56.626422Z	    primaryBrand->{
2025-09-16T23:45:56.626593Z	      _id,
2025-09-16T23:45:56.626795Z	      name,
2025-09-16T23:45:56.626919Z	      "slug": slug.current,
2025-09-16T23:45:56.627035Z	      logo
2025-09-16T23:45:56.62715Z	    },
2025-09-16T23:45:56.627263Z	    relatedBrands[]->{
2025-09-16T23:45:56.627379Z	      _id,
2025-09-16T23:45:56.627516Z	      name,
2025-09-16T23:45:56.627669Z	      "slug": slug.current,
2025-09-16T23:45:56.627905Z	      logo
2025-09-16T23:45:56.628379Z	    },
2025-09-16T23:45:56.628569Z	    targetMarket,
2025-09-16T23:45:56.628941Z	    complexity,
2025-09-16T23:45:56.629069Z	    publishedAt,
2025-09-16T23:45:56.629193Z	    isPublished,
2025-09-16T23:45:56.629317Z	    isFeatured,
2025-09-16T23:45:56.629424Z	    viewCount,
2025-09-16T23:45:56.629759Z	    _createdAt,
2025-09-16T23:45:56.629907Z	    _updatedAt
2025-09-16T23:45:56.632881Z	  
2025-09-16T23:45:56.633006Z	      },
2025-09-16T23:45:56.633294Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:45:56.633563Z	    }
2025-09-16T23:45:56.633719Z	  
2025-09-16T23:45:56.633827Z	Query parameters: {
2025-09-16T23:45:56.633921Z	  limit: 4,
2025-09-16T23:45:56.634007Z	  offset: 0,
2025-09-16T23:45:56.63409Z	  targetMarket: undefined,
2025-09-16T23:45:56.63418Z	  brand: 'qualcomm',
2025-09-16T23:45:56.634267Z	  featured: undefined
2025-09-16T23:45:56.634358Z	}
2025-09-16T23:45:56.634484Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:45:56.634616Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:56.634779Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:56.634922Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:45:56.635045Z	Fetching products with query: 
2025-09-16T23:45:56.635176Z	    {
2025-09-16T23:45:56.635297Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:56.635403Z	        
2025-09-16T23:45:56.635501Z	    _id,
2025-09-16T23:45:56.635669Z	    _type,
2025-09-16T23:45:56.635801Z	    partNumber,
2025-09-16T23:45:56.635954Z	    "slug": slug.current,
2025-09-16T23:45:56.636069Z	    title,
2025-09-16T23:45:56.636162Z	    shortDescription,
2025-09-16T23:45:56.636255Z	    image,
2025-09-16T23:45:56.636371Z	    brand->{
2025-09-16T23:45:56.636469Z	      name,
2025-09-16T23:45:56.636568Z	      "slug": slug.current,
2025-09-16T23:45:56.636668Z	      logo
2025-09-16T23:45:56.636791Z	    },
2025-09-16T23:45:56.636886Z	    category->{
2025-09-16T23:45:56.63698Z	      name,
2025-09-16T23:45:56.637069Z	      "slug": slug.current
2025-09-16T23:45:56.63716Z	    },
2025-09-16T23:45:56.637259Z	    pricing{
2025-09-16T23:45:56.63736Z	      currency,
2025-09-16T23:45:56.637463Z	      tiers[]{
2025-09-16T23:45:56.637564Z	        quantity,
2025-09-16T23:45:56.63766Z	        price,
2025-09-16T23:45:56.637781Z	        unit
2025-09-16T23:45:56.637884Z	      },
2025-09-16T23:45:56.637971Z	      moq,
2025-09-16T23:45:56.638063Z	      leadTime,
2025-09-16T23:45:56.63816Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:56.638254Z	      "price": tiers[0].price,
2025-09-16T23:45:56.638344Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:56.638431Z	    },
2025-09-16T23:45:56.638545Z	    inventory{
2025-09-16T23:45:56.638635Z	      quantity,
2025-09-16T23:45:56.638756Z	      status,
2025-09-16T23:45:56.638857Z	      warehouse,
2025-09-16T23:45:56.63895Z	      lastUpdated,
2025-09-16T23:45:56.639044Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:56.639138Z	      "inStock": status == "in_stock",
2025-09-16T23:45:56.639252Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:56.639348Z	    },
2025-09-16T23:45:56.639433Z	    isActive,
2025-09-16T23:45:56.639523Z	    isFeatured,
2025-09-16T23:45:56.639612Z	    isNew,
2025-09-16T23:45:56.639726Z	    _createdAt,
2025-09-16T23:45:56.639839Z	    _updatedAt
2025-09-16T23:45:56.639945Z	  
2025-09-16T23:45:56.640042Z	      },
2025-09-16T23:45:56.640158Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:45:56.640269Z	    }
2025-09-16T23:45:56.640369Z	  
2025-09-16T23:45:56.640466Z	Query parameters: {
2025-09-16T23:45:56.640556Z	  limit: 8,
2025-09-16T23:45:56.640748Z	  offset: 0,
2025-09-16T23:45:56.640884Z	  category: undefined,
2025-09-16T23:45:56.641007Z	  brand: 'qualcomm',
2025-09-16T23:45:56.641111Z	  featured: undefined
2025-09-16T23:45:56.64121Z	}
2025-09-16T23:45:56.641307Z	Fetching solutions with query: 
2025-09-16T23:45:56.641407Z	    {
2025-09-16T23:45:56.641518Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:56.641624Z	        
2025-09-16T23:45:56.641748Z	    _id,
2025-09-16T23:45:56.641848Z	    title,
2025-09-16T23:45:56.641939Z	    "slug": slug.current,
2025-09-16T23:45:56.642033Z	    summary,
2025-09-16T23:45:56.642124Z	    description,
2025-09-16T23:45:56.642227Z	    coverImage,
2025-09-16T23:45:56.642316Z	    primaryBrand->{
2025-09-16T23:45:56.642404Z	      _id,
2025-09-16T23:45:56.642493Z	      name,
2025-09-16T23:45:56.642585Z	      "slug": slug.current,
2025-09-16T23:45:56.642697Z	      logo
2025-09-16T23:45:56.642795Z	    },
2025-09-16T23:45:56.642895Z	    relatedBrands[]->{
2025-09-16T23:45:56.642989Z	      _id,
2025-09-16T23:45:56.643086Z	      name,
2025-09-16T23:45:56.64318Z	      "slug": slug.current,
2025-09-16T23:45:56.643339Z	      logo
2025-09-16T23:45:56.643617Z	    },
2025-09-16T23:45:56.64381Z	    targetMarket,
2025-09-16T23:45:56.643926Z	    complexity,
2025-09-16T23:45:56.644034Z	    publishedAt,
2025-09-16T23:45:56.644134Z	    isPublished,
2025-09-16T23:45:56.644232Z	    isFeatured,
2025-09-16T23:45:56.644328Z	    viewCount,
2025-09-16T23:45:56.644437Z	    _createdAt,
2025-09-16T23:45:56.644739Z	    _updatedAt
2025-09-16T23:45:56.644892Z	  
2025-09-16T23:45:56.645041Z	      },
2025-09-16T23:45:56.645219Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:45:56.647278Z	    }
2025-09-16T23:45:56.647478Z	  
2025-09-16T23:45:56.647621Z	Query parameters: {
2025-09-16T23:45:56.64777Z	  limit: 4,
2025-09-16T23:45:56.647887Z	  offset: 0,
2025-09-16T23:45:56.647995Z	  targetMarket: undefined,
2025-09-16T23:45:56.648107Z	  brand: 'qualcomm',
2025-09-16T23:45:56.648211Z	  featured: undefined
2025-09-16T23:45:56.648313Z	}
2025-09-16T23:45:56.648416Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:45:56.648519Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:56.648626Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:56.648744Z	✅ [getBrandData] Found brand: MediaTek
2025-09-16T23:45:56.648852Z	✅ [getBrandData] Found brand: MediaTek
2025-09-16T23:45:56.648949Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:56.649045Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:56.649166Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:56.649272Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:56.649373Z	✅ [getBrandData] Found brand: PI
2025-09-16T23:45:56.649477Z	✅ [getBrandData] Found brand: PI
2025-09-16T23:45:56.649579Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:56.649722Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:56.649825Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:56.649925Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:56.65002Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:56.65012Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:56.650216Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-16T23:45:56.650326Z	Fetching products with query: 
2025-09-16T23:45:56.650444Z	    {
2025-09-16T23:45:56.650563Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:56.650727Z	        
2025-09-16T23:45:56.650839Z	    _id,
2025-09-16T23:45:56.650935Z	    _type,
2025-09-16T23:45:56.651027Z	    partNumber,
2025-09-16T23:45:56.651757Z	    "slug": slug.current,
2025-09-16T23:45:56.651963Z	    title,
2025-09-16T23:45:56.652113Z	    shortDescription,
2025-09-16T23:45:56.652255Z	    image,
2025-09-16T23:45:56.652395Z	    brand->{
2025-09-16T23:45:56.652943Z	      name,
2025-09-16T23:45:56.653224Z	      "slug": slug.current,
2025-09-16T23:45:56.653393Z	      logo
2025-09-16T23:45:56.654035Z	    },
2025-09-16T23:45:56.654168Z	    category->{
2025-09-16T23:45:56.65425Z	      name,
2025-09-16T23:45:56.654327Z	      "slug": slug.current
2025-09-16T23:45:56.6544Z	    },
2025-09-16T23:45:56.654572Z	    pricing{
2025-09-16T23:45:56.654705Z	      currency,
2025-09-16T23:45:56.654876Z	      tiers[]{
2025-09-16T23:45:56.654982Z	        quantity,
2025-09-16T23:45:56.655145Z	        price,
2025-09-16T23:45:56.655259Z	        unit
2025-09-16T23:45:56.655355Z	      },
2025-09-16T23:45:56.655444Z	      moq,
2025-09-16T23:45:56.655539Z	      leadTime,
2025-09-16T23:45:56.656045Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:56.656199Z	      "price": tiers[0].price,
2025-09-16T23:45:56.656337Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:56.656527Z	    },
2025-09-16T23:45:56.656643Z	    inventory{
2025-09-16T23:45:56.656803Z	      quantity,
2025-09-16T23:45:56.656916Z	      status,
2025-09-16T23:45:56.657263Z	      warehouse,
2025-09-16T23:45:56.657405Z	      lastUpdated,
2025-09-16T23:45:56.657766Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:56.657978Z	      "inStock": status == "in_stock",
2025-09-16T23:45:56.65826Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:56.65841Z	    },
2025-09-16T23:45:56.658483Z	    isActive,
2025-09-16T23:45:56.658545Z	    isFeatured,
2025-09-16T23:45:56.658601Z	    isNew,
2025-09-16T23:45:56.65881Z	    _createdAt,
2025-09-16T23:45:56.659144Z	    _updatedAt
2025-09-16T23:45:56.659404Z	  
2025-09-16T23:45:56.65987Z	      },
2025-09-16T23:45:56.660058Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-16T23:45:56.676463Z	    }
2025-09-16T23:45:56.676749Z	  
2025-09-16T23:45:56.676893Z	Query parameters: {
2025-09-16T23:45:56.677016Z	  limit: 8,
2025-09-16T23:45:56.677126Z	  offset: 0,
2025-09-16T23:45:56.677238Z	  category: undefined,
2025-09-16T23:45:56.677359Z	  brand: 'sanrex',
2025-09-16T23:45:56.677465Z	  featured: undefined
2025-09-16T23:45:56.677572Z	}
2025-09-16T23:45:56.677702Z	Fetching solutions with query: 
2025-09-16T23:45:56.677815Z	    {
2025-09-16T23:45:56.677929Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:56.678041Z	        
2025-09-16T23:45:56.678141Z	    _id,
2025-09-16T23:45:56.678233Z	    title,
2025-09-16T23:45:56.678329Z	    "slug": slug.current,
2025-09-16T23:45:56.678426Z	    summary,
2025-09-16T23:45:56.678523Z	    description,
2025-09-16T23:45:56.678629Z	    coverImage,
2025-09-16T23:45:56.678781Z	    primaryBrand->{
2025-09-16T23:45:56.678895Z	      _id,
2025-09-16T23:45:56.678992Z	      name,
2025-09-16T23:45:56.679092Z	      "slug": slug.current,
2025-09-16T23:45:56.679199Z	      logo
2025-09-16T23:45:56.679336Z	    },
2025-09-16T23:45:56.67945Z	    relatedBrands[]->{
2025-09-16T23:45:56.67966Z	      _id,
2025-09-16T23:45:56.679817Z	      name,
2025-09-16T23:45:56.679928Z	      "slug": slug.current,
2025-09-16T23:45:56.680045Z	      logo
2025-09-16T23:45:56.680197Z	    },
2025-09-16T23:45:56.680304Z	    targetMarket,
2025-09-16T23:45:56.680436Z	    complexity,
2025-09-16T23:45:56.680585Z	    publishedAt,
2025-09-16T23:45:56.680764Z	    isPublished,
2025-09-16T23:45:56.680949Z	    isFeatured,
2025-09-16T23:45:56.681113Z	    viewCount,
2025-09-16T23:45:56.681269Z	    _createdAt,
2025-09-16T23:45:56.68302Z	    _updatedAt
2025-09-16T23:45:56.683192Z	  
2025-09-16T23:45:56.6833Z	      },
2025-09-16T23:45:56.683604Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-16T23:45:56.683845Z	    }
2025-09-16T23:45:56.684111Z	  
2025-09-16T23:45:56.686781Z	Query parameters: {
2025-09-16T23:45:56.686918Z	  limit: 4,
2025-09-16T23:45:56.687027Z	  offset: 0,
2025-09-16T23:45:56.687415Z	  targetMarket: undefined,
2025-09-16T23:45:56.687527Z	  brand: 'sanrex',
2025-09-16T23:45:56.687621Z	  featured: undefined
2025-09-16T23:45:56.68774Z	}
2025-09-16T23:45:56.687842Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-16T23:45:56.687959Z	Fetching products with query: 
2025-09-16T23:45:56.688055Z	    {
2025-09-16T23:45:56.688153Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:56.688249Z	        
2025-09-16T23:45:56.688343Z	    _id,
2025-09-16T23:45:56.688444Z	    _type,
2025-09-16T23:45:56.688543Z	    partNumber,
2025-09-16T23:45:56.688641Z	    "slug": slug.current,
2025-09-16T23:45:56.689154Z	    title,
2025-09-16T23:45:56.689273Z	    shortDescription,
2025-09-16T23:45:56.689399Z	    image,
2025-09-16T23:45:56.689493Z	    brand->{
2025-09-16T23:45:56.689637Z	      name,
2025-09-16T23:45:56.724783Z	      "slug": slug.current,
2025-09-16T23:45:56.725438Z	      logo
2025-09-16T23:45:56.725582Z	    },
2025-09-16T23:45:56.725969Z	    category->{
2025-09-16T23:45:56.7261Z	      name,
2025-09-16T23:45:56.72621Z	      "slug": slug.current
2025-09-16T23:45:56.726414Z	    },
2025-09-16T23:45:56.726694Z	    pricing{
2025-09-16T23:45:56.727019Z	      currency,
2025-09-16T23:45:56.727168Z	      tiers[]{
2025-09-16T23:45:56.727275Z	        quantity,
2025-09-16T23:45:56.727376Z	        price,
2025-09-16T23:45:56.727521Z	        unit
2025-09-16T23:45:56.727641Z	      },
2025-09-16T23:45:56.727784Z	      moq,
2025-09-16T23:45:56.727944Z	      leadTime,
2025-09-16T23:45:56.728171Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:56.728401Z	      "price": tiers[0].price,
2025-09-16T23:45:56.72856Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:56.728685Z	    },
2025-09-16T23:45:56.728961Z	    inventory{
2025-09-16T23:45:56.72909Z	      quantity,
2025-09-16T23:45:56.729238Z	      status,
2025-09-16T23:45:56.729391Z	      warehouse,
2025-09-16T23:45:56.729512Z	      lastUpdated,
2025-09-16T23:45:56.729621Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:56.729766Z	      "inStock": status == "in_stock",
2025-09-16T23:45:56.730067Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:56.730264Z	    },
2025-09-16T23:45:56.730376Z	    isActive,
2025-09-16T23:45:56.730483Z	    isFeatured,
2025-09-16T23:45:56.730583Z	    isNew,
2025-09-16T23:45:56.730696Z	    _createdAt,
2025-09-16T23:45:56.730855Z	    _updatedAt
2025-09-16T23:45:56.730982Z	  
2025-09-16T23:45:56.73114Z	      },
2025-09-16T23:45:56.731323Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-16T23:45:56.731467Z	    }
2025-09-16T23:45:56.731586Z	  
2025-09-16T23:45:56.731724Z	Query parameters: {
2025-09-16T23:45:56.731835Z	  limit: 8,
2025-09-16T23:45:56.731943Z	  offset: 0,
2025-09-16T23:45:56.732046Z	  category: undefined,
2025-09-16T23:45:56.732157Z	  brand: 'sanrex',
2025-09-16T23:45:56.732261Z	  featured: undefined
2025-09-16T23:45:56.732373Z	}
2025-09-16T23:45:56.732487Z	Fetching solutions with query: 
2025-09-16T23:45:56.732616Z	    {
2025-09-16T23:45:56.732791Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:56.732905Z	        
2025-09-16T23:45:56.732999Z	    _id,
2025-09-16T23:45:56.733094Z	    title,
2025-09-16T23:45:56.733199Z	    "slug": slug.current,
2025-09-16T23:45:56.733301Z	    summary,
2025-09-16T23:45:56.733404Z	    description,
2025-09-16T23:45:56.733541Z	    coverImage,
2025-09-16T23:45:56.733802Z	    primaryBrand->{
2025-09-16T23:45:56.733948Z	      _id,
2025-09-16T23:45:56.734062Z	      name,
2025-09-16T23:45:56.734191Z	      "slug": slug.current,
2025-09-16T23:45:56.734323Z	      logo
2025-09-16T23:45:56.734423Z	    },
2025-09-16T23:45:56.734619Z	    relatedBrands[]->{
2025-09-16T23:45:56.735402Z	      _id,
2025-09-16T23:45:56.735769Z	      name,
2025-09-16T23:45:56.735912Z	      "slug": slug.current,
2025-09-16T23:45:56.736256Z	      logo
2025-09-16T23:45:56.736594Z	    },
2025-09-16T23:45:56.736823Z	    targetMarket,
2025-09-16T23:45:56.736956Z	    complexity,
2025-09-16T23:45:56.737064Z	    publishedAt,
2025-09-16T23:45:56.737163Z	    isPublished,
2025-09-16T23:45:56.737269Z	    isFeatured,
2025-09-16T23:45:56.737378Z	    viewCount,
2025-09-16T23:45:56.737485Z	    _createdAt,
2025-09-16T23:45:56.737591Z	    _updatedAt
2025-09-16T23:45:56.737737Z	  
2025-09-16T23:45:56.737853Z	      },
2025-09-16T23:45:56.737972Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-16T23:45:56.738095Z	    }
2025-09-16T23:45:56.738194Z	  
2025-09-16T23:45:56.738288Z	Query parameters: {
2025-09-16T23:45:56.73838Z	  limit: 4,
2025-09-16T23:45:56.738478Z	  offset: 0,
2025-09-16T23:45:56.73858Z	  targetMarket: undefined,
2025-09-16T23:45:56.738788Z	  brand: 'sanrex',
2025-09-16T23:45:56.73891Z	  featured: undefined
2025-09-16T23:45:56.739018Z	}
2025-09-16T23:45:56.739558Z	✅ [getBrandData] Found brand: IXYS
2025-09-16T23:45:56.739753Z	✅ [getBrandData] Found brand: IXYS
2025-09-16T23:45:56.739877Z	Solutions fetch result: {
2025-09-16T23:45:56.739985Z	  totalSolutions: 1,
2025-09-16T23:45:56.740089Z	  fetchedSolutions: 1,
2025-09-16T23:45:56.740666Z	  firstSolution: {
2025-09-16T23:45:56.740815Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-16T23:45:56.746173Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-16T23:45:56.746401Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-16T23:45:56.746534Z	    complexity: 'medium',
2025-09-16T23:45:56.746714Z	    coverImage: null,
2025-09-16T23:45:56.748005Z	    description: [ [Object] ],
2025-09-16T23:45:56.748326Z	    isFeatured: false,
2025-09-16T23:45:56.748473Z	    isPublished: true,
2025-09-16T23:45:56.748672Z	    primaryBrand: {
2025-09-16T23:45:56.748814Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:45:56.748942Z	      logo: null,
2025-09-16T23:45:56.749065Z	      name: 'IXYS',
2025-09-16T23:45:56.749332Z	      slug: 'ixys'
2025-09-16T23:45:56.749632Z	    },
2025-09-16T23:45:56.749908Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-16T23:45:56.750177Z	    relatedBrands: null,
2025-09-16T23:45:56.750613Z	    slug: '99999',
2025-09-16T23:45:56.750766Z	    summary: '99999',
2025-09-16T23:45:56.750872Z	    targetMarket: 'industrial-automation',
2025-09-16T23:45:56.751062Z	    title: '99999',
2025-09-16T23:45:56.751178Z	    viewCount: 0
2025-09-16T23:45:56.751272Z	  }
2025-09-16T23:45:56.751362Z	}
2025-09-16T23:45:56.751461Z	Solutions fetch result: {
2025-09-16T23:45:56.751615Z	  totalSolutions: 1,
2025-09-16T23:45:56.751826Z	  fetchedSolutions: 1,
2025-09-16T23:45:56.75196Z	  firstSolution: {
2025-09-16T23:45:56.752088Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-16T23:45:56.752213Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-16T23:45:56.752348Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-16T23:45:56.752496Z	    complexity: 'medium',
2025-09-16T23:45:56.752604Z	    coverImage: null,
2025-09-16T23:45:56.752725Z	    description: [ [Object] ],
2025-09-16T23:45:56.752826Z	    isFeatured: false,
2025-09-16T23:45:56.75294Z	    isPublished: true,
2025-09-16T23:45:56.753036Z	    primaryBrand: {
2025-09-16T23:45:56.753136Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:45:56.753278Z	      logo: null,
2025-09-16T23:45:56.753448Z	      name: 'IXYS',
2025-09-16T23:45:56.753559Z	      slug: 'ixys'
2025-09-16T23:45:56.753649Z	    },
2025-09-16T23:45:56.75377Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-16T23:45:56.753915Z	    relatedBrands: null,
2025-09-16T23:45:56.754087Z	    slug: '99999',
2025-09-16T23:45:56.754201Z	    summary: '99999',
2025-09-16T23:45:56.754434Z	    targetMarket: 'industrial-automation',
2025-09-16T23:45:56.754563Z	    title: '99999',
2025-09-16T23:45:56.754699Z	    viewCount: 0
2025-09-16T23:45:56.754819Z	  }
2025-09-16T23:45:56.75493Z	}
2025-09-16T23:45:56.755055Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-16T23:45:56.755178Z	Fetching products with query: 
2025-09-16T23:45:56.755292Z	    {
2025-09-16T23:45:56.755409Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:56.755529Z	        
2025-09-16T23:45:56.755631Z	    _id,
2025-09-16T23:45:56.755762Z	    _type,
2025-09-16T23:45:56.755863Z	    partNumber,
2025-09-16T23:45:56.755958Z	    "slug": slug.current,
2025-09-16T23:45:56.756051Z	    title,
2025-09-16T23:45:56.756145Z	    shortDescription,
2025-09-16T23:45:56.756293Z	    image,
2025-09-16T23:45:56.756393Z	    brand->{
2025-09-16T23:45:56.75649Z	      name,
2025-09-16T23:45:56.756579Z	      "slug": slug.current,
2025-09-16T23:45:56.756669Z	      logo
2025-09-16T23:45:56.756788Z	    },
2025-09-16T23:45:56.756882Z	    category->{
2025-09-16T23:45:56.756973Z	      name,
2025-09-16T23:45:56.757075Z	      "slug": slug.current
2025-09-16T23:45:56.757173Z	    },
2025-09-16T23:45:56.757267Z	    pricing{
2025-09-16T23:45:56.757364Z	      currency,
2025-09-16T23:45:56.75747Z	      tiers[]{
2025-09-16T23:45:56.757561Z	        quantity,
2025-09-16T23:45:56.757651Z	        price,
2025-09-16T23:45:56.757806Z	        unit
2025-09-16T23:45:56.757991Z	      },
2025-09-16T23:45:56.758116Z	      moq,
2025-09-16T23:45:56.758345Z	      leadTime,
2025-09-16T23:45:56.758489Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:56.758643Z	      "price": tiers[0].price,
2025-09-16T23:45:56.758785Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:56.758899Z	    },
2025-09-16T23:45:56.759031Z	    inventory{
2025-09-16T23:45:56.759135Z	      quantity,
2025-09-16T23:45:56.759268Z	      status,
2025-09-16T23:45:56.759465Z	      warehouse,
2025-09-16T23:45:56.760221Z	      lastUpdated,
2025-09-16T23:45:56.760389Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:56.760898Z	      "inStock": status == "in_stock",
2025-09-16T23:45:56.761256Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:56.761379Z	    },
2025-09-16T23:45:56.767793Z	    isActive,
2025-09-16T23:45:56.768009Z	    isFeatured,
2025-09-16T23:45:56.768119Z	    isNew,
2025-09-16T23:45:56.768217Z	    _createdAt,
2025-09-16T23:45:56.768389Z	    _updatedAt
2025-09-16T23:45:56.768562Z	  
2025-09-16T23:45:56.768688Z	      },
2025-09-16T23:45:56.768835Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-16T23:45:56.769326Z	    }
2025-09-16T23:45:56.769499Z	  
2025-09-16T23:45:56.769605Z	Query parameters: {
2025-09-16T23:45:56.769719Z	  limit: 8,
2025-09-16T23:45:56.769902Z	  offset: 0,
2025-09-16T23:45:56.770009Z	  category: undefined,
2025-09-16T23:45:56.770112Z	  brand: 'semikron',
2025-09-16T23:45:56.770214Z	  featured: undefined
2025-09-16T23:45:56.770329Z	}
2025-09-16T23:45:56.770447Z	Fetching solutions with query: 
2025-09-16T23:45:56.770558Z	    {
2025-09-16T23:45:56.770665Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:56.770832Z	        
2025-09-16T23:45:56.771168Z	    _id,
2025-09-16T23:45:56.771422Z	    title,
2025-09-16T23:45:56.771542Z	    "slug": slug.current,
2025-09-16T23:45:56.771696Z	    summary,
2025-09-16T23:45:56.771839Z	    description,
2025-09-16T23:45:56.771962Z	    coverImage,
2025-09-16T23:45:56.772121Z	    primaryBrand->{
2025-09-16T23:45:56.772269Z	      _id,
2025-09-16T23:45:56.772383Z	      name,
2025-09-16T23:45:56.772613Z	      "slug": slug.current,
2025-09-16T23:45:56.772838Z	      logo
2025-09-16T23:45:56.772993Z	    },
2025-09-16T23:45:56.773137Z	    relatedBrands[]->{
2025-09-16T23:45:56.773289Z	      _id,
2025-09-16T23:45:56.773399Z	      name,
2025-09-16T23:45:56.773524Z	      "slug": slug.current,
2025-09-16T23:45:56.773657Z	      logo
2025-09-16T23:45:56.773796Z	    },
2025-09-16T23:45:56.773924Z	    targetMarket,
2025-09-16T23:45:56.774036Z	    complexity,
2025-09-16T23:45:56.77416Z	    publishedAt,
2025-09-16T23:45:56.774291Z	    isPublished,
2025-09-16T23:45:56.774414Z	    isFeatured,
2025-09-16T23:45:56.77454Z	    viewCount,
2025-09-16T23:45:56.774658Z	    _createdAt,
2025-09-16T23:45:56.774787Z	    _updatedAt
2025-09-16T23:45:56.774896Z	  
2025-09-16T23:45:56.775038Z	      },
2025-09-16T23:45:56.775194Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-16T23:45:56.775348Z	    }
2025-09-16T23:45:56.775631Z	  
2025-09-16T23:45:56.776016Z	Query parameters: {
2025-09-16T23:45:56.776201Z	  limit: 4,
2025-09-16T23:45:56.776338Z	  offset: 0,
2025-09-16T23:45:56.776486Z	  targetMarket: undefined,
2025-09-16T23:45:56.776764Z	  brand: 'semikron',
2025-09-16T23:45:56.776961Z	  featured: undefined
2025-09-16T23:45:56.77713Z	}
2025-09-16T23:45:56.77732Z	✅ [getBrandData] Found brand: Sanrex
2025-09-16T23:45:56.777464Z	✅ [getBrandData] Found brand: Sanrex
2025-09-16T23:45:56.777599Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:56.777739Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:56.777852Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-16T23:45:56.778037Z	Fetching products with query: 
2025-09-16T23:45:56.778158Z	    {
2025-09-16T23:45:56.778322Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:56.778411Z	        
2025-09-16T23:45:56.778631Z	    _id,
2025-09-16T23:45:56.778849Z	    _type,
2025-09-16T23:45:56.779044Z	    partNumber,
2025-09-16T23:45:56.779193Z	    "slug": slug.current,
2025-09-16T23:45:56.779319Z	    title,
2025-09-16T23:45:56.779424Z	    shortDescription,
2025-09-16T23:45:56.779529Z	    image,
2025-09-16T23:45:56.779645Z	    brand->{
2025-09-16T23:45:56.779773Z	      name,
2025-09-16T23:45:56.779876Z	      "slug": slug.current,
2025-09-16T23:45:56.780031Z	      logo
2025-09-16T23:45:56.780156Z	    },
2025-09-16T23:45:56.780256Z	    category->{
2025-09-16T23:45:56.780348Z	      name,
2025-09-16T23:45:56.78045Z	      "slug": slug.current
2025-09-16T23:45:56.780549Z	    },
2025-09-16T23:45:56.780666Z	    pricing{
2025-09-16T23:45:56.780797Z	      currency,
2025-09-16T23:45:56.780904Z	      tiers[]{
2025-09-16T23:45:56.781302Z	        quantity,
2025-09-16T23:45:56.78145Z	        price,
2025-09-16T23:45:56.781755Z	        unit
2025-09-16T23:45:56.781882Z	      },
2025-09-16T23:45:56.781976Z	      moq,
2025-09-16T23:45:56.782095Z	      leadTime,
2025-09-16T23:45:56.782227Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:56.782375Z	      "price": tiers[0].price,
2025-09-16T23:45:56.782488Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:56.782591Z	    },
2025-09-16T23:45:56.782717Z	    inventory{
2025-09-16T23:45:56.782844Z	      quantity,
2025-09-16T23:45:56.78301Z	      status,
2025-09-16T23:45:56.783125Z	      warehouse,
2025-09-16T23:45:56.783286Z	      lastUpdated,
2025-09-16T23:45:56.783394Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:56.783491Z	      "inStock": status == "in_stock",
2025-09-16T23:45:56.783604Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:56.783748Z	    },
2025-09-16T23:45:56.783855Z	    isActive,
2025-09-16T23:45:56.783954Z	    isFeatured,
2025-09-16T23:45:56.784059Z	    isNew,
2025-09-16T23:45:56.784177Z	    _createdAt,
2025-09-16T23:45:56.784288Z	    _updatedAt
2025-09-16T23:45:56.784401Z	  
2025-09-16T23:45:56.824192Z	      },
2025-09-16T23:45:56.824321Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-16T23:45:56.82446Z	    }
2025-09-16T23:45:56.824603Z	  
2025-09-16T23:45:56.824754Z	Query parameters: {
2025-09-16T23:45:56.824881Z	  limit: 8,
2025-09-16T23:45:56.824998Z	  offset: 0,
2025-09-16T23:45:56.825136Z	  category: undefined,
2025-09-16T23:45:56.825242Z	  brand: '英飞凌',
2025-09-16T23:45:56.8254Z	  featured: undefined
2025-09-16T23:45:56.825519Z	}
2025-09-16T23:45:56.825624Z	Fetching solutions with query: 
2025-09-16T23:45:56.825791Z	    {
2025-09-16T23:45:56.8259Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:56.826113Z	        
2025-09-16T23:45:56.826266Z	    _id,
2025-09-16T23:45:56.826376Z	    title,
2025-09-16T23:45:56.826477Z	    "slug": slug.current,
2025-09-16T23:45:56.826689Z	    summary,
2025-09-16T23:45:56.826817Z	    description,
2025-09-16T23:45:56.826922Z	    coverImage,
2025-09-16T23:45:56.827027Z	    primaryBrand->{
2025-09-16T23:45:56.827134Z	      _id,
2025-09-16T23:45:56.827231Z	      name,
2025-09-16T23:45:56.827326Z	      "slug": slug.current,
2025-09-16T23:45:56.827417Z	      logo
2025-09-16T23:45:56.827513Z	    },
2025-09-16T23:45:56.827613Z	    relatedBrands[]->{
2025-09-16T23:45:56.827741Z	      _id,
2025-09-16T23:45:56.827832Z	      name,
2025-09-16T23:45:56.827918Z	      "slug": slug.current,
2025-09-16T23:45:56.828042Z	      logo
2025-09-16T23:45:56.82814Z	    },
2025-09-16T23:45:56.828251Z	    targetMarket,
2025-09-16T23:45:56.828357Z	    complexity,
2025-09-16T23:45:56.828461Z	    publishedAt,
2025-09-16T23:45:56.828572Z	    isPublished,
2025-09-16T23:45:56.828698Z	    isFeatured,
2025-09-16T23:45:56.828801Z	    viewCount,
2025-09-16T23:45:56.828894Z	    _createdAt,
2025-09-16T23:45:56.828967Z	    _updatedAt
2025-09-16T23:45:56.829023Z	  
2025-09-16T23:45:56.829123Z	      },
2025-09-16T23:45:56.829225Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-16T23:45:56.829345Z	    }
2025-09-16T23:45:56.829467Z	  
2025-09-16T23:45:56.829594Z	Query parameters: {
2025-09-16T23:45:56.829721Z	  limit: 4,
2025-09-16T23:45:56.829825Z	  offset: 0,
2025-09-16T23:45:56.829923Z	  targetMarket: undefined,
2025-09-16T23:45:56.830019Z	  brand: '英飞凌',
2025-09-16T23:45:56.830133Z	  featured: undefined
2025-09-16T23:45:56.830258Z	}
2025-09-16T23:45:56.830364Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:56.830465Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:56.830575Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-16T23:45:56.83073Z	Fetching products with query: 
2025-09-16T23:45:56.830853Z	    {
2025-09-16T23:45:56.830943Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:56.831049Z	        
2025-09-16T23:45:56.831125Z	    _id,
2025-09-16T23:45:56.831209Z	    _type,
2025-09-16T23:45:56.831304Z	    partNumber,
2025-09-16T23:45:56.83143Z	    "slug": slug.current,
2025-09-16T23:45:56.831528Z	    title,
2025-09-16T23:45:56.831623Z	    shortDescription,
2025-09-16T23:45:56.83173Z	    image,
2025-09-16T23:45:56.831803Z	    brand->{
2025-09-16T23:45:56.831884Z	      name,
2025-09-16T23:45:56.832094Z	      "slug": slug.current,
2025-09-16T23:45:56.832263Z	      logo
2025-09-16T23:45:56.832383Z	    },
2025-09-16T23:45:56.832494Z	    category->{
2025-09-16T23:45:56.832661Z	      name,
2025-09-16T23:45:56.832931Z	      "slug": slug.current
2025-09-16T23:45:56.833057Z	    },
2025-09-16T23:45:56.833168Z	    pricing{
2025-09-16T23:45:56.833269Z	      currency,
2025-09-16T23:45:56.833375Z	      tiers[]{
2025-09-16T23:45:56.833494Z	        quantity,
2025-09-16T23:45:56.833633Z	        price,
2025-09-16T23:45:56.833775Z	        unit
2025-09-16T23:45:56.833908Z	      },
2025-09-16T23:45:56.834011Z	      moq,
2025-09-16T23:45:56.834141Z	      leadTime,
2025-09-16T23:45:56.834379Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:56.834468Z	      "price": tiers[0].price,
2025-09-16T23:45:56.834646Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:56.834857Z	    },
2025-09-16T23:45:56.834931Z	    inventory{
2025-09-16T23:45:56.835037Z	      quantity,
2025-09-16T23:45:56.835229Z	      status,
2025-09-16T23:45:56.835685Z	      warehouse,
2025-09-16T23:45:56.835784Z	      lastUpdated,
2025-09-16T23:45:56.835989Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:56.836064Z	      "inStock": status == "in_stock",
2025-09-16T23:45:56.83625Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:56.83648Z	    },
2025-09-16T23:45:56.836616Z	    isActive,
2025-09-16T23:45:56.836827Z	    isFeatured,
2025-09-16T23:45:56.836957Z	    isNew,
2025-09-16T23:45:56.837083Z	    _createdAt,
2025-09-16T23:45:56.837221Z	    _updatedAt
2025-09-16T23:45:56.837571Z	  
2025-09-16T23:45:56.837717Z	      },
2025-09-16T23:45:56.837842Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-16T23:45:56.837959Z	    }
2025-09-16T23:45:56.838057Z	  
2025-09-16T23:45:56.838153Z	Query parameters: {
2025-09-16T23:45:56.838263Z	  limit: 8,
2025-09-16T23:45:56.838361Z	  offset: 0,
2025-09-16T23:45:56.838461Z	  category: undefined,
2025-09-16T23:45:56.83853Z	  brand: 'semikron',
2025-09-16T23:45:56.838587Z	  featured: undefined
2025-09-16T23:45:56.838652Z	}
2025-09-16T23:45:56.838739Z	Fetching solutions with query: 
2025-09-16T23:45:56.838807Z	    {
2025-09-16T23:45:56.838866Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:56.838925Z	        
2025-09-16T23:45:56.83898Z	    _id,
2025-09-16T23:45:56.839033Z	    title,
2025-09-16T23:45:56.83909Z	    "slug": slug.current,
2025-09-16T23:45:56.839145Z	    summary,
2025-09-16T23:45:56.839201Z	    description,
2025-09-16T23:45:56.839347Z	    coverImage,
2025-09-16T23:45:56.83953Z	    primaryBrand->{
2025-09-16T23:45:56.839662Z	      _id,
2025-09-16T23:45:56.839793Z	      name,
2025-09-16T23:45:56.839913Z	      "slug": slug.current,
2025-09-16T23:45:56.840027Z	      logo
2025-09-16T23:45:56.840103Z	    },
2025-09-16T23:45:56.840189Z	    relatedBrands[]->{
2025-09-16T23:45:56.840308Z	      _id,
2025-09-16T23:45:56.840431Z	      name,
2025-09-16T23:45:56.840548Z	      "slug": slug.current,
2025-09-16T23:45:56.84065Z	      logo
2025-09-16T23:45:56.840779Z	    },
2025-09-16T23:45:56.840903Z	    targetMarket,
2025-09-16T23:45:56.841011Z	    complexity,
2025-09-16T23:45:56.841109Z	    publishedAt,
2025-09-16T23:45:56.841208Z	    isPublished,
2025-09-16T23:45:56.841308Z	    isFeatured,
2025-09-16T23:45:56.8414Z	    viewCount,
2025-09-16T23:45:56.841506Z	    _createdAt,
2025-09-16T23:45:56.841602Z	    _updatedAt
2025-09-16T23:45:56.84175Z	  
2025-09-16T23:45:56.841828Z	      },
2025-09-16T23:45:56.841908Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-16T23:45:56.842014Z	    }
2025-09-16T23:45:56.842127Z	  
2025-09-16T23:45:56.842227Z	Query parameters: {
2025-09-16T23:45:56.84231Z	  limit: 4,
2025-09-16T23:45:56.842366Z	  offset: 0,
2025-09-16T23:45:56.842461Z	  targetMarket: undefined,
2025-09-16T23:45:56.842556Z	  brand: 'semikron',
2025-09-16T23:45:56.842652Z	  featured: undefined
2025-09-16T23:45:56.842753Z	}
2025-09-16T23:45:56.842861Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-16T23:45:56.842955Z	Fetching products with query: 
2025-09-16T23:45:56.843049Z	    {
2025-09-16T23:45:56.843146Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:56.84324Z	        
2025-09-16T23:45:56.843324Z	    _id,
2025-09-16T23:45:56.843406Z	    _type,
2025-09-16T23:45:56.843498Z	    partNumber,
2025-09-16T23:45:56.843579Z	    "slug": slug.current,
2025-09-16T23:45:56.843686Z	    title,
2025-09-16T23:45:56.843784Z	    shortDescription,
2025-09-16T23:45:56.84387Z	    image,
2025-09-16T23:45:56.843955Z	    brand->{
2025-09-16T23:45:56.844044Z	      name,
2025-09-16T23:45:56.844139Z	      "slug": slug.current,
2025-09-16T23:45:56.844221Z	      logo
2025-09-16T23:45:56.844319Z	    },
2025-09-16T23:45:56.844401Z	    category->{
2025-09-16T23:45:56.844499Z	      name,
2025-09-16T23:45:56.844598Z	      "slug": slug.current
2025-09-16T23:45:56.844706Z	    },
2025-09-16T23:45:56.844817Z	    pricing{
2025-09-16T23:45:56.844893Z	      currency,
2025-09-16T23:45:56.845045Z	      tiers[]{
2025-09-16T23:45:56.845147Z	        quantity,
2025-09-16T23:45:56.845233Z	        price,
2025-09-16T23:45:56.845334Z	        unit
2025-09-16T23:45:56.845576Z	      },
2025-09-16T23:45:56.845806Z	      moq,
2025-09-16T23:45:56.845914Z	      leadTime,
2025-09-16T23:45:56.846077Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:56.846205Z	      "price": tiers[0].price,
2025-09-16T23:45:56.84637Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:56.846513Z	    },
2025-09-16T23:45:56.846683Z	    inventory{
2025-09-16T23:45:56.846851Z	      quantity,
2025-09-16T23:45:56.846989Z	      status,
2025-09-16T23:45:56.847111Z	      warehouse,
2025-09-16T23:45:56.847225Z	      lastUpdated,
2025-09-16T23:45:56.847367Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:56.84751Z	      "inStock": status == "in_stock",
2025-09-16T23:45:56.84764Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:56.847784Z	    },
2025-09-16T23:45:56.847908Z	    isActive,
2025-09-16T23:45:56.84804Z	    isFeatured,
2025-09-16T23:45:56.848171Z	    isNew,
2025-09-16T23:45:56.848303Z	    _createdAt,
2025-09-16T23:45:56.84843Z	    _updatedAt
2025-09-16T23:45:56.848567Z	  
2025-09-16T23:45:56.848722Z	      },
2025-09-16T23:45:56.848803Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-16T23:45:56.84895Z	    }
2025-09-16T23:45:56.849036Z	  
2025-09-16T23:45:56.849118Z	Query parameters: {
2025-09-16T23:45:56.849233Z	  limit: 8,
2025-09-16T23:45:56.849356Z	  offset: 0,
2025-09-16T23:45:56.84947Z	  category: undefined,
2025-09-16T23:45:56.849565Z	  brand: '英飞凌',
2025-09-16T23:45:56.849734Z	  featured: undefined
2025-09-16T23:45:56.849857Z	}
2025-09-16T23:45:56.849967Z	Fetching solutions with query: 
2025-09-16T23:45:56.850101Z	    {
2025-09-16T23:45:56.850214Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:56.850327Z	        
2025-09-16T23:45:56.850459Z	    _id,
2025-09-16T23:45:56.850588Z	    title,
2025-09-16T23:45:56.850714Z	    "slug": slug.current,
2025-09-16T23:45:56.850835Z	    summary,
2025-09-16T23:45:56.850916Z	    description,
2025-09-16T23:45:56.850999Z	    coverImage,
2025-09-16T23:45:56.851107Z	    primaryBrand->{
2025-09-16T23:45:56.851216Z	      _id,
2025-09-16T23:45:56.851352Z	      name,
2025-09-16T23:45:56.85148Z	      "slug": slug.current,
2025-09-16T23:45:56.851603Z	      logo
2025-09-16T23:45:56.851729Z	    },
2025-09-16T23:45:56.851873Z	    relatedBrands[]->{
2025-09-16T23:45:56.852001Z	      _id,
2025-09-16T23:45:56.852114Z	      name,
2025-09-16T23:45:56.852223Z	      "slug": slug.current,
2025-09-16T23:45:56.852341Z	      logo
2025-09-16T23:45:56.852462Z	    },
2025-09-16T23:45:56.852619Z	    targetMarket,
2025-09-16T23:45:56.852751Z	    complexity,
2025-09-16T23:45:56.852885Z	    publishedAt,
2025-09-16T23:45:56.853019Z	    isPublished,
2025-09-16T23:45:56.853149Z	    isFeatured,
2025-09-16T23:45:56.853283Z	    viewCount,
2025-09-16T23:45:56.853409Z	    _createdAt,
2025-09-16T23:45:56.853514Z	    _updatedAt
2025-09-16T23:45:56.853575Z	  
2025-09-16T23:45:56.853725Z	      },
2025-09-16T23:45:56.853835Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-16T23:45:56.853952Z	    }
2025-09-16T23:45:56.854054Z	  
2025-09-16T23:45:56.854164Z	Query parameters: {
2025-09-16T23:45:56.854268Z	  limit: 4,
2025-09-16T23:45:56.854368Z	  offset: 0,
2025-09-16T23:45:56.854464Z	  targetMarket: undefined,
2025-09-16T23:45:56.854589Z	  brand: '英飞凌',
2025-09-16T23:45:56.854715Z	  featured: undefined
2025-09-16T23:45:56.854824Z	}
2025-09-16T23:45:56.854931Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-16T23:45:56.855026Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-16T23:45:56.855136Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:56.855243Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:56.855389Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:56.855485Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:56.855547Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-16T23:45:56.855689Z	Fetching products with query: 
2025-09-16T23:45:56.855777Z	    {
2025-09-16T23:45:56.85586Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:56.855977Z	        
2025-09-16T23:45:56.856097Z	    _id,
2025-09-16T23:45:56.8562Z	    _type,
2025-09-16T23:45:56.856332Z	    partNumber,
2025-09-16T23:45:56.856459Z	    "slug": slug.current,
2025-09-16T23:45:56.856585Z	    title,
2025-09-16T23:45:56.85672Z	    shortDescription,
2025-09-16T23:45:56.856865Z	    image,
2025-09-16T23:45:56.85698Z	    brand->{
2025-09-16T23:45:56.857088Z	      name,
2025-09-16T23:45:56.857206Z	      "slug": slug.current,
2025-09-16T23:45:56.857322Z	      logo
2025-09-16T23:45:56.857436Z	    },
2025-09-16T23:45:56.857563Z	    category->{
2025-09-16T23:45:56.857695Z	      name,
2025-09-16T23:45:56.85781Z	      "slug": slug.current
2025-09-16T23:45:56.857922Z	    },
2025-09-16T23:45:56.858033Z	    pricing{
2025-09-16T23:45:56.858132Z	      currency,
2025-09-16T23:45:56.85819Z	      tiers[]{
2025-09-16T23:45:56.858313Z	        quantity,
2025-09-16T23:45:56.858411Z	        price,
2025-09-16T23:45:56.858548Z	        unit
2025-09-16T23:45:56.85872Z	      },
2025-09-16T23:45:56.858849Z	      moq,
2025-09-16T23:45:56.858987Z	      leadTime,
2025-09-16T23:45:56.859106Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:56.859249Z	      "price": tiers[0].price,
2025-09-16T23:45:56.859377Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:56.859519Z	    },
2025-09-16T23:45:56.859665Z	    inventory{
2025-09-16T23:45:56.859785Z	      quantity,
2025-09-16T23:45:56.859907Z	      status,
2025-09-16T23:45:56.860167Z	      warehouse,
2025-09-16T23:45:56.860303Z	      lastUpdated,
2025-09-16T23:45:56.860411Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:56.860476Z	      "inStock": status == "in_stock",
2025-09-16T23:45:56.860534Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:56.86059Z	    },
2025-09-16T23:45:56.861207Z	    isActive,
2025-09-16T23:45:56.861323Z	    isFeatured,
2025-09-16T23:45:56.861424Z	    isNew,
2025-09-16T23:45:56.861534Z	    _createdAt,
2025-09-16T23:45:56.86166Z	    _updatedAt
2025-09-16T23:45:56.861823Z	  
2025-09-16T23:45:56.86209Z	      },
2025-09-16T23:45:56.862249Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-16T23:45:56.86248Z	    }
2025-09-16T23:45:56.862573Z	  
2025-09-16T23:45:56.862855Z	Query parameters: {
2025-09-16T23:45:56.862993Z	  limit: 8,
2025-09-16T23:45:56.863215Z	  offset: 0,
2025-09-16T23:45:56.863382Z	  category: undefined,
2025-09-16T23:45:56.863552Z	  brand: 'ncc',
2025-09-16T23:45:56.863717Z	  featured: undefined
2025-09-16T23:45:56.863897Z	}
2025-09-16T23:45:56.864056Z	Fetching solutions with query: 
2025-09-16T23:45:56.86426Z	    {
2025-09-16T23:45:56.864419Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:56.864537Z	        
2025-09-16T23:45:56.864637Z	    _id,
2025-09-16T23:45:56.864754Z	    title,
2025-09-16T23:45:56.864855Z	    "slug": slug.current,
2025-09-16T23:45:56.864975Z	    summary,
2025-09-16T23:45:56.865057Z	    description,
2025-09-16T23:45:56.865167Z	    coverImage,
2025-09-16T23:45:56.865266Z	    primaryBrand->{
2025-09-16T23:45:56.865409Z	      _id,
2025-09-16T23:45:56.865522Z	      name,
2025-09-16T23:45:56.865719Z	      "slug": slug.current,
2025-09-16T23:45:56.865857Z	      logo
2025-09-16T23:45:56.866024Z	    },
2025-09-16T23:45:56.866151Z	    relatedBrands[]->{
2025-09-16T23:45:56.866263Z	      _id,
2025-09-16T23:45:56.866378Z	      name,
2025-09-16T23:45:56.86648Z	      "slug": slug.current,
2025-09-16T23:45:56.866575Z	      logo
2025-09-16T23:45:56.866666Z	    },
2025-09-16T23:45:56.866775Z	    targetMarket,
2025-09-16T23:45:56.866903Z	    complexity,
2025-09-16T23:45:56.866988Z	    publishedAt,
2025-09-16T23:45:56.867083Z	    isPublished,
2025-09-16T23:45:56.867171Z	    isFeatured,
2025-09-16T23:45:56.867275Z	    viewCount,
2025-09-16T23:45:56.867373Z	    _createdAt,
2025-09-16T23:45:56.867451Z	    _updatedAt
2025-09-16T23:45:56.867539Z	  
2025-09-16T23:45:56.867632Z	      },
2025-09-16T23:45:56.867735Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-16T23:45:56.867806Z	    }
2025-09-16T23:45:56.867873Z	  
2025-09-16T23:45:56.867969Z	Query parameters: {
2025-09-16T23:45:56.868063Z	  limit: 4,
2025-09-16T23:45:56.868153Z	  offset: 0,
2025-09-16T23:45:56.868236Z	  targetMarket: undefined,
2025-09-16T23:45:56.86836Z	  brand: 'ncc',
2025-09-16T23:45:56.868483Z	  featured: undefined
2025-09-16T23:45:56.868628Z	}
2025-09-16T23:45:56.868812Z	✅ [getBrandData] Found brand: ncc
2025-09-16T23:45:56.868952Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:56.869196Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:56.86931Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-16T23:45:56.869614Z	Fetching products with query: 
2025-09-16T23:45:56.869809Z	    {
2025-09-16T23:45:56.869888Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:56.870032Z	        
2025-09-16T23:45:56.870158Z	    _id,
2025-09-16T23:45:56.870219Z	    _type,
2025-09-16T23:45:56.870275Z	    partNumber,
2025-09-16T23:45:56.870404Z	    "slug": slug.current,
2025-09-16T23:45:56.870581Z	    title,
2025-09-16T23:45:56.870734Z	    shortDescription,
2025-09-16T23:45:56.870846Z	    image,
2025-09-16T23:45:56.871019Z	    brand->{
2025-09-16T23:45:56.871077Z	      name,
2025-09-16T23:45:56.871134Z	      "slug": slug.current,
2025-09-16T23:45:56.871188Z	      logo
2025-09-16T23:45:56.871241Z	    },
2025-09-16T23:45:56.871294Z	    category->{
2025-09-16T23:45:56.871347Z	      name,
2025-09-16T23:45:56.871407Z	      "slug": slug.current
2025-09-16T23:45:56.87147Z	    },
2025-09-16T23:45:56.871526Z	    pricing{
2025-09-16T23:45:56.87158Z	      currency,
2025-09-16T23:45:56.871637Z	      tiers[]{
2025-09-16T23:45:56.87172Z	        quantity,
2025-09-16T23:45:56.871798Z	        price,
2025-09-16T23:45:56.871913Z	        unit
2025-09-16T23:45:56.872013Z	      },
2025-09-16T23:45:56.872108Z	      moq,
2025-09-16T23:45:56.8722Z	      leadTime,
2025-09-16T23:45:56.872264Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:56.872339Z	      "price": tiers[0].price,
2025-09-16T23:45:56.872438Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:56.872544Z	    },
2025-09-16T23:45:56.872634Z	    inventory{
2025-09-16T23:45:56.872744Z	      quantity,
2025-09-16T23:45:56.872816Z	      status,
2025-09-16T23:45:56.872911Z	      warehouse,
2025-09-16T23:45:56.872998Z	      lastUpdated,
2025-09-16T23:45:56.87309Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:56.873183Z	      "inStock": status == "in_stock",
2025-09-16T23:45:56.873328Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:56.873653Z	    },
2025-09-16T23:45:56.873834Z	    isActive,
2025-09-16T23:45:56.873966Z	    isFeatured,
2025-09-16T23:45:56.87414Z	    isNew,
2025-09-16T23:45:56.874281Z	    _createdAt,
2025-09-16T23:45:56.874411Z	    _updatedAt
2025-09-16T23:45:56.87461Z	  
2025-09-16T23:45:56.87561Z	      },
2025-09-16T23:45:56.8763Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-16T23:45:56.876482Z	    }
2025-09-16T23:45:56.876602Z	  
2025-09-16T23:45:56.876728Z	Query parameters: {
2025-09-16T23:45:56.876848Z	  limit: 8,
2025-09-16T23:45:56.876941Z	  offset: 0,
2025-09-16T23:45:56.877049Z	  category: undefined,
2025-09-16T23:45:56.877141Z	  brand: 'ncc',
2025-09-16T23:45:56.877303Z	  featured: undefined
2025-09-16T23:45:56.877432Z	}
2025-09-16T23:45:56.877789Z	Fetching solutions with query: 
2025-09-16T23:45:56.887499Z	    {
2025-09-16T23:45:56.888461Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:56.888725Z	        
2025-09-16T23:45:56.888907Z	    _id,
2025-09-16T23:45:56.889077Z	    title,
2025-09-16T23:45:56.889242Z	    "slug": slug.current,
2025-09-16T23:45:56.889436Z	    summary,
2025-09-16T23:45:56.889569Z	    description,
2025-09-16T23:45:56.889761Z	    coverImage,
2025-09-16T23:45:56.889891Z	    primaryBrand->{
2025-09-16T23:45:56.890037Z	      _id,
2025-09-16T23:45:56.89019Z	      name,
2025-09-16T23:45:56.890392Z	      "slug": slug.current,
2025-09-16T23:45:56.890646Z	      logo
2025-09-16T23:45:56.890811Z	    },
2025-09-16T23:45:56.891298Z	    relatedBrands[]->{
2025-09-16T23:45:56.891621Z	      _id,
2025-09-16T23:45:56.892101Z	      name,
2025-09-16T23:45:56.892498Z	      "slug": slug.current,
2025-09-16T23:45:56.892988Z	      logo
2025-09-16T23:45:56.893508Z	    },
2025-09-16T23:45:56.894035Z	    targetMarket,
2025-09-16T23:45:56.894354Z	    complexity,
2025-09-16T23:45:56.894529Z	    publishedAt,
2025-09-16T23:45:56.894645Z	    isPublished,
2025-09-16T23:45:56.894785Z	    isFeatured,
2025-09-16T23:45:56.894911Z	    viewCount,
2025-09-16T23:45:56.895029Z	    _createdAt,
2025-09-16T23:45:56.895143Z	    _updatedAt
2025-09-16T23:45:56.895248Z	  
2025-09-16T23:45:56.895355Z	      },
2025-09-16T23:45:56.897201Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-16T23:45:56.897396Z	    }
2025-09-16T23:45:56.89753Z	  
2025-09-16T23:45:56.897658Z	Query parameters: {
2025-09-16T23:45:56.898039Z	  limit: 4,
2025-09-16T23:45:56.89818Z	  offset: 0,
2025-09-16T23:45:56.89854Z	  targetMarket: undefined,
2025-09-16T23:45:56.898665Z	  brand: 'ncc',
2025-09-16T23:45:56.899031Z	  featured: undefined
2025-09-16T23:45:56.899145Z	}
2025-09-16T23:45:56.899266Z	✅ [getBrandData] Found brand: ncc
2025-09-16T23:45:56.899372Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:56.899468Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:56.89957Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:56.899709Z	Fetching products with query: 
2025-09-16T23:45:56.899857Z	    {
2025-09-16T23:45:56.90003Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:56.900177Z	        
2025-09-16T23:45:56.900293Z	    _id,
2025-09-16T23:45:56.900412Z	    _type,
2025-09-16T23:45:56.900522Z	    partNumber,
2025-09-16T23:45:56.900633Z	    "slug": slug.current,
2025-09-16T23:45:56.900762Z	    title,
2025-09-16T23:45:56.900861Z	    shortDescription,
2025-09-16T23:45:56.900969Z	    image,
2025-09-16T23:45:56.901075Z	    brand->{
2025-09-16T23:45:56.901244Z	      name,
2025-09-16T23:45:56.925091Z	      "slug": slug.current,
2025-09-16T23:45:56.92533Z	      logo
2025-09-16T23:45:56.925483Z	    },
2025-09-16T23:45:56.925641Z	    category->{
2025-09-16T23:45:56.925843Z	      name,
2025-09-16T23:45:56.925979Z	      "slug": slug.current
2025-09-16T23:45:56.926099Z	    },
2025-09-16T23:45:56.926207Z	    pricing{
2025-09-16T23:45:56.92632Z	      currency,
2025-09-16T23:45:56.926429Z	      tiers[]{
2025-09-16T23:45:56.926538Z	        quantity,
2025-09-16T23:45:56.926663Z	        price,
2025-09-16T23:45:56.926802Z	        unit
2025-09-16T23:45:56.926917Z	      },
2025-09-16T23:45:56.927022Z	      moq,
2025-09-16T23:45:56.92713Z	      leadTime,
2025-09-16T23:45:56.927258Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:56.927385Z	      "price": tiers[0].price,
2025-09-16T23:45:56.927499Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:56.927619Z	    },
2025-09-16T23:45:56.927758Z	    inventory{
2025-09-16T23:45:56.927864Z	      quantity,
2025-09-16T23:45:56.928046Z	      status,
2025-09-16T23:45:56.929443Z	      warehouse,
2025-09-16T23:45:56.929626Z	      lastUpdated,
2025-09-16T23:45:56.92978Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:56.929921Z	      "inStock": status == "in_stock",
2025-09-16T23:45:56.930039Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:56.930146Z	    },
2025-09-16T23:45:56.930252Z	    isActive,
2025-09-16T23:45:56.930355Z	    isFeatured,
2025-09-16T23:45:56.930462Z	    isNew,
2025-09-16T23:45:56.930568Z	    _createdAt,
2025-09-16T23:45:56.930717Z	    _updatedAt
2025-09-16T23:45:56.930842Z	  
2025-09-16T23:45:56.93095Z	      },
2025-09-16T23:45:56.931056Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-16T23:45:56.931177Z	    }
2025-09-16T23:45:56.931291Z	  
2025-09-16T23:45:56.931398Z	Query parameters: {
2025-09-16T23:45:56.931514Z	  limit: 8,
2025-09-16T23:45:56.931629Z	  offset: 0,
2025-09-16T23:45:56.931757Z	  category: undefined,
2025-09-16T23:45:56.931865Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:45:56.931968Z	  featured: undefined
2025-09-16T23:45:56.932064Z	}
2025-09-16T23:45:56.932179Z	Fetching solutions with query: 
2025-09-16T23:45:56.932283Z	    {
2025-09-16T23:45:56.932385Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:56.932495Z	        
2025-09-16T23:45:56.933132Z	    _id,
2025-09-16T23:45:56.933263Z	    title,
2025-09-16T23:45:56.933574Z	    "slug": slug.current,
2025-09-16T23:45:56.933887Z	    summary,
2025-09-16T23:45:56.934003Z	    description,
2025-09-16T23:45:56.934419Z	    coverImage,
2025-09-16T23:45:56.934553Z	    primaryBrand->{
2025-09-16T23:45:56.934662Z	      _id,
2025-09-16T23:45:56.934784Z	      name,
2025-09-16T23:45:56.935027Z	      "slug": slug.current,
2025-09-16T23:45:56.935178Z	      logo
2025-09-16T23:45:56.935288Z	    },
2025-09-16T23:45:56.935449Z	    relatedBrands[]->{
2025-09-16T23:45:56.935557Z	      _id,
2025-09-16T23:45:56.935732Z	      name,
2025-09-16T23:45:56.935842Z	      "slug": slug.current,
2025-09-16T23:45:56.935938Z	      logo
2025-09-16T23:45:56.936421Z	    },
2025-09-16T23:45:56.936587Z	    targetMarket,
2025-09-16T23:45:56.936732Z	    complexity,
2025-09-16T23:45:56.936966Z	    publishedAt,
2025-09-16T23:45:56.937724Z	    isPublished,
2025-09-16T23:45:56.938046Z	    isFeatured,
2025-09-16T23:45:56.93826Z	    viewCount,
2025-09-16T23:45:56.938549Z	    _createdAt,
2025-09-16T23:45:56.938706Z	    _updatedAt
2025-09-16T23:45:56.938894Z	  
2025-09-16T23:45:56.939029Z	      },
2025-09-16T23:45:56.939145Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-16T23:45:56.940496Z	    }
2025-09-16T23:45:56.94099Z	  
2025-09-16T23:45:56.946058Z	Query parameters: {
2025-09-16T23:45:56.94637Z	  limit: 4,
2025-09-16T23:45:56.946523Z	  offset: 0,
2025-09-16T23:45:56.946653Z	  targetMarket: undefined,
2025-09-16T23:45:56.947001Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:45:56.94728Z	  featured: undefined
2025-09-16T23:45:56.947443Z	}
2025-09-16T23:45:56.947554Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:56.947665Z	Fetching products with query: 
2025-09-16T23:45:56.947794Z	    {
2025-09-16T23:45:56.947895Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:56.947997Z	        
2025-09-16T23:45:56.948108Z	    _id,
2025-09-16T23:45:56.948213Z	    _type,
2025-09-16T23:45:56.948739Z	    partNumber,
2025-09-16T23:45:56.948874Z	    "slug": slug.current,
2025-09-16T23:45:56.948992Z	    title,
2025-09-16T23:45:56.949101Z	    shortDescription,
2025-09-16T23:45:56.949222Z	    image,
2025-09-16T23:45:56.94933Z	    brand->{
2025-09-16T23:45:56.949437Z	      name,
2025-09-16T23:45:56.949546Z	      "slug": slug.current,
2025-09-16T23:45:56.949667Z	      logo
2025-09-16T23:45:56.949799Z	    },
2025-09-16T23:45:56.949924Z	    category->{
2025-09-16T23:45:56.950045Z	      name,
2025-09-16T23:45:56.950153Z	      "slug": slug.current
2025-09-16T23:45:56.950261Z	    },
2025-09-16T23:45:56.950367Z	    pricing{
2025-09-16T23:45:56.950476Z	      currency,
2025-09-16T23:45:56.950635Z	      tiers[]{
2025-09-16T23:45:56.950766Z	        quantity,
2025-09-16T23:45:56.950907Z	        price,
2025-09-16T23:45:56.951075Z	        unit
2025-09-16T23:45:56.951188Z	      },
2025-09-16T23:45:56.951296Z	      moq,
2025-09-16T23:45:56.952181Z	      leadTime,
2025-09-16T23:45:56.952339Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:56.952466Z	      "price": tiers[0].price,
2025-09-16T23:45:56.952561Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:56.952653Z	    },
2025-09-16T23:45:56.952769Z	    inventory{
2025-09-16T23:45:56.952856Z	      quantity,
2025-09-16T23:45:56.952942Z	      status,
2025-09-16T23:45:56.953032Z	      warehouse,
2025-09-16T23:45:56.953119Z	      lastUpdated,
2025-09-16T23:45:56.953217Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:56.953477Z	      "inStock": status == "in_stock",
2025-09-16T23:45:56.954657Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:56.95483Z	    },
2025-09-16T23:45:56.954938Z	    isActive,
2025-09-16T23:45:56.955039Z	    isFeatured,
2025-09-16T23:45:56.955134Z	    isNew,
2025-09-16T23:45:56.955237Z	    _createdAt,
2025-09-16T23:45:56.956397Z	    _updatedAt
2025-09-16T23:45:56.956514Z	  
2025-09-16T23:45:56.956609Z	      },
2025-09-16T23:45:56.956741Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-16T23:45:56.956839Z	    }
2025-09-16T23:45:56.956924Z	  
2025-09-16T23:45:56.957005Z	Query parameters: {
2025-09-16T23:45:56.957118Z	  limit: 8,
2025-09-16T23:45:56.957297Z	  offset: 0,
2025-09-16T23:45:56.957416Z	  category: undefined,
2025-09-16T23:45:56.957539Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:45:56.957639Z	  featured: undefined
2025-09-16T23:45:56.957771Z	}
2025-09-16T23:45:56.957879Z	Fetching solutions with query: 
2025-09-16T23:45:56.95798Z	    {
2025-09-16T23:45:56.958088Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:56.958195Z	        
2025-09-16T23:45:56.958297Z	    _id,
2025-09-16T23:45:56.958417Z	    title,
2025-09-16T23:45:56.958537Z	    "slug": slug.current,
2025-09-16T23:45:56.958643Z	    summary,
2025-09-16T23:45:56.958775Z	    description,
2025-09-16T23:45:56.958887Z	    coverImage,
2025-09-16T23:45:56.963305Z	    primaryBrand->{
2025-09-16T23:45:56.963495Z	      _id,
2025-09-16T23:45:56.963604Z	      name,
2025-09-16T23:45:56.963727Z	      "slug": slug.current,
2025-09-16T23:45:56.963828Z	      logo
2025-09-16T23:45:56.964879Z	    },
2025-09-16T23:45:56.965057Z	    relatedBrands[]->{
2025-09-16T23:45:56.965163Z	      _id,
2025-09-16T23:45:56.965262Z	      name,
2025-09-16T23:45:56.965353Z	      "slug": slug.current,
2025-09-16T23:45:56.965452Z	      logo
2025-09-16T23:45:56.965868Z	    },
2025-09-16T23:45:56.966034Z	    targetMarket,
2025-09-16T23:45:56.966179Z	    complexity,
2025-09-16T23:45:56.966322Z	    publishedAt,
2025-09-16T23:45:56.966416Z	    isPublished,
2025-09-16T23:45:56.966527Z	    isFeatured,
2025-09-16T23:45:56.966632Z	    viewCount,
2025-09-16T23:45:56.967017Z	    _createdAt,
2025-09-16T23:45:56.968247Z	    _updatedAt
2025-09-16T23:45:56.968499Z	  
2025-09-16T23:45:56.968683Z	      },
2025-09-16T23:45:56.968832Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-16T23:45:56.969073Z	    }
2025-09-16T23:45:56.969188Z	  
2025-09-16T23:45:56.969388Z	Query parameters: {
2025-09-16T23:45:56.971002Z	  limit: 4,
2025-09-16T23:45:56.971163Z	  offset: 0,
2025-09-16T23:45:56.971272Z	  targetMarket: undefined,
2025-09-16T23:45:56.971455Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:45:56.971657Z	  featured: undefined
2025-09-16T23:45:56.971795Z	}
2025-09-16T23:45:56.971904Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:56.972078Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:56.972414Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:56.972575Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:56.972717Z	Products fetch result: {
2025-09-16T23:45:56.972827Z	  totalProducts: 1,
2025-09-16T23:45:56.973152Z	  fetchedProducts: 1,
2025-09-16T23:45:56.973288Z	  firstProduct: {
2025-09-16T23:45:56.973588Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-16T23:45:56.973745Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-16T23:45:56.974028Z	    _type: 'product',
2025-09-16T23:45:56.974164Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-16T23:45:56.974264Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-16T23:45:56.974361Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:45:56.974459Z	    image: null,
2025-09-16T23:45:56.974566Z	    inventory: {
2025-09-16T23:45:56.974671Z	      inStock: true,
2025-09-16T23:45:56.974802Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-16T23:45:56.974889Z	      quantity: 0,
2025-09-16T23:45:56.974971Z	      status: 'in_stock',
2025-09-16T23:45:56.975051Z	      warehouse: null
2025-09-16T23:45:56.975132Z	    },
2025-09-16T23:45:56.975213Z	    isActive: true,
2025-09-16T23:45:56.975302Z	    isFeatured: false,
2025-09-16T23:45:56.975389Z	    isNew: false,
2025-09-16T23:45:56.975479Z	    partNumber: 'SKKT106/16E',
2025-09-16T23:45:56.975566Z	    pricing: {
2025-09-16T23:45:56.975661Z	      currency: 'CNY',
2025-09-16T23:45:56.976048Z	      leadTime: null,
2025-09-16T23:45:56.976184Z	      moq: null,
2025-09-16T23:45:56.976281Z	      price: null,
2025-09-16T23:45:56.976433Z	      tiers: null
2025-09-16T23:45:56.976552Z	    },
2025-09-16T23:45:56.976653Z	    shortDescription: 'SKKT106/16E',
2025-09-16T23:45:56.97677Z	    slug: 'SKKT106/16E',
2025-09-16T23:45:56.976859Z	    title: 'SKKT106/16E'
2025-09-16T23:45:56.976935Z	  }
2025-09-16T23:45:56.977019Z	}
2025-09-16T23:45:56.977099Z	Products fetch result: {
2025-09-16T23:45:56.977174Z	  totalProducts: 1,
2025-09-16T23:45:56.977254Z	  fetchedProducts: 1,
2025-09-16T23:45:56.977346Z	  firstProduct: {
2025-09-16T23:45:56.977444Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-16T23:45:56.977532Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-16T23:45:56.97763Z	    _type: 'product',
2025-09-16T23:45:56.977745Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-16T23:45:56.977843Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-16T23:45:56.977937Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:45:56.97802Z	    image: null,
2025-09-16T23:45:56.978114Z	    inventory: {
2025-09-16T23:45:56.978212Z	      inStock: true,
2025-09-16T23:45:56.978309Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-16T23:45:56.978408Z	      quantity: 0,
2025-09-16T23:45:56.978505Z	      status: 'in_stock',
2025-09-16T23:45:56.97864Z	      warehouse: null
2025-09-16T23:45:56.979085Z	    },
2025-09-16T23:45:56.97916Z	    isActive: true,
2025-09-16T23:45:56.979231Z	    isFeatured: false,
2025-09-16T23:45:56.97929Z	    isNew: false,
2025-09-16T23:45:56.979351Z	    partNumber: 'SKKT106/16E',
2025-09-16T23:45:56.97941Z	    pricing: {
2025-09-16T23:45:56.979473Z	      currency: 'CNY',
2025-09-16T23:45:56.979527Z	      leadTime: null,
2025-09-16T23:45:56.979581Z	      moq: null,
2025-09-16T23:45:56.979638Z	      price: null,
2025-09-16T23:45:57.024197Z	      tiers: null
2025-09-16T23:45:57.024423Z	    },
2025-09-16T23:45:57.024611Z	    shortDescription: 'SKKT106/16E',
2025-09-16T23:45:57.02477Z	    slug: 'SKKT106/16E',
2025-09-16T23:45:57.024892Z	    title: 'SKKT106/16E'
2025-09-16T23:45:57.024989Z	  }
2025-09-16T23:45:57.02511Z	}
2025-09-16T23:45:57.025284Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:57.025468Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:57.025966Z	✅ [getBrandData] Found brand: Semikron
2025-09-16T23:45:57.026311Z	✅ [getBrandData] Found brand: Semikron
2025-09-16T23:45:57.026736Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:57.026907Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:57.02704Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:57.027314Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:57.027519Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:57.028032Z	Error fetching brand products data: Error: NEXT_NOT_FOUND
2025-09-16T23:45:57.028194Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:45:57.028666Z	    at y (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/products/page.js:1:4657) {
2025-09-16T23:45:57.028949Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:45:57.029142Z	}
2025-09-16T23:45:57.029472Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:57.029613Z	Error fetching brand products data: Error: NEXT_NOT_FOUND
2025-09-16T23:45:57.029822Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:45:57.030037Z	    at y (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/products/page.js:1:4657) {
2025-09-16T23:45:57.030251Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:45:57.030419Z	}
2025-09-16T23:45:57.030574Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-16T23:45:57.030923Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:45:57.03104Z	Fetching products with query: 
2025-09-16T23:45:57.03117Z	    {
2025-09-16T23:45:57.031563Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:57.032152Z	        
2025-09-16T23:45:57.032253Z	    _id,
2025-09-16T23:45:57.032324Z	    _type,
2025-09-16T23:45:57.032393Z	    partNumber,
2025-09-16T23:45:57.032455Z	    "slug": slug.current,
2025-09-16T23:45:57.032512Z	    title,
2025-09-16T23:45:57.032567Z	    shortDescription,
2025-09-16T23:45:57.032625Z	    image,
2025-09-16T23:45:57.032711Z	    brand->{
2025-09-16T23:45:57.032786Z	      name,
2025-09-16T23:45:57.033194Z	      "slug": slug.current,
2025-09-16T23:45:57.033612Z	      logo
2025-09-16T23:45:57.033767Z	    },
2025-09-16T23:45:57.033887Z	    category->{
2025-09-16T23:45:57.033995Z	      name,
2025-09-16T23:45:57.034095Z	      "slug": slug.current
2025-09-16T23:45:57.034192Z	    },
2025-09-16T23:45:57.034308Z	    pricing{
2025-09-16T23:45:57.034419Z	      currency,
2025-09-16T23:45:57.034522Z	      tiers[]{
2025-09-16T23:45:57.034637Z	        quantity,
2025-09-16T23:45:57.034775Z	        price,
2025-09-16T23:45:57.034912Z	        unit
2025-09-16T23:45:57.035079Z	      },
2025-09-16T23:45:57.035182Z	      moq,
2025-09-16T23:45:57.035277Z	      leadTime,
2025-09-16T23:45:57.035383Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:57.035483Z	      "price": tiers[0].price,
2025-09-16T23:45:57.035573Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:57.035669Z	    },
2025-09-16T23:45:57.035804Z	    inventory{
2025-09-16T23:45:57.035912Z	      quantity,
2025-09-16T23:45:57.035997Z	      status,
2025-09-16T23:45:57.036079Z	      warehouse,
2025-09-16T23:45:57.036173Z	      lastUpdated,
2025-09-16T23:45:57.036254Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:57.036433Z	      "inStock": status == "in_stock",
2025-09-16T23:45:57.03657Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:57.036741Z	    },
2025-09-16T23:45:57.036896Z	    isActive,
2025-09-16T23:45:57.037045Z	    isFeatured,
2025-09-16T23:45:57.037186Z	    isNew,
2025-09-16T23:45:57.037297Z	    _createdAt,
2025-09-16T23:45:57.03742Z	    _updatedAt
2025-09-16T23:45:57.037533Z	  
2025-09-16T23:45:57.038724Z	      },
2025-09-16T23:45:57.03962Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:45:57.040949Z	    }
2025-09-16T23:45:57.041071Z	  
2025-09-16T23:45:57.041191Z	Query parameters: {
2025-09-16T23:45:57.041293Z	  limit: 8,
2025-09-16T23:45:57.041402Z	  offset: 0,
2025-09-16T23:45:57.041503Z	  category: undefined,
2025-09-16T23:45:57.041621Z	  brand: 'Electronicon',
2025-09-16T23:45:57.041737Z	  featured: undefined
2025-09-16T23:45:57.041837Z	}
2025-09-16T23:45:57.042035Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-16T23:45:57.042358Z	Fetching products with query: 
2025-09-16T23:45:57.042701Z	    {
2025-09-16T23:45:57.043041Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:57.043383Z	        
2025-09-16T23:45:57.043592Z	    _id,
2025-09-16T23:45:57.043723Z	    _type,
2025-09-16T23:45:57.043832Z	    partNumber,
2025-09-16T23:45:57.043932Z	    "slug": slug.current,
2025-09-16T23:45:57.044028Z	    title,
2025-09-16T23:45:57.044124Z	    shortDescription,
2025-09-16T23:45:57.044223Z	    image,
2025-09-16T23:45:57.044322Z	    brand->{
2025-09-16T23:45:57.044425Z	      name,
2025-09-16T23:45:57.044518Z	      "slug": slug.current,
2025-09-16T23:45:57.045435Z	      logo
2025-09-16T23:45:57.047027Z	    },
2025-09-16T23:45:57.04749Z	    category->{
2025-09-16T23:45:57.048093Z	      name,
2025-09-16T23:45:57.048741Z	      "slug": slug.current
2025-09-16T23:45:57.049257Z	    },
2025-09-16T23:45:57.049953Z	    pricing{
2025-09-16T23:45:57.050108Z	      currency,
2025-09-16T23:45:57.05023Z	      tiers[]{
2025-09-16T23:45:57.050341Z	        quantity,
2025-09-16T23:45:57.050465Z	        price,
2025-09-16T23:45:57.050576Z	        unit
2025-09-16T23:45:57.050724Z	      },
2025-09-16T23:45:57.051695Z	      moq,
2025-09-16T23:45:57.051928Z	      leadTime,
2025-09-16T23:45:57.052262Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:57.052537Z	      "price": tiers[0].price,
2025-09-16T23:45:57.052729Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:57.052886Z	    },
2025-09-16T23:45:57.053033Z	    inventory{
2025-09-16T23:45:57.053184Z	      quantity,
2025-09-16T23:45:57.053316Z	      status,
2025-09-16T23:45:57.053464Z	      warehouse,
2025-09-16T23:45:57.053625Z	      lastUpdated,
2025-09-16T23:45:57.053816Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:57.053984Z	      "inStock": status == "in_stock",
2025-09-16T23:45:57.05415Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:57.054318Z	    },
2025-09-16T23:45:57.054641Z	    isActive,
2025-09-16T23:45:57.054823Z	    isFeatured,
2025-09-16T23:45:57.054947Z	    isNew,
2025-09-16T23:45:57.055448Z	    _createdAt,
2025-09-16T23:45:57.055621Z	    _updatedAt
2025-09-16T23:45:57.055784Z	  
2025-09-16T23:45:57.055994Z	      },
2025-09-16T23:45:57.056216Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-16T23:45:57.056397Z	    }
2025-09-16T23:45:57.056581Z	  
2025-09-16T23:45:57.056832Z	Query parameters: {
2025-09-16T23:45:57.057026Z	  limit: 8,
2025-09-16T23:45:57.057284Z	  offset: 0,
2025-09-16T23:45:57.057412Z	  category: undefined,
2025-09-16T23:45:57.057516Z	  brand: 'lem',
2025-09-16T23:45:57.057613Z	  featured: undefined
2025-09-16T23:45:57.057919Z	}
2025-09-16T23:45:57.058192Z	Fetching solutions with query: 
2025-09-16T23:45:57.058358Z	    {
2025-09-16T23:45:57.058463Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:57.058572Z	        
2025-09-16T23:45:57.058685Z	    _id,
2025-09-16T23:45:57.058797Z	    title,
2025-09-16T23:45:57.058885Z	    "slug": slug.current,
2025-09-16T23:45:57.058979Z	    summary,
2025-09-16T23:45:57.059069Z	    description,
2025-09-16T23:45:57.059163Z	    coverImage,
2025-09-16T23:45:57.059281Z	    primaryBrand->{
2025-09-16T23:45:57.059379Z	      _id,
2025-09-16T23:45:57.059472Z	      name,
2025-09-16T23:45:57.059819Z	      "slug": slug.current,
2025-09-16T23:45:57.05996Z	      logo
2025-09-16T23:45:57.060088Z	    },
2025-09-16T23:45:57.06022Z	    relatedBrands[]->{
2025-09-16T23:45:57.060466Z	      _id,
2025-09-16T23:45:57.060603Z	      name,
2025-09-16T23:45:57.060738Z	      "slug": slug.current,
2025-09-16T23:45:57.060851Z	      logo
2025-09-16T23:45:57.060962Z	    },
2025-09-16T23:45:57.061064Z	    targetMarket,
2025-09-16T23:45:57.061168Z	    complexity,
2025-09-16T23:45:57.061294Z	    publishedAt,
2025-09-16T23:45:57.061409Z	    isPublished,
2025-09-16T23:45:57.061551Z	    isFeatured,
2025-09-16T23:45:57.061664Z	    viewCount,
2025-09-16T23:45:57.061801Z	    _createdAt,
2025-09-16T23:45:57.061912Z	    _updatedAt
2025-09-16T23:45:57.062012Z	  
2025-09-16T23:45:57.062107Z	      },
2025-09-16T23:45:57.062207Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:45:57.062312Z	    }
2025-09-16T23:45:57.062407Z	  
2025-09-16T23:45:57.062519Z	Query parameters: {
2025-09-16T23:45:57.062617Z	  limit: 4,
2025-09-16T23:45:57.062735Z	  offset: 0,
2025-09-16T23:45:57.062842Z	  targetMarket: undefined,
2025-09-16T23:45:57.062943Z	  brand: 'Electronicon',
2025-09-16T23:45:57.063048Z	  featured: undefined
2025-09-16T23:45:57.063156Z	}
2025-09-16T23:45:57.063263Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:57.063372Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:57.063495Z	Fetching solutions with query: 
2025-09-16T23:45:57.063602Z	    {
2025-09-16T23:45:57.063754Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:57.06409Z	        
2025-09-16T23:45:57.064431Z	    _id,
2025-09-16T23:45:57.064605Z	    title,
2025-09-16T23:45:57.064746Z	    "slug": slug.current,
2025-09-16T23:45:57.064872Z	    summary,
2025-09-16T23:45:57.064986Z	    description,
2025-09-16T23:45:57.065395Z	    coverImage,
2025-09-16T23:45:57.065563Z	    primaryBrand->{
2025-09-16T23:45:57.065693Z	      _id,
2025-09-16T23:45:57.065816Z	      name,
2025-09-16T23:45:57.065957Z	      "slug": slug.current,
2025-09-16T23:45:57.066161Z	      logo
2025-09-16T23:45:57.066363Z	    },
2025-09-16T23:45:57.066705Z	    relatedBrands[]->{
2025-09-16T23:45:57.066845Z	      _id,
2025-09-16T23:45:57.066956Z	      name,
2025-09-16T23:45:57.067062Z	      "slug": slug.current,
2025-09-16T23:45:57.067241Z	      logo
2025-09-16T23:45:57.067355Z	    },
2025-09-16T23:45:57.067472Z	    targetMarket,
2025-09-16T23:45:57.06758Z	    complexity,
2025-09-16T23:45:57.067811Z	    publishedAt,
2025-09-16T23:45:57.068016Z	    isPublished,
2025-09-16T23:45:57.068158Z	    isFeatured,
2025-09-16T23:45:57.068269Z	    viewCount,
2025-09-16T23:45:57.068863Z	    _createdAt,
2025-09-16T23:45:57.069013Z	    _updatedAt
2025-09-16T23:45:57.069194Z	  
2025-09-16T23:45:57.069335Z	      },
2025-09-16T23:45:57.069469Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-16T23:45:57.069587Z	    }
2025-09-16T23:45:57.069721Z	  
2025-09-16T23:45:57.069869Z	Query parameters: {
2025-09-16T23:45:57.069983Z	  limit: 4,
2025-09-16T23:45:57.070097Z	  offset: 0,
2025-09-16T23:45:57.070456Z	  targetMarket: undefined,
2025-09-16T23:45:57.070626Z	  brand: 'lem',
2025-09-16T23:45:57.071019Z	  featured: undefined
2025-09-16T23:45:57.071176Z	}
2025-09-16T23:45:57.071444Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-16T23:45:57.0716Z	Fetching products with query: 
2025-09-16T23:45:57.071735Z	    {
2025-09-16T23:45:57.074123Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:57.074351Z	        
2025-09-16T23:45:57.074521Z	    _id,
2025-09-16T23:45:57.075059Z	    _type,
2025-09-16T23:45:57.075441Z	    partNumber,
2025-09-16T23:45:57.075832Z	    "slug": slug.current,
2025-09-16T23:45:57.076094Z	    title,
2025-09-16T23:45:57.076222Z	    shortDescription,
2025-09-16T23:45:57.076379Z	    image,
2025-09-16T23:45:57.077001Z	    brand->{
2025-09-16T23:45:57.077118Z	      name,
2025-09-16T23:45:57.077207Z	      "slug": slug.current,
2025-09-16T23:45:57.077288Z	      logo
2025-09-16T23:45:57.077372Z	    },
2025-09-16T23:45:57.077466Z	    category->{
2025-09-16T23:45:57.077566Z	      name,
2025-09-16T23:45:57.077662Z	      "slug": slug.current
2025-09-16T23:45:57.077797Z	    },
2025-09-16T23:45:57.077899Z	    pricing{
2025-09-16T23:45:57.078456Z	      currency,
2025-09-16T23:45:57.078843Z	      tiers[]{
2025-09-16T23:45:57.079092Z	        quantity,
2025-09-16T23:45:57.079215Z	        price,
2025-09-16T23:45:57.079344Z	        unit
2025-09-16T23:45:57.079441Z	      },
2025-09-16T23:45:57.079558Z	      moq,
2025-09-16T23:45:57.079667Z	      leadTime,
2025-09-16T23:45:57.079788Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:57.079884Z	      "price": tiers[0].price,
2025-09-16T23:45:57.079976Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:57.080067Z	    },
2025-09-16T23:45:57.080155Z	    inventory{
2025-09-16T23:45:57.080241Z	      quantity,
2025-09-16T23:45:57.080327Z	      status,
2025-09-16T23:45:57.080416Z	      warehouse,
2025-09-16T23:45:57.080498Z	      lastUpdated,
2025-09-16T23:45:57.080582Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:57.080729Z	      "inStock": status == "in_stock",
2025-09-16T23:45:57.080867Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:57.081036Z	    },
2025-09-16T23:45:57.081331Z	    isActive,
2025-09-16T23:45:57.081443Z	    isFeatured,
2025-09-16T23:45:57.081541Z	    isNew,
2025-09-16T23:45:57.081642Z	    _createdAt,
2025-09-16T23:45:57.124188Z	    _updatedAt
2025-09-16T23:45:57.12443Z	  
2025-09-16T23:45:57.124566Z	      },
2025-09-16T23:45:57.124716Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-16T23:45:57.12488Z	    }
2025-09-16T23:45:57.125033Z	  
2025-09-16T23:45:57.125159Z	Query parameters: {
2025-09-16T23:45:57.125281Z	  limit: 8,
2025-09-16T23:45:57.125399Z	  offset: 0,
2025-09-16T23:45:57.125527Z	  category: undefined,
2025-09-16T23:45:57.125641Z	  brand: 'lem',
2025-09-16T23:45:57.125794Z	  featured: undefined
2025-09-16T23:45:57.125932Z	}
2025-09-16T23:45:57.134779Z	Fetching solutions with query: 
2025-09-16T23:45:57.134975Z	    {
2025-09-16T23:45:57.135092Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:57.135202Z	        
2025-09-16T23:45:57.135302Z	    _id,
2025-09-16T23:45:57.135409Z	    title,
2025-09-16T23:45:57.135534Z	    "slug": slug.current,
2025-09-16T23:45:57.135639Z	    summary,
2025-09-16T23:45:57.13577Z	    description,
2025-09-16T23:45:57.135882Z	    coverImage,
2025-09-16T23:45:57.135984Z	    primaryBrand->{
2025-09-16T23:45:57.136086Z	      _id,
2025-09-16T23:45:57.136954Z	      name,
2025-09-16T23:45:57.137466Z	      "slug": slug.current,
2025-09-16T23:45:57.137792Z	      logo
2025-09-16T23:45:57.137942Z	    },
2025-09-16T23:45:57.138057Z	    relatedBrands[]->{
2025-09-16T23:45:57.138577Z	      _id,
2025-09-16T23:45:57.138838Z	      name,
2025-09-16T23:45:57.139135Z	      "slug": slug.current,
2025-09-16T23:45:57.139392Z	      logo
2025-09-16T23:45:57.139549Z	    },
2025-09-16T23:45:57.140108Z	    targetMarket,
2025-09-16T23:45:57.140236Z	    complexity,
2025-09-16T23:45:57.140335Z	    publishedAt,
2025-09-16T23:45:57.140435Z	    isPublished,
2025-09-16T23:45:57.141258Z	    isFeatured,
2025-09-16T23:45:57.141395Z	    viewCount,
2025-09-16T23:45:57.141507Z	    _createdAt,
2025-09-16T23:45:57.141632Z	    _updatedAt
2025-09-16T23:45:57.141939Z	  
2025-09-16T23:45:57.142306Z	      },
2025-09-16T23:45:57.142456Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-16T23:45:57.142578Z	    }
2025-09-16T23:45:57.142735Z	  
2025-09-16T23:45:57.142928Z	Query parameters: {
2025-09-16T23:45:57.143044Z	  limit: 4,
2025-09-16T23:45:57.14315Z	  offset: 0,
2025-09-16T23:45:57.14326Z	  targetMarket: undefined,
2025-09-16T23:45:57.143362Z	  brand: 'lem',
2025-09-16T23:45:57.143466Z	  featured: undefined
2025-09-16T23:45:57.143567Z	}
2025-09-16T23:45:57.143697Z	Fetching products with query: 
2025-09-16T23:45:57.143849Z	    {
2025-09-16T23:45:57.144093Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:57.144283Z	        
2025-09-16T23:45:57.144431Z	    _id,
2025-09-16T23:45:57.144536Z	    _type,
2025-09-16T23:45:57.144663Z	    partNumber,
2025-09-16T23:45:57.144804Z	    "slug": slug.current,
2025-09-16T23:45:57.144871Z	    title,
2025-09-16T23:45:57.144929Z	    shortDescription,
2025-09-16T23:45:57.144984Z	    image,
2025-09-16T23:45:57.145039Z	    brand->{
2025-09-16T23:45:57.145095Z	      name,
2025-09-16T23:45:57.145148Z	      "slug": slug.current,
2025-09-16T23:45:57.145225Z	      logo
2025-09-16T23:45:57.145281Z	    },
2025-09-16T23:45:57.145334Z	    category->{
2025-09-16T23:45:57.145423Z	      name,
2025-09-16T23:45:57.145479Z	      "slug": slug.current
2025-09-16T23:45:57.145539Z	    },
2025-09-16T23:45:57.145594Z	    pricing{
2025-09-16T23:45:57.145647Z	      currency,
2025-09-16T23:45:57.145733Z	      tiers[]{
2025-09-16T23:45:57.145793Z	        quantity,
2025-09-16T23:45:57.145848Z	        price,
2025-09-16T23:45:57.145901Z	        unit
2025-09-16T23:45:57.14596Z	      },
2025-09-16T23:45:57.146035Z	      moq,
2025-09-16T23:45:57.146174Z	      leadTime,
2025-09-16T23:45:57.146324Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:57.146432Z	      "price": tiers[0].price,
2025-09-16T23:45:57.146533Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:57.146632Z	    },
2025-09-16T23:45:57.146737Z	    inventory{
2025-09-16T23:45:57.146802Z	      quantity,
2025-09-16T23:45:57.146858Z	      status,
2025-09-16T23:45:57.146914Z	      warehouse,
2025-09-16T23:45:57.146977Z	      lastUpdated,
2025-09-16T23:45:57.147035Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:57.147161Z	      "inStock": status == "in_stock",
2025-09-16T23:45:57.147278Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:57.147388Z	    },
2025-09-16T23:45:57.147492Z	    isActive,
2025-09-16T23:45:57.147587Z	    isFeatured,
2025-09-16T23:45:57.1477Z	    isNew,
2025-09-16T23:45:57.147823Z	    _createdAt,
2025-09-16T23:45:57.147922Z	    _updatedAt
2025-09-16T23:45:57.148081Z	  
2025-09-16T23:45:57.148457Z	      },
2025-09-16T23:45:57.14858Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-16T23:45:57.148737Z	    }
2025-09-16T23:45:57.148853Z	  
2025-09-16T23:45:57.148953Z	Query parameters: {
2025-09-16T23:45:57.149058Z	  limit: 8,
2025-09-16T23:45:57.149163Z	  offset: 0,
2025-09-16T23:45:57.149261Z	  category: undefined,
2025-09-16T23:45:57.149389Z	  brand: 'epcos',
2025-09-16T23:45:57.149568Z	  featured: undefined
2025-09-16T23:45:57.1497Z	}
2025-09-16T23:45:57.149798Z	Fetching solutions with query: 
2025-09-16T23:45:57.149907Z	    {
2025-09-16T23:45:57.15Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:57.150088Z	        
2025-09-16T23:45:57.150171Z	    _id,
2025-09-16T23:45:57.150252Z	    title,
2025-09-16T23:45:57.150341Z	    "slug": slug.current,
2025-09-16T23:45:57.150439Z	    summary,
2025-09-16T23:45:57.150532Z	    description,
2025-09-16T23:45:57.15064Z	    coverImage,
2025-09-16T23:45:57.150762Z	    primaryBrand->{
2025-09-16T23:45:57.150866Z	      _id,
2025-09-16T23:45:57.15096Z	      name,
2025-09-16T23:45:57.151056Z	      "slug": slug.current,
2025-09-16T23:45:57.151143Z	      logo
2025-09-16T23:45:57.151234Z	    },
2025-09-16T23:45:57.151324Z	    relatedBrands[]->{
2025-09-16T23:45:57.151423Z	      _id,
2025-09-16T23:45:57.151546Z	      name,
2025-09-16T23:45:57.151764Z	      "slug": slug.current,
2025-09-16T23:45:57.152032Z	      logo
2025-09-16T23:45:57.161285Z	    },
2025-09-16T23:45:57.161974Z	    targetMarket,
2025-09-16T23:45:57.162237Z	    complexity,
2025-09-16T23:45:57.162784Z	    publishedAt,
2025-09-16T23:45:57.164416Z	    isPublished,
2025-09-16T23:45:57.164701Z	    isFeatured,
2025-09-16T23:45:57.165425Z	    viewCount,
2025-09-16T23:45:57.165708Z	    _createdAt,
2025-09-16T23:45:57.165989Z	    _updatedAt
2025-09-16T23:45:57.166383Z	  
2025-09-16T23:45:57.166543Z	      },
2025-09-16T23:45:57.166666Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-16T23:45:57.166815Z	    }
2025-09-16T23:45:57.166924Z	  
2025-09-16T23:45:57.167018Z	Query parameters: {
2025-09-16T23:45:57.167115Z	  limit: 4,
2025-09-16T23:45:57.167218Z	  offset: 0,
2025-09-16T23:45:57.167354Z	  targetMarket: undefined,
2025-09-16T23:45:57.167575Z	  brand: 'epcos',
2025-09-16T23:45:57.167853Z	  featured: undefined
2025-09-16T23:45:57.168012Z	}
2025-09-16T23:45:57.168467Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-16T23:45:57.168598Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:45:57.168931Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:57.169032Z	Error fetching brand products data: Error: NEXT_NOT_FOUND
2025-09-16T23:45:57.169126Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:45:57.169221Z	    at y (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/products/page.js:1:4657) {
2025-09-16T23:45:57.169318Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:45:57.169423Z	}
2025-09-16T23:45:57.169527Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:45:57.169628Z	Fetching products with query: 
2025-09-16T23:45:57.170253Z	    {
2025-09-16T23:45:57.170637Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:57.170992Z	        
2025-09-16T23:45:57.171129Z	    _id,
2025-09-16T23:45:57.171302Z	    _type,
2025-09-16T23:45:57.171578Z	    partNumber,
2025-09-16T23:45:57.171718Z	    "slug": slug.current,
2025-09-16T23:45:57.17183Z	    title,
2025-09-16T23:45:57.171944Z	    shortDescription,
2025-09-16T23:45:57.172052Z	    image,
2025-09-16T23:45:57.172142Z	    brand->{
2025-09-16T23:45:57.172231Z	      name,
2025-09-16T23:45:57.172317Z	      "slug": slug.current,
2025-09-16T23:45:57.172416Z	      logo
2025-09-16T23:45:57.172518Z	    },
2025-09-16T23:45:57.172623Z	    category->{
2025-09-16T23:45:57.172734Z	      name,
2025-09-16T23:45:57.172823Z	      "slug": slug.current
2025-09-16T23:45:57.172908Z	    },
2025-09-16T23:45:57.173006Z	    pricing{
2025-09-16T23:45:57.173091Z	      currency,
2025-09-16T23:45:57.173181Z	      tiers[]{
2025-09-16T23:45:57.173269Z	        quantity,
2025-09-16T23:45:57.173363Z	        price,
2025-09-16T23:45:57.173467Z	        unit
2025-09-16T23:45:57.173572Z	      },
2025-09-16T23:45:57.173668Z	      moq,
2025-09-16T23:45:57.17378Z	      leadTime,
2025-09-16T23:45:57.173878Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:57.173974Z	      "price": tiers[0].price,
2025-09-16T23:45:57.174069Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:57.174164Z	    },
2025-09-16T23:45:57.174256Z	    inventory{
2025-09-16T23:45:57.174349Z	      quantity,
2025-09-16T23:45:57.174451Z	      status,
2025-09-16T23:45:57.174542Z	      warehouse,
2025-09-16T23:45:57.174635Z	      lastUpdated,
2025-09-16T23:45:57.174758Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:57.174863Z	      "inStock": status == "in_stock",
2025-09-16T23:45:57.174964Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:57.175066Z	    },
2025-09-16T23:45:57.175162Z	    isActive,
2025-09-16T23:45:57.175266Z	    isFeatured,
2025-09-16T23:45:57.175373Z	    isNew,
2025-09-16T23:45:57.175485Z	    _createdAt,
2025-09-16T23:45:57.175636Z	    _updatedAt
2025-09-16T23:45:57.175764Z	  
2025-09-16T23:45:57.175867Z	      },
2025-09-16T23:45:57.175987Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:45:57.176104Z	    }
2025-09-16T23:45:57.176204Z	  
2025-09-16T23:45:57.1763Z	Query parameters: {
2025-09-16T23:45:57.176392Z	  limit: 8,
2025-09-16T23:45:57.176492Z	  offset: 0,
2025-09-16T23:45:57.17658Z	  category: undefined,
2025-09-16T23:45:57.176764Z	  brand: 'cree',
2025-09-16T23:45:57.176866Z	  featured: undefined
2025-09-16T23:45:57.176957Z	}
2025-09-16T23:45:57.177053Z	Fetching solutions with query: 
2025-09-16T23:45:57.177155Z	    {
2025-09-16T23:45:57.177261Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:57.177368Z	        
2025-09-16T23:45:57.177479Z	    _id,
2025-09-16T23:45:57.177578Z	    title,
2025-09-16T23:45:57.177691Z	    "slug": slug.current,
2025-09-16T23:45:57.177796Z	    summary,
2025-09-16T23:45:57.177892Z	    description,
2025-09-16T23:45:57.177996Z	    coverImage,
2025-09-16T23:45:57.178095Z	    primaryBrand->{
2025-09-16T23:45:57.178191Z	      _id,
2025-09-16T23:45:57.17828Z	      name,
2025-09-16T23:45:57.178369Z	      "slug": slug.current,
2025-09-16T23:45:57.178468Z	      logo
2025-09-16T23:45:57.178563Z	    },
2025-09-16T23:45:57.178652Z	    relatedBrands[]->{
2025-09-16T23:45:57.178764Z	      _id,
2025-09-16T23:45:57.178853Z	      name,
2025-09-16T23:45:57.17894Z	      "slug": slug.current,
2025-09-16T23:45:57.17903Z	      logo
2025-09-16T23:45:57.179128Z	    },
2025-09-16T23:45:57.179246Z	    targetMarket,
2025-09-16T23:45:57.179347Z	    complexity,
2025-09-16T23:45:57.179453Z	    publishedAt,
2025-09-16T23:45:57.179547Z	    isPublished,
2025-09-16T23:45:57.179636Z	    isFeatured,
2025-09-16T23:45:57.179745Z	    viewCount,
2025-09-16T23:45:57.179836Z	    _createdAt,
2025-09-16T23:45:57.179918Z	    _updatedAt
2025-09-16T23:45:57.180002Z	  
2025-09-16T23:45:57.180085Z	      },
2025-09-16T23:45:57.180167Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:45:57.180267Z	    }
2025-09-16T23:45:57.180362Z	  
2025-09-16T23:45:57.183631Z	Query parameters: {
2025-09-16T23:45:57.183814Z	  limit: 4,
2025-09-16T23:45:57.183883Z	  offset: 0,
2025-09-16T23:45:57.18394Z	  targetMarket: undefined,
2025-09-16T23:45:57.183997Z	  brand: 'cree',
2025-09-16T23:45:57.18405Z	  featured: undefined
2025-09-16T23:45:57.184105Z	}
2025-09-16T23:45:57.184159Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:45:57.184217Z	Fetching products with query: 
2025-09-16T23:45:57.18427Z	    {
2025-09-16T23:45:57.184332Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:57.184411Z	        
2025-09-16T23:45:57.184477Z	    _id,
2025-09-16T23:45:57.184531Z	    _type,
2025-09-16T23:45:57.184583Z	    partNumber,
2025-09-16T23:45:57.184635Z	    "slug": slug.current,
2025-09-16T23:45:57.223973Z	    title,
2025-09-16T23:45:57.224767Z	    shortDescription,
2025-09-16T23:45:57.224945Z	    image,
2025-09-16T23:45:57.22511Z	    brand->{
2025-09-16T23:45:57.225211Z	      name,
2025-09-16T23:45:57.225314Z	      "slug": slug.current,
2025-09-16T23:45:57.22541Z	      logo
2025-09-16T23:45:57.225518Z	    },
2025-09-16T23:45:57.225608Z	    category->{
2025-09-16T23:45:57.225762Z	      name,
2025-09-16T23:45:57.225881Z	      "slug": slug.current
2025-09-16T23:45:57.226092Z	    },
2025-09-16T23:45:57.226312Z	    pricing{
2025-09-16T23:45:57.226446Z	      currency,
2025-09-16T23:45:57.226632Z	      tiers[]{
2025-09-16T23:45:57.226924Z	        quantity,
2025-09-16T23:45:57.227134Z	        price,
2025-09-16T23:45:57.227256Z	        unit
2025-09-16T23:45:57.227373Z	      },
2025-09-16T23:45:57.227481Z	      moq,
2025-09-16T23:45:57.227571Z	      leadTime,
2025-09-16T23:45:57.227656Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:57.227783Z	      "price": tiers[0].price,
2025-09-16T23:45:57.227883Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:57.227979Z	    },
2025-09-16T23:45:57.228073Z	    inventory{
2025-09-16T23:45:57.228169Z	      quantity,
2025-09-16T23:45:57.228264Z	      status,
2025-09-16T23:45:57.228373Z	      warehouse,
2025-09-16T23:45:57.228471Z	      lastUpdated,
2025-09-16T23:45:57.228562Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:57.228669Z	      "inStock": status == "in_stock",
2025-09-16T23:45:57.228798Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:57.228898Z	    },
2025-09-16T23:45:57.228995Z	    isActive,
2025-09-16T23:45:57.229101Z	    isFeatured,
2025-09-16T23:45:57.229198Z	    isNew,
2025-09-16T23:45:57.229323Z	    _createdAt,
2025-09-16T23:45:57.229435Z	    _updatedAt
2025-09-16T23:45:57.229535Z	  
2025-09-16T23:45:57.229634Z	      },
2025-09-16T23:45:57.229762Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:45:57.229879Z	    }
2025-09-16T23:45:57.229967Z	  
2025-09-16T23:45:57.230707Z	Query parameters: {
2025-09-16T23:45:57.231079Z	  limit: 8,
2025-09-16T23:45:57.231187Z	  offset: 0,
2025-09-16T23:45:57.231286Z	  category: undefined,
2025-09-16T23:45:57.231379Z	  brand: 'cree',
2025-09-16T23:45:57.232033Z	  featured: undefined
2025-09-16T23:45:57.232148Z	}
2025-09-16T23:45:57.232538Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-16T23:45:57.232654Z	Fetching products with query: 
2025-09-16T23:45:57.232794Z	    {
2025-09-16T23:45:57.233276Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:57.233718Z	        
2025-09-16T23:45:57.234058Z	    _id,
2025-09-16T23:45:57.234391Z	    _type,
2025-09-16T23:45:57.234729Z	    partNumber,
2025-09-16T23:45:57.235031Z	    "slug": slug.current,
2025-09-16T23:45:57.235257Z	    title,
2025-09-16T23:45:57.235413Z	    shortDescription,
2025-09-16T23:45:57.235544Z	    image,
2025-09-16T23:45:57.23565Z	    brand->{
2025-09-16T23:45:57.235767Z	      name,
2025-09-16T23:45:57.235859Z	      "slug": slug.current,
2025-09-16T23:45:57.235944Z	      logo
2025-09-16T23:45:57.236032Z	    },
2025-09-16T23:45:57.236118Z	    category->{
2025-09-16T23:45:57.236205Z	      name,
2025-09-16T23:45:57.236285Z	      "slug": slug.current
2025-09-16T23:45:57.236383Z	    },
2025-09-16T23:45:57.236478Z	    pricing{
2025-09-16T23:45:57.23659Z	      currency,
2025-09-16T23:45:57.236719Z	      tiers[]{
2025-09-16T23:45:57.236821Z	        quantity,
2025-09-16T23:45:57.23692Z	        price,
2025-09-16T23:45:57.23702Z	        unit
2025-09-16T23:45:57.237114Z	      },
2025-09-16T23:45:57.237205Z	      moq,
2025-09-16T23:45:57.237385Z	      leadTime,
2025-09-16T23:45:57.23749Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:57.237581Z	      "price": tiers[0].price,
2025-09-16T23:45:57.23767Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:57.237795Z	    },
2025-09-16T23:45:57.237888Z	    inventory{
2025-09-16T23:45:57.23798Z	      quantity,
2025-09-16T23:45:57.238086Z	      status,
2025-09-16T23:45:57.238193Z	      warehouse,
2025-09-16T23:45:57.238286Z	      lastUpdated,
2025-09-16T23:45:57.238388Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:57.23849Z	      "inStock": status == "in_stock",
2025-09-16T23:45:57.238588Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:57.238701Z	    },
2025-09-16T23:45:57.238829Z	    isActive,
2025-09-16T23:45:57.238926Z	    isFeatured,
2025-09-16T23:45:57.23904Z	    isNew,
2025-09-16T23:45:57.239139Z	    _createdAt,
2025-09-16T23:45:57.239253Z	    _updatedAt
2025-09-16T23:45:57.239348Z	  
2025-09-16T23:45:57.239452Z	      },
2025-09-16T23:45:57.239549Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-16T23:45:57.23965Z	    }
2025-09-16T23:45:57.239838Z	  
2025-09-16T23:45:57.239951Z	Query parameters: {
2025-09-16T23:45:57.240042Z	  limit: 8,
2025-09-16T23:45:57.240154Z	  offset: 0,
2025-09-16T23:45:57.240252Z	  category: undefined,
2025-09-16T23:45:57.240359Z	  brand: 'ixys',
2025-09-16T23:45:57.240456Z	  featured: undefined
2025-09-16T23:45:57.240551Z	}
2025-09-16T23:45:57.240641Z	Fetching solutions with query: 
2025-09-16T23:45:57.240751Z	    {
2025-09-16T23:45:57.240852Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:57.240948Z	        
2025-09-16T23:45:57.241048Z	    _id,
2025-09-16T23:45:57.241146Z	    title,
2025-09-16T23:45:57.24124Z	    "slug": slug.current,
2025-09-16T23:45:57.241342Z	    summary,
2025-09-16T23:45:57.241451Z	    description,
2025-09-16T23:45:57.241553Z	    coverImage,
2025-09-16T23:45:57.241647Z	    primaryBrand->{
2025-09-16T23:45:57.241777Z	      _id,
2025-09-16T23:45:57.241889Z	      name,
2025-09-16T23:45:57.241991Z	      "slug": slug.current,
2025-09-16T23:45:57.242094Z	      logo
2025-09-16T23:45:57.242196Z	    },
2025-09-16T23:45:57.242294Z	    relatedBrands[]->{
2025-09-16T23:45:57.242412Z	      _id,
2025-09-16T23:45:57.242513Z	      name,
2025-09-16T23:45:57.242612Z	      "slug": slug.current,
2025-09-16T23:45:57.24273Z	      logo
2025-09-16T23:45:57.242826Z	    },
2025-09-16T23:45:57.242918Z	    targetMarket,
2025-09-16T23:45:57.243012Z	    complexity,
2025-09-16T23:45:57.243102Z	    publishedAt,
2025-09-16T23:45:57.243193Z	    isPublished,
2025-09-16T23:45:57.243288Z	    isFeatured,
2025-09-16T23:45:57.243394Z	    viewCount,
2025-09-16T23:45:57.243571Z	    _createdAt,
2025-09-16T23:45:57.243719Z	    _updatedAt
2025-09-16T23:45:57.243844Z	  
2025-09-16T23:45:57.243957Z	      },
2025-09-16T23:45:57.244063Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-16T23:45:57.244169Z	    }
2025-09-16T23:45:57.244278Z	  
2025-09-16T23:45:57.244384Z	Query parameters: {
2025-09-16T23:45:57.244489Z	  limit: 4,
2025-09-16T23:45:57.244592Z	  offset: 0,
2025-09-16T23:45:57.244736Z	  targetMarket: undefined,
2025-09-16T23:45:57.244846Z	  brand: 'ixys',
2025-09-16T23:45:57.244947Z	  featured: undefined
2025-09-16T23:45:57.245049Z	}
2025-09-16T23:45:57.245153Z	Fetching products with query: 
2025-09-16T23:45:57.245258Z	    {
2025-09-16T23:45:57.245363Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:57.245474Z	        
2025-09-16T23:45:57.245588Z	    _id,
2025-09-16T23:45:57.24573Z	    _type,
2025-09-16T23:45:57.245837Z	    partNumber,
2025-09-16T23:45:57.245938Z	    "slug": slug.current,
2025-09-16T23:45:57.24603Z	    title,
2025-09-16T23:45:57.246158Z	    shortDescription,
2025-09-16T23:45:57.246256Z	    image,
2025-09-16T23:45:57.246374Z	    brand->{
2025-09-16T23:45:57.246482Z	      name,
2025-09-16T23:45:57.246596Z	      "slug": slug.current,
2025-09-16T23:45:57.246723Z	      logo
2025-09-16T23:45:57.246819Z	    },
2025-09-16T23:45:57.246921Z	    category->{
2025-09-16T23:45:57.247026Z	      name,
2025-09-16T23:45:57.24713Z	      "slug": slug.current
2025-09-16T23:45:57.247238Z	    },
2025-09-16T23:45:57.247338Z	    pricing{
2025-09-16T23:45:57.247438Z	      currency,
2025-09-16T23:45:57.247536Z	      tiers[]{
2025-09-16T23:45:57.247646Z	        quantity,
2025-09-16T23:45:57.247768Z	        price,
2025-09-16T23:45:57.24786Z	        unit
2025-09-16T23:45:57.247943Z	      },
2025-09-16T23:45:57.248026Z	      moq,
2025-09-16T23:45:57.248113Z	      leadTime,
2025-09-16T23:45:57.248208Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:57.248307Z	      "price": tiers[0].price,
2025-09-16T23:45:57.248394Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:57.248481Z	    },
2025-09-16T23:45:57.248566Z	    inventory{
2025-09-16T23:45:57.248705Z	      quantity,
2025-09-16T23:45:57.248825Z	      status,
2025-09-16T23:45:57.24894Z	      warehouse,
2025-09-16T23:45:57.24905Z	      lastUpdated,
2025-09-16T23:45:57.249149Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:57.249253Z	      "inStock": status == "in_stock",
2025-09-16T23:45:57.249357Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:57.249456Z	    },
2025-09-16T23:45:57.249558Z	    isActive,
2025-09-16T23:45:57.249667Z	    isFeatured,
2025-09-16T23:45:57.249803Z	    isNew,
2025-09-16T23:45:57.249896Z	    _createdAt,
2025-09-16T23:45:57.249993Z	    _updatedAt
2025-09-16T23:45:57.250095Z	  
2025-09-16T23:45:57.250192Z	      },
2025-09-16T23:45:57.250289Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:45:57.250391Z	    }
2025-09-16T23:45:57.250487Z	  
2025-09-16T23:45:57.250581Z	Query parameters: {
2025-09-16T23:45:57.250709Z	  limit: 8,
2025-09-16T23:45:57.250813Z	  offset: 0,
2025-09-16T23:45:57.250913Z	  category: undefined,
2025-09-16T23:45:57.251011Z	  brand: 'Electronicon',
2025-09-16T23:45:57.251117Z	  featured: undefined
2025-09-16T23:45:57.251219Z	}
2025-09-16T23:45:57.251323Z	Fetching solutions with query: 
2025-09-16T23:45:57.251427Z	    {
2025-09-16T23:45:57.25158Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:57.25174Z	        
2025-09-16T23:45:57.25184Z	    _id,
2025-09-16T23:45:57.25195Z	    title,
2025-09-16T23:45:57.252044Z	    "slug": slug.current,
2025-09-16T23:45:57.252268Z	    summary,
2025-09-16T23:45:57.252654Z	    description,
2025-09-16T23:45:57.253301Z	    coverImage,
2025-09-16T23:45:57.253581Z	    primaryBrand->{
2025-09-16T23:45:57.253839Z	      _id,
2025-09-16T23:45:57.254012Z	      name,
2025-09-16T23:45:57.25417Z	      "slug": slug.current,
2025-09-16T23:45:57.255056Z	      logo
2025-09-16T23:45:57.255459Z	    },
2025-09-16T23:45:57.25575Z	    relatedBrands[]->{
2025-09-16T23:45:57.255985Z	      _id,
2025-09-16T23:45:57.256226Z	      name,
2025-09-16T23:45:57.256489Z	      "slug": slug.current,
2025-09-16T23:45:57.256779Z	      logo
2025-09-16T23:45:57.257169Z	    },
2025-09-16T23:45:57.257287Z	    targetMarket,
2025-09-16T23:45:57.257849Z	    complexity,
2025-09-16T23:45:57.258167Z	    publishedAt,
2025-09-16T23:45:57.258494Z	    isPublished,
2025-09-16T23:45:57.258813Z	    isFeatured,
2025-09-16T23:45:57.25913Z	    viewCount,
2025-09-16T23:45:57.259276Z	    _createdAt,
2025-09-16T23:45:57.259377Z	    _updatedAt
2025-09-16T23:45:57.259482Z	  
2025-09-16T23:45:57.259583Z	      },
2025-09-16T23:45:57.259697Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:45:57.259808Z	    }
2025-09-16T23:45:57.259907Z	  
2025-09-16T23:45:57.260001Z	Query parameters: {
2025-09-16T23:45:57.260095Z	  limit: 4,
2025-09-16T23:45:57.260184Z	  offset: 0,
2025-09-16T23:45:57.260272Z	  targetMarket: undefined,
2025-09-16T23:45:57.260365Z	  brand: 'Electronicon',
2025-09-16T23:45:57.260465Z	  featured: undefined
2025-09-16T23:45:57.260561Z	}
2025-09-16T23:45:57.260659Z	Fetching products with query: 
2025-09-16T23:45:57.261143Z	    {
2025-09-16T23:45:57.261604Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:57.262002Z	        
2025-09-16T23:45:57.262127Z	    _id,
2025-09-16T23:45:57.262226Z	    _type,
2025-09-16T23:45:57.262331Z	    partNumber,
2025-09-16T23:45:57.26243Z	    "slug": slug.current,
2025-09-16T23:45:57.262532Z	    title,
2025-09-16T23:45:57.262627Z	    shortDescription,
2025-09-16T23:45:57.262799Z	    image,
2025-09-16T23:45:57.26299Z	    brand->{
2025-09-16T23:45:57.263102Z	      name,
2025-09-16T23:45:57.263197Z	      "slug": slug.current,
2025-09-16T23:45:57.263295Z	      logo
2025-09-16T23:45:57.263402Z	    },
2025-09-16T23:45:57.263502Z	    category->{
2025-09-16T23:45:57.263605Z	      name,
2025-09-16T23:45:57.263734Z	      "slug": slug.current
2025-09-16T23:45:57.263838Z	    },
2025-09-16T23:45:57.263928Z	    pricing{
2025-09-16T23:45:57.264023Z	      currency,
2025-09-16T23:45:57.264179Z	      tiers[]{
2025-09-16T23:45:57.264353Z	        quantity,
2025-09-16T23:45:57.264498Z	        price,
2025-09-16T23:45:57.264621Z	        unit
2025-09-16T23:45:57.264756Z	      },
2025-09-16T23:45:57.264865Z	      moq,
2025-09-16T23:45:57.264977Z	      leadTime,
2025-09-16T23:45:57.265096Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:57.265227Z	      "price": tiers[0].price,
2025-09-16T23:45:57.265357Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:57.265478Z	    },
2025-09-16T23:45:57.265612Z	    inventory{
2025-09-16T23:45:57.265738Z	      quantity,
2025-09-16T23:45:57.26584Z	      status,
2025-09-16T23:45:57.265941Z	      warehouse,
2025-09-16T23:45:57.266036Z	      lastUpdated,
2025-09-16T23:45:57.266134Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:57.266233Z	      "inStock": status == "in_stock",
2025-09-16T23:45:57.266329Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:57.266439Z	    },
2025-09-16T23:45:57.266584Z	    isActive,
2025-09-16T23:45:57.2669Z	    isFeatured,
2025-09-16T23:45:57.267133Z	    isNew,
2025-09-16T23:45:57.267254Z	    _createdAt,
2025-09-16T23:45:57.267423Z	    _updatedAt
2025-09-16T23:45:57.267537Z	  
2025-09-16T23:45:57.267639Z	      },
2025-09-16T23:45:57.267975Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-16T23:45:57.268314Z	    }
2025-09-16T23:45:57.268463Z	  
2025-09-16T23:45:57.2688Z	Query parameters: {
2025-09-16T23:45:57.26891Z	  limit: 8,
2025-09-16T23:45:57.26901Z	  offset: 0,
2025-09-16T23:45:57.269109Z	  category: undefined,
2025-09-16T23:45:57.269213Z	  brand: 'epcos',
2025-09-16T23:45:57.269316Z	  featured: undefined
2025-09-16T23:45:57.269442Z	}
2025-09-16T23:45:57.269642Z	Fetching solutions with query: 
2025-09-16T23:45:57.269895Z	    {
2025-09-16T23:45:57.270164Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:57.270938Z	        
2025-09-16T23:45:57.271312Z	    _id,
2025-09-16T23:45:57.271571Z	    title,
2025-09-16T23:45:57.271766Z	    "slug": slug.current,
2025-09-16T23:45:57.271865Z	    summary,
2025-09-16T23:45:57.271954Z	    description,
2025-09-16T23:45:57.272144Z	    coverImage,
2025-09-16T23:45:57.272299Z	    primaryBrand->{
2025-09-16T23:45:57.272513Z	      _id,
2025-09-16T23:45:57.272705Z	      name,
2025-09-16T23:45:57.272809Z	      "slug": slug.current,
2025-09-16T23:45:57.272911Z	      logo
2025-09-16T23:45:57.273002Z	    },
2025-09-16T23:45:57.27309Z	    relatedBrands[]->{
2025-09-16T23:45:57.273189Z	      _id,
2025-09-16T23:45:57.273298Z	      name,
2025-09-16T23:45:57.273398Z	      "slug": slug.current,
2025-09-16T23:45:57.273486Z	      logo
2025-09-16T23:45:57.27358Z	    },
2025-09-16T23:45:57.273703Z	    targetMarket,
2025-09-16T23:45:57.2738Z	    complexity,
2025-09-16T23:45:57.273885Z	    publishedAt,
2025-09-16T23:45:57.273967Z	    isPublished,
2025-09-16T23:45:57.274049Z	    isFeatured,
2025-09-16T23:45:57.274135Z	    viewCount,
2025-09-16T23:45:57.274216Z	    _createdAt,
2025-09-16T23:45:57.274297Z	    _updatedAt
2025-09-16T23:45:57.2744Z	  
2025-09-16T23:45:57.274492Z	      },
2025-09-16T23:45:57.274576Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-16T23:45:57.274662Z	    }
2025-09-16T23:45:57.274776Z	  
2025-09-16T23:45:57.274874Z	Query parameters: {
2025-09-16T23:45:57.274975Z	  limit: 4,
2025-09-16T23:45:57.275075Z	  offset: 0,
2025-09-16T23:45:57.275289Z	  targetMarket: undefined,
2025-09-16T23:45:57.275423Z	  brand: 'epcos',
2025-09-16T23:45:57.275527Z	  featured: undefined
2025-09-16T23:45:57.275612Z	}
2025-09-16T23:45:57.275844Z	Fetching solutions with query: 
2025-09-16T23:45:57.2761Z	    {
2025-09-16T23:45:57.276256Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:57.276448Z	        
2025-09-16T23:45:57.276595Z	    _id,
2025-09-16T23:45:57.276771Z	    title,
2025-09-16T23:45:57.276914Z	    "slug": slug.current,
2025-09-16T23:45:57.277066Z	    summary,
2025-09-16T23:45:57.277226Z	    description,
2025-09-16T23:45:57.277354Z	    coverImage,
2025-09-16T23:45:57.277479Z	    primaryBrand->{
2025-09-16T23:45:57.277583Z	      _id,
2025-09-16T23:45:57.277714Z	      name,
2025-09-16T23:45:57.277827Z	      "slug": slug.current,
2025-09-16T23:45:57.277947Z	      logo
2025-09-16T23:45:57.278108Z	    },
2025-09-16T23:45:57.278287Z	    relatedBrands[]->{
2025-09-16T23:45:57.278417Z	      _id,
2025-09-16T23:45:57.278533Z	      name,
2025-09-16T23:45:57.278651Z	      "slug": slug.current,
2025-09-16T23:45:57.278806Z	      logo
2025-09-16T23:45:57.27892Z	    },
2025-09-16T23:45:57.279018Z	    targetMarket,
2025-09-16T23:45:57.279111Z	    complexity,
2025-09-16T23:45:57.279203Z	    publishedAt,
2025-09-16T23:45:57.279323Z	    isPublished,
2025-09-16T23:45:57.279422Z	    isFeatured,
2025-09-16T23:45:57.279528Z	    viewCount,
2025-09-16T23:45:57.279646Z	    _createdAt,
2025-09-16T23:45:57.279784Z	    _updatedAt
2025-09-16T23:45:57.280106Z	  
2025-09-16T23:45:57.280243Z	      },
2025-09-16T23:45:57.280345Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:45:57.280477Z	    }
2025-09-16T23:45:57.280598Z	  
2025-09-16T23:45:57.280738Z	Query parameters: {
2025-09-16T23:45:57.280861Z	  limit: 4,
2025-09-16T23:45:57.280963Z	  offset: 0,
2025-09-16T23:45:57.281062Z	  targetMarket: undefined,
2025-09-16T23:45:57.281172Z	  brand: 'cree',
2025-09-16T23:45:57.28127Z	  featured: undefined
2025-09-16T23:45:57.281371Z	}
2025-09-16T23:45:57.281478Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-16T23:45:57.2816Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:57.281748Z	Error fetching brand products data: Error: NEXT_NOT_FOUND
2025-09-16T23:45:57.28186Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:45:57.281964Z	    at y (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/products/page.js:1:4657) {
2025-09-16T23:45:57.282061Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:45:57.282162Z	}
2025-09-16T23:45:57.282262Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:57.282355Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:57.282459Z	Fetching products with query: 
2025-09-16T23:45:57.282559Z	    {
2025-09-16T23:45:57.282671Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:57.282796Z	        
2025-09-16T23:45:57.282855Z	    _id,
2025-09-16T23:45:57.28291Z	    _type,
2025-09-16T23:45:57.282965Z	    partNumber,
2025-09-16T23:45:57.283022Z	    "slug": slug.current,
2025-09-16T23:45:57.283083Z	    title,
2025-09-16T23:45:57.283137Z	    shortDescription,
2025-09-16T23:45:57.283191Z	    image,
2025-09-16T23:45:57.283271Z	    brand->{
2025-09-16T23:45:57.283329Z	      name,
2025-09-16T23:45:57.283386Z	      "slug": slug.current,
2025-09-16T23:45:57.283439Z	      logo
2025-09-16T23:45:57.283492Z	    },
2025-09-16T23:45:57.283545Z	    category->{
2025-09-16T23:45:57.283598Z	      name,
2025-09-16T23:45:57.283669Z	      "slug": slug.current
2025-09-16T23:45:57.324605Z	    },
2025-09-16T23:45:57.325164Z	    pricing{
2025-09-16T23:45:57.325464Z	      currency,
2025-09-16T23:45:57.32576Z	      tiers[]{
2025-09-16T23:45:57.326Z	        quantity,
2025-09-16T23:45:57.326233Z	        price,
2025-09-16T23:45:57.326642Z	        unit
2025-09-16T23:45:57.327Z	      },
2025-09-16T23:45:57.327323Z	      moq,
2025-09-16T23:45:57.327632Z	      leadTime,
2025-09-16T23:45:57.327945Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:57.328119Z	      "price": tiers[0].price,
2025-09-16T23:45:57.32859Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:57.328861Z	    },
2025-09-16T23:45:57.329117Z	    inventory{
2025-09-16T23:45:57.329269Z	      quantity,
2025-09-16T23:45:57.32939Z	      status,
2025-09-16T23:45:57.329504Z	      warehouse,
2025-09-16T23:45:57.32962Z	      lastUpdated,
2025-09-16T23:45:57.329874Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:57.330063Z	      "inStock": status == "in_stock",
2025-09-16T23:45:57.330205Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:57.330303Z	    },
2025-09-16T23:45:57.3304Z	    isActive,
2025-09-16T23:45:57.330519Z	    isFeatured,
2025-09-16T23:45:57.330623Z	    isNew,
2025-09-16T23:45:57.33075Z	    _createdAt,
2025-09-16T23:45:57.330956Z	    _updatedAt
2025-09-16T23:45:57.331198Z	  
2025-09-16T23:45:57.331436Z	      },
2025-09-16T23:45:57.331586Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-16T23:45:57.331755Z	    }
2025-09-16T23:45:57.333604Z	  
2025-09-16T23:45:57.333869Z	Query parameters: {
2025-09-16T23:45:57.33411Z	  limit: 8,
2025-09-16T23:45:57.33424Z	  offset: 0,
2025-09-16T23:45:57.33435Z	  category: undefined,
2025-09-16T23:45:57.334567Z	  brand: 'ixys',
2025-09-16T23:45:57.334725Z	  featured: undefined
2025-09-16T23:45:57.334909Z	}
2025-09-16T23:45:57.335421Z	✅ [getBrandData] Found brand: LEM
2025-09-16T23:45:57.33558Z	✅ [getBrandData] Found brand: LEM
2025-09-16T23:45:57.335704Z	Products fetch result: {
2025-09-16T23:45:57.335854Z	  totalProducts: 3,
2025-09-16T23:45:57.336355Z	  fetchedProducts: 3,
2025-09-16T23:45:57.336735Z	  firstProduct: {
2025-09-16T23:45:57.33687Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-16T23:45:57.336983Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-16T23:45:57.337084Z	    _type: 'product',
2025-09-16T23:45:57.33718Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-16T23:45:57.337309Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-16T23:45:57.337502Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-16T23:45:57.3377Z	    image: null,
2025-09-16T23:45:57.337815Z	    inventory: {
2025-09-16T23:45:57.33793Z	      inStock: true,
2025-09-16T23:45:57.338086Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-16T23:45:57.338374Z	      quantity: 0,
2025-09-16T23:45:57.338691Z	      status: 'in_stock',
2025-09-16T23:45:57.338824Z	      warehouse: null
2025-09-16T23:45:57.339002Z	    },
2025-09-16T23:45:57.339113Z	    isActive: true,
2025-09-16T23:45:57.339201Z	    isFeatured: false,
2025-09-16T23:45:57.339326Z	    isNew: false,
2025-09-16T23:45:57.339426Z	    partNumber: 'la55-p',
2025-09-16T23:45:57.339525Z	    pricing: {
2025-09-16T23:45:57.339635Z	      currency: 'CNY',
2025-09-16T23:45:57.33977Z	      leadTime: null,
2025-09-16T23:45:57.339877Z	      moq: null,
2025-09-16T23:45:57.339977Z	      price: null,
2025-09-16T23:45:57.340071Z	      tiers: null
2025-09-16T23:45:57.34025Z	    },
2025-09-16T23:45:57.340361Z	    shortDescription: '电流传感器la55-p',
2025-09-16T23:45:57.340465Z	    slug: 'la55-p',
2025-09-16T23:45:57.340575Z	    title: '电流传感器la55-p'
2025-09-16T23:45:57.340703Z	  }
2025-09-16T23:45:57.34081Z	}
2025-09-16T23:45:57.340916Z	Fetching solutions with query: 
2025-09-16T23:45:57.34102Z	    {
2025-09-16T23:45:57.341122Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:57.341228Z	        
2025-09-16T23:45:57.341338Z	    _id,
2025-09-16T23:45:57.341445Z	    title,
2025-09-16T23:45:57.341558Z	    "slug": slug.current,
2025-09-16T23:45:57.341698Z	    summary,
2025-09-16T23:45:57.341806Z	    description,
2025-09-16T23:45:57.341986Z	    coverImage,
2025-09-16T23:45:57.342367Z	    primaryBrand->{
2025-09-16T23:45:57.342835Z	      _id,
2025-09-16T23:45:57.343211Z	      name,
2025-09-16T23:45:57.343346Z	      "slug": slug.current,
2025-09-16T23:45:57.343822Z	      logo
2025-09-16T23:45:57.34458Z	    },
2025-09-16T23:45:57.345558Z	    relatedBrands[]->{
2025-09-16T23:45:57.346567Z	      _id,
2025-09-16T23:45:57.346747Z	      name,
2025-09-16T23:45:57.346878Z	      "slug": slug.current,
2025-09-16T23:45:57.346988Z	      logo
2025-09-16T23:45:57.347091Z	    },
2025-09-16T23:45:57.347204Z	    targetMarket,
2025-09-16T23:45:57.347305Z	    complexity,
2025-09-16T23:45:57.347401Z	    publishedAt,
2025-09-16T23:45:57.3475Z	    isPublished,
2025-09-16T23:45:57.34759Z	    isFeatured,
2025-09-16T23:45:57.347737Z	    viewCount,
2025-09-16T23:45:57.347854Z	    _createdAt,
2025-09-16T23:45:57.348011Z	    _updatedAt
2025-09-16T23:45:57.348464Z	  
2025-09-16T23:45:57.348861Z	      },
2025-09-16T23:45:57.350269Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-16T23:45:57.350422Z	    }
2025-09-16T23:45:57.350531Z	  
2025-09-16T23:45:57.350648Z	Query parameters: {
2025-09-16T23:45:57.350786Z	  limit: 4,
2025-09-16T23:45:57.350903Z	  offset: 0,
2025-09-16T23:45:57.351014Z	  targetMarket: undefined,
2025-09-16T23:45:57.351127Z	  brand: 'ixys',
2025-09-16T23:45:57.351251Z	  featured: undefined
2025-09-16T23:45:57.351364Z	}
2025-09-16T23:45:57.351469Z	✅ [getBrandData] Found brand: Epcos
2025-09-16T23:45:57.351605Z	✅ [getBrandData] Found brand: Epcos
2025-09-16T23:45:57.356645Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:57.356846Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:57.356974Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:57.357112Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:57.357223Z	Products fetch result: {
2025-09-16T23:45:57.357333Z	  totalProducts: 4,
2025-09-16T23:45:57.357437Z	  fetchedProducts: 4,
2025-09-16T23:45:57.357542Z	  firstProduct: {
2025-09-16T23:45:57.357695Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:45:57.357819Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:45:57.358113Z	    _type: 'product',
2025-09-16T23:45:57.358244Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:45:57.358353Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:45:57.358465Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:45:57.358578Z	    image: null,
2025-09-16T23:45:57.358749Z	    inventory: {
2025-09-16T23:45:57.358876Z	      inStock: true,
2025-09-16T23:45:57.359007Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:45:57.362941Z	      quantity: 0,
2025-09-16T23:45:57.363093Z	      status: 'in_stock',
2025-09-16T23:45:57.363199Z	      warehouse: null
2025-09-16T23:45:57.363303Z	    },
2025-09-16T23:45:57.36341Z	    isActive: true,
2025-09-16T23:45:57.363511Z	    isFeatured: false,
2025-09-16T23:45:57.36362Z	    isNew: false,
2025-09-16T23:45:57.363763Z	    partNumber: '11111',
2025-09-16T23:45:57.363878Z	    pricing: {
2025-09-16T23:45:57.364303Z	      currency: 'CNY',
2025-09-16T23:45:57.364461Z	      leadTime: null,
2025-09-16T23:45:57.364579Z	      moq: null,
2025-09-16T23:45:57.364718Z	      price: null,
2025-09-16T23:45:57.364829Z	      tiers: null
2025-09-16T23:45:57.364931Z	    },
2025-09-16T23:45:57.365026Z	    shortDescription: '11111',
2025-09-16T23:45:57.365116Z	    slug: 'sic mosfet',
2025-09-16T23:45:57.365214Z	    title: '111111'
2025-09-16T23:45:57.365316Z	  }
2025-09-16T23:45:57.365412Z	}
2025-09-16T23:45:57.365599Z	Products fetch result: {
2025-09-16T23:45:57.365802Z	  totalProducts: 4,
2025-09-16T23:45:57.365939Z	  fetchedProducts: 4,
2025-09-16T23:45:57.366121Z	  firstProduct: {
2025-09-16T23:45:57.366478Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:45:57.366719Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:45:57.366923Z	    _type: 'product',
2025-09-16T23:45:57.367095Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:45:57.367285Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:45:57.367503Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:45:57.3677Z	    image: null,
2025-09-16T23:45:57.367933Z	    inventory: {
2025-09-16T23:45:57.368093Z	      inStock: true,
2025-09-16T23:45:57.368202Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:45:57.368306Z	      quantity: 0,
2025-09-16T23:45:57.368454Z	      status: 'in_stock',
2025-09-16T23:45:57.368638Z	      warehouse: null
2025-09-16T23:45:57.368782Z	    },
2025-09-16T23:45:57.368909Z	    isActive: true,
2025-09-16T23:45:57.369013Z	    isFeatured: false,
2025-09-16T23:45:57.369146Z	    isNew: false,
2025-09-16T23:45:57.369359Z	    partNumber: '11111',
2025-09-16T23:45:57.369504Z	    pricing: {
2025-09-16T23:45:57.369632Z	      currency: 'CNY',
2025-09-16T23:45:57.369789Z	      leadTime: null,
2025-09-16T23:45:57.370233Z	      moq: null,
2025-09-16T23:45:57.370629Z	      price: null,
2025-09-16T23:45:57.370813Z	      tiers: null
2025-09-16T23:45:57.370925Z	    },
2025-09-16T23:45:57.371023Z	    shortDescription: '11111',
2025-09-16T23:45:57.371118Z	    slug: 'sic mosfet',
2025-09-16T23:45:57.371499Z	    title: '111111'
2025-09-16T23:45:57.37165Z	  }
2025-09-16T23:45:57.371779Z	}
2025-09-16T23:45:57.371879Z	Products fetch result: {
2025-09-16T23:45:57.372434Z	  totalProducts: 2,
2025-09-16T23:45:57.372566Z	  fetchedProducts: 2,
2025-09-16T23:45:57.372685Z	  firstProduct: {
2025-09-16T23:45:57.372798Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:45:57.373348Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:45:57.373479Z	    _type: 'product',
2025-09-16T23:45:57.373572Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:45:57.373663Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:45:57.373784Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:45:57.373887Z	    image: null,
2025-09-16T23:45:57.373978Z	    inventory: {
2025-09-16T23:45:57.374073Z	      inStock: true,
2025-09-16T23:45:57.374162Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:45:57.374254Z	      quantity: 0,
2025-09-16T23:45:57.374345Z	      status: 'in_stock',
2025-09-16T23:45:57.374436Z	      warehouse: null
2025-09-16T23:45:57.374536Z	    },
2025-09-16T23:45:57.374659Z	    isActive: true,
2025-09-16T23:45:57.374853Z	    isFeatured: false,
2025-09-16T23:45:57.374974Z	    isNew: false,
2025-09-16T23:45:57.375075Z	    partNumber: '99999',
2025-09-16T23:45:57.375169Z	    pricing: {
2025-09-16T23:45:57.375277Z	      currency: 'CNY',
2025-09-16T23:45:57.375385Z	      leadTime: null,
2025-09-16T23:45:57.375487Z	      moq: null,
2025-09-16T23:45:57.375582Z	      price: null,
2025-09-16T23:45:57.375711Z	      tiers: null
2025-09-16T23:45:57.375814Z	    },
2025-09-16T23:45:57.375907Z	    shortDescription: null,
2025-09-16T23:45:57.376027Z	    slug: '99999',
2025-09-16T23:45:57.376123Z	    title: '99999'
2025-09-16T23:45:57.376213Z	  }
2025-09-16T23:45:57.376351Z	}
2025-09-16T23:45:57.42405Z	Products fetch result: {
2025-09-16T23:45:57.424258Z	  totalProducts: 2,
2025-09-16T23:45:57.424397Z	  fetchedProducts: 2,
2025-09-16T23:45:57.424529Z	  firstProduct: {
2025-09-16T23:45:57.424717Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:45:57.424879Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:45:57.424988Z	    _type: 'product',
2025-09-16T23:45:57.425236Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:45:57.425393Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:45:57.425526Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:45:57.425639Z	    image: null,
2025-09-16T23:45:57.425763Z	    inventory: {
2025-09-16T23:45:57.425858Z	      inStock: true,
2025-09-16T23:45:57.425949Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:45:57.426039Z	      quantity: 0,
2025-09-16T23:45:57.426138Z	      status: 'in_stock',
2025-09-16T23:45:57.426243Z	      warehouse: null
2025-09-16T23:45:57.426387Z	    },
2025-09-16T23:45:57.426545Z	    isActive: true,
2025-09-16T23:45:57.426658Z	    isFeatured: false,
2025-09-16T23:45:57.426845Z	    isNew: false,
2025-09-16T23:45:57.426979Z	    partNumber: '99999',
2025-09-16T23:45:57.42714Z	    pricing: {
2025-09-16T23:45:57.427245Z	      currency: 'CNY',
2025-09-16T23:45:57.427339Z	      leadTime: null,
2025-09-16T23:45:57.427445Z	      moq: null,
2025-09-16T23:45:57.427543Z	      price: null,
2025-09-16T23:45:57.427633Z	      tiers: null
2025-09-16T23:45:57.42774Z	    },
2025-09-16T23:45:57.427834Z	    shortDescription: null,
2025-09-16T23:45:57.427921Z	    slug: '99999',
2025-09-16T23:45:57.428007Z	    title: '99999'
2025-09-16T23:45:57.428093Z	  }
2025-09-16T23:45:57.42818Z	}
2025-09-16T23:45:57.428265Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:57.428353Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:57.42846Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:45:57.428562Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:45:57.428684Z	Products fetch result: {
2025-09-16T23:45:57.428792Z	  totalProducts: 3,
2025-09-16T23:45:57.428884Z	  fetchedProducts: 3,
2025-09-16T23:45:57.428974Z	  firstProduct: {
2025-09-16T23:45:57.429071Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-16T23:45:57.429167Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-16T23:45:57.429258Z	    _type: 'product',
2025-09-16T23:45:57.429352Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-16T23:45:57.429458Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-16T23:45:57.429559Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-16T23:45:57.42966Z	    image: null,
2025-09-16T23:45:57.429768Z	    inventory: {
2025-09-16T23:45:57.429861Z	      inStock: true,
2025-09-16T23:45:57.429951Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-16T23:45:57.430042Z	      quantity: 0,
2025-09-16T23:45:57.430137Z	      status: 'in_stock',
2025-09-16T23:45:57.430233Z	      warehouse: null
2025-09-16T23:45:57.430328Z	    },
2025-09-16T23:45:57.430427Z	    isActive: true,
2025-09-16T23:45:57.430523Z	    isFeatured: false,
2025-09-16T23:45:57.430616Z	    isNew: false,
2025-09-16T23:45:57.430736Z	    partNumber: 'la55-p',
2025-09-16T23:45:57.43087Z	    pricing: {
2025-09-16T23:45:57.430974Z	      currency: 'CNY',
2025-09-16T23:45:57.431095Z	      leadTime: null,
2025-09-16T23:45:57.431198Z	      moq: null,
2025-09-16T23:45:57.431299Z	      price: null,
2025-09-16T23:45:57.431411Z	      tiers: null
2025-09-16T23:45:57.431515Z	    },
2025-09-16T23:45:57.431622Z	    shortDescription: '电流传感器la55-p',
2025-09-16T23:45:57.431747Z	    slug: 'la55-p',
2025-09-16T23:45:57.431855Z	    title: '电流传感器la55-p'
2025-09-16T23:45:57.431954Z	  }
2025-09-16T23:45:57.432049Z	}
2025-09-16T23:45:57.432142Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:45:57.432241Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:45:57.432336Z	Solutions fetch result: {
2025-09-16T23:45:57.432441Z	  totalSolutions: 6,
2025-09-16T23:45:57.432533Z	  fetchedSolutions: 4,
2025-09-16T23:45:57.432625Z	  firstSolution: {
2025-09-16T23:45:57.432736Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:45:57.432837Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:45:57.432932Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:45:57.433038Z	    complexity: 'medium',
2025-09-16T23:45:57.433132Z	    coverImage: null,
2025-09-16T23:45:57.433233Z	    description: [ [Object] ],
2025-09-16T23:45:57.433389Z	    isFeatured: false,
2025-09-16T23:45:57.433523Z	    isPublished: true,
2025-09-16T23:45:57.433623Z	    primaryBrand: {
2025-09-16T23:45:57.433739Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:45:57.433834Z	      logo: null,
2025-09-16T23:45:57.433935Z	      name: 'CREE',
2025-09-16T23:45:57.434027Z	      slug: 'cree'
2025-09-16T23:45:57.434116Z	    },
2025-09-16T23:45:57.434206Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:45:57.434296Z	    relatedBrands: null,
2025-09-16T23:45:57.434586Z	    slug: '11111',
2025-09-16T23:45:57.434702Z	    summary: '11111',
2025-09-16T23:45:57.434806Z	    targetMarket: 'industrial-automation',
2025-09-16T23:45:57.434904Z	    title: '11111',
2025-09-16T23:45:57.434994Z	    viewCount: 0
2025-09-16T23:45:57.435094Z	  }
2025-09-16T23:45:57.435188Z	}
2025-09-16T23:45:57.435288Z	Solutions fetch result: {
2025-09-16T23:45:57.435401Z	  totalSolutions: 6,
2025-09-16T23:45:57.435507Z	  fetchedSolutions: 4,
2025-09-16T23:45:57.435605Z	  firstSolution: {
2025-09-16T23:45:57.43572Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:45:57.435837Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:45:57.435938Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:45:57.436031Z	    complexity: 'medium',
2025-09-16T23:45:57.436124Z	    coverImage: null,
2025-09-16T23:45:57.436214Z	    description: [ [Object] ],
2025-09-16T23:45:57.436302Z	    isFeatured: false,
2025-09-16T23:45:57.43642Z	    isPublished: true,
2025-09-16T23:45:57.436512Z	    primaryBrand: {
2025-09-16T23:45:57.436601Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:45:57.436726Z	      logo: null,
2025-09-16T23:45:57.436823Z	      name: 'CREE',
2025-09-16T23:45:57.436912Z	      slug: 'cree'
2025-09-16T23:45:57.437013Z	    },
2025-09-16T23:45:57.437112Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:45:57.437207Z	    relatedBrands: null,
2025-09-16T23:45:57.437301Z	    slug: '11111',
2025-09-16T23:45:57.437402Z	    summary: '11111',
2025-09-16T23:45:57.437503Z	    targetMarket: 'industrial-automation',
2025-09-16T23:45:57.437607Z	    title: '11111',
2025-09-16T23:45:57.43773Z	    viewCount: 0
2025-09-16T23:45:57.437834Z	  }
2025-09-16T23:45:57.437931Z	}
2025-09-16T23:45:57.438063Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:57.438237Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:57.438373Z	✅ [getBrandData] Found brand: IXYS
2025-09-16T23:45:57.438502Z	✅ [getBrandData] Found brand: IXYS
2025-09-16T23:45:57.438622Z	Solutions fetch result: {
2025-09-16T23:45:57.438763Z	  totalSolutions: 1,
2025-09-16T23:45:57.438871Z	  fetchedSolutions: 1,
2025-09-16T23:45:57.438973Z	  firstSolution: {
2025-09-16T23:45:57.439076Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-16T23:45:57.439171Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-16T23:45:57.439291Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-16T23:45:57.439395Z	    complexity: 'medium',
2025-09-16T23:45:57.439496Z	    coverImage: null,
2025-09-16T23:45:57.439596Z	    description: [ [Object] ],
2025-09-16T23:45:57.439708Z	    isFeatured: false,
2025-09-16T23:45:57.439806Z	    isPublished: true,
2025-09-16T23:45:57.439896Z	    primaryBrand: {
2025-09-16T23:45:57.439988Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:45:57.44008Z	      logo: null,
2025-09-16T23:45:57.440173Z	      name: 'IXYS',
2025-09-16T23:45:57.440267Z	      slug: 'ixys'
2025-09-16T23:45:57.440371Z	    },
2025-09-16T23:45:57.440472Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-16T23:45:57.440596Z	    relatedBrands: null,
2025-09-16T23:45:57.440713Z	    slug: '99999',
2025-09-16T23:45:57.440817Z	    summary: '99999',
2025-09-16T23:45:57.440912Z	    targetMarket: 'industrial-automation',
2025-09-16T23:45:57.441013Z	    title: '99999',
2025-09-16T23:45:57.441118Z	    viewCount: 0
2025-09-16T23:45:57.441215Z	  }
2025-09-16T23:45:57.44131Z	}
2025-09-16T23:45:57.441415Z	Solutions fetch result: {
2025-09-16T23:45:57.44151Z	  totalSolutions: 1,
2025-09-16T23:45:57.441614Z	  fetchedSolutions: 1,
2025-09-16T23:45:57.441728Z	  firstSolution: {
2025-09-16T23:45:57.441832Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-16T23:45:57.441937Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-16T23:45:57.442031Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-16T23:45:57.442121Z	    complexity: 'medium',
2025-09-16T23:45:57.442215Z	    coverImage: null,
2025-09-16T23:45:57.442322Z	    description: [ [Object] ],
2025-09-16T23:45:57.442429Z	    isFeatured: false,
2025-09-16T23:45:57.442528Z	    isPublished: true,
2025-09-16T23:45:57.442622Z	    primaryBrand: {
2025-09-16T23:45:57.442735Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:45:57.442838Z	      logo: null,
2025-09-16T23:45:57.442936Z	      name: 'IXYS',
2025-09-16T23:45:57.443048Z	      slug: 'ixys'
2025-09-16T23:45:57.443142Z	    },
2025-09-16T23:45:57.443246Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-16T23:45:57.443342Z	    relatedBrands: null,
2025-09-16T23:45:57.443448Z	    slug: '99999',
2025-09-16T23:45:57.443576Z	    summary: '99999',
2025-09-16T23:45:57.44367Z	    targetMarket: 'industrial-automation',
2025-09-16T23:45:57.443824Z	    title: '99999',
2025-09-16T23:45:57.444086Z	    viewCount: 0
2025-09-16T23:45:57.444261Z	  }
2025-09-16T23:45:57.444416Z	}
2025-09-16T23:45:57.44456Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:45:57.444743Z	Fetching products with query: 
2025-09-16T23:45:57.44488Z	    {
2025-09-16T23:45:57.445026Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:57.445169Z	        
2025-09-16T23:45:57.44533Z	    _id,
2025-09-16T23:45:57.445549Z	    _type,
2025-09-16T23:45:57.445711Z	    partNumber,
2025-09-16T23:45:57.445836Z	    "slug": slug.current,
2025-09-16T23:45:57.445948Z	    title,
2025-09-16T23:45:57.446066Z	    shortDescription,
2025-09-16T23:45:57.446174Z	    image,
2025-09-16T23:45:57.446276Z	    brand->{
2025-09-16T23:45:57.446369Z	      name,
2025-09-16T23:45:57.446502Z	      "slug": slug.current,
2025-09-16T23:45:57.446595Z	      logo
2025-09-16T23:45:57.446712Z	    },
2025-09-16T23:45:57.446808Z	    category->{
2025-09-16T23:45:57.446898Z	      name,
2025-09-16T23:45:57.44699Z	      "slug": slug.current
2025-09-16T23:45:57.447106Z	    },
2025-09-16T23:45:57.447216Z	    pricing{
2025-09-16T23:45:57.447328Z	      currency,
2025-09-16T23:45:57.447438Z	      tiers[]{
2025-09-16T23:45:57.447545Z	        quantity,
2025-09-16T23:45:57.447652Z	        price,
2025-09-16T23:45:57.447768Z	        unit
2025-09-16T23:45:57.44787Z	      },
2025-09-16T23:45:57.447968Z	      moq,
2025-09-16T23:45:57.448063Z	      leadTime,
2025-09-16T23:45:57.448159Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:57.448256Z	      "price": tiers[0].price,
2025-09-16T23:45:57.448356Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:57.448512Z	    },
2025-09-16T23:45:57.448623Z	    inventory{
2025-09-16T23:45:57.448871Z	      quantity,
2025-09-16T23:45:57.448998Z	      status,
2025-09-16T23:45:57.449094Z	      warehouse,
2025-09-16T23:45:57.449204Z	      lastUpdated,
2025-09-16T23:45:57.449322Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:57.449431Z	      "inStock": status == "in_stock",
2025-09-16T23:45:57.449531Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:57.449641Z	    },
2025-09-16T23:45:57.449769Z	    isActive,
2025-09-16T23:45:57.449882Z	    isFeatured,
2025-09-16T23:45:57.449982Z	    isNew,
2025-09-16T23:45:57.450079Z	    _createdAt,
2025-09-16T23:45:57.450169Z	    _updatedAt
2025-09-16T23:45:57.450257Z	  
2025-09-16T23:45:57.450345Z	      },
2025-09-16T23:45:57.450437Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:45:57.450527Z	    }
2025-09-16T23:45:57.450631Z	  
2025-09-16T23:45:57.450753Z	Query parameters: {
2025-09-16T23:45:57.450846Z	  limit: 8,
2025-09-16T23:45:57.450935Z	  offset: 0,
2025-09-16T23:45:57.45104Z	  category: undefined,
2025-09-16T23:45:57.451139Z	  brand: 'littelfuse',
2025-09-16T23:45:57.451246Z	  featured: undefined
2025-09-16T23:45:57.451338Z	}
2025-09-16T23:45:57.451442Z	Fetching solutions with query: 
2025-09-16T23:45:57.451531Z	    {
2025-09-16T23:45:57.451628Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:57.451748Z	        
2025-09-16T23:45:57.451862Z	    _id,
2025-09-16T23:45:57.451967Z	    title,
2025-09-16T23:45:57.45206Z	    "slug": slug.current,
2025-09-16T23:45:57.452148Z	    summary,
2025-09-16T23:45:57.452238Z	    description,
2025-09-16T23:45:57.452326Z	    coverImage,
2025-09-16T23:45:57.452417Z	    primaryBrand->{
2025-09-16T23:45:57.452504Z	      _id,
2025-09-16T23:45:57.452626Z	      name,
2025-09-16T23:45:57.45285Z	      "slug": slug.current,
2025-09-16T23:45:57.452988Z	      logo
2025-09-16T23:45:57.453093Z	    },
2025-09-16T23:45:57.453199Z	    relatedBrands[]->{
2025-09-16T23:45:57.453314Z	      _id,
2025-09-16T23:45:57.453419Z	      name,
2025-09-16T23:45:57.453536Z	      "slug": slug.current,
2025-09-16T23:45:57.453636Z	      logo
2025-09-16T23:45:57.453761Z	    },
2025-09-16T23:45:57.453856Z	    targetMarket,
2025-09-16T23:45:57.453949Z	    complexity,
2025-09-16T23:45:57.454031Z	    publishedAt,
2025-09-16T23:45:57.454129Z	    isPublished,
2025-09-16T23:45:57.454209Z	    isFeatured,
2025-09-16T23:45:57.454307Z	    viewCount,
2025-09-16T23:45:57.454403Z	    _createdAt,
2025-09-16T23:45:57.454492Z	    _updatedAt
2025-09-16T23:45:57.454588Z	  
2025-09-16T23:45:57.454718Z	      },
2025-09-16T23:45:57.454798Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:45:57.454903Z	    }
2025-09-16T23:45:57.454966Z	  
2025-09-16T23:45:57.455028Z	Query parameters: {
2025-09-16T23:45:57.455112Z	  limit: 4,
2025-09-16T23:45:57.455167Z	  offset: 0,
2025-09-16T23:45:57.455224Z	  targetMarket: undefined,
2025-09-16T23:45:57.455338Z	  brand: 'littelfuse',
2025-09-16T23:45:57.455469Z	  featured: undefined
2025-09-16T23:45:57.455575Z	}
2025-09-16T23:45:57.455649Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:45:57.455776Z	Fetching products with query: 
2025-09-16T23:45:57.455876Z	    {
2025-09-16T23:45:57.455954Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:57.456014Z	        
2025-09-16T23:45:57.456097Z	    _id,
2025-09-16T23:45:57.456198Z	    _type,
2025-09-16T23:45:57.456299Z	    partNumber,
2025-09-16T23:45:57.456396Z	    "slug": slug.current,
2025-09-16T23:45:57.456502Z	    title,
2025-09-16T23:45:57.456563Z	    shortDescription,
2025-09-16T23:45:57.456621Z	    image,
2025-09-16T23:45:57.45673Z	    brand->{
2025-09-16T23:45:57.456902Z	      name,
2025-09-16T23:45:57.457013Z	      "slug": slug.current,
2025-09-16T23:45:57.457124Z	      logo
2025-09-16T23:45:57.457228Z	    },
2025-09-16T23:45:57.457341Z	    category->{
2025-09-16T23:45:57.457559Z	      name,
2025-09-16T23:45:57.457643Z	      "slug": slug.current
2025-09-16T23:45:57.457805Z	    },
2025-09-16T23:45:57.457983Z	    pricing{
2025-09-16T23:45:57.458161Z	      currency,
2025-09-16T23:45:57.458372Z	      tiers[]{
2025-09-16T23:45:57.458452Z	        quantity,
2025-09-16T23:45:57.458612Z	        price,
2025-09-16T23:45:57.458797Z	        unit
2025-09-16T23:45:57.458954Z	      },
2025-09-16T23:45:57.459058Z	      moq,
2025-09-16T23:45:57.459241Z	      leadTime,
2025-09-16T23:45:57.459451Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:57.459586Z	      "price": tiers[0].price,
2025-09-16T23:45:57.459902Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:57.460055Z	    },
2025-09-16T23:45:57.460316Z	    inventory{
2025-09-16T23:45:57.460563Z	      quantity,
2025-09-16T23:45:57.460826Z	      status,
2025-09-16T23:45:57.461122Z	      warehouse,
2025-09-16T23:45:57.46123Z	      lastUpdated,
2025-09-16T23:45:57.461383Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:57.461517Z	      "inStock": status == "in_stock",
2025-09-16T23:45:57.461645Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:57.461775Z	    },
2025-09-16T23:45:57.461883Z	    isActive,
2025-09-16T23:45:57.462093Z	    isFeatured,
2025-09-16T23:45:57.462414Z	    isNew,
2025-09-16T23:45:57.462547Z	    _createdAt,
2025-09-16T23:45:57.462694Z	    _updatedAt
2025-09-16T23:45:57.462809Z	  
2025-09-16T23:45:57.462894Z	      },
2025-09-16T23:45:57.462979Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:45:57.463091Z	    }
2025-09-16T23:45:57.463174Z	  
2025-09-16T23:45:57.463269Z	Query parameters: {
2025-09-16T23:45:57.463362Z	  limit: 8,
2025-09-16T23:45:57.463459Z	  offset: 0,
2025-09-16T23:45:57.463546Z	  category: undefined,
2025-09-16T23:45:57.463645Z	  brand: 'littelfuse',
2025-09-16T23:45:57.463791Z	  featured: undefined
2025-09-16T23:45:57.46391Z	}
2025-09-16T23:45:57.46401Z	Fetching solutions with query: 
2025-09-16T23:45:57.464095Z	    {
2025-09-16T23:45:57.46418Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:57.464273Z	        
2025-09-16T23:45:57.464389Z	    _id,
2025-09-16T23:45:57.464498Z	    title,
2025-09-16T23:45:57.46459Z	    "slug": slug.current,
2025-09-16T23:45:57.464704Z	    summary,
2025-09-16T23:45:57.464794Z	    description,
2025-09-16T23:45:57.464909Z	    coverImage,
2025-09-16T23:45:57.465014Z	    primaryBrand->{
2025-09-16T23:45:57.465186Z	      _id,
2025-09-16T23:45:57.465404Z	      name,
2025-09-16T23:45:57.46554Z	      "slug": slug.current,
2025-09-16T23:45:57.465667Z	      logo
2025-09-16T23:45:57.465802Z	    },
2025-09-16T23:45:57.465925Z	    relatedBrands[]->{
2025-09-16T23:45:57.466051Z	      _id,
2025-09-16T23:45:57.466171Z	      name,
2025-09-16T23:45:57.466323Z	      "slug": slug.current,
2025-09-16T23:45:57.466477Z	      logo
2025-09-16T23:45:57.466593Z	    },
2025-09-16T23:45:57.466769Z	    targetMarket,
2025-09-16T23:45:57.466964Z	    complexity,
2025-09-16T23:45:57.467137Z	    publishedAt,
2025-09-16T23:45:57.467267Z	    isPublished,
2025-09-16T23:45:57.467375Z	    isFeatured,
2025-09-16T23:45:57.467496Z	    viewCount,
2025-09-16T23:45:57.467602Z	    _createdAt,
2025-09-16T23:45:57.467728Z	    _updatedAt
2025-09-16T23:45:57.467848Z	  
2025-09-16T23:45:57.46796Z	      },
2025-09-16T23:45:57.46807Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:45:57.468185Z	    }
2025-09-16T23:45:57.468303Z	  
2025-09-16T23:45:57.468409Z	Query parameters: {
2025-09-16T23:45:57.46853Z	  limit: 4,
2025-09-16T23:45:57.468637Z	  offset: 0,
2025-09-16T23:45:57.468766Z	  targetMarket: undefined,
2025-09-16T23:45:57.468867Z	  brand: 'littelfuse',
2025-09-16T23:45:57.468958Z	  featured: undefined
2025-09-16T23:45:57.469044Z	}
2025-09-16T23:45:57.469134Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:45:57.469254Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:45:57.469362Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-16T23:45:57.469477Z	Fetching products with query: 
2025-09-16T23:45:57.469588Z	    {
2025-09-16T23:45:57.469739Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:57.46987Z	        
2025-09-16T23:45:57.469977Z	    _id,
2025-09-16T23:45:57.470084Z	    _type,
2025-09-16T23:45:57.470184Z	    partNumber,
2025-09-16T23:45:57.470288Z	    "slug": slug.current,
2025-09-16T23:45:57.470396Z	    title,
2025-09-16T23:45:57.470518Z	    shortDescription,
2025-09-16T23:45:57.470628Z	    image,
2025-09-16T23:45:57.470777Z	    brand->{
2025-09-16T23:45:57.470881Z	      name,
2025-09-16T23:45:57.470982Z	      "slug": slug.current,
2025-09-16T23:45:57.471083Z	      logo
2025-09-16T23:45:57.471177Z	    },
2025-09-16T23:45:57.471271Z	    category->{
2025-09-16T23:45:57.471368Z	      name,
2025-09-16T23:45:57.471479Z	      "slug": slug.current
2025-09-16T23:45:57.47159Z	    },
2025-09-16T23:45:57.471737Z	    pricing{
2025-09-16T23:45:57.471865Z	      currency,
2025-09-16T23:45:57.471962Z	      tiers[]{
2025-09-16T23:45:57.472057Z	        quantity,
2025-09-16T23:45:57.472173Z	        price,
2025-09-16T23:45:57.472281Z	        unit
2025-09-16T23:45:57.472383Z	      },
2025-09-16T23:45:57.472503Z	      moq,
2025-09-16T23:45:57.472607Z	      leadTime,
2025-09-16T23:45:57.472728Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:57.472865Z	      "price": tiers[0].price,
2025-09-16T23:45:57.472977Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:57.473085Z	    },
2025-09-16T23:45:57.473186Z	    inventory{
2025-09-16T23:45:57.473285Z	      quantity,
2025-09-16T23:45:57.473404Z	      status,
2025-09-16T23:45:57.473532Z	      warehouse,
2025-09-16T23:45:57.473641Z	      lastUpdated,
2025-09-16T23:45:57.473773Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:57.473904Z	      "inStock": status == "in_stock",
2025-09-16T23:45:57.474019Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:57.474135Z	    },
2025-09-16T23:45:57.474243Z	    isActive,
2025-09-16T23:45:57.474351Z	    isFeatured,
2025-09-16T23:45:57.474472Z	    isNew,
2025-09-16T23:45:57.474577Z	    _createdAt,
2025-09-16T23:45:57.474699Z	    _updatedAt
2025-09-16T23:45:57.474814Z	  
2025-09-16T23:45:57.474923Z	      },
2025-09-16T23:45:57.475018Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-16T23:45:57.475141Z	    }
2025-09-16T23:45:57.475255Z	  
2025-09-16T23:45:57.475364Z	Query parameters: {
2025-09-16T23:45:57.475512Z	  limit: 8,
2025-09-16T23:45:57.475633Z	  offset: 0,
2025-09-16T23:45:57.475782Z	  category: undefined,
2025-09-16T23:45:57.475888Z	  brand: 'mediatek',
2025-09-16T23:45:57.47599Z	  featured: undefined
2025-09-16T23:45:57.476094Z	}
2025-09-16T23:45:57.476191Z	Fetching solutions with query: 
2025-09-16T23:45:57.476289Z	    {
2025-09-16T23:45:57.476395Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:57.47652Z	        
2025-09-16T23:45:57.476629Z	    _id,
2025-09-16T23:45:57.476777Z	    title,
2025-09-16T23:45:57.476886Z	    "slug": slug.current,
2025-09-16T23:45:57.47699Z	    summary,
2025-09-16T23:45:57.477098Z	    description,
2025-09-16T23:45:57.477203Z	    coverImage,
2025-09-16T23:45:57.477322Z	    primaryBrand->{
2025-09-16T23:45:57.477438Z	      _id,
2025-09-16T23:45:57.477558Z	      name,
2025-09-16T23:45:57.477661Z	      "slug": slug.current,
2025-09-16T23:45:57.477799Z	      logo
2025-09-16T23:45:57.477911Z	    },
2025-09-16T23:45:57.478017Z	    relatedBrands[]->{
2025-09-16T23:45:57.478113Z	      _id,
2025-09-16T23:45:57.478217Z	      name,
2025-09-16T23:45:57.478345Z	      "slug": slug.current,
2025-09-16T23:45:57.478465Z	      logo
2025-09-16T23:45:57.478569Z	    },
2025-09-16T23:45:57.478706Z	    targetMarket,
2025-09-16T23:45:57.478822Z	    complexity,
2025-09-16T23:45:57.478928Z	    publishedAt,
2025-09-16T23:45:57.479028Z	    isPublished,
2025-09-16T23:45:57.479125Z	    isFeatured,
2025-09-16T23:45:57.479288Z	    viewCount,
2025-09-16T23:45:57.47948Z	    _createdAt,
2025-09-16T23:45:57.479617Z	    _updatedAt
2025-09-16T23:45:57.479767Z	  
2025-09-16T23:45:57.479882Z	      },
2025-09-16T23:45:57.479995Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-16T23:45:57.481548Z	    }
2025-09-16T23:45:57.481855Z	  
2025-09-16T23:45:57.482217Z	Query parameters: {
2025-09-16T23:45:57.482561Z	  limit: 4,
2025-09-16T23:45:57.482931Z	  offset: 0,
2025-09-16T23:45:57.483249Z	  targetMarket: undefined,
2025-09-16T23:45:57.483387Z	  brand: 'mediatek',
2025-09-16T23:45:57.483503Z	  featured: undefined
2025-09-16T23:45:57.524569Z	}
2025-09-16T23:45:57.525071Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:57.525406Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:57.525773Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:57.526008Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:45:57.526317Z	Fetching products with query: 
2025-09-16T23:45:57.526462Z	    {
2025-09-16T23:45:57.526851Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:57.527083Z	        
2025-09-16T23:45:57.527205Z	    _id,
2025-09-16T23:45:57.527314Z	    _type,
2025-09-16T23:45:57.527515Z	    partNumber,
2025-09-16T23:45:57.52934Z	    "slug": slug.current,
2025-09-16T23:45:57.529505Z	    title,
2025-09-16T23:45:57.529623Z	    shortDescription,
2025-09-16T23:45:57.529995Z	    image,
2025-09-16T23:45:57.530127Z	    brand->{
2025-09-16T23:45:57.53028Z	      name,
2025-09-16T23:45:57.530445Z	      "slug": slug.current,
2025-09-16T23:45:57.530572Z	      logo
2025-09-16T23:45:57.530712Z	    },
2025-09-16T23:45:57.531271Z	    category->{
2025-09-16T23:45:57.531401Z	      name,
2025-09-16T23:45:57.531502Z	      "slug": slug.current
2025-09-16T23:45:57.531803Z	    },
2025-09-16T23:45:57.532544Z	    pricing{
2025-09-16T23:45:57.533332Z	      currency,
2025-09-16T23:45:57.533904Z	      tiers[]{
2025-09-16T23:45:57.534508Z	        quantity,
2025-09-16T23:45:57.534669Z	        price,
2025-09-16T23:45:57.534801Z	        unit
2025-09-16T23:45:57.535625Z	      },
2025-09-16T23:45:57.535773Z	      moq,
2025-09-16T23:45:57.535883Z	      leadTime,
2025-09-16T23:45:57.53639Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:57.536692Z	      "price": tiers[0].price,
2025-09-16T23:45:57.536989Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:57.537185Z	    },
2025-09-16T23:45:57.537407Z	    inventory{
2025-09-16T23:45:57.537528Z	      quantity,
2025-09-16T23:45:57.537634Z	      status,
2025-09-16T23:45:57.537758Z	      warehouse,
2025-09-16T23:45:57.537869Z	      lastUpdated,
2025-09-16T23:45:57.537992Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:57.538105Z	      "inStock": status == "in_stock",
2025-09-16T23:45:57.538215Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:57.538327Z	    },
2025-09-16T23:45:57.538446Z	    isActive,
2025-09-16T23:45:57.538554Z	    isFeatured,
2025-09-16T23:45:57.538655Z	    isNew,
2025-09-16T23:45:57.538908Z	    _createdAt,
2025-09-16T23:45:57.539048Z	    _updatedAt
2025-09-16T23:45:57.539165Z	  
2025-09-16T23:45:57.539427Z	      },
2025-09-16T23:45:57.539798Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:45:57.540561Z	    }
2025-09-16T23:45:57.540738Z	  
2025-09-16T23:45:57.540874Z	Query parameters: {
2025-09-16T23:45:57.541022Z	  limit: 8,
2025-09-16T23:45:57.54113Z	  offset: 0,
2025-09-16T23:45:57.541269Z	  category: undefined,
2025-09-16T23:45:57.541713Z	  brand: 'qualcomm',
2025-09-16T23:45:57.542002Z	  featured: undefined
2025-09-16T23:45:57.542222Z	}
2025-09-16T23:45:57.542473Z	Fetching solutions with query: 
2025-09-16T23:45:57.542632Z	    {
2025-09-16T23:45:57.542863Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:57.543048Z	        
2025-09-16T23:45:57.543279Z	    _id,
2025-09-16T23:45:57.543489Z	    title,
2025-09-16T23:45:57.543757Z	    "slug": slug.current,
2025-09-16T23:45:57.543937Z	    summary,
2025-09-16T23:45:57.544097Z	    description,
2025-09-16T23:45:57.544251Z	    coverImage,
2025-09-16T23:45:57.544408Z	    primaryBrand->{
2025-09-16T23:45:57.54465Z	   ❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:57.545464Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:57.545718Z	Error fetching brand products data: Error: NEXT_NOT_FOUND
2025-09-16T23:45:57.546916Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:45:57.547366Z	    at y (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/products/page.js:1:4657)
2025-09-16T23:45:57.548338Z	    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-09-16T23:45:57.548573Z	    at runNextTicks (node:internal/process/task_queues:64:3)
2025-09-16T23:45:57.54906Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:45:57.549216Z	    at process.processTimers (node:internal/timers:512:7) {
2025-09-16T23:45:57.549354Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:45:57.550794Z	}
2025-09-16T23:45:57.550951Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:57.551073Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:57.551181Z	Error fetching brand products data: Error: NEXT_NOT_FOUND
2025-09-16T23:45:57.551285Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:45:57.551405Z	    at y (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/products/page.js:1:4657)
2025-09-16T23:45:57.551559Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:45:57.55172Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:45:57.551825Z	}
2025-09-16T23:45:57.551925Z	   _id,
2025-09-16T23:45:57.552027Z	      name,
2025-09-16T23:45:57.55214Z	      "slug": slug.current,
2025-09-16T23:45:57.552268Z	      logo
2025-09-16T23:45:57.55239Z	    },
2025-09-16T23:45:57.552497Z	    relatedBrands[]->{
2025-09-16T23:45:57.5526Z	      _id,
2025-09-16T23:45:57.552728Z	      name,
2025-09-16T23:45:57.552868Z	      "slug": slug.current,
2025-09-16T23:45:57.553009Z	      logo
2025-09-16T23:45:57.553139Z	    },
2025-09-16T23:45:57.553697Z	    targetMarket,
2025-09-16T23:45:57.553954Z	    complexity,
2025-09-16T23:45:57.554134Z	    publishedAt,
2025-09-16T23:45:57.554409Z	    isPublished,
2025-09-16T23:45:57.554817Z	    isFeatured,
2025-09-16T23:45:57.554976Z	    viewCount,
2025-09-16T23:45:57.555087Z	    _createdAt,
2025-09-16T23:45:57.555195Z	    _updatedAt
2025-09-16T23:45:57.555299Z	  
2025-09-16T23:45:57.555458Z	      },
2025-09-16T23:45:57.555609Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:45:57.556058Z	    }
2025-09-16T23:45:57.556295Z	  
2025-09-16T23:45:57.556441Z	Query parameters: {
2025-09-16T23:45:57.556791Z	  limit: 4,
2025-09-16T23:45:57.556937Z	  offset: 0,
2025-09-16T23:45:57.557037Z	  targetMarket: undefined,
2025-09-16T23:45:57.557128Z	  brand: 'qualcomm',
2025-09-16T23:45:57.557233Z	  featured: undefined
2025-09-16T23:45:57.557345Z	}
2025-09-16T23:45:57.557459Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:45:57.557567Z	Fetching products with query: 
2025-09-16T23:45:57.557717Z	    {
2025-09-16T23:45:57.557993Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:57.55812Z	        
2025-09-16T23:45:57.558226Z	    _id,
2025-09-16T23:45:57.558329Z	    _type,
2025-09-16T23:45:57.558901Z	    partNumber,
2025-09-16T23:45:57.559051Z	    "slug": slug.current,
2025-09-16T23:45:57.559248Z	    title,
2025-09-16T23:45:57.55938Z	    shortDescription,
2025-09-16T23:45:57.559477Z	    image,
2025-09-16T23:45:57.559569Z	    brand->{
2025-09-16T23:45:57.559671Z	      name,
2025-09-16T23:45:57.559792Z	      "slug": slug.current,
2025-09-16T23:45:57.55989Z	      logo
2025-09-16T23:45:57.559984Z	    },
2025-09-16T23:45:57.560087Z	    category->{
2025-09-16T23:45:57.560185Z	      name,
2025-09-16T23:45:57.560278Z	      "slug": slug.current
2025-09-16T23:45:57.560386Z	    },
2025-09-16T23:45:57.560486Z	    pricing{
2025-09-16T23:45:57.560588Z	      currency,
2025-09-16T23:45:57.5607Z	      tiers[]{
2025-09-16T23:45:57.560804Z	        quantity,
2025-09-16T23:45:57.561229Z	        price,
2025-09-16T23:45:57.56153Z	        unit
2025-09-16T23:45:57.561698Z	      },
2025-09-16T23:45:57.561814Z	      moq,
2025-09-16T23:45:57.561921Z	      leadTime,
2025-09-16T23:45:57.562019Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:57.562122Z	      "price": tiers[0].price,
2025-09-16T23:45:57.56222Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:57.562319Z	    },
2025-09-16T23:45:57.562423Z	    inventory{
2025-09-16T23:45:57.562519Z	      quantity,
2025-09-16T23:45:57.562603Z	      status,
2025-09-16T23:45:57.562705Z	      warehouse,
2025-09-16T23:45:57.562846Z	      lastUpdated,
2025-09-16T23:45:57.563045Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:57.563192Z	      "inStock": status == "in_stock",
2025-09-16T23:45:57.563337Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:57.563504Z	    },
2025-09-16T23:45:57.563622Z	    isActive,
2025-09-16T23:45:57.563751Z	    isFeatured,
2025-09-16T23:45:57.56387Z	    isNew,
2025-09-16T23:45:57.563964Z	    _createdAt,
2025-09-16T23:45:57.564048Z	    _updatedAt
2025-09-16T23:45:57.568867Z	  
2025-09-16T23:45:57.56909Z	      },
2025-09-16T23:45:57.569221Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:45:57.569343Z	    }
2025-09-16T23:45:57.569464Z	  
2025-09-16T23:45:57.569567Z	Query parameters: {
2025-09-16T23:45:57.569666Z	  limit: 8,
2025-09-16T23:45:57.56979Z	  offset: 0,
2025-09-16T23:45:57.56989Z	  category: undefined,
2025-09-16T23:45:57.569988Z	  brand: 'qualcomm',
2025-09-16T23:45:57.570081Z	  featured: undefined
2025-09-16T23:45:57.570174Z	}
2025-09-16T23:45:57.570271Z	Fetching solutions with query: 
2025-09-16T23:45:57.570377Z	    {
2025-09-16T23:45:57.570467Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:57.570569Z	        
2025-09-16T23:45:57.570665Z	    _id,
2025-09-16T23:45:57.570782Z	    title,
2025-09-16T23:45:57.570874Z	    "slug": slug.current,
2025-09-16T23:45:57.570976Z	    summary,
2025-09-16T23:45:57.571069Z	    description,
2025-09-16T23:45:57.571158Z	    coverImage,
2025-09-16T23:45:57.57126Z	    primaryBrand->{
2025-09-16T23:45:57.57137Z	      _id,
2025-09-16T23:45:57.571457Z	      name,
2025-09-16T23:45:57.571578Z	      "slug": slug.current,
2025-09-16T23:45:57.571689Z	      logo
2025-09-16T23:45:57.571793Z	    },
2025-09-16T23:45:57.571884Z	    relatedBrands[]->{
2025-09-16T23:45:57.571977Z	      _id,
2025-09-16T23:45:57.572066Z	      name,
2025-09-16T23:45:57.572165Z	      "slug": slug.current,
2025-09-16T23:45:57.572256Z	      logo
2025-09-16T23:45:57.572347Z	    },
2025-09-16T23:45:57.572455Z	    targetMarket,
2025-09-16T23:45:57.57255Z	    complexity,
2025-09-16T23:45:57.572643Z	    publishedAt,
2025-09-16T23:45:57.572762Z	    isPublished,
2025-09-16T23:45:57.57287Z	    isFeatured,
2025-09-16T23:45:57.572967Z	    viewCount,
2025-09-16T23:45:57.573057Z	    _createdAt,
2025-09-16T23:45:57.575381Z	    _updatedAt
2025-09-16T23:45:57.575512Z	  
2025-09-16T23:45:57.575626Z	      },
2025-09-16T23:45:57.575751Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:45:57.57586Z	    }
2025-09-16T23:45:57.575955Z	  
2025-09-16T23:45:57.576042Z	Query parameters: {
2025-09-16T23:45:57.576151Z	  limit: 4,
2025-09-16T23:45:57.577918Z	  offset: 0,
2025-09-16T23:45:57.578061Z	  targetMarket: undefined,
2025-09-16T23:45:57.578166Z	  brand: 'qualcomm',
2025-09-16T23:45:57.624004Z	  featured: undefined
2025-09-16T23:45:57.624297Z	}
2025-09-16T23:45:57.624456Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:45:57.624584Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:45:57.624719Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:57.624827Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:57.624919Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:57.625009Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:57.625119Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-16T23:45:57.625216Z	Fetching products with query: 
2025-09-16T23:45:57.625313Z	    {
2025-09-16T23:45:57.625405Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:57.625521Z	        
2025-09-16T23:45:57.625622Z	    _id,
2025-09-16T23:45:57.625741Z	    _type,
2025-09-16T23:45:57.625834Z	    partNumber,
2025-09-16T23:45:57.628028Z	    "slug": slug.current,
2025-09-16T23:45:57.628206Z	    title,
2025-09-16T23:45:57.628323Z	    shortDescription,
2025-09-16T23:45:57.628435Z	    image,
2025-09-16T23:45:57.628566Z	    brand->{
2025-09-16T23:45:57.628663Z	      name,
2025-09-16T23:45:57.628788Z	      "slug": slug.current,
2025-09-16T23:45:57.628896Z	      logo
2025-09-16T23:45:57.629758Z	    },
2025-09-16T23:45:57.629861Z	    category->{
2025-09-16T23:45:57.629947Z	      name,
2025-09-16T23:45:57.630028Z	      "slug": slug.current
2025-09-16T23:45:57.630111Z	    },
2025-09-16T23:45:57.630192Z	    pricing{
2025-09-16T23:45:57.630276Z	      currency,
2025-09-16T23:45:57.63036Z	      tiers[]{
2025-09-16T23:45:57.630458Z	        quantity,
2025-09-16T23:45:57.630559Z	        price,
2025-09-16T23:45:57.630643Z	        unit
2025-09-16T23:45:57.630755Z	      },
2025-09-16T23:45:57.630842Z	      moq,
2025-09-16T23:45:57.630924Z	      leadTime,
2025-09-16T23:45:57.631005Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:57.63109Z	      "price": tiers[0].price,
2025-09-16T23:45:57.631172Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:57.631254Z	    },
2025-09-16T23:45:57.631337Z	    inventory{
2025-09-16T23:45:57.631418Z	      quantity,
2025-09-16T23:45:57.6315Z	      status,
2025-09-16T23:45:57.631581Z	      warehouse,
2025-09-16T23:45:57.631661Z	      lastUpdated,
2025-09-16T23:45:57.631771Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:57.631885Z	      "inStock": status == "in_stock",
2025-09-16T23:45:57.63197Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:57.632053Z	    },
2025-09-16T23:45:57.632133Z	    isActive,
2025-09-16T23:45:57.632212Z	    isFeatured,
2025-09-16T23:45:57.632292Z	    isNew,
2025-09-16T23:45:57.632371Z	    _createdAt,
2025-09-16T23:45:57.632461Z	    _updatedAt
2025-09-16T23:45:57.632553Z	  
2025-09-16T23:45:57.632637Z	      },
2025-09-16T23:45:57.632743Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-16T23:45:57.632839Z	    }
2025-09-16T23:45:57.632926Z	  
2025-09-16T23:45:57.633008Z	Query parameters: {
2025-09-16T23:45:57.633095Z	  limit: 8,
2025-09-16T23:45:57.633176Z	  offset: 0,
2025-09-16T23:45:57.633256Z	  category: undefined,
2025-09-16T23:45:57.633336Z	  brand: 'mediatek',
2025-09-16T23:45:57.633418Z	  featured: undefined
2025-09-16T23:45:57.6335Z	}
2025-09-16T23:45:57.636795Z	Fetching solutions with query: 
2025-09-16T23:45:57.63788Z	    {
2025-09-16T23:45:57.638193Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:57.638603Z	        
2025-09-16T23:45:57.638921Z	    _id,
2025-09-16T23:45:57.639242Z	    title,
2025-09-16T23:45:57.639455Z	    "slug": slug.current,
2025-09-16T23:45:57.639574Z	    summary,
2025-09-16T23:45:57.639687Z	    description,
2025-09-16T23:45:57.639817Z	    coverImage,
2025-09-16T23:45:57.639926Z	    primaryBrand->{
2025-09-16T23:45:57.640022Z	      _id,
2025-09-16T23:45:57.640123Z	      name,
2025-09-16T23:45:57.640251Z	      "slug": slug.current,
2025-09-16T23:45:57.640347Z	      logo
2025-09-16T23:45:57.640436Z	    },
2025-09-16T23:45:57.640532Z	    relatedBrands[]->{
2025-09-16T23:45:57.640641Z	      _id,
2025-09-16T23:45:57.64081Z	      name,
2025-09-16T23:45:57.640972Z	      "slug": slug.current,
2025-09-16T23:45:57.641072Z	      logo
2025-09-16T23:45:57.641169Z	    },
2025-09-16T23:45:57.64127Z	    targetMarket,
2025-09-16T23:45:57.641582Z	    complexity,
2025-09-16T23:45:57.641726Z	    publishedAt,
2025-09-16T23:45:57.641831Z	    isPublished,
2025-09-16T23:45:57.641927Z	    isFeatured,
2025-09-16T23:45:57.642017Z	    viewCount,
2025-09-16T23:45:57.642106Z	    _createdAt,
2025-09-16T23:45:57.642208Z	    _updatedAt
2025-09-16T23:45:57.642302Z	  
2025-09-16T23:45:57.642404Z	      },
2025-09-16T23:45:57.6459Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-16T23:45:57.646209Z	    }
2025-09-16T23:45:57.646336Z	  
2025-09-16T23:45:57.646439Z	Query parameters: {
2025-09-16T23:45:57.646623Z	  limit: 4,
2025-09-16T23:45:57.647016Z	  offset: 0,
2025-09-16T23:45:57.647342Z	  targetMarket: undefined,
2025-09-16T23:45:57.647729Z	  brand: 'mediatek',
2025-09-16T23:45:57.648073Z	  featured: undefined
2025-09-16T23:45:57.648401Z	}
2025-09-16T23:45:57.648556Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:57.648689Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:57.649066Z	✅ [getBrandData] Found brand: MediaTek
2025-09-16T23:45:57.649192Z	✅ [getBrandData] Found brand: MediaTek
2025-09-16T23:45:57.649294Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:57.649412Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:57.649524Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-16T23:45:57.649656Z	Fetching products with query: 
2025-09-16T23:45:57.649849Z	    {
2025-09-16T23:45:57.649966Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:57.650071Z	        
2025-09-16T23:45:57.651834Z	    _id,
2025-09-16T23:45:57.652029Z	    _type,
2025-09-16T23:45:57.652132Z	    partNumber,
2025-09-16T23:45:57.65223Z	    "slug": slug.current,
2025-09-16T23:45:57.654373Z	    title,
2025-09-16T23:45:57.654809Z	    shortDescription,
2025-09-16T23:45:57.655177Z	    image,
2025-09-16T23:45:57.655568Z	    brand->{
2025-09-16T23:45:57.656148Z	      name,
2025-09-16T23:45:57.656489Z	      "slug": slug.current,
2025-09-16T23:45:57.657096Z	      logo
2025-09-16T23:45:57.657442Z	    },
2025-09-16T23:45:57.657777Z	    category->{
2025-09-16T23:45:57.658298Z	      name,
2025-09-16T23:45:57.659082Z	      "slug": slug.current
2025-09-16T23:45:57.659562Z	    },
2025-09-16T23:45:57.659747Z	    pricing{
2025-09-16T23:45:57.659977Z	      currency,
2025-09-16T23:45:57.660205Z	      tiers[]{
2025-09-16T23:45:57.66044Z	        quantity,
2025-09-16T23:45:57.66058Z	        price,
2025-09-16T23:45:57.660733Z	        unit
2025-09-16T23:45:57.661066Z	      },
2025-09-16T23:45:57.661305Z	      moq,
2025-09-16T23:45:57.661536Z	      leadTime,
2025-09-16T23:45:57.66166Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:57.662175Z	      "price": tiers[0].price,
2025-09-16T23:45:57.662437Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:57.662546Z	    },
2025-09-16T23:45:57.662637Z	    inventory{
2025-09-16T23:45:57.662887Z	      quantity,
2025-09-16T23:45:57.662988Z	      status,
2025-09-16T23:45:57.663073Z	      warehouse,
2025-09-16T23:45:57.663161Z	      lastUpdated,
2025-09-16T23:45:57.663488Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:57.663642Z	      "inStock": status == "in_stock",
2025-09-16T23:45:57.663899Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:57.664066Z	    },
2025-09-16T23:45:57.664177Z	    isActive,
2025-09-16T23:45:57.664269Z	    isFeatured,
2025-09-16T23:45:57.664357Z	    isNew,
2025-09-16T23:45:57.664459Z	    _createdAt,
2025-09-16T23:45:57.66455Z	    _updatedAt
2025-09-16T23:45:57.664699Z	  
2025-09-16T23:45:57.664804Z	      },
2025-09-16T23:45:57.664896Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-16T23:45:57.665035Z	    }
2025-09-16T23:45:57.665219Z	  
2025-09-16T23:45:57.665343Z	Query parameters: {
2025-09-16T23:45:57.665455Z	  limit: 8,
2025-09-16T23:45:57.666314Z	  offset: 0,
2025-09-16T23:45:57.666832Z	  category: undefined,
2025-09-16T23:45:57.666955Z	  brand: 'pi',
2025-09-16T23:45:57.667063Z	  featured: undefined
2025-09-16T23:45:57.667169Z	}
2025-09-16T23:45:57.667416Z	Fetching solutions with query: 
2025-09-16T23:45:57.667589Z	    {
2025-09-16T23:45:57.667878Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:57.668283Z	        
2025-09-16T23:45:57.668417Z	    _id,
2025-09-16T23:45:57.669464Z	    title,
2025-09-16T23:45:57.669635Z	    "slug": slug.current,
2025-09-16T23:45:57.669786Z	    summary,
2025-09-16T23:45:57.669901Z	    description,
2025-09-16T23:45:57.670109Z	    coverImage,
2025-09-16T23:45:57.670439Z	    primaryBrand->{
2025-09-16T23:45:57.670581Z	      _id,
2025-09-16T23:45:57.670691Z	      name,
2025-09-16T23:45:57.670818Z	      "slug": slug.current,
2025-09-16T23:45:57.670926Z	      logo
2025-09-16T23:45:57.67103Z	    },
2025-09-16T23:45:57.671142Z	    relatedBrands[]->{
2025-09-16T23:45:57.67125Z	      _id,
2025-09-16T23:45:57.674076Z	      name,
2025-09-16T23:45:57.674291Z	      "slug": slug.current,
2025-09-16T23:45:57.674866Z	      logo
2025-09-16T23:45:57.675004Z	    },
2025-09-16T23:45:57.675227Z	    targetMarket,
2025-09-16T23:45:57.675384Z	    complexity,
2025-09-16T23:45:57.675513Z	    publishedAt,
2025-09-16T23:45:57.675624Z	    isPublished,
2025-09-16T23:45:57.675742Z	    isFeatured,
2025-09-16T23:45:57.67584Z	    viewCount,
2025-09-16T23:45:57.675997Z	    _createdAt,
2025-09-16T23:45:57.676094Z	    _updatedAt
2025-09-16T23:45:57.676181Z	  
2025-09-16T23:45:57.67628Z	      },
2025-09-16T23:45:57.676376Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-16T23:45:57.67659Z	    }
2025-09-16T23:45:57.677011Z	  
2025-09-16T23:45:57.677269Z	Query parameters: {
2025-09-16T23:45:57.677513Z	  limit: 4,
2025-09-16T23:45:57.677632Z	  offset: 0,
2025-09-16T23:45:57.678229Z	  targetMarket: undefined,
2025-09-16T23:45:57.678564Z	  brand: 'pi',
2025-09-16T23:45:57.678993Z	  featured: undefined
2025-09-16T23:45:57.679133Z	}
2025-09-16T23:45:57.679301Z	✅ [getBrandData] Found brand: PI
2025-09-16T23:45:57.679468Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:57.679592Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:57.72465Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-16T23:45:57.724916Z	Fetching products with query: 
2025-09-16T23:45:57.725145Z	    {
2025-09-16T23:45:57.725328Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:57.725482Z	        
2025-09-16T23:45:57.725658Z	    _id,
2025-09-16T23:45:57.725801Z	    _type,
2025-09-16T23:45:57.725917Z	    partNumber,
2025-09-16T23:45:57.726014Z	    "slug": slug.current,
2025-09-16T23:45:57.726181Z	    title,
2025-09-16T23:45:57.726597Z	    shortDescription,
2025-09-16T23:45:57.726847Z	    image,
2025-09-16T23:45:57.726979Z	    brand->{
2025-09-16T23:45:57.72718Z	      name,
2025-09-16T23:45:57.727268Z	      "slug": slug.current,
2025-09-16T23:45:57.727367Z	      logo
2025-09-16T23:45:57.727591Z	    },
2025-09-16T23:45:57.727727Z	    category->{
2025-09-16T23:45:57.728025Z	      name,
2025-09-16T23:45:57.728365Z	      "slug": slug.current
2025-09-16T23:45:57.728506Z	    },
2025-09-16T23:45:57.728816Z	    pricing{
2025-09-16T23:45:57.728949Z	      currency,
2025-09-16T23:45:57.729451Z	      tiers[]{
2025-09-16T23:45:57.729568Z	        quantity,
2025-09-16T23:45:57.730072Z	        price,
2025-09-16T23:45:57.730402Z	        unit
2025-09-16T23:45:57.730532Z	      },
2025-09-16T23:45:57.731038Z	      moq,
2025-09-16T23:45:57.731326Z	      leadTime,
2025-09-16T23:45:57.731593Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:57.731969Z	      "price": tiers[0].price,
2025-09-16T23:45:57.732313Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:57.732697Z	    },
2025-09-16T23:45:57.733002Z	    inventory{
2025-09-16T23:45:57.733309Z	      quantity,
2025-09-16T23:45:57.733546Z	      status,
2025-09-16T23:45:57.733822Z	      warehouse,
2025-09-16T23:45:57.733971Z	      lastUpdated,
2025-09-16T23:45:57.734379Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:57.734514Z	      "inStock": status == "in_stock",
2025-09-16T23:45:57.734906Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:57.735191Z	    },
2025-09-16T23:45:57.735432Z	    isActive,
2025-09-16T23:45:57.735707Z	    isFeatured,
2025-09-16T23:45:57.735988Z	    isNew,
2025-09-16T23:45:57.736148Z	    _createdAt,
2025-09-16T23:45:57.736256Z	    _updatedAt
2025-09-16T23:45:57.736357Z	  
2025-09-16T23:45:57.736634Z	      },
2025-09-16T23:45:57.736808Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-16T23:45:57.73693Z	    }
2025-09-16T23:45:57.737027Z	  
2025-09-16T23:45:57.737227Z	Query parameters: {
2025-09-16T23:45:57.737346Z	  limit: 8,
2025-09-16T23:45:57.737439Z	  offset: 0,
2025-09-16T23:45:57.737537Z	  category: undefined,
2025-09-16T23:45:57.737627Z	  brand: 'pi',
2025-09-16T23:45:57.737749Z	  featured: undefined
2025-09-16T23:45:57.737846Z	}
2025-09-16T23:45:57.737931Z	Fetching solutions with query: 
2025-09-16T23:45:57.738016Z	    {
2025-09-16T23:45:57.738111Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:57.738214Z	        
2025-09-16T23:45:57.73832Z	    _id,
2025-09-16T23:45:57.738418Z	    title,
2025-09-16T23:45:57.738538Z	    "slug": slug.current,
2025-09-16T23:45:57.738633Z	    summary,
2025-09-16T23:45:57.738757Z	    description,
2025-09-16T23:45:57.738879Z	    coverImage,
2025-09-16T23:45:57.738985Z	    primaryBrand->{
2025-09-16T23:45:57.739093Z	      _id,
2025-09-16T23:45:57.739196Z	      name,
2025-09-16T23:45:57.739334Z	      "slug": slug.current,
2025-09-16T23:45:57.73945Z	      logo
2025-09-16T23:45:57.739572Z	    },
2025-09-16T23:45:57.739688Z	    relatedBrands[]->{
2025-09-16T23:45:57.739835Z	      _id,
2025-09-16T23:45:57.739945Z	      name,
2025-09-16T23:45:57.74005Z	      "slug": slug.current,
2025-09-16T23:45:57.740167Z	      logo
2025-09-16T23:45:57.740278Z	    },
2025-09-16T23:45:57.740386Z	    targetMarket,
2025-09-16T23:45:57.740498Z	    complexity,
2025-09-16T23:45:57.740598Z	    publishedAt,
2025-09-16T23:45:57.740743Z	    isPublished,
2025-09-16T23:45:57.740862Z	    isFeatured,
2025-09-16T23:45:57.74097Z	    viewCount,
2025-09-16T23:45:57.741076Z	    _createdAt,
2025-09-16T23:45:57.741183Z	    _updatedAt
2025-09-16T23:45:57.741597Z	  
2025-09-16T23:45:57.741982Z	      },
2025-09-16T23:45:57.742327Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-16T23:45:57.742444Z	    }
2025-09-16T23:45:57.742991Z	  
2025-09-16T23:45:57.743316Z	Query parameters: {
2025-09-16T23:45:57.743646Z	  limit: 4,
2025-09-16T23:45:57.743993Z	  offset: 0,
2025-09-16T23:45:57.744111Z	  targetMarket: undefined,
2025-09-16T23:45:57.744659Z	  brand: 'pi',
2025-09-16T23:45:57.745003Z	  featured: undefined
2025-09-16T23:45:57.745135Z	}
2025-09-16T23:45:57.745501Z	✅ [getBrandData] Found brand: PI
2025-09-16T23:45:57.745864Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:57.746216Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:57.746562Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:57.746892Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-16T23:45:57.747161Z	Fetching products with query: 
2025-09-16T23:45:57.747295Z	    {
2025-09-16T23:45:57.747616Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:57.747923Z	        
2025-09-16T23:45:57.748091Z	    _id,
2025-09-16T23:45:57.748216Z	    _type,
2025-09-16T23:45:57.748605Z	    partNumber,
2025-09-16T23:45:57.748946Z	    "slug": slug.current,
2025-09-16T23:45:57.749416Z	    title,
2025-09-16T23:45:57.749606Z	    shortDescription,
2025-09-16T23:45:57.749766Z	    image,
2025-09-16T23:45:57.749886Z	    brand->{
2025-09-16T23:45:57.749994Z	      name,
2025-09-16T23:45:57.750163Z	      "slug": slug.current,
2025-09-16T23:45:57.750286Z	      logo
2025-09-16T23:45:57.750409Z	    },
2025-09-16T23:45:57.750518Z	    category->{
2025-09-16T23:45:57.750632Z	      name,
2025-09-16T23:45:57.750761Z	      "slug": slug.current
2025-09-16T23:45:57.750865Z	    },
2025-09-16T23:45:57.750962Z	    pricing{
2025-09-16T23:45:57.751361Z	      currency,
2025-09-16T23:45:57.751481Z	      tiers[]{
2025-09-16T23:45:57.751833Z	        quantity,
2025-09-16T23:45:57.751935Z	        price,
2025-09-16T23:45:57.752216Z	        unit
2025-09-16T23:45:57.752317Z	      },
2025-09-16T23:45:57.75262Z	      moq,
2025-09-16T23:45:57.75276Z	      leadTime,
2025-09-16T23:45:57.752901Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:57.753092Z	      "price": tiers[0].price,
2025-09-16T23:45:57.75333Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:57.753413Z	    },
2025-09-16T23:45:57.753541Z	    inventory{
2025-09-16T23:45:57.753709Z	      quantity,
2025-09-16T23:45:57.75379Z	      status,
2025-09-16T23:45:57.753917Z	      warehouse,
2025-09-16T23:45:57.753991Z	      lastUpdated,
2025-09-16T23:45:57.75407Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:57.754335Z	      "inStock": status == "in_stock",
2025-09-16T23:45:57.754454Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:57.754591Z	    },
2025-09-16T23:45:57.754764Z	    isActive,
2025-09-16T23:45:57.754874Z	    isFeatured,
2025-09-16T23:45:57.754976Z	    isNew,
2025-09-16T23:45:57.755135Z	    _createdAt,
2025-09-16T23:45:57.755216Z	    _updatedAt
2025-09-16T23:45:57.755334Z	  
2025-09-16T23:45:57.755404Z	      },
2025-09-16T23:45:57.755528Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-16T23:45:57.755687Z	    }
2025-09-16T23:45:57.755826Z	  
2025-09-16T23:45:57.755949Z	Query parameters: {
2025-09-16T23:45:57.756055Z	  limit: 8,
2025-09-16T23:45:57.756169Z	  offset: 0,
2025-09-16T23:45:57.75627Z	  category: undefined,
2025-09-16T23:45:57.756365Z	  brand: 'sanrex',
2025-09-16T23:45:57.756476Z	  featured: undefined
2025-09-16T23:45:57.756578Z	}
2025-09-16T23:45:57.756692Z	Fetching solutions with query: 
2025-09-16T23:45:57.756806Z	    {
2025-09-16T23:45:57.756975Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:57.757077Z	        
2025-09-16T23:45:57.757184Z	    _id,
2025-09-16T23:45:57.757331Z	    title,
2025-09-16T23:45:57.757524Z	    "slug": slug.current,
2025-09-16T23:45:57.757636Z	    summary,
2025-09-16T23:45:57.757742Z	    description,
2025-09-16T23:45:57.757829Z	    coverImage,
2025-09-16T23:45:57.758002Z	    primaryBrand->{
2025-09-16T23:45:57.758172Z	      _id,
2025-09-16T23:45:57.758309Z	      name,
2025-09-16T23:45:57.758486Z	      "slug": slug.current,
2025-09-16T23:45:57.758614Z	      logo
2025-09-16T23:45:57.75886Z	    },
2025-09-16T23:45:57.75898Z	    relatedBrands[]->{
2025-09-16T23:45:57.759095Z	      _id,
2025-09-16T23:45:57.759321Z	      name,
2025-09-16T23:45:57.759428Z	      "slug": slug.current,
2025-09-16T23:45:57.759564Z	      logo
2025-09-16T23:45:57.759735Z	    },
2025-09-16T23:45:57.759848Z	    targetMarket,
2025-09-16T23:45:57.760014Z	    complexity,
2025-09-16T23:45:57.760176Z	    publishedAt,
2025-09-16T23:45:57.760316Z	    isPublished,
2025-09-16T23:45:57.760459Z	    isFeatured,
2025-09-16T23:45:57.760575Z	    viewCount,
2025-09-16T23:45:57.760656Z	    _createdAt,
2025-09-16T23:45:57.760784Z	    _updatedAt
2025-09-16T23:45:57.760901Z	  
2025-09-16T23:45:57.761011Z	      },
2025-09-16T23:45:57.76114Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-16T23:45:57.761283Z	    }
2025-09-16T23:45:57.761371Z	  
2025-09-16T23:45:57.7615Z	Query parameters: {
2025-09-16T23:45:57.761647Z	  limit: 4,
2025-09-16T23:45:57.761807Z	  offset: 0,
2025-09-16T23:45:57.761936Z	  targetMarket: undefined,
2025-09-16T23:45:57.762033Z	  brand: 'sanrex',
2025-09-16T23:45:57.762155Z	  featured: undefined
2025-09-16T23:45:57.762283Z	}
2025-09-16T23:45:57.762387Z	✅ [getBrandData] Found brand: Sanrex
2025-09-16T23:45:57.762474Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:57.762573Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:57.762725Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-16T23:45:57.762972Z	Fetching products with query: 
2025-09-16T23:45:57.763083Z	    {
2025-09-16T23:45:57.763317Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:57.763413Z	        
2025-09-16T23:45:57.763705Z	    _id,
2025-09-16T23:45:57.763832Z	    _type,
2025-09-16T23:45:57.764052Z	    partNumber,
2025-09-16T23:45:57.764115Z	    "slug": slug.current,
2025-09-16T23:45:57.764363Z	    title,
2025-09-16T23:45:57.764444Z	    shortDescription,
2025-09-16T23:45:57.764587Z	    image,
2025-09-16T23:45:57.764734Z	    brand->{
2025-09-16T23:45:57.764892Z	      name,
2025-09-16T23:45:57.76517Z	      "slug": slug.current,
2025-09-16T23:45:57.765276Z	      logo
2025-09-16T23:45:57.765339Z	    },
2025-09-16T23:45:57.765619Z	    category->{
2025-09-16T23:45:57.765736Z	      name,
2025-09-16T23:45:57.765867Z	      "slug": slug.current
2025-09-16T23:45:57.765976Z	    },
2025-09-16T23:45:57.766072Z	    pricing{
2025-09-16T23:45:57.76617Z	      currency,
2025-09-16T23:45:57.766236Z	      tiers[]{
2025-09-16T23:45:57.766322Z	        quantity,
2025-09-16T23:45:57.766522Z	        price,
2025-09-16T23:45:57.7666Z	        unit
2025-09-16T23:45:57.766747Z	      },
2025-09-16T23:45:57.766852Z	      moq,
2025-09-16T23:45:57.767007Z	      leadTime,
2025-09-16T23:45:57.767122Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:57.767189Z	      "price": tiers[0].price,
2025-09-16T23:45:57.76729Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:57.767411Z	    },
2025-09-16T23:45:57.767509Z	    inventory{
2025-09-16T23:45:57.76762Z	      quantity,
2025-09-16T23:45:57.76775Z	      status,
2025-09-16T23:45:57.767862Z	      warehouse,
2025-09-16T23:45:57.767981Z	      lastUpdated,
2025-09-16T23:45:57.768092Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:57.768245Z	      "inStock": status == "in_stock",
2025-09-16T23:45:57.768324Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:57.768448Z	    },
2025-09-16T23:45:57.768572Z	    isActive,
2025-09-16T23:45:57.768707Z	    isFeatured,
2025-09-16T23:45:57.768835Z	    isNew,
2025-09-16T23:45:57.768931Z	    _createdAt,
2025-09-16T23:45:57.769044Z	    _updatedAt
2025-09-16T23:45:57.769145Z	  
2025-09-16T23:45:57.769253Z	      },
2025-09-16T23:45:57.769397Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-16T23:45:57.769482Z	    }
2025-09-16T23:45:57.769542Z	  
2025-09-16T23:45:57.769631Z	Query parameters: {
2025-09-16T23:45:57.769799Z	  limit: 8,
2025-09-16T23:45:57.769877Z	  offset: 0,
2025-09-16T23:45:57.769979Z	  category: undefined,
2025-09-16T23:45:57.770044Z	  brand: 'sanrex',
2025-09-16T23:45:57.770101Z	  featured: undefined
2025-09-16T23:45:57.770196Z	}
2025-09-16T23:45:57.770326Z	Fetching solutions with query: 
2025-09-16T23:45:57.770475Z	    {
2025-09-16T23:45:57.770554Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:57.770686Z	        
2025-09-16T23:45:57.770809Z	    _id❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:57.77099Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:57.771076Z	Error fetching brand products data: Error: NEXT_NOT_FOUND
2025-09-16T23:45:57.771217Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:45:57.771342Z	    at y (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/products/page.js:1:4657)
2025-09-16T23:45:57.771458Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:45:57.771579Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:45:57.771689Z	}
2025-09-16T23:45:57.771794Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:57.771907Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:57.77203Z	Error fetching brand products data: Error: NEXT_NOT_FOUND
2025-09-16T23:45:57.772144Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:45:57.772269Z	    at y (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/products/page.js:1:4657)
2025-09-16T23:45:57.772367Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:45:57.772477Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:45:57.772577Z	}
2025-09-16T23:45:57.772704Z	,
2025-09-16T23:45:57.772833Z	    title,
2025-09-16T23:45:57.772941Z	    "slug": slug.current,
2025-09-16T23:45:57.773048Z	    summary,
2025-09-16T23:45:57.773146Z	    description,
2025-09-16T23:45:57.773238Z	    coverImage,
2025-09-16T23:45:57.77334Z	    primaryBrand->{
2025-09-16T23:45:57.773431Z	      _id,
2025-09-16T23:45:57.773529Z	      name,
2025-09-16T23:45:57.773625Z	      "slug": slug.current,
2025-09-16T23:45:57.773765Z	      logo
2025-09-16T23:45:57.773904Z	    },
2025-09-16T23:45:57.77401Z	    relatedBrands[]->{
2025-09-16T23:45:57.774111Z	      _id,
2025-09-16T23:45:57.774218Z	      name,
2025-09-16T23:45:57.774324Z	      "slug": slug.current,
2025-09-16T23:45:57.774425Z	      logo
2025-09-16T23:45:57.774527Z	    },
2025-09-16T23:45:57.774629Z	    targetMarket,
2025-09-16T23:45:57.774753Z	    complexity,
2025-09-16T23:45:57.774854Z	    publishedAt,
2025-09-16T23:45:57.774945Z	    isPublished,
2025-09-16T23:45:57.775068Z	    isFeatured,
2025-09-16T23:45:57.775189Z	    viewCount,
2025-09-16T23:45:57.775306Z	    _createdAt,
2025-09-16T23:45:57.775409Z	    _updatedAt
2025-09-16T23:45:57.775505Z	  
2025-09-16T23:45:57.775596Z	      },
2025-09-16T23:45:57.775815Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-16T23:45:57.775931Z	    }
2025-09-16T23:45:57.776114Z	  
2025-09-16T23:45:57.776205Z	Query parameters: {
2025-09-16T23:45:57.776332Z	  limit: 4,
2025-09-16T23:45:57.776432Z	  offset: 0,
2025-09-16T23:45:57.77659Z	  targetMarket: undefined,
2025-09-16T23:45:57.776712Z	  brand: 'sanrex',
2025-09-16T23:45:57.776952Z	  featured: undefined
2025-09-16T23:45:57.777058Z	}
2025-09-16T23:45:57.777214Z	✅ [getBrandData] Found brand: Sanrex
2025-09-16T23:45:57.777319Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:57.777452Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:57.777554Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-16T23:45:57.777832Z	Fetching products with query: 
2025-09-16T23:45:57.777929Z	    {
2025-09-16T23:45:57.778216Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:57.778433Z	        
2025-09-16T23:45:57.778616Z	    _id,
2025-09-16T23:45:57.778775Z	    _type,
2025-09-16T23:45:57.77887Z	    partNumber,
2025-09-16T23:45:57.778934Z	    "slug": slug.current,
2025-09-16T23:45:57.779048Z	    title,
2025-09-16T23:45:57.779112Z	    shortDescription,
2025-09-16T23:45:57.779213Z	    image,
2025-09-16T23:45:57.779363Z	    brand->{
2025-09-16T23:45:57.779437Z	      name,
2025-09-16T23:45:57.779564Z	      "slug": slug.current,
2025-09-16T23:45:57.779656Z	      logo
2025-09-16T23:45:57.779843Z	    },
2025-09-16T23:45:57.779999Z	    category->{
2025-09-16T23:45:57.780089Z	      name,
2025-09-16T23:45:57.780208Z	      "slug": slug.current
2025-09-16T23:45:57.78036Z	    },
2025-09-16T23:45:57.780485Z	    pricing{
2025-09-16T23:45:57.780617Z	      currency,
2025-09-16T23:45:57.780761Z	      tiers[]{
2025-09-16T23:45:57.780829Z	        quantity,
2025-09-16T23:45:57.781013Z	        price,
2025-09-16T23:45:57.781276Z	        unit
2025-09-16T23:45:57.781365Z	      },
2025-09-16T23:45:57.781429Z	      moq,
2025-09-16T23:45:57.781516Z	      leadTime,
2025-09-16T23:45:57.78158Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:57.781645Z	      "price": tiers[0].price,
2025-09-16T23:45:57.781743Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:57.781803Z	    },
2025-09-16T23:45:57.781861Z	    inventory{
2025-09-16T23:45:57.781925Z	      quantity,
2025-09-16T23:45:57.782Z	      status,
2025-09-16T23:45:57.782062Z	      warehouse,
2025-09-16T23:45:57.782136Z	      lastUpdated,
2025-09-16T23:45:57.7822Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:57.782272Z	      "inStock": status == "in_stock",
2025-09-16T23:45:57.782338Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:57.782399Z	    },
2025-09-16T23:45:57.782454Z	    isActive,
2025-09-16T23:45:57.78251Z	    isFeatured,
2025-09-16T23:45:57.782564Z	    isNew,
2025-09-16T23:45:57.782624Z	    _createdAt,
2025-09-16T23:45:57.7827Z	    _updatedAt
2025-09-16T23:45:57.782759Z	  
2025-09-16T23:45:57.782814Z	      },
2025-09-16T23:45:57.782872Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-16T23:45:57.782941Z	    }
2025-09-16T23:45:57.783002Z	  
2025-09-16T23:45:57.783058Z	Query parameters: {
2025-09-16T23:45:57.783114Z	  limit: 8,
2025-09-16T23:45:57.783168Z	  offset: 0,
2025-09-16T23:45:57.783224Z	  category: undefined,
2025-09-16T23:45:57.783287Z	  brand: 'semikron',
2025-09-16T23:45:57.783348Z	  featured: undefined
2025-09-16T23:45:57.783414Z	}
2025-09-16T23:45:57.783477Z	Fetching solutions with query: 
2025-09-16T23:45:57.783539Z	    {
2025-09-16T23:45:57.783603Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:57.78367Z	        
2025-09-16T23:45:57.783742Z	    _id,
2025-09-16T23:45:57.783799Z	    title,
2025-09-16T23:45:57.783854Z	    "slug": slug.current,
2025-09-16T23:45:57.78391Z	    summary,
2025-09-16T23:45:57.783975Z	    description,
2025-09-16T23:45:57.784032Z	    coverImage,
2025-09-16T23:45:57.78409Z	    primaryBrand->{
2025-09-16T23:45:57.784153Z	      _id,
2025-09-16T23:45:57.784216Z	      name,
2025-09-16T23:45:57.784276Z	      "slug": slug.current,
2025-09-16T23:45:57.784336Z	      logo
2025-09-16T23:45:57.784401Z	    },
2025-09-16T23:45:57.784464Z	    relatedBrands[]->{
2025-09-16T23:45:57.78452Z	      _id,
2025-09-16T23:45:57.784577Z	      name,
2025-09-16T23:45:57.784644Z	      "slug": slug.current,
2025-09-16T23:45:57.785259Z	      logo
2025-09-16T23:45:57.785491Z	    },
2025-09-16T23:45:57.785814Z	    targetMarket,
2025-09-16T23:45:57.785901Z	    complexity,
2025-09-16T23:45:57.78598Z	    publishedAt,
2025-09-16T23:45:57.786278Z	    isPublished,
2025-09-16T23:45:57.786371Z	    isFeatured,
2025-09-16T23:45:57.786625Z	    viewCount,
2025-09-16T23:45:57.786759Z	    _createdAt,
2025-09-16T23:45:57.787025Z	    _updatedAt
2025-09-16T23:45:57.787162Z	  
2025-09-16T23:45:57.787268Z	      },
2025-09-16T23:45:57.787588Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-16T23:45:57.787886Z	    }
2025-09-16T23:45:57.788054Z	  
2025-09-16T23:45:57.788361Z	Query parameters: {
2025-09-16T23:45:57.788496Z	  limit: 4,
2025-09-16T23:45:57.788803Z	  offset: 0,
2025-09-16T23:45:57.789008Z	  targetMarket: undefined,
2025-09-16T23:45:57.789118Z	  brand: 'semikron',
2025-09-16T23:45:57.789321Z	  featured: undefined
2025-09-16T23:45:57.789497Z	}
2025-09-16T23:45:57.789688Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-16T23:45:57.789881Z	Fetching products with query: 
2025-09-16T23:45:57.790018Z	    {
2025-09-16T23:45:57.790237Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:57.790323Z	        
2025-09-16T23:45:57.790596Z	    _id,
2025-09-16T23:45:57.790825Z	    _type,
2025-09-16T23:45:57.790954Z	    partNumber,
2025-09-16T23:45:57.791226Z	    "slug": slug.current,
2025-09-16T23:45:57.791339Z	    title,
2025-09-16T23:45:57.791549Z	    shortDescription,
2025-09-16T23:45:57.791632Z	    image,
2025-09-16T23:45:57.791957Z	    brand->{
2025-09-16T23:45:57.792274Z	      name,
2025-09-16T23:45:57.792354Z	      "slug": slug.current,
2025-09-16T23:45:57.792417Z	      logo
2025-09-16T23:45:57.792928Z	    },
2025-09-16T23:45:57.793013Z	    category->{
2025-09-16T23:45:57.793074Z	      name,
2025-09-16T23:45:57.793364Z	      "slug": slug.current
2025-09-16T23:45:57.793444Z	    },
2025-09-16T23:45:57.793915Z	    pricing{
2025-09-16T23:45:57.79409Z	      currency,
2025-09-16T23:45:57.79428Z	      tiers[]{
2025-09-16T23:45:57.794448Z	        quantity,
2025-09-16T23:45:57.794573Z	        price,
2025-09-16T23:45:57.7947Z	        unit
2025-09-16T23:45:57.794814Z	      },
2025-09-16T23:45:57.794933Z	      moq,
2025-09-16T23:45:57.795042Z	      leadTime,
2025-09-16T23:45:57.795149Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:57.795252Z	      "price": tiers[0].price,
2025-09-16T23:45:57.795367Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:57.795514Z	    },
2025-09-16T23:45:57.795644Z	    inventory{
2025-09-16T23:45:57.79579Z	      quantity,
2025-09-16T23:45:57.795906Z	      status,
2025-09-16T23:45:57.796026Z	      warehouse,
2025-09-16T23:45:57.796141Z	      lastUpdated,
2025-09-16T23:45:57.796261Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:57.796393Z	      "inStock": status == "in_stock",
2025-09-16T23:45:57.796534Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:57.796666Z	    },
2025-09-16T23:45:57.796808Z	    isActive,
2025-09-16T23:45:57.796932Z	    isFeatured,
2025-09-16T23:45:57.797057Z	    isNew,
2025-09-16T23:45:57.797236Z	    _createdAt,
2025-09-16T23:45:57.797448Z	    _updatedAt
2025-09-16T23:45:57.797645Z	  
2025-09-16T23:45:57.797821Z	      },
2025-09-16T23:45:57.797952Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-16T23:45:57.798096Z	    }
2025-09-16T23:45:57.798211Z	  
2025-09-16T23:45:57.798334Z	Query parameters: {
2025-09-16T23:45:57.798472Z	  limit: 8,
2025-09-16T23:45:57.798603Z	  offset: 0,
2025-09-16T23:45:57.798735Z	  category: undefined,
2025-09-16T23:45:57.798849Z	  brand: 'semikron',
2025-09-16T23:45:57.798954Z	  featured: undefined
2025-09-16T23:45:57.799054Z	}
2025-09-16T23:45:57.799192Z	Fetching solutions with query: 
2025-09-16T23:45:57.79932Z	    {
2025-09-16T23:45:57.799436Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:57.79955Z	        
2025-09-16T23:45:57.799655Z	    _id,
2025-09-16T23:45:57.799791Z	    title,
2025-09-16T23:45:57.799913Z	    "slug": slug.current,
2025-09-16T23:45:57.800031Z	    summary,
2025-09-16T23:45:57.800156Z	    description,
2025-09-16T23:45:57.800264Z	    coverImage,
2025-09-16T23:45:57.800365Z	    primaryBrand->{
2025-09-16T23:45:57.800476Z	      _id,
2025-09-16T23:45:57.80058Z	      name,
2025-09-16T23:45:57.800686Z	      "slug": slug.current,
2025-09-16T23:45:57.800801Z	      logo
2025-09-16T23:45:57.800922Z	    },
2025-09-16T23:45:57.801035Z	    relatedBrands[]->{
2025-09-16T23:45:57.801133Z	      _id,
2025-09-16T23:45:57.801271Z	      name,
2025-09-16T23:45:57.801472Z	      "slug": slug.current,
2025-09-16T23:45:57.801692Z	      logo
2025-09-16T23:45:57.801825Z	    },
2025-09-16T23:45:57.801922Z	    targetMarket,
2025-09-16T23:45:57.802183Z	    complexity,
2025-09-16T23:45:57.802518Z	    publishedAt,
2025-09-16T23:45:57.802856Z	    isPublished,
2025-09-16T23:45:57.803015Z	    isFeatured,
2025-09-16T23:45:57.80319Z	    viewCount,
2025-09-16T23:45:57.803455Z	    _createdAt,
2025-09-16T23:45:57.803653Z	    _updatedAt
2025-09-16T23:45:57.803789Z	  
2025-09-16T23:45:57.803884Z	      },
2025-09-16T23:45:57.803998Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-16T23:45:57.804263Z	    }
2025-09-16T23:45:57.804385Z	  
2025-09-16T23:45:57.80475Z	Query parameters: {
2025-09-16T23:45:57.80502Z	  limit: 4,
2025-09-16T23:45:57.805149Z	  offset: 0,
2025-09-16T23:45:57.80553Z	  targetMarket: undefined,
2025-09-16T23:45:57.805663Z	  brand: 'semikron',
2025-09-16T23:45:57.805797Z	  featured: undefined
2025-09-16T23:45:57.805931Z	}
2025-09-16T23:45:57.806045Z	✅ [getBrandData] Found brand: Semikron
2025-09-16T23:45:57.806324Z	✅ [getBrandData] Found brand: Semikron
2025-09-16T23:45:57.806441Z	Products fetch result: {
2025-09-16T23:45:57.806546Z	  totalProducts: 1,
2025-09-16T23:45:57.806643Z	  fetchedProducts: 1,
2025-09-16T23:45:57.80676Z	  firstProduct: {
2025-09-16T23:45:57.808578Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-16T23:45:57.808802Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-16T23:45:57.808951Z	    _type: 'product',
2025-09-16T23:45:57.809068Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-16T23:45:57.809185Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-16T23:45:57.809303Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:45:57.809416Z	    image: null,
2025-09-16T23:45:57.809534Z	    inventory: {
2025-09-16T23:45:57.809635Z	      inStock: true,
2025-09-16T23:45:57.80976Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-16T23:45:57.80987Z	      quantity: 0,
2025-09-16T23:45:57.809972Z	      status: 'in_stock',
2025-09-16T23:45:57.810072Z	      warehouse: null
2025-09-16T23:45:57.810173Z	    },
2025-09-16T23:45:57.810273Z	    isActive: true,
2025-09-16T23:45:57.810378Z	    isFeatured: false,
2025-09-16T23:45:57.810487Z	    isNew: false,
2025-09-16T23:45:57.8106Z	    partNumber: 'SKKT106/16E',
2025-09-16T23:45:57.823882Z	    pricing: {
2025-09-16T23:45:57.824053Z	      currency: 'CNY',
2025-09-16T23:45:57.824166Z	      leadTime: null,
2025-09-16T23:45:57.824257Z	      moq: null,
2025-09-16T23:45:57.824318Z	      price: null,
2025-09-16T23:45:57.824377Z	      tiers: null
2025-09-16T23:45:57.824436Z	    },
2025-09-16T23:45:57.824529Z	    shortDescription: 'SKKT106/16E',
2025-09-16T23:45:57.824633Z	    slug: 'SKKT106/16E',
2025-09-16T23:45:57.824771Z	    title: 'SKKT106/16E'
2025-09-16T23:45:57.824876Z	  }
2025-09-16T23:45:57.824981Z	}
2025-09-16T23:45:57.825086Z	Products fetch result: {
2025-09-16T23:45:57.825187Z	  totalProducts: 1,
2025-09-16T23:45:57.825289Z	  fetchedProducts: 1,
2025-09-16T23:45:57.825391Z	  firstProduct: {
2025-09-16T23:45:57.825488Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-16T23:45:57.825616Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-16T23:45:57.825754Z	    _type: 'product',
2025-09-16T23:45:57.825861Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-16T23:45:57.825961Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-16T23:45:57.826106Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:45:57.826333Z	    image: null,
2025-09-16T23:45:57.826597Z	    inventory: {
2025-09-16T23:45:57.82718Z	      inStock: true,
2025-09-16T23:45:57.827626Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-16T23:45:57.827818Z	      quantity: 0,
2025-09-16T23:45:57.827941Z	      status: 'in_stock',
2025-09-16T23:45:57.828074Z	      warehouse: null
2025-09-16T23:45:57.828185Z	    },
2025-09-16T23:45:57.828284Z	    isActive: true,
2025-09-16T23:45:57.828401Z	    isFeatured: false,
2025-09-16T23:45:57.828533Z	    isNew: false,
2025-09-16T23:45:57.828644Z	    partNumber: 'SKKT106/16E',
2025-09-16T23:45:57.828774Z	    pricing: {
2025-09-16T23:45:57.82888Z	      currency: 'CNY',
2025-09-16T23:45:57.828976Z	      leadTime: null,
2025-09-16T23:45:57.829074Z	      moq: null,
2025-09-16T23:45:57.829648Z	      price: null,
2025-09-16T23:45:57.829838Z	      tiers: null
2025-09-16T23:45:57.829954Z	    },
2025-09-16T23:45:57.830094Z	    shortDescription: 'SKKT106/16E',
2025-09-16T23:45:57.830253Z	    slug: 'SKKT106/16E',
2025-09-16T23:45:57.830375Z	    title: 'SKKT106/16E'
2025-09-16T23:45:57.830498Z	  }
2025-09-16T23:45:57.83061Z	}
2025-09-16T23:45:57.83075Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:57.830862Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:57.83097Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-16T23:45:57.831079Z	Fetching products with query: 
2025-09-16T23:45:57.831181Z	    {
2025-09-16T23:45:57.831281Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:57.831387Z	        
2025-09-16T23:45:57.831493Z	    _id,
2025-09-16T23:45:57.831613Z	    _type,
2025-09-16T23:45:57.831748Z	    partNumber,
2025-09-16T23:45:57.831924Z	    "slug": slug.current,
2025-09-16T23:45:57.83214Z	    title,
2025-09-16T23:45:57.832278Z	    shortDescription,
2025-09-16T23:45:57.832395Z	    image,
2025-09-16T23:45:57.832506Z	    brand->{
2025-09-16T23:45:57.83261Z	      name,
2025-09-16T23:45:57.832736Z	      "slug": slug.current,
2025-09-16T23:45:57.832861Z	      logo
2025-09-16T23:45:57.83298Z	    },
2025-09-16T23:45:57.833114Z	    category->{
2025-09-16T23:45:57.833242Z	      name,
2025-09-16T23:45:57.833469Z	      "slug": slug.current
2025-09-16T23:45:57.83374Z	    },
2025-09-16T23:45:57.833955Z	    pricing{
2025-09-16T23:45:57.834093Z	      currency,
2025-09-16T23:45:57.834209Z	      tiers[]{
2025-09-16T23:45:57.834312Z	        quantity,
2025-09-16T23:45:57.834423Z	        price,
2025-09-16T23:45:57.834539Z	        unit
2025-09-16T23:45:57.83481Z	      },
2025-09-16T23:45:57.83498Z	      moq,
2025-09-16T23:45:57.835239Z	      leadTime,
2025-09-16T23:45:57.835416Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:57.835682Z	      "price": tiers[0].price,
2025-09-16T23:45:57.835971Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:57.836202Z	    },
2025-09-16T23:45:57.836351Z	    inventory{
2025-09-16T23:45:57.836489Z	      quantity,
2025-09-16T23:45:57.837038Z	      status,
2025-09-16T23:45:57.837444Z	      warehouse,
2025-09-16T23:45:57.83795Z	      lastUpdated,
2025-09-16T23:45:57.838425Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:57.838576Z	      "inStock": status == "in_stock",
2025-09-16T23:45:57.838714Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:57.838985Z	    },
2025-09-16T23:45:57.839135Z	    isActive,
2025-09-16T23:45:57.839326Z	    isFeatured,
2025-09-16T23:45:57.839652Z	    isNew,
2025-09-16T23:45:57.839977Z	    _createdAt,
2025-09-16T23:45:57.840514Z	    _updatedAt
2025-09-16T23:45:57.840883Z	  
2025-09-16T23:45:57.84105Z	      },
2025-09-16T23:45:57.841326Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-16T23:45:57.841621Z	    }
2025-09-16T23:45:57.842023Z	  
2025-09-16T23:45:57.842252Z	Query parameters: {
2025-09-16T23:45:57.842496Z	  limit: 8,
2025-09-16T23:45:57.842744Z	  offset: 0,
2025-09-16T23:45:57.842879Z	  category: undefined,
2025-09-16T23:45:57.843016Z	  brand: 'ncc',
2025-09-16T23:45:57.843128Z	  featured: undefined
2025-09-16T23:45:57.843253Z	}
2025-09-16T23:45:57.843365Z	Fetching solutions with query: 
2025-09-16T23:45:57.843484Z	    {
2025-09-16T23:45:57.843583Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:57.84372Z	        
2025-09-16T23:45:57.843829Z	    _id,
2025-09-16T23:45:57.84393Z	    title,
2025-09-16T23:45:57.844028Z	    "slug": slug.current,
2025-09-16T23:45:57.844122Z	    summary,
2025-09-16T23:45:57.844216Z	    description,
2025-09-16T23:45:57.844307Z	    coverImage,
2025-09-16T23:45:57.844421Z	    primaryBrand->{
2025-09-16T23:45:57.844536Z	      _id,
2025-09-16T23:45:57.844631Z	      name,
2025-09-16T23:45:57.84474Z	      "slug": slug.current,
2025-09-16T23:45:57.844851Z	      logo
2025-09-16T23:45:57.844941Z	    },
2025-09-16T23:45:57.845023Z	    relatedBrands[]->{
2025-09-16T23:45:57.845112Z	      _id,
2025-09-16T23:45:57.845201Z	      name,
2025-09-16T23:45:57.84529Z	      "slug": slug.current,
2025-09-16T23:45:57.845376Z	      logo
2025-09-16T23:45:57.845475Z	    },
2025-09-16T23:45:57.845581Z	    targetMarket,
2025-09-16T23:45:57.845745Z	    complexity,
2025-09-16T23:45:57.845852Z	    publishedAt,
2025-09-16T23:45:57.845947Z	    isPublished,
2025-09-16T23:45:57.846046Z	    isFeatured,
2025-09-16T23:45:57.846148Z	    viewCount,
2025-09-16T23:45:57.846247Z	    _createdAt,
2025-09-16T23:45:57.846343Z	    _updatedAt
2025-09-16T23:45:57.846445Z	  
2025-09-16T23:45:57.847661Z	      },
2025-09-16T23:45:57.847852Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-16T23:45:57.847987Z	    }
2025-09-16T23:45:57.848096Z	  
2025-09-16T23:45:57.848207Z	Query parameters: {
2025-09-16T23:45:57.848308Z	  limit: 4,
2025-09-16T23:45:57.848744Z	  offset: 0,
2025-09-16T23:45:57.849101Z	  targetMarket: undefined,
2025-09-16T23:45:57.849408Z	  brand: 'ncc',
2025-09-16T23:45:57.849732Z	  featured: undefined
2025-09-16T23:45:57.849984Z	}
2025-09-16T23:45:57.850134Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-16T23:45:57.850247Z	Fetching products with query: 
2025-09-16T23:45:57.85037Z	    {
2025-09-16T23:45:57.850495Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:57.850613Z	        
2025-09-16T23:45:57.850751Z	    _id,
2025-09-16T23:45:57.850868Z	    _type,
2025-09-16T23:45:57.850968Z	    partNumber,
2025-09-16T23:45:57.851072Z	    "slug": slug.current,
2025-09-16T23:45:57.851169Z	    title,
2025-09-16T23:45:57.851281Z	    shortDescription,
2025-09-16T23:45:57.851382Z	    image,
2025-09-16T23:45:57.851491Z	    brand->{
2025-09-16T23:45:57.851596Z	      name,
2025-09-16T23:45:57.851706Z	      "slug": slug.current,
2025-09-16T23:45:57.851809Z	      logo
2025-09-16T23:45:57.85191Z	    },
2025-09-16T23:45:57.852008Z	    category->{
2025-09-16T23:45:57.852116Z	      name,
2025-09-16T23:45:57.85237Z	      "slug": slug.current
2025-09-16T23:45:57.852525Z	    },
2025-09-16T23:45:57.853003Z	    pricing{
2025-09-16T23:45:57.853189Z	      currency,
2025-09-16T23:45:57.853356Z	      tiers[]{
2025-09-16T23:45:57.853507Z	        quantity,
2025-09-16T23:45:57.85363Z	        price,
2025-09-16T23:45:57.85377Z	        unit
2025-09-16T23:45:57.853882Z	      },
2025-09-16T23:45:57.853987Z	      moq,
2025-09-16T23:45:57.854175Z	      leadTime,
2025-09-16T23:45:57.854301Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:57.854423Z	      "price": tiers[0].price,
2025-09-16T23:45:57.854552Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:57.854687Z	    },
2025-09-16T23:45:57.854812Z	    inventory{
2025-09-16T23:45:57.854926Z	      quantity,
2025-09-16T23:45:57.855043Z	      status,
2025-09-16T23:45:57.855159Z	      warehouse,
2025-09-16T23:45:57.855272Z	      lastUpdated,
2025-09-16T23:45:57.855381Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:57.855571Z	      "inStock": status == "in_stock",
2025-09-16T23:45:57.855727Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:57.855884Z	    },
2025-09-16T23:45:57.856019Z	    isActive,
2025-09-16T23:45:57.856142Z	    isFeatured,
2025-09-16T23:45:57.85628Z	    isNew,
2025-09-16T23:45:57.856398Z	    _createdAt,
2025-09-16T23:45:57.856523Z	    _updatedAt
2025-09-16T23:45:57.85663Z	  
2025-09-16T23:45:57.856742Z	      },
2025-09-16T23:45:57.85685Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-16T23:45:57.857026Z	    }
2025-09-16T23:45:57.857137Z	  
2025-09-16T23:45:57.857244Z	Query parameters: {
2025-09-16T23:45:57.85735Z	  limit: 8,
2025-09-16T23:45:57.857471Z	  offset: 0,
2025-09-16T23:45:57.857573Z	  category: undefined,
2025-09-16T23:45:57.857686Z	  brand: 'ncc',
2025-09-16T23:45:57.85782Z	  featured: undefined
2025-09-16T23:45:57.857936Z	}
2025-09-16T23:45:57.858051Z	Fetching solutions with query: 
2025-09-16T23:45:57.858161Z	    {
2025-09-16T23:45:57.858276Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:57.858398Z	        
2025-09-16T23:45:57.858516Z	    _id,
2025-09-16T23:45:57.858689Z	    title,
2025-09-16T23:45:57.858992Z	    "slug": slug.current,
2025-09-16T23:45:57.859143Z	    summary,
2025-09-16T23:45:57.85929Z	    description,
2025-09-16T23:45:57.859431Z	    coverImage,
2025-09-16T23:45:57.859576Z	    primaryBrand->{
2025-09-16T23:45:57.859786Z	      _id,
2025-09-16T23:45:57.859924Z	      name,
2025-09-16T23:45:57.860051Z	      "slug": slug.current,
2025-09-16T23:45:57.860211Z	      logo
2025-09-16T23:45:57.860353Z	    },
2025-09-16T23:45:57.860519Z	    relatedBrands[]->{
2025-09-16T23:45:57.860657Z	      _id,
2025-09-16T23:45:57.860857Z	      name,
2025-09-16T23:45:57.861035Z	      "slug": slug.current,
2025-09-16T23:45:57.861166Z	      logo
2025-09-16T23:45:57.861394Z	    },
2025-09-16T23:45:57.861568Z	    targetMarket,
2025-09-16T23:45:57.86173Z	    complexity,
2025-09-16T23:45:57.861852Z	    publishedAt,
2025-09-16T23:45:57.861959Z	    isPublished,
2025-09-16T23:45:57.862097Z	    isFeatured,
2025-09-16T23:45:57.862284Z	    viewCount,
2025-09-16T23:45:57.862413Z	    _createdAt,
2025-09-16T23:45:57.862541Z	    _updatedAt
2025-09-16T23:45:57.86267Z	  
2025-09-16T23:45:57.862802Z	      },
2025-09-16T23:45:57.862909Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-16T23:45:57.863005Z	    }
2025-09-16T23:45:57.863106Z	  
2025-09-16T23:45:57.863359Z	Query parameters: {
2025-09-16T23:45:57.863503Z	  limit: 4,
2025-09-16T23:45:57.863605Z	  offset: 0,
2025-09-16T23:45:57.863728Z	  targetMarket: undefined,
2025-09-16T23:45:57.863846Z	  brand: 'ncc',
2025-09-16T23:45:57.863973Z	  featured: undefined
2025-09-16T23:45:57.864104Z	}
2025-09-16T23:45:57.864352Z	✅ [getBrandData] Found brand: ncc
2025-09-16T23:45:57.864518Z	✅ [getBrandData] Found brand: ncc
2025-09-16T23:45:57.864756Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:57.864837Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:57.864983Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:57.865155Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:57.865326Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-16T23:45:57.865472Z	Fetching products with query: 
2025-09-16T23:45:57.865605Z	    {
2025-09-16T23:45:57.865744Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:57.865846Z	        
2025-09-16T23:45:57.865937Z	    _id,
2025-09-16T23:45:57.866038Z	    _type,
2025-09-16T23:45:57.866218Z	    partNumber,
2025-09-16T23:45:57.86638Z	    "slug": slug.current,
2025-09-16T23:45:57.866552Z	    title,
2025-09-16T23:45:57.866665Z	    shortDescription,
2025-09-16T23:45:57.866816Z	    image,
2025-09-16T23:45:57.866968Z	    brand->{
2025-09-16T23:45:57.86707Z	      name,
2025-09-16T23:45:57.867249Z	      "slug": slug.current,
2025-09-16T23:45:57.867333Z	      logo
2025-09-16T23:45:57.86747Z	    },
2025-09-16T23:45:57.867584Z	    category->{
2025-09-16T23:45:57.867897Z	      name,
2025-09-16T23:45:57.86811Z	      "slug": slug.current
2025-09-16T23:45:57.868308Z	    },
2025-09-16T23:45:57.868479Z	    pricing{
2025-09-16T23:45:57.868643Z	      currency,
2025-09-16T23:45:57.868813Z	      tiers[]{
2025-09-16T23:45:57.86895Z	        quantity,
2025-09-16T23:45:57.869063Z	        price,
2025-09-16T23:45:57.869177Z	        unit
2025-09-16T23:45:57.869348Z	      },
2025-09-16T23:45:57.869504Z	      moq,
2025-09-16T23:45:57.86963Z	      leadTime,
2025-09-16T23:45:57.869766Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:57.869887Z	      "price": tiers[0].price,
2025-09-16T23:45:57.869994Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:57.870097Z	    },
2025-09-16T23:45:57.870197Z	    inventory{
2025-09-16T23:45:57.8703Z	      quantity,
2025-09-16T23:45:57.8704Z	      status,
2025-09-16T23:45:57.870495Z	      warehouse,
2025-09-16T23:45:57.870657Z	      lastUpdated,
2025-09-16T23:45:57.870842Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:57.87093Z	      "inStock": status == "in_stock",
2025-09-16T23:45:57.871022Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:57.871163Z	    },
2025-09-16T23:45:57.871355Z	    isActive,
2025-09-16T23:45:57.871454Z	    isFeatured,
2025-09-16T23:45:57.871632Z	    isNew,
2025-09-16T23:45:57.871832Z	    _createdAt,
2025-09-16T23:45:57.87199Z	    _updatedAt
2025-09-16T23:45:57.872075Z	  
2025-09-16T23:45:57.872198Z	      },
2025-09-16T23:45:57.872376Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-16T23:45:57.872466Z	    }
2025-09-16T23:45:57.872616Z	  
2025-09-16T23:45:57.872886Z	Query parameters: {
2025-09-16T23:45:57.873028Z	  limit: 8,
2025-09-16T23:45:57.87313Z	  offset: 0,
2025-09-16T23:45:57.873234Z	  category: undefined,
2025-09-16T23:45:57.873467Z	  brand: '英飞凌',
2025-09-16T23:45:57.873611Z	  featured: undefined
2025-09-16T23:45:57.873733Z	}
2025-09-16T23:45:57.873842Z	Fetching solutions with query: 
2025-09-16T23:45:57.873916Z	    {
2025-09-16T23:45:57.87401Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:57.874098Z	        
2025-09-16T23:45:57.874182Z	    _id,
2025-09-16T23:45:57.874558Z	    title,
2025-09-16T23:45:57.874809Z	    "slug": slug.current,
2025-09-16T23:45:57.874997Z	    summary,
2025-09-16T23:45:57.875141Z	    description,
2025-09-16T23:45:57.875289Z	    coverImage,
2025-09-16T23:45:57.875402Z	    primaryBrand->{
2025-09-16T23:45:57.875658Z	      _id,
2025-09-16T23:45:57.875821Z	      name,
2025-09-16T23:45:57.875915Z	      "slug": slug.current,
2025-09-16T23:45:57.875982Z	      logo
2025-09-16T23:45:57.876212Z	    },
2025-09-16T23:45:57.87645Z	    relatedBrands[]->{
2025-09-16T23:45:57.876544Z	      _id,
2025-09-16T23:45:57.876924Z	      name,
2025-09-16T23:45:57.877085Z	      "slug": slug.current,
2025-09-16T23:45:57.877172Z	      logo
2025-09-16T23:45:57.87724Z	    },
2025-09-16T23:45:57.877325Z	    targetMarket,
2025-09-16T23:45:57.877382Z	    complexity,
2025-09-16T23:45:57.877503Z	    publishedAt,
2025-09-16T23:45:57.87758Z	    isPublished,
2025-09-16T23:45:57.877644Z	    isFeatured,
2025-09-16T23:45:57.877775Z	    viewCount,
2025-09-16T23:45:57.877928Z	    _createdAt,
2025-09-16T23:45:57.878023Z	    _updatedAt
2025-09-16T23:45:57.878161Z	  
2025-09-16T23:45:57.878271Z	      },
2025-09-16T23:45:57.878388Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-16T23:45:57.878515Z	    }
2025-09-16T23:45:57.878612Z	  
2025-09-16T23:45:57.878732Z	Query parameters: {
2025-09-16T23:45:57.878866Z	  limit: 4,
2025-09-16T23:45:57.878938Z	  offset: 0,
2025-09-16T23:45:57.879042Z	  targetMarket: undefined,
2025-09-16T23:45:57.879119Z	  brand: '英飞凌',
2025-09-16T23:45:57.87939Z	  featured: undefined
2025-09-16T23:45:57.879603Z	}
2025-09-16T23:45:57.879749Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-16T23:45:57.879844Z	Fetching products with query: 
2025-09-16T23:45:57.879948Z	    {
2025-09-16T23:45:57.880102Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:57.880208Z	        
2025-09-16T23:45:57.880359Z	    _id,
2025-09-16T23:45:57.880486Z	    _type,
2025-09-16T23:45:57.880584Z	    partNumber,
2025-09-16T23:45:57.880712Z	    "slug": slug.current,
2025-09-16T23:45:57.880815Z	    title,
2025-09-16T23:45:57.881049Z	    shortDescription,
2025-09-16T23:45:57.881137Z	    image,
2025-09-16T23:45:57.88124Z	    brand->{
2025-09-16T23:45:57.881339Z	      name,
2025-09-16T23:45:57.881436Z	      "slug": slug.current,
2025-09-16T23:45:57.881523Z	      logo
2025-09-16T23:45:57.881585Z	    },
2025-09-16T23:45:57.881942Z	    category->{
2025-09-16T23:45:57.882076Z	      name,
2025-09-16T23:45:57.882339Z	      "slug": slug.current
2025-09-16T23:45:57.882431Z	    },
2025-09-16T23:45:57.882523Z	    pricing{
2025-09-16T23:45:57.882749Z	      currency,
2025-09-16T23:45:57.883002Z	      tiers[]{
2025-09-16T23:45:57.883139Z	        quantity,
2025-09-16T23:45:57.883337Z	        price,
2025-09-16T23:45:57.883601Z	        unit
2025-09-16T23:45:57.883718Z	      },
2025-09-16T23:45:57.884044Z	      moq,
2025-09-16T23:45:57.884133Z	      leadTime,
2025-09-16T23:45:57.884279Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:57.884345Z	      "price": tiers[0].price,
2025-09-16T23:45:57.884495Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:57.884641Z	    },
2025-09-16T23:45:57.884784Z	    inventory{
2025-09-16T23:45:57.884864Z	      quantity,
2025-09-16T23:45:57.884948Z	      status,
2025-09-16T23:45:57.885077Z	      warehouse,
2025-09-16T23:45:57.885185Z	      lastUpdated,
2025-09-16T23:45:57.885286Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:57.885426Z	      "inStock": status == "in_stock",
2025-09-16T23:45:57.885552Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:57.885668Z	    },
2025-09-16T23:45:57.885786Z	    isActive,
2025-09-16T23:45:57.885887Z	    isFeatured,
2025-09-16T23:45:57.885983Z	    isNew,
2025-09-16T23:45:57.88608Z	    _createdAt,
2025-09-16T23:45:57.886179Z	    _updatedAt
2025-09-16T23:45:57.886257Z	  
2025-09-16T23:45:57.886392Z	      },
2025-09-16T23:45:57.88652Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-16T23:45:57.886636Z	    }
2025-09-16T23:45:57.886772Z	  
2025-09-16T23:45:57.886855Z	Query parameters: {
2025-09-16T23:45:57.886992Z	  limit: 8,
2025-09-16T23:45:57.887171Z	  offset: 0,
2025-09-16T23:45:57.887313Z	  category: undefined,
2025-09-16T23:45:57.887417Z	  brand: '英飞凌',
2025-09-16T23:45:57.887558Z	  featured: undefined
2025-09-16T23:45:57.887699Z	}
2025-09-16T23:45:57.887823Z	Fetching solutions with query: 
2025-09-16T23:45:57.887932Z	    {
2025-09-16T23:45:57.888045Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:57.888206Z	        
2025-09-16T23:45:57.88862Z	    _id,
2025-09-16T23:45:57.888766Z	    title,
2025-09-16T23:45:57.888874Z	    "slug": slug.current,
2025-09-16T23:45:57.888977Z	    summary,
2025-09-16T23:45:57.889062Z	    description,
2025-09-16T23:45:57.889239Z	    coverImage,
2025-09-16T23:45:57.88931Z	    primaryBrand->{
2025-09-16T23:45:57.88937Z	      _id,
2025-09-16T23:45:57.889528Z	      name,
2025-09-16T23:45:57.889634Z	      "slug": slug.current,
2025-09-16T23:45:57.889817Z	      logo
2025-09-16T23:45:57.889905Z	    },
2025-09-16T23:45:57.89001Z	    relatedBrands[]->{
2025-09-16T23:45:57.89011Z	      _id,
2025-09-16T23:45:57.89028Z	      name,
2025-09-16T23:45:57.890358Z	      "slug": slug.current,
2025-09-16T23:45:57.890567Z	      logo
2025-09-16T23:45:57.890753Z	    },
2025-09-16T23:45:57.890935Z	    targetMarket,
2025-09-16T23:45:57.89107Z	    complexity,
2025-09-16T23:45:57.891202Z	    publishedAt,
2025-09-16T23:45:57.891305Z	    isPublished,
2025-09-16T23:45:57.891432Z	    isFeatured,
2025-09-16T23:45:57.891589Z	    viewCount,
2025-09-16T23:45:57.891854Z	    _createdAt,
2025-09-16T23:45:57.892213Z	    _updatedAt
2025-09-16T23:45:57.892297Z	  
2025-09-16T23:45:57.892396Z	      },
2025-09-16T23:45:57.892508Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-16T23:45:57.892622Z	    }
2025-09-16T23:45:57.892745Z	  
2025-09-16T23:45:57.892823Z	Query parameters: {
2025-09-16T23:45:57.892909Z	  limit: 4,
2025-09-16T23:45:57.893036Z	  offset: 0,
2025-09-16T23:45:57.893161Z	  targetMarket: undefined,
2025-09-16T23:45:57.893286Z	  brand: '英飞凌',
2025-09-16T23:45:57.89342Z	  featured: undefined
2025-09-16T23:45:57.893519Z	}
2025-09-16T23:45:57.893617Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-16T23:45:57.893753Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-16T23:45:57.893883Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:57.89413Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:57.894391Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:57.89459Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:57.894777Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:45:57.894933Z	Fetching products with query: 
2025-09-16T23:45:57.895164Z	    {
2025-09-16T23:45:57.895543Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:57.89571Z	        
2025-09-16T23:45:57.895827Z	    _id,
2025-09-16T23:45:57.895931Z	    _type,
2025-09-16T23:45:57.896024Z	    partNumber,
2025-09-16T23:45:57.896118Z	    "slug": slug.current,
2025-09-16T23:45:57.896215Z	    title,
2025-09-16T23:45:57.896347Z	    shortDescription,
2025-09-16T23:45:57.896469Z	    image,
2025-09-16T23:45:57.896649Z	    brand->{
2025-09-16T23:45:57.897042Z	      name,
2025-09-16T23:45:57.897226Z	      "slug": slug.current,
2025-09-16T23:45:57.897396Z	      logo
2025-09-16T23:45:57.897577Z	    },
2025-09-16T23:45:57.897763Z	    category->{
2025-09-16T23:45:57.897903Z	      name,
2025-09-16T23:45:57.898026Z	      "slug": slug.current
2025-09-16T23:45:57.898134Z	    },
2025-09-16T23:45:57.898242Z	    pricing{
2025-09-16T23:45:57.898345Z	      currency,
2025-09-16T23:45:57.898445Z	      tiers[]{
2025-09-16T23:45:57.898545Z	        quantity,
2025-09-16T23:45:57.898662Z	        price,
2025-09-16T23:45:57.898803Z	        unit
2025-09-16T23:45:57.898898Z	      },
2025-09-16T23:45:57.899003Z	      moq,
2025-09-16T23:45:57.899109Z	      leadTime,
2025-09-16T23:45:57.89924Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:57.899356Z	      "price": tiers[0].price,
2025-09-16T23:45:57.899457Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:57.899567Z	    },
2025-09-16T23:45:57.899701Z	    inventory{
2025-09-16T23:45:57.899793Z	      quantity,
2025-09-16T23:45:57.899854Z	      status,
2025-09-16T23:45:57.899912Z	      warehouse,
2025-09-16T23:45:57.899966Z	      lastUpdated,
2025-09-16T23:45:57.90002Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:57.900078Z	      "inStock": status == "in_stock",
2025-09-16T23:45:57.900135Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:57.900197Z	    },
2025-09-16T23:45:57.900252Z	    isActive,
2025-09-16T23:45:57.90031Z	    isFeatured,
2025-09-16T23:45:57.900365Z	    isNew,
2025-09-16T23:45:57.900422Z	    _createdAt,
2025-09-16T23:45:57.900476Z	    _updatedAt
2025-09-16T23:45:57.90053Z	  
2025-09-16T23:45:57.900585Z	      },
2025-09-16T23:45:57.900646Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:45:57.900765Z	    }
2025-09-16T23:45:57.900853Z	  
2025-09-16T23:45:57.900914Z	Query parameters: {
2025-09-16T23:45:57.900969Z	  limit: 8,
2025-09-16T23:45:57.901028Z	  offset: 0,
2025-09-16T23:45:57.901083Z	  category: undefined,
2025-09-16T23:45:57.901138Z	  brand: 'cree',
2025-09-16T23:45:57.901192Z	  featured: undefined
2025-09-16T23:45:57.901246Z	}
2025-09-16T23:45:57.9013Z	Fetching solutions with query: 
2025-09-16T23:45:57.901356Z	    {
2025-09-16T23:45:57.901414Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:57.901478Z	        
2025-09-16T23:45:57.901534Z	    _id,
2025-09-16T23:45:57.901596Z	    title,
2025-09-16T23:45:57.901662Z	    "slug": slug.current,
2025-09-16T23:45:57.93944Z	    summary,
2025-09-16T23:45:57.939802Z	    description,
2025-09-16T23:45:57.940013Z	    coverImage,
2025-09-16T23:45:57.940189Z	    primaryBrand->{
2025-09-16T23:45:57.94034Z	      _id,
2025-09-16T23:45:57.940483Z	      name,
2025-09-16T23:45:57.940595Z	      "slug": slug.current,
2025-09-16T23:45:57.940749Z	      logo
2025-09-16T23:45:57.94085Z	    },
2025-09-16T23:45:57.940989Z	    relatedBrands[]->{
2025-09-16T23:45:57.941283Z	      _id,
2025-09-16T23:45:57.941538Z	      name,
2025-09-16T23:45:57.941792Z	      "slug": slug.current,
2025-09-16T23:45:57.942163Z	      logo
2025-09-16T23:45:57.94227Z	    },
2025-09-16T23:45:57.942366Z	    targetMarket,
2025-09-16T23:45:57.942458Z	    complexity,
2025-09-16T23:45:57.94255Z	    publishedAt,
2025-09-16T23:45:57.942689Z	    isPublished,
2025-09-16T23:45:57.942792Z	    isFeatured,
2025-09-16T23:45:57.94288Z	    viewCount,
2025-09-16T23:45:57.942968Z	    _createdAt,
2025-09-16T23:45:57.943092Z	    _updatedAt
2025-09-16T23:45:57.944358Z	  
2025-09-16T23:45:57.944487Z	      },
2025-09-16T23:45:57.944582Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:45:57.9447Z	    }
2025-09-16T23:45:57.944802Z	  
2025-09-16T23:45:57.944895Z	Query parameters: {
2025-09-16T23:45:57.94498Z	  limit: 4,
2025-09-16T23:45:57.945103Z	  offset: 0,
2025-09-16T23:45:57.945233Z	  targetMarket: undefined,
2025-09-16T23:45:57.945329Z	  brand: 'cree',
2025-09-16T23:45:57.945466Z	  featured: undefined
2025-09-16T23:45:57.945607Z	}
2025-09-16T23:45:57.945777Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:45:57.945934Z	Fetching products with query: 
2025-09-16T23:45:57.946076Z	    {
2025-09-16T23:45:57.946229Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:57.946394Z	        
2025-09-16T23:45:57.948217Z	    _id,
2025-09-16T23:45:57.948415Z	    _type,
2025-09-16T23:45:57.948554Z	    partNumber,
2025-09-16T23:45:57.948761Z	    "slug": slug.current,
2025-09-16T23:45:57.948891Z	    title,
2025-09-16T23:45:57.949022Z	    shortDescription,
2025-09-16T23:45:57.949139Z	    image,
2025-09-16T23:45:57.949254Z	    brand->{
2025-09-16T23:45:57.949363Z	      name,
2025-09-16T23:45:57.949474Z	      "slug": slug.current,
2025-09-16T23:45:57.949585Z	      logo
2025-09-16T23:45:57.949722Z	    },
2025-09-16T23:45:57.949826Z	    category->{
2025-09-16T23:45:57.949932Z	      name,
2025-09-16T23:45:57.950144Z	      "slug": slug.current
2025-09-16T23:45:57.95049Z	    },
2025-09-16T23:45:57.950814Z	    pricing{
2025-09-16T23:45:57.950955Z	      currency,
2025-09-16T23:45:57.951078Z	      tiers[]{
2025-09-16T23:45:57.951225Z	        quantity,
2025-09-16T23:45:57.951435Z	        price,
2025-09-16T23:45:57.951611Z	        unit
2025-09-16T23:45:57.951802Z	      },
2025-09-16T23:45:57.951985Z	      moq,
2025-09-16T23:45:57.952178Z	      leadTime,
2025-09-16T23:45:57.952348Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:57.952742Z	      "price": tiers[0].price,
2025-09-16T23:45:57.953518Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:57.954257Z	    },
2025-09-16T23:45:57.954395Z	    inventory{
2025-09-16T23:45:57.954528Z	      quantity,
2025-09-16T23:45:57.95464Z	      status,
2025-09-16T23:45:57.954778Z	      warehouse,
2025-09-16T23:45:57.95488Z	      lastUpdated,
2025-09-16T23:45:57.954979Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:57.955083Z	      "inStock": status == "in_stock",
2025-09-16T23:45:57.95518Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:57.95528Z	    },
2025-09-16T23:45:57.955379Z	    isActive,
2025-09-16T23:45:57.955496Z	    isFeatured,
2025-09-16T23:45:57.955587Z	    isNew,
2025-09-16T23:45:57.955726Z	    _createdAt,
2025-09-16T23:45:57.955841Z	    _updatedAt
2025-09-16T23:45:57.955934Z	  
2025-09-16T23:45:57.956032Z	      },
2025-09-16T23:45:57.956128Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:45:57.956252Z	    }
2025-09-16T23:45:57.956363Z	  
2025-09-16T23:45:57.956489Z	Query parameters: {
2025-09-16T23:45:57.958874Z	  limit: 8,
2025-09-16T23:45:57.95904Z	  offset: 0,
2025-09-16T23:45:57.959178Z	  category: undefined,
2025-09-16T23:45:57.959316Z	  brand: 'cree',
2025-09-16T23:45:57.95944Z	  featured: undefined
2025-09-16T23:45:57.959551Z	}
2025-09-16T23:45:57.959669Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:57.959814Z	Fetching products with query: 
2025-09-16T23:45:57.959954Z	    {
2025-09-16T23:45:57.960078Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:57.9602Z	        
2025-09-16T23:45:57.960313Z	    _id,
2025-09-16T23:45:57.960445Z	    _type,
2025-09-16T23:45:57.960831Z	    partNumber,
2025-09-16T23:45:57.960972Z	    "slug": slug.current,
2025-09-16T23:45:57.961092Z	    title,
2025-09-16T23:45:57.961212Z	    shortDescription,
2025-09-16T23:45:57.961325Z	    image,
2025-09-16T23:45:57.961433Z	    brand->{
2025-09-16T23:45:57.961543Z	      name,
2025-09-16T23:45:57.961644Z	      "slug": slug.current,
2025-09-16T23:45:57.961759Z	      logo
2025-09-16T23:45:57.961852Z	    },
2025-09-16T23:45:57.961943Z	    category->{
2025-09-16T23:45:57.962053Z	      name,
2025-09-16T23:45:57.96215Z	      "slug": slug.current
2025-09-16T23:45:57.962253Z	    },
2025-09-16T23:45:57.962421Z	    pricing{
2025-09-16T23:45:57.962514Z	      currency,
2025-09-16T23:45:57.962576Z	      tiers[]{
2025-09-16T23:45:57.962636Z	        quantity,
2025-09-16T23:45:57.962731Z	        price,
2025-09-16T23:45:57.962814Z	        unit
2025-09-16T23:45:57.962873Z	      },
2025-09-16T23:45:57.96295Z	      moq,
2025-09-16T23:45:57.963007Z	      leadTime,
2025-09-16T23:45:57.963069Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:57.963129Z	      "price": tiers[0].price,
2025-09-16T23:45:57.96319Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:57.963284Z	    },
2025-09-16T23:45:57.963444Z	    inventory{
2025-09-16T23:45:57.963572Z	      quantity,
2025-09-16T23:45:57.96451Z	      status,
2025-09-16T23:45:57.964647Z	      warehouse,
2025-09-16T23:45:57.964784Z	      lastUpdated,
2025-09-16T23:45:57.964901Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:57.96503Z	      "inStock": status == "in_stock",
2025-09-16T23:45:57.965146Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:57.965253Z	    },
2025-09-16T23:45:57.965464Z	    isActive,
2025-09-16T23:45:57.965704Z	    isFeatured,
2025-09-16T23:45:57.965922Z	    isNew,
2025-09-16T23:45:57.966123Z	    _createdAt,
2025-09-16T23:45:57.966371Z	    _updatedAt
2025-09-16T23:45:57.966528Z	  
2025-09-16T23:45:57.966638Z	      },
2025-09-16T23:45:57.966774Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-16T23:45:57.966926Z	    }
2025-09-16T23:45:57.967238Z	  
2025-09-16T23:45:57.967526Z	Query parameters: {
2025-09-16T23:45:57.968074Z	  limit: 8,
2025-09-16T23:45:57.968355Z	  offset: 0,
2025-09-16T23:45:57.969392Z	  category: undefined,
2025-09-16T23:45:57.969556Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:45:57.97003Z	  featured: undefined
2025-09-16T23:45:57.970166Z	}
2025-09-16T23:45:57.970249Z	Fetching solutions with query: 
2025-09-16T23:45:57.97031Z	    {
2025-09-16T23:45:57.970367Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:57.970429Z	        
2025-09-16T23:45:57.97051Z	    _id,
2025-09-16T23:45:57.970596Z	    title,
2025-09-16T23:45:57.970872Z	    "slug": slug.current,
2025-09-16T23:45:57.971124Z	    summary,
2025-09-16T23:45:57.971386Z	    description,
2025-09-16T23:45:57.971506Z	    coverImage,
2025-09-16T23:45:57.971622Z	    primaryBrand->{
2025-09-16T23:45:57.971789Z	      _id,
2025-09-16T23:45:57.97195Z	      name,
2025-09-16T23:45:57.972069Z	      "slug": slug.current,
2025-09-16T23:45:57.972299Z	      logo
2025-09-16T23:45:57.972402Z	    },
2025-09-16T23:45:57.972552Z	    relatedBrands[]->{
2025-09-16T23:45:57.972668Z	      _id,
2025-09-16T23:45:57.972788Z	      name,
2025-09-16T23:45:57.972891Z	      "slug": slug.current,
2025-09-16T23:45:57.973004Z	      logo
2025-09-16T23:45:57.973109Z	    },
2025-09-16T23:45:57.973228Z	    targetMarket,
2025-09-16T23:45:57.973341Z	    complexity,
2025-09-16T23:45:57.97345Z	    publishedAt,
2025-09-16T23:45:57.97357Z	    isPublished,
2025-09-16T23:45:57.973725Z	    isFeatured,
2025-09-16T23:45:57.973855Z	    viewCount,
2025-09-16T23:45:57.973995Z	    _createdAt,
2025-09-16T23:45:57.974197Z	    _updatedAt
2025-09-16T23:45:57.974327Z	  
2025-09-16T23:45:57.974451Z	      },
2025-09-16T23:45:57.97475Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-16T23:45:57.974865Z	    }
2025-09-16T23:45:57.974931Z	  
2025-09-16T23:45:57.975001Z	Query parameters: {
2025-09-16T23:45:57.975116Z	  limit: 4,
2025-09-16T23:45:57.975307Z	  offset: 0,
2025-09-16T23:45:57.975458Z	  targetMarket: undefined,
2025-09-16T23:45:57.975565Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:45:57.975688Z	  featured: undefined
2025-09-16T23:45:57.975845Z	}
2025-09-16T23:45:57.975996Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:57.976099Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:57.976204Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:57.97631Z	Fetching solutions with query: 
2025-09-16T23:45:57.976433Z	    {
2025-09-16T23:45:57.976534Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:57.976694Z	        
2025-09-16T23:45:57.976819Z	    _id,
2025-09-16T23:45:57.976921Z	    title,
2025-09-16T23:45:57.977089Z	    "slug": slug.current,
2025-09-16T23:45:57.977248Z	    summary,
2025-09-16T23:45:57.977652Z	    description,
2025-09-16T23:45:57.977805Z	    coverImage,
2025-09-16T23:45:57.978591Z	    primaryBrand->{
2025-09-16T23:45:57.97877Z	      _id,
2025-09-16T23:45:57.97892Z	      name,
2025-09-16T23:45:57.979037Z	      "slug": slug.current,
2025-09-16T23:45:57.979177Z	      logo
2025-09-16T23:45:57.97935Z	    },
2025-09-16T23:45:57.979469Z	    relatedBrands[]->{
2025-09-16T23:45:57.979579Z	      _id,
2025-09-16T23:45:57.979753Z	      name,
2025-09-16T23:45:57.979915Z	      "slug": slug.current,
2025-09-16T23:45:57.980051Z	      logo
2025-09-16T23:45:57.98016Z	    },
2025-09-16T23:45:57.980275Z	    targetMarket,
2025-09-16T23:45:57.980394Z	    complexity,
2025-09-16T23:45:57.980495Z	    publishedAt,
2025-09-16T23:45:57.980589Z	    isPublished,
2025-09-16T23:45:57.980756Z	    isFeatured,
2025-09-16T23:45:57.980972Z	    viewCount,
2025-09-16T23:45:57.981149Z	    _createdAt,
2025-09-16T23:45:58.023854Z	    _updatedAt
2025-09-16T23:45:58.026766Z	  
2025-09-16T23:45:58.028071Z	      },
2025-09-16T23:45:58.028241Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:45:58.028473Z	    }
2025-09-16T23:45:58.029325Z	  
2025-09-16T23:45:58.029495Z	Query parameters: {
2025-09-16T23:45:58.029635Z	  limit: 4,
2025-09-16T23:45:58.029938Z	  offset: 0,
2025-09-16T23:45:58.030073Z	  targetMarket: undefined,
2025-09-16T23:45:58.030267Z	  brand: 'cree',
2025-09-16T23:45:58.030408Z	  featured: undefined
2025-09-16T23:45:58.030536Z	}
2025-09-16T23:45:58.030659Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:58.030799Z	Fetching products with query: 
2025-09-16T23:45:58.030917Z	    {
2025-09-16T23:45:58.031026Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:58.031133Z	        
2025-09-16T23:45:58.031239Z	    _id,
2025-09-16T23:45:58.031342Z	    _type,
2025-09-16T23:45:58.031438Z	    partNumber,
2025-09-16T23:45:58.031556Z	    "slug": slug.current,
2025-09-16T23:45:58.031663Z	    title,
2025-09-16T23:45:58.03181Z	    shortDescription,
2025-09-16T23:45:58.031912Z	    image,
2025-09-16T23:45:58.032044Z	    brand->{
2025-09-16T23:45:58.032289Z	      name,
2025-09-16T23:45:58.032461Z	      "slug": slug.current,
2025-09-16T23:45:58.032584Z	      logo
2025-09-16T23:45:58.032727Z	    },
2025-09-16T23:45:58.032883Z	    category->{
2025-09-16T23:45:58.033155Z	      name,
2025-09-16T23:45:58.033302Z	      "slug": slug.current
2025-09-16T23:45:58.034162Z	    },
2025-09-16T23:45:58.034317Z	    pricing{
2025-09-16T23:45:58.034417Z	      currency,
2025-09-16T23:45:58.034534Z	      tiers[]{
2025-09-16T23:45:58.035081Z	        quantity,
2025-09-16T23:45:58.035833Z	        price,
2025-09-16T23:45:58.036085Z	        unit
2025-09-16T23:45:58.036215Z	      },
2025-09-16T23:45:58.03635Z	      moq,
2025-09-16T23:45:58.036589Z	      leadTime,
2025-09-16T23:45:58.036819Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:58.037193Z	      "price": tiers[0].price,
2025-09-16T23:45:58.037374Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:58.037526Z	    },
2025-09-16T23:45:58.03766Z	    inventory{
2025-09-16T23:45:58.037799Z	      quantity,
2025-09-16T23:45:58.037917Z	      status,
2025-09-16T23:45:58.038039Z	      warehouse,
2025-09-16T23:45:58.038153Z	      lastUpdated,
2025-09-16T23:45:58.038266Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:58.038376Z	      "inStock": status == "in_stock",
2025-09-16T23:45:58.038484Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:58.038586Z	    },
2025-09-16T23:45:58.038796Z	    isActive,
2025-09-16T23:45:58.038958Z	    isFeatured,
2025-09-16T23:45:58.039111Z	    isNew,
2025-09-16T23:45:58.039285Z	    _createdAt,
2025-09-16T23:45:58.039437Z	    _updatedAt
2025-09-16T23:45:58.039602Z	  
2025-09-16T23:45:58.039777Z	      },
2025-09-16T23:45:58.039937Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-16T23:45:58.040101Z	    }
2025-09-16T23:45:58.040222Z	  
2025-09-16T23:45:58.040325Z	Query parameters: {
2025-09-16T23:45:58.040426Z	  limit: 8,
2025-09-16T23:45:58.040537Z	  offset: 0,
2025-09-16T23:45:58.040638Z	  category: undefined,
2025-09-16T23:45:58.040771Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:45:58.040877Z	  featured: undefined
2025-09-16T23:45:58.040976Z	}
2025-09-16T23:45:58.041085Z	Fetching solutions with query: 
2025-09-16T23:45:58.041901Z	    {
2025-09-16T23:45:58.04204Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:58.042167Z	        
2025-09-16T23:45:58.042263Z	    _id,
2025-09-16T23:45:58.04237Z	    title,
2025-09-16T23:45:58.042724Z	    "slug": slug.current,
2025-09-16T23:45:58.042954Z	    summary,
2025-09-16T23:45:58.043152Z	    description,
2025-09-16T23:45:58.043347Z	    coverImage,
2025-09-16T23:45:58.043483Z	    primaryBrand->{
2025-09-16T23:45:58.043594Z	      _id,
2025-09-16T23:45:58.043761Z	      name,
2025-09-16T23:45:58.043872Z	      "slug": slug.current,
2025-09-16T23:45:58.043982Z	      logo
2025-09-16T23:45:58.04409Z	    },
2025-09-16T23:45:58.044195Z	    relatedBrands[]->{
2025-09-16T23:45:58.044303Z	      _id,
2025-09-16T23:45:58.044418Z	      name,
2025-09-16T23:45:58.04452Z	      "slug": slug.current,
2025-09-16T23:45:58.044641Z	      logo
2025-09-16T23:45:58.044768Z	    },
2025-09-16T23:45:58.044876Z	    targetMarket,
2025-09-16T23:45:58.044972Z	    complexity,
2025-09-16T23:45:58.045072Z	    publishedAt,
2025-09-16T23:45:58.045182Z	    isPublished,
2025-09-16T23:45:58.0453Z	    isFeatured,
2025-09-16T23:45:58.045403Z	    viewCount,
2025-09-16T23:45:58.045503Z	    _createdAt,
2025-09-16T23:45:58.045619Z	    _updatedAt
2025-09-16T23:45:58.045752Z	  
2025-09-16T23:45:58.04586Z	      },
2025-09-16T23:45:58.045961Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-16T23:45:58.046101Z	    }
2025-09-16T23:45:58.04623Z	  
2025-09-16T23:45:58.046335Z	Query parameters: {
2025-09-16T23:45:58.04644Z	  limit: 4,
2025-09-16T23:45:58.046545Z	  offset: 0,
2025-09-16T23:45:58.046713Z	  targetMarket: undefined,
2025-09-16T23:45:58.04684Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:45:58.046942Z	  featured: undefined
2025-09-16T23:45:58.047037Z	}
2025-09-16T23:45:58.0472Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:58.047335Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:58.047475Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:58.04759Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-16T23:45:58.047739Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-16T23:45:58.04786Z	Fetching products with query: 
2025-09-16T23:45:58.047972Z	    {
2025-09-16T23:45:58.048103Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:58.048236Z	        
2025-09-16T23:45:58.04835Z	    _id,
2025-09-16T23:45:58.048457Z	    _type,
2025-09-16T23:45:58.048559Z	    partNumber,
2025-09-16T23:45:58.048689Z	    "slug": slug.current,
2025-09-16T23:45:58.048806Z	    title,
2025-09-16T23:45:58.048922Z	    shortDescription,
2025-09-16T23:45:58.049028Z	    image,
2025-09-16T23:45:58.04915Z	    brand->{
2025-09-16T23:45:58.049259Z	      name,
2025-09-16T23:45:58.049479Z	      "slug": slug.current,
2025-09-16T23:45:58.049625Z	      logo
2025-09-16T23:45:58.049788Z	    },
2025-09-16T23:45:58.049938Z	    category->{
2025-09-16T23:45:58.050108Z	      name,
2025-09-16T23:45:58.050253Z	      "slug": slug.current
2025-09-16T23:45:58.050588Z	    },
2025-09-16T23:45:58.050739Z	    pricing{
2025-09-16T23:45:58.050852Z	      currency,
2025-09-16T23:45:58.050954Z	      tiers[]{
2025-09-16T23:45:58.051058Z	        quantity,
2025-09-16T23:45:58.05116Z	        price,
2025-09-16T23:45:58.05127Z	        unit
2025-09-16T23:45:58.051379Z	      },
2025-09-16T23:45:58.051473Z	      moq,
2025-09-16T23:45:58.051591Z	      leadTime,
2025-09-16T23:45:58.051736Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:58.051847Z	      "price": tiers[0].price,
2025-09-16T23:45:58.052086Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:58.052245Z	    },
2025-09-16T23:45:58.052349Z	    inventory{
2025-09-16T23:45:58.052454Z	      quantity,
2025-09-16T23:45:58.052582Z	      status,
2025-09-16T23:45:58.052781Z	      warehouse,
2025-09-16T23:45:58.052894Z	      lastUpdated,
2025-09-16T23:45:58.05299Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:58.053094Z	      "inStock": status == "in_stock",
2025-09-16T23:45:58.053186Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:58.05517Z	    },
2025-09-16T23:45:58.055386Z	    isActive,
2025-09-16T23:45:58.055527Z	    isFeatured,
2025-09-16T23:45:58.055644Z	    isNew,
2025-09-16T23:45:58.055772Z	    _createdAt,
2025-09-16T23:45:58.055879Z	    _updatedAt
2025-09-16T23:45:58.055984Z	  
2025-09-16T23:45:58.056077Z	      },
2025-09-16T23:45:58.056189Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-16T23:45:58.056455Z	    }
2025-09-16T23:45:58.056653Z	  
2025-09-16T23:45:58.056781Z	Query parameters: {
2025-09-16T23:45:58.056889Z	  limit: 8,
2025-09-16T23:45:58.056991Z	  offset: 0,
2025-09-16T23:45:58.057089Z	  category: undefined,
2025-09-16T23:45:58.057191Z	  brand: 'epcos',
2025-09-16T23:45:58.057294Z	  featured: undefined
2025-09-16T23:45:58.057389Z	}
2025-09-16T23:45:58.057489Z	Fetching solutions with query: 
2025-09-16T23:45:58.057586Z	    {
2025-09-16T23:45:58.057724Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:58.057844Z	        
2025-09-16T23:45:58.057938Z	    _id,
2025-09-16T23:45:58.058033Z	    title,
2025-09-16T23:45:58.058131Z	    "slug": slug.current,
2025-09-16T23:45:58.058241Z	    summary,
2025-09-16T23:45:58.058353Z	    description,
2025-09-16T23:45:58.058467Z	    coverImage,
2025-09-16T23:45:58.058577Z	    primaryBrand->{
2025-09-16T23:45:58.060035Z	      _id,
2025-09-16T23:45:58.060173Z	      name,
2025-09-16T23:45:58.060287Z	      "slug": slug.current,
2025-09-16T23:45:58.061843Z	      logo
2025-09-16T23:45:58.062022Z	    },
2025-09-16T23:45:58.062153Z	    relatedBrands[]->{
2025-09-16T23:45:58.062273Z	      _id,
2025-09-16T23:45:58.062833Z	      name,
2025-09-16T23:45:58.063146Z	      "slug": slug.current,
2025-09-16T23:45:58.063442Z	      logo
2025-09-16T23:45:58.063852Z	    },
2025-09-16T23:45:58.065835Z	    targetMarket,
2025-09-16T23:45:58.066004Z	    complexity,
2025-09-16T23:45:58.066128Z	    publishedAt,
2025-09-16T23:45:58.066239Z	    isPublished,
2025-09-16T23:45:58.066345Z	    isFeatured,
2025-09-16T23:45:58.066465Z	    viewCount,
2025-09-16T23:45:58.066943Z	    _createdAt,
2025-09-16T23:45:58.067057Z	    _updatedAt
2025-09-16T23:45:58.067169Z	  
2025-09-16T23:45:58.067277Z	      },
2025-09-16T23:45:58.067694Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-16T23:45:58.067836Z	    }
2025-09-16T23:45:58.067946Z	  
2025-09-16T23:45:58.068043Z	Query parameters: {
2025-09-16T23:45:58.068143Z	  limit: 4,
2025-09-16T23:45:58.068235Z	  offset: 0,
2025-09-16T23:45:58.068328Z	  targetMarket: undefined,
2025-09-16T23:45:58.068836Z	  brand: 'epcos',
2025-09-16T23:45:58.069079Z	  featured: undefined
2025-09-16T23:45:58.069534Z	}
2025-09-16T23:45:58.06981Z	   Generating static pages (223/894) 
2025-09-16T23:45:58.069926Z	Fetching products with query: 
2025-09-16T23:45:58.070026Z	    {
2025-09-16T23:45:58.070122Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:58.070221Z	        
2025-09-16T23:45:58.070321Z	    _id,
2025-09-16T23:45:58.070414Z	    _type,
2025-09-16T23:45:58.0705Z	    partNumber,
2025-09-16T23:45:58.070601Z	    "slug": slug.current,
2025-09-16T23:45:58.070725Z	    title,
2025-09-16T23:45:58.070811Z	    shortDescription,
2025-09-16T23:45:58.070898Z	    image,
2025-09-16T23:45:58.070994Z	    brand->{
2025-09-16T23:45:58.071093Z	      name,
2025-09-16T23:45:58.07119Z	      "slug": slug.current,
2025-09-16T23:45:58.071283Z	      logo
2025-09-16T23:45:58.071381Z	    },
2025-09-16T23:45:58.071473Z	    category->{
2025-09-16T23:45:58.071566Z	      name,
2025-09-16T23:45:58.071668Z	      "slug": slug.current
2025-09-16T23:45:58.07178Z	    },
2025-09-16T23:45:58.071875Z	    pricing{
2025-09-16T23:45:58.071971Z	      currency,
2025-09-16T23:45:58.072103Z	      tiers[]{
2025-09-16T23:45:58.072351Z	        quantity,
2025-09-16T23:45:58.072578Z	        price,
2025-09-16T23:45:58.072769Z	        unit
2025-09-16T23:45:58.07294Z	      },
2025-09-16T23:45:58.073048Z	      moq,
2025-09-16T23:45:58.073148Z	      leadTime,
2025-09-16T23:45:58.073245Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:58.073371Z	      "price": tiers[0].price,
2025-09-16T23:45:58.073485Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:58.073594Z	    },
2025-09-16T23:45:58.073728Z	    inventory{
2025-09-16T23:45:58.07384Z	      quantity,
2025-09-16T23:45:58.073936Z	      status,
2025-09-16T23:45:58.075486Z	      warehouse,
2025-09-16T23:45:58.075618Z	      lastUpdated,
2025-09-16T23:45:58.075771Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:58.075873Z	      "inStock": status == "in_stock",
2025-09-16T23:45:58.075975Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:58.076071Z	    },
2025-09-16T23:45:58.076161Z	    isActive,
2025-09-16T23:45:58.076331Z	    isFeatured,
2025-09-16T23:45:58.07649Z	    isNew,
2025-09-16T23:45:58.076661Z	    _createdAt,
2025-09-16T23:45:58.076832Z	    _updatedAt
2025-09-16T23:45:58.076978Z	  
2025-09-16T23:45:58.077206Z	      },
2025-09-16T23:45:58.077346Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-16T23:45:58.077478Z	    }
2025-09-16T23:45:58.077864Z	  
2025-09-16T23:45:58.078053Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-16T23:45:58.078187Z	Fetching products with query: 
2025-09-16T23:45:58.078298Z	    {
2025-09-16T23:45:58.078399Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:58.078505Z	        
2025-09-16T23:45:58.078621Z	    _id,
2025-09-16T23:45:58.079137Z	    _type,
2025-09-16T23:45:58.080481Z	    partNumber,
2025-09-16T23:45:58.080916Z	    "slug": slug.current,
2025-09-16T23:45:58.081443Z	    title,
2025-09-16T23:45:58.081653Z	    shortDescription,
2025-09-16T23:45:58.081811Z	    image,
2025-09-16T23:45:58.081879Z	    brand->{
2025-09-16T23:45:58.081934Z	      name,
2025-09-16T23:45:58.081987Z	      "slug": slug.current,
2025-09-16T23:45:58.082041Z	      logo
2025-09-16T23:45:58.082097Z	    },
2025-09-16T23:45:58.08215Z	    category->{
2025-09-16T23:45:58.082231Z	      name,
2025-09-16T23:45:58.082401Z	      "slug": slug.current
2025-09-16T23:45:58.082495Z	    },
2025-09-16T23:45:58.082557Z	    pricing{
2025-09-16T23:45:58.082621Z	      currency,
2025-09-16T23:45:58.082712Z	      tiers[]{
2025-09-16T23:45:58.082784Z	        quantity,
2025-09-16T23:45:58.08284Z	        price,
2025-09-16T23:45:58.082902Z	        unit
2025-09-16T23:45:58.082958Z	      },
2025-09-16T23:45:58.083019Z	      moq,
2025-09-16T23:45:58.083076Z	      leadTime,
2025-09-16T23:45:58.08313Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:58.083197Z	      "price": tiers[0].price,
2025-09-16T23:45:58.083257Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:58.083313Z	    },
2025-09-16T23:45:58.083367Z	    inventory{
2025-09-16T23:45:58.083878Z	      quantity,
2025-09-16T23:45:58.084225Z	      status,
2025-09-16T23:45:58.084343Z	      warehouse,
2025-09-16T23:45:58.084413Z	      lastUpdated,
2025-09-16T23:45:58.084475Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:58.084537Z	      "inStock": status == "in_stock",
2025-09-16T23:45:58.084594Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:58.123925Z	    },
2025-09-16T23:45:58.124424Z	    isActive,
2025-09-16T23:45:58.124558Z	    isFeatured,
2025-09-16T23:45:58.12465Z	    isNew,
2025-09-16T23:45:58.124771Z	    _createdAt,
2025-09-16T23:45:58.125127Z	    _updatedAt
2025-09-16T23:45:58.125446Z	  
2025-09-16T23:45:58.125593Z	      },
2025-09-16T23:45:58.125739Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-16T23:45:58.12606Z	    }
2025-09-16T23:45:58.126191Z	  
2025-09-16T23:45:58.126294Z	Query parameters: {
2025-09-16T23:45:58.126397Z	  limit: 8,
2025-09-16T23:45:58.126654Z	  offset: 0,
2025-09-16T23:45:58.126879Z	  category: undefined,
2025-09-16T23:45:58.127184Z	  brand: 'ixys',
2025-09-16T23:45:58.127357Z	  featured: undefined
2025-09-16T23:45:58.127478Z	}
2025-09-16T23:45:58.127922Z	Query parameters: {
2025-09-16T23:45:58.128059Z	  limit: 8,
2025-09-16T23:45:58.128302Z	  offset: 0,
2025-09-16T23:45:58.128574Z	  category: undefined,
2025-09-16T23:45:58.128803Z	  brand: 'lem',
2025-09-16T23:45:58.129141Z	  featured: undefined
2025-09-16T23:45:58.129391Z	}
2025-09-16T23:45:58.12959Z	Fetching solutions with query: 
2025-09-16T23:45:58.129816Z	    {
2025-09-16T23:45:58.129952Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:58.13005Z	        
2025-09-16T23:45:58.130131Z	    _id,
2025-09-16T23:45:58.130211Z	    title,
2025-09-16T23:45:58.130317Z	    "slug": slug.current,
2025-09-16T23:45:58.130414Z	    summary,
2025-09-16T23:45:58.130512Z	    description,
2025-09-16T23:45:58.130955Z	    coverImage,
2025-09-16T23:45:58.131184Z	    primaryBrand->{
2025-09-16T23:45:58.131387Z	      _id,
2025-09-16T23:45:58.131885Z	      name,
2025-09-16T23:45:58.131987Z	      "slug": slug.current,
2025-09-16T23:45:58.132083Z	      logo
2025-09-16T23:45:58.13223Z	    },
2025-09-16T23:45:58.132347Z	    relatedBrands[]->{
2025-09-16T23:45:58.132602Z	      _id,
2025-09-16T23:45:58.132852Z	      name,
2025-09-16T23:45:58.133084Z	      "slug": slug.current,
2025-09-16T23:45:58.133316Z	      logo
2025-09-16T23:45:58.133528Z	    },
2025-09-16T23:45:58.133653Z	    targetMarket,
2025-09-16T23:45:58.13382Z	    complexity,
2025-09-16T23:45:58.133955Z	    publishedAt,
2025-09-16T23:45:58.134066Z	    isPublished,
2025-09-16T23:45:58.134173Z	    isFeatured,
2025-09-16T23:45:58.134283Z	    viewCount,
2025-09-16T23:45:58.134406Z	    _createdAt,
2025-09-16T23:45:58.134793Z	    _updatedAt
2025-09-16T23:45:58.135238Z	  
2025-09-16T23:45:58.135422Z	      },
2025-09-16T23:45:58.135559Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-16T23:45:58.135637Z	    }
2025-09-16T23:45:58.135731Z	  
2025-09-16T23:45:58.135796Z	Query parameters: {
2025-09-16T23:45:58.135852Z	  limit: 4,
2025-09-16T23:45:58.136074Z	  offset: 0,
2025-09-16T23:45:58.13669Z	  targetMarket: undefined,
2025-09-16T23:45:58.137102Z	  brand: 'lem',
2025-09-16T23:45:58.137284Z	  featured: undefined
2025-09-16T23:45:58.137803Z	}
2025-09-16T23:45:58.137996Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:45:58.138202Z	Fetching products with query: 
2025-09-16T23:45:58.138354Z	    {
2025-09-16T23:45:58.138569Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:58.138757Z	        
2025-09-16T23:45:58.138936Z	    _id,
2025-09-16T23:45:58.139055Z	    _type,
2025-09-16T23:45:58.139197Z	    partNumber,
2025-09-16T23:45:58.139341Z	    "slug": slug.current,
2025-09-16T23:45:58.139468Z	    title,
2025-09-16T23:45:58.139576Z	    shortDescription,
2025-09-16T23:45:58.139728Z	    image,
2025-09-16T23:45:58.139845Z	    brand->{
2025-09-16T23:45:58.140136Z	      name,
2025-09-16T23:45:58.140436Z	      "slug": slug.current,
2025-09-16T23:45:58.140589Z	      logo
2025-09-16T23:45:58.140796Z	    },
2025-09-16T23:45:58.140992Z	    category->{
2025-09-16T23:45:58.141162Z	      name,
2025-09-16T23:45:58.141354Z	      "slug": slug.current
2025-09-16T23:45:58.141522Z	    },
2025-09-16T23:45:58.141646Z	    pricing{
2025-09-16T23:45:58.141772Z	      currency,
2025-09-16T23:45:58.141881Z	      tiers[]{
2025-09-16T23:45:58.141996Z	        quantity,
2025-09-16T23:45:58.142102Z	        price,
2025-09-16T23:45:58.142207Z	        unit
2025-09-16T23:45:58.142301Z	      },
2025-09-16T23:45:58.142414Z	      moq,
2025-09-16T23:45:58.142525Z	      leadTime,
2025-09-16T23:45:58.142634Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:58.142758Z	      "price": tiers[0].price,
2025-09-16T23:45:58.142849Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:58.142941Z	    },
2025-09-16T23:45:58.14303Z	    inventory{
2025-09-16T23:45:58.143145Z	      quantity,
2025-09-16T23:45:58.143248Z	      status,
2025-09-16T23:45:58.143359Z	      warehouse,
2025-09-16T23:45:58.143467Z	      lastUpdated,
2025-09-16T23:45:58.143571Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:58.143689Z	      "inStock": status == "in_stock",
2025-09-16T23:45:58.143821Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:58.143922Z	    },
2025-09-16T23:45:58.144027Z	    isActive,
2025-09-16T23:45:58.144127Z	    isFeatured,
2025-09-16T23:45:58.144231Z	    isNew,
2025-09-16T23:45:58.144334Z	    _createdAt,
2025-09-16T23:45:58.144438Z	    _updatedAt
2025-09-16T23:45:58.14456Z	  
2025-09-16T23:45:58.144689Z	      },
2025-09-16T23:45:58.144895Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:45:58.145073Z	    }
2025-09-16T23:45:58.145199Z	  
2025-09-16T23:45:58.145323Z	Query parameters: {
2025-09-16T23:45:58.145432Z	  limit: 8,
2025-09-16T23:45:58.14556Z	  offset: 0,
2025-09-16T23:45:58.145691Z	  category: undefined,
2025-09-16T23:45:58.145808Z	  brand: 'littelfuse',
2025-09-16T23:45:58.145915Z	  featured: undefined
2025-09-16T23:45:58.146016Z	}
2025-09-16T23:45:58.146113Z	Fetching solutions with query: 
2025-09-16T23:45:58.14625Z	    {
2025-09-16T23:45:58.146357Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:58.146489Z	        
2025-09-16T23:45:58.146588Z	    _id,
2025-09-16T23:45:58.14672Z	    title,
2025-09-16T23:45:58.146836Z	    "slug": slug.current,
2025-09-16T23:45:58.146948Z	    summary,
2025-09-16T23:45:58.147047Z	    description,
2025-09-16T23:45:58.147143Z	    coverImage,
2025-09-16T23:45:58.147236Z	    primaryBrand->{
2025-09-16T23:45:58.147333Z	      _id,
2025-09-16T23:45:58.147432Z	      name,
2025-09-16T23:45:58.147554Z	      "slug": slug.current,
2025-09-16T23:45:58.147697Z	      logo
2025-09-16T23:45:58.147804Z	    },
2025-09-16T23:45:58.147907Z	    relatedBrands[]->{
2025-09-16T23:45:58.148003Z	      _id,
2025-09-16T23:45:58.148101Z	      name,
2025-09-16T23:45:58.148202Z	      "slug": slug.current,
2025-09-16T23:45:58.148307Z	      logo
2025-09-16T23:45:58.1484Z	    },
2025-09-16T23:45:58.148499Z	    targetMarket,
2025-09-16T23:45:58.148651Z	    complexity,
2025-09-16T23:45:58.148847Z	    publishedAt,
2025-09-16T23:45:58.148975Z	    isPublished,
2025-09-16T23:45:58.149087Z	    isFeatured,
2025-09-16T23:45:58.149212Z	    viewCount,
2025-09-16T23:45:58.149404Z	    _createdAt,
2025-09-16T23:45:58.149565Z	    _updatedAt
2025-09-16T23:45:58.149716Z	  
2025-09-16T23:45:58.1499Z	      },
2025-09-16T23:45:58.150067Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:45:58.150193Z	    }
2025-09-16T23:45:58.150303Z	  
2025-09-16T23:45:58.15049Z	Query parameters: {
2025-09-16T23:45:58.150647Z	  limit: 4,
2025-09-16T23:45:58.150856Z	  offset: 0,
2025-09-16T23:45:58.150997Z	  targetMarket: undefined,
2025-09-16T23:45:58.151173Z	  brand: 'littelfuse',
2025-09-16T23:45:58.151303Z	  featured: undefined
2025-09-16T23:45:58.151478Z	}
2025-09-16T23:45:58.151613Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:45:58.151769Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:58.151883Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:58.151993Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:45:58.152096Z	Fetching products with query: 
2025-09-16T23:45:58.152201Z	    {
2025-09-16T23:45:58.152302Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:58.152406Z	        
2025-09-16T23:45:58.152511Z	    _id,
2025-09-16T23:45:58.152642Z	    _type,
2025-09-16T23:45:58.152876Z	    partNumber,
2025-09-16T23:45:58.153082Z	    "slug": slug.current,
2025-09-16T23:45:58.153262Z	    title,
2025-09-16T23:45:58.153437Z	    shortDescription,
2025-09-16T23:45:58.153605Z	    image,
2025-09-16T23:45:58.153806Z	    brand->{
2025-09-16T23:45:58.154037Z	      name,
2025-09-16T23:45:58.154386Z	      "slug": slug.current,
2025-09-16T23:45:58.155231Z	      logo
2025-09-16T23:45:58.155385Z	    },
2025-09-16T23:45:58.155514Z	    category->{
2025-09-16T23:45:58.15563Z	      name,
2025-09-16T23:45:58.155765Z	      "slug": slug.current
2025-09-16T23:45:58.155874Z	    },
2025-09-16T23:45:58.156765Z	    pricing{
2025-09-16T23:45:58.156875Z	      currency,
2025-09-16T23:45:58.156965Z	      tiers[]{
2025-09-16T23:45:58.157056Z	        quantity,
2025-09-16T23:45:58.157149Z	        price,
2025-09-16T23:45:58.157239Z	        unit
2025-09-16T23:45:58.157332Z	      },
2025-09-16T23:45:58.158917Z	      moq,
2025-09-16T23:45:58.159117Z	      leadTime,
2025-09-16T23:45:58.159483Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:58.159621Z	      "price": tiers[0].price,
2025-09-16T23:45:58.160409Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:58.160543Z	    },
2025-09-16T23:45:58.16065Z	    inventory{
2025-09-16T23:45:58.160791Z	      quantity,
2025-09-16T23:45:58.160905Z	      status,
2025-09-16T23:45:58.161011Z	      warehouse,
2025-09-16T23:45:58.161127Z	      lastUpdated,
2025-09-16T23:45:58.161229Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:58.161348Z	      "inStock": status == "in_stock",
2025-09-16T23:45:58.161449Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:58.161548Z	    },
2025-09-16T23:45:58.161693Z	    isActive,
2025-09-16T23:45:58.161813Z	    isFeatured,
2025-09-16T23:45:58.161931Z	    isNew,
2025-09-16T23:45:58.16245Z	    _createdAt,
2025-09-16T23:45:58.162585Z	    _updatedAt
2025-09-16T23:45:58.16273Z	  
2025-09-16T23:45:58.162892Z	      },
2025-09-16T23:45:58.163034Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:45:58.163178Z	    }
2025-09-16T23:45:58.163336Z	  
2025-09-16T23:45:58.163488Z	Query parameters: {
2025-09-16T23:45:58.163625Z	  limit: 8,
2025-09-16T23:45:58.163902Z	  offset: 0,
2025-09-16T23:45:58.164058Z	  category: undefined,
2025-09-16T23:45:58.164211Z	  brand: 'littelfuse',
2025-09-16T23:45:58.164366Z	  featured: undefined
2025-09-16T23:45:58.164503Z	}
2025-09-16T23:45:58.164645Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:45:58.164831Z	Fetching products with query: 
2025-09-16T23:45:58.164987Z	    {
2025-09-16T23:45:58.16512Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:58.165272Z	        
2025-09-16T23:45:58.1654Z	    _id,
2025-09-16T23:45:58.1655Z	    _type,
2025-09-16T23:45:58.165642Z	    partNumber,
2025-09-16T23:45:58.165802Z	    "slug": slug.current,
2025-09-16T23:45:58.165923Z	    title,
2025-09-16T23:45:58.166101Z	    shortDescription,
2025-09-16T23:45:58.166279Z	    image,
2025-09-16T23:45:58.166815Z	    brand->{
2025-09-16T23:45:58.167116Z	      name,
2025-09-16T23:45:58.167247Z	      "slug": slug.current,
2025-09-16T23:45:58.167357Z	      logo
2025-09-16T23:45:58.167477Z	    },
2025-09-16T23:45:58.167604Z	    category->{
2025-09-16T23:45:58.168056Z	      name,
2025-09-16T23:45:58.168646Z	      "slug": slug.current
2025-09-16T23:45:58.168839Z	    },
2025-09-16T23:45:58.168973Z	    pricing{
2025-09-16T23:45:58.169088Z	      currency,
2025-09-16T23:45:58.169225Z	      tiers[]{
2025-09-16T23:45:58.169557Z	        quantity,
2025-09-16T23:45:58.170132Z	        price,
2025-09-16T23:45:58.170279Z	        unit
2025-09-16T23:45:58.170608Z	      },
2025-09-16T23:45:58.171047Z	      moq,
2025-09-16T23:45:58.171368Z	      leadTime,
2025-09-16T23:45:58.171537Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:58.171671Z	      "price": tiers[0].price,
2025-09-16T23:45:58.172132Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:58.172437Z	    },
2025-09-16T23:45:58.172579Z	    inventory{
2025-09-16T23:45:58.173101Z	      quantity,
2025-09-16T23:45:58.173242Z	      status,
2025-09-16T23:45:58.173377Z	      warehouse,
2025-09-16T23:45:58.175484Z	      lastUpdated,
2025-09-16T23:45:58.175735Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:58.176016Z	      "inStock": status == "in_stock",
2025-09-16T23:45:58.176596Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:58.176777Z	    },
2025-09-16T23:45:58.176909Z	    isActive,
2025-09-16T23:45:58.177023Z	    isFeatured,
2025-09-16T23:45:58.177204Z	    isNew,
2025-09-16T23:45:58.177319Z	    _createdAt,
2025-09-16T23:45:58.177449Z	    _updatedAt
2025-09-16T23:45:58.177553Z	  
2025-09-16T23:45:58.177655Z	      },
2025-09-16T23:45:58.177918Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:45:58.178038Z	    }
2025-09-16T23:45:58.178133Z	  
2025-09-16T23:45:58.178234Z	Query parameters: {
2025-09-16T23:45:58.178334Z	  limit: 8,
2025-09-16T23:45:58.178429Z	  offset: 0,
2025-09-16T23:45:58.178546Z	  category: undefined,
2025-09-16T23:45:58.178648Z	  brand: 'Electronicon',
2025-09-16T23:45:58.17878Z	  featured: undefined
2025-09-16T23:45:58.178915Z	}
2025-09-16T23:45:58.179316Z	Fetching solutions with query: 
2025-09-16T23:45:58.179451Z	    {
2025-09-16T23:45:58.17961Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:58.179783Z	        
2025-09-16T23:45:58.179903Z	    _id,
2025-09-16T23:45:58.180008Z	    title,
2025-09-16T23:45:58.180131Z	    "slug": slug.current,
2025-09-16T23:45:58.180243Z	    summary,
2025-09-16T23:45:58.180362Z	    description,
2025-09-16T23:45:58.182263Z	    coverImage,
2025-09-16T23:45:58.182395Z	    primaryBrand->{
2025-09-16T23:45:58.182464Z	      _id,
2025-09-16T23:45:58.18252Z	      name,
2025-09-16T23:45:58.182576Z	      "slug": slug.current,
2025-09-16T23:45:58.182632Z	      logo
2025-09-16T23:45:58.182699Z	    },
2025-09-16T23:45:58.182759Z	    relatedBrands[]->{
2025-09-16T23:45:58.182816Z	      _id,
2025-09-16T23:45:58.18287Z	      name,
2025-09-16T23:45:58.182923Z	      "slug": slug.current,
2025-09-16T23:45:58.182977Z	      logo
2025-09-16T23:45:58.183032Z	    },
2025-09-16T23:45:58.183086Z	    targetMarket,
2025-09-16T23:45:58.183141Z	    complexity,
2025-09-16T23:45:58.183195Z	    publishedAt,
2025-09-16T23:45:58.183248Z	    isPublished,
2025-09-16T23:45:58.183311Z	    isFeatured,
2025-09-16T23:45:58.183366Z	    viewCount,
2025-09-16T23:45:58.183425Z	    _createdAt,
2025-09-16T23:45:58.18348Z	    _updatedAt
2025-09-16T23:45:58.183532Z	  
2025-09-16T23:45:58.183585Z	      },
2025-09-16T23:45:58.183657Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:45:58.183736Z	    }
2025-09-16T23:45:58.183791Z	  
2025-09-16T23:45:58.183846Z	Query parameters: {
2025-09-16T23:45:58.183899Z	  limit: 4,
2025-09-16T23:45:58.183951Z	  offset: 0,
2025-09-16T23:45:58.184004Z	  targetMarket: undefined,
2025-09-16T23:45:58.184057Z	  brand: 'Electronicon',
2025-09-16T23:45:58.184109Z	  featured: undefined
2025-09-16T23:45:58.184163Z	}
2025-09-16T23:45:58.184226Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:45:58.184283Z	Products fetch result: {
2025-09-16T23:45:58.184336Z	  totalProducts: 2,
2025-09-16T23:45:58.184396Z	  fetchedProducts: 2,
2025-09-16T23:45:58.18445Z	  firstProduct: {
2025-09-16T23:45:58.18451Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:45:58.184563Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:45:58.184616Z	    _type: 'product',
2025-09-16T23:45:58.184669Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:45:58.224448Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:45:58.225164Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:45:58.225299Z	    image: null,
2025-09-16T23:45:58.225416Z	    inventory: {
2025-09-16T23:45:58.225534Z	      inStock: true,
2025-09-16T23:45:58.22565Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:45:58.226088Z	      quantity: 0,
2025-09-16T23:45:58.226389Z	      status: 'in_stock',
2025-09-16T23:45:58.226542Z	      warehouse: null
2025-09-16T23:45:58.226657Z	    },
2025-09-16T23:45:58.226785Z	    isActive: true,
2025-09-16T23:45:58.227163Z	    isFeatured: false,
2025-09-16T23:45:58.227742Z	    isNew: false,
2025-09-16T23:45:58.227872Z	    partNumber: '99999',
2025-09-16T23:45:58.22799Z	    pricing: {
2025-09-16T23:45:58.228498Z	      currency: 'CNY',
2025-09-16T23:45:58.228638Z	      leadTime: null,
2025-09-16T23:45:58.22877Z	      moq: null,
2025-09-16T23:45:58.228878Z	      price: null,
2025-09-16T23:45:58.229026Z	      tiers: null
2025-09-16T23:45:58.229421Z	    },
2025-09-16T23:45:58.23003Z	    shortDescription: null,
2025-09-16T23:45:58.23014Z	    slug: '99999',
2025-09-16T23:45:58.230222Z	    title: '99999'
2025-09-16T23:45:58.230299Z	  }
2025-09-16T23:45:58.230381Z	}
2025-09-16T23:45:58.230476Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:58.23062Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:45:58.231001Z	Fetching products with query: 
2025-09-16T23:45:58.231161Z	    {
2025-09-16T23:45:58.231364Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:58.23152Z	        
2025-09-16T23:45:58.2317Z	    _id,
2025-09-16T23:45:58.23186Z	    _type,
2025-09-16T23:45:58.232107Z	    partNumber,
2025-09-16T23:45:58.232229Z	    "slug": slug.current,
2025-09-16T23:45:58.232354Z	    title,
2025-09-16T23:45:58.232484Z	    shortDescription,
2025-09-16T23:45:58.232596Z	    image,
2025-09-16T23:45:58.232727Z	    brand->{
2025-09-16T23:45:58.232846Z	      name,
2025-09-16T23:45:58.232951Z	      "slug": slug.current,
2025-09-16T23:45:58.233059Z	      logo
2025-09-16T23:45:58.233171Z	    },
2025-09-16T23:45:58.233274Z	    category->{
2025-09-16T23:45:58.233391Z	      name,
2025-09-16T23:45:58.233517Z	      "slug": slug.current
2025-09-16T23:45:58.233632Z	    },
2025-09-16T23:45:58.23379Z	    pricing{
2025-09-16T23:45:58.233906Z	      currency,
2025-09-16T23:45:58.234033Z	      tiers[]{
2025-09-16T23:45:58.234177Z	        quantity,
2025-09-16T23:45:58.23449Z	        price,
2025-09-16T23:45:58.234868Z	        unit
2025-09-16T23:45:58.235004Z	      },
2025-09-16T23:45:58.235121Z	      moq,
2025-09-16T23:45:58.235238Z	      leadTime,
2025-09-16T23:45:58.235354Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:58.235485Z	      "price": tiers[0].price,
2025-09-16T23:45:58.2356Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:58.235716Z	    },
2025-09-16T23:45:58.235814Z	    inventory{
2025-09-16T23:45:58.235916Z	      quantity,
2025-09-16T23:45:58.236029Z	      status,
2025-09-16T23:45:58.23714Z	      warehouse,
2025-09-16T23:45:58.237331Z	      lastUpdated,
2025-09-16T23:45:58.237466Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:58.237597Z	      "inStock": status == "in_stock",
2025-09-16T23:45:58.237739Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:58.237842Z	    },
2025-09-16T23:45:58.237936Z	    isActive,
2025-09-16T23:45:58.238029Z	    isFeatured,
2025-09-16T23:45:58.238118Z	    isNew,
2025-09-16T23:45:58.238213Z	    _createdAt,
2025-09-16T23:45:58.238303Z	    _updatedAt
2025-09-16T23:45:58.238391Z	  
2025-09-16T23:45:58.238709Z	      },
2025-09-16T23:45:58.239092Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:45:58.239997Z	    }
2025-09-16T23:45:58.240356Z	  
2025-09-16T23:45:58.240516Z	Query parameters: {
2025-09-16T23:45:58.240728Z	  limit: 8,
2025-09-16T23:45:58.240935Z	  offset: 0,
2025-09-16T23:45:58.241058Z	  category: undefined,
2025-09-16T23:45:58.24117Z	  brand: 'Electronicon',
2025-09-16T23:45:58.241274Z	  featured: undefined
2025-09-16T23:45:58.24142Z	}
2025-09-16T23:45:58.241577Z	Fetching solutions with query: 
2025-09-16T23:45:58.241787Z	    {
2025-09-16T23:45:58.241909Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:58.242039Z	        
2025-09-16T23:45:58.242151Z	    _id,
2025-09-16T23:45:58.242289Z	    title,
2025-09-16T23:45:58.242496Z	    "slug": slug.current,
2025-09-16T23:45:58.242685Z	    summary,
2025-09-16T23:45:58.242862Z	    description,
2025-09-16T23:45:58.243023Z	    coverImage,
2025-09-16T23:45:58.243211Z	    primaryBrand->{
2025-09-16T23:45:58.24339Z	      _id,
2025-09-16T23:45:58.243517Z	      name,
2025-09-16T23:45:58.243643Z	      "slug": slug.current,
2025-09-16T23:45:58.243771Z	      logo
2025-09-16T23:45:58.243893Z	    },
2025-09-16T23:45:58.243991Z	    relatedBrands[]->{
2025-09-16T23:45:58.244075Z	      _id,
2025-09-16T23:45:58.244159Z	      name,
2025-09-16T23:45:58.244239Z	      "slug": slug.current,
2025-09-16T23:45:58.244352Z	      logo
2025-09-16T23:45:58.244623Z	    },
2025-09-16T23:45:58.245054Z	    targetMarket,
2025-09-16T23:45:58.245184Z	    complexity,
2025-09-16T23:45:58.245291Z	    publishedAt,
2025-09-16T23:45:58.245401Z	    isPublished,
2025-09-16T23:45:58.245727Z	    isFeatured,
2025-09-16T23:45:58.246159Z	    viewCount,
2025-09-16T23:45:58.246259Z	    _createdAt,
2025-09-16T23:45:58.246317Z	    _updatedAt
2025-09-16T23:45:58.246383Z	  
2025-09-16T23:45:58.24644Z	      },
2025-09-16T23:45:58.246506Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:45:58.246565Z	    }
2025-09-16T23:45:58.246836Z	  
2025-09-16T23:45:58.246978Z	Query parameters: {
2025-09-16T23:45:58.247234Z	  limit: 4,
2025-09-16T23:45:58.24735Z	  offset: 0,
2025-09-16T23:45:58.247461Z	  targetMarket: undefined,
2025-09-16T23:45:58.247546Z	  brand: 'Electronicon',
2025-09-16T23:45:58.247892Z	  featured: undefined
2025-09-16T23:45:58.248011Z	}
2025-09-16T23:45:58.248121Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:45:58.248261Z	Products fetch result: {
2025-09-16T23:45:58.248366Z	  totalProducts: 2,
2025-09-16T23:45:58.248486Z	  fetchedProducts: 2,
2025-09-16T23:45:58.248741Z	  firstProduct: {
2025-09-16T23:45:58.248865Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:45:58.248967Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:45:58.249055Z	    _type: 'product',
2025-09-16T23:45:58.249142Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:45:58.249273Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:45:58.249396Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:45:58.249537Z	    image: null,
2025-09-16T23:45:58.249747Z	    inventory: {
2025-09-16T23:45:58.249881Z	      inStock: true,
2025-09-16T23:45:58.250003Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:45:58.250131Z	      quantity: 0,
2025-09-16T23:45:58.250257Z	      status: 'in_stock',
2025-09-16T23:45:58.250371Z	      warehouse: null
2025-09-16T23:45:58.250478Z	    },
2025-09-16T23:45:58.250576Z	    isActive: true,
2025-09-16T23:45:58.250663Z	    isFeatured: false,
2025-09-16T23:45:58.250896Z	    isNew: false,
2025-09-16T23:45:58.251044Z	    partNumber: '99999',
2025-09-16T23:45:58.251134Z	    pricing: {
2025-09-16T23:45:58.251313Z	      currency: 'CNY',
2025-09-16T23:45:58.25173Z	      leadTime: null,
2025-09-16T23:45:58.252208Z	      moq: null,
2025-09-16T23:45:58.252487Z	      price: null,
2025-09-16T23:45:58.252685Z	      tiers: null
2025-09-16T23:45:58.25282Z	    },
2025-09-16T23:45:58.252925Z	    shortDescription: null,
2025-09-16T23:45:58.253061Z	    slug: '99999',
2025-09-16T23:45:58.253242Z	    title: '99999'
2025-09-16T23:45:58.253452Z	  }
2025-09-16T23:45:58.253729Z	}
2025-09-16T23:45:58.253863Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:58.25397Z	Fetching solutions with query: 
2025-09-16T23:45:58.254086Z	    {
2025-09-16T23:45:58.254226Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:58.254355Z	        
2025-09-16T23:45:58.254484Z	    _id,
2025-09-16T23:45:58.254582Z	    title,
2025-09-16T23:45:58.254699Z	    "slug": slug.current,
2025-09-16T23:45:58.254823Z	    summary,
2025-09-16T23:45:58.254944Z	    description,
2025-09-16T23:45:58.255072Z	    coverImage,
2025-09-16T23:45:58.255183Z	    primaryBrand->{
2025-09-16T23:45:58.255295Z	      _id,
2025-09-16T23:45:58.255412Z	      name,
2025-09-16T23:45:58.255514Z	      "slug": slug.current,
2025-09-16T23:45:58.255614Z	      logo
2025-09-16T23:45:58.25575Z	    },
2025-09-16T23:45:58.255853Z	    relatedBrands[]->{
2025-09-16T23:45:58.255944Z	      _id,
2025-09-16T23:45:58.256042Z	      name,
2025-09-16T23:45:58.256165Z	      "slug": slug.current,
2025-09-16T23:45:58.256274Z	      logo
2025-09-16T23:45:58.25639Z	    },
2025-09-16T23:45:58.256503Z	    targetMarket,
2025-09-16T23:45:58.256617Z	    complexity,
2025-09-16T23:45:58.256734Z	    publishedAt,
2025-09-16T23:45:58.256972Z	    isPublished,
2025-09-16T23:45:58.257094Z	    isFeatured,
2025-09-16T23:45:58.2572Z	    viewCount,
2025-09-16T23:45:58.257303Z	    _createdAt,
2025-09-16T23:45:58.257421Z	    _updatedAt
2025-09-16T23:45:58.257532Z	  
2025-09-16T23:45:58.257638Z	      },
2025-09-16T23:45:58.257776Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-16T23:45:58.257888Z	    }
2025-09-16T23:45:58.257991Z	  
2025-09-16T23:45:58.258115Z	Query parameters: {
2025-09-16T23:45:58.258227Z	  limit: 4,
2025-09-16T23:45:58.258332Z	  offset: 0,
2025-09-16T23:45:58.258453Z	  targetMarket: undefined,
2025-09-16T23:45:58.258564Z	  brand: 'ixys',
2025-09-16T23:45:58.258688Z	  featured: undefined
2025-09-16T23:45:58.258822Z	}
2025-09-16T23:45:58.259029Z	✅ [getBrandData] Found brand: IXYS
2025-09-16T23:45:58.259169Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:58.259309Z	Solutions fetch result: {
2025-09-16T23:45:58.259425Z	  totalSolutions: 1,
2025-09-16T23:45:58.259527Z	  fetchedSolutions: 1,
2025-09-16T23:45:58.259622Z	  firstSolution: {
2025-09-16T23:45:58.259749Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-16T23:45:58.259845Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-16T23:45:58.259942Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-16T23:45:58.260205Z	    complexity: 'medium',
2025-09-16T23:45:58.260336Z	    coverImage: null,
2025-09-16T23:45:58.260569Z	    description: [ [Object] ],
2025-09-16T23:45:58.260766Z	    isFeatured: false,
2025-09-16T23:45:58.260894Z	    isPublished: true,
2025-09-16T23:45:58.2615Z	    primaryBrand: {
2025-09-16T23:45:58.261753Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:45:58.261952Z	      logo: null,
2025-09-16T23:45:58.262085Z	      name: 'IXYS',
2025-09-16T23:45:58.262303Z	      slug: 'ixys'
2025-09-16T23:45:58.262547Z	    },
2025-09-16T23:45:58.262901Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-16T23:45:58.263039Z	    relatedBrands: null,
2025-09-16T23:45:58.263156Z	    slug: '99999',
2025-09-16T23:45:58.26327Z	    summary: '99999',
2025-09-16T23:45:58.263391Z	    targetMarket: 'industrial-automation',
2025-09-16T23:45:58.263508Z	    title: '99999',
2025-09-16T23:45:58.263626Z	    viewCount: 0
2025-09-16T23:45:58.263749Z	  }
2025-09-16T23:45:58.263908Z	}
2025-09-16T23:45:58.265214Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-16T23:45:58.265723Z	Fetching products with query: 
2025-09-16T23:45:58.266249Z	    {
2025-09-16T23:45:58.266422Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:58.266551Z	        
2025-09-16T23:45:58.266703Z	    _id,
2025-09-16T23:45:58.266828Z	    _type,
2025-09-16T23:45:58.267006Z	    partNumber,
2025-09-16T23:45:58.267116Z	    "slug": slug.current,
2025-09-16T23:45:58.267215Z	    title,
2025-09-16T23:45:58.267298Z	    shortDescription,
2025-09-16T23:45:58.267399Z	    image,
2025-09-16T23:45:58.267497Z	    brand->{
2025-09-16T23:45:58.267596Z	      name,
2025-09-16T23:45:58.26774Z	      "slug": slug.current,
2025-09-16T23:45:58.267857Z	      logo
2025-09-16T23:45:58.267961Z	    },
2025-09-16T23:45:58.268071Z	    category->{
2025-09-16T23:45:58.268176Z	      name,
2025-09-16T23:45:58.268362Z	      "slug": slug.current
2025-09-16T23:45:58.26883Z	    },
2025-09-16T23:45:58.269034Z	    pricing{
2025-09-16T23:45:58.269176Z	      currency,
2025-09-16T23:45:58.269287Z	      tiers[]{
2025-09-16T23:45:58.269403Z	        quantity,
2025-09-16T23:45:58.269513Z	        price,
2025-09-16T23:45:58.269656Z	        unit
2025-09-16T23:45:58.269782Z	      },
2025-09-16T23:45:58.269894Z	      moq,
2025-09-16T23:45:58.269992Z	      leadTime,
2025-09-16T23:45:58.270115Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:58.270237Z	      "price": tiers[0].price,
2025-09-16T23:45:58.270359Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:58.270474Z	    },
2025-09-16T23:45:58.270574Z	    inventory{
2025-09-16T23:45:58.270812Z	      quantity,
2025-09-16T23:45:58.271011Z	      status,
2025-09-16T23:45:58.271204Z	      warehouse,
2025-09-16T23:45:58.271327Z	      lastUpdated,
2025-09-16T23:45:58.271487Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:58.271653Z	      "inStock": status == "in_stock",
2025-09-16T23:45:58.272098Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:58.272488Z	    },
2025-09-16T23:45:58.272863Z	    isActive,
2025-09-16T23:45:58.273175Z	    isFeatured,
2025-09-16T23:45:58.273292Z	    isNew,
2025-09-16T23:45:58.273586Z	    _createdAt,
2025-09-16T23:45:58.273723Z	    _updatedAt
2025-09-16T23:45:58.273831Z	  
2025-09-16T23:45:58.275141Z	      },
2025-09-16T23:45:58.275298Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-16T23:45:58.275426Z	    }
2025-09-16T23:45:58.275557Z	  
2025-09-16T23:45:58.275687Z	Query parameters: {
2025-09-16T23:45:58.27582Z	  limit: 8,
2025-09-16T23:45:58.275936Z	  offset: 0,
2025-09-16T23:45:58.276121Z	  category: undefined,
2025-09-16T23:45:58.276233Z	  brand: 'ixys',
2025-09-16T23:45:58.276329Z	  featured: undefined
2025-09-16T23:45:58.276633Z	}
2025-09-16T23:45:58.276807Z	Fetching solutions with query: 
2025-09-16T23:45:58.276932Z	    {
2025-09-16T23:45:58.277048Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:58.277173Z	        
2025-09-16T23:45:58.277281Z	    _id,
2025-09-16T23:45:58.277438Z	    title,
2025-09-16T23:45:58.277606Z	    "slug": slug.current,
2025-09-16T23:45:58.27777Z	    summary,
2025-09-16T23:45:58.277894Z	    description,
2025-09-16T23:45:58.278012Z	    coverImage,
2025-09-16T23:45:58.278127Z	    primaryBrand->{
2025-09-16T23:45:58.278238Z	      _id,
2025-09-16T23:45:58.278339Z	      name,
2025-09-16T23:45:58.278455Z	      "slug": slug.current,
2025-09-16T23:45:58.278583Z	      logo
2025-09-16T23:45:58.278719Z	    },
2025-09-16T23:45:58.279791Z	    relatedBrands[]->{
2025-09-16T23:45:58.280361Z	      _id,
2025-09-16T23:45:58.280555Z	      name,
2025-09-16T23:45:58.280727Z	      "slug": slug.current,
2025-09-16T23:45:58.28088Z	      logo
2025-09-16T23:45:58.281012Z	    },
2025-09-16T23:45:58.281157Z	    targetMarket,
2025-09-16T23:45:58.281285Z	    complexity,
2025-09-16T23:45:58.281477Z	    publishedAt,
2025-09-16T23:45:58.281619Z	    isPublished,
2025-09-16T23:45:58.324036Z	    isFeatured,
2025-09-16T23:45:58.324219Z	    viewCount,
2025-09-16T23:45:58.324361Z	    _createdAt,
2025-09-16T23:45:58.324494Z	    _updatedAt
2025-09-16T23:45:58.324627Z	  
2025-09-16T23:45:58.324772Z	      },
2025-09-16T23:45:58.324888Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-16T23:45:58.325023Z	    }
2025-09-16T23:45:58.325147Z	  
2025-09-16T23:45:58.325273Z	Query parameter❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:58.325385Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:58.325486Z	Error fetching brand products data: Error: NEXT_NOT_FOUND
2025-09-16T23:45:58.325597Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:45:58.325748Z	    at y (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/products/page.js:1:4657) {
2025-09-16T23:45:58.325856Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:45:58.325956Z	}
2025-09-16T23:45:58.32605Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:58.326151Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:58.326422Z	Error fetching brand products data: Error: NEXT_NOT_FOUND
2025-09-16T23:45:58.32679Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:45:58.327111Z	    at y (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/products/page.js:1:4657) {
2025-09-16T23:45:58.327556Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:45:58.32767Z	}
2025-09-16T23:45:58.328023Z	s: {
2025-09-16T23:45:58.328133Z	  limit: 4,
2025-09-16T23:45:58.328247Z	  offset: 0,
2025-09-16T23:45:58.328347Z	  targetMarket: undefined,
2025-09-16T23:45:58.328447Z	  brand: 'ixys',
2025-09-16T23:45:58.32854Z	  featured: undefined
2025-09-16T23:45:58.328896Z	}
2025-09-16T23:45:58.32904Z	Products fetch result: {
2025-09-16T23:45:58.329466Z	  totalProducts: 4,
2025-09-16T23:45:58.329845Z	  fetchedProducts: 4,
2025-09-16T23:45:58.330017Z	  firstProduct: {
2025-09-16T23:45:58.33014Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:45:58.330251Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:45:58.330358Z	    _type: 'product',
2025-09-16T23:45:58.330485Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:45:58.330594Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:45:58.330749Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:45:58.330878Z	    image: null,
2025-09-16T23:45:58.330981Z	    inventory: {
2025-09-16T23:45:58.331104Z	      inStock: true,
2025-09-16T23:45:58.331218Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:45:58.331335Z	      quantity: 0,
2025-09-16T23:45:58.331449Z	      status: 'in_stock',
2025-09-16T23:45:58.331553Z	      warehouse: null
2025-09-16T23:45:58.331656Z	    },
2025-09-16T23:45:58.33181Z	    isActive: true,
2025-09-16T23:45:58.331928Z	    isFeatured: false,
2025-09-16T23:45:58.33203Z	    isNew: false,
2025-09-16T23:45:58.33213Z	    partNumber: '11111',
2025-09-16T23:45:58.332714Z	    pricing: {
2025-09-16T23:45:58.333286Z	      currency: 'CNY',
2025-09-16T23:45:58.333639Z	      leadTime: null,
2025-09-16T23:45:58.333953Z	      moq: null,
2025-09-16T23:45:58.334247Z	      price: null,
2025-09-16T23:45:58.334357Z	      tiers: null
2025-09-16T23:45:58.334878Z	    },
2025-09-16T23:45:58.335162Z	    shortDescription: '11111',
2025-09-16T23:45:58.335512Z	    slug: 'sic mosfet',
2025-09-16T23:45:58.335622Z	    title: '111111'
2025-09-16T23:45:58.335749Z	  }
2025-09-16T23:45:58.336053Z	}
2025-09-16T23:45:58.336231Z	Products fetch result: {
2025-09-16T23:45:58.33634Z	  totalProducts: 4,
2025-09-16T23:45:58.336433Z	  fetchedProducts: 4,
2025-09-16T23:45:58.336519Z	  firstProduct: {
2025-09-16T23:45:58.336601Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:45:58.33673Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:45:58.336902Z	    _type: 'product',
2025-09-16T23:45:58.33703Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:45:58.337136Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:45:58.337227Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:45:58.337328Z	    image: null,
2025-09-16T23:45:58.337432Z	    inventory: {
2025-09-16T23:45:58.337531Z	      inStock: true,
2025-09-16T23:45:58.337645Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:45:58.337787Z	      quantity: 0,
2025-09-16T23:45:58.337895Z	      status: 'in_stock',
2025-09-16T23:45:58.337998Z	      warehouse: null
2025-09-16T23:45:58.338101Z	    },
2025-09-16T23:45:58.338206Z	    isActive: true,
2025-09-16T23:45:58.33831Z	    isFeatured: false,
2025-09-16T23:45:58.338415Z	    isNew: false,
2025-09-16T23:45:58.338517Z	    partNumber: '11111',
2025-09-16T23:45:58.338615Z	    pricing: {
2025-09-16T23:45:58.338755Z	      currency: 'CNY',
2025-09-16T23:45:58.338861Z	      leadTime: null,
2025-09-16T23:45:58.338962Z	      moq: null,
2025-09-16T23:45:58.339078Z	      price: null,
2025-09-16T23:45:58.339189Z	      tiers: null
2025-09-16T23:45:58.340175Z	    },
2025-09-16T23:45:58.34084Z	    shortDescription: '11111',
2025-09-16T23:45:58.341064Z	    slug: 'sic mosfet',
2025-09-16T23:45:58.341268Z	    title: '111111'
2025-09-16T23:45:58.341429Z	  }
2025-09-16T23:45:58.341691Z	}
2025-09-16T23:45:58.342167Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:45:58.342468Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:45:58.343095Z	Solutions fetch result: {
2025-09-16T23:45:58.343709Z	  totalSolutions: 6,
2025-09-16T23:45:58.343853Z	  fetchedSolutions: 4,
2025-09-16T23:45:58.343969Z	  firstSolution: {
2025-09-16T23:45:58.344071Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:45:58.344186Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:45:58.344278Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:45:58.344374Z	    complexity: 'medium',
2025-09-16T23:45:58.344474Z	    coverImage: null,
2025-09-16T23:45:58.344584Z	    description: [ [Object] ],
2025-09-16T23:45:58.344718Z	    isFeatured: false,
2025-09-16T23:45:58.344821Z	    isPublished: true,
2025-09-16T23:45:58.344926Z	    primaryBrand: {
2025-09-16T23:45:58.345028Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:45:58.345136Z	      logo: null,
2025-09-16T23:45:58.34524Z	      name: 'CREE',
2025-09-16T23:45:58.345341Z	      slug: 'cree'
2025-09-16T23:45:58.345456Z	    },
2025-09-16T23:45:58.345572Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:45:58.345701Z	    relatedBrands: null,
2025-09-16T23:45:58.345817Z	    slug: '11111',
2025-09-16T23:45:58.345923Z	    summary: '11111',
2025-09-16T23:45:58.346026Z	    targetMarket: 'industrial-automation',
2025-09-16T23:45:58.346161Z	    title: '11111',
2025-09-16T23:45:58.346279Z	    viewCount: 0
2025-09-16T23:45:58.346391Z	  }
2025-09-16T23:45:58.347052Z	}
2025-09-16T23:45:58.347467Z	Solutions fetch result: {
2025-09-16T23:45:58.347746Z	  totalSolutions: 6,
2025-09-16T23:45:58.347956Z	  fetchedSolutions: 4,
2025-09-16T23:45:58.348127Z	  firstSolution: {
2025-09-16T23:45:58.348297Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:45:58.348485Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:45:58.348712Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:45:58.348902Z	    complexity: 'medium',
2025-09-16T23:45:58.349073Z	    coverImage: null,
2025-09-16T23:45:58.349238Z	    description: [ [Object] ],
2025-09-16T23:45:58.349402Z	    isFeatured: false,
2025-09-16T23:45:58.349576Z	    isPublished: true,
2025-09-16T23:45:58.349781Z	    primaryBrand: {
2025-09-16T23:45:58.349947Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:45:58.35024Z	      logo: null,
2025-09-16T23:45:58.350393Z	      name: 'CREE',
2025-09-16T23:45:58.35051Z	      slug: 'cree'
2025-09-16T23:45:58.350614Z	    },
2025-09-16T23:45:58.350805Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:45:58.35093Z	    relatedBrands: null,
2025-09-16T23:45:58.35106Z	    slug: '11111',
2025-09-16T23:45:58.351176Z	    summary: '11111',
2025-09-16T23:45:58.35128Z	    targetMarket: 'industrial-automation',
2025-09-16T23:45:58.351399Z	    title: '11111',
2025-09-16T23:45:58.351507Z	    viewCount: 0
2025-09-16T23:45:58.35161Z	  }
2025-09-16T23:45:58.351753Z	}
2025-09-16T23:45:58.351868Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-16T23:45:58.35198Z	Fetching products with query: 
2025-09-16T23:45:58.352086Z	    {
2025-09-16T23:45:58.352229Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:58.352741Z	        
2025-09-16T23:45:58.352876Z	    _id,
2025-09-16T23:45:58.352986Z	    _type,
2025-09-16T23:45:58.353098Z	    partNumber,
2025-09-16T23:45:58.353224Z	    "slug": slug.current,
2025-09-16T23:45:58.353343Z	    title,
2025-09-16T23:45:58.353446Z	    shortDescription,
2025-09-16T23:45:58.353552Z	    image,
2025-09-16T23:45:58.35367Z	    brand->{
2025-09-16T23:45:58.353812Z	      name,
2025-09-16T23:45:58.353923Z	      "slug": slug.current,
2025-09-16T23:45:58.354025Z	      logo
2025-09-16T23:45:58.354122Z	    },
2025-09-16T23:45:58.354229Z	    category->{
2025-09-16T23:45:58.354333Z	      name,
2025-09-16T23:45:58.354439Z	      "slug": slug.current
2025-09-16T23:45:58.354536Z	    },
2025-09-16T23:45:58.354647Z	    pricing{
2025-09-16T23:45:58.354799Z	      currency,
2025-09-16T23:45:58.354914Z	      tiers[]{
2025-09-16T23:45:58.355015Z	        quantity,
2025-09-16T23:45:58.355122Z	        price,
2025-09-16T23:45:58.355227Z	        unit
2025-09-16T23:45:58.355332Z	      },
2025-09-16T23:45:58.355429Z	      moq,
2025-09-16T23:45:58.355526Z	      leadTime,
2025-09-16T23:45:58.355637Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:58.355784Z	      "price": tiers[0].price,
2025-09-16T23:45:58.3559Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:58.356015Z	    },
2025-09-16T23:45:58.356121Z	    inventory{
2025-09-16T23:45:58.356232Z	      quantity,
2025-09-16T23:45:58.35634Z	      status,
2025-09-16T23:45:58.35644Z	      warehouse,
2025-09-16T23:45:58.356534Z	      lastUpdated,
2025-09-16T23:45:58.356645Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:58.356788Z	      "inStock": status == "in_stock",
2025-09-16T23:45:58.356907Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:58.357029Z	    },
2025-09-16T23:45:58.357135Z	    isActive,
2025-09-16T23:45:58.357255Z	    isFeatured,
2025-09-16T23:45:58.357389Z	    isNew,
2025-09-16T23:45:58.35752Z	    _createdAt,
2025-09-16T23:45:58.357644Z	    _updatedAt
2025-09-16T23:45:58.357815Z	  
2025-09-16T23:45:58.35795Z	      },
2025-09-16T23:45:58.358071Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-16T23:45:58.358215Z	    }
2025-09-16T23:45:58.358332Z	  
2025-09-16T23:45:58.358437Z	Query parameters: {
2025-09-16T23:45:58.358549Z	  limit: 8,
2025-09-16T23:45:58.359067Z	  offset: 0,
2025-09-16T23:45:58.359436Z	  category: undefined,
2025-09-16T23:45:58.359622Z	  brand: 'lem',
2025-09-16T23:45:58.359859Z	  featured: undefined
2025-09-16T23:45:58.360071Z	}
2025-09-16T23:45:58.360185Z	Fetching solutions with query: 
2025-09-16T23:45:58.360407Z	    {
2025-09-16T23:45:58.36054Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:58.360666Z	        
2025-09-16T23:45:58.360799Z	    _id,
2025-09-16T23:45:58.360909Z	    title,
2025-09-16T23:45:58.361035Z	    "slug": slug.current,
2025-09-16T23:45:58.361144Z	    summary,
2025-09-16T23:45:58.361245Z	    description,
2025-09-16T23:45:58.361356Z	    coverImage,
2025-09-16T23:45:58.361473Z	    primaryBrand->{
2025-09-16T23:45:58.361579Z	      _id,
2025-09-16T23:45:58.361714Z	      name,
2025-09-16T23:45:58.36184Z	      "slug": slug.current,
2025-09-16T23:45:58.36194Z	      logo
2025-09-16T23:45:58.362044Z	    },
2025-09-16T23:45:58.362147Z	    relatedBrands[]->{
2025-09-16T23:45:58.362254Z	      _id,
2025-09-16T23:45:58.362355Z	      name,
2025-09-16T23:45:58.362454Z	      "slug": slug.current,
2025-09-16T23:45:58.362561Z	      logo
2025-09-16T23:45:58.362669Z	    },
2025-09-16T23:45:58.362794Z	    targetMarket,
2025-09-16T23:45:58.362907Z	    complexity,
2025-09-16T23:45:58.363019Z	    publishedAt,
2025-09-16T23:45:58.363131Z	    isPublished,
2025-09-16T23:45:58.363247Z	    isFeatured,
2025-09-16T23:45:58.363356Z	    viewCount,
2025-09-16T23:45:58.363474Z	    _createdAt,
2025-09-16T23:45:58.363568Z	    _updatedAt
2025-09-16T23:45:58.363688Z	  
2025-09-16T23:45:58.363799Z	      },
2025-09-16T23:45:58.363909Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-16T23:45:58.36402Z	    }
2025-09-16T23:45:58.36412Z	  
2025-09-16T23:45:58.364231Z	Query parameters: {
2025-09-16T23:45:58.364339Z	  limit: 4,
2025-09-16T23:45:58.364449Z	  offset: 0,
2025-09-16T23:45:58.364561Z	  targetMarket: undefined,
2025-09-16T23:45:58.364702Z	  brand: 'lem',
2025-09-16T23:45:58.364835Z	  featured: undefined
2025-09-16T23:45:58.364945Z	}
2025-09-16T23:45:58.36506Z	✅ [getBrandData] Found brand: LEM
2025-09-16T23:45:58.365172Z	✅ [getBrandData] Found brand: LEM
2025-09-16T23:45:58.365271Z	Products fetch result: {
2025-09-16T23:45:58.36537Z	  totalProducts: 3,
2025-09-16T23:45:58.365464Z	  fetchedProducts: 3,
2025-09-16T23:45:58.365558Z	  firstProduct: {
2025-09-16T23:45:58.365723Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-16T23:45:58.366054Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-16T23:45:58.366204Z	    _type: 'product',
2025-09-16T23:45:58.366325Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-16T23:45:58.366439Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-16T23:45:58.366545Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-16T23:45:58.366659Z	    image: null,
2025-09-16T23:45:58.366776Z	    inventory: {
2025-09-16T23:45:58.36687Z	      inStock: true,
2025-09-16T23:45:58.366958Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-16T23:45:58.36705Z	      quantity: 0,
2025-09-16T23:45:58.367144Z	      status: 'in_stock',
2025-09-16T23:45:58.367247Z	      warehouse: null
2025-09-16T23:45:58.367361Z	    },
2025-09-16T23:45:58.367481Z	    isActive: true,
2025-09-16T23:45:58.367583Z	    isFeatured: false,
2025-09-16T23:45:58.367713Z	    isNew: false,
2025-09-16T23:45:58.367846Z	    partNumber: 'la55-p',
2025-09-16T23:45:58.367951Z	    pricing: {
2025-09-16T23:45:58.368084Z	      currency: 'CNY',
2025-09-16T23:45:58.368286Z	      leadTime: null,
2025-09-16T23:45:58.36842Z	      moq: null,
2025-09-16T23:45:58.368529Z	      price: null,
2025-09-16T23:45:58.36865Z	      tiers: null
2025-09-16T23:45:58.368884Z	    },
2025-09-16T23:45:58.369217Z	    shortDescription: '电流传感器la55-p',
2025-09-16T23:45:58.369349Z	    slug: 'la55-p',
2025-09-16T23:45:58.369507Z	    title: '电流传感器la55-p'
2025-09-16T23:45:58.36976Z	  }
2025-09-16T23:45:58.369976Z	}
2025-09-16T23:45:58.370116Z	Products fetch result: {
2025-09-16T23:45:58.370229Z	  totalProducts: 3,
2025-09-16T23:45:58.370346Z	  fetchedProducts: 3,
2025-09-16T23:45:58.370457Z	  firstProduct: {
2025-09-16T23:45:58.370567Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-16T23:45:58.370686Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-16T23:45:58.370812Z	    _type: 'product',
2025-09-16T23:45:58.371081Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-16T23:45:58.371192Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-16T23:45:58.371334Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-16T23:45:58.371447Z	    image: null,
2025-09-16T23:45:58.371564Z	    inventory: {
2025-09-16T23:45:58.37175Z	      inStock: true,
2025-09-16T23:45:58.371919Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-16T23:45:58.372189Z	      quantity: 0,
2025-09-16T23:45:58.372307Z	      status: 'in_stock',
2025-09-16T23:45:58.372701Z	      warehouse: null
2025-09-16T23:45:58.373008Z	    },
2025-09-16T23:45:58.373137Z	    isActive: true,
2025-09-16T23:45:58.373328Z	    isFeatured: false,
2025-09-16T23:45:58.373466Z	    isNew: false,
2025-09-16T23:45:58.373727Z	    partNumber: 'la55-p',
2025-09-16T23:45:58.373839Z	    pricing: {
2025-09-16T23:45:58.373945Z	      currency: 'CNY',
2025-09-16T23:45:58.374073Z	      leadTime: null,
2025-09-16T23:45:58.374277Z	      moq: null,
2025-09-16T23:45:58.374363Z	      price: null,
2025-09-16T23:45:58.374422Z	      tiers: null
2025-09-16T23:45:58.374553Z	    },
2025-09-16T23:45:58.374788Z	    shortDescription: '电流传感器la55-p',
2025-09-16T23:45:58.375009Z	    slug: 'la55-p',
2025-09-16T23:45:58.375133Z	    title: '电流传感器la55-p'
2025-09-16T23:45:58.375253Z	  }
2025-09-16T23:45:58.375402Z	}
2025-09-16T23:45:58.375571Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:58.37575Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:58.375877Z	✅ [getBrandData] Found brand: Epcos
2025-09-16T23:45:58.376095Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:58.376305Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:58.376475Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-16T23:45:58.37659Z	Fetching products with query: 
2025-09-16T23:45:58.37671Z	    {
2025-09-16T23:45:58.376876Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:58.377052Z	        
2025-09-16T23:45:58.377179Z	    _id,
2025-09-16T23:45:58.377291Z	    _type,
2025-09-16T23:45:58.377518Z	    partNumber,
2025-09-16T23:45:58.37765Z	    "slug": slug.current,
2025-09-16T23:45:58.377761Z	    title,
2025-09-16T23:45:58.37786Z	    shortDescription,
2025-09-16T23:45:58.378013Z	    image,
2025-09-16T23:45:58.37812Z	    brand->{
2025-09-16T23:45:58.378227Z	      name,
2025-09-16T23:45:58.378327Z	      "slug": slug.current,
2025-09-16T23:45:58.378419Z	      logo
2025-09-16T23:45:58.378516Z	    },
2025-09-16T23:45:58.378602Z	    category->{
2025-09-16T23:45:58.378723Z	      name,
2025-09-16T23:45:58.378835Z	      "slug": slug.current
2025-09-16T23:45:58.37894Z	    },
2025-09-16T23:45:58.379043Z	    pricing{
2025-09-16T23:45:58.379142Z	      currency,
2025-09-16T23:45:58.379268Z	      tiers[]{
2025-09-16T23:45:58.37938Z	        quantity,
2025-09-16T23:45:58.379502Z	        price,
2025-09-16T23:45:58.379641Z	        unit
2025-09-16T23:45:58.379773Z	      },
2025-09-16T23:45:58.379866Z	      moq,
2025-09-16T23:45:58.379957Z	      leadTime,
2025-09-16T23:45:58.38005Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:58.380155Z	      "price": tiers[0].price,
2025-09-16T23:45:58.380251Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:58.380344Z	    },
2025-09-16T23:45:58.380448Z	    inventory{
2025-09-16T23:45:58.380554Z	      quantity,
2025-09-16T23:45:58.380671Z	      status,
2025-09-16T23:45:58.380807Z	      warehouse,
2025-09-16T23:45:58.380929Z	      lastUpdated,
2025-09-16T23:45:58.381037Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:58.381152Z	      "inStock": status == "in_stock",
2025-09-16T23:45:58.381266Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:58.381392Z	    },
2025-09-16T23:45:58.381516Z	    isActive,
2025-09-16T23:45:58.382224Z	    isFeatured,
2025-09-16T23:45:58.382697Z	    isNew,
2025-09-16T23:45:58.382865Z	    _createdAt,
2025-09-16T23:45:58.383019Z	    _updatedAt
2025-09-16T23:45:58.383164Z	  
2025-09-16T23:45:58.424427Z	      },
2025-09-16T23:45:58.424894Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-16T23:45:58.42587Z	    }
2025-09-16T23:45:58.426028Z	  
2025-09-16T23:45:58.426143Z	Query parameters: {
2025-09-16T23:45:58.426254Z	  limit: 8,
2025-09-16T23:45:58.426366Z	  offset: 0,
2025-09-16T23:45:58.4265Z	  category: undefined,
2025-09-16T23:45:58.435465Z	  brand: 'epcos',
2025-09-16T23:45:58.438846Z	  featured: undefined
2025-09-16T23:45:58.439109Z	}
2025-09-16T23:45:58.439274Z	Fetching solutions with query: 
2025-09-16T23:45:58.439411Z	    {
2025-09-16T23:45:58.439519Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:58.439633Z	        
2025-09-16T23:45:58.439772Z	    _id,
2025-09-16T23:45:58.439877Z	    title,
2025-09-16T23:45:58.440034Z	    "slug": slug.current,
2025-09-16T23:45:58.440219Z	    summary,
2025-09-16T23:45:58.440355Z	    description,
2025-09-16T23:45:58.440485Z	    coverImage,
2025-09-16T23:45:58.440602Z	    primaryBrand->{
2025-09-16T23:45:58.442728Z	      _id,
2025-09-16T23:45:58.442928Z	      name,
2025-09-16T23:45:58.443309Z	      "slug": slug.current,
2025-09-16T23:45:58.443455Z	      logo
2025-09-16T23:45:58.443934Z	    },
2025-09-16T23:45:58.44413Z	    relatedBrands[]->{
2025-09-16T23:45:58.444316Z	      _id,
2025-09-16T23:45:58.444494Z	      name,
2025-09-16T23:45:58.444723Z	      "slug": slug.current,
2025-09-16T23:45:58.44498Z	      logo
2025-09-16T23:45:58.445242Z	    },
2025-09-16T23:45:58.446536Z	    targetMarket,
2025-09-16T23:45:58.446928Z	    complexity,
2025-09-16T23:45:58.447126Z	    publishedAt,
2025-09-16T23:45:58.447243Z	    isPublished,
2025-09-16T23:45:58.44735Z	    isFeatured,
2025-09-16T23:45:58.447457Z	    viewCount,
2025-09-16T23:45:58.447554Z	    _createdAt,
2025-09-16T23:45:58.447648Z	    _updatedAt
2025-09-16T23:45:58.447764Z	  
2025-09-16T23:45:58.447857Z	      },
2025-09-16T23:45:58.447948Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-16T23:45:58.448067Z	    }
2025-09-16T23:45:58.448167Z	  
2025-09-16T23:45:58.448624Z	Query parameters: {
2025-09-16T23:45:58.448757Z	  limit: 4,
2025-09-16T23:45:58.448866Z	  offset: 0,
2025-09-16T23:45:58.44897Z	  targetMarket: undefined,
2025-09-16T23:45:58.449068Z	  brand: 'epcos',
2025-09-16T23:45:58.449155Z	  featured: undefined
2025-09-16T23:45:58.449535Z	}
2025-09-16T23:45:58.449871Z	✅ [getBrandData] Found brand: Epcos
2025-09-16T23:45:58.450014Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:58.450131Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:58.450232Z	Fetching solutions with query: 
2025-09-16T23:45:58.450328Z	    {
2025-09-16T23:45:58.450419Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:58.45054Z	        
2025-09-16T23:45:58.45064Z	    _id,
2025-09-16T23:45:58.450757Z	    title,
2025-09-16T23:45:58.451189Z	    "slug": slug.current,
2025-09-16T23:45:58.451286Z	    summary,
2025-09-16T23:45:58.451377Z	    description,
2025-09-16T23:45:58.45173Z	    coverImage,
2025-09-16T23:45:58.451836Z	    primaryBrand->{
2025-09-16T23:45:58.451933Z	      _id,
2025-09-16T23:45:58.452028Z	      name,
2025-09-16T23:45:58.452395Z	      "slug": slug.current,
2025-09-16T23:45:58.452519Z	      logo
2025-09-16T23:45:58.452606Z	    },
2025-09-16T23:45:58.452946Z	    relatedBrands[]->{
2025-09-16T23:45:58.453058Z	      _id,
2025-09-16T23:45:58.45315Z	      name,
2025-09-16T23:45:58.453235Z	      "slug": slug.current,
2025-09-16T23:45:58.453321Z	      logo
2025-09-16T23:45:58.453412Z	    },
2025-09-16T23:45:58.453512Z	    targetMarket,
2025-09-16T23:45:58.45361Z	    complexity,
2025-09-16T23:45:58.453726Z	    publishedAt,
2025-09-16T23:45:58.453823Z	    isPublished,
2025-09-16T23:45:58.453914Z	    isFeatured,
2025-09-16T23:45:58.454004Z	    viewCount,
2025-09-16T23:45:58.454093Z	    _createdAt,
2025-09-16T23:45:58.454189Z	    _updatedAt
2025-09-16T23:45:58.454348Z	  
2025-09-16T23:45:58.454463Z	      },
2025-09-16T23:45:58.454558Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:45:58.454652Z	    }
2025-09-16T23:45:58.454768Z	  
2025-09-16T23:45:58.454871Z	Query parameters: {
2025-09-16T23:45:58.455738Z	  limit: 4,
2025-09-16T23:45:58.456059Z	  offset: 0,
2025-09-16T23:45:58.461234Z	  targetMarket: undefined,
2025-09-16T23:45:58.461708Z	  brand: 'littelfuse',
2025-09-16T23:45:58.462006Z	  featured: undefined
2025-09-16T23:45:58.464362Z	}
2025-09-16T23:45:58.464667Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:45:58.466179Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:58.466761Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:58.469726Z	✅ [getBrandData] Found brand: IXYS
2025-09-16T23:45:58.47009Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:58.470267Z	Solutions fetch result: {
2025-09-16T23:45:58.470436Z	  totalSolutions: 1,
2025-09-16T23:45:58.470573Z	  fetchedSolutions: 1,
2025-09-16T23:45:58.470729Z	  firstSolution: {
2025-09-16T23:45:58.470873Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:58.471001Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:58.471116Z	Error fetching brand products data: Error: NEXT_NOT_FOUND
2025-09-16T23:45:58.471218Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:45:58.471317Z	    at y (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/products/page.js:1:4657) {
2025-09-16T23:45:58.471413Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:45:58.471511Z	}
2025-09-16T23:45:58.471622Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:58.471763Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:58.471874Z	Error fetching brand products data: Error: NEXT_NOT_FOUND
2025-09-16T23:45:58.471978Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:45:58.472085Z	    at y (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/products/page.js:1:4657) {
2025-09-16T23:45:58.472193Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:45:58.472299Z	}
2025-09-16T23:45:58.472418Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-16T23:45:58.472524Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-16T23:45:58.472623Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-16T23:45:58.472753Z	    complexity: 'medium',
2025-09-16T23:45:58.472859Z	    coverImage: null,
2025-09-16T23:45:58.472964Z	    description: [ [Object] ],
2025-09-16T23:45:58.473072Z	    isFeatured: false,
2025-09-16T23:45:58.473178Z	    isPublished: true,
2025-09-16T23:45:58.473289Z	    primaryBrand: {
2025-09-16T23:45:58.473398Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:45:58.47351Z	      logo: null,
2025-09-16T23:45:58.473621Z	      name: 'IXYS',
2025-09-16T23:45:58.473772Z	      slug: 'ixys'
2025-09-16T23:45:58.47392Z	    },
2025-09-16T23:45:58.474062Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-16T23:45:58.474133Z	    relatedBrands: null,
2025-09-16T23:45:58.474192Z	    slug: '99999',
2025-09-16T23:45:58.475043Z	    summary: '99999',
2025-09-16T23:45:58.47536Z	    targetMarket: 'industrial-automation',
2025-09-16T23:45:58.475593Z	    title: '99999',
2025-09-16T23:45:58.523987Z	    viewCount: 0
2025-09-16T23:45:58.524207Z	  }
2025-09-16T23:45:58.524359Z	}
2025-09-16T23:45:58.524474Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-16T23:45:58.524632Z	Fetching products with query: 
2025-09-16T23:45:58.524802Z	    {
2025-09-16T23:45:58.524911Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:58.52504Z	        
2025-09-16T23:45:58.525177Z	    _id,
2025-09-16T23:45:58.525282Z	    _type,
2025-09-16T23:45:58.525394Z	    partNumber,
2025-09-16T23:45:58.525493Z	    "slug": slug.current,
2025-09-16T23:45:58.525594Z	    title,
2025-09-16T23:45:58.525718Z	    shortDescription,
2025-09-16T23:45:58.525826Z	    image,
2025-09-16T23:45:58.526203Z	    brand->{
2025-09-16T23:45:58.52633Z	      name,
2025-09-16T23:45:58.52647Z	      "slug": slug.current,
2025-09-16T23:45:58.526597Z	      logo
2025-09-16T23:45:58.526727Z	    },
2025-09-16T23:45:58.526836Z	    category->{
2025-09-16T23:45:58.526942Z	      name,
2025-09-16T23:45:58.527035Z	      "slug": slug.current
2025-09-16T23:45:58.527131Z	    },
2025-09-16T23:45:58.527225Z	    pricing{
2025-09-16T23:45:58.527316Z	      currency,
2025-09-16T23:45:58.527412Z	      tiers[]{
2025-09-16T23:45:58.527527Z	        quantity,
2025-09-16T23:45:58.527634Z	        price,
2025-09-16T23:45:58.527765Z	        unit
2025-09-16T23:45:58.527883Z	      },
2025-09-16T23:45:58.527995Z	      moq,
2025-09-16T23:45:58.528103Z	      leadTime,
2025-09-16T23:45:58.52821Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:58.528398Z	      "price": tiers[0].price,
2025-09-16T23:45:58.528749Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:58.52887Z	    },
2025-09-16T23:45:58.528963Z	    inventory{
2025-09-16T23:45:58.529051Z	      quantity,
2025-09-16T23:45:58.529141Z	      status,
2025-09-16T23:45:58.529228Z	      warehouse,
2025-09-16T23:45:58.529314Z	      lastUpdated,
2025-09-16T23:45:58.529401Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:58.529499Z	      "inStock": status == "in_stock",
2025-09-16T23:45:58.529585Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:58.529867Z	    },
2025-09-16T23:45:58.529985Z	    isActive,
2025-09-16T23:45:58.530085Z	    isFeatured,
2025-09-16T23:45:58.530184Z	    isNew,
2025-09-16T23:45:58.530279Z	    _createdAt,
2025-09-16T23:45:58.530612Z	    _updatedAt
2025-09-16T23:45:58.530743Z	  
2025-09-16T23:45:58.530843Z	      },
2025-09-16T23:45:58.530945Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-16T23:45:58.531051Z	    }
2025-09-16T23:45:58.531135Z	  
2025-09-16T23:45:58.531218Z	Query parameters: {
2025-09-16T23:45:58.531299Z	  limit: 8,
2025-09-16T23:45:58.531541Z	  offset: 0,
2025-09-16T23:45:58.531963Z	  category: undefined,
2025-09-16T23:45:58.532109Z	  brand: 'mediatek',
2025-09-16T23:45:58.532217Z	  featured: undefined
2025-09-16T23:45:58.532315Z	}
2025-09-16T23:45:58.532426Z	Fetching solutions with query: 
2025-09-16T23:45:58.532516Z	    {
2025-09-16T23:45:58.532574Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:58.532642Z	        
2025-09-16T23:45:58.53273Z	    _id,
2025-09-16T23:45:58.53279Z	    title,
2025-09-16T23:45:58.532851Z	    "slug": slug.current,
2025-09-16T23:45:58.532905Z	    summary,
2025-09-16T23:45:58.532959Z	    description,
2025-09-16T23:45:58.533068Z	    coverImage,
2025-09-16T23:45:58.533302Z	    primaryBrand->{
2025-09-16T23:45:58.533612Z	      _id,
2025-09-16T23:45:58.533761Z	      name,
2025-09-16T23:45:58.533977Z	      "slug": slug.current,
2025-09-16T23:45:58.534088Z	      logo
2025-09-16T23:45:58.534214Z	    },
2025-09-16T23:45:58.534384Z	    relatedBrands[]->{
2025-09-16T23:45:58.534521Z	      _id,
2025-09-16T23:45:58.534617Z	      name,
2025-09-16T23:45:58.534727Z	      "slug": slug.current,
2025-09-16T23:45:58.53483Z	      logo
2025-09-16T23:45:58.534922Z	    },
2025-09-16T23:45:58.535012Z	    targetMarket,
2025-09-16T23:45:58.535107Z	    complexity,
2025-09-16T23:45:58.535424Z	    publishedAt,
2025-09-16T23:45:58.535644Z	    isPublished,
2025-09-16T23:45:58.535772Z	    isFeatured,
2025-09-16T23:45:58.535859Z	    viewCount,
2025-09-16T23:45:58.535943Z	    _createdAt,
2025-09-16T23:45:58.536028Z	    _updatedAt
2025-09-16T23:45:58.536107Z	  
2025-09-16T23:45:58.536186Z	      },
2025-09-16T23:45:58.536268Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-16T23:45:58.536371Z	    }
2025-09-16T23:45:58.536475Z	  
2025-09-16T23:45:58.53658Z	Query parameters: {
2025-09-16T23:45:58.536925Z	  limit: 4,
2025-09-16T23:45:58.537058Z	  offset: 0,
2025-09-16T23:45:58.537159Z	  targetMarket: undefined,
2025-09-16T23:45:58.537247Z	  brand: 'mediatek',
2025-09-16T23:45:58.537331Z	  featured: undefined
2025-09-16T23:45:58.537421Z	}
2025-09-16T23:45:58.537665Z	✅ [getBrandData] Found brand: MediaTek
2025-09-16T23:45:58.538318Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:58.538507Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:58.538727Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-16T23:45:58.539025Z	Fetching products with query: 
2025-09-16T23:45:58.539167Z	    {
2025-09-16T23:45:58.540471Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:58.540868Z	        
2025-09-16T23:45:58.541057Z	    _id,
2025-09-16T23:45:58.54119Z	    _type,
2025-09-16T23:45:58.541297Z	    partNumber,
2025-09-16T23:45:58.541449Z	    "slug": slug.current,
2025-09-16T23:45:58.541577Z	    title,
2025-09-16T23:45:58.5418Z	    shortDescription,
2025-09-16T23:45:58.541952Z	    image,
2025-09-16T23:45:58.54207Z	    brand->{
2025-09-16T23:45:58.542182Z	      name,
2025-09-16T23:45:58.542292Z	      "slug": slug.current,
2025-09-16T23:45:58.542416Z	      logo
2025-09-16T23:45:58.542535Z	    },
2025-09-16T23:45:58.542649Z	    category->{
2025-09-16T23:45:58.5428Z	      name,
2025-09-16T23:45:58.542925Z	      "slug": slug.current
2025-09-16T23:45:58.543025Z	    },
2025-09-16T23:45:58.543122Z	    pricing{
2025-09-16T23:45:58.543223Z	      currency,
2025-09-16T23:45:58.543327Z	      tiers[]{
2025-09-16T23:45:58.544161Z	        quantity,
2025-09-16T23:45:58.544384Z	        price,
2025-09-16T23:45:58.544569Z	        unit
2025-09-16T23:45:58.544748Z	      },
2025-09-16T23:45:58.544963Z	      moq,
2025-09-16T23:45:58.545156Z	      leadTime,
2025-09-16T23:45:58.545465Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:58.545795Z	      "price": tiers[0].price,
2025-09-16T23:45:58.546095Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:58.546324Z	    },
2025-09-16T23:45:58.546537Z	    inventory{
2025-09-16T23:45:58.546681Z	      quantity,
2025-09-16T23:45:58.546863Z	      status,
2025-09-16T23:45:58.547119Z	      warehouse,
2025-09-16T23:45:58.547251Z	      lastUpdated,
2025-09-16T23:45:58.547342Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:58.547444Z	      "inStock": status == "in_stock",
2025-09-16T23:45:58.547545Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:58.547659Z	    },
2025-09-16T23:45:58.547801Z	    isActive,
2025-09-16T23:45:58.54791Z	    isFeatured,
2025-09-16T23:45:58.548014Z	    isNew,
2025-09-16T23:45:58.548132Z	    _createdAt,
2025-09-16T23:45:58.548261Z	    _updatedAt
2025-09-16T23:45:58.548415Z	  
2025-09-16T23:45:58.548533Z	      },
2025-09-16T23:45:58.548659Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-16T23:45:58.548819Z	    }
2025-09-16T23:45:58.548948Z	  
2025-09-16T23:45:58.549081Z	Query parameters: {
2025-09-16T23:45:58.549214Z	  limit: 8,
2025-09-16T23:45:58.549319Z	  offset: 0,
2025-09-16T23:45:58.549412Z	  category: undefined,
2025-09-16T23:45:58.54952Z	  brand: 'mediatek',
2025-09-16T23:45:58.549608Z	  featured: undefined
2025-09-16T23:45:58.549731Z	}
2025-09-16T23:45:58.549835Z	Fetching solutions with query: 
2025-09-16T23:45:58.549929Z	    {
2025-09-16T23:45:58.550038Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:58.550128Z	        
2025-09-16T23:45:58.550187Z	    _id,
2025-09-16T23:45:58.550242Z	    title,
2025-09-16T23:45:58.550298Z	    "slug": slug.current,
2025-09-16T23:45:58.550351Z	    summary,
2025-09-16T23:45:58.550429Z	    description,
2025-09-16T23:45:58.550504Z	    coverImage,
2025-09-16T23:45:58.550559Z	    primaryBrand->{
2025-09-16T23:45:58.550613Z	      _id,
2025-09-16T23:45:58.550694Z	      name,
2025-09-16T23:45:58.550761Z	      "slug": slug.current,
2025-09-16T23:45:58.550817Z	      logo
2025-09-16T23:45:58.550872Z	    },
2025-09-16T23:45:58.550926Z	    relatedBrands[]->{
2025-09-16T23:45:58.55098Z	      _id,
2025-09-16T23:45:58.551044Z	      name,
2025-09-16T23:45:58.551101Z	      "slug": slug.current,
2025-09-16T23:45:58.551154Z	      logo
2025-09-16T23:45:58.551208Z	    },
2025-09-16T23:45:58.551262Z	    targetMarket,
2025-09-16T23:45:58.551324Z	    complexity,
2025-09-16T23:45:58.551405Z	    publishedAt,
2025-09-16T23:45:58.551465Z	    isPublished,
2025-09-16T23:45:58.551519Z	    isFeatured,
2025-09-16T23:45:58.551576Z	    viewCount,
2025-09-16T23:45:58.551636Z	    _createdAt,
2025-09-16T23:45:58.551715Z	    _updatedAt
2025-09-16T23:45:58.551778Z	  
2025-09-16T23:45:58.551832Z	      },
2025-09-16T23:45:58.551886Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-16T23:45:58.551944Z	    }
2025-09-16T23:45:58.551999Z	  
2025-09-16T23:45:58.552065Z	Query parameters: {
2025-09-16T23:45:58.552124Z	  limit: 4,
2025-09-16T23:45:58.552178Z	  offset: 0,
2025-09-16T23:45:58.552231Z	  targetMarket: undefined,
2025-09-16T23:45:58.552289Z	  brand: 'mediatek',
2025-09-16T23:45:58.552345Z	  featured: undefined
2025-09-16T23:45:58.552424Z	}
2025-09-16T23:45:58.552518Z	✅ [getBrandData] Found brand: MediaTek
2025-09-16T23:45:58.552616Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:58.552825Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:58.553158Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-16T23:45:58.553268Z	Fetching products with query: 
2025-09-16T23:45:58.553504Z	    {
2025-09-16T23:45:58.553588Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:58.553785Z	        
2025-09-16T23:45:58.553897Z	    _id,
2025-09-16T23:45:58.554196Z	    _type,
2025-09-16T23:45:58.554304Z	    partNumber,
2025-09-16T23:45:58.554438Z	    "slug": slug.current,
2025-09-16T23:45:58.554577Z	    title,
2025-09-16T23:45:58.554717Z	    shortDescription,
2025-09-16T23:45:58.554857Z	    image,
2025-09-16T23:45:58.555056Z	    brand->{
2025-09-16T23:45:58.555167Z	      name,
2025-09-16T23:45:58.555275Z	      "slug": slug.current,
2025-09-16T23:45:58.555423Z	      logo
2025-09-16T23:45:58.555534Z	    },
2025-09-16T23:45:58.55567Z	    category->{
2025-09-16T23:45:58.555795Z	      name,
2025-09-16T23:45:58.555901Z	      "slug": slug.current
2025-09-16T23:45:58.556004Z	    },
2025-09-16T23:45:58.556103Z	    pricing{
2025-09-16T23:45:58.556204Z	      currency,
2025-09-16T23:45:58.556309Z	      tiers[]{
2025-09-16T23:45:58.556429Z	        quantity,
2025-09-16T23:45:58.556608Z	        price,
2025-09-16T23:45:58.558102Z	        unit
2025-09-16T23:45:58.558288Z	      },
2025-09-16T23:45:58.558395Z	      moq,
2025-09-16T23:45:58.558516Z	      leadTime,
2025-09-16T23:45:58.558619Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:58.558742Z	      "price": tiers[0].price,
2025-09-16T23:45:58.558856Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:58.558962Z	    },
2025-09-16T23:45:58.559062Z	    inventory{
2025-09-16T23:45:58.559177Z	      quantity,
2025-09-16T23:45:58.559321Z	      status,
2025-09-16T23:45:58.559461Z	      warehouse,
2025-09-16T23:45:58.55959Z	      lastUpdated,
2025-09-16T23:45:58.559747Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:58.559866Z	      "inStock": status == "in_stock",
2025-09-16T23:45:58.559983Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:58.560083Z	    },
2025-09-16T23:45:58.560201Z	    isActive,
2025-09-16T23:45:58.560311Z	    isFeatured,
2025-09-16T23:45:58.560415Z	    isNew,
2025-09-16T23:45:58.560526Z	    _createdAt,
2025-09-16T23:45:58.560652Z	    _updatedAt
2025-09-16T23:45:58.560778Z	  
2025-09-16T23:45:58.560872Z	      },
2025-09-16T23:45:58.560976Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-16T23:45:58.561081Z	    }
2025-09-16T23:45:58.561179Z	  
2025-09-16T23:45:58.561275Z	Query parameters: {
2025-09-16T23:45:58.561365Z	  limit: 8,
2025-09-16T23:45:58.561468Z	  offset: 0,
2025-09-16T23:45:58.561564Z	  category: undefined,
2025-09-16T23:45:58.561659Z	  brand: 'sanrex',
2025-09-16T23:45:58.561771Z	  featured: undefined
2025-09-16T23:45:58.56187Z	}
2025-09-16T23:45:58.561982Z	Fetching solutions with query: 
2025-09-16T23:45:58.56209Z	    {
2025-09-16T23:45:58.5622Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:58.562325Z	        
2025-09-16T23:45:58.56245Z	    _id,
2025-09-16T23:45:58.562589Z	    title,
2025-09-16T23:45:58.562718Z	    "slug": slug.current,
2025-09-16T23:45:58.562828Z	    summary,
2025-09-16T23:45:58.56294Z	    description,
2025-09-16T23:45:58.563065Z	    coverImage,
2025-09-16T23:45:58.563173Z	    primaryBrand->{
2025-09-16T23:45:58.563284Z	      _id,
2025-09-16T23:45:58.563385Z	      name,
2025-09-16T23:45:58.563494Z	      "slug": slug.current,
2025-09-16T23:45:58.563599Z	      logo
2025-09-16T23:45:58.563736Z	    },
2025-09-16T23:45:58.563843Z	    relatedBrands[]->{
2025-09-16T23:45:58.564034Z	      _id,
2025-09-16T23:45:58.56435Z	      name,
2025-09-16T23:45:58.564707Z	      "slug": slug.current,
2025-09-16T23:45:58.565042Z	      logo
2025-09-16T23:45:58.565135Z	    },
2025-09-16T23:45:58.565414Z	    targetMarket,
2025-09-16T23:45:58.565717Z	    complexity,
2025-09-16T23:45:58.565996Z	    publishedAt,
2025-09-16T23:45:58.566082Z	    isPublished,
2025-09-16T23:45:58.566354Z	    isFeatured,
2025-09-16T23:45:58.566484Z	    viewCount,
2025-09-16T23:45:58.567008Z	    _createdAt,
2025-09-16T23:45:58.567211Z	    _updatedAt
2025-09-16T23:45:58.567308Z	  
2025-09-16T23:45:58.567406Z	      },
2025-09-16T23:45:58.567567Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-16T23:45:58.567742Z	    }
2025-09-16T23:45:58.567851Z	  
2025-09-16T23:45:58.568164Z	Query parameters: {
2025-09-16T23:45:58.568275Z	  limit: 4,
2025-09-16T23:45:58.568745Z	  offset: 0,
2025-09-16T23:45:58.568874Z	  targetMarket: undefined,
2025-09-16T23:45:58.56918Z	  brand: 'sanrex',
2025-09-16T23:45:58.56941Z	  featured: undefined
2025-09-16T23:45:58.5695Z	}
2025-09-16T23:45:58.569604Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-16T23:45:58.569768Z	Fetching products with query: 
2025-09-16T23:45:58.569916Z	    {
2025-09-16T23:45:58.570065Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:58.570204Z	        
2025-09-16T23:45:58.570336Z	    _id,
2025-09-16T23:45:58.570643Z	    _type,
2025-09-16T23:45:58.570771Z	    partNumber,
2025-09-16T23:45:58.570836Z	    "slug": slug.current,
2025-09-16T23:45:58.570965Z	    title,
2025-09-16T23:45:58.571139Z	    shortDescription,
2025-09-16T23:45:58.571261Z	    image,
2025-09-16T23:45:58.571369Z	    brand->{
2025-09-16T23:45:58.5715Z	      name,
2025-09-16T23:45:58.57162Z	      "slug": slug.current,
2025-09-16T23:45:58.571758Z	      logo
2025-09-16T23:45:58.571869Z	    },
2025-09-16T23:45:58.571977Z	    category->{
2025-09-16T23:45:58.572081Z	      name,
2025-09-16T23:45:58.572185Z	      "slug": slug.current
2025-09-16T23:45:58.572291Z	    },
2025-09-16T23:45:58.572435Z	    pricing{
2025-09-16T23:45:58.572552Z	      currency,
2025-09-16T23:45:58.572662Z	      tiers[]{
2025-09-16T23:45:58.572789Z	        quantity,
2025-09-16T23:45:58.572907Z	        price,
2025-09-16T23:45:58.573017Z	        unit
2025-09-16T23:45:58.57312Z	      },
2025-09-16T23:45:58.573585Z	      moq,
2025-09-16T23:45:58.573734Z	      leadTime,
2025-09-16T23:45:58.573885Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:58.574229Z	      "price": tiers[0].price,
2025-09-16T23:45:58.574355Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:58.574836Z	    },
2025-09-16T23:45:58.574963Z	    inventory{
2025-09-16T23:45:58.575073Z	      quantity,
2025-09-16T23:45:58.575182Z	      status,
2025-09-16T23:45:58.575295Z	      warehouse,
2025-09-16T23:45:58.575414Z	      lastUpdated,
2025-09-16T23:45:58.57553Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:58.575644Z	      "inStock": status == "in_stock",
2025-09-16T23:45:58.575784Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:58.575894Z	    },
2025-09-16T23:45:58.576005Z	    isActive,
2025-09-16T23:45:58.576119Z	    isFeatured,
2025-09-16T23:45:58.576233Z	    isNew,
2025-09-16T23:45:58.576524Z	    _createdAt,
2025-09-16T23:45:58.577032Z	    _updatedAt
2025-09-16T23:45:58.577567Z	  
2025-09-16T23:45:58.578107Z	      },
2025-09-16T23:45:58.578324Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-16T23:45:58.57857Z	    }
2025-09-16T23:45:58.578995Z	  
2025-09-16T23:45:58.57927Z	Query parameters: {
2025-09-16T23:45:58.579501Z	  limit: 8,
2025-09-16T23:45:58.5801Z	  offset: 0,
2025-09-16T23:45:58.580295Z	  category: undefined,
2025-09-16T23:45:58.580615Z	  brand: 'pi',
2025-09-16T23:45:58.580807Z	  featured: undefined
2025-09-16T23:45:58.581005Z	}
2025-09-16T23:45:58.581169Z	Fetching solutions with query: 
2025-09-16T23:45:58.581308Z	    {
2025-09-16T23:45:58.581476Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:58.581666Z	        
2025-09-16T23:45:58.58185Z	    _id,
2025-09-16T23:45:58.581993Z	    title,
2025-09-16T23:45:58.582148Z	    "slug": slug.current,
2025-09-16T23:45:58.582296Z	    summary,
2025-09-16T23:45:58.58246Z	    description,
2025-09-16T23:45:58.582628Z	    coverImage,
2025-09-16T23:45:58.582828Z	    primaryBrand->{
2025-09-16T23:45:58.582985Z	      _id,
2025-09-16T23:45:58.583148Z	      name,
2025-09-16T23:45:58.583307Z	      "slug": slug.current,
2025-09-16T23:45:58.583461Z	      logo
2025-09-16T23:45:58.58366Z	    },
2025-09-16T23:45:58.583874Z	    relatedBrands[]->{
2025-09-16T23:45:58.584034Z	      _id,
2025-09-16T23:45:58.584198Z	      name,
2025-09-16T23:45:58.584357Z	      "slug": slug.current,
2025-09-16T23:45:58.58451Z	      logo
2025-09-16T23:45:58.584662Z	    },
2025-09-16T23:45:58.584846Z	    targetMarket,
2025-09-16T23:45:58.585006Z	    complexity,
2025-09-16T23:45:58.585134Z	    publishedAt,
2025-09-16T23:45:58.585283Z	    isPublished,
2025-09-16T23:45:58.585439Z	    isFeatured,
2025-09-16T23:45:58.585578Z	    viewCount,
2025-09-16T23:45:58.585733Z	    _createdAt,
2025-09-16T23:45:58.585875Z	    _updatedAt
2025-09-16T23:45:58.586022Z	  
2025-09-16T23:45:58.586178Z	      },
2025-09-16T23:45:58.586377Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-16T23:45:58.586562Z	    }
2025-09-16T23:45:58.586766Z	  
2025-09-16T23:45:58.586923Z	Query parameters: {
2025-09-16T23:45:58.58708Z	  limit: 4,
2025-09-16T23:45:58.587275Z	  offset: 0,
2025-09-16T23:45:58.587438Z	  targetMarket: undefined,
2025-09-16T23:45:58.587591Z	  brand: 'pi',
2025-09-16T23:45:58.58776Z	  featured: undefined
2025-09-16T23:45:58.587923Z	}
2025-09-16T23:45:58.58804Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:58.5882Z	Fetching products with query: 
2025-09-16T23:45:58.588312Z	    {
2025-09-16T23:45:58.588434Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:58.588581Z	        
2025-09-16T23:45:58.588732Z	    _id,
2025-09-16T23:45:58.588848Z	    _type,
2025-09-16T23:45:58.588956Z	    partNumber,
2025-09-16T23:45:58.589058Z	    "slug": slug.current,
2025-09-16T23:45:58.58922Z	    title,
2025-09-16T23:45:58.589335Z	    shortDescription,
2025-09-16T23:45:58.589434Z	    image,
2025-09-16T23:45:58.589536Z	    brand->{
2025-09-16T23:45:58.589654Z	      name,
2025-09-16T23:45:58.589786Z	      "slug": slug.current,
2025-09-16T23:45:58.589923Z	      logo
2025-09-16T23:45:58.590029Z	    },
2025-09-16T23:45:58.590128Z	    category->{
2025-09-16T23:45:58.590231Z	      name,
2025-09-16T23:45:58.590334Z	      "slug": slug.current
2025-09-16T23:45:58.590435Z	    },
2025-09-16T23:45:58.590576Z	    pricing{
2025-09-16T23:45:58.590713Z	      currency,
2025-09-16T23:45:58.590819Z	      tiers[]{
2025-09-16T23:45:58.590923Z	        quantity,
2025-09-16T23:45:58.591032Z	        price,
2025-09-16T23:45:58.591152Z	        unit
2025-09-16T23:45:58.591253Z	      },
2025-09-16T23:45:58.591409Z	      moq,
2025-09-16T23:45:58.591519Z	      leadTime,
2025-09-16T23:45:58.591623Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:58.591797Z	      "price": tiers[0].price,
2025-09-16T23:45:58.591899Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:58.591999Z	    },
2025-09-16T23:45:58.592094Z	    inventory{
2025-09-16T23:45:58.592199Z	      quantity,
2025-09-16T23:45:58.592296Z	      status,
2025-09-16T23:45:58.592397Z	      warehouse,
2025-09-16T23:45:58.592495Z	      lastUpdated,
2025-09-16T23:45:58.592589Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:58.592718Z	      "inStock": status == "in_stock",
2025-09-16T23:45:58.592869Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:58.593035Z	    },
2025-09-16T23:45:58.623898Z	    isActive,
2025-09-16T23:45:58.624371Z	    isFeatured,
2025-09-16T23:45:58.624668Z	    isNew,
2025-09-16T23:45:58.625614Z	    _createdAt,
2025-09-16T23:45:58.6258Z	    _updatedAt
2025-09-16T23:45:58.625923Z	  
2025-09-16T23:45:58.626106Z	      },
2025-09-16T23:45:58.626216Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-16T23:45:58.626338Z	    }
2025-09-16T23:45:58.626445Z	  
2025-09-16T23:45:58.626551Z	Query parameters: {
2025-09-16T23:45:58.626655Z	  limit: 8,
2025-09-16T23:45:58.626786Z	  offset: 0,
2025-09-16T23:45:58.626894Z	  category: undefined,
2025-09-16T23:45:58.627Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:45:58.627114Z	  featured: undefined
2025-09-16T23:45:58.62722Z	}
2025-09-16T23:45:58.627322Z	Fetching solutions with query: 
2025-09-16T23:45:58.627429Z	    {
2025-09-16T23:45:58.627543Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:58.627662Z	        
2025-09-16T23:45:58.627796Z	    _id,
2025-09-16T23:45:58.627899Z	    title,
2025-09-16T23:45:58.628002Z	    "slug": slug.current,
2025-09-16T23:45:58.628097Z	    summary,
2025-09-16T23:45:58.628176Z	    description,
2025-09-16T23:45:58.628257Z	    coverImage,
2025-09-16T23:45:58.628338Z	    primaryBrand->{
2025-09-16T23:45:58.628454Z	      _id,
2025-09-16T23:45:58.628556Z	      name,
2025-09-16T23:45:58.628684Z	      "slug": slug.current,
2025-09-16T23:45:58.628807Z	      logo
2025-09-16T23:45:58.628906Z	    },
2025-09-16T23:45:58.629101Z	    relatedBrands[]->{
2025-09-16T23:45:58.629299Z	      _id,
2025-09-16T23:45:58.629555Z	      name,
2025-09-16T23:45:58.629753Z	      "slug": slug.current,
2025-09-16T23:45:58.629924Z	      logo
2025-09-16T23:45:58.630104Z	    },
2025-09-16T23:45:58.630228Z	    targetMarket,
2025-09-16T23:45:58.630339Z	    complexity,
2025-09-16T23:45:58.63046Z	    publishedAt,
2025-09-16T23:45:58.630597Z	    isPublished,
2025-09-16T23:45:58.630844Z	    isFeatured,
2025-09-16T23:45:58.630967Z	    viewCount,
2025-09-16T23:45:58.631122Z	    _createdAt,
2025-09-16T23:45:58.631242Z	    _updatedAt
2025-09-16T23:45:58.631338Z	  
2025-09-16T23:45:58.631452Z	      },
2025-09-16T23:45:58.631578Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-16T23:45:58.631705Z	    }
2025-09-16T23:45:58.631824Z	  
2025-09-16T23:45:58.631942Z	Query parameters: {
2025-09-16T23:45:58.632037Z	  limit: 4,
2025-09-16T23:45:58.632132Z	  offset: 0,
2025-09-16T23:45:58.632218Z	  targetMarket: undefined,
2025-09-16T23:45:58.632318Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:45:58.632432Z	  featured: undefined
2025-09-16T23:45:58.632551Z	}
2025-09-16T23:45:58.632666Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:58.632809Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:58.63294Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:58.633049Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:58.633162Z	Fetching products with query: 
2025-09-16T23:45:58.633295Z	    {
2025-09-16T23:45:58.633408Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:58.633539Z	        
2025-09-16T23:45:58.633647Z	    _id,
2025-09-16T23:45:58.633775Z	    _type,
2025-09-16T23:45:58.634119Z	    partNumber,
2025-09-16T23:45:58.634521Z	    "slug": slug.current,
2025-09-16T23:45:58.634932Z	    title,
2025-09-16T23:45:58.635312Z	    shortDescription,
2025-09-16T23:45:58.635845Z	    image,
2025-09-16T23:45:58.636243Z	    brand->{
2025-09-16T23:45:58.636752Z	      name,
2025-09-16T23:45:58.637088Z	      "slug": slug.current,
2025-09-16T23:45:58.637516Z	      logo
2025-09-16T23:45:58.637955Z	    },
2025-09-16T23:45:58.63829Z	    category->{
2025-09-16T23:45:58.638721Z	      name,
2025-09-16T23:45:58.639104Z	      "slug": slug.current
2025-09-16T23:45:58.639686Z	    },
2025-09-16T23:45:58.640055Z	    pricing{
2025-09-16T23:45:58.640205Z	      currency,
2025-09-16T23:45:58.640313Z	      tiers[]{
2025-09-16T23:45:58.640783Z	        quantity,
2025-09-16T23:45:58.64094Z	        price,
2025-09-16T23:45:58.641056Z	        unit
2025-09-16T23:45:58.64116Z	      },
2025-09-16T23:45:58.641257Z	      moq,
2025-09-16T23:45:58.641357Z	      leadTime,
2025-09-16T23:45:58.641457Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:58.641569Z	      "price": tiers[0].price,
2025-09-16T23:45:58.641716Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:58.641831Z	    },
2025-09-16T23:45:58.641933Z	    inventory{
2025-09-16T23:45:58.64203Z	      quantity,
2025-09-16T23:45:58.642133Z	      status,
2025-09-16T23:45:58.642239Z	      warehouse,
2025-09-16T23:45:58.642348Z	      lastUpdated,
2025-09-16T23:45:58.642711Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:58.642879Z	      "inStock": status == "in_stock",
2025-09-16T23:45:58.642996Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:58.643119Z	    },
2025-09-16T23:45:58.643234Z	    isActive,
2025-09-16T23:45:58.643332Z	    isFeatured,
2025-09-16T23:45:58.643427Z	    isNew,
2025-09-16T23:45:58.643534Z	    _createdAt,
2025-09-16T23:45:58.643631Z	    _updatedAt
2025-09-16T23:45:58.64376Z	  
2025-09-16T23:45:58.643877Z	      },
2025-09-16T23:45:58.643968Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-16T23:45:58.644066Z	    }
2025-09-16T23:45:58.64416Z	  
2025-09-16T23:45:58.644246Z	Query parameters: {
2025-09-16T23:45:58.644346Z	  limit: 8,
2025-09-16T23:45:58.644457Z	  offset: 0,
2025-09-16T23:45:58.644567Z	  category: undefined,
2025-09-16T23:45:58.644666Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:45:58.644798Z	  featured: undefined
2025-09-16T23:45:58.644918Z	}
2025-09-16T23:45:58.645018Z	Fetching solutions with query: 
2025-09-16T23:45:58.64512Z	    {
2025-09-16T23:45:58.645221Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:58.645326Z	        
2025-09-16T23:45:58.645446Z	    _id,
2025-09-16T23:45:58.645547Z	    title,
2025-09-16T23:45:58.645648Z	    "slug": slug.current,
2025-09-16T23:45:58.645778Z	    summary,
2025-09-16T23:45:58.645892Z	    description,
2025-09-16T23:45:58.646057Z	    coverImage,
2025-09-16T23:45:58.646312Z	    primaryBrand->{
2025-09-16T23:45:58.646489Z	      _id,
2025-09-16T23:45:58.646645Z	      name,
2025-09-16T23:45:58.646883Z	      "slug": slug.current,
2025-09-16T23:45:58.647058Z	      logo
2025-09-16T23:45:58.647206Z	    },
2025-09-16T23:45:58.647373Z	    relatedBrands[]->{
2025-09-16T23:45:58.647554Z	      _id,
2025-09-16T23:45:58.647751Z	      name,
2025-09-16T23:45:58.647879Z	      "slug": slug.current,
2025-09-16T23:45:58.648039Z	      logo
2025-09-16T23:45:58.648157Z	    },
2025-09-16T23:45:58.648312Z	    targetMarket,
2025-09-16T23:45:58.648443Z	    complexity,
2025-09-16T23:45:58.648603Z	    publishedAt,
2025-09-16T23:45:58.648746Z	    isPublished,
2025-09-16T23:45:58.648861Z	    isFeatured,
2025-09-16T23:45:58.649052Z	    viewCount,
2025-09-16T23:45:58.649175Z	    _createdAt,
2025-09-16T23:45:58.649282Z	    _updatedAt
2025-09-16T23:45:58.649413Z	  
2025-09-16T23:45:58.649711Z	      },
2025-09-16T23:45:58.649852Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-16T23:45:58.649941Z	    }
2025-09-16T23:45:58.650018Z	  
2025-09-16T23:45:58.650225Z	Query parameters: {
2025-09-16T23:45:58.650364Z	  limit: 4,
2025-09-16T23:45:58.650495Z	  offset: 0,
2025-09-16T23:45:58.65059Z	  targetMarket: undefined,
2025-09-16T23:45:58.650664Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:45:58.650765Z	  featured: undefined
2025-09-16T23:45:58.650854Z	}
2025-09-16T23:45:58.651022Z	✅ [getBrandData] Found brand: Sanrex
2025-09-16T23:45:58.651154Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:58.651369Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:58.651703Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-16T23:45:58.6519Z	Fetching products with query: 
2025-09-16T23:45:58.652065Z	    {
2025-09-16T23:45:58.652272Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:58.652459Z	        
2025-09-16T23:45:58.652616Z	    _id,
2025-09-16T23:45:58.652851Z	    _type,
2025-09-16T23:45:58.653132Z	    partNumber,
2025-09-16T23:45:58.653333Z	    "slug": slug.current,
2025-09-16T23:45:58.653598Z	    title,
2025-09-16T23:45:58.653768Z	    shortDescription,
2025-09-16T23:45:58.653895Z	    image,
2025-09-16T23:45:58.654008Z	    brand->{
2025-09-16T23:45:58.654117Z	      name,
2025-09-16T23:45:58.654226Z	      "slug": slug.current,
2025-09-16T23:45:58.654333Z	      logo
2025-09-16T23:45:58.654428Z	    },
2025-09-16T23:45:58.65453Z	    category->{
2025-09-16T23:45:58.654636Z	      name,
2025-09-16T23:45:58.654778Z	      "slug": slug.current
2025-09-16T23:45:58.654895Z	    },
2025-09-16T23:45:58.65501Z	    pricing{
2025-09-16T23:45:58.655116Z	      currency,
2025-09-16T23:45:58.655236Z	      tiers[]{
2025-09-16T23:45:58.655343Z	        quantity,
2025-09-16T23:45:58.655476Z	        price,
2025-09-16T23:45:58.655657Z	        unit
2025-09-16T23:45:58.655763Z	      },
2025-09-16T23:45:58.655828Z	      moq,
2025-09-16T23:45:58.655885Z	      leadTime,
2025-09-16T23:45:58.655945Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:58.656003Z	      "price": tiers[0].price,
2025-09-16T23:45:58.656058Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:58.656112Z	    },
2025-09-16T23:45:58.656165Z	    inventory{
2025-09-16T23:45:58.656233Z	      quantity,
2025-09-16T23:45:58.656294Z	      status,
2025-09-16T23:45:58.65635Z	      warehouse,
2025-09-16T23:45:58.656412Z	      lastUpdated,
2025-09-16T23:45:58.656467Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:58.656524Z	      "inStock": status == "in_stock",
2025-09-16T23:45:58.656577Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:58.656635Z	    },
2025-09-16T23:45:58.656704Z	    isActive,
2025-09-16T23:45:58.656763Z	    isFeatured,
2025-09-16T23:45:58.656819Z	    isNew,
2025-09-16T23:45:58.657058Z	    _createdAt,
2025-09-16T23:45:58.657178Z	    _updatedAt
2025-09-16T23:45:58.657334Z	  
2025-09-16T23:45:58.657577Z	      },
2025-09-16T23:45:58.65781Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-16T23:45:58.657977Z	    }
2025-09-16T23:45:58.658142Z	  
2025-09-16T23:45:58.658309Z	Query parameters: {
2025-09-16T23:45:58.658658Z	  limit: 8,
2025-09-16T23:45:58.658788Z	  offset: 0,
2025-09-16T23:45:58.658854Z	  category: undefined,
2025-09-16T23:45:58.658909Z	  brand: 'sanrex',
2025-09-16T23:45:58.658963Z	  featured: undefined
2025-09-16T23:45:58.659792Z	}
2025-09-16T23:45:58.659912Z	Fetching solutions with query: 
2025-09-16T23:45:58.660185Z	    {
2025-09-16T23:45:58.660265Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:58.660335Z	        
2025-09-16T23:45:58.660506Z	    _id,
2025-09-16T23:45:58.660645Z	    title,
2025-09-16T23:45:58.660823Z	    "slug": slug.current,
2025-09-16T23:45:58.660988Z	    summary,
2025-09-16T23:45:58.661152Z	    description,
2025-09-16T23:45:58.661311Z	    coverImage,
2025-09-16T23:45:58.662037Z	    primaryBrand->{
2025-09-16T23:45:58.662212Z	      _id,
2025-09-16T23:45:58.662491Z	      name,
2025-09-16T23:45:58.662697Z	      "slug": slug.current,
2025-09-16T23:45:58.662847Z	      logo
2025-09-16T23:45:58.662951Z	    },
2025-09-16T23:45:58.663053Z	    relatedBrands[]->{
2025-09-16T23:45:58.663148Z	      _id,
2025-09-16T23:45:58.663247Z	      name,
2025-09-16T23:45:58.663338Z	      "slug": slug.current,
2025-09-16T23:45:58.663445Z	      logo
2025-09-16T23:45:58.664358Z	    },
2025-09-16T23:45:58.665017Z	    targetMarket,
2025-09-16T23:45:58.665124Z	    complexity,
2025-09-16T23:45:58.665185Z	    publishedAt,
2025-09-16T23:45:58.665428Z	    isPublished,
2025-09-16T23:45:58.665575Z	    isFeatured,
2025-09-16T23:45:58.665717Z	    viewCount,
2025-09-16T23:45:58.665838Z	    _createdAt,
2025-09-16T23:45:58.665943Z	    _updatedAt
2025-09-16T23:45:58.666309Z	  
2025-09-16T23:45:58.666449Z	      },
2025-09-16T23:45:58.666593Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-16T23:45:58.666923Z	    }
2025-09-16T23:45:58.667085Z	  
2025-09-16T23:45:58.667201Z	Query parameters: {
2025-09-16T23:45:58.667431Z	  limit: 4,
2025-09-16T23:45:58.667581Z	  offset: 0,
2025-09-16T23:45:58.66773Z	  targetMarket: undefined,
2025-09-16T23:45:58.667864Z	  brand: 'sanrex',
2025-09-16T23:45:58.667983Z	  featured: undefined
2025-09-16T23:45:58.668088Z	}
2025-09-16T23:45:58.66821Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-16T23:45:58.668315Z	Fetching products with query: 
2025-09-16T23:45:58.668431Z	    {
2025-09-16T23:45:58.668543Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:58.66865Z	        
2025-09-16T23:45:58.668777Z	    _id,
2025-09-16T23:45:58.668895Z	    _type,
2025-09-16T23:45:58.66901Z	    partNumber,
2025-09-16T23:45:58.669124Z	    "slug": slug.current,
2025-09-16T23:45:58.669227Z	    title,
2025-09-16T23:45:58.669322Z	    shortDescription,
2025-09-16T23:45:58.669438Z	    image,
2025-09-16T23:45:58.669547Z	    brand->{
2025-09-16T23:45:58.669657Z	      name,
2025-09-16T23:45:58.66978Z	      "slug": slug.current,
2025-09-16T23:45:58.669874Z	      logo
2025-09-16T23:45:58.669973Z	    },
2025-09-16T23:45:58.67009Z	    category->{
2025-09-16T23:45:58.670208Z	      name,
2025-09-16T23:45:58.670318Z	      "slug": slug.current
2025-09-16T23:45:58.670432Z	    },
2025-09-16T23:45:58.67054Z	    pricing{
2025-09-16T23:45:58.670659Z	      currency,
2025-09-16T23:45:58.670798Z	      tiers[]{
2025-09-16T23:45:58.670919Z	        quantity,
2025-09-16T23:45:58.671112Z	        price,
2025-09-16T23:45:58.671231Z	        unit
2025-09-16T23:45:58.671355Z	      },
2025-09-16T23:45:58.671468Z	      moq,
2025-09-16T23:45:58.671571Z	      leadTime,
2025-09-16T23:45:58.671702Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:58.671844Z	      "price": tiers[0].price,
2025-09-16T23:45:58.671958Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:58.672076Z	    },
2025-09-16T23:45:58.672187Z	    inventory{
2025-09-16T23:45:58.672307Z	      quantity,
2025-09-16T23:45:58.672473Z	      status,
2025-09-16T23:45:58.672604Z	      warehouse,
2025-09-16T23:45:58.672739Z	      lastUpdated,
2025-09-16T23:45:58.672856Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:58.672984Z	      "inStock": status == "in_stock",
2025-09-16T23:45:58.673112Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:58.673234Z	    },
2025-09-16T23:45:58.673686Z	    isActive,
2025-09-16T23:45:58.673823Z	    isFeatured,
2025-09-16T23:45:58.673891Z	    isNew,
2025-09-16T23:45:58.673978Z	    _createdAt,
2025-09-16T23:45:58.674073Z	    _updatedAt
2025-09-16T23:45:58.674175Z	  
2025-09-16T23:45:58.674283Z	      },
2025-09-16T23:45:58.674387Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-16T23:45:58.674468Z	    }
2025-09-16T23:45:58.674524Z	  
2025-09-16T23:45:58.674578Z	Query parameters: {
2025-09-16T23:45:58.674633Z	  limit: 8,
2025-09-16T23:45:58.674735Z	  offset: 0,
2025-09-16T23:45:58.674821Z	  category: undefined,
2025-09-16T23:45:58.674893Z	  brand: 'ncc',
2025-09-16T23:45:58.674988Z	  featured: undefined
2025-09-16T23:45:58.675089Z	}
2025-09-16T23:45:58.675195Z	Fetching solutions with query: 
2025-09-16T23:45:58.675302Z	    {
2025-09-16T23:45:58.675418Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:58.675533Z	        
2025-09-16T23:45:58.67564Z	    _id,
2025-09-16T23:45:58.675777Z	    title,
2025-09-16T23:45:58.675887Z	    "slug": slug.current,
2025-09-16T23:45:58.676Z	    summary,
2025-09-16T23:45:58.676102Z	    description,
2025-09-16T23:45:58.6762Z	    coverImage,
2025-09-16T23:45:58.676311Z	    primaryBrand->{
2025-09-16T23:45:58.676506Z	      _id,
2025-09-16T23:45:58.676618Z	      name,
2025-09-16T23:45:58.676777Z	      "slug": slug.current,
2025-09-16T23:45:58.676907Z	      logo
2025-09-16T23:45:58.677023Z	    },
2025-09-16T23:45:58.67714Z	    relatedBrands[]->{
2025-09-16T23:45:58.677254Z	      _id,
2025-09-16T23:45:58.677366Z	      name,
2025-09-16T23:45:58.677491Z	      "slug": slug.current,
2025-09-16T23:45:58.677602Z	      logo
2025-09-16T23:45:58.677751Z	    },
2025-09-16T23:45:58.67799Z	    targetMarket,
2025-09-16T23:45:58.678085Z	    complexity,
2025-09-16T23:45:58.678152Z	    publishedAt,
2025-09-16T23:45:58.678211Z	    isPublished,
2025-09-16T23:45:58.678308Z	    isFeatured,
2025-09-16T23:45:58.678435Z	    viewCount,
2025-09-16T23:45:58.678575Z	    _createdAt,
2025-09-16T23:45:58.678759Z	    _updatedAt
2025-09-16T23:45:58.678912Z	  
2025-09-16T23:45:58.679065Z	      },
2025-09-16T23:45:58.679316Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-16T23:45:58.679449Z	    }
2025-09-16T23:45:58.679583Z	  
2025-09-16T23:45:58.679736Z	Query parameters: {
2025-09-16T23:45:58.679872Z	  limit: 4,
2025-09-16T23:45:58.68001Z	  offset: 0,
2025-09-16T23:45:58.680152Z	  targetMarket: undefined,
2025-09-16T23:45:58.680289Z	  brand: 'ncc',
2025-09-16T23:45:58.68043Z	  featured: undefined
2025-09-16T23:45:58.680848Z	}
2025-09-16T23:45:58.680984Z	✅ [getBrandData] Found brand: ncc
2025-09-16T23:45:58.681142Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:58.681295Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:58.681494Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-16T23:45:58.681632Z	Fetching products with query: 
2025-09-16T23:45:58.681797Z	    {
2025-09-16T23:45:58.681913Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:58.682021Z	        
2025-09-16T23:45:58.682136Z	    _id,
2025-09-16T23:45:58.682224Z	    _type,
2025-09-16T23:45:58.682322Z	    partNumber,
2025-09-16T23:45:58.682443Z	    "slug": slug.current,
2025-09-16T23:45:58.682551Z	    title,
2025-09-16T23:45:58.682656Z	    shortDescription,
2025-09-16T23:45:58.683014Z	    image,
2025-09-16T23:45:58.683227Z	    brand->{
2025-09-16T23:45:58.683389Z	      name,
2025-09-16T23:45:58.683547Z	      "slug": slug.current,
2025-09-16T23:45:58.683658Z	      logo
2025-09-16T23:45:58.683793Z	    },
2025-09-16T23:45:58.683907Z	    category->{
2025-09-16T23:45:58.684167Z	      name,
2025-09-16T23:45:58.684379Z	      "slug": slug.current
2025-09-16T23:45:58.684515Z	    },
2025-09-16T23:45:58.684622Z	    pricing{
2025-09-16T23:45:58.684752Z	      currency,
2025-09-16T23:45:58.684866Z	      tiers[]{
2025-09-16T23:45:58.684972Z	        quantity,
2025-09-16T23:45:58.685081Z	        price,
2025-09-16T23:45:58.685186Z	        unit
2025-09-16T23:45:58.685292Z	      },
2025-09-16T23:45:58.685391Z	      moq,
2025-09-16T23:45:58.685497Z	      leadTime,
2025-09-16T23:45:58.685596Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:58.685716Z	      "price": tiers[0].price,
2025-09-16T23:45:58.685836Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:58.685943Z	    },
2025-09-16T23:45:58.68604Z	    inventory{
2025-09-16T23:45:58.686133Z	      quantity,
2025-09-16T23:45:58.686236Z	      status,
2025-09-16T23:45:58.686334Z	      warehouse,
2025-09-16T23:45:58.686434Z	      lastUpdated,
2025-09-16T23:45:58.686543Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:58.686796Z	      "inStock": status == "in_stock",
2025-09-16T23:45:58.686926Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:58.687024Z	    },
2025-09-16T23:45:58.687166Z	    isActive,
2025-09-16T23:45:58.687283Z	    isFeatured,
2025-09-16T23:45:58.687443Z	    isNew,
2025-09-16T23:45:58.687568Z	    _createdAt,
2025-09-16T23:45:58.687779Z	    _updatedAt
2025-09-16T23:45:58.687908Z	  
2025-09-16T23:45:58.68808Z	      },
2025-09-16T23:45:58.688148Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-16T23:45:58.688307Z	    }
2025-09-16T23:45:58.688443Z	  
2025-09-16T23:45:58.688555Z	Query parameters: {
2025-09-16T23:45:58.68865Z	  limit: 8,
2025-09-16T23:45:58.688767Z	  offset: 0,
2025-09-16T23:45:58.688872Z	  category: undefined,
2025-09-16T23:45:58.688977Z	  brand: 'ncc',
2025-09-16T23:45:58.689074Z	  featured: undefined
2025-09-16T23:45:58.689168Z	}
2025-09-16T23:45:58.689254Z	Fetching solutions with query: 
2025-09-16T23:45:58.689339Z	    {
2025-09-16T23:45:58.68944Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:58.689525Z	        
2025-09-16T23:45:58.689615Z	    _id,
2025-09-16T23:45:58.689723Z	    title,
2025-09-16T23:45:58.689817Z	    "slug": slug.current,
2025-09-16T23:45:58.689914Z	    summary,
2025-09-16T23:45:58.690004Z	    description,
2025-09-16T23:45:58.69009Z	    coverImage,
2025-09-16T23:45:58.690176Z	    primaryBrand->{
2025-09-16T23:45:58.690264Z	      _id,
2025-09-16T23:45:58.690373Z	      name,
2025-09-16T23:45:58.690494Z	      "slug": slug.current,
2025-09-16T23:45:58.690599Z	      logo
2025-09-16T23:45:58.690725Z	    },
2025-09-16T23:45:58.690827Z	    relatedBrands[]->{
2025-09-16T23:45:58.690926Z	      _id,
2025-09-16T23:45:58.691019Z	      name,
2025-09-16T23:45:58.691114Z	      "slug": slug.current,
2025-09-16T23:45:58.69121Z	      logo
2025-09-16T23:45:58.691302Z	    },
2025-09-16T23:45:58.691406Z	    targetMarket,
2025-09-16T23:45:58.6915Z	    complexity,
2025-09-16T23:45:58.691601Z	    publishedAt,
2025-09-16T23:45:58.692207Z	    isPublished,
2025-09-16T23:45:58.692396Z	    isFeatured,
2025-09-16T23:45:58.692529Z	    viewCount,
2025-09-16T23:45:58.692651Z	    _createdAt,
2025-09-16T23:45:58.692778Z	    _updatedAt
2025-09-16T23:45:58.692909Z	  
2025-09-16T23:45:58.693025Z	      },
2025-09-16T23:45:58.693131Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-16T23:45:58.693246Z	    }
2025-09-16T23:45:58.693367Z	  
2025-09-16T23:45:58.693545Z	Query parameters: {
2025-09-16T23:45:58.693747Z	  limit: 4,
2025-09-16T23:45:58.693853Z	  offset: 0,
2025-09-16T23:45:58.693956Z	  targetMarket: undefined,
2025-09-16T23:45:58.694058Z	  brand: 'ncc',
2025-09-16T23:45:58.694658Z	  featured: undefined
2025-09-16T23:45:58.694828Z	}
2025-09-16T23:45:58.695047Z	✅ [getBrandData] Found brand: ncc
2025-09-16T23:45:58.695164Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:58.69534Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:58.703039Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:45:58.703197Z	Fetching products with query: 
2025-09-16T23:45:58.703299Z	    {
2025-09-16T23:45:58.703406Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:58.703518Z	        
2025-09-16T23:45:58.703623Z	    _id,
2025-09-16T23:45:58.724078Z	    _type,
2025-09-16T23:45:58.724344Z	    partNumber,
2025-09-16T23:45:58.724589Z	    "slug": slug.current,
2025-09-16T23:45:58.724784Z	    title,
2025-09-16T23:45:58.725105Z	    shortDescription,
2025-09-16T23:45:58.725625Z	    image,
2025-09-16T23:45:58.725907Z	    brand->{
2025-09-16T23:45:58.72639Z	      name,
2025-09-16T23:45:58.726942Z	      "slug": slug.current,
2025-09-16T23:45:58.727073Z	      logo
2025-09-16T23:45:58.727181Z	    },
2025-09-16T23:45:58.727277Z	    category->{
2025-09-16T23:45:58.727378Z	      name,
2025-09-16T23:45:58.727491Z	      "slug": slug.current
2025-09-16T23:45:58.727586Z	    },
2025-09-16T23:45:58.7277Z	    pricing{
2025-09-16T23:45:58.727816Z	      currency,
2025-09-16T23:45:58.727922Z	      tiers[]{
2025-09-16T23:45:58.728032Z	        quantity,
2025-09-16T23:45:58.72815Z	        price,
2025-09-16T23:45:58.728253Z	        unit
2025-09-16T23:45:58.72835Z	      },
2025-09-16T23:45:58.728453Z	      moq,
2025-09-16T23:45:58.728551Z	      leadTime,
2025-09-16T23:45:58.728662Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:58.728813Z	      "price": tiers[0].price,
2025-09-16T23:45:58.728926Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:58.729034Z	    },
2025-09-16T23:45:58.729142Z	    inventory{
2025-09-16T23:45:58.729252Z	      quantity,
2025-09-16T23:45:58.729374Z	      status,
2025-09-16T23:45:58.7295Z	      warehouse,
2025-09-16T23:45:58.729604Z	      lastUpdated,
2025-09-16T23:45:58.729736Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:58.729869Z	      "inStock": status == "in_stock",
2025-09-16T23:45:58.729989Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:58.730105Z	    },
2025-09-16T23:45:58.730225Z	    isActive,
2025-09-16T23:45:58.73034Z	    isFeatured,
2025-09-16T23:45:58.730463Z	    isNew,
2025-09-16T23:45:58.730567Z	    _createdAt,
2025-09-16T23:45:58.730669Z	    _updatedAt
2025-09-16T23:45:58.730817Z	  
2025-09-16T23:45:58.731652Z	      },
2025-09-16T23:45:58.732106Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:45:58.732286Z	    }
2025-09-16T23:45:58.732424Z	  
2025-09-16T23:45:58.73255Z	Query parameters: {
2025-09-16T23:45:58.732661Z	  limit: 8,
2025-09-16T23:45:58.732865Z	  offset: 0,
2025-09-16T23:45:58.732985Z	  category: undefined,
2025-09-16T23:45:58.733097Z	  brand: 'cree',
2025-09-16T23:45:58.7332Z	  featured: undefined
2025-09-16T23:45:58.733342Z	}
2025-09-16T23:45:58.733528Z	Fetching solutions with query: 
2025-09-16T23:45:58.733654Z	    {
2025-09-16T23:45:58.73379Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:58.733925Z	        
2025-09-16T23:45:58.734037Z	    _id,
2025-09-16T23:45:58.734141Z	    title,
2025-09-16T23:45:58.734247Z	    "slug": slug.current,
2025-09-16T23:45:58.734368Z	    summary,
2025-09-16T23:45:58.734477Z	    description,
2025-09-16T23:45:58.7347Z	    coverImage,
2025-09-16T23:45:58.735083Z	    primaryBrand->{
2025-09-16T23:45:58.735229Z	      _id,
2025-09-16T23:45:58.735337Z	      name,
2025-09-16T23:45:58.735475Z	      "slug": slug.current,
2025-09-16T23:45:58.735579Z	      logo
2025-09-16T23:45:58.735689Z	    },
2025-09-16T23:45:58.735804Z	    relatedBrands[]->{
2025-09-16T23:45:58.735905Z	      _id,
2025-09-16T23:45:58.736005Z	      name,
2025-09-16T23:45:58.7361Z	      "slug": slug.current,
2025-09-16T23:45:58.736281Z	      logo
2025-09-16T23:45:58.736435Z	    },
2025-09-16T23:45:58.736552Z	    targetMarket,
2025-09-16T23:45:58.736659Z	    complexity,
2025-09-16T23:45:58.736819Z	    publishedAt,
2025-09-16T23:45:58.736933Z	    isPublished,
2025-09-16T23:45:58.737089Z	    isFeatured,
2025-09-16T23:45:58.737216Z	    viewCount,
2025-09-16T23:45:58.737329Z	    _createdAt,
2025-09-16T23:45:58.737449Z	    _updatedAt
2025-09-16T23:45:58.737553Z	  
2025-09-16T23:45:58.737651Z	      },
2025-09-16T23:45:58.737806Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:45:58.737931Z	    }
2025-09-16T23:45:58.738044Z	  
2025-09-16T23:45:58.738152Z	Query parameters: {
2025-09-16T23:45:58.73826Z	  limit: 4,
2025-09-16T23:45:58.738356Z	  offset: 0,
2025-09-16T23:45:58.738453Z	  targetMarket: undefined,
2025-09-16T23:45:58.738562Z	  brand: 'cree',
2025-09-16T23:45:58.738701Z	  featured: undefined
2025-09-16T23:45:58.738825Z	}
2025-09-16T23:45:58.738931Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:45:58.739032Z	Fetching products with query: 
2025-09-16T23:45:58.73916Z	    {
2025-09-16T23:45:58.739301Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:58.739418Z	        
2025-09-16T23:45:58.739529Z	    _id,
2025-09-16T23:45:58.739705Z	    _type,
2025-09-16T23:45:58.73984Z	    partNumber,
2025-09-16T23:45:58.73998Z	    "slug": slug.current,
2025-09-16T23:45:58.740095Z	    title,
2025-09-16T23:45:58.740201Z	    shortDescription,
2025-09-16T23:45:58.740313Z	    image,
2025-09-16T23:45:58.740479Z	    brand->{
2025-09-16T23:45:58.74062Z	      name,
2025-09-16T23:45:58.740911Z	      "slug": slug.current,
2025-09-16T23:45:58.741119Z	      logo
2025-09-16T23:45:58.741288Z	    },
2025-09-16T23:45:58.74146Z	    category->{
2025-09-16T23:45:58.741629Z	      name,
2025-09-16T23:45:58.741919Z	      "slug": slug.current
2025-09-16T23:45:58.742122Z	    },
2025-09-16T23:45:58.742792Z	    pricing{
2025-09-16T23:45:58.744808Z	      currency,
2025-09-16T23:45:58.744951Z	      tiers[]{
2025-09-16T23:45:58.745067Z	        quantity,
2025-09-16T23:45:58.745199Z	        price,
2025-09-16T23:45:58.745295Z	        unit
2025-09-16T23:45:58.745381Z	      },
2025-09-16T23:45:58.745476Z	      moq,
2025-09-16T23:45:58.745577Z	      leadTime,
2025-09-16T23:45:58.745695Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:58.745805Z	      "price": tiers[0].price,
2025-09-16T23:45:58.745911Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:58.746014Z	    },
2025-09-16T23:45:58.746151Z	    inventory{
2025-09-16T23:45:58.746257Z	      quantity,
2025-09-16T23:45:58.746359Z	      status,
2025-09-16T23:45:58.746551Z	      warehouse,
2025-09-16T23:45:58.747239Z	      lastUpdated,
2025-09-16T23:45:58.747955Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:58.748092Z	      "inStock": status == "in_stock",
2025-09-16T23:45:58.748271Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:58.748404Z	    },
2025-09-16T23:45:58.74852Z	    isActive,
2025-09-16T23:45:58.748616Z	    isFeatured,
2025-09-16T23:45:58.748762Z	    isNew,
2025-09-16T23:45:58.748883Z	    _createdAt,
2025-09-16T23:45:58.748991Z	    _updatedAt
2025-09-16T23:45:58.749139Z	  
2025-09-16T23:45:58.749323Z	      },
2025-09-16T23:45:58.749459Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:45:58.749595Z	    }
2025-09-16T23:45:58.756681Z	  
2025-09-16T23:45:58.757198Z	Query parameters: {
2025-09-16T23:45:58.75743Z	  limit: 8,
2025-09-16T23:45:58.761795Z	  offset: 0,
2025-09-16T23:45:58.762001Z	  category: undefined,
2025-09-16T23:45:58.762141Z	  brand: 'cree',
2025-09-16T23:45:58.76226Z	  featured: undefined
2025-09-16T23:45:58.762387Z	}
2025-09-16T23:45:58.762496Z	Fetching solutions with query: 
2025-09-16T23:45:58.762601Z	    {
2025-09-16T23:45:58.76274Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:58.762868Z	        
2025-09-16T23:45:58.762997Z	    _id,
2025-09-16T23:45:58.763097Z	    title,
2025-09-16T23:45:58.763201Z	    "slug": slug.current,
2025-09-16T23:45:58.763306Z	    summary,
2025-09-16T23:45:58.763416Z	    description,
2025-09-16T23:45:58.763525Z	    coverImage,
2025-09-16T23:45:58.763622Z	    primaryBrand->{
2025-09-16T23:45:58.763763Z	      _id,
2025-09-16T23:45:58.764422Z	      name,
2025-09-16T23:45:58.764608Z	      "slug": slug.current,
2025-09-16T23:45:58.764744Z	      logo
2025-09-16T23:45:58.76485Z	    },
2025-09-16T23:45:58.764943Z	    relatedBrands[]->{
2025-09-16T23:45:58.765033Z	      _id,
2025-09-16T23:45:58.765136Z	      name,
2025-09-16T23:45:58.765248Z	      "slug": slug.current,
2025-09-16T23:45:58.765346Z	      logo
2025-09-16T23:45:58.765445Z	    },
2025-09-16T23:45:58.765528Z	    targetMarket,
2025-09-16T23:45:58.765613Z	    complexity,
2025-09-16T23:45:58.766124Z	    publishedAt,
2025-09-16T23:45:58.766613Z	    isPublished,
2025-09-16T23:45:58.767005Z	    isFeatured,
2025-09-16T23:45:58.767477Z	    viewCount,
2025-09-16T23:45:58.768014Z	    _createdAt,
2025-09-16T23:45:58.769204Z	    _updatedAt
2025-09-16T23:45:58.769332Z	  
2025-09-16T23:45:58.769446Z	      },
2025-09-16T23:45:58.769551Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:45:58.769652Z	    }
2025-09-16T23:45:58.769761Z	  
2025-09-16T23:45:58.769889Z	Query parameters: {
2025-09-16T23:45:58.770063Z	  limit: 4,
2025-09-16T23:45:58.770189Z	  offset: 0,
2025-09-16T23:45:58.770287Z	  targetMarket: undefined,
2025-09-16T23:45:58.770422Z	  brand: 'cree',
2025-09-16T23:45:58.770535Z	  featured: undefined
2025-09-16T23:45:58.770642Z	}
2025-09-16T23:45:58.77076Z	Solutions fetch result: {
2025-09-16T23:45:58.770865Z	  totalSolutions: 6,
2025-09-16T23:45:58.770956Z	  fetchedSolutions: 4,
2025-09-16T23:45:58.771055Z	  firstSolution: {
2025-09-16T23:45:58.771166Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:45:58.771274Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:45:58.771398Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:45:58.771513Z	    complexity: 'medium',
2025-09-16T23:45:58.771714Z	    coverImage: null,
2025-09-16T23:45:58.771961Z	    description: [ [Object] ],
2025-09-16T23:45:58.772091Z	    isFeatured: false,
2025-09-16T23:45:58.772196Z	    isPublished: true,
2025-09-16T23:45:58.772284Z	    primaryBrand: {
2025-09-16T23:45:58.77239Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:45:58.772496Z	      logo: null,
2025-09-16T23:45:58.772641Z	      name: 'CREE',
2025-09-16T23:45:58.772849Z	      slug: 'cree'
2025-09-16T23:45:58.772984Z	    },
2025-09-16T23:45:58.773096Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:45:58.773216Z	    relatedBrands: null,
2025-09-16T23:45:58.773456Z	    slug: '11111',
2025-09-16T23:45:58.773595Z	    summary: '11111',
2025-09-16T23:45:58.773733Z	    targetMarket: 'industrial-automation',
2025-09-16T23:45:58.773852Z	    title: '11111',
2025-09-16T23:45:58.773954Z	    viewCount: 0
2025-09-16T23:45:58.774053Z	  }
2025-09-16T23:45:58.774149Z	}
2025-09-16T23:45:58.774246Z	Solutions fetch result: {
2025-09-16T23:45:58.774369Z	  totalSolutions: 6,
2025-09-16T23:45:58.774565Z	  fetchedSolutions: 4,
2025-09-16T23:45:58.774952Z	  firstSolution: {
2025-09-16T23:45:58.775102Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:45:58.775239Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:45:58.775354Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:45:58.775458Z	    complexity: 'medium',
2025-09-16T23:45:58.775572Z	    coverImage: null,
2025-09-16T23:45:58.775756Z	    description: [ [Object] ],
2025-09-16T23:45:58.775882Z	    isFeatured: false,
2025-09-16T23:45:58.775977Z	    isPublished: true,
2025-09-16T23:45:58.776065Z	    primaryBrand: {
2025-09-16T23:45:58.776149Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:45:58.776235Z	      logo: null,
2025-09-16T23:45:58.776321Z	      name: 'CREE',
2025-09-16T23:45:58.776402Z	      slug: 'cree'
2025-09-16T23:45:58.776515Z	    },
2025-09-16T23:45:58.823917Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:45:58.824233Z	    relatedBrands: null,
2025-09-16T23:45:58.824426Z	    slug: '11111',
2025-09-16T23:45:58.824552Z	    summary: '11111',
2025-09-16T23:45:58.824662Z	    targetMarket: 'industrial-automation',
2025-09-16T23:45:58.824808Z	    title: '11111',
2025-09-16T23:45:58.824915Z	    viewCount: 0
2025-09-16T23:45:58.82502Z	  }
2025-09-16T23:45:58.825117Z	}
2025-09-16T23:45:58.825223Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:45:58.825358Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:45:58.825474Z	Products fetch result: {
2025-09-16T23:45:58.825574Z	  totalProducts: 4,
2025-09-16T23:45:58.825695Z	  fetchedProducts: 4,
2025-09-16T23:45:58.825806Z	  firstProduct: {
2025-09-16T23:45:58.8266Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:45:58.827081Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:45:58.82767Z	    _type: 'product',
2025-09-16T23:45:58.828088Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:45:58.828309Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:45:58.828437Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:45:58.828556Z	    image: null,
2025-09-16T23:45:58.828656Z	    inventory: {
2025-09-16T23:45:58.828772Z	      inStock: true,
2025-09-16T23:45:58.828866Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:45:58.829172Z	      quantity: 0,
2025-09-16T23:45:58.829326Z	      status: 'in_stock',
2025-09-16T23:45:58.834208Z	      warehouse: null
2025-09-16T23:45:58.834914Z	    },
2025-09-16T23:45:58.835236Z	    isActive: true,
2025-09-16T23:45:58.835644Z	    isFeatured: false,
2025-09-16T23:45:58.835956Z	    isNew: false,
2025-09-16T23:45:58.836192Z	    partNumber: '11111',
2025-09-16T23:45:58.836366Z	    pricing: {
2025-09-16T23:45:58.837563Z	      currency: 'CNY',
2025-09-16T23:45:58.837766Z	      leadTime: null,
2025-09-16T23:45:58.837932Z	      moq: null,
2025-09-16T23:45:58.838038Z	      price: null,
2025-09-16T23:45:58.83813Z	      tiers: null
2025-09-16T23:45:58.838224Z	    },
2025-09-16T23:45:58.838322Z	    shortDescription: '11111',
2025-09-16T23:45:58.838492Z	    slug: 'sic mosfet',
2025-09-16T23:45:58.838754Z	    title: '111111'
2025-09-16T23:45:58.838905Z	  }
2025-09-16T23:45:58.839127Z	}
2025-09-16T23:45:58.839492Z	Products fetch result: {
2025-09-16T23:45:58.839614Z	  totalProducts: 4,
2025-09-16T23:45:58.839852Z	  fetchedProducts: 4,
2025-09-16T23:45:58.83997Z	  firstProduct: {
2025-09-16T23:45:58.840076Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:45:58.840174Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:45:58.840277Z	    _type: 'product',
2025-09-16T23:45:58.84038Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:45:58.840504Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:45:58.840622Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:45:58.84281Z	    image: null,
2025-09-16T23:45:58.842976Z	    inventory: {
2025-09-16T23:45:58.843097Z	      inStock: true,
2025-09-16T23:45:58.843192Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:45:58.843331Z	      quantity: 0,
2025-09-16T23:45:58.844125Z	      status: 'in_stock',
2025-09-16T23:45:58.844461Z	      warehouse: null
2025-09-16T23:45:58.844597Z	    },
2025-09-16T23:45:58.84472Z	    isActive: true,
2025-09-16T23:45:58.844833Z	    isFeatured: false,
2025-09-16T23:45:58.844947Z	    isNew: false,
2025-09-16T23:45:58.84506Z	    partNumber: '11111',
2025-09-16T23:45:58.845168Z	    pricing: {
2025-09-16T23:45:58.84527Z	      currency: 'CNY',
2025-09-16T23:45:58.845972Z	      leadTime: null,
2025-09-16T23:45:58.846094Z	      moq: null,
2025-09-16T23:45:58.846543Z	      price: null,
2025-09-16T23:45:58.848934Z	      tiers: null
2025-09-16T23:45:58.849107Z	    },
2025-09-16T23:45:58.849221Z	    shortDescription: '11111',
2025-09-16T23:45:58.849333Z	    slug: 'sic mosfet',
2025-09-16T23:45:58.849453Z	    title: '111111'
2025-09-16T23:45:58.849575Z	  }
2025-09-16T23:45:58.85001Z	}
2025-09-16T23:45:58.850384Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:45:58.850542Z	Fetching products with query: 
2025-09-16T23:45:58.850664Z	    {
2025-09-16T23:45:58.851053Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:58.851437Z	        
2025-09-16T23:45:58.85159Z	    _id,
2025-09-16T23:45:58.852131Z	    _type,
2025-09-16T23:45:58.852272Z	    partNumber,
2025-09-16T23:45:58.852603Z	    "slug": slug.current,
2025-09-16T23:45:58.852736Z	    title,
2025-09-16T23:45:58.853098Z	    shortDescription,
2025-09-16T23:45:58.853295Z	    image,
2025-09-16T23:45:58.853496Z	    brand->{
2025-09-16T23:45:58.853619Z	      name,
2025-09-16T23:45:58.853801Z	      "slug": slug.current,
2025-09-16T23:45:58.854153Z	      logo
2025-09-16T23:45:58.854302Z	    },
2025-09-16T23:45:58.854669Z	    category->{
2025-09-16T23:45:58.854816Z	      name,
2025-09-16T23:45:58.854933Z	      "slug": slug.current
2025-09-16T23:45:58.855046Z	    },
2025-09-16T23:45:58.855156Z	    pricing{
2025-09-16T23:45:58.855265Z	      currency,
2025-09-16T23:45:58.855379Z	      tiers[]{
2025-09-16T23:45:58.855501Z	        quantity,
2025-09-16T23:45:58.855639Z	        price,
2025-09-16T23:45:58.855771Z	        unit
2025-09-16T23:45:58.855878Z	      },
2025-09-16T23:45:58.856334Z	      moq,
2025-09-16T23:45:58.856482Z	      leadTime,
2025-09-16T23:45:58.85678Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:58.857117Z	      "price": tiers[0].price,
2025-09-16T23:45:58.857251Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:58.857372Z	    },
2025-09-16T23:45:58.857493Z	    inventory{
2025-09-16T23:45:58.857604Z	      quantity,
2025-09-16T23:45:58.857752Z	      status,
2025-09-16T23:45:58.85787Z	      warehouse,
2025-09-16T23:45:58.857969Z	      lastUpdated,
2025-09-16T23:45:58.858073Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:58.858182Z	      "inStock": status == "in_stock",
2025-09-16T23:45:58.858285Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:58.858391Z	    },
2025-09-16T23:45:58.858499Z	    isActive,
2025-09-16T23:45:58.858603Z	    isFeatured,
2025-09-16T23:45:58.858729Z	    isNew,
2025-09-16T23:45:58.859262Z	    _createdAt,
2025-09-16T23:45:58.859419Z	    _updatedAt
2025-09-16T23:45:58.859574Z	  
2025-09-16T23:45:58.85979Z	      },
2025-09-16T23:45:58.859922Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:45:58.860073Z	    }
2025-09-16T23:45:58.86033Z	  
2025-09-16T23:45:58.861025Z	Query parameters: {
2025-09-16T23:45:58.86137Z	  limit: 8,
2025-09-16T23:45:58.861499Z	  offset: 0,
2025-09-16T23:45:58.861607Z	  category: undefined,
2025-09-16T23:45:58.861761Z	  brand:❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:58.861871Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:58.861962Z	Error fetching brand products data: Error: NEXT_NOT_FOUND
2025-09-16T23:45:58.862073Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:45:58.862175Z	    at y (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/products/page.js:1:4657) {
2025-09-16T23:45:58.862274Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:45:58.86237Z	}
2025-09-16T23:45:58.862472Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:58.862569Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:58.862685Z	Error fetching brand products data: Error: NEXT_NOT_FOUND
2025-09-16T23:45:58.862793Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:45:58.862897Z	    at y (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/products/page.js:1:4657) {
2025-09-16T23:45:58.862997Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:45:58.863134Z	}
2025-09-16T23:45:58.86329Z	 'qualcomm',
2025-09-16T23:45:58.863406Z	  featured: undefined
2025-09-16T23:45:58.863509Z	}
2025-09-16T23:45:58.863608Z	Fetching solutions with query: 
2025-09-16T23:45:58.863746Z	    {
2025-09-16T23:45:58.86385Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:58.863961Z	        
2025-09-16T23:45:58.864062Z	    _id,
2025-09-16T23:45:58.864158Z	    title,
2025-09-16T23:45:58.864264Z	    "slug": slug.current,
2025-09-16T23:45:58.864357Z	    summary,
2025-09-16T23:45:58.864464Z	    description,
2025-09-16T23:45:58.864561Z	    coverImage,
2025-09-16T23:45:58.86467Z	    primaryBrand->{
2025-09-16T23:45:58.864783Z	      _id,
2025-09-16T23:45:58.864887Z	      name,
2025-09-16T23:45:58.864988Z	      "slug": slug.current,
2025-09-16T23:45:58.865085Z	      logo
2025-09-16T23:45:58.865181Z	    },
2025-09-16T23:45:58.865279Z	    relatedBrands[]->{
2025-09-16T23:45:58.865374Z	      _id,
2025-09-16T23:45:58.865479Z	      name,
2025-09-16T23:45:58.865584Z	      "slug": slug.current,
2025-09-16T23:45:58.865716Z	      logo
2025-09-16T23:45:58.865814Z	    },
2025-09-16T23:45:58.865912Z	    targetMarket,
2025-09-16T23:45:58.866023Z	    complexity,
2025-09-16T23:45:58.866122Z	    publishedAt,
2025-09-16T23:45:58.866216Z	    isPublished,
2025-09-16T23:45:58.866318Z	    isFeatured,
2025-09-16T23:45:58.866415Z	    viewCount,
2025-09-16T23:45:58.866517Z	    _createdAt,
2025-09-16T23:45:58.866621Z	    _updatedAt
2025-09-16T23:45:58.866733Z	  
2025-09-16T23:45:58.866829Z	      },
2025-09-16T23:45:58.867012Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:45:58.867122Z	    }
2025-09-16T23:45:58.867224Z	  
2025-09-16T23:45:58.86732Z	Query parameters: {
2025-09-16T23:45:58.867417Z	  limit: 4,
2025-09-16T23:45:58.867512Z	  offset: 0,
2025-09-16T23:45:58.867648Z	  targetMarket: undefined,
2025-09-16T23:45:58.867771Z	  brand: 'qualcomm',
2025-09-16T23:45:58.867873Z	  featured: undefined
2025-09-16T23:45:58.86797Z	}
2025-09-16T23:45:58.868062Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:45:58.868162Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:58.868267Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:58.868361Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:45:58.868466Z	Fetching products with query: 
2025-09-16T23:45:58.868568Z	    {
2025-09-16T23:45:58.86867Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:58.868789Z	        
2025-09-16T23:45:58.868888Z	    _id,
2025-09-16T23:45:58.86898Z	    _type,
2025-09-16T23:45:58.869069Z	    partNumber,
2025-09-16T23:45:58.869165Z	    "slug": slug.current,
2025-09-16T23:45:58.869257Z	    title,
2025-09-16T23:45:58.869354Z	    shortDescription,
2025-09-16T23:45:58.86943Z	    image,
2025-09-16T23:45:58.869527Z	    brand->{
2025-09-16T23:45:58.86963Z	      name,
2025-09-16T23:45:58.869751Z	      "slug": slug.current,
2025-09-16T23:45:58.869841Z	      logo
2025-09-16T23:45:58.869934Z	    },
2025-09-16T23:45:58.870033Z	    category->{
2025-09-16T23:45:58.870155Z	      name,
2025-09-16T23:45:58.870241Z	      "slug": slug.current
2025-09-16T23:45:58.870339Z	    },
2025-09-16T23:45:58.870435Z	    pricing{
2025-09-16T23:45:58.87053Z	      currency,
2025-09-16T23:45:58.870636Z	      tiers[]{
2025-09-16T23:45:58.870747Z	        quantity,
2025-09-16T23:45:58.870842Z	        price,
2025-09-16T23:45:58.870932Z	        unit
2025-09-16T23:45:58.87101Z	      },
2025-09-16T23:45:58.871106Z	      moq,
2025-09-16T23:45:58.871184Z	      leadTime,
2025-09-16T23:45:58.871281Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:58.871377Z	      "price": tiers[0].price,
2025-09-16T23:45:58.871467Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:58.871549Z	    },
2025-09-16T23:45:58.871654Z	    inventory{
2025-09-16T23:45:58.871776Z	      quantity,
2025-09-16T23:45:58.871878Z	      status,
2025-09-16T23:45:58.871975Z	      warehouse,
2025-09-16T23:45:58.872081Z	      lastUpdated,
2025-09-16T23:45:58.872182Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:58.872285Z	      "inStock": status == "in_stock",
2025-09-16T23:45:58.872391Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:58.872492Z	    },
2025-09-16T23:45:58.87259Z	    isActive,
2025-09-16T23:45:58.87272Z	    isFeatured,
2025-09-16T23:45:58.87283Z	    isNew,
2025-09-16T23:45:58.872932Z	    _createdAt,
2025-09-16T23:45:58.873042Z	    _updatedAt
2025-09-16T23:45:58.873156Z	  
2025-09-16T23:45:58.873259Z	      },
2025-09-16T23:45:58.873359Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:45:58.873467Z	    }
2025-09-16T23:45:58.873563Z	  
2025-09-16T23:45:58.873662Z	Query parameters: {
2025-09-16T23:45:58.87378Z	  limit: 8,
2025-09-16T23:45:58.873897Z	  offset: 0,
2025-09-16T23:45:58.874015Z	  category: undefined,
2025-09-16T23:45:58.874128Z	  brand: 'qualcomm',
2025-09-16T23:45:58.874242Z	  featured: undefined
2025-09-16T23:45:58.874361Z	}
2025-09-16T23:45:58.874474Z	Fetching solutions with query: 
2025-09-16T23:45:58.874587Z	    {
2025-09-16T23:45:58.87474Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:58.874876Z	        
2025-09-16T23:45:58.875003Z	    _id,
2025-09-16T23:45:58.875114Z	    title,
2025-09-16T23:45:58.875234Z	    "slug": slug.current,
2025-09-16T23:45:58.875338Z	    summary,
2025-09-16T23:45:58.875452Z	    description,
2025-09-16T23:45:58.875552Z	    coverImage,
2025-09-16T23:45:58.875657Z	    primaryBrand->{
2025-09-16T23:45:58.875773Z	      _id,
2025-09-16T23:45:58.875869Z	      name,
2025-09-16T23:45:58.875979Z	      "slug": slug.current,
2025-09-16T23:45:58.876081Z	      logo
2025-09-16T23:45:58.876172Z	    },
2025-09-16T23:45:58.876299Z	    relatedBrands[]->{
2025-09-16T23:45:58.87638Z	      _id,
2025-09-16T23:45:58.876463Z	      name,
2025-09-16T23:45:58.876557Z	      "slug": slug.current,
2025-09-16T23:45:58.876659Z	      logo
2025-09-16T23:45:58.876794Z	    },
2025-09-16T23:45:58.876893Z	    targetMarket,
2025-09-16T23:45:58.876976Z	    complexity,
2025-09-16T23:45:58.877072Z	    publishedAt,
2025-09-16T23:45:58.877166Z	    isPublished,
2025-09-16T23:45:58.877253Z	    isFeatured,
2025-09-16T23:45:58.877316Z	    viewCount,
2025-09-16T23:45:58.877385Z	    _createdAt,
2025-09-16T23:45:58.87748Z	    _updatedAt
2025-09-16T23:45:58.877572Z	  
2025-09-16T23:45:58.877691Z	      },
2025-09-16T23:45:58.877799Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:45:58.8779Z	    }
2025-09-16T23:45:58.877988Z	  
2025-09-16T23:45:58.878072Z	Query parameters: {
2025-09-16T23:45:58.878168Z	  limit: 4,
2025-09-16T23:45:58.878255Z	  offset: 0,
2025-09-16T23:45:58.878352Z	  targetMarket: undefined,
2025-09-16T23:45:58.878447Z	  brand: 'qualcomm',
2025-09-16T23:45:58.878533Z	  featured: undefined
2025-09-16T23:45:58.878636Z	}
2025-09-16T23:45:58.878753Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:45:58.878871Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:58.878971Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:58.879078Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:58.879171Z	Fetching products with query: 
2025-09-16T23:45:58.879278Z	    {
2025-09-16T23:45:58.879374Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:58.879474Z	        
2025-09-16T23:45:58.879566Z	    _id,
2025-09-16T23:45:58.879697Z	    _type,
2025-09-16T23:45:58.879813Z	    partNumber,
2025-09-16T23:45:58.879911Z	    "slug": slug.current,
2025-09-16T23:45:58.880004Z	    title,
2025-09-16T23:45:58.880109Z	    shortDescription,
2025-09-16T23:45:58.880216Z	    image,
2025-09-16T23:45:58.880314Z	    brand->{
2025-09-16T23:45:58.880405Z	      name,
2025-09-16T23:45:58.880498Z	      "slug": slug.current,
2025-09-16T23:45:58.880592Z	      logo
2025-09-16T23:45:58.880714Z	    },
2025-09-16T23:45:58.880814Z	    category->{
2025-09-16T23:45:58.880907Z	      name,
2025-09-16T23:45:58.881012Z	      "slug": slug.current
2025-09-16T23:45:58.88111Z	    },
2025-09-16T23:45:58.881202Z	    pricing{
2025-09-16T23:45:58.881356Z	      currency,
2025-09-16T23:45:58.881585Z	      tiers[]{
2025-09-16T23:45:58.881756Z	        quantity,
2025-09-16T23:45:58.881869Z	        price,
2025-09-16T23:45:58.881972Z	        unit
2025-09-16T23:45:58.882088Z	      },
2025-09-16T23:45:58.882207Z	      moq,
2025-09-16T23:45:58.882308Z	      leadTime,
2025-09-16T23:45:58.882423Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:58.882532Z	      "price": tiers[0].price,
2025-09-16T23:45:58.882618Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:58.882733Z	    },
2025-09-16T23:45:58.882831Z	    inventory{
2025-09-16T23:45:58.882928Z	      quantity,
2025-09-16T23:45:58.883024Z	      status,
2025-09-16T23:45:58.883116Z	      warehouse,
2025-09-16T23:45:58.883208Z	      lastUpdated,
2025-09-16T23:45:58.883307Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:58.883424Z	      "inStock": status == "in_stock",
2025-09-16T23:45:58.883525Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:58.883624Z	    },
2025-09-16T23:45:58.883746Z	    isActive,
2025-09-16T23:45:58.883826Z	    isFeatured,
2025-09-16T23:45:58.883923Z	    isNew,
2025-09-16T23:45:58.884025Z	    _createdAt,
2025-09-16T23:45:58.884118Z	    _updatedAt
2025-09-16T23:45:58.884218Z	  
2025-09-16T23:45:58.884317Z	      },
2025-09-16T23:45:58.88442Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-16T23:45:58.884542Z	    }
2025-09-16T23:45:58.884651Z	  
2025-09-16T23:45:58.884775Z	Query parameters: {
2025-09-16T23:45:58.884886Z	  limit: 8,
2025-09-16T23:45:58.884989Z	  offset: 0,
2025-09-16T23:45:58.885091Z	  category: undefined,
2025-09-16T23:45:58.88519Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:45:58.885293Z	  featured: undefined
2025-09-16T23:45:58.8854Z	}
2025-09-16T23:45:58.885513Z	Fetching solutions with query: 
2025-09-16T23:45:58.885611Z	    {
2025-09-16T23:45:58.88573Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:58.885835Z	        
2025-09-16T23:45:58.885941Z	    _id,
2025-09-16T23:45:58.886036Z	    title,
2025-09-16T23:45:58.886163Z	    "slug": slug.current,
2025-09-16T23:45:58.886266Z	    summary,
2025-09-16T23:45:58.886378Z	    description,
2025-09-16T23:45:58.886484Z	    coverImage,
2025-09-16T23:45:58.886582Z	    primaryBrand->{
2025-09-16T23:45:58.88669Z	      _id,
2025-09-16T23:45:58.886826Z	      name,
2025-09-16T23:45:58.886939Z	      "slug": slug.current,
2025-09-16T23:45:58.887041Z	      logo
2025-09-16T23:45:58.887152Z	    },
2025-09-16T23:45:58.88725Z	    relatedBrands[]->{
2025-09-16T23:45:58.887345Z	      _id,
2025-09-16T23:45:58.887453Z	      name,
2025-09-16T23:45:58.887553Z	      "slug": slug.current,
2025-09-16T23:45:58.887655Z	      logo
2025-09-16T23:45:58.887777Z	    },
2025-09-16T23:45:58.88787Z	    targetMarket,
2025-09-16T23:45:58.887966Z	    complexity,
2025-09-16T23:45:58.888059Z	    publishedAt,
2025-09-16T23:45:58.888147Z	    isPublished,
2025-09-16T23:45:58.888237Z	    isFeatured,
2025-09-16T23:45:58.888328Z	    viewCount,
2025-09-16T23:45:58.888424Z	    _createdAt,
2025-09-16T23:45:58.88851Z	    _updatedAt
2025-09-16T23:45:58.888604Z	  
2025-09-16T23:45:58.888714Z	      },
2025-09-16T23:45:58.888796Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-16T23:45:58.888862Z	    }
2025-09-16T23:45:58.888921Z	  
2025-09-16T23:45:58.888976Z	Query parameters: {
2025-09-16T23:45:58.889032Z	  limit: 4,
2025-09-16T23:45:58.889085Z	  offset: 0,
2025-09-16T23:45:58.889143Z	  targetMarket: undefined,
2025-09-16T23:45:58.889543Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:45:58.889657Z	  featured: undefined
2025-09-16T23:45:58.889781Z	}
2025-09-16T23:45:58.889853Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-16T23:45:58.889911Z	Fetching products with query: 
2025-09-16T23:45:58.889965Z	    {
2025-09-16T23:45:58.890034Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:58.890096Z	        
2025-09-16T23:45:58.890182Z	    _id,
2025-09-16T23:45:58.890239Z	    _type,
2025-09-16T23:45:58.890295Z	    partNumber,
2025-09-16T23:45:58.89042Z	    "slug": slug.current,
2025-09-16T23:45:58.890478Z	    title,
2025-09-16T23:45:58.890531Z	    shortDescription,
2025-09-16T23:45:58.890584Z	    image,
2025-09-16T23:45:58.890647Z	    brand->{
2025-09-16T23:45:58.890731Z	      name,
2025-09-16T23:45:58.89079Z	      "slug": slug.current,
2025-09-16T23:45:58.890888Z	      logo
2025-09-16T23:45:58.890945Z	    },
2025-09-16T23:45:58.890998Z	    category->{
2025-09-16T23:45:58.891057Z	      name,
2025-09-16T23:45:58.891115Z	      "slug": slug.current
2025-09-16T23:45:58.891171Z	    },
2025-09-16T23:45:58.891227Z	    pricing{
2025-09-16T23:45:58.89128Z	      currency,
2025-09-16T23:45:58.891334Z	      tiers[]{
2025-09-16T23:45:58.891402Z	        quantity,
2025-09-16T23:45:58.891455Z	        price,
2025-09-16T23:45:58.891515Z	        unit
2025-09-16T23:45:58.891579Z	      },
2025-09-16T23:45:58.891634Z	      moq,
2025-09-16T23:45:58.891717Z	      leadTime,
2025-09-16T23:45:58.891791Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:58.89185Z	      "price": tiers[0].price,
2025-09-16T23:45:58.891905Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:58.89196Z	    },
2025-09-16T23:45:58.892013Z	    inventory{
2025-09-16T23:45:58.892065Z	      quantity,
2025-09-16T23:45:58.892121Z	      status,
2025-09-16T23:45:58.892174Z	      warehouse,
2025-09-16T23:45:58.892233Z	      lastUpdated,
2025-09-16T23:45:58.892294Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:58.892352Z	      "inStock": status == "in_stock",
2025-09-16T23:45:58.892461Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:58.89253Z	    },
2025-09-16T23:45:58.892584Z	    isActive,
2025-09-16T23:45:58.89264Z	    isFeatured,
2025-09-16T23:45:58.892726Z	    isNew,
2025-09-16T23:45:58.892787Z	    _createdAt,
2025-09-16T23:45:58.892936Z	    _updatedAt
2025-09-16T23:45:58.893166Z	  
2025-09-16T23:45:58.893804Z	      },
2025-09-16T23:45:58.894132Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-16T23:45:58.894309Z	    }
2025-09-16T23:45:58.89488Z	  
2025-09-16T23:45:58.895098Z	Query parameters: {
2025-09-16T23:45:58.895238Z	  limit: 8,
2025-09-16T23:45:58.895337Z	  offset: 0,
2025-09-16T23:45:58.895433Z	  category: undefined,
2025-09-16T23:45:58.895534Z	  brand: 'semikron',
2025-09-16T23:45:58.895649Z	  featured: undefined
2025-09-16T23:45:58.895836Z	}
2025-09-16T23:45:58.895976Z	Fetching solutions with query: 
2025-09-16T23:45:58.896081Z	    {
2025-09-16T23:45:58.896202Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:58.896505Z	        
2025-09-16T23:45:58.896649Z	    _id,
2025-09-16T23:45:58.896775Z	    title,
2025-09-16T23:45:58.896914Z	    "slug": slug.current,
2025-09-16T23:45:58.897012Z	    summary,
2025-09-16T23:45:58.897112Z	    description,
2025-09-16T23:45:58.897218Z	    coverImage,
2025-09-16T23:45:58.897308Z	    primaryBrand->{
2025-09-16T23:45:58.897419Z	      _id,
2025-09-16T23:45:58.897506Z	      name,
2025-09-16T23:45:58.897563Z	      "slug": slug.current,
2025-09-16T23:45:58.89762Z	      logo
2025-09-16T23:45:58.897692Z	    },
2025-09-16T23:45:58.897764Z	    relatedBrands[]->{
2025-09-16T23:45:58.897823Z	      _id,
2025-09-16T23:45:58.897881Z	      name,
2025-09-16T23:45:58.897934Z	      "slug": slug.current,
2025-09-16T23:45:58.897987Z	      logo
2025-09-16T23:45:58.898048Z	    },
2025-09-16T23:45:58.898103Z	    targetMarket,
2025-09-16T23:45:58.898158Z	    complexity,
2025-09-16T23:45:58.898216Z	    publishedAt,
2025-09-16T23:45:58.898273Z	    isPublished,
2025-09-16T23:45:58.898328Z	    isFeatured,
2025-09-16T23:45:58.898396Z	    viewCount,
2025-09-16T23:45:58.898455Z	    _createdAt,
2025-09-16T23:45:58.898508Z	    _updatedAt
2025-09-16T23:45:58.898567Z	  
2025-09-16T23:45:58.898622Z	      },
2025-09-16T23:45:58.898691Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-16T23:45:58.898768Z	    }
2025-09-16T23:45:58.898823Z	  
2025-09-16T23:45:58.898876Z	Query parameters: {
2025-09-16T23:45:58.898937Z	  limit: 4,
2025-09-16T23:45:58.89899Z	  offset: 0,
2025-09-16T23:45:58.899043Z	  targetMarket: undefined,
2025-09-16T23:45:58.899099Z	  brand: 'semikron',
2025-09-16T23:45:58.89918Z	  featured: undefined
2025-09-16T23:45:58.899488Z	}
2025-09-16T23:45:58.923806Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-16T23:45:58.924117Z	Fetching products with query: 
2025-09-16T23:45:58.924241Z	    {
2025-09-16T23:45:58.924346Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:58.92451Z	        
2025-09-16T23:45:58.92465Z	    _id,
2025-09-16T23:45:58.924827Z	    _type,
2025-09-16T23:45:58.924936Z	    partNumber,
2025-09-16T23:45:58.925064Z	    "slug": slug.current,
2025-09-16T23:45:58.925175Z	    title,
2025-09-16T23:45:58.925294Z	    shortDescription,
2025-09-16T23:45:58.925413Z	    image,
2025-09-16T23:45:58.925543Z	    brand->{
2025-09-16T23:45:58.925659Z	      name,
2025-09-16T23:45:58.925789Z	      "slug": slug.current,
2025-09-16T23:45:58.925906Z	      logo
2025-09-16T23:45:58.926019Z	    },
2025-09-16T23:45:58.926135Z	    category->{
2025-09-16T23:45:58.926259Z	      name,
2025-09-16T23:45:58.926377Z	      "slug": slug.current
2025-09-16T23:45:58.926485Z	    },
2025-09-16T23:45:58.926585Z	    pricing{
2025-09-16T23:45:58.926714Z	      currency,
2025-09-16T23:45:58.926821Z	      tiers[]{
2025-09-16T23:45:58.926918Z	        quantity,
2025-09-16T23:45:58.927029Z	        price,
2025-09-16T23:45:58.92713Z	        unit
2025-09-16T23:45:58.927212Z	      },
2025-09-16T23:45:58.9273Z	      moq,
2025-09-16T23:45:58.92741Z	      leadTime,
2025-09-16T23:45:58.927513Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:58.927632Z	      "price": tiers[0].price,
2025-09-16T23:45:58.927748Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:58.927862Z	    },
2025-09-16T23:45:58.927959Z	    inventory{
2025-09-16T23:45:58.928053Z	      quantity,
2025-09-16T23:45:58.928149Z	      status,
2025-09-16T23:45:58.928242Z	      warehouse,
2025-09-16T23:45:58.928331Z	      lastUpdated,
2025-09-16T23:45:58.92843Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:58.928538Z	      "inStock": status == "in_stock",
2025-09-16T23:45:58.92865Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:58.928758Z	    },
2025-09-16T23:45:58.928824Z	    isActive,
2025-09-16T23:45:58.92891Z	    isFeatured,
2025-09-16T23:45:58.928974Z	    isNew,
2025-09-16T23:45:58.929059Z	    _createdAt,
2025-09-16T23:45:58.929133Z	    _updatedAt
2025-09-16T23:45:58.92919Z	  
2025-09-16T23:45:58.929245Z	      },
2025-09-16T23:45:58.929331Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-16T23:45:58.929455Z	    }
2025-09-16T23:45:58.929545Z	  
2025-09-16T23:45:58.929637Z	Query parameters: {
2025-09-16T23:45:58.929786Z	  limit: 8,
2025-09-16T23:45:58.929881Z	  offset: 0,
2025-09-16T23:45:58.929972Z	  category: undefined,
2025-09-16T23:45:58.930074Z	  brand: 'semikron',
2025-09-16T23:45:58.930169Z	  featured: undefined
2025-09-16T23:45:58.930251Z	}
2025-09-16T23:45:58.930329Z	Fetching solutions with query: 
2025-09-16T23:45:58.930408Z	    {
2025-09-16T23:45:58.930488Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:58.930582Z	        
2025-09-16T23:45:58.930692Z	    _id,
2025-09-16T23:45:58.930781Z	    title,
2025-09-16T23:45:58.930862Z	    "slug": slug.current,
2025-09-16T23:45:58.930961Z	    summary,
2025-09-16T23:45:58.931048Z	    description,
2025-09-16T23:45:58.931158Z	    coverImage,
2025-09-16T23:45:58.931245Z	    primaryBrand->{
2025-09-16T23:45:58.931332Z	      _id,
2025-09-16T23:45:58.931418Z	      name,
2025-09-16T23:45:58.931716Z	      "slug": slug.current,
2025-09-16T23:45:58.931936Z	      logo
2025-09-16T23:45:58.932042Z	    },
2025-09-16T23:45:58.932142Z	    relatedBrands[]->{
2025-09-16T23:45:58.932224Z	      _id,
2025-09-16T23:45:58.932313Z	      name,
2025-09-16T23:45:58.932395Z	      "slug": slug.current,
2025-09-16T23:45:58.932476Z	      logo
2025-09-16T23:45:58.932561Z	    },
2025-09-16T23:45:58.932637Z	    targetMarket,
2025-09-16T23:45:58.932724Z	    complexity,
2025-09-16T23:45:58.932791Z	    publishedAt,
2025-09-16T23:45:58.932852Z	    isPublished,
2025-09-16T23:45:58.932935Z	    isFeatured,
2025-09-16T23:45:58.932991Z	    viewCount,
2025-09-16T23:45:58.93305Z	    _createdAt,
2025-09-16T23:45:58.933139Z	    _updatedAt
2025-09-16T23:45:58.933205Z	  
2025-09-16T23:45:58.933298Z	      },
2025-09-16T23:45:58.933389Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-16T23:45:58.933483Z	    }
2025-09-16T23:45:58.933559Z	  
2025-09-16T23:45:58.933613Z	Query parameters: {
2025-09-16T23:45:58.933688Z	  limit: 4,
2025-09-16T23:45:58.93376Z	  offset: 0,
2025-09-16T23:45:58.933815Z	  targetMarket: undefined,
2025-09-16T23:45:58.933933Z	  brand: 'semikron',
2025-09-16T23:45:58.933998Z	  featured: undefined
2025-09-16T23:45:58.934059Z	}
2025-09-16T23:45:58.934114Z	✅ [getBrandData] Found brand: Semikron
2025-09-16T23:45:58.934171Z	✅ [getBrandData] Found brand: Semikron
2025-09-16T23:45:58.93424Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:58.934321Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:58.934407Z	Products fetch result: {
2025-09-16T23:45:58.934468Z	  totalProducts: 1,
2025-09-16T23:45:58.934521Z	  fetchedProducts: 1,
2025-09-16T23:45:58.934574Z	  firstProduct: {
2025-09-16T23:45:58.934645Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-16T23:45:58.934733Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-16T23:45:58.934792Z	    _type: 'product',
2025-09-16T23:45:58.934847Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-16T23:45:58.934899Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-16T23:45:58.934962Z	    category: { name: ❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:58.935018Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:58.935071Z	Error fetching brand products data: Error: NEXT_NOT_FOUND
2025-09-16T23:45:58.935126Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:45:58.935196Z	    at y (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/products/page.js:1:4657) {
2025-09-16T23:45:58.935254Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:45:58.935307Z	}
2025-09-16T23:45:58.93536Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:58.935428Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:58.935485Z	Error fetching brand products data: Error: NEXT_NOT_FOUND
2025-09-16T23:45:58.935538Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:45:58.935591Z	    at y (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/products/page.js:1:4657) {
2025-09-16T23:45:58.935651Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:45:58.935755Z	}
2025-09-16T23:45:58.935815Z	'功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:45:58.935869Z	    image: null,
2025-09-16T23:45:58.935922Z	    inventory: {
2025-09-16T23:45:58.93598Z	      inStock: true,
2025-09-16T23:45:58.936033Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-16T23:45:58.936087Z	      quantity: 0,
2025-09-16T23:45:58.936139Z	      status: 'in_stock',
2025-09-16T23:45:58.936192Z	      warehouse: null
2025-09-16T23:45:58.936245Z	    },
2025-09-16T23:45:58.936297Z	    isActive: true,
2025-09-16T23:45:58.93635Z	    isFeatured: false,
2025-09-16T23:45:58.936405Z	    isNew: false,
2025-09-16T23:45:58.936457Z	    partNumber: 'SKKT106/16E',
2025-09-16T23:45:58.936509Z	    pricing: {
2025-09-16T23:45:58.93656Z	      currency: 'CNY',
2025-09-16T23:45:58.936612Z	      leadTime: null,
2025-09-16T23:45:58.93667Z	      moq: null,
2025-09-16T23:45:58.936757Z	      price: null,
2025-09-16T23:45:58.936819Z	      tiers: null
2025-09-16T23:45:58.936874Z	    },
2025-09-16T23:45:58.936928Z	    shortDescription: 'SKKT106/16E',
2025-09-16T23:45:58.936982Z	    slug: 'SKKT106/16E',
2025-09-16T23:45:58.93704Z	    title: 'SKKT106/16E'
2025-09-16T23:45:58.937097Z	  }
2025-09-16T23:45:58.937151Z	}
2025-09-16T23:45:58.937205Z	Products fetch result: {
2025-09-16T23:45:58.93726Z	  totalProducts: 1,
2025-09-16T23:45:58.937314Z	  fetchedProducts: 1,
2025-09-16T23:45:58.937368Z	  firstProduct: {
2025-09-16T23:45:58.937425Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-16T23:45:58.937477Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-16T23:45:58.93753Z	    _type: 'product',
2025-09-16T23:45:58.937582Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-16T23:45:58.937684Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-16T23:45:58.937761Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:45:58.937823Z	    image: null,
2025-09-16T23:45:58.937875Z	    inventory: {
2025-09-16T23:45:58.937928Z	      inStock: true,
2025-09-16T23:45:58.937981Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-16T23:45:58.938034Z	      quantity: 0,
2025-09-16T23:45:58.938086Z	      status: 'in_stock',
2025-09-16T23:45:58.93816Z	      warehouse: null
2025-09-16T23:45:58.938238Z	    },
2025-09-16T23:45:58.938314Z	    isActive: true,
2025-09-16T23:45:58.938392Z	    isFeatured: false,
2025-09-16T23:45:58.938462Z	    isNew: false,
2025-09-16T23:45:58.938516Z	    partNumber: 'SKKT106/16E',
2025-09-16T23:45:58.938571Z	    pricing: {
2025-09-16T23:45:58.938631Z	      currency: 'CNY',
2025-09-16T23:45:58.938707Z	      leadTime: null,
2025-09-16T23:45:58.938769Z	      moq: null,
2025-09-16T23:45:58.938823Z	      price: null,
2025-09-16T23:45:58.938875Z	      tiers: null
2025-09-16T23:45:58.938929Z	    },
2025-09-16T23:45:58.938982Z	    shortDescription: 'SKKT106/16E',
2025-09-16T23:45:58.939036Z	    slug: 'SKKT106/16E',
2025-09-16T23:45:58.93909Z	    title: 'SKKT106/16E'
2025-09-16T23:45:58.939155Z	  }
2025-09-16T23:45:58.939213Z	}
2025-09-16T23:45:58.939312Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-16T23:45:58.939383Z	Fetching products with query: 
2025-09-16T23:45:58.939464Z	    {
2025-09-16T23:45:58.939538Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:58.939645Z	        
2025-09-16T23:45:58.939774Z	    _id,
2025-09-16T23:45:58.93988Z	    _type,
2025-09-16T23:45:58.939983Z	    partNumber,
2025-09-16T23:45:58.940087Z	    "slug": slug.current,
2025-09-16T23:45:58.940185Z	    title,
2025-09-16T23:45:58.940288Z	    shortDescription,
2025-09-16T23:45:58.940388Z	    image,
2025-09-16T23:45:58.940497Z	    brand->{
2025-09-16T23:45:58.940592Z	      name,
2025-09-16T23:45:58.94075Z	      "slug": slug.current,
2025-09-16T23:45:58.940888Z	      logo
2025-09-16T23:45:58.940992Z	    },
2025-09-16T23:45:58.94109Z	    category->{
2025-09-16T23:45:58.941194Z	      name,
2025-09-16T23:45:58.941295Z	      "slug": slug.current
2025-09-16T23:45:58.941406Z	    },
2025-09-16T23:45:58.941503Z	    pricing{
2025-09-16T23:45:58.941602Z	      currency,
2025-09-16T23:45:58.94179Z	      tiers[]{
2025-09-16T23:45:58.941898Z	        quantity,
2025-09-16T23:45:58.941993Z	        price,
2025-09-16T23:45:58.942138Z	        unit
2025-09-16T23:45:58.942403Z	      },
2025-09-16T23:45:58.942802Z	      moq,
2025-09-16T23:45:58.94299Z	      leadTime,
2025-09-16T23:45:58.943158Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:58.943301Z	      "price": tiers[0].price,
2025-09-16T23:45:58.943467Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:58.943644Z	    },
2025-09-16T23:45:58.943884Z	    inventory{
2025-09-16T23:45:58.944018Z	      quantity,
2025-09-16T23:45:58.944122Z	      status,
2025-09-16T23:45:58.944216Z	      warehouse,
2025-09-16T23:45:58.944316Z	      lastUpdated,
2025-09-16T23:45:58.944408Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:58.944522Z	      "inStock": status == "in_stock",
2025-09-16T23:45:58.944627Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:58.944751Z	    },
2025-09-16T23:45:58.944853Z	    isActive,
2025-09-16T23:45:58.944954Z	    isFeatured,
2025-09-16T23:45:58.945057Z	    isNew,
2025-09-16T23:45:58.945149Z	    _createdAt,
2025-09-16T23:45:58.94526Z	    _updatedAt
2025-09-16T23:45:58.94536Z	  
2025-09-16T23:45:58.945451Z	      },
2025-09-16T23:45:58.945564Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-16T23:45:58.945668Z	    }
2025-09-16T23:45:58.945794Z	  
2025-09-16T23:45:58.945892Z	Query parameters: {
2025-09-16T23:45:58.945988Z	  limit: 8,
2025-09-16T23:45:58.946083Z	  offset: 0,
2025-09-16T23:45:58.946163Z	  category: undefined,
2025-09-16T23:45:58.946247Z	  brand: 'ixys',
2025-09-16T23:45:58.946336Z	  featured: undefined
2025-09-16T23:45:58.946427Z	}
2025-09-16T23:45:58.946524Z	Fetching solutions with query: 
2025-09-16T23:45:58.946619Z	    {
2025-09-16T23:45:58.946746Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:58.946923Z	        
2025-09-16T23:45:58.947034Z	    _id,
2025-09-16T23:45:58.94713Z	    title,
2025-09-16T23:45:58.947224Z	    "slug": slug.current,
2025-09-16T23:45:58.947316Z	    summary,
2025-09-16T23:45:58.947405Z	    description,
2025-09-16T23:45:58.947498Z	    coverImage,
2025-09-16T23:45:58.947604Z	    primaryBrand->{
2025-09-16T23:45:58.947728Z	      _id,
2025-09-16T23:45:58.947836Z	      name,
2025-09-16T23:45:58.947947Z	      "slug": slug.current,
2025-09-16T23:45:58.948048Z	      logo
2025-09-16T23:45:58.948148Z	    },
2025-09-16T23:45:58.948245Z	    relatedBrands[]->{
2025-09-16T23:45:58.948343Z	      _id,
2025-09-16T23:45:58.948437Z	      name,
2025-09-16T23:45:58.948532Z	      "slug": slug.current,
2025-09-16T23:45:58.948629Z	      logo
2025-09-16T23:45:58.94875Z	    },
2025-09-16T23:45:58.94885Z	    targetMarket,
2025-09-16T23:45:58.948945Z	    complexity,
2025-09-16T23:45:58.949035Z	    publishedAt,
2025-09-16T23:45:58.949123Z	    isPublished,
2025-09-16T23:45:58.949212Z	    isFeatured,
2025-09-16T23:45:58.949307Z	    viewCount,
2025-09-16T23:45:58.949417Z	    _createdAt,
2025-09-16T23:45:58.949543Z	    _updatedAt
2025-09-16T23:45:58.949658Z	  
2025-09-16T23:45:58.949788Z	      },
2025-09-16T23:45:58.949883Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-16T23:45:58.949981Z	    }
2025-09-16T23:45:58.950083Z	  
2025-09-16T23:45:58.950193Z	Query parameters: {
2025-09-16T23:45:58.950336Z	  limit: 4,
2025-09-16T23:45:58.95044Z	  offset: 0,
2025-09-16T23:45:58.950542Z	  targetMarket: undefined,
2025-09-16T23:45:58.950642Z	  brand: 'ixys',
2025-09-16T23:45:58.950759Z	  featured: undefined
2025-09-16T23:45:58.950857Z	}
2025-09-16T23:45:58.950964Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-16T23:45:58.951066Z	Fetching products with query: 
2025-09-16T23:45:58.951159Z	    {
2025-09-16T23:45:58.951252Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:58.951358Z	        
2025-09-16T23:45:58.951466Z	    _id,
2025-09-16T23:45:58.951571Z	    _type,
2025-09-16T23:45:58.95169Z	    partNumber,
2025-09-16T23:45:58.951796Z	    "slug": slug.current,
2025-09-16T23:45:58.9519Z	    title,
2025-09-16T23:45:58.951998Z	    shortDescription,
2025-09-16T23:45:58.952096Z	    image,
2025-09-16T23:45:58.952183Z	    brand->{
2025-09-16T23:45:58.952274Z	      name,
2025-09-16T23:45:58.952366Z	      "slug": slug.current,
2025-09-16T23:45:58.952471Z	      logo
2025-09-16T23:45:58.952571Z	    },
2025-09-16T23:45:58.952698Z	    category->{
2025-09-16T23:45:58.952801Z	      name,
2025-09-16T23:45:58.952895Z	      "slug": slug.current
2025-09-16T23:45:58.952988Z	    },
2025-09-16T23:45:58.953088Z	    pricing{
2025-09-16T23:45:58.953174Z	      currency,
2025-09-16T23:45:58.953277Z	      tiers[]{
2025-09-16T23:45:58.953366Z	        quantity,
2025-09-16T23:45:58.953465Z	        price,
2025-09-16T23:45:58.953589Z	        unit
2025-09-16T23:45:58.953727Z	      },
2025-09-16T23:45:58.953848Z	      moq,
2025-09-16T23:45:58.95398Z	      leadTime,
2025-09-16T23:45:58.954084Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:58.954185Z	      "price": tiers[0].price,
2025-09-16T23:45:58.954294Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:58.954464Z	    },
2025-09-16T23:45:58.954556Z	    inventory{
2025-09-16T23:45:58.954647Z	      quantity,
2025-09-16T23:45:58.954757Z	      status,
2025-09-16T23:45:58.954843Z	      warehouse,
2025-09-16T23:45:58.954925Z	      lastUpdated,
2025-09-16T23:45:58.955016Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:58.95511Z	      "inStock": status == "in_stock",
2025-09-16T23:45:58.955203Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:58.955295Z	    },
2025-09-16T23:45:58.955394Z	    isActive,
2025-09-16T23:45:58.955485Z	    isFeatured,
2025-09-16T23:45:58.955573Z	    isNew,
2025-09-16T23:45:58.95566Z	    _createdAt,
2025-09-16T23:45:58.955787Z	    _updatedAt
2025-09-16T23:45:58.955883Z	  
2025-09-16T23:45:58.95597Z	      },
2025-09-16T23:45:58.95609Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-16T23:45:58.956194Z	    }
2025-09-16T23:45:58.956282Z	  
2025-09-16T23:45:58.956371Z	Query parameters: {
2025-09-16T23:45:58.956457Z	  limit: 8,
2025-09-16T23:45:58.956545Z	  offset: 0,
2025-09-16T23:45:58.95664Z	  category: undefined,
2025-09-16T23:45:58.956767Z	  brand: 'ixys',
2025-09-16T23:45:58.95686Z	  featured: undefined
2025-09-16T23:45:58.956947Z	}
2025-09-16T23:45:58.957031Z	Fetching solutions with query: 
2025-09-16T23:45:58.957113Z	    {
2025-09-16T23:45:58.957214Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:58.95732Z	        
2025-09-16T23:45:58.957417Z	    _id,
2025-09-16T23:45:58.957514Z	    title,
2025-09-16T23:45:58.95761Z	    "slug": slug.current,
2025-09-16T23:45:58.957731Z	    summary,
2025-09-16T23:45:58.957831Z	    description,
2025-09-16T23:45:58.957926Z	    coverImage,
2025-09-16T23:45:58.958018Z	    primaryBrand->{
2025-09-16T23:45:58.958112Z	      _id,
2025-09-16T23:45:58.958202Z	      name,
2025-09-16T23:45:58.958292Z	      "slug": slug.current,
2025-09-16T23:45:58.958387Z	      logo
2025-09-16T23:45:58.95848Z	    },
2025-09-16T23:45:58.958572Z	    relatedBrands[]->{
2025-09-16T23:45:58.958659Z	      _id,
2025-09-16T23:45:58.958766Z	      name,
2025-09-16T23:45:58.958826Z	      "slug": slug.current,
2025-09-16T23:45:58.958891Z	      logo
2025-09-16T23:45:58.958944Z	    },
2025-09-16T23:45:58.958997Z	    targetMarket,
2025-09-16T23:45:58.959053Z	    complexity,
2025-09-16T23:45:58.959107Z	    publishedAt,
2025-09-16T23:45:58.95917Z	    isPublished,
2025-09-16T23:45:58.959245Z	    isFeatured,
2025-09-16T23:45:58.959304Z	    viewCount,
2025-09-16T23:45:58.959361Z	    _createdAt,
2025-09-16T23:45:58.959419Z	    _updatedAt
2025-09-16T23:45:58.959476Z	  
2025-09-16T23:45:58.959529Z	      },
2025-09-16T23:45:58.959585Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-16T23:45:58.95964Z	    }
2025-09-16T23:45:58.959728Z	  
2025-09-16T23:45:58.959798Z	Query parameters: {
2025-09-16T23:45:58.959857Z	  limit: 4,
2025-09-16T23:45:58.95991Z	  offset: 0,
2025-09-16T23:45:58.959965Z	  targetMarket: undefined,
2025-09-16T23:45:58.960024Z	  brand: 'ixys',
2025-09-16T23:45:58.960077Z	  featured: undefined
2025-09-16T23:45:58.960133Z	}
2025-09-16T23:45:58.960186Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:58.960239Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:58.960313Z	Solutions fetch result: {
2025-09-16T23:45:58.960368Z	  totalSolutions: 1,
2025-09-16T23:45:58.96042Z	  fetchedSolutions: 1,
2025-09-16T23:45:58.960479Z	  firstSolution: {
2025-09-16T23:45:58.960536Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-16T23:45:58.96059Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-16T23:45:58.960644Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-16T23:45:58.960733Z	    complexity: 'medium',
2025-09-16T23:45:58.960796Z	    coverImage: null,
2025-09-16T23:45:58.960853Z	    description: [ [Object] ],
2025-09-16T23:45:58.960906Z	    isFeatured: false,
2025-09-16T23:45:58.960958Z	    isPublished: true,
2025-09-16T23:45:58.961014Z	    primaryBrand: {
2025-09-16T23:45:58.961071Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:45:58.961125Z	      logo: null,
2025-09-16T23:45:58.961181Z	      name: 'IXYS',
2025-09-16T23:45:58.961236Z	      slug: 'ixys'
2025-09-16T23:45:58.961289Z	    },
2025-09-16T23:45:58.961344Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-16T23:45:58.961398Z	    relatedBrands: null,
2025-09-16T23:45:58.961453Z	    slug: '99999',
2025-09-16T23:45:58.961509Z	    summary: '99999',
2025-09-16T23:45:58.961564Z	    targetMarket: 'industrial-automation',
2025-09-16T23:45:58.961618Z	    title: '99999',
2025-09-16T23:45:58.961693Z	    viewCount: 0
2025-09-16T23:45:58.961754Z	  }
2025-09-16T23:45:58.961807Z	}
2025-09-16T23:45:58.961869Z	Solutions fetch result: {
2025-09-16T23:45:58.961928Z	  totalSolutions: 1,
2025-09-16T23:45:58.961981Z	  fetchedSolutions: 1,
2025-09-16T23:45:58.962035Z	  firstSolution: {
2025-09-16T23:45:58.962087Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-16T23:45:58.962146Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-16T23:45:58.962207Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-16T23:45:58.962259Z	    complexity: 'medium',
2025-09-16T23:45:58.962311Z	    coverImage: null,
2025-09-16T23:45:58.962366Z	    description: [ [Object] ],
2025-09-16T23:45:58.962418Z	    isFeatured: false,
2025-09-16T23:45:58.96247Z	    isPublished: true,
2025-09-16T23:45:58.962526Z	    primaryBrand: {
2025-09-16T23:45:58.962582Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:45:58.962634Z	      logo: null,
2025-09-16T23:45:58.962709Z	      name: 'IXYS',
2025-09-16T23:45:58.962764Z	      slug: 'ixys'
2025-09-16T23:45:58.962825Z	    },
2025-09-16T23:45:58.962883Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-16T23:45:58.962936Z	    relatedBrands: null,
2025-09-16T23:45:58.962988Z	    slug: '99999',
2025-09-16T23:45:58.963044Z	    summary: '99999',
2025-09-16T23:45:58.963105Z	    targetMarket: 'industrial-automation',
2025-09-16T23:45:58.963163Z	    title: '99999',
2025-09-16T23:45:58.963223Z	    viewCount: 0
2025-09-16T23:45:58.963277Z	  }
2025-09-16T23:45:58.963329Z	}
2025-09-16T23:45:58.963386Z	✅ [getBrandData] Found brand: IXYS
2025-09-16T23:45:58.963459Z	✅ [getBrandData] Found brand: IXYS
2025-09-16T23:45:58.963522Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:45:58.963582Z	Fetching products with query: 
2025-09-16T23:45:58.963636Z	    {
2025-09-16T23:45:58.963707Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:58.963786Z	        
2025-09-16T23:45:58.963839Z	    _id,
2025-09-16T23:45:58.963892Z	    _type,
2025-09-16T23:45:58.963949Z	    partNumber,
2025-09-16T23:45:58.964004Z	    "slug": slug.current,
2025-09-16T23:45:58.964056Z	    title,
2025-09-16T23:45:58.964111Z	    shortDescription,
2025-09-16T23:45:58.964164Z	    image,
2025-09-16T23:45:58.964216Z	    brand->{
2025-09-16T23:45:58.964274Z	      name,
2025-09-16T23:45:58.964328Z	      "slug": slug.current,
2025-09-16T23:45:58.964408Z	      logo
2025-09-16T23:45:58.964471Z	    },
2025-09-16T23:45:58.964531Z	    category->{
2025-09-16T23:45:58.964585Z	      name,
2025-09-16T23:45:58.964641Z	      "slug": slug.current
2025-09-16T23:45:58.964715Z	    },
2025-09-16T23:45:58.964769Z	    pricing{
2025-09-16T23:45:58.964824Z	      currency,
2025-09-16T23:45:58.964876Z	      tiers[]{
2025-09-16T23:45:58.964931Z	        quantity,
2025-09-16T23:45:58.964987Z	        price,
2025-09-16T23:45:58.96504Z	        unit
2025-09-16T23:45:58.965092Z	      },
2025-09-16T23:45:58.965156Z	      moq,
2025-09-16T23:45:58.965209Z	      leadTime,
2025-09-16T23:45:58.965261Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:58.96532Z	      "price": tiers[0].price,
2025-09-16T23:45:58.965377Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:58.96543Z	    },
2025-09-16T23:45:58.965486Z	    inventory{
2025-09-16T23:45:58.965538Z	      quantity,
2025-09-16T23:45:58.96559Z	      status,
2025-09-16T23:45:58.965647Z	      warehouse,
2025-09-16T23:45:58.965718Z	      lastUpdated,
2025-09-16T23:45:58.965778Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:58.965843Z	      "inStock": status == "in_stock",
2025-09-16T23:45:58.965897Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:58.965949Z	    },
2025-09-16T23:45:58.966007Z	    isActive,
2025-09-16T23:45:58.966059Z	    isFeatured,
2025-09-16T23:45:58.966111Z	    isNew,
2025-09-16T23:45:58.966169Z	    _createdAt,
2025-09-16T23:45:58.966227Z	    _updatedAt
2025-09-16T23:45:58.966284Z	  
2025-09-16T23:45:58.966341Z	      },
2025-09-16T23:45:58.966394Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:45:58.966448Z	    }
2025-09-16T23:45:58.966503Z	  
2025-09-16T23:45:58.966555Z	Query parameters: {
2025-09-16T23:45:58.966663Z	  limit: 8,
2025-09-16T23:45:58.96675Z	  offset: 0,
2025-09-16T23:45:58.966852Z	  category: undefined,
2025-09-16T23:45:58.96696Z	  brand: 'Electronicon',
2025-09-16T23:45:58.967061Z	  featured: undefined
2025-09-16T23:45:58.967165Z	}
2025-09-16T23:45:58.967267Z	Fetching solutions with query: 
2025-09-16T23:45:58.967382Z	    {
2025-09-16T23:45:58.967493Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:58.967636Z	        
2025-09-16T23:45:58.967777Z	    _id,
2025-09-16T23:45:58.967883Z	    title,
2025-09-16T23:45:58.967975Z	    "slug": slug.current,
2025-09-16T23:45:58.968074Z	    summary,
2025-09-16T23:45:58.968173Z	    description,
2025-09-16T23:45:58.968274Z	    coverImage,
2025-09-16T23:45:58.968377Z	    primaryBrand->{
2025-09-16T23:45:58.968477Z	      _id,
2025-09-16T23:45:58.968577Z	      name,
2025-09-16T23:45:58.968701Z	      "slug": slug.current,
2025-09-16T23:45:58.968805Z	      logo
2025-09-16T23:45:58.9689Z	    },
2025-09-16T23:45:58.969004Z	    relatedBrands[]->{
2025-09-16T23:45:58.969097Z	      _id,
2025-09-16T23:45:58.969196Z	      name,
2025-09-16T23:45:58.969302Z	      "slug": slug.current,
2025-09-16T23:45:58.969406Z	      logo
2025-09-16T23:45:58.969512Z	    },
2025-09-16T23:45:58.969617Z	    targetMarket,
2025-09-16T23:45:58.969737Z	    complexity,
2025-09-16T23:45:58.969849Z	    publishedAt,
2025-09-16T23:45:58.969955Z	    isPublished,
2025-09-16T23:45:58.970063Z	    isFeatured,
2025-09-16T23:45:58.970156Z	    viewCount,
2025-09-16T23:45:58.970261Z	    _createdAt,
2025-09-16T23:45:58.970354Z	    _updatedAt
2025-09-16T23:45:58.97045Z	  
2025-09-16T23:45:58.970549Z	      },
2025-09-16T23:45:58.970651Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:45:58.970776Z	    }
2025-09-16T23:45:58.970886Z	  
2025-09-16T23:45:58.970983Z	Query parameters: {
2025-09-16T23:45:58.971088Z	  limit: 4,
2025-09-16T23:45:58.971198Z	  offset: 0,
2025-09-16T23:45:58.971294Z	  targetMarket: undefined,
2025-09-16T23:45:58.971387Z	  brand: 'Electronicon',
2025-09-16T23:45:58.971494Z	  featured: undefined
2025-09-16T23:45:58.971618Z	}
2025-09-16T23:45:58.971743Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-16T23:45:58.971859Z	Fetching products with query: 
2025-09-16T23:45:58.971962Z	    {
2025-09-16T23:45:58.972078Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:58.972203Z	        
2025-09-16T23:45:58.972305Z	    _id,
2025-09-16T23:45:58.972458Z	    _type,
2025-09-16T23:45:58.972547Z	    partNumber,
2025-09-16T23:45:58.972711Z	    "slug": slug.current,
2025-09-16T23:45:58.972841Z	    title,
2025-09-16T23:45:58.972999Z	    shortDescription,
2025-09-16T23:45:58.973102Z	    image,
2025-09-16T23:45:58.973282Z	    brand->{
2025-09-16T23:45:58.973358Z	      name,
2025-09-16T23:45:58.973452Z	      "slug": slug.current,
2025-09-16T23:45:58.973555Z	      logo
2025-09-16T23:45:58.973648Z	    },
2025-09-16T23:45:58.973764Z	    category->{
2025-09-16T23:45:58.973851Z	      name,
2025-09-16T23:45:58.97395Z	      "slug": slug.current
2025-09-16T23:45:58.974027Z	    },
2025-09-16T23:45:58.974087Z	    pricing{
2025-09-16T23:45:58.974141Z	      currency,
2025-09-16T23:45:58.974211Z	      tiers[]{
2025-09-16T23:45:58.974274Z	        quantity,
2025-09-16T23:45:58.974354Z	        price,
2025-09-16T23:45:58.974443Z	        unit
2025-09-16T23:45:58.97456Z	      },
2025-09-16T23:45:58.97463Z	      moq,
2025-09-16T23:45:58.974786Z	      leadTime,
2025-09-16T23:45:58.975007Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:58.975154Z	      "price": tiers[0].price,
2025-09-16T23:45:58.975224Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:58.975284Z	    },
2025-09-16T23:45:58.97534Z	    inventory{
2025-09-16T23:45:58.9754Z	      quantity,
2025-09-16T23:45:58.975457Z	      status,
2025-09-16T23:45:58.975515Z	      warehouse,
2025-09-16T23:45:58.975574Z	      lastUpdated,
2025-09-16T23:45:58.975639Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:58.975729Z	      "inStock": status == "in_stock",
2025-09-16T23:45:58.975799Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:58.975858Z	    },
2025-09-16T23:45:58.975926Z	    isActive,
2025-09-16T23:45:58.975983Z	    isFeatured,
2025-09-16T23:45:58.97604Z	    isNew,
2025-09-16T23:45:58.976107Z	    _createdAt,
2025-09-16T23:45:58.976173Z	    _updatedAt
2025-09-16T23:45:58.976231Z	  
2025-09-16T23:45:58.976293Z	      },
2025-09-16T23:45:58.976363Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-16T23:45:58.97643Z	    }
2025-09-16T23:45:58.976487Z	  
2025-09-16T23:45:58.976547Z	Query parameters: {
2025-09-16T23:45:58.976603Z	  limit: 8,
2025-09-16T23:45:58.976669Z	  offset: 0,
2025-09-16T23:45:58.97676Z	  category: undefined,
2025-09-16T23:45:58.976825Z	  brand: '英飞凌',
2025-09-16T23:45:58.976885Z	  featured: undefined
2025-09-16T23:45:58.976943Z	}
2025-09-16T23:45:58.977Z	Fetching solutions with query: 
2025-09-16T23:45:58.977058Z	    {
2025-09-16T23:45:58.977116Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:58.977264Z	 ❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:58.97735Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:58.977417Z	Error fetching brand products data: Error: NEXT_NOT_FOUND
2025-09-16T23:45:58.977474Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:45:58.977534Z	    at y (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/products/page.js:1:4657)
2025-09-16T23:45:58.97759Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:45:58.977653Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:45:58.977726Z	}
2025-09-16T23:45:58.977782Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:58.977837Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:58.977898Z	Error fetching brand products data: Error: NEXT_NOT_FOUND
2025-09-16T23:45:58.977957Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:45:58.978016Z	    at y (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/products/page.js:1:4657)
2025-09-16T23:45:58.978074Z	    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-09-16T23:45:58.97813Z	    at runNextTicks (node:internal/process/task_queues:64:3)
2025-09-16T23:45:58.978187Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:45:58.978246Z	    at process.processTimers (node:internal/timers:512:7) {
2025-09-16T23:45:58.9783Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:45:58.978356Z	}
2025-09-16T23:45:58.978419Z	       
2025-09-16T23:45:58.978474Z	    _id,
2025-09-16T23:45:58.978531Z	    title,
2025-09-16T23:45:58.978588Z	    "slug": slug.current,
2025-09-16T23:45:58.978651Z	    summary,
2025-09-16T23:45:58.97872Z	    description,
2025-09-16T23:45:58.97878Z	    coverImage,
2025-09-16T23:45:58.978836Z	    primaryBrand->{
2025-09-16T23:45:58.978895Z	      _id,
2025-09-16T23:45:58.978956Z	      name,
2025-09-16T23:45:58.979012Z	      "slug": slug.current,
2025-09-16T23:45:58.979076Z	      logo
2025-09-16T23:45:58.979145Z	    },
2025-09-16T23:45:58.979202Z	    relatedBrands[]->{
2025-09-16T23:45:58.979279Z	      _id,
2025-09-16T23:45:58.97934Z	      name,
2025-09-16T23:45:58.979397Z	      "slug": slug.current,
2025-09-16T23:45:58.97959Z	      logo
2025-09-16T23:45:58.992902Z	    },
2025-09-16T23:45:58.993034Z	    targetMarket,
2025-09-16T23:45:58.993098Z	    complexity,
2025-09-16T23:45:58.993163Z	    publishedAt,
2025-09-16T23:45:58.99322Z	    isPublished,
2025-09-16T23:45:58.993281Z	    isFeatured,
2025-09-16T23:45:58.993338Z	    viewCount,
2025-09-16T23:45:58.993392Z	    _createdAt,
2025-09-16T23:45:58.993457Z	    _updatedAt
2025-09-16T23:45:58.993513Z	  
2025-09-16T23:45:58.993574Z	      },
2025-09-16T23:45:58.993645Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-16T23:45:58.993775Z	    }
2025-09-16T23:45:58.993849Z	  
2025-09-16T23:45:58.993915Z	Query parameters: {
2025-09-16T23:45:58.993971Z	  limit: 4,
2025-09-16T23:45:58.994033Z	  offset: 0,
2025-09-16T23:45:58.994096Z	  targetMarket: undefined,
2025-09-16T23:45:58.994152Z	  brand: '英飞凌',
2025-09-16T23:45:58.994213Z	  featured: undefined
2025-09-16T23:45:58.994271Z	}
2025-09-16T23:45:58.994332Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-16T23:45:58.9944Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:58.994468Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:58.994531Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:45:58.994595Z	Fetching products with query: 
2025-09-16T23:45:58.994652Z	    {
2025-09-16T23:45:58.994727Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:58.994788Z	        
2025-09-16T23:45:58.994842Z	    _id,
2025-09-16T23:45:58.994896Z	    _type,
2025-09-16T23:45:58.994958Z	    partNumber,
2025-09-16T23:45:58.995014Z	    "slug": slug.current,
2025-09-16T23:45:58.995068Z	    title,
2025-09-16T23:45:58.995121Z	    shortDescription,
2025-09-16T23:45:58.995174Z	    image,
2025-09-16T23:45:58.995228Z	    brand->{
2025-09-16T23:45:58.995281Z	      name,
2025-09-16T23:45:58.995336Z	      "slug": slug.current,
2025-09-16T23:45:58.995397Z	      logo
2025-09-16T23:45:58.995457Z	    },
2025-09-16T23:45:58.995517Z	    category->{
2025-09-16T23:45:58.995571Z	      name,
2025-09-16T23:45:58.995631Z	      "slug": slug.current
2025-09-16T23:45:58.995702Z	    },
2025-09-16T23:45:58.995763Z	    pricing{
2025-09-16T23:45:58.995824Z	      currency,
2025-09-16T23:45:58.995878Z	      tiers[]{
2025-09-16T23:45:58.99593Z	        quantity,
2025-09-16T23:45:58.995982Z	        price,
2025-09-16T23:45:58.996036Z	        unit
2025-09-16T23:45:58.996091Z	      },
2025-09-16T23:45:58.99615Z	      moq,
2025-09-16T23:45:58.996204Z	      leadTime,
2025-09-16T23:45:58.996258Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:58.996313Z	      "price": tiers[0].price,
2025-09-16T23:45:58.996373Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:58.99656Z	    },
2025-09-16T23:45:58.996651Z	    inventory{
2025-09-16T23:45:58.996724Z	      quantity,
2025-09-16T23:45:58.996788Z	      status,
2025-09-16T23:45:58.996847Z	      warehouse,
2025-09-16T23:45:58.99691Z	      lastUpdated,
2025-09-16T23:45:59.010221Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:59.010551Z	      "inStock": status == "in_stock",
2025-09-16T23:45:59.01089Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:59.011299Z	    },
2025-09-16T23:45:59.011577Z	    isActive,
2025-09-16T23:45:59.011897Z	    isFeatured,
2025-09-16T23:45:59.012145Z	    isNew,
2025-09-16T23:45:59.012272Z	    _createdAt,
2025-09-16T23:45:59.01246Z	    _updatedAt
2025-09-16T23:45:59.012903Z	  
2025-09-16T23:45:59.013074Z	      },
2025-09-16T23:45:59.013276Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:45:59.013642Z	    }
2025-09-16T23:45:59.013845Z	  
2025-09-16T23:45:59.01397Z	Query parameters: {
2025-09-16T23:45:59.014253Z	  limit: 8,
2025-09-16T23:45:59.014488Z	  offset: 0,
2025-09-16T23:45:59.014595Z	  category: undefined,
2025-09-16T23:45:59.01475Z	  brand: 'qualcomm',
2025-09-16T23:45:59.014824Z	  featured: undefined
2025-09-16T23:45:59.01502Z	}
2025-09-16T23:45:59.015169Z	Fetching solutions with query: 
2025-09-16T23:45:59.015248Z	    {
2025-09-16T23:45:59.01531Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:59.015375Z	        
2025-09-16T23:45:59.015434Z	    _id,
2025-09-16T23:45:59.015494Z	    title,
2025-09-16T23:45:59.015555Z	    "slug": slug.current,
2025-09-16T23:45:59.015628Z	    summary,
2025-09-16T23:45:59.01572Z	    description,
2025-09-16T23:45:59.015801Z	    coverImage,
2025-09-16T23:45:59.015867Z	    primaryBrand->{
2025-09-16T23:45:59.015926Z	      _id,
2025-09-16T23:45:59.015992Z	      name,
2025-09-16T23:45:59.016054Z	      "slug": slug.current,
2025-09-16T23:45:59.016392Z	      logo
2025-09-16T23:45:59.016697Z	    },
2025-09-16T23:45:59.016798Z	    relatedBrands[]->{
2025-09-16T23:45:59.017116Z	      _id,
2025-09-16T23:45:59.017212Z	      name,
2025-09-16T23:45:59.017272Z	      "slug": slug.current,
2025-09-16T23:45:59.017505Z	      logo
2025-09-16T23:45:59.017596Z	    },
2025-09-16T23:45:59.017867Z	    targetMarket,
2025-09-16T23:45:59.017945Z	    complexity,
2025-09-16T23:45:59.018242Z	    publishedAt,
2025-09-16T23:45:59.018328Z	    isPublished,
2025-09-16T23:45:59.018387Z	    isFeatured,
2025-09-16T23:45:59.018621Z	    viewCount,
2025-09-16T23:45:59.018734Z	    _createdAt,
2025-09-16T23:45:59.019032Z	    _updatedAt
2025-09-16T23:45:59.019169Z	  
2025-09-16T23:45:59.019302Z	      },
2025-09-16T23:45:59.019432Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:45:59.019547Z	    }
2025-09-16T23:45:59.019661Z	  
2025-09-16T23:45:59.0198Z	Query parameters: {
2025-09-16T23:45:59.019912Z	  limit: 4,
2025-09-16T23:45:59.020011Z	  offset: 0,
2025-09-16T23:45:59.020103Z	  targetMarket: undefined,
2025-09-16T23:45:59.020199Z	  brand: 'qualcomm',
2025-09-16T23:45:59.020296Z	  featured: undefined
2025-09-16T23:45:59.020395Z	}
2025-09-16T23:45:59.020485Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-16T23:45:59.020604Z	Fetching products with query: 
2025-09-16T23:45:59.020735Z	    {
2025-09-16T23:45:59.020836Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:59.020936Z	        
2025-09-16T23:45:59.021036Z	    _id,
2025-09-16T23:45:59.021129Z	    _type,
2025-09-16T23:45:59.021213Z	    partNumber,
2025-09-16T23:45:59.021311Z	    "slug": slug.current,
2025-09-16T23:45:59.021413Z	    title,
2025-09-16T23:45:59.02152Z	    shortDescription,
2025-09-16T23:45:59.021629Z	    image,
2025-09-16T23:45:59.021742Z	    brand->{
2025-09-16T23:45:59.021842Z	      name,
2025-09-16T23:45:59.021938Z	      "slug": slug.current,
2025-09-16T23:45:59.02203Z	      logo
2025-09-16T23:45:59.022127Z	    },
2025-09-16T23:45:59.022218Z	    category->{
2025-09-16T23:45:59.022306Z	      name,
2025-09-16T23:45:59.022393Z	      "slug": slug.current
2025-09-16T23:45:59.022485Z	    },
2025-09-16T23:45:59.022571Z	    pricing{
2025-09-16T23:45:59.022698Z	      currency,
2025-09-16T23:45:59.022809Z	      tiers[]{
2025-09-16T23:45:59.022901Z	        quantity,
2025-09-16T23:45:59.022989Z	        price,
2025-09-16T23:45:59.023075Z	        unit
2025-09-16T23:45:59.023163Z	      },
2025-09-16T23:45:59.023251Z	      moq,
2025-09-16T23:45:59.023338Z	      leadTime,
2025-09-16T23:45:59.023429Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:59.023521Z	      "price": tiers[0].price,
2025-09-16T23:45:59.023612Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:59.02375Z	    },
2025-09-16T23:45:59.023849Z	    inventory{
2025-09-16T23:45:59.023918Z	      quantity,
2025-09-16T23:45:59.023984Z	      status,
2025-09-16T23:45:59.024071Z	      warehouse,
2025-09-16T23:45:59.024208Z	      lastUpdated,
2025-09-16T23:45:59.024304Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:59.024408Z	      "inStock": status == "in_stock",
2025-09-16T23:45:59.024517Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:59.024633Z	    },
2025-09-16T23:45:59.024747Z	    isActive,
2025-09-16T23:45:59.024844Z	    isFeatured,
2025-09-16T23:45:59.024938Z	    isNew,
2025-09-16T23:45:59.025057Z	    _createdAt,
2025-09-16T23:45:59.025158Z	    _updatedAt
2025-09-16T23:45:59.025249Z	  
2025-09-16T23:45:59.025349Z	      },
2025-09-16T23:45:59.025444Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-16T23:45:59.025541Z	    }
2025-09-16T23:45:59.025658Z	  
2025-09-16T23:45:59.02585Z	Query parameters: {
2025-09-16T23:45:59.025954Z	  limit: 8,
2025-09-16T23:45:59.02605Z	  offset: 0,
2025-09-16T23:45:59.026146Z	  category: undefined,
2025-09-16T23:45:59.026243Z	  brand: 'pi',
2025-09-16T23:45:59.026336Z	  featured: undefined
2025-09-16T23:45:59.026431Z	}
2025-09-16T23:45:59.026555Z	Fetching solutions with query: 
2025-09-16T23:45:59.026664Z	    {
2025-09-16T23:45:59.026834Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:59.026961Z	        
2025-09-16T23:45:59.027091Z	    _id,
2025-09-16T23:45:59.027257Z	    title,
2025-09-16T23:45:59.027394Z	    "slug": slug.current,
2025-09-16T23:45:59.027539Z	    summary,
2025-09-16T23:45:59.027686Z	    description,
2025-09-16T23:45:59.027822Z	    coverImage,
2025-09-16T23:45:59.027932Z	    primaryBrand->{
2025-09-16T23:45:59.028034Z	      _id,
2025-09-16T23:45:59.028128Z	      name,
2025-09-16T23:45:59.028225Z	      "slug": slug.current,
2025-09-16T23:45:59.028315Z	      logo
2025-09-16T23:45:59.028376Z	    },
2025-09-16T23:45:59.028476Z	    relatedBrands[]->{
2025-09-16T23:45:59.028567Z	      _id,
2025-09-16T23:45:59.028632Z	      name,
2025-09-16T23:45:59.028734Z	      "slug": slug.current,
2025-09-16T23:45:59.028889Z	      logo
2025-09-16T23:45:59.029049Z	    },
2025-09-16T23:45:59.02915Z	    targetMarket,
2025-09-16T23:45:59.029239Z	    complexity,
2025-09-16T23:45:59.029352Z	    publishedAt,
2025-09-16T23:45:59.02951Z	    isPublished,
2025-09-16T23:45:59.029627Z	    isFeatured,
2025-09-16T23:45:59.029788Z	    viewCount,
2025-09-16T23:45:59.029916Z	    _createdAt,
2025-09-16T23:45:59.030027Z	    _updatedAt
2025-09-16T23:45:59.03014Z	  
2025-09-16T23:45:59.030311Z	      },
2025-09-16T23:45:59.030412Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-16T23:45:59.030521Z	    }
2025-09-16T23:45:59.030628Z	  
2025-09-16T23:45:59.030814Z	Query parameters: {
2025-09-16T23:45:59.030953Z	  limit: 4,
2025-09-16T23:45:59.031091Z	  offset: 0,
2025-09-16T23:45:59.031162Z	  targetMarket: undefined,
2025-09-16T23:45:59.031218Z	  brand: 'pi',
2025-09-16T23:45:59.031308Z	  featured: undefined
2025-09-16T23:45:59.031372Z	}
2025-09-16T23:45:59.031494Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:59.031649Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:59.031841Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:59.031981Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:59.032107Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:59.032287Z	✅ [getBrandData] Found brand: Sanrex
2025-09-16T23:45:59.032402Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:59.032511Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:59.0327Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:45:59.032845Z	Products fetch result: {
2025-09-16T23:45:59.032994Z	  totalProducts: 2,
2025-09-16T23:45:59.033096Z	  fetchedProducts: 2,
2025-09-16T23:45:59.033204Z	  firstProduct: {
2025-09-16T23:45:59.033366Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:45:59.03349Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:45:59.033623Z	    _type: 'product',
2025-09-16T23:45:59.033764Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:45:59.03391Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:45:59.034033Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:45:59.03416Z	    image: null,
2025-09-16T23:45:59.034277Z	    inventory: {
2025-09-16T23:45:59.034401Z	      inStock: true,
2025-09-16T23:45:59.034558Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:45:59.034646Z	      quantity: 0,
2025-09-16T23:45:59.034776Z	      status: 'in_stock',
2025-09-16T23:45:59.034903Z	      warehouse: null
2025-09-16T23:45:59.035025Z	    },
2025-09-16T23:45:59.035169Z	    isActive: true,
2025-09-16T23:45:59.03527Z	    isFeatured: false,
2025-09-16T23:45:59.035528Z	    isNew: false,
2025-09-16T23:45:59.035706Z	    partNumber: '99999',
2025-09-16T23:45:59.035862Z	    pricing: {
2025-09-16T23:45:59.035979Z	      currency: 'CNY',
2025-09-16T23:45:59.036079Z	      leadTime: null,
2025-09-16T23:45:59.036184Z	      moq: null,
2025-09-16T23:45:59.0364Z	      price: null,
2025-09-16T23:45:59.036538Z	      tiers: null
2025-09-16T23:45:59.036605Z	    },
2025-09-16T23:45:59.036663Z	    shortDescription: null,
2025-09-16T23:45:59.036754Z	    slug: '99999',
2025-09-16T23:45:59.036814Z	    title: '99999'
2025-09-16T23:45:59.036877Z	  }
2025-09-16T23:45:59.036942Z	}
2025-09-16T23:45:59.03701Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:59.037082Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:45:59.037147Z	Fetching products with query: 
2025-09-16T23:45:59.037203Z	    {
2025-09-16T23:45:59.037262Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:59.037319Z	        
2025-09-16T23:45:59.037468Z	    _id,
2025-09-16T23:45:59.037578Z	    _type,
2025-09-16T23:45:59.037641Z	    partNumber,
2025-09-16T23:45:59.037744Z	    "slug": slug.current,
2025-09-16T23:45:59.037817Z	    title,
2025-09-16T23:45:59.037874Z	    shortDescription,
2025-09-16T23:45:59.03793Z	    image,
2025-09-16T23:45:59.037985Z	    brand->{
2025-09-16T23:45:59.038042Z	      name,
2025-09-16T23:45:59.038099Z	      "slug": slug.current,
2025-09-16T23:45:59.038158Z	      logo
2025-09-16T23:45:59.038214Z	    },
2025-09-16T23:45:59.038269Z	    category->{
2025-09-16T23:45:59.038326Z	      name,
2025-09-16T23:45:59.038381Z	      "slug": slug.current
2025-09-16T23:45:59.03877Z	    },
2025-09-16T23:45:59.038967Z	    pricing{
2025-09-16T23:45:59.039092Z	      currency,
2025-09-16T23:45:59.039202Z	      tiers[]{
2025-09-16T23:45:59.039349Z	        quantity,
2025-09-16T23:45:59.039459Z	        price,
2025-09-16T23:45:59.039564Z	        unit
2025-09-16T23:45:59.039662Z	      },
2025-09-16T23:45:59.039781Z	      moq,
2025-09-16T23:45:59.03987Z	      leadTime,
2025-09-16T23:45:59.03996Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:59.040063Z	      "price": tiers[0].price,
2025-09-16T23:45:59.040156Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:59.040253Z	    },
2025-09-16T23:45:59.040346Z	    inventory{
2025-09-16T23:45:59.040452Z	      quantity,
2025-09-16T23:45:59.040544Z	      status,
2025-09-16T23:45:59.040639Z	      warehouse,
2025-09-16T23:45:59.040755Z	      lastUpdated,
2025-09-16T23:45:59.040859Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:59.040954Z	      "inStock": status == "in_stock",
2025-09-16T23:45:59.041045Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:59.041137Z	    },
2025-09-16T23:45:59.04123Z	    isActive,
2025-09-16T23:45:59.041321Z	    isFeatured,
2025-09-16T23:45:59.041414Z	    isNew,
2025-09-16T23:45:59.041533Z	    _createdAt,
2025-09-16T23:45:59.041643Z	    _updatedAt
2025-09-16T23:45:59.041759Z	  
2025-09-16T23:45:59.04186Z	      },
2025-09-16T23:45:59.041948Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:45:59.042051Z	    }
2025-09-16T23:45:59.042149Z	  
2025-09-16T23:45:59.042242Z	Query parameters: {
2025-09-16T23:45:59.042342Z	  limit: 8,
2025-09-16T23:45:59.04245Z	  offset: 0,
2025-09-16T23:45:59.042547Z	  category: undefined,
2025-09-16T23:45:59.042651Z	  brand: 'Electronicon',
2025-09-16T23:45:59.042771Z	  featured: undefined
2025-09-16T23:45:59.042871Z	}
2025-09-16T23:45:59.042959Z	Fetching solutions with query: 
2025-09-16T23:45:59.043041Z	    {
2025-09-16T23:45:59.043124Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:59.043245Z	        
2025-09-16T23:45:59.043336Z	    _id,
2025-09-16T23:45:59.043418Z	    title,
2025-09-16T23:45:59.04355Z	    "slug": slug.current,
2025-09-16T23:45:59.043639Z	    summary,
2025-09-16T23:45:59.043743Z	    description,
2025-09-16T23:45:59.043834Z	    coverImage,
2025-09-16T23:45:59.043919Z	    primaryBrand->{
2025-09-16T23:45:59.044014Z	      _id,
2025-09-16T23:45:59.044127Z	      name,
2025-09-16T23:45:59.04423Z	      "slug": slug.current,
2025-09-16T23:45:59.044327Z	      logo
2025-09-16T23:45:59.044441Z	    },
2025-09-16T23:45:59.044537Z	    relatedBrands[]->{
2025-09-16T23:45:59.044627Z	      _id,
2025-09-16T23:45:59.044749Z	      name,
2025-09-16T23:45:59.044884Z	      "slug": slug.current,
2025-09-16T23:45:59.044984Z	      logo
2025-09-16T23:45:59.045227Z	    },
2025-09-16T23:45:59.045333Z	    targetMarket,
2025-09-16T23:45:59.045552Z	    complexity,
2025-09-16T23:45:59.045656Z	    publishedAt,
2025-09-16T23:45:59.045768Z	    isPublished,
2025-09-16T23:45:59.045873Z	    isFeatured,
2025-09-16T23:45:59.045978Z	    viewCount,
2025-09-16T23:45:59.046095Z	    _createdAt,
2025-09-16T23:45:59.046215Z	    _updatedAt
2025-09-16T23:45:59.046325Z	  
2025-09-16T23:45:59.046447Z	      },
2025-09-16T23:45:59.046567Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:45:59.04669Z	    }
2025-09-16T23:45:59.046817Z	  
2025-09-16T23:45:59.046925Z	Query parameters: {
2025-09-16T23:45:59.047017Z	  limit: 4,
2025-09-16T23:45:59.047108Z	  offset: 0,
2025-09-16T23:45:59.047207Z	  targetMarket: undefined,
2025-09-16T23:45:59.04733Z	  brand: 'Electronicon',
2025-09-16T23:45:59.047436Z	  featured: undefined
2025-09-16T23:45:59.047557Z	}
2025-09-16T23:45:59.047649Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:59.047769Z	Fetching products with query: 
2025-09-16T23:45:59.047879Z	    {
2025-09-16T23:45:59.047969Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:59.048064Z	        
2025-09-16T23:45:59.04818Z	    _id,
2025-09-16T23:45:59.048276Z	    _type,
2025-09-16T23:45:59.048368Z	    partNumber,
2025-09-16T23:45:59.048497Z	    "slug": slug.current,
2025-09-16T23:45:59.048629Z	    title,
2025-09-16T23:45:59.048765Z	    shortDescription,
2025-09-16T23:45:59.048877Z	    image,
2025-09-16T23:45:59.049247Z	    brand->{
2025-09-16T23:45:59.049383Z	      name,
2025-09-16T23:45:59.049515Z	      "slug": slug.current,
2025-09-16T23:45:59.049688Z	      logo
2025-09-16T23:45:59.049817Z	    },
2025-09-16T23:45:59.050063Z	    category->{
2025-09-16T23:45:59.050143Z	      name,
2025-09-16T23:45:59.050225Z	      "slug": slug.current
2025-09-16T23:45:59.050381Z	    },
2025-09-16T23:45:59.050512Z	    pricing{
2025-09-16T23:45:59.050669Z	      currency,
2025-09-16T23:45:59.050777Z	      tiers[]{
2025-09-16T23:45:59.050891Z	        quantity,
2025-09-16T23:45:59.051021Z	        price,
2025-09-16T23:45:59.051133Z	        unit
2025-09-16T23:45:59.05126Z	      },
2025-09-16T23:45:59.051355Z	      moq,
2025-09-16T23:45:59.051457Z	      leadTime,
2025-09-16T23:45:59.051552Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:59.051656Z	      "price": tiers[0].price,
2025-09-16T23:45:59.05176Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:59.051853Z	    },
2025-09-16T23:45:59.051939Z	    inventory{
2025-09-16T23:45:59.052045Z	      quantity,
2025-09-16T23:45:59.052194Z	      status,
2025-09-16T23:45:59.052302Z	      warehouse,
2025-09-16T23:45:59.052426Z	      lastUpdated,
2025-09-16T23:45:59.052539Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:59.052634Z	      "inStock": status == "in_stock",
2025-09-16T23:45:59.052813Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:59.052945Z	    },
2025-09-16T23:45:59.05307Z	    isActive,
2025-09-16T23:45:59.053212Z	    isFeatured,
2025-09-16T23:45:59.053334Z	    isNew,
2025-09-16T23:45:59.053443Z	    _createdAt,
2025-09-16T23:45:59.053612Z	    _updatedAt
2025-09-16T23:45:59.053742Z	  
2025-09-16T23:45:59.054005Z	      },
2025-09-16T23:45:59.054247Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-16T23:45:59.054342Z	    }
2025-09-16T23:45:59.054574Z	  
2025-09-16T23:45:59.054683Z	Query parameters: {
2025-09-16T23:45:59.05493Z	  limit: 8,
2025-09-16T23:45:59.055007Z	  offset: 0,
2025-09-16T23:45:59.055213Z	  category: undefined,
2025-09-16T23:45:59.055379Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:45:59.055596Z	  featured: undefined
2025-09-16T23:45:59.055699Z	}
2025-09-16T23:45:59.055786Z	Fetching solutions with query: 
2025-09-16T23:45:59.056097Z	    {
2025-09-16T23:45:59.05624Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:59.056494Z	        
2025-09-16T23:45:59.056801Z	    _id,
2025-09-16T23:45:59.057201Z	    title,
2025-09-16T23:45:59.057376Z	    "slug": slug.current,
2025-09-16T23:45:59.057571Z	    summary,
2025-09-16T23:45:59.057713Z	    description,
2025-09-16T23:45:59.057828Z	    coverImage,
2025-09-16T23:45:59.057971Z	    primaryBrand->{
2025-09-16T23:45:59.058085Z	      _id,
2025-09-16T23:45:59.058194Z	      name,
2025-09-16T23:45:59.0583Z	      "slug": slug.current,
2025-09-16T23:45:59.058395Z	      logo
2025-09-16T23:45:59.058501Z	    },
2025-09-16T23:45:59.058596Z	    relatedBrands[]->{
2025-09-16T23:45:59.058716Z	      _id,
2025-09-16T23:45:59.05882Z	      name,
2025-09-16T23:45:59.058913Z	      "slug": slug.current,
2025-09-16T23:45:59.05904Z	      logo
2025-09-16T23:45:59.059143Z	    },
2025-09-16T23:45:59.059257Z	    targetMarket,
2025-09-16T23:45:59.059388Z	    complexity,
2025-09-16T23:45:59.059512Z	    publishedAt,
2025-09-16T23:45:59.059621Z	    isPublished,
2025-09-16T23:45:59.059742Z	    isFeatured,
2025-09-16T23:45:59.059848Z	    viewCount,
2025-09-16T23:45:59.059952Z	    _createdAt,
2025-09-16T23:45:59.060085Z	    _updatedAt
2025-09-16T23:45:59.060199Z	  
2025-09-16T23:45:59.060261Z	      },
2025-09-16T23:45:59.060326Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-16T23:45:59.060719Z	    }
2025-09-16T23:45:59.060841Z	  
2025-09-16T23:45:59.060981Z	Query parameters: {
2025-09-16T23:45:59.061241Z	  limit: 4,
2025-09-16T23:45:59.061336Z	  offset: 0,
2025-09-16T23:45:59.061404Z	  targetMarket: undefined,
2025-09-16T23:45:59.061498Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:45:59.061594Z	  featured: undefined
2025-09-16T23:45:59.061728Z	}
2025-09-16T23:45:59.061823Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:59.061927Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:59.062035Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:59.062148Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:59.062266Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:59.062381Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:59.06249Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-16T23:45:59.062593Z	Fetching products with query: 
2025-09-16T23:45:59.062727Z	    {
2025-09-16T23:45:59.062829Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:59.062936Z	        
2025-09-16T23:45:59.063046Z	    _id,
2025-09-16T23:45:59.063196Z	    _type,
2025-09-16T23:45:59.063363Z	    partNumber,
2025-09-16T23:45:59.063475Z	    "slug": slug.current,
2025-09-16T23:45:59.063638Z	    title,
2025-09-16T23:45:59.064103Z	    shortDescription,
2025-09-16T23:45:59.064312Z	    image,
2025-09-16T23:45:59.064636Z	    brand->{
2025-09-16T23:45:59.064801Z	      name,
2025-09-16T23:45:59.065023Z	      "slug": slug.current,
2025-09-16T23:45:59.065194Z	      logo
2025-09-16T23:45:59.065273Z	    },
2025-09-16T23:45:59.065423Z	    category->{
2025-09-16T23:45:59.065552Z	      name,
2025-09-16T23:45:59.065654Z	      "slug": slug.current
2025-09-16T23:45:59.065773Z	    },
2025-09-16T23:45:59.065879Z	    pricing{
2025-09-16T23:45:59.066097Z	      currency,
2025-09-16T23:45:59.066414Z	      tiers[]{
2025-09-16T23:45:59.066557Z	        quantity,
2025-09-16T23:45:59.066888Z	        price,
2025-09-16T23:45:59.067001Z	        unit
2025-09-16T23:45:59.067099Z	      },
2025-09-16T23:45:59.067196Z	      moq,
2025-09-16T23:45:59.067611Z	      leadTime,
2025-09-16T23:45:59.067751Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:59.06786Z	      "price": tiers[0].price,
2025-09-16T23:45:59.067956Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:59.068047Z	    },
2025-09-16T23:45:59.06814Z	    inventory{
2025-09-16T23:45:59.068259Z	      quantity,
2025-09-16T23:45:59.069491Z	      status,
2025-09-16T23:45:59.069638Z	      warehouse,
2025-09-16T23:45:59.069976Z	      lastUpdated,
2025-09-16T23:45:59.070062Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:59.070353Z	      "inStock": status == "in_stock",
2025-09-16T23:45:59.070444Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:59.07058Z	    },
2025-09-16T23:45:59.070847Z	    isActive,
2025-09-16T23:45:59.070945Z	    isFeatured,
2025-09-16T23:45:59.071168Z	    isNew,
2025-09-16T23:45:59.071246Z	    _createdAt,
2025-09-16T23:45:59.071534Z	    _updatedAt
2025-09-16T23:45:59.071615Z	  
2025-09-16T23:45:59.071694Z	      },
2025-09-16T23:45:59.071774Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-16T23:45:59.072004Z	    }
2025-09-16T23:45:59.072136Z	  
2025-09-16T23:45:59.072275Z	Query parameters: {
2025-09-16T23:45:59.072362Z	  limit: 8,
2025-09-16T23:45:59.072465Z	  offset: 0,
2025-09-16T23:45:59.072534Z	  category: undefined,
2025-09-16T23:45:59.072608Z	  brand: 'ncc',
2025-09-16T23:45:59.072732Z	  featured: undefined
2025-09-16T23:45:59.072842Z	}
2025-09-16T23:45:59.072934Z	Fetching solutions with query: 
2025-09-16T23:45:59.073004Z	    {
2025-09-16T23:45:59.07309Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:59.073188Z	        
2025-09-16T23:45:59.073276Z	    _id,
2025-09-16T23:45:59.073345Z	    title,
2025-09-16T23:45:59.073436Z	    "slug": slug.current,
2025-09-16T23:45:59.073525Z	    summary,
2025-09-16T23:45:59.073624Z	    description,
2025-09-16T23:45:59.07376Z	    coverImage,
2025-09-16T23:45:59.073842Z	    primaryBrand->{
2025-09-16T23:45:59.073912Z	      _id,
2025-09-16T23:45:59.074017Z	      name,
2025-09-16T23:45:59.074114Z	      "slug": slug.current,
2025-09-16T23:45:59.074208Z	      logo
2025-09-16T23:45:59.074305Z	    },
2025-09-16T23:45:59.074373Z	    relatedBrands[]->{
2025-09-16T23:45:59.074453Z	      _id,
2025-09-16T23:45:59.074545Z	      name,
2025-09-16T23:45:59.074638Z	      "slug": slug.current,
2025-09-16T23:45:59.074753Z	      logo
2025-09-16T23:45:59.074853Z	    },
2025-09-16T23:45:59.074942Z	    targetMarket,
2025-09-16T23:45:59.075039Z	    complexity,
2025-09-16T23:45:59.075115Z	    publishedAt,
2025-09-16T23:45:59.075201Z	    isPublished,
2025-09-16T23:45:59.075267Z	    isFeatured,
2025-09-16T23:45:59.075345Z	    viewCount,
2025-09-16T23:45:59.07542Z	    _createdAt,
2025-09-16T23:45:59.075487Z	    _updatedAt
2025-09-16T23:45:59.075547Z	  
2025-09-16T23:45:59.075639Z	      },
2025-09-16T23:45:59.075758Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-16T23:45:59.075855Z	    }
2025-09-16T23:45:59.075949Z	  
2025-09-16T23:45:59.076052Z	Query parameters: {
2025-09-16T23:45:59.076141Z	  limit: 4,
2025-09-16T23:45:59.076236Z	  offset: 0,
2025-09-16T23:45:59.076301Z	  targetMarket: undefined,
2025-09-16T23:45:59.07638Z	  brand: 'ncc',
2025-09-16T23:45:59.076473Z	  featured: undefined
2025-09-16T23:45:59.07654Z	}
2025-09-16T23:45:59.076619Z	✅ [getBrandData] Found brand: ncc
2025-09-16T23:45:59.076743Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:59.076824Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:59.076925Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-16T23:45:59.077033Z	Fetching products with query: 
2025-09-16T23:45:59.077111Z	    {
2025-09-16T23:45:59.077215Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:59.077338Z	        
2025-09-16T23:45:59.077409Z	    _id,
2025-09-16T23:45:59.077476Z	    _type,
2025-09-16T23:45:59.077533Z	    partNumber,
2025-09-16T23:45:59.0776Z	    "slug": slug.current,
2025-09-16T23:45:59.077694Z	    title,
2025-09-16T23:45:59.07781Z	    shortDescription,
2025-09-16T23:45:59.07787Z	    image,
2025-09-16T23:45:59.077924Z	    brand->{
2025-09-16T23:45:59.077979Z	      name,
2025-09-16T23:45:59.078035Z	      "slug": slug.current,
2025-09-16T23:45:59.078088Z	      logo
2025-09-16T23:45:59.078141Z	    },
2025-09-16T23:45:59.078194Z	    category->{
2025-09-16T23:45:59.078264Z	      name,
2025-09-16T23:45:59.07832Z	      "slug": slug.current
2025-09-16T23:45:59.078375Z	    },
2025-09-16T23:45:59.078429Z	    pricing{
2025-09-16T23:45:59.078508Z	      currency,
2025-09-16T23:45:59.078582Z	      tiers[]{
2025-09-16T23:45:59.07872Z	        quantity,
2025-09-16T23:45:59.078832Z	        price,
2025-09-16T23:45:59.078938Z	        unit
2025-09-16T23:45:59.079041Z	      },
2025-09-16T23:45:59.079143Z	      moq,
2025-09-16T23:45:59.079264Z	      leadTime,
2025-09-16T23:45:59.079392Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:59.079506Z	      "price": tiers[0].price,
2025-09-16T23:45:59.079608Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:59.079765Z	    },
2025-09-16T23:45:59.079867Z	    inventory{
2025-09-16T23:45:59.079962Z	      quantity,
2025-09-16T23:45:59.080032Z	      status,
2025-09-16T23:45:59.080095Z	      warehouse,
2025-09-16T23:45:59.080163Z	      lastUpdated,
2025-09-16T23:45:59.08022Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:59.080283Z	      "inStock": status == "in_stock",
2025-09-16T23:45:59.080343Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:59.080398Z	    },
2025-09-16T23:45:59.080455Z	    isActive,
2025-09-16T23:45:59.080516Z	    isFeatured,
2025-09-16T23:45:59.08057Z	    isNew,
2025-09-16T23:45:59.080623Z	    _createdAt,
2025-09-16T23:45:59.080704Z	    _updatedAt
2025-09-16T23:45:59.080882Z	  
2025-09-16T23:45:59.081014Z	      },
2025-09-16T23:45:59.081232Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-16T23:45:59.081496Z	    }
2025-09-16T23:45:59.0817Z	  
2025-09-16T23:45:59.081829Z	Query parameters: {
2025-09-16T23:45:59.081937Z	  limit: 8,
2025-09-16T23:45:59.082179Z	  offset: 0,
2025-09-16T23:45:59.082292Z	  category: undefined,
2025-09-16T23:45:59.082362Z	  brand: 'ncc',
2025-09-16T23:45:59.082439Z	  featured: undefined
2025-09-16T23:45:59.082502Z	}
2025-09-16T23:45:59.082558Z	Fetching solutions with query: 
2025-09-16T23:45:59.082614Z	    {
2025-09-16T23:45:59.082691Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:59.082775Z	        
2025-09-16T23:45:59.082834Z	    _id,
2025-09-16T23:45:59.082891Z	    title,
2025-09-16T23:45:59.082948Z	    "slug": slug.current,
2025-09-16T23:45:59.083011Z	    summary,
2025-09-16T23:45:59.083066Z	    description,
2025-09-16T23:45:59.083123Z	    coverImage,
2025-09-16T23:45:59.083186Z	    primaryBrand->{
2025-09-16T23:45:59.083252Z	      _id,
2025-09-16T23:45:59.083308Z	      name,
2025-09-16T23:45:59.08337Z	      "slug": slug.current,
2025-09-16T23:45:59.083456Z	      logo
2025-09-16T23:45:59.083533Z	    },
2025-09-16T23:45:59.083593Z	    relatedBrands[]->{
2025-09-16T23:45:59.083656Z	      _id,
2025-09-16T23:45:59.08375Z	      name,
2025-09-16T23:45:59.08381Z	      "slug": slug.current,
2025-09-16T23:45:59.083866Z	      logo
2025-09-16T23:45:59.083925Z	    },
2025-09-16T23:45:59.083991Z	    targetMarket,
2025-09-16T23:45:59.084055Z	    complexity,
2025-09-16T23:45:59.084114Z	    publishedAt,
2025-09-16T23:45:59.084175Z	    isPublished,
2025-09-16T23:45:59.084244Z	    isFeatured,
2025-09-16T23:45:59.08431Z	    viewCount,
2025-09-16T23:45:59.084369Z	    _createdAt,
2025-09-16T23:45:59.08444Z	    _updatedAt
2025-09-16T23:45:59.084505Z	  
2025-09-16T23:45:59.084569Z	      },
2025-09-16T23:45:59.084645Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-16T23:45:59.084742Z	    }
2025-09-16T23:45:59.084973Z	  
2025-09-16T23:45:59.085115Z	Query parameters: {
2025-09-16T23:45:59.085232Z	  limit: 4,
2025-09-16T23:45:59.085341Z	  offset: 0,
2025-09-16T23:45:59.085457Z	  targetMarket: undefined,
2025-09-16T23:45:59.08557Z	  brand: 'ncc',
2025-09-16T23:45:59.085702Z	  featured: undefined
2025-09-16T23:45:59.085827Z	}
2025-09-16T23:45:59.085941Z	✅ [getBrandData] Found brand: ncc
2025-09-16T23:45:59.086064Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:59.086178Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:59.086292Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-16T23:45:59.086409Z	Fetching products with query: 
2025-09-16T23:45:59.086533Z	    {
2025-09-16T23:45:59.086647Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:59.086784Z	        
2025-09-16T23:45:59.086899Z	    _id,
2025-09-16T23:45:59.087087Z	    _type,
2025-09-16T23:45:59.087212Z	    partNumber,
2025-09-16T23:45:59.087324Z	    "slug": slug.current,
2025-09-16T23:45:59.087442Z	    title,
2025-09-16T23:45:59.087544Z	    shortDescription,
2025-09-16T23:45:59.087644Z	    image,
2025-09-16T23:45:59.087792Z	    brand->{
2025-09-16T23:45:59.087902Z	      name,
2025-09-16T23:45:59.088011Z	      "slug": slug.current,
2025-09-16T23:45:59.088117Z	      logo
2025-09-16T23:45:59.088238Z	    },
2025-09-16T23:45:59.088346Z	    category->{
2025-09-16T23:45:59.088475Z	      name,
2025-09-16T23:45:59.088584Z	      "slug": slug.current
2025-09-16T23:45:59.088722Z	    },
2025-09-16T23:45:59.088838Z	    pricing{
2025-09-16T23:45:59.088956Z	      currency,
2025-09-16T23:45:59.089057Z	      tiers[]{
2025-09-16T23:45:59.089183Z	        quantity,
2025-09-16T23:45:59.089286Z	        price,
2025-09-16T23:45:59.089385Z	        unit
2025-09-16T23:45:59.08951Z	      },
2025-09-16T23:45:59.089641Z	      moq,
2025-09-16T23:45:59.089781Z	      leadTime,
2025-09-16T23:45:59.089897Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:59.090018Z	      "price": tiers[0].price,
2025-09-16T23:45:59.09013Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:59.090244Z	    },
2025-09-16T23:45:59.090347Z	    inventory{
2025-09-16T23:45:59.090465Z	      quantity,
2025-09-16T23:45:59.090585Z	      status,
2025-09-16T23:45:59.090756Z	      warehouse,
2025-09-16T23:45:59.090873Z	      lastUpdated,
2025-09-16T23:45:59.090991Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:59.091099Z	      "inStock": status == "in_stock",
2025-09-16T23:45:59.091197Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:59.0913Z	    },
2025-09-16T23:45:59.091395Z	    isActive,
2025-09-16T23:45:59.091507Z	    isFeatured,
2025-09-16T23:45:59.091616Z	    isNew,
2025-09-16T23:45:59.091738Z	    _createdAt,
2025-09-16T23:45:59.091848Z	    _updatedAt
2025-09-16T23:45:59.091959Z	  
2025-09-16T23:45:59.092061Z	      },
2025-09-16T23:45:59.092193Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-16T23:45:59.092324Z	    }
2025-09-16T23:45:59.092437Z	  
2025-09-16T23:45:59.092544Z	Query parameters: {
2025-09-16T23:45:59.092664Z	  limit: 8,
2025-09-16T23:45:59.092796Z	  offset: 0,
2025-09-16T23:45:59.092902Z	  category: undefined,
2025-09-16T23:45:59.093011Z	  brand: 'ixys',
2025-09-16T23:45:59.093119Z	  featured: undefined
2025-09-16T23:45:59.093223Z	}
2025-09-16T23:45:59.093334Z	Fetching solutions with query: 
2025-09-16T23:45:59.093452Z	    {
2025-09-16T23:45:59.093561Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:59.093692Z	        
2025-09-16T23:45:59.093812Z	    _id,
2025-09-16T23:45:59.093934Z	    title,
2025-09-16T23:45:59.094052Z	    "slug": slug.current,
2025-09-16T23:45:59.094161Z	    summary,
2025-09-16T23:45:59.094274Z	    description,
2025-09-16T23:45:59.094382Z	    coverImage,
2025-09-16T23:45:59.094493Z	    primaryBrand->{
2025-09-16T23:45:59.094594Z	      _id,
2025-09-16T23:45:59.094722Z	      name,
2025-09-16T23:45:59.094839Z	      "slug": slug.current,
2025-09-16T23:45:59.094949Z	      logo
2025-09-16T23:45:59.095083Z	    },
2025-09-16T23:45:59.095199Z	    relatedBrands[]->{
2025-09-16T23:45:59.0953Z	      _id,
2025-09-16T23:45:59.095402Z	      name,
2025-09-16T23:45:59.095515Z	      "slug": slug.current,
2025-09-16T23:45:59.095641Z	      logo
2025-09-16T23:45:59.095789Z	    ❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:59.095907Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:59.096029Z	Error fetching brand products data: Error: NEXT_NOT_FOUND
2025-09-16T23:45:59.096143Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:45:59.096239Z	    at y (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/products/page.js:1:4657)
2025-09-16T23:45:59.096335Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:45:59.096449Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:45:59.096548Z	}
2025-09-16T23:45:59.096648Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:59.096783Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:45:59.096905Z	Error fetching brand products data: Error: NEXT_NOT_FOUND
2025-09-16T23:45:59.097019Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:45:59.097131Z	    at y (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/products/page.js:1:4657)
2025-09-16T23:45:59.097234Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:45:59.097337Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:45:59.097454Z	}
2025-09-16T23:45:59.097575Z	},
2025-09-16T23:45:59.097707Z	    targetMarket,
2025-09-16T23:45:59.097842Z	    complexity,
2025-09-16T23:45:59.097959Z	    publishedAt,
2025-09-16T23:45:59.098061Z	    isPublished,
2025-09-16T23:45:59.098179Z	    isFeatured,
2025-09-16T23:45:59.098285Z	    viewCount,
2025-09-16T23:45:59.098471Z	    _createdAt,
2025-09-16T23:45:59.098596Z	    _updatedAt
2025-09-16T23:45:59.098739Z	  
2025-09-16T23:45:59.098864Z	      },
2025-09-16T23:45:59.098979Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-16T23:45:59.099113Z	    }
2025-09-16T23:45:59.099247Z	  
2025-09-16T23:45:59.099356Z	Query parameters: {
2025-09-16T23:45:59.099472Z	  limit: 4,
2025-09-16T23:45:59.099581Z	  offset: 0,
2025-09-16T23:45:59.099701Z	  targetMarket: undefined,
2025-09-16T23:45:59.099828Z	  brand: 'ixys',
2025-09-16T23:45:59.099941Z	  featured: undefined
2025-09-16T23:45:59.100057Z	}
2025-09-16T23:45:59.100185Z	✅ [getBrandData] Found brand: IXYS
2025-09-16T23:45:59.100295Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:59.100409Z	Solutions fetch result: {
2025-09-16T23:45:59.100529Z	  totalSolutions: 1,
2025-09-16T23:45:59.100647Z	  fetchedSolutions: 1,
2025-09-16T23:45:59.100771Z	  firstSolution: {
2025-09-16T23:45:59.100932Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-16T23:45:59.10105Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-16T23:45:59.101163Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-16T23:45:59.101295Z	    complexity: 'medium',
2025-09-16T23:45:59.101407Z	    coverImage: null,
2025-09-16T23:45:59.10154Z	    description: [ [Object] ],
2025-09-16T23:45:59.101665Z	    isFeatured: false,
2025-09-16T23:45:59.101792Z	    isPublished: true,
2025-09-16T23:45:59.101903Z	    primaryBrand: {
2025-09-16T23:45:59.102016Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:45:59.10213Z	      logo: null,
2025-09-16T23:45:59.102234Z	      name: 'IXYS',
2025-09-16T23:45:59.10235Z	      slug: 'ixys'
2025-09-16T23:45:59.102467Z	    },
2025-09-16T23:45:59.102572Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-16T23:45:59.102712Z	    relatedBrands: null,
2025-09-16T23:45:59.102834Z	    slug: '99999',
2025-09-16T23:45:59.102945Z	    summary: '99999',
2025-09-16T23:45:59.103064Z	    targetMarket: 'industrial-automation',
2025-09-16T23:45:59.103179Z	    title: '99999',
2025-09-16T23:45:59.103286Z	    viewCount: 0
2025-09-16T23:45:59.103396Z	  }
2025-09-16T23:45:59.103526Z	}
2025-09-16T23:45:59.10365Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-16T23:45:59.10379Z	Fetching products with query: 
2025-09-16T23:45:59.103899Z	    {
2025-09-16T23:45:59.104006Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:59.104114Z	        
2025-09-16T23:45:59.104217Z	    _id,
2025-09-16T23:45:59.104317Z	    _type,
2025-09-16T23:45:59.104424Z	    partNumber,
2025-09-16T23:45:59.104538Z	    "slug": slug.current,
2025-09-16T23:45:59.104649Z	    title,
2025-09-16T23:45:59.10478Z	    shortDescription,
2025-09-16T23:45:59.104897Z	    image,
2025-09-16T23:45:59.105006Z	    brand->{
2025-09-16T23:45:59.105137Z	      name,
2025-09-16T23:45:59.105238Z	      "slug": slug.current,
2025-09-16T23:45:59.105346Z	      logo
2025-09-16T23:45:59.105471Z	    },
2025-09-16T23:45:59.105579Z	    category->{
2025-09-16T23:45:59.105703Z	      name,
2025-09-16T23:45:59.105832Z	      "slug": slug.current
2025-09-16T23:45:59.105948Z	    },
2025-09-16T23:45:59.106055Z	    pricing{
2025-09-16T23:45:59.106167Z	      currency,
2025-09-16T23:45:59.106266Z	      tiers[]{
2025-09-16T23:45:59.106377Z	        quantity,
2025-09-16T23:45:59.106506Z	        price,
2025-09-16T23:45:59.106614Z	        unit
2025-09-16T23:45:59.106742Z	      },
2025-09-16T23:45:59.106861Z	      moq,
2025-09-16T23:45:59.107079Z	      leadTime,
2025-09-16T23:45:59.107279Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:59.107492Z	      "price": tiers[0].price,
2025-09-16T23:45:59.107667Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:59.107871Z	    },
2025-09-16T23:45:59.108105Z	    inventory{
2025-09-16T23:45:59.108368Z	      quantity,
2025-09-16T23:45:59.108529Z	      status,
2025-09-16T23:45:59.108662Z	      warehouse,
2025-09-16T23:45:59.108797Z	      lastUpdated,
2025-09-16T23:45:59.108901Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:59.109011Z	      "inStock": status == "in_stock",
2025-09-16T23:45:59.109129Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:59.109245Z	    },
2025-09-16T23:45:59.109373Z	    isActive,
2025-09-16T23:45:59.109494Z	    isFeatured,
2025-09-16T23:45:59.109602Z	    isNew,
2025-09-16T23:45:59.109736Z	    _createdAt,
2025-09-16T23:45:59.10985Z	    _updatedAt
2025-09-16T23:45:59.109967Z	  
2025-09-16T23:45:59.110079Z	      },
2025-09-16T23:45:59.110195Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-16T23:45:59.110306Z	    }
2025-09-16T23:45:59.110405Z	  
2025-09-16T23:45:59.110515Z	Query parameters: {
2025-09-16T23:45:59.110615Z	  limit: 8,
2025-09-16T23:45:59.110746Z	  offset: 0,
2025-09-16T23:45:59.110856Z	  category: undefined,
2025-09-16T23:45:59.110964Z	  brand: 'ixys',
2025-09-16T23:45:59.111093Z	  featured: undefined
2025-09-16T23:45:59.111209Z	}
2025-09-16T23:45:59.11132Z	Fetching solutions with query: 
2025-09-16T23:45:59.111449Z	    {
2025-09-16T23:45:59.111567Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:59.111696Z	        
2025-09-16T23:45:59.111811Z	    _id,
2025-09-16T23:45:59.111924Z	    title,
2025-09-16T23:45:59.112039Z	    "slug": slug.current,
2025-09-16T23:45:59.112165Z	    summary,
2025-09-16T23:45:59.112263Z	    description,
2025-09-16T23:45:59.112369Z	    coverImage,
2025-09-16T23:45:59.112493Z	    primaryBrand->{
2025-09-16T23:45:59.112616Z	      _id,
2025-09-16T23:45:59.112748Z	      name,
2025-09-16T23:45:59.112875Z	      "slug": slug.current,
2025-09-16T23:45:59.112997Z	      logo
2025-09-16T23:45:59.1131Z	    },
2025-09-16T23:45:59.113203Z	    relatedBrands[]->{
2025-09-16T23:45:59.113303Z	      _id,
2025-09-16T23:45:59.113407Z	      name,
2025-09-16T23:45:59.113523Z	      "slug": slug.current,
2025-09-16T23:45:59.113628Z	      logo
2025-09-16T23:45:59.113744Z	    },
2025-09-16T23:45:59.113848Z	    targetMarket,
2025-09-16T23:45:59.113968Z	    complexity,
2025-09-16T23:45:59.114084Z	    publishedAt,
2025-09-16T23:45:59.1142Z	    isPublished,
2025-09-16T23:45:59.114299Z	    isFeatured,
2025-09-16T23:45:59.114436Z	    viewCount,
2025-09-16T23:45:59.114572Z	    _createdAt,
2025-09-16T23:45:59.114714Z	    _updatedAt
2025-09-16T23:45:59.11484Z	  
2025-09-16T23:45:59.11496Z	      },
2025-09-16T23:45:59.115065Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-16T23:45:59.115205Z	    }
2025-09-16T23:45:59.115329Z	  
2025-09-16T23:45:59.115443Z	Query parameters: {
2025-09-16T23:45:59.11554Z	  limit: 4,
2025-09-16T23:45:59.115657Z	  offset: 0,
2025-09-16T23:45:59.115793Z	  targetMarket: undefined,
2025-09-16T23:45:59.115893Z	  brand: 'ixys',
2025-09-16T23:45:59.115995Z	  featured: undefined
2025-09-16T23:45:59.116087Z	}
2025-09-16T23:45:59.11617Z	✅ [getBrandData] Found brand: IXYS
2025-09-16T23:45:59.116261Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:59.116338Z	Solutions fetch result: {
2025-09-16T23:45:59.116563Z	  totalSolutions: 1,
2025-09-16T23:45:59.116699Z	  fetchedSolutions: 1,
2025-09-16T23:45:59.116795Z	  firstSolution: {
2025-09-16T23:45:59.116879Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-16T23:45:59.116967Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-16T23:45:59.117049Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-16T23:45:59.117131Z	    complexity: 'medium',
2025-09-16T23:45:59.11722Z	    coverImage: null,
2025-09-16T23:45:59.117302Z	    description: [ [Object] ],
2025-09-16T23:45:59.117384Z	    isFeatured: false,
2025-09-16T23:45:59.117486Z	    isPublished: true,
2025-09-16T23:45:59.117564Z	    primaryBrand: {
2025-09-16T23:45:59.117652Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:45:59.117774Z	      logo: null,
2025-09-16T23:45:59.117867Z	      name: 'IXYS',
2025-09-16T23:45:59.117973Z	      slug: 'ixys'
2025-09-16T23:45:59.118087Z	    },
2025-09-16T23:45:59.118191Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-16T23:45:59.118295Z	    relatedBrands: null,
2025-09-16T23:45:59.118401Z	    slug: '99999',
2025-09-16T23:45:59.118512Z	    summary: '99999',
2025-09-16T23:45:59.118617Z	    targetMarket: 'industrial-automation',
2025-09-16T23:45:59.118734Z	    title: '99999',
2025-09-16T23:45:59.118836Z	    viewCount: 0
2025-09-16T23:45:59.118938Z	  }
2025-09-16T23:45:59.11904Z	}
2025-09-16T23:45:59.119143Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:45:59.119267Z	Fetching products with query: 
2025-09-16T23:45:59.119377Z	    {
2025-09-16T23:45:59.11949Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:59.119594Z	        
2025-09-16T23:45:59.119705Z	    _id,
2025-09-16T23:45:59.119803Z	    _type,
2025-09-16T23:45:59.119888Z	    partNumber,
2025-09-16T23:45:59.119986Z	    "slug": slug.current,
2025-09-16T23:45:59.120102Z	    title,
2025-09-16T23:45:59.12021Z	    shortDescription,
2025-09-16T23:45:59.120302Z	    image,
2025-09-16T23:45:59.120406Z	    brand->{
2025-09-16T23:45:59.120513Z	      name,
2025-09-16T23:45:59.120616Z	      "slug": slug.current,
2025-09-16T23:45:59.120741Z	      logo
2025-09-16T23:45:59.120847Z	    },
2025-09-16T23:45:59.120948Z	    category->{
2025-09-16T23:45:59.121034Z	      name,
2025-09-16T23:45:59.121119Z	      "slug": slug.current
2025-09-16T23:45:59.12122Z	    },
2025-09-16T23:45:59.121284Z	    pricing{
2025-09-16T23:45:59.12135Z	      currency,
2025-09-16T23:45:59.121467Z	      tiers[]{
2025-09-16T23:45:59.121617Z	        quantity,
2025-09-16T23:45:59.121741Z	        price,
2025-09-16T23:45:59.121844Z	        unit
2025-09-16T23:45:59.121936Z	      },
2025-09-16T23:45:59.122034Z	      moq,
2025-09-16T23:45:59.122139Z	      leadTime,
2025-09-16T23:45:59.122227Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:59.122321Z	      "price": tiers[0].price,
2025-09-16T23:45:59.122439Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:59.122546Z	    },
2025-09-16T23:45:59.122638Z	    inventory{
2025-09-16T23:45:59.122759Z	      quantity,
2025-09-16T23:45:59.122867Z	      status,
2025-09-16T23:45:59.122962Z	      warehouse,
2025-09-16T23:45:59.123065Z	      lastUpdated,
2025-09-16T23:45:59.123151Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:59.123254Z	      "inStock": status == "in_stock",
2025-09-16T23:45:59.123349Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:59.123453Z	    },
2025-09-16T23:45:59.123538Z	    isActive,
2025-09-16T23:45:59.123625Z	    isFeatured,
2025-09-16T23:45:59.123726Z	    isNew,
2025-09-16T23:45:59.123816Z	    _createdAt,
2025-09-16T23:45:59.123915Z	    _updatedAt
2025-09-16T23:45:59.124021Z	  
2025-09-16T23:45:59.124122Z	      },
2025-09-16T23:45:59.124228Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:45:59.124324Z	    }
2025-09-16T23:45:59.124412Z	  
2025-09-16T23:45:59.124518Z	Query parameters: {
2025-09-16T23:45:59.124624Z	  limit: 8,
2025-09-16T23:45:59.124775Z	  offset: 0,
2025-09-16T23:45:59.12492Z	  category: undefined,
2025-09-16T23:45:59.125016Z	  brand: 'littelfuse',
2025-09-16T23:45:59.12512Z	  featured: undefined
2025-09-16T23:45:59.125219Z	}
2025-09-16T23:45:59.125313Z	Fetching solutions with query: 
2025-09-16T23:45:59.125397Z	    {
2025-09-16T23:45:59.125508Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:59.125606Z	        
2025-09-16T23:45:59.125717Z	    _id,
2025-09-16T23:45:59.125823Z	    title,
2025-09-16T23:45:59.125917Z	    "slug": slug.current,
2025-09-16T23:45:59.126002Z	    summary,
2025-09-16T23:45:59.126104Z	    description,
2025-09-16T23:45:59.126221Z	    coverImage,
2025-09-16T23:45:59.126329Z	    primaryBrand->{
2025-09-16T23:45:59.126414Z	      _id,
2025-09-16T23:45:59.126517Z	      name,
2025-09-16T23:45:59.126615Z	      "slug": slug.current,
2025-09-16T23:45:59.12673Z	      logo
2025-09-16T23:45:59.126803Z	    },
2025-09-16T23:45:59.126859Z	    relatedBrands[]->{
2025-09-16T23:45:59.126923Z	      _id,
2025-09-16T23:45:59.126994Z	      name,
2025-09-16T23:45:59.127075Z	      "slug": slug.current,
2025-09-16T23:45:59.127146Z	      logo
2025-09-16T23:45:59.127226Z	    },
2025-09-16T23:45:59.127314Z	    targetMarket,
2025-09-16T23:45:59.127414Z	    complexity,
2025-09-16T23:45:59.127483Z	    publishedAt,
2025-09-16T23:45:59.12756Z	    isPublished,
2025-09-16T23:45:59.127659Z	    isFeatured,
2025-09-16T23:45:59.127765Z	    viewCount,
2025-09-16T23:45:59.127832Z	    _createdAt,
2025-09-16T23:45:59.127905Z	    _updatedAt
2025-09-16T23:45:59.127995Z	  
2025-09-16T23:45:59.128105Z	      },
2025-09-16T23:45:59.128221Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:45:59.12833Z	    }
2025-09-16T23:45:59.128449Z	  
2025-09-16T23:45:59.128556Z	Query parameters: {
2025-09-16T23:45:59.128664Z	  limit: 4,
2025-09-16T23:45:59.128811Z	  offset: 0,
2025-09-16T23:45:59.128916Z	  targetMarket: undefined,
2025-09-16T23:45:59.129006Z	  brand: 'littelfuse',
2025-09-16T23:45:59.129101Z	  featured: undefined
2025-09-16T23:45:59.129175Z	}
2025-09-16T23:45:59.129234Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:45:59.129327Z	Fetching products with query: 
2025-09-16T23:45:59.129401Z	    {
2025-09-16T23:45:59.12947Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:59.129526Z	        
2025-09-16T23:45:59.129588Z	    _id,
2025-09-16T23:45:59.129643Z	    _type,
2025-09-16T23:45:59.129737Z	    partNumber,
2025-09-16T23:45:59.129803Z	    "slug": slug.current,
2025-09-16T23:45:59.129874Z	    title,
2025-09-16T23:45:59.129976Z	    shortDescription,
2025-09-16T23:45:59.130083Z	    image,
2025-09-16T23:45:59.130187Z	    brand->{
2025-09-16T23:45:59.130273Z	      name,
2025-09-16T23:45:59.130371Z	      "slug": slug.current,
2025-09-16T23:45:59.130469Z	      logo
2025-09-16T23:45:59.130555Z	    },
2025-09-16T23:45:59.130647Z	    category->{
2025-09-16T23:45:59.130761Z	      name,
2025-09-16T23:45:59.13085Z	      "slug": slug.current
2025-09-16T23:45:59.130922Z	    },
2025-09-16T23:45:59.131002Z	    pricing{
2025-09-16T23:45:59.131077Z	      currency,
2025-09-16T23:45:59.13114Z	      tiers[]{
2025-09-16T23:45:59.131208Z	        quantity,
2025-09-16T23:45:59.131267Z	        price,
2025-09-16T23:45:59.131356Z	        unit
2025-09-16T23:45:59.13142Z	      },
2025-09-16T23:45:59.131484Z	      moq,
2025-09-16T23:45:59.131545Z	      leadTime,
2025-09-16T23:45:59.13161Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:59.131667Z	      "price": tiers[0].price,
2025-09-16T23:45:59.131762Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:59.131826Z	    },
2025-09-16T23:45:59.131885Z	    inventory{
2025-09-16T23:45:59.131948Z	      quantity,
2025-09-16T23:45:59.132003Z	      status,
2025-09-16T23:45:59.132058Z	      warehouse,
2025-09-16T23:45:59.132117Z	      lastUpdated,
2025-09-16T23:45:59.132177Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:59.132233Z	      "inStock": status == "in_stock",
2025-09-16T23:45:59.132295Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:59.132357Z	    },
2025-09-16T23:45:59.132417Z	    isActive,
2025-09-16T23:45:59.132486Z	    isFeatured,
2025-09-16T23:45:59.13254Z	    isNew,
2025-09-16T23:45:59.132595Z	    _createdAt,
2025-09-16T23:45:59.132653Z	    _updatedAt
2025-09-16T23:45:59.132737Z	  
2025-09-16T23:45:59.132809Z	      },
2025-09-16T23:45:59.13287Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:45:59.13293Z	    }
2025-09-16T23:45:59.132994Z	  
2025-09-16T23:45:59.133052Z	Query parameters: {
2025-09-16T23:45:59.133108Z	  limit: 8,
2025-09-16T23:45:59.133163Z	  offset: 0,
2025-09-16T23:45:59.133227Z	  category: undefined,
2025-09-16T23:45:59.133283Z	  brand: 'littelfuse',
2025-09-16T23:45:59.133346Z	  featured: undefined
2025-09-16T23:45:59.133405Z	}
2025-09-16T23:45:59.133465Z	Fetching solutions with query: 
2025-09-16T23:45:59.133521Z	    {
2025-09-16T23:45:59.133582Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:59.133642Z	        
2025-09-16T23:45:59.13372Z	    _id,
2025-09-16T23:45:59.133786Z	    title,
2025-09-16T23:45:59.133851Z	    "slug": slug.current,
2025-09-16T23:45:59.133907Z	    summary,
2025-09-16T23:45:59.133972Z	    description,
2025-09-16T23:45:59.134027Z	    coverImage,
2025-09-16T23:45:59.134082Z	    primaryBrand->{
2025-09-16T23:45:59.134142Z	      _id,
2025-09-16T23:45:59.134196Z	      name,
2025-09-16T23:45:59.134251Z	      "slug": slug.current,
2025-09-16T23:45:59.134323Z	      logo
2025-09-16T23:45:59.134381Z	    },
2025-09-16T23:45:59.134474Z	    relatedBrands[]->{
2025-09-16T23:45:59.134536Z	      _id,
2025-09-16T23:45:59.134602Z	      name,
2025-09-16T23:45:59.134656Z	      "slug": slug.current,
2025-09-16T23:45:59.134747Z	      logo
2025-09-16T23:45:59.134818Z	    },
2025-09-16T23:45:59.13488Z	    targetMarket,
2025-09-16T23:45:59.134946Z	    complexity,
2025-09-16T23:45:59.135009Z	    publishedAt,
2025-09-16T23:45:59.135067Z	    isPublished,
2025-09-16T23:45:59.135135Z	    isFeatured,
2025-09-16T23:45:59.135196Z	    viewCount,
2025-09-16T23:45:59.135251Z	    _createdAt,
2025-09-16T23:45:59.13531Z	    _updatedAt
2025-09-16T23:45:59.135377Z	  
2025-09-16T23:45:59.135443Z	      },
2025-09-16T23:45:59.135503Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:45:59.135568Z	    }
2025-09-16T23:45:59.13563Z	  
2025-09-16T23:45:59.135714Z	Query parameters: {
2025-09-16T23:45:59.135776Z	  limit: 4,
2025-09-16T23:45:59.135831Z	  offset: 0,
2025-09-16T23:45:59.135896Z	  targetMarket: undefined,
2025-09-16T23:45:59.135951Z	  brand: 'littelfuse',
2025-09-16T23:45:59.136021Z	  featured: undefined
2025-09-16T23:45:59.136099Z	}
2025-09-16T23:45:59.136157Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:45:59.136221Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:45:59.136285Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:59.136346Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:59.136411Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:59.13649Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:59.136555Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-16T23:45:59.136613Z	Fetching products with query: 
2025-09-16T23:45:59.136711Z	    {
2025-09-16T23:45:59.136776Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:59.136835Z	        
2025-09-16T23:45:59.1369Z	    _id,
2025-09-16T23:45:59.136964Z	    _type,
2025-09-16T23:45:59.137019Z	    partNumber,
2025-09-16T23:45:59.137079Z	    "slug": slug.current,
2025-09-16T23:45:59.137165Z	    title,
2025-09-16T23:45:59.137233Z	    shortDescription,
2025-09-16T23:45:59.137292Z	    image,
2025-09-16T23:45:59.137348Z	    brand->{
2025-09-16T23:45:59.137419Z	      name,
2025-09-16T23:45:59.137495Z	      "slug": slug.current,
2025-09-16T23:45:59.137568Z	      logo
2025-09-16T23:45:59.137631Z	    },
2025-09-16T23:45:59.137733Z	    category->{
2025-09-16T23:45:59.137845Z	      name,
2025-09-16T23:45:59.137961Z	      "slug": slug.current
2025-09-16T23:45:59.138086Z	    },
2025-09-16T23:45:59.138186Z	    pricing{
2025-09-16T23:45:59.138306Z	      currency,
2025-09-16T23:45:59.138435Z	      tiers[]{
2025-09-16T23:45:59.138571Z	        quantity,
2025-09-16T23:45:59.138731Z	        price,
2025-09-16T23:45:59.138816Z	        unit
2025-09-16T23:45:59.138902Z	      },
2025-09-16T23:45:59.139075Z	      moq,
2025-09-16T23:45:59.139202Z	      leadTime,
2025-09-16T23:45:59.13932Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:59.139445Z	      "price": tiers[0].price,
2025-09-16T23:45:59.139567Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:59.139746Z	    },
2025-09-16T23:45:59.139872Z	    inventory{
2025-09-16T23:45:59.139987Z	      quantity,
2025-09-16T23:45:59.140126Z	      status,
2025-09-16T23:45:59.140258Z	      warehouse,
2025-09-16T23:45:59.140421Z	      lastUpdated,
2025-09-16T23:45:59.140559Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:59.140698Z	      "inStock": status == "in_stock",
2025-09-16T23:45:59.140812Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:59.140901Z	    },
2025-09-16T23:45:59.140987Z	    isActive,
2025-09-16T23:45:59.141086Z	    isFeatured,
2025-09-16T23:45:59.141189Z	    isNew,
2025-09-16T23:45:59.141285Z	    _createdAt,
2025-09-16T23:45:59.141375Z	    _updatedAt
2025-09-16T23:45:59.141472Z	  
2025-09-16T23:45:59.141583Z	      },
2025-09-16T23:45:59.141706Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-16T23:45:59.14182Z	    }
2025-09-16T23:45:59.141911Z	  
2025-09-16T23:45:59.141983Z	Query parameters: {
2025-09-16T23:45:59.142064Z	  limit: 8,
2025-09-16T23:45:59.142161Z	  offset: 0,
2025-09-16T23:45:59.142255Z	  category: undefined,
2025-09-16T23:45:59.142346Z	  brand: '英飞凌',
2025-09-16T23:45:59.142445Z	  featured: undefined
2025-09-16T23:45:59.142538Z	}
2025-09-16T23:45:59.142634Z	Fetching solutions with query: 
2025-09-16T23:45:59.142738Z	    {
2025-09-16T23:45:59.142837Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:59.142938Z	        
2025-09-16T23:45:59.143029Z	    _id,
2025-09-16T23:45:59.143124Z	    title,
2025-09-16T23:45:59.143213Z	    "slug": slug.current,
2025-09-16T23:45:59.143308Z	    summary,
2025-09-16T23:45:59.143415Z	    description,
2025-09-16T23:45:59.14352Z	    coverImage,
2025-09-16T23:45:59.143611Z	    primaryBrand->{
2025-09-16T23:45:59.143723Z	      _id,
2025-09-16T23:45:59.143818Z	      name,
2025-09-16T23:45:59.143908Z	      "slug": slug.current,
2025-09-16T23:45:59.144005Z	      logo
2025-09-16T23:45:59.144094Z	    },
2025-09-16T23:45:59.144189Z	    relatedBrands[]->{
2025-09-16T23:45:59.144283Z	      _id,
2025-09-16T23:45:59.144376Z	      name,
2025-09-16T23:45:59.144459Z	      "slug": slug.current,
2025-09-16T23:45:59.144556Z	      logo
2025-09-16T23:45:59.144625Z	    },
2025-09-16T23:45:59.144696Z	    targetMarket,
2025-09-16T23:45:59.144798Z	    complexity,
2025-09-16T23:45:59.144883Z	    publishedAt,
2025-09-16T23:45:59.144976Z	    isPublished,
2025-09-16T23:45:59.14507Z	    isFeatured,
2025-09-16T23:45:59.14516Z	    viewCount,
2025-09-16T23:45:59.145235Z	    _createdAt,
2025-09-16T23:45:59.145317Z	    _updatedAt
2025-09-16T23:45:59.145449Z	  
2025-09-16T23:45:59.145524Z	      },
2025-09-16T23:45:59.145614Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-16T23:45:59.145705Z	    }
2025-09-16T23:45:59.145806Z	  
2025-09-16T23:45:59.145911Z	Query parameters: {
2025-09-16T23:45:59.145981Z	  limit: 4,
2025-09-16T23:45:59.146037Z	  offset: 0,
2025-09-16T23:45:59.14612Z	  targetMarket: undefined,
2025-09-16T23:45:59.146213Z	  brand: '英飞凌',
2025-09-16T23:45:59.146308Z	  featured: undefined
2025-09-16T23:45:59.146388Z	}
2025-09-16T23:45:59.146454Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-16T23:45:59.146549Z	Fetching products with query: 
2025-09-16T23:45:59.146652Z	    {
2025-09-16T23:45:59.146766Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:59.146866Z	        
2025-09-16T23:45:59.146974Z	    _id,
2025-09-16T23:45:59.147067Z	    _type,
2025-09-16T23:45:59.147132Z	    partNumber,
2025-09-16T23:45:59.147215Z	    "slug": slug.current,
2025-09-16T23:45:59.147312Z	    title,
2025-09-16T23:45:59.147399Z	    shortDescription,
2025-09-16T23:45:59.147499Z	    image,
2025-09-16T23:45:59.147586Z	    brand->{
2025-09-16T23:45:59.147691Z	      name,
2025-09-16T23:45:59.147795Z	      "slug": slug.current,
2025-09-16T23:45:59.147912Z	      logo
2025-09-16T23:45:59.147978Z	    },
2025-09-16T23:45:59.148055Z	    category->{
2025-09-16T23:45:59.148158Z	      name,
2025-09-16T23:45:59.14829Z	      "slug": slug.current
2025-09-16T23:45:59.14846Z	    },
2025-09-16T23:45:59.148568Z	    pricing{
2025-09-16T23:45:59.148704Z	      currency,
2025-09-16T23:45:59.148817Z	      tiers[]{
2025-09-16T23:45:59.148919Z	        quantity,
2025-09-16T23:45:59.149022Z	        price,
2025-09-16T23:45:59.149091Z	        unit
2025-09-16T23:45:59.149152Z	      },
2025-09-16T23:45:59.149242Z	      moq,
2025-09-16T23:45:59.149319Z	      leadTime,
2025-09-16T23:45:59.149441Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:59.149559Z	      "price": tiers[0].price,
2025-09-16T23:45:59.149725Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:59.149818Z	    },
2025-09-16T23:45:59.149912Z	    inventory{
2025-09-16T23:45:59.149999Z	      quantity,
2025-09-16T23:45:59.150097Z	      status,
2025-09-16T23:45:59.150212Z	      warehouse,
2025-09-16T23:45:59.150312Z	      lastUpdated,
2025-09-16T23:45:59.15041Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:59.150579Z	      "inStock": status == "in_stock",
2025-09-16T23:45:59.150714Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:59.150811Z	    },
2025-09-16T23:45:59.150928Z	    isActive,
2025-09-16T23:45:59.151052Z	    isFeatured,
2025-09-16T23:45:59.151156Z	    isNew,
2025-09-16T23:45:59.151271Z	    _createdAt,
2025-09-16T23:45:59.151381Z	    _updatedAt
2025-09-16T23:45:59.151509Z	  
2025-09-16T23:45:59.151632Z	      },
2025-09-16T23:45:59.151769Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-16T23:45:59.151909Z	    }
2025-09-16T23:45:59.152013Z	  
2025-09-16T23:45:59.152109Z	Query parameters: {
2025-09-16T23:45:59.152213Z	  limit: 8,
2025-09-16T23:45:59.152318Z	  offset: 0,
2025-09-16T23:45:59.152413Z	  category: undefined,
2025-09-16T23:45:59.152516Z	  brand: '英飞凌',
2025-09-16T23:45:59.152614Z	  featured: undefined
2025-09-16T23:45:59.152733Z	}
2025-09-16T23:45:59.152818Z	Fetching solutions with query: 
2025-09-16T23:45:59.15291Z	    {
2025-09-16T23:45:59.153004Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:59.153117Z	        
2025-09-16T23:45:59.153229Z	    _id,
2025-09-16T23:45:59.153327Z	    title,
2025-09-16T23:45:59.153436Z	    "slug": slug.current,
2025-09-16T23:45:59.153547Z	    summary,
2025-09-16T23:45:59.153652Z	    description,
2025-09-16T23:45:59.153777Z	    coverImage,
2025-09-16T23:45:59.153892Z	    primaryBrand->{
2025-09-16T23:45:59.15398Z	      _id,
2025-09-16T23:45:59.154068Z	      name,
2025-09-16T23:45:59.154159Z	      "slug": slug.current,
2025-09-16T23:45:59.154245Z	      logo
2025-09-16T23:45:59.154345Z	    },
2025-09-16T23:45:59.154447Z	    relatedBrands[]->{
2025-09-16T23:45:59.154538Z	      _id,
2025-09-16T23:45:59.154632Z	      name,
2025-09-16T23:45:59.154743Z	      "slug": slug.current,
2025-09-16T23:45:59.154836Z	      logo
2025-09-16T23:45:59.154924Z	    },
2025-09-16T23:45:59.155015Z	    targetMarket,
2025-09-16T23:45:59.155111Z	    complexity,
2025-09-16T23:45:59.155216Z	    publishedAt,
2025-09-16T23:45:59.15532Z	    isPublished,
2025-09-16T23:45:59.155418Z	    isFeatured,
2025-09-16T23:45:59.155528Z	    viewCount,
2025-09-16T23:45:59.155627Z	    _createdAt,
2025-09-16T23:45:59.15576Z	    _updatedAt
2025-09-16T23:45:59.155861Z	  
2025-09-16T23:45:59.155996Z	      },
2025-09-16T23:45:59.156214Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-16T23:45:59.156341Z	    }
2025-09-16T23:45:59.15658Z	  
2025-09-16T23:45:59.156917Z	Query parameters: {
2025-09-16T23:45:59.157037Z	  limit: 4,
2025-09-16T23:45:59.157156Z	  offset: 0,
2025-09-16T23:45:59.157261Z	  targetMarket: undefined,
2025-09-16T23:45:59.157356Z	  brand: '英飞凌',
2025-09-16T23:45:59.157458Z	  featured: undefined
2025-09-16T23:45:59.15755Z	}
2025-09-16T23:45:59.157654Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-16T23:45:59.157957Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-16T23:45:59.158074Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:59.158182Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:59.158439Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:59.158511Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:59.158594Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:45:59.158709Z	Products fetch result: {
2025-09-16T23:45:59.158807Z	  totalProducts: 2,
2025-09-16T23:45:59.158895Z	  fetchedProducts: 2,
2025-09-16T23:45:59.158994Z	  firstProduct: {
2025-09-16T23:45:59.159081Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:45:59.159168Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:45:59.159274Z	    _type: 'product',
2025-09-16T23:45:59.15936Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:45:59.159417Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:45:59.159515Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:45:59.159715Z	    image: null,
2025-09-16T23:45:59.159809Z	    inventory: {
2025-09-16T23:45:59.159881Z	      inStock: true,
2025-09-16T23:45:59.160168Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:45:59.160264Z	      quantity: 0,
2025-09-16T23:45:59.160376Z	      status: 'in_stock',
2025-09-16T23:45:59.16055Z	      warehouse: null
2025-09-16T23:45:59.160666Z	    },
2025-09-16T23:45:59.160812Z	    isActive: true,
2025-09-16T23:45:59.160925Z	    isFeatured: false,
2025-09-16T23:45:59.161109Z	    isNew: false,
2025-09-16T23:45:59.161249Z	    partNumber: '99999',
2025-09-16T23:45:59.161386Z	    pricing: {
2025-09-16T23:45:59.16151Z	      currency: 'CNY',
2025-09-16T23:45:59.161645Z	      leadTime: null,
2025-09-16T23:45:59.161778Z	      moq: null,
2025-09-16T23:45:59.161895Z	      price: null,
2025-09-16T23:45:59.162033Z	      tiers: null
2025-09-16T23:45:59.162145Z	    },
2025-09-16T23:45:59.162278Z	    shortDescription: null,
2025-09-16T23:45:59.162416Z	    slug: '99999',
2025-09-16T23:45:59.162526Z	    title: '99999'
2025-09-16T23:45:59.162622Z	  }
2025-09-16T23:45:59.162759Z	}
2025-09-16T23:45:59.162875Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:59.162989Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-16T23:45:59.163166Z	Fetching products with query: 
2025-09-16T23:45:59.163256Z	    {
2025-09-16T23:45:59.163367Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:59.163531Z	        
2025-09-16T23:45:59.16361Z	    _id,
2025-09-16T23:45:59.163668Z	    _type,
2025-09-16T23:45:59.163848Z	    partNumber,
2025-09-16T23:45:59.16398Z	    "slug": slug.current,
2025-09-16T23:45:59.164046Z	    title,
2025-09-16T23:45:59.164209Z	    shortDescription,
2025-09-16T23:45:59.16427Z	    image,
2025-09-16T23:45:59.164367Z	    brand->{
2025-09-16T23:45:59.164504Z	      name,
2025-09-16T23:45:59.164567Z	      "slug": slug.current,
2025-09-16T23:45:59.164723Z	      logo
2025-09-16T23:45:59.164893Z	    },
2025-09-16T23:45:59.164971Z	    category->{
2025-09-16T23:45:59.165077Z	      name,
2025-09-16T23:45:59.165403Z	      "slug": slug.current
2025-09-16T23:45:59.165512Z	    },
2025-09-16T23:45:59.165806Z	    pricing{
2025-09-16T23:45:59.165914Z	      currency,
2025-09-16T23:45:59.166254Z	      tiers[]{
2025-09-16T23:45:59.16632Z	        quantity,
2025-09-16T23:45:59.166381Z	        price,
2025-09-16T23:45:59.16655Z	        unit
2025-09-16T23:45:59.166622Z	      },
2025-09-16T23:45:59.166887Z	      moq,
2025-09-16T23:45:59.166963Z	      leadTime,
2025-09-16T23:45:59.167083Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:59.167193Z	      "price": tiers[0].price,
2025-09-16T23:45:59.167298Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:59.167395Z	    },
2025-09-16T23:45:59.167494Z	    inventory{
2025-09-16T23:45:59.167584Z	      quantity,
2025-09-16T23:45:59.167909Z	      status,
2025-09-16T23:45:59.167993Z	      warehouse,
2025-09-16T23:45:59.168251Z	      lastUpdated,
2025-09-16T23:45:59.168404Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:59.168497Z	      "inStock": status == "in_stock",
2025-09-16T23:45:59.168656Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:59.168783Z	    },
2025-09-16T23:45:59.168908Z	    isActive,
2025-09-16T23:45:59.169063Z	    isFeatured,
2025-09-16T23:45:59.169184Z	    isNew,
2025-09-16T23:45:59.169284Z	    _createdAt,
2025-09-16T23:45:59.169451Z	    _updatedAt
2025-09-16T23:45:59.169577Z	  
2025-09-16T23:45:59.169744Z	      },
2025-09-16T23:45:59.16986Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-16T23:45:59.170054Z	    }
2025-09-16T23:45:59.170129Z	  
2025-09-16T23:45:59.17023Z	Query parameters: {
2025-09-16T23:45:59.170375Z	  limit: 8,
2025-09-16T23:45:59.170497Z	  offset: 0,
2025-09-16T23:45:59.170601Z	  category: undefined,
2025-09-16T23:45:59.170731Z	  brand: 'sanrex',
2025-09-16T23:45:59.170831Z	  featured: undefined
2025-09-16T23:45:59.170942Z	}
2025-09-16T23:45:59.171051Z	Fetching solutions with query: 
2025-09-16T23:45:59.171167Z	    {
2025-09-16T23:45:59.171293Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:59.171401Z	        
2025-09-16T23:45:59.171556Z	    _id,
2025-09-16T23:45:59.17165Z	    title,
2025-09-16T23:45:59.171765Z	    "slug": slug.current,
2025-09-16T23:45:59.171868Z	    summary,
2025-09-16T23:45:59.171972Z	    description,
2025-09-16T23:45:59.172066Z	    coverImage,
2025-09-16T23:45:59.172168Z	    primaryBrand->{
2025-09-16T23:45:59.172271Z	      _id,
2025-09-16T23:45:59.172368Z	      name,
2025-09-16T23:45:59.172455Z	      "slug": slug.current,
2025-09-16T23:45:59.172534Z	      logo
2025-09-16T23:45:59.172628Z	    },
2025-09-16T23:45:59.17275Z	    relatedBrands[]->{
2025-09-16T23:45:59.172857Z	      _id,
2025-09-16T23:45:59.172949Z	      name,
2025-09-16T23:45:59.173058Z	      "slug": slug.current,
2025-09-16T23:45:59.173167Z	      logo
2025-09-16T23:45:59.173366Z	    },
2025-09-16T23:45:59.173512Z	    targetMarket,
2025-09-16T23:45:59.173693Z	    complexity,
2025-09-16T23:45:59.173817Z	    publishedAt,
2025-09-16T23:45:59.173923Z	    isPublished,
2025-09-16T23:45:59.174027Z	    isFeatured,
2025-09-16T23:45:59.17412Z	    viewCount,
2025-09-16T23:45:59.174215Z	    _createdAt,
2025-09-16T23:45:59.174499Z	    _updatedAt
2025-09-16T23:45:59.174577Z	  
2025-09-16T23:45:59.174633Z	      },
2025-09-16T23:45:59.17492Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-16T23:45:59.175005Z	    }
2025-09-16T23:45:59.175063Z	  
2025-09-16T23:45:59.175249Z	Query parameters: {
2025-09-16T23:45:59.175317Z	  limit: 4,
2025-09-16T23:45:59.175372Z	  offset: 0,
2025-09-16T23:45:59.175529Z	  targetMarket: undefined,
2025-09-16T23:45:59.175599Z	  brand: 'sanrex',
2025-09-16T23:45:59.175655Z	  featured: undefined
2025-09-16T23:45:59.175928Z	}
2025-09-16T23:45:59.176007Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-16T23:45:59.176147Z	Fetching products with query: 
2025-09-16T23:45:59.176294Z	    {
2025-09-16T23:45:59.176365Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:59.176478Z	        
2025-09-16T23:45:59.176597Z	    _id,
2025-09-16T23:45:59.176721Z	    _type,
2025-09-16T23:45:59.176834Z	    partNumber,
2025-09-16T23:45:59.176942Z	    "slug": slug.current,
2025-09-16T23:45:59.177065Z	    title,
2025-09-16T23:45:59.177174Z	    shortDescription,
2025-09-16T23:45:59.177284Z	    image,
2025-09-16T23:45:59.177381Z	    brand->{
2025-09-16T23:45:59.17747Z	      name,
2025-09-16T23:45:59.177576Z	      "slug": slug.current,
2025-09-16T23:45:59.177691Z	      logo
2025-09-16T23:45:59.177798Z	    },
2025-09-16T23:45:59.177898Z	    category->{
2025-09-16T23:45:59.178016Z	      name,
2025-09-16T23:45:59.178167Z	      "slug": slug.current
2025-09-16T23:45:59.17828Z	    },
2025-09-16T23:45:59.178376Z	    pricing{
2025-09-16T23:45:59.178462Z	      currency,
2025-09-16T23:45:59.178779Z	      tiers[]{
2025-09-16T23:45:59.178883Z	        quantity,
2025-09-16T23:45:59.179026Z	        price,
2025-09-16T23:45:59.179114Z	        unit
2025-09-16T23:45:59.179492Z	      },
2025-09-16T23:45:59.179722Z	      moq,
2025-09-16T23:45:59.179984Z	      leadTime,
2025-09-16T23:45:59.180073Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:59.180203Z	      "price": tiers[0].price,
2025-09-16T23:45:59.180388Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:59.180471Z	    },
2025-09-16T23:45:59.180759Z	    inventory{
2025-09-16T23:45:59.180858Z	      quantity,
2025-09-16T23:45:59.181178Z	      status,
2025-09-16T23:45:59.181272Z	      warehouse,
2025-09-16T23:45:59.181524Z	      lastUpdated,
2025-09-16T23:45:59.18178Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:59.181864Z	      "inStock": status == "in_stock",
2025-09-16T23:45:59.182113Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:59.182195Z	    },
2025-09-16T23:45:59.182429Z	    isActive,
2025-09-16T23:45:59.182701Z	    isFeatured,
2025-09-16T23:45:59.182957Z	    isNew,
2025-09-16T23:45:59.183047Z	    _createdAt,
2025-09-16T23:45:59.183305Z	    _updatedAt
2025-09-16T23:45:59.183552Z	  
2025-09-16T23:45:59.183819Z	      },
2025-09-16T23:45:59.184076Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-16T23:45:59.184339Z	    }
2025-09-16T23:45:59.184425Z	  
2025-09-16T23:45:59.184668Z	Query parameters: {
2025-09-16T23:45:59.184941Z	  limit: 8,
2025-09-16T23:45:59.185183Z	  offset: 0,
2025-09-16T23:45:59.185271Z	  category: undefined,
2025-09-16T23:45:59.185522Z	  brand: 'sanrex',
2025-09-16T23:45:59.185605Z	  featured: undefined
2025-09-16T23:45:59.185862Z	}
2025-09-16T23:45:59.186124Z	Fetching solutions with query: 
2025-09-16T23:45:59.186211Z	    {
2025-09-16T23:45:59.18646Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:59.18675Z	        
2025-09-16T23:45:59.186834Z	    _id,
2025-09-16T23:45:59.187133Z	    title,
2025-09-16T23:45:59.187213Z	    "slug": slug.current,
2025-09-16T23:45:59.187453Z	    summary,
2025-09-16T23:45:59.187742Z	    description,
2025-09-16T23:45:59.18799Z	    coverImage,
2025-09-16T23:45:59.188087Z	    primaryBrand->{
2025-09-16T23:45:59.188341Z	      _id,
2025-09-16T23:45:59.188421Z	      name,
2025-09-16T23:45:59.656993Z	      "slug": slug.current,
2025-09-16T23:45:59.657382Z	      logo
2025-09-16T23:45:59.65755Z	    },
2025-09-16T23:45:59.657754Z	    relatedBrands[]->{
2025-09-16T23:45:59.657883Z	      _id,
2025-09-16T23:45:59.658Z	      name,
2025-09-16T23:45:59.658111Z	      "slug": slug.current,
2025-09-16T23:45:59.658236Z	      logo
2025-09-16T23:45:59.65834Z	    },
2025-09-16T23:45:59.658453Z	    targetMarket,
2025-09-16T23:45:59.658578Z	    complexity,
2025-09-16T23:45:59.658697Z	    publishedAt,
2025-09-16T23:45:59.658804Z	    isPublished,
2025-09-16T23:45:59.658915Z	    isFeatured,
2025-09-16T23:45:59.659021Z	    viewCount,
2025-09-16T23:45:59.659134Z	    _createdAt,
2025-09-16T23:45:59.659265Z	    _updatedAt
2025-09-16T23:45:59.659376Z	  
2025-09-16T23:45:59.659494Z	      },
2025-09-16T23:45:59.659623Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-16T23:45:59.659758Z	    }
2025-09-16T23:45:59.660048Z	  
2025-09-16T23:45:59.660206Z	Query parameters: {
2025-09-16T23:45:59.661691Z	  limit: 4,
2025-09-16T23:45:59.66348Z	  offset: 0,
2025-09-16T23:45:59.66365Z	  targetMarket: undefined,
2025-09-16T23:45:59.663784Z	  brand: 'sanrex',
2025-09-16T23:45:59.663878Z	  featured: undefined
2025-09-16T23:45:59.663976Z	}
2025-09-16T23:45:59.664066Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:59.66416Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:59.664253Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:59.664344Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:59.664484Z	✅ [getBrandData] Found brand: Sanrex
2025-09-16T23:45:59.664587Z	✅ [getBrandData] Found brand: Sanrex
2025-09-16T23:45:59.66469Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:45:59.664801Z	Fetching products with query: 
2025-09-16T23:45:59.665358Z	    {
2025-09-16T23:45:59.667459Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:59.668119Z	        
2025-09-16T23:45:59.668439Z	    _id,
2025-09-16T23:45:59.66908Z	    _type,
2025-09-16T23:45:59.669239Z	    partNumber,
2025-09-16T23:45:59.669364Z	    "slug": slug.current,
2025-09-16T23:45:59.669493Z	    title,
2025-09-16T23:45:59.669599Z	    shortDescription,
2025-09-16T23:45:59.669728Z	    image,
2025-09-16T23:45:59.669842Z	    brand->{
2025-09-16T23:45:59.669945Z	      name,
2025-09-16T23:45:59.670693Z	      "slug": slug.current,
2025-09-16T23:45:59.670902Z	      logo
2025-09-16T23:45:59.671018Z	    },
2025-09-16T23:45:59.671126Z	    category->{
2025-09-16T23:45:59.671227Z	      name,
2025-09-16T23:45:59.671342Z	      "slug": slug.current
2025-09-16T23:45:59.671467Z	    },
2025-09-16T23:45:59.671583Z	    pricing{
2025-09-16T23:45:59.671713Z	      currency,
2025-09-16T23:45:59.671827Z	      tiers[]{
2025-09-16T23:45:59.671927Z	        quantity,
2025-09-16T23:45:59.672028Z	        price,
2025-09-16T23:45:59.672149Z	        unit
2025-09-16T23:45:59.672262Z	      },
2025-09-16T23:45:59.672376Z	      moq,
2025-09-16T23:45:59.672506Z	      leadTime,
2025-09-16T23:45:59.672618Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:59.672754Z	      "price": tiers[0].price,
2025-09-16T23:45:59.672869Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:59.672974Z	    },
2025-09-16T23:45:59.673073Z	    inventory{
2025-09-16T23:45:59.673189Z	      quantity,
2025-09-16T23:45:59.673296Z	      status,
2025-09-16T23:45:59.673404Z	      warehouse,
2025-09-16T23:45:59.673535Z	      lastUpdated,
2025-09-16T23:45:59.673643Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:59.673773Z	      "inStock": status == "in_stock",
2025-09-16T23:45:59.673888Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:59.673998Z	    },
2025-09-16T23:45:59.674109Z	    isActive,
2025-09-16T23:45:59.676378Z	    isFeatured,
2025-09-16T23:45:59.676577Z	    isNew,
2025-09-16T23:45:59.67671Z	    _createdAt,
2025-09-16T23:45:59.676813Z	    _updatedAt
2025-09-16T23:45:59.676907Z	  
2025-09-16T23:45:59.676997Z	      },
2025-09-16T23:45:59.677085Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:45:59.677182Z	    }
2025-09-16T23:45:59.677272Z	  
2025-09-16T23:45:59.677357Z	Query parameters: {
2025-09-16T23:45:59.677468Z	  limit: 8,
2025-09-16T23:45:59.677562Z	  offset: 0,
2025-09-16T23:45:59.67765Z	  category: undefined,
2025-09-16T23:45:59.677773Z	  brand: 'Electronicon',
2025-09-16T23:45:59.677878Z	  featured: undefined
2025-09-16T23:45:59.677961Z	}
2025-09-16T23:45:59.67807Z	Fetching solutions with query: 
2025-09-16T23:45:59.678165Z	    {
2025-09-16T23:45:59.678257Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:59.678357Z	        
2025-09-16T23:45:59.678456Z	    _id,
2025-09-16T23:45:59.678546Z	    title,
2025-09-16T23:45:59.678639Z	    "slug": slug.current,
2025-09-16T23:45:59.682042Z	    summary,
2025-09-16T23:45:59.682205Z	    description,
2025-09-16T23:45:59.682343Z	    coverImage,
2025-09-16T23:45:59.682516Z	    primaryBrand->{
2025-09-16T23:45:59.682643Z	      _id,
2025-09-16T23:45:59.682786Z	      name,
2025-09-16T23:45:59.687992Z	      "slug": slug.current,
2025-09-16T23:45:59.688577Z	      logo
2025-09-16T23:45:59.688765Z	    },
2025-09-16T23:45:59.688881Z	    relatedBrands[]->{
2025-09-16T23:45:59.688986Z	      _id,
2025-09-16T23:45:59.689083Z	      name,
2025-09-16T23:45:59.689197Z	      "slug": slug.current,
2025-09-16T23:45:59.690315Z	      logo
2025-09-16T23:45:59.690742Z	    },
2025-09-16T23:45:59.691081Z	    targetMarket,
2025-09-16T23:45:59.691356Z	    complexity,
2025-09-16T23:45:59.691512Z	    publishedAt,
2025-09-16T23:45:59.691632Z	    isPublished,
2025-09-16T23:45:59.692272Z	    isFeatured,
2025-09-16T23:45:59.692773Z	    viewCount,
2025-09-16T23:45:59.695132Z	    _createdAt,
2025-09-16T23:45:59.695411Z	    _updatedAt
2025-09-16T23:45:59.695667Z	  
2025-09-16T23:45:59.695905Z	      },
2025-09-16T23:45:59.696101Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:45:59.69685Z	    }
2025-09-16T23:45:59.697175Z	  
2025-09-16T23:45:59.697889Z	Query parameters: {
2025-09-16T23:45:59.698126Z	  limit: 4,
2025-09-16T23:45:59.69829Z	  offset: 0,
2025-09-16T23:45:59.69841Z	  targetMarket: undefined,
2025-09-16T23:45:59.69853Z	  brand: 'Electronicon',
2025-09-16T23:45:59.698715Z	  featured: undefined
2025-09-16T23:45:59.699246Z	}
2025-09-16T23:45:59.699392Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:45:59.699553Z	Products fetch result: {
2025-09-16T23:45:59.699752Z	  totalProducts: 2,
2025-09-16T23:45:59.699895Z	  fetchedProducts: 2,
2025-09-16T23:45:59.699968Z	  firstProduct: {
2025-09-16T23:45:59.700025Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:45:59.700088Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:45:59.700146Z	    _type: 'product',
2025-09-16T23:45:59.700203Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:45:59.700283Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:45:59.700344Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:45:59.700412Z	    image: null,
2025-09-16T23:45:59.700495Z	    inventory: {
2025-09-16T23:45:59.700554Z	      inStock: true,
2025-09-16T23:45:59.70061Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:45:59.700712Z	      quantity: 0,
2025-09-16T23:45:59.700788Z	      status: 'in_stock',
2025-09-16T23:45:59.700845Z	      warehouse: null
2025-09-16T23:45:59.700905Z	    },
2025-09-16T23:45:59.700964Z	    isActive: true,
2025-09-16T23:45:59.701019Z	    isFeatured: false,
2025-09-16T23:45:59.701093Z	    isNew: false,
2025-09-16T23:45:59.701152Z	    partNumber: '99999',
2025-09-16T23:45:59.701209Z	    pricing: {
2025-09-16T23:45:59.70127Z	      currency: 'CNY',
2025-09-16T23:45:59.701337Z	      leadTime: null,
2025-09-16T23:45:59.701394Z	      moq: null,
2025-09-16T23:45:59.701477Z	      price: null,
2025-09-16T23:45:59.701566Z	      tiers: null
2025-09-16T23:45:59.701641Z	    },
2025-09-16T23:45:59.701716Z	    shortDescription: null,
2025-09-16T23:45:59.701775Z	    slug: '99999',
2025-09-16T23:45:59.701829Z	    title: '99999'
2025-09-16T23:45:59.701915Z	  }
2025-09-16T23:45:59.702108Z	}
2025-09-16T23:45:59.702173Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:59.702236Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:45:59.702296Z	Fetching products with query: 
2025-09-16T23:45:59.702352Z	    {
2025-09-16T23:45:59.702489Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:59.702566Z	        
2025-09-16T23:45:59.702633Z	    _id,
2025-09-16T23:45:59.702714Z	    _type,
2025-09-16T23:45:59.702775Z	    partNumber,
2025-09-16T23:45:59.702868Z	    "slug": slug.current,
2025-09-16T23:45:59.702954Z	    title,
2025-09-16T23:45:59.703012Z	    shortDescription,
2025-09-16T23:45:59.703075Z	    image,
2025-09-16T23:45:59.703135Z	    brand->{
2025-09-16T23:45:59.703201Z	      name,
2025-09-16T23:45:59.703321Z	      "slug": slug.current,
2025-09-16T23:45:59.703408Z	      logo
2025-09-16T23:45:59.703476Z	    },
2025-09-16T23:45:59.703533Z	    category->{
2025-09-16T23:45:59.703652Z	      name,
2025-09-16T23:45:59.703748Z	      "slug": slug.current
2025-09-16T23:45:59.703811Z	    },
2025-09-16T23:45:59.70388Z	    pricing{
2025-09-16T23:45:59.703939Z	      currency,
2025-09-16T23:45:59.723969Z	      tiers[]{
2025-09-16T23:45:59.724068Z	        quantity,
2025-09-16T23:45:59.724127Z	        price,
2025-09-16T23:45:59.724186Z	        unit
2025-09-16T23:45:59.724272Z	      },
2025-09-16T23:45:59.724503Z	      moq,
2025-09-16T23:45:59.733449Z	      leadTime,
2025-09-16T23:45:59.73381Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:59.734345Z	      "price": tiers[0].price,
2025-09-16T23:45:59.734607Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:59.734835Z	    },
2025-09-16T23:45:59.734949Z	    inventory{
2025-09-16T23:45:59.735037Z	      quantity,
2025-09-16T23:45:59.735146Z	      status,
2025-09-16T23:45:59.735313Z	      warehouse,
2025-09-16T23:45:59.73548Z	      lastUpdated,
2025-09-16T23:45:59.735641Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:59.736832Z	      "inStock": status == "in_stock",
2025-09-16T23:45:59.7377Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:59.73794Z	    },
2025-09-16T23:45:59.738119Z	    isActive,
2025-09-16T23:45:59.738263Z	    isFeatured,
2025-09-16T23:45:59.738375Z	    isNew,
2025-09-16T23:45:59.738496Z	    _createdAt,
2025-09-16T23:45:59.738637Z	    _updatedAt
2025-09-16T23:45:59.738786Z	  
2025-09-16T23:45:59.738904Z	      },
2025-09-16T23:45:59.73903Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:45:59.739156Z	    }
2025-09-16T23:45:59.739298Z	  
2025-09-16T23:45:59.739425Z	Query parameters: {
2025-09-16T23:45:59.73955Z	  limit: 8,
2025-09-16T23:45:59.73972Z	  offset: 0,
2025-09-16T23:45:59.739853Z	  category: undefined,
2025-09-16T23:45:59.739989Z	  brand: 'Electronicon',
2025-09-16T23:45:59.740098Z	  featured: undefined
2025-09-16T23:45:59.740218Z	}
2025-09-16T23:45:59.740324Z	Fetching solutions with query: 
2025-09-16T23:45:59.740431Z	    {
2025-09-16T23:45:59.740552Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:59.740729Z	        
2025-09-16T23:45:59.740854Z	    _id,
2025-09-16T23:45:59.740994Z	    title,
2025-09-16T23:45:59.741118Z	    "slug": slug.current,
2025-09-16T23:45:59.741226Z	    summary,
2025-09-16T23:45:59.74134Z	    description,
2025-09-16T23:45:59.74145Z	    coverImage,
2025-09-16T23:45:59.741575Z	    primaryBrand->{
2025-09-16T23:45:59.741756Z	      _id,
2025-09-16T23:45:59.74189Z	      name,
2025-09-16T23:45:59.742006Z	      "slug": slug.current,
2025-09-16T23:45:59.742125Z	      logo
2025-09-16T23:45:59.742234Z	    },
2025-09-16T23:45:59.742344Z	    relatedBrands[]->{
2025-09-16T23:45:59.742465Z	      _id,
2025-09-16T23:45:59.742576Z	      name,
2025-09-16T23:45:59.742736Z	      "slug": slug.current,
2025-09-16T23:45:59.742872Z	      logo
2025-09-16T23:45:59.743008Z	    },
2025-09-16T23:45:59.743125Z	    targetMarket,
2025-09-16T23:45:59.743247Z	    complexity,
2025-09-16T23:45:59.743357Z	    publishedAt,
2025-09-16T23:45:59.74346Z	    isPublished,
2025-09-16T23:45:59.743578Z	    isFeatured,
2025-09-16T23:45:59.743769Z	    viewCount,
2025-09-16T23:45:59.744229Z	    _createdAt,
2025-09-16T23:45:59.744452Z	    _updatedAt
2025-09-16T23:45:59.744583Z	  
2025-09-16T23:45:59.744738Z	      },
2025-09-16T23:45:59.744921Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:45:59.747967Z	    }
2025-09-16T23:45:59.750547Z	  
2025-09-16T23:45:59.750927Z	Query parameters: {
2025-09-16T23:45:59.751298Z	  limit: 4,
2025-09-16T23:45:59.751543Z	  offset: 0,
2025-09-16T23:45:59.752028Z	  targetMarket: undefined,
2025-09-16T23:45:59.753001Z	  brand: 'Electronicon',
2025-09-16T23:45:59.753151Z	  featured: undefined
2025-09-16T23:45:59.753298Z	}
2025-09-16T23:45:59.753419Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:45:59.753558Z	Products fetch result: {
2025-09-16T23:45:59.753711Z	  totalProducts: 2,
2025-09-16T23:45:59.753832Z	  fetchedProducts: 2,
2025-09-16T23:45:59.753943Z	  firstProduct: {
2025-09-16T23:45:59.754076Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:45:59.754191Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:45:59.754307Z	    _type: 'product',
2025-09-16T23:45:59.754432Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:45:59.754548Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:45:59.754729Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:45:59.754856Z	    image: null,
2025-09-16T23:45:59.754963Z	    inventory: {
2025-09-16T23:45:59.755063Z	      inStock: true,
2025-09-16T23:45:59.755176Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:45:59.755298Z	      quantity: 0,
2025-09-16T23:45:59.75541Z	      status: 'in_stock',
2025-09-16T23:45:59.755522Z	      warehouse: null
2025-09-16T23:45:59.755635Z	    },
2025-09-16T23:45:59.755771Z	    isActive: true,
2025-09-16T23:45:59.755893Z	    isFeatured: false,
2025-09-16T23:45:59.755993Z	    isNew: false,
2025-09-16T23:45:59.756096Z	    partNumber: '99999',
2025-09-16T23:45:59.756231Z	    pricing: {
2025-09-16T23:45:59.756351Z	      currency: 'CNY',
2025-09-16T23:45:59.756475Z	      leadTime: null,
2025-09-16T23:45:59.756602Z	      moq: null,
2025-09-16T23:45:59.756773Z	      price: null,
2025-09-16T23:45:59.756888Z	      tiers: null
2025-09-16T23:45:59.757004Z	    },
2025-09-16T23:45:59.757162Z	    shortDescription: null,
2025-09-16T23:45:59.757382Z	    slug: '99999',
2025-09-16T23:45:59.757501Z	    title: '99999'
2025-09-16T23:45:59.757608Z	  }
2025-09-16T23:45:59.757852Z	}
2025-09-16T23:45:59.758049Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:59.758248Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-16T23:45:59.75845Z	Fetching products with query: 
2025-09-16T23:45:59.758858Z	    {
2025-09-16T23:45:59.760928Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:59.761243Z	        
2025-09-16T23:45:59.761455Z	    _id,
2025-09-16T23:45:59.761764Z	    _type,
2025-09-16T23:45:59.761913Z	    partNumber,
2025-09-16T23:45:59.762103Z	    "slug": slug.current,
2025-09-16T23:45:59.762338Z	    title,
2025-09-16T23:45:59.762822Z	    shortDescription,
2025-09-16T23:45:59.764866Z	    image,
2025-09-16T23:45:59.765017Z	    brand->{
2025-09-16T23:45:59.765278Z	      name,
2025-09-16T23:45:59.765468Z	      "slug": slug.current,
2025-09-16T23:45:59.765637Z	      logo
2025-09-16T23:45:59.766015Z	    },
2025-09-16T23:45:59.767584Z	    category->{
2025-09-16T23:45:59.824952Z	      name,
2025-09-16T23:45:59.825388Z	      "slug": slug.current
2025-09-16T23:45:59.826061Z	    },
2025-09-16T23:45:59.826347Z	    pricing{
2025-09-16T23:45:59.82653Z	      currency,
2025-09-16T23:45:59.826785Z	      tiers[]{
2025-09-16T23:45:59.826949Z	        quantity,
2025-09-16T23:45:59.827121Z	        price,
2025-09-16T23:45:59.827416Z	        unit
2025-09-16T23:45:59.827663Z	      },
2025-09-16T23:45:59.827827Z	      moq,
2025-09-16T23:45:59.827966Z	      leadTime,
2025-09-16T23:45:59.829244Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:59.829438Z	      "price": tiers[0].price,
2025-09-16T23:45:59.829598Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:59.829781Z	    },
2025-09-16T23:45:59.829954Z	    inventory{
2025-09-16T23:45:59.830145Z	      quantity,
2025-09-16T23:45:59.830286Z	      status,
2025-09-16T23:45:59.830501Z	      warehouse,
2025-09-16T23:45:59.831515Z	      lastUpdated,
2025-09-16T23:45:59.83173Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:59.831897Z	      "inStock": status == "in_stock",
2025-09-16T23:45:59.832053Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:59.832172Z	    },
2025-09-16T23:45:59.832277Z	    isActive,
2025-09-16T23:45:59.83675Z	    isFeatured,
2025-09-16T23:45:59.838383Z	    isNew,
2025-09-16T23:45:59.838506Z	    _createdAt,
2025-09-16T23:45:59.838602Z	    _updatedAt
2025-09-16T23:45:59.838739Z	  
2025-09-16T23:45:59.838835Z	      },
2025-09-16T23:45:59.840401Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-16T23:45:59.840575Z	    }
2025-09-16T23:45:59.84072Z	  
2025-09-16T23:45:59.840843Z	Query parameters: {
2025-09-16T23:45:59.840952Z	  limit: 8,
2025-09-16T23:45:59.841048Z	  offset: 0,
2025-09-16T23:45:59.84117Z	  category: undefined,
2025-09-16T23:45:59.841269Z	  brand: 'sanrex',
2025-09-16T23:45:59.841363Z	  featured: undefined
2025-09-16T23:45:59.841471Z	}
2025-09-16T23:45:59.841639Z	Fetching solutions with query: 
2025-09-16T23:45:59.841834Z	    {
2025-09-16T23:45:59.841974Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:59.842111Z	        
2025-09-16T23:45:59.84221Z	    _id,
2025-09-16T23:45:59.842305Z	    title,
2025-09-16T23:45:59.842401Z	    "slug": slug.current,
2025-09-16T23:45:59.842487Z	    summary,
2025-09-16T23:45:59.842576Z	    description,
2025-09-16T23:45:59.842726Z	    coverImage,
2025-09-16T23:45:59.842832Z	    primaryBrand->{
2025-09-16T23:45:59.842921Z	      _id,
2025-09-16T23:45:59.843022Z	      name,
2025-09-16T23:45:59.843113Z	      "slug": slug.current,
2025-09-16T23:45:59.843203Z	      logo
2025-09-16T23:45:59.843317Z	    },
2025-09-16T23:45:59.843411Z	    relatedBrands[]->{
2025-09-16T23:45:59.843503Z	      _id,
2025-09-16T23:45:59.843594Z	      name,
2025-09-16T23:45:59.843713Z	      "slug": slug.current,
2025-09-16T23:45:59.843817Z	      logo
2025-09-16T23:45:59.843935Z	    },
2025-09-16T23:45:59.844022Z	    targetMarket,
2025-09-16T23:45:59.844115Z	    complexity,
2025-09-16T23:45:59.844206Z	    publishedAt,
2025-09-16T23:45:59.844299Z	    isPublished,
2025-09-16T23:45:59.844389Z	    isFeatured,
2025-09-16T23:45:59.844504Z	    viewCount,
2025-09-16T23:45:59.844601Z	    _createdAt,
2025-09-16T23:45:59.844716Z	    _updatedAt
2025-09-16T23:45:59.844824Z	  
2025-09-16T23:45:59.844927Z	      },
2025-09-16T23:45:59.845027Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-16T23:45:59.845148Z	    }
2025-09-16T23:45:59.84524Z	  
2025-09-16T23:45:59.845329Z	Query parameters: {
2025-09-16T23:45:59.845433Z	  limit: 4,
2025-09-16T23:45:59.845523Z	  offset: 0,
2025-09-16T23:45:59.845617Z	  targetMarket: undefined,
2025-09-16T23:45:59.845762Z	  brand: 'sanrex',
2025-09-16T23:45:59.845961Z	  featured: undefined
2025-09-16T23:45:59.84618Z	}
2025-09-16T23:45:59.846352Z	✅ [getBrandData] Found brand: Sanrex
2025-09-16T23:45:59.846576Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:59.846793Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:59.846967Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-16T23:45:59.847144Z	Fetching products with query: 
2025-09-16T23:45:59.847355Z	    {
2025-09-16T23:45:59.847483Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:59.847591Z	        
2025-09-16T23:45:59.847701Z	    _id,
2025-09-16T23:45:59.847788Z	    _type,
2025-09-16T23:45:59.847891Z	    partNumber,
2025-09-16T23:45:59.847998Z	    "slug": slug.current,
2025-09-16T23:45:59.848208Z	    title,
2025-09-16T23:45:59.848346Z	    shortDescription,
2025-09-16T23:45:59.851838Z	    image,
2025-09-16T23:45:59.852018Z	    brand->{
2025-09-16T23:45:59.852119Z	      name,
2025-09-16T23:45:59.852223Z	      "slug": slug.current,
2025-09-16T23:45:59.852314Z	      logo
2025-09-16T23:45:59.852397Z	    },
2025-09-16T23:45:59.852524Z	    category->{
2025-09-16T23:45:59.852614Z	      name,
2025-09-16T23:45:59.852731Z	      "slug": slug.current
2025-09-16T23:45:59.852837Z	    },
2025-09-16T23:45:59.852924Z	    pricing{
2025-09-16T23:45:59.853022Z	      currency,
2025-09-16T23:45:59.853136Z	      tiers[]{
2025-09-16T23:45:59.853218Z	        quantity,
2025-09-16T23:45:59.853303Z	        price,
2025-09-16T23:45:59.85339Z	        unit
2025-09-16T23:45:59.853497Z	      },
2025-09-16T23:45:59.853593Z	      moq,
2025-09-16T23:45:59.853723Z	      leadTime,
2025-09-16T23:45:59.853884Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:59.85407Z	      "price": tiers[0].price,
2025-09-16T23:45:59.8542Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:59.854312Z	    },
2025-09-16T23:45:59.856907Z	    inventory{
2025-09-16T23:45:59.857042Z	      quantity,
2025-09-16T23:45:59.85724Z	      status,
2025-09-16T23:45:59.85742Z	      warehouse,
2025-09-16T23:45:59.857565Z	      lastUpdated,
2025-09-16T23:45:59.857777Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:59.85794Z	      "inStock": status == "in_stock",
2025-09-16T23:45:59.858056Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:59.858197Z	    },
2025-09-16T23:45:59.858319Z	    isActive,
2025-09-16T23:45:59.858616Z	    isFeatured,
2025-09-16T23:45:59.858844Z	    isNew,
2025-09-16T23:45:59.859008Z	    _createdAt,
2025-09-16T23:45:59.859158Z	    _updatedAt
2025-09-16T23:45:59.859411Z	  
2025-09-16T23:45:59.859887Z	      },
2025-09-16T23:45:59.860046Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-16T23:45:59.860192Z	    }
2025-09-16T23:45:59.860316Z	  
2025-09-16T23:45:59.860447Z	Query parameters: {
2025-09-16T23:45:59.860578Z	  limit: 8,
2025-09-16T23:45:59.860728Z	  offset: 0,
2025-09-16T23:45:59.860861Z	  category: undefined,
2025-09-16T23:45:59.860978Z	  brand: 'sanrex',
2025-09-16T23:45:59.86111Z	  featured: undefined
2025-09-16T23:45:59.861314Z	}
2025-09-16T23:45:59.861548Z	Fetching solutions with query: 
2025-09-16T23:45:59.86179Z	    {
2025-09-16T23:45:59.862008Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:59.862243Z	        
2025-09-16T23:45:59.862668Z	    _id,
2025-09-16T23:45:59.863926Z	    title,
2025-09-16T23:45:59.865653Z	    "slug": slug.current,
2025-09-16T23:45:59.866053Z	    summary,
2025-09-16T23:45:59.866189Z	    description,
2025-09-16T23:45:59.866913Z	    coverImage,
2025-09-16T23:45:59.867158Z	    primaryBrand->{
2025-09-16T23:45:59.867331Z	      _id,
2025-09-16T23:45:59.867561Z	      name,
2025-09-16T23:45:59.867691Z	      "slug": slug.current,
2025-09-16T23:45:59.867866Z	      logo
2025-09-16T23:45:59.868074Z	    },
2025-09-16T23:45:59.86826Z	    relatedBrands[]->{
2025-09-16T23:45:59.868394Z	      _id,
2025-09-16T23:45:59.868516Z	      name,
2025-09-16T23:45:59.868618Z	      "slug": slug.current,
2025-09-16T23:45:59.868744Z	      logo
2025-09-16T23:45:59.868884Z	    },
2025-09-16T23:45:59.869Z	    targetMarket,
2025-09-16T23:45:59.869107Z	    complexity,
2025-09-16T23:45:59.869213Z	    publishedAt,
2025-09-16T23:45:59.869307Z	    isPublished,
2025-09-16T23:45:59.869431Z	    isFeatured,
2025-09-16T23:45:59.869548Z	    viewCount,
2025-09-16T23:45:59.869666Z	    _createdAt,
2025-09-16T23:45:59.869844Z	    _updatedAt
2025-09-16T23:45:59.869955Z	  
2025-09-16T23:45:59.87006Z	      },
2025-09-16T23:45:59.870176Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-16T23:45:59.870284Z	    }
2025-09-16T23:45:59.870407Z	  
2025-09-16T23:45:59.870526Z	Query parameters: {
2025-09-16T23:45:59.870648Z	  limit: 4,
2025-09-16T23:45:59.870781Z	  offset: 0,
2025-09-16T23:45:59.870896Z	  targetMarket: undefined,
2025-09-16T23:45:59.871009Z	  brand: 'sanrex',
2025-09-16T23:45:59.871117Z	  featured: undefined
2025-09-16T23:45:59.871222Z	}
2025-09-16T23:45:59.871333Z	✅ [getBrandData] Found brand: Sanrex
2025-09-16T23:45:59.871462Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:59.871581Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:59.871757Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-16T23:45:59.871887Z	Fetching products with query: 
2025-09-16T23:45:59.871999Z	    {
2025-09-16T23:45:59.872222Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:59.872464Z	        
2025-09-16T23:45:59.872593Z	    _id,
2025-09-16T23:45:59.872737Z	    _type,
2025-09-16T23:45:59.8729Z	    partNumber,
2025-09-16T23:45:59.873016Z	    "slug": slug.current,
2025-09-16T23:45:59.873123Z	    title,
2025-09-16T23:45:59.873241Z	    shortDescription,
2025-09-16T23:45:59.873351Z	    image,
2025-09-16T23:45:59.873493Z	    brand->{
2025-09-16T23:45:59.873626Z	      name,
2025-09-16T23:45:59.873761Z	      "slug": slug.current,
2025-09-16T23:45:59.873972Z	      logo
2025-09-16T23:45:59.87413Z	    },
2025-09-16T23:45:59.874228Z	    category->{
2025-09-16T23:45:59.874317Z	      name,
2025-09-16T23:45:59.874412Z	      "slug": slug.current
2025-09-16T23:45:59.874519Z	    },
2025-09-16T23:45:59.874644Z	    pricing{
2025-09-16T23:45:59.874788Z	      currency,
2025-09-16T23:45:59.874908Z	      tiers[]{
2025-09-16T23:45:59.875013Z	        quantity,
2025-09-16T23:45:59.875289Z	        price,
2025-09-16T23:45:59.875543Z	        unit
2025-09-16T23:45:59.875915Z	      },
2025-09-16T23:45:59.876103Z	      moq,
2025-09-16T23:45:59.876204Z	      leadTime,
2025-09-16T23:45:59.876277Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:59.876337Z	      "price": tiers[0].price,
2025-09-16T23:45:59.876402Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:59.876457Z	    },
2025-09-16T23:45:59.87651Z	    inventory{
2025-09-16T23:45:59.876565Z	      quantity,
2025-09-16T23:45:59.876617Z	      status,
2025-09-16T23:45:59.923796Z	      warehouse,
2025-09-16T23:45:59.924776Z	      lastUpdated,
2025-09-16T23:45:59.925092Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:59.925446Z	      "inStock": status == "in_stock",
2025-09-16T23:45:59.925584Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:59.925725Z	    },
2025-09-16T23:45:59.925838Z	    isActive,
2025-09-16T23:45:59.925944Z	    isFeatured,
2025-09-16T23:45:59.926052Z	    isNew,
2025-09-16T23:45:59.926156Z	    _createdAt,
2025-09-16T23:45:59.926294Z	    _updatedAt
2025-09-16T23:45:59.926402Z	  
2025-09-16T23:45:59.926512Z	      },
2025-09-16T23:45:59.926619Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-16T23:45:59.926784Z	    }
2025-09-16T23:45:59.926892Z	  
2025-09-16T23:45:59.927007Z	Query parameters: {
2025-09-16T23:45:59.928922Z	  limit: 8,
2025-09-16T23:45:59.929109Z	  offset: 0,
2025-09-16T23:45:59.929225Z	  category: undefined,
2025-09-16T23:45:59.929333Z	  brand: '英飞凌',
2025-09-16T23:45:59.929451Z	  featured: undefined
2025-09-16T23:45:59.929549Z	}
2025-09-16T23:45:59.929662Z	Fetching solutions with query: 
2025-09-16T23:45:59.929789Z	    {
2025-09-16T23:45:59.929892Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:59.930005Z	        
2025-09-16T23:45:59.930109Z	    _id,
2025-09-16T23:45:59.930209Z	    title,
2025-09-16T23:45:59.930867Z	    "slug": slug.current,
2025-09-16T23:45:59.931203Z	    summary,
2025-09-16T23:45:59.931394Z	    description,
2025-09-16T23:45:59.931518Z	    coverImage,
2025-09-16T23:45:59.931915Z	    primaryBrand->{
2025-09-16T23:45:59.932074Z	      _id,
2025-09-16T23:45:59.932196Z	      name,
2025-09-16T23:45:59.932306Z	      "slug": slug.current,
2025-09-16T23:45:59.932414Z	      logo
2025-09-16T23:45:59.932527Z	    },
2025-09-16T23:45:59.932647Z	    relatedBrands[]->{
2025-09-16T23:45:59.932781Z	      _id,
2025-09-16T23:45:59.932882Z	      name,
2025-09-16T23:45:59.932984Z	      "slug": slug.current,
2025-09-16T23:45:59.933087Z	      logo
2025-09-16T23:45:59.933187Z	    },
2025-09-16T23:45:59.933293Z	    targetMarket,
2025-09-16T23:45:59.933411Z	    complexity,
2025-09-16T23:45:59.933515Z	    publishedAt,
2025-09-16T23:45:59.933619Z	    isPublished,
2025-09-16T23:45:59.933752Z	    isFeatured,
2025-09-16T23:45:59.933864Z	    viewCount,
2025-09-16T23:45:59.933958Z	    _createdAt,
2025-09-16T23:45:59.934053Z	    _updatedAt
2025-09-16T23:45:59.934161Z	  
2025-09-16T23:45:59.93429Z	      },
2025-09-16T23:45:59.934443Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-16T23:45:59.934551Z	    }
2025-09-16T23:45:59.934646Z	  
2025-09-16T23:45:59.934759Z	Query parameters: {
2025-09-16T23:45:59.934844Z	  limit: 4,
2025-09-16T23:45:59.934926Z	  offset: 0,
2025-09-16T23:45:59.935005Z	  targetMarket: undefined,
2025-09-16T23:45:59.935097Z	  brand: '英飞凌',
2025-09-16T23:45:59.935188Z	  featured: undefined
2025-09-16T23:45:59.935276Z	}
2025-09-16T23:45:59.935364Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-16T23:45:59.935456Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:45:59.935549Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:45:59.935639Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:45:59.935751Z	Fetching products with query: 
2025-09-16T23:45:59.935843Z	    {
2025-09-16T23:45:59.93593Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:59.936019Z	        
2025-09-16T23:45:59.936104Z	    _id,
2025-09-16T23:45:59.937545Z	    _type,
2025-09-16T23:45:59.938138Z	    partNumber,
2025-09-16T23:45:59.938742Z	    "slug": slug.current,
2025-09-16T23:45:59.938924Z	    title,
2025-09-16T23:45:59.939056Z	    shortDescription,
2025-09-16T23:45:59.939169Z	    image,
2025-09-16T23:45:59.939307Z	    brand->{
2025-09-16T23:45:59.939419Z	      name,
2025-09-16T23:45:59.939526Z	      "slug": slug.current,
2025-09-16T23:45:59.939638Z	      logo
2025-09-16T23:45:59.939776Z	    },
2025-09-16T23:45:59.939907Z	    category->{
2025-09-16T23:45:59.940015Z	      name,
2025-09-16T23:45:59.940114Z	      "slug": slug.current
2025-09-16T23:45:59.940213Z	    },
2025-09-16T23:45:59.940328Z	    pricing{
2025-09-16T23:45:59.940436Z	      currency,
2025-09-16T23:45:59.940539Z	      tiers[]{
2025-09-16T23:45:59.940656Z	        quantity,
2025-09-16T23:45:59.940849Z	        price,
2025-09-16T23:45:59.940977Z	        unit
2025-09-16T23:45:59.941109Z	      },
2025-09-16T23:45:59.941264Z	      moq,
2025-09-16T23:45:59.941415Z	      leadTime,
2025-09-16T23:45:59.941581Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:59.941766Z	      "price": tiers[0].price,
2025-09-16T23:45:59.94193Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:59.942089Z	    },
2025-09-16T23:45:59.94226Z	    inventory{
2025-09-16T23:45:59.942426Z	      quantity,
2025-09-16T23:45:59.942566Z	      status,
2025-09-16T23:45:59.942739Z	      warehouse,
2025-09-16T23:45:59.942919Z	      lastUpdated,
2025-09-16T23:45:59.943657Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:59.944097Z	      "inStock": status == "in_stock",
2025-09-16T23:45:59.944251Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:59.94613Z	    },
2025-09-16T23:45:59.946248Z	    isActive,
2025-09-16T23:45:59.946693Z	    isFeatured,
2025-09-16T23:45:59.946834Z	    isNew,
2025-09-16T23:45:59.946941Z	    _createdAt,
2025-09-16T23:45:59.947042Z	    _updatedAt
2025-09-16T23:45:59.947137Z	  
2025-09-16T23:45:59.947246Z	      },
2025-09-16T23:45:59.947708Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:45:59.948251Z	    }
2025-09-16T23:45:59.94837Z	  
2025-09-16T23:45:59.948482Z	Query parameters: {
2025-09-16T23:45:59.948571Z	  limit: 8,
2025-09-16T23:45:59.948725Z	  offset: 0,
2025-09-16T23:45:59.948871Z	  category: undefined,
2025-09-16T23:45:59.948971Z	  brand: 'Electronicon',
2025-09-16T23:45:59.949066Z	  featured: undefined
2025-09-16T23:45:59.949514Z	}
2025-09-16T23:45:59.949705Z	Fetching solutions with query: 
2025-09-16T23:45:59.949907Z	    {
2025-09-16T23:45:59.950045Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:45:59.950175Z	        
2025-09-16T23:45:59.950289Z	    _id,
2025-09-16T23:45:59.950407Z	    title,
2025-09-16T23:45:59.950525Z	    "slug": slug.current,
2025-09-16T23:45:59.950641Z	    summary,
2025-09-16T23:45:59.950782Z	    description,
2025-09-16T23:45:59.950889Z	    coverImage,
2025-09-16T23:45:59.950992Z	    primaryBrand->{
2025-09-16T23:45:59.951139Z	      _id,
2025-09-16T23:45:59.951251Z	      name,
2025-09-16T23:45:59.95139Z	      "slug": slug.current,
2025-09-16T23:45:59.951552Z	      logo
2025-09-16T23:45:59.951724Z	    },
2025-09-16T23:45:59.951865Z	    relatedBrands[]->{
2025-09-16T23:45:59.95196Z	      _id,
2025-09-16T23:45:59.952047Z	      name,
2025-09-16T23:45:59.952131Z	      "slug": slug.current,
2025-09-16T23:45:59.952253Z	      logo
2025-09-16T23:45:59.952426Z	    },
2025-09-16T23:45:59.953078Z	    targetMarket,
2025-09-16T23:45:59.953222Z	    complexity,
2025-09-16T23:45:59.953327Z	    publishedAt,
2025-09-16T23:45:59.95343Z	    isPublished,
2025-09-16T23:45:59.953537Z	    isFeatured,
2025-09-16T23:45:59.95365Z	    viewCount,
2025-09-16T23:45:59.953772Z	    _createdAt,
2025-09-16T23:45:59.953978Z	    _updatedAt
2025-09-16T23:45:59.954088Z	  
2025-09-16T23:45:59.954183Z	      },
2025-09-16T23:45:59.954322Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:45:59.954414Z	    }
2025-09-16T23:45:59.954654Z	  
2025-09-16T23:45:59.95509Z	Query parameters: {
2025-09-16T23:45:59.955337Z	  limit: 4,
2025-09-16T23:45:59.955476Z	  offset: 0,
2025-09-16T23:45:59.955567Z	  targetMarket: undefined,
2025-09-16T23:45:59.955696Z	  brand: 'Electronicon',
2025-09-16T23:45:59.955808Z	  featured: undefined
2025-09-16T23:45:59.955898Z	}
2025-09-16T23:45:59.95671Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:45:59.957079Z	Fetching products with query: 
2025-09-16T23:45:59.958149Z	    {
2025-09-16T23:45:59.958711Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:45:59.959019Z	        
2025-09-16T23:45:59.959234Z	    _id,
2025-09-16T23:45:59.959523Z	    _type,
2025-09-16T23:45:59.959841Z	    partNumber,
2025-09-16T23:45:59.960047Z	    "slug": slug.current,
2025-09-16T23:45:59.96033Z	    title,
2025-09-16T23:45:59.961145Z	    shortDescription,
2025-09-16T23:45:59.961246Z	    image,
2025-09-16T23:45:59.961339Z	    brand->{
2025-09-16T23:45:59.963109Z	      name,
2025-09-16T23:45:59.963257Z	      "slug": slug.current,
2025-09-16T23:45:59.963356Z	      logo
2025-09-16T23:45:59.963457Z	    },
2025-09-16T23:45:59.963812Z	    category->{
2025-09-16T23:45:59.964137Z	      name,
2025-09-16T23:45:59.964484Z	      "slug": slug.current
2025-09-16T23:45:59.964598Z	    },
2025-09-16T23:45:59.964906Z	    pricing{
2025-09-16T23:45:59.965201Z	      currency,
2025-09-16T23:45:59.965575Z	      tiers[]{
2025-09-16T23:45:59.966246Z	        quantity,
2025-09-16T23:45:59.966371Z	        price,
2025-09-16T23:45:59.966823Z	        unit
2025-09-16T23:45:59.966965Z	      },
2025-09-16T23:45:59.967265Z	      moq,
2025-09-16T23:45:59.967394Z	      leadTime,
2025-09-16T23:45:59.967528Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:45:59.967631Z	      "price": tiers[0].price,
2025-09-16T23:45:59.967775Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:45:59.967868Z	    },
2025-09-16T23:45:59.967953Z	    inventory{
2025-09-16T23:45:59.968041Z	      quantity,
2025-09-16T23:45:59.968128Z	      status,
2025-09-16T23:45:59.968214Z	      warehouse,
2025-09-16T23:45:59.968299Z	      lastUpdated,
2025-09-16T23:45:59.968386Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:45:59.968481Z	      "inStock": status == "in_stock",
2025-09-16T23:45:59.968564Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:45:59.968641Z	    },
2025-09-16T23:45:59.968739Z	    isActive,
2025-09-16T23:45:59.973259Z	    isFeatured,
2025-09-16T23:45:59.973397Z	    isNew,
2025-09-16T23:45:59.973515Z	    _createdAt,
2025-09-16T23:45:59.973612Z	    _updatedAt
2025-09-16T23:45:59.973727Z	  
2025-09-16T23:45:59.97383Z	      },
2025-09-16T23:45:59.973932Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:45:59.9746Z	    }
2025-09-16T23:45:59.97474Z	  
2025-09-16T23:45:59.974858Z	Query parameters: {
2025-09-16T23:45:59.974964Z	  limit: 8,
2025-09-16T23:45:59.975066Z	  offset: 0,
2025-09-16T23:45:59.975531Z	  category: undefined,
2025-09-16T23:45:59.975826Z	  brand: 'Electronicon',
2025-09-16T23:45:59.976106Z	  featured: undefined
2025-09-16T23:45:59.976282Z	}
2025-09-16T23:45:59.976412Z	Fetching solutions with query: 
2025-09-16T23:46:00.024705Z	    {
2025-09-16T23:46:00.024884Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.025004Z	        
2025-09-16T23:46:00.025109Z	    _id,
2025-09-16T23:46:00.025205Z	    title,
2025-09-16T23:46:00.025295Z	    "slug": slug.current,
2025-09-16T23:46:00.026054Z	    summary,
2025-09-16T23:46:00.026278Z	    description,
2025-09-16T23:46:00.026496Z	    coverImage,
2025-09-16T23:46:00.026611Z	    primaryBrand->{
2025-09-16T23:46:00.026694Z	      _id,
2025-09-16T23:46:00.026785Z	      name,
2025-09-16T23:46:00.026843Z	      "slug": slug.current,
2025-09-16T23:46:00.026901Z	      logo
2025-09-16T23:46:00.026965Z	    },
2025-09-16T23:46:00.02707Z	    relatedBrands[]->{
2025-09-16T23:46:00.027168Z	      _id,
2025-09-16T23:46:00.027265Z	      name,
2025-09-16T23:46:00.027338Z	      "slug": slug.current,
2025-09-16T23:46:00.027406Z	      logo
2025-09-16T23:46:00.027462Z	    },
2025-09-16T23:46:00.027531Z	    targetMarket,
2025-09-16T23:46:00.027705Z	    complexity,
2025-09-16T23:46:00.028052Z	    publishedAt,
2025-09-16T23:46:00.028285Z	    isPublished,
2025-09-16T23:46:00.028395Z	    isFeatured,
2025-09-16T23:46:00.028458Z	    viewCount,
2025-09-16T23:46:00.028795Z	    _createdAt,
2025-09-16T23:46:00.029037Z	    _updatedAt
2025-09-16T23:46:00.029457Z	  
2025-09-16T23:46:00.029617Z	      },
2025-09-16T23:46:00.029768Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:46:00.030053Z	    }
2025-09-16T23:46:00.030378Z	  
2025-09-16T23:46:00.030602Z	Query parameters: {
2025-09-16T23:46:00.030789Z	  limit: 4,
2025-09-16T23:46:00.030898Z	  offset: 0,
2025-09-16T23:46:00.03099Z	  targetMarket: undefined,
2025-09-16T23:46:00.031312Z	  brand: 'Electronicon',
2025-09-16T23:46:00.03223Z	  featured: undefined
2025-09-16T23:46:00.032433Z	}
2025-09-16T23:46:00.032604Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:46:00.032813Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:46:00.033206Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.033597Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.034066Z	Products fetch result: {
2025-09-16T23:46:00.034234Z	  totalProducts: 2,
2025-09-16T23:46:00.034352Z	  fetchedProducts: 2,
2025-09-16T23:46:00.034698Z	  firstProduct: {
2025-09-16T23:46:00.034929Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:46:00.035053Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:46:00.035181Z	    _type: 'product',
2025-09-16T23:46:00.035391Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:46:00.035687Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:46:00.035846Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:46:00.035968Z	    image: null,
2025-09-16T23:46:00.036086Z	    inventory: {
2025-09-16T23:46:00.0362Z	      inStock: true,
2025-09-16T23:46:00.036356Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:46:00.036505Z	      quantity: 0,
2025-09-16T23:46:00.036645Z	      status: 'in_stock',
2025-09-16T23:46:00.036812Z	      warehouse: null
2025-09-16T23:46:00.036937Z	    },
2025-09-16T23:46:00.038643Z	    isActive: true,
2025-09-16T23:46:00.039031Z	    isFeatured: false,
2025-09-16T23:46:00.0392Z	    isNew: false,
2025-09-16T23:46:00.039519Z	    partNumber: '99999',
2025-09-16T23:46:00.039881Z	    pricing: {
2025-09-16T23:46:00.040403Z	      currency: 'CNY',
2025-09-16T23:46:00.040549Z	      leadTime: null,
2025-09-16T23:46:00.040647Z	      moq: null,
2025-09-16T23:46:00.041569Z	      price: null,
2025-09-16T23:46:00.042326Z	      tiers: null
2025-09-16T23:46:00.042474Z	    },
2025-09-16T23:46:00.04262Z	    shortDescription: null,
2025-09-16T23:46:00.042839Z	    slug: '99999',
2025-09-16T23:46:00.042961Z	    title: '99999'
2025-09-16T23:46:00.043926Z	  }
2025-09-16T23:46:00.044072Z	}
2025-09-16T23:46:00.044223Z	Products fetch result: {
2025-09-16T23:46:00.044405Z	  totalProducts: 2,
2025-09-16T23:46:00.044559Z	  fetchedProducts: 2,
2025-09-16T23:46:00.044748Z	  firstProduct: {
2025-09-16T23:46:00.044868Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:46:00.044978Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:46:00.045079Z	    _type: 'product',
2025-09-16T23:46:00.045179Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:46:00.045279Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:46:00.045421Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:46:00.045584Z	    image: null,
2025-09-16T23:46:00.04573Z	    inventory: {
2025-09-16T23:46:00.045876Z	      inStock: true,
2025-09-16T23:46:00.045988Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:46:00.046156Z	      quantity: 0,
2025-09-16T23:46:00.046662Z	      status: 'in_stock',
2025-09-16T23:46:00.047198Z	      warehouse: null
2025-09-16T23:46:00.047388Z	    },
2025-09-16T23:46:00.047556Z	    isActive: true,
2025-09-16T23:46:00.047698Z	    isFeatured: false,
2025-09-16T23:46:00.047826Z	    isNew: false,
2025-09-16T23:46:00.047946Z	    partNumber: '99999',
2025-09-16T23:46:00.048052Z	    pricing: {
2025-09-16T23:46:00.048161Z	      currency: 'CNY',
2025-09-16T23:46:00.048281Z	      leadTime: null,
2025-09-16T23:46:00.048393Z	      moq: null,
2025-09-16T23:46:00.048542Z	      price: null,
2025-09-16T23:46:00.048661Z	      tiers: null
2025-09-16T23:46:00.048799Z	    },
2025-09-16T23:46:00.048908Z	    shortDescription: null,
2025-09-16T23:46:00.049021Z	    slug: '99999',
2025-09-16T23:46:00.049143Z	    title: '99999'
2025-09-16T23:46:00.049656Z	  }
2025-09-16T23:46:00.050184Z	}
2025-09-16T23:46:00.05052Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-16T23:46:00.051088Z	Fetching products with query: 
2025-09-16T23:46:00.051224Z	    {
2025-09-16T23:46:00.051573Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.052358Z	        
2025-09-16T23:46:00.052578Z	    _id,
2025-09-16T23:46:00.05317Z	    _type,
2025-09-16T23:46:00.053337Z	    partNumber,
2025-09-16T23:46:00.053527Z	    "slug": slug.current,
2025-09-16T23:46:00.053709Z	    title,
2025-09-16T23:46:00.053848Z	    shortDescription,
2025-09-16T23:46:00.053966Z	    image,
2025-09-16T23:46:00.054072Z	    brand->{
2025-09-16T23:46:00.054233Z	      name,
2025-09-16T23:46:00.054373Z	      "slug": slug.current,
2025-09-16T23:46:00.054522Z	      logo
2025-09-16T23:46:00.054639Z	    },
2025-09-16T23:46:00.054811Z	    category->{
2025-09-16T23:46:00.054934Z	      name,
2025-09-16T23:46:00.055037Z	      "slug": slug.current
2025-09-16T23:46:00.055158Z	    },
2025-09-16T23:46:00.055306Z	    pricing{
2025-09-16T23:46:00.055496Z	      currency,
2025-09-16T23:46:00.055768Z	      tiers[]{
2025-09-16T23:46:00.055896Z	        quantity,
2025-09-16T23:46:00.056082Z	        price,
2025-09-16T23:46:00.056267Z	        unit
2025-09-16T23:46:00.056387Z	      },
2025-09-16T23:46:00.056541Z	      moq,
2025-09-16T23:46:00.056671Z	      leadTime,
2025-09-16T23:46:00.057013Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.057158Z	      "price": tiers[0].price,
2025-09-16T23:46:00.057324Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.057455Z	    },
2025-09-16T23:46:00.057555Z	    inventory{
2025-09-16T23:46:00.057651Z	      quantity,
2025-09-16T23:46:00.057773Z	      status,
2025-09-16T23:46:00.057871Z	      warehouse,
2025-09-16T23:46:00.057982Z	      lastUpdated,
2025-09-16T23:46:00.058077Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.058178Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.058277Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.058387Z	    },
2025-09-16T23:46:00.058485Z	    isActive,
2025-09-16T23:46:00.058586Z	    isFeatured,
2025-09-16T23:46:00.058692Z	    isNew,
2025-09-16T23:46:00.05879Z	    _createdAt,
2025-09-16T23:46:00.058879Z	    _updatedAt
2025-09-16T23:46:00.058972Z	  
2025-09-16T23:46:00.059059Z	      },
2025-09-16T23:46:00.059144Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-16T23:46:00.059273Z	    }
2025-09-16T23:46:00.059386Z	  
2025-09-16T23:46:00.059485Z	Query parameters: {
2025-09-16T23:46:00.059581Z	  limit: 8,
2025-09-16T23:46:00.059693Z	  offset: 0,
2025-09-16T23:46:00.059818Z	  category: undefined,
2025-09-16T23:46:00.059975Z	  brand: 'pi',
2025-09-16T23:46:00.060129Z	  featured: undefined
2025-09-16T23:46:00.060257Z	}
2025-09-16T23:46:00.060379Z	Fetching solutions with query: 
2025-09-16T23:46:00.060483Z	    {
2025-09-16T23:46:00.060608Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.061284Z	        
2025-09-16T23:46:00.061463Z	    _id,
2025-09-16T23:46:00.06167Z	    title,
2025-09-16T23:46:00.061837Z	    "slug": slug.current,
2025-09-16T23:46:00.062023Z	    summary,
2025-09-16T23:46:00.062131Z	    description,
2025-09-16T23:46:00.062216Z	    coverImage,
2025-09-16T23:46:00.062301Z	    primaryBrand->{
2025-09-16T23:46:00.062396Z	      _id,
2025-09-16T23:46:00.062497Z	      name,
2025-09-16T23:46:00.062574Z	      "slug": slug.current,
2025-09-16T23:46:00.062655Z	      logo
2025-09-16T23:46:00.063006Z	    },
2025-09-16T23:46:00.063156Z	    relatedBrands[]->{
2025-09-16T23:46:00.063287Z	      _id,
2025-09-16T23:46:00.06346Z	      name,
2025-09-16T23:46:00.06362Z	      "slug": slug.current,
2025-09-16T23:46:00.063964Z	      logo
2025-09-16T23:46:00.064298Z	    },
2025-09-16T23:46:00.065386Z	    targetMarket,
2025-09-16T23:46:00.065554Z	    complexity,
2025-09-16T23:46:00.065813Z	    publishedAt,
2025-09-16T23:46:00.06594Z	    isPublished,
2025-09-16T23:46:00.066033Z	    isFeatured,
2025-09-16T23:46:00.06623Z	    viewCount,
2025-09-16T23:46:00.066389Z	    _createdAt,
2025-09-16T23:46:00.066555Z	    _updatedAt
2025-09-16T23:46:00.066696Z	  
2025-09-16T23:46:00.066907Z	      },
2025-09-16T23:46:00.067016Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-16T23:46:00.067115Z	    }
2025-09-16T23:46:00.067208Z	  
2025-09-16T23:46:00.067303Z	Query parameters: {
2025-09-16T23:46:00.067516Z	  limit: 4,
2025-09-16T23:46:00.067649Z	  offset: 0,
2025-09-16T23:46:00.067923Z	  targetMarket: undefined,
2025-09-16T23:46:00.068053Z	  brand: 'pi',
2025-09-16T23:46:00.068152Z	  featured: undefined
2025-09-16T23:46:00.068246Z	}
2025-09-16T23:46:00.06834Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-16T23:46:00.069137Z	Fetching products with query: 
2025-09-16T23:46:00.069274Z	    {
2025-09-16T23:46:00.069382Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.069481Z	        
2025-09-16T23:46:00.069594Z	    _id,
2025-09-16T23:46:00.070101Z	    _type,
2025-09-16T23:46:00.070242Z	    partNumber,
2025-09-16T23:46:00.070358Z	    "slug": slug.current,
2025-09-16T23:46:00.070543Z	    title,
2025-09-16T23:46:00.071016Z	    shortDescription,
2025-09-16T23:46:00.071198Z	    image,
2025-09-16T23:46:00.071356Z	    brand->{
2025-09-16T23:46:00.071505Z	      name,
2025-09-16T23:46:00.071649Z	      "slug": slug.current,
2025-09-16T23:46:00.071822Z	      logo
2025-09-16T23:46:00.072006Z	    },
2025-09-16T23:46:00.072158Z	    category->{
2025-09-16T23:46:00.072905Z	      name,
2025-09-16T23:46:00.073036Z	      "slug": slug.current
2025-09-16T23:46:00.073142Z	    },
2025-09-16T23:46:00.073256Z	    pricing{
2025-09-16T23:46:00.073366Z	      currency,
2025-09-16T23:46:00.073467Z	      tiers[]{
2025-09-16T23:46:00.073571Z	        quantity,
2025-09-16T23:46:00.073699Z	        price,
2025-09-16T23:46:00.073803Z	        unit
2025-09-16T23:46:00.073911Z	      },
2025-09-16T23:46:00.074021Z	      moq,
2025-09-16T23:46:00.074142Z	      leadTime,
2025-09-16T23:46:00.074266Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.0744Z	      "price": tiers[0].price,
2025-09-16T23:46:00.074511Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.074607Z	    },
2025-09-16T23:46:00.074718Z	    inventory{
2025-09-16T23:46:00.074859Z	      quantity,
2025-09-16T23:46:00.07503Z	      status,
2025-09-16T23:46:00.075145Z	      warehouse,
2025-09-16T23:46:00.075242Z	      lastUpdated,
2025-09-16T23:46:00.075398Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.075519Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.124178Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.124484Z	    },
2025-09-16T23:46:00.125299Z	    isActive,
2025-09-16T23:46:00.125524Z	    isFeatured,
2025-09-16T23:46:00.125705Z	    isNew,
2025-09-16T23:46:00.127367Z	    _createdAt,
2025-09-16T23:46:00.129308Z	    _updatedAt
2025-09-16T23:46:00.129456Z	  
2025-09-16T23:46:00.129784Z	      },
2025-09-16T23:46:00.129916Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-16T23:46:00.130035Z	    }
2025-09-16T23:46:00.130134Z	  
2025-09-16T23:46:00.130232Z	Query parameters: {
2025-09-16T23:46:00.13034Z	  limit: 8,
2025-09-16T23:46:00.130469Z	  offset: 0,
2025-09-16T23:46:00.130572Z	  category: undefined,
2025-09-16T23:46:00.130668Z	  brand: 'pi',
2025-09-16T23:46:00.130804Z	  featured: undefined
2025-09-16T23:46:00.130898Z	}
2025-09-16T23:46:00.130991Z	Fetching solutions with query: 
2025-09-16T23:46:00.131099Z	    {
2025-09-16T23:46:00.131192Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.13129Z	        
2025-09-16T23:46:00.131398Z	    _id,
2025-09-16T23:46:00.131509Z	    title,
2025-09-16T23:46:00.131597Z	    "slug": slug.current,
2025-09-16T23:46:00.131932Z	    summary,
2025-09-16T23:46:00.132086Z	    description,
2025-09-16T23:46:00.132205Z	    coverImage,
2025-09-16T23:46:00.13231Z	    primaryBrand->{
2025-09-16T23:46:00.13259Z	      _id,
2025-09-16T23:46:00.132741Z	      name,
2025-09-16T23:46:00.132854Z	      "slug": slug.current,
2025-09-16T23:46:00.132955Z	      logo
2025-09-16T23:46:00.1331Z	    },
2025-09-16T23:46:00.133487Z	    relatedBrands[]->{
2025-09-16T23:46:00.133794Z	      _id,
2025-09-16T23:46:00.134036Z	      name,
2025-09-16T23:46:00.134276Z	      "slug": slug.current,
2025-09-16T23:46:00.134548Z	      logo
2025-09-16T23:46:00.134871Z	    },
2025-09-16T23:46:00.13534Z	    targetMarket,
2025-09-16T23:46:00.135594Z	    complexity,
2025-09-16T23:46:00.135804Z	    publishedAt,
2025-09-16T23:46:00.135966Z	    isPublished,
2025-09-16T23:46:00.136122Z	    isFeatured,
2025-09-16T23:46:00.136281Z	    viewCount,
2025-09-16T23:46:00.136496Z	    _createdAt,
2025-09-16T23:46:00.136655Z	    _updatedAt
2025-09-16T23:46:00.136815Z	  
2025-09-16T23:46:00.136982Z	      },
2025-09-16T23:46:00.137151Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-16T23:46:00.137315Z	    }
2025-09-16T23:46:00.138113Z	  
2025-09-16T23:46:00.138266Z	Query parameters: {
2025-09-16T23:46:00.138381Z	  limit: 4,
2025-09-16T23:46:00.138511Z	  offset: 0,
2025-09-16T23:46:00.138624Z	  targetMarket: undefined,
2025-09-16T23:46:00.138752Z	  brand: 'pi',
2025-09-16T23:46:00.138879Z	  featured: undefined
2025-09-16T23:46:00.139638Z	}
2025-09-16T23:46:00.140062Z	✅ [getBrandData] Found brand: PI
2025-09-16T23:46:00.140186Z	✅ [getBrandData] Found brand: PI
2025-09-16T23:46:00.140296Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.140406Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.140513Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.140611Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.140741Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:46:00.140988Z	Fetching products with query: 
2025-09-16T23:46:00.141113Z	    {
2025-09-16T23:46:00.141218Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.141323Z	        
2025-09-16T23:46:00.141422Z	    _id,
2025-09-16T23:46:00.141524Z	    _type,
2025-09-16T23:46:00.141625Z	    partNumber,
2025-09-16T23:46:00.141758Z	    "slug": slug.current,
2025-09-16T23:46:00.141861Z	    title,
2025-09-16T23:46:00.141953Z	    shortDescription,
2025-09-16T23:46:00.142035Z	    image,
2025-09-16T23:46:00.142127Z	    brand->{
2025-09-16T23:46:00.142216Z	      name,
2025-09-16T23:46:00.142302Z	      "slug": slug.current,
2025-09-16T23:46:00.142392Z	      logo
2025-09-16T23:46:00.142482Z	    },
2025-09-16T23:46:00.142573Z	    category->{
2025-09-16T23:46:00.142659Z	      name,
2025-09-16T23:46:00.142765Z	      "slug": slug.current
2025-09-16T23:46:00.142849Z	    },
2025-09-16T23:46:00.142938Z	    pricing{
2025-09-16T23:46:00.143031Z	      currency,
2025-09-16T23:46:00.143125Z	      tiers[]{
2025-09-16T23:46:00.143229Z	        quantity,
2025-09-16T23:46:00.143333Z	        price,
2025-09-16T23:46:00.143763Z	        unit
2025-09-16T23:46:00.143898Z	      },
2025-09-16T23:46:00.144168Z	      moq,
2025-09-16T23:46:00.144613Z	      leadTime,
2025-09-16T23:46:00.146817Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.146984Z	      "price": tiers[0].price,
2025-09-16T23:46:00.147091Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.147193Z	    },
2025-09-16T23:46:00.147349Z	    inventory{
2025-09-16T23:46:00.147799Z	      quantity,
2025-09-16T23:46:00.148191Z	      status,
2025-09-16T23:46:00.148565Z	      warehouse,
2025-09-16T23:46:00.148943Z	      lastUpdated,
2025-09-16T23:46:00.149304Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.149731Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.150227Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.15072Z	    },
2025-09-16T23:46:00.151126Z	    isActive,
2025-09-16T23:46:00.151539Z	    isFeatured,
2025-09-16T23:46:00.151925Z	    isNew,
2025-09-16T23:46:00.152326Z	    _createdAt,
2025-09-16T23:46:00.152702Z	    _updatedAt
2025-09-16T23:46:00.153071Z	  
2025-09-16T23:46:00.153477Z	      },
2025-09-16T23:46:00.153896Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:46:00.154314Z	    }
2025-09-16T23:46:00.154811Z	  
2025-09-16T23:46:00.155174Z	Query parameters: {
2025-09-16T23:46:00.156076Z	  limit: 8,
2025-09-16T23:46:00.156336Z	  offset: 0,
2025-09-16T23:46:00.156478Z	  category: undefined,
2025-09-16T23:46:00.156736Z	  brand: 'cree',
2025-09-16T23:46:00.15688Z	  featured: undefined
2025-09-16T23:46:00.157043Z	}
2025-09-16T23:46:00.157149Z	Fetching solutions with query: 
2025-09-16T23:46:00.157244Z	    {
2025-09-16T23:46:00.157361Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.157575Z	        
2025-09-16T23:46:00.157779Z	    _id,
2025-09-16T23:46:00.158044Z	    title,
2025-09-16T23:46:00.15819Z	    "slug": slug.current,
2025-09-16T23:46:00.158369Z	    summary,
2025-09-16T23:46:00.158657Z	    description,
2025-09-16T23:46:00.15879Z	    coverImage,
2025-09-16T23:46:00.158881Z	    primaryBrand->{
2025-09-16T23:46:00.15897Z	      _id,
2025-09-16T23:46:00.159051Z	      name,
2025-09-16T23:46:00.159128Z	      "slug": slug.current,
2025-09-16T23:46:00.15921Z	      logo
2025-09-16T23:46:00.159321Z	    },
2025-09-16T23:46:00.159409Z	    relatedBrands[]->{
2025-09-16T23:46:00.159507Z	      _id,
2025-09-16T23:46:00.159795Z	      name,
2025-09-16T23:46:00.159938Z	      "slug": slug.current,
2025-09-16T23:46:00.160067Z	      logo
2025-09-16T23:46:00.160176Z	    },
2025-09-16T23:46:00.160279Z	    targetMarket,
2025-09-16T23:46:00.160469Z	    complexity,
2025-09-16T23:46:00.160611Z	    publishedAt,
2025-09-16T23:46:00.160768Z	    isPublished,
2025-09-16T23:46:00.160913Z	    isFeatured,
2025-09-16T23:46:00.161126Z	    viewCount,
2025-09-16T23:46:00.161391Z	    _createdAt,
2025-09-16T23:46:00.161534Z	    _updatedAt
2025-09-16T23:46:00.163423Z	  
2025-09-16T23:46:00.164063Z	      },
2025-09-16T23:46:00.164818Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:46:00.164948Z	    }
2025-09-16T23:46:00.165064Z	  
2025-09-16T23:46:00.165175Z	Query parameters: {
2025-09-16T23:46:00.16576Z	  limit: 4,
2025-09-16T23:46:00.165936Z	  offset: 0,
2025-09-16T23:46:00.16609Z	  targetMarket: undefined,
2025-09-16T23:46:00.166229Z	  brand: 'cree',
2025-09-16T23:46:00.166374Z	  featured: undefined
2025-09-16T23:46:00.166517Z	}
2025-09-16T23:46:00.166642Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:46:00.166796Z	Fetching products with query: 
2025-09-16T23:46:00.166914Z	    {
2025-09-16T23:46:00.167644Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.167831Z	        
2025-09-16T23:46:00.167976Z	    _id,
2025-09-16T23:46:00.168103Z	    _type,
2025-09-16T23:46:00.168219Z	    partNumber,
2025-09-16T23:46:00.168365Z	    "slug": slug.current,
2025-09-16T23:46:00.168492Z	    title,
2025-09-16T23:46:00.168599Z	    shortDescription,
2025-09-16T23:46:00.169163Z	    image,
2025-09-16T23:46:00.169291Z	    brand->{
2025-09-16T23:46:00.169719Z	      name,
2025-09-16T23:46:00.170657Z	      "slug": slug.current,
2025-09-16T23:46:00.170817Z	      logo
2025-09-16T23:46:00.170944Z	    },
2025-09-16T23:46:00.171068Z	    category->{
2025-09-16T23:46:00.171184Z	      name,
2025-09-16T23:46:00.171291Z	      "slug": slug.current
2025-09-16T23:46:00.171831Z	    },
2025-09-16T23:46:00.172325Z	    pricing{
2025-09-16T23:46:00.172752Z	      currency,
2025-09-16T23:46:00.174165Z	      tiers[]{
2025-09-16T23:46:00.174608Z	        quantity,
2025-09-16T23:46:00.175201Z	        price,
2025-09-16T23:46:00.175339Z	        unit
2025-09-16T23:46:00.175447Z	      },
2025-09-16T23:46:00.175545Z	      moq,
2025-09-16T23:46:00.175652Z	      leadTime,
2025-09-16T23:46:00.176122Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.178142Z	      "price": tiers[0].price,
2025-09-16T23:46:00.178803Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.178948Z	    },
2025-09-16T23:46:00.179131Z	    inventory{
2025-09-16T23:46:00.179281Z	      quantity,
2025-09-16T23:46:00.1794Z	      status,
2025-09-16T23:46:00.179512Z	      warehouse,
2025-09-16T23:46:00.179622Z	      lastUpdated,
2025-09-16T23:46:00.179798Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.179915Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.18002Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.180124Z	    },
2025-09-16T23:46:00.18023Z	    isActive,
2025-09-16T23:46:00.18034Z	    isFeatured,
2025-09-16T23:46:00.180457Z	    isNew,
2025-09-16T23:46:00.180559Z	    _createdAt,
2025-09-16T23:46:00.182418Z	    _updatedAt
2025-09-16T23:46:00.183016Z	  
2025-09-16T23:46:00.183563Z	      },
2025-09-16T23:46:00.184141Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:46:00.224594Z	    }
2025-09-16T23:46:00.225312Z	  
2025-09-16T23:46:00.22552Z	Query parameters: {
2025-09-16T23:46:00.225798Z	  limit: 8,
2025-09-16T23:46:00.226098Z	  offset: 0,
2025-09-16T23:46:00.226272Z	  category: undefined,
2025-09-16T23:46:00.226401Z	  brand: 'cree',
2025-09-16T23:46:00.226518Z	  featured: undefined
2025-09-16T23:46:00.227492Z	}
2025-09-16T23:46:00.227744Z	Fetching solutions with query: 
2025-09-16T23:46:00.22798Z	    {
2025-09-16T23:46:00.228155Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.228311Z	        
2025-09-16T23:46:00.22849Z	    _id,
2025-09-16T23:46:00.228656Z	    title,
2025-09-16T23:46:00.228811Z	    "slug": slug.current,
2025-09-16T23:46:00.228977Z	    summary,
2025-09-16T23:46:00.229156Z	    description,
2025-09-16T23:46:00.229349Z	    coverImage,
2025-09-16T23:46:00.229491Z	    primaryBrand->{
2025-09-16T23:46:00.229646Z	      _id,
2025-09-16T23:46:00.229842Z	      name,
2025-09-16T23:46:00.229979Z	      "slug": slug.current,
2025-09-16T23:46:00.230135Z	      logo
2025-09-16T23:46:00.230284Z	    },
2025-09-16T23:46:00.230431Z	    relatedBrands[]->{
2025-09-16T23:46:00.230592Z	      _id,
2025-09-16T23:46:00.230913Z	      name,
2025-09-16T23:46:00.23146Z	      "slug": slug.current,
2025-09-16T23:46:00.231904Z	      logo
2025-09-16T23:46:00.232156Z	    },
2025-09-16T23:46:00.232294Z	    targetMarket,
2025-09-16T23:46:00.232407Z	    complexity,
2025-09-16T23:46:00.23251Z	    publishedAt,
2025-09-16T23:46:00.232657Z	    isPublished,
2025-09-16T23:46:00.232872Z	    isFeatured,
2025-09-16T23:46:00.233001Z	    viewCount,
2025-09-16T23:46:00.233191Z	    _createdAt,
2025-09-16T23:46:00.233508Z	    _updatedAt
2025-09-16T23:46:00.233715Z	  
2025-09-16T23:46:00.233903Z	      },
2025-09-16T23:46:00.234036Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:46:00.234153Z	    }
2025-09-16T23:46:00.234269Z	  
2025-09-16T23:46:00.234368Z	Query parameters: {
2025-09-16T23:46:00.23447Z	  limit: 4,
2025-09-16T23:46:00.234556Z	  offset: 0,
2025-09-16T23:46:00.23517Z	  targetMarket: undefined,
2025-09-16T23:46:00.235322Z	  brand: 'cree',
2025-09-16T23:46:00.235437Z	  featured: undefined
2025-09-16T23:46:00.235535Z	}
2025-09-16T23:46:00.23563Z	Solutions fetch result: {
2025-09-16T23:46:00.235757Z	  totalSolutions: 6,
2025-09-16T23:46:00.235954Z	  fetchedSolutions: 4,
2025-09-16T23:46:00.236122Z	  firstSolution: {
2025-09-16T23:46:00.236623Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:46:00.238899Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:46:00.239179Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:46:00.240998Z	    complexity: 'medium',
2025-09-16T23:46:00.24132Z	    coverImage: null,
2025-09-16T23:46:00.241472Z	    description: [ [Object] ],
2025-09-16T23:46:00.242462Z	    isFeatured: false,
2025-09-16T23:46:00.242669Z	    isPublished: true,
2025-09-16T23:46:00.243038Z	    primaryBrand: {
2025-09-16T23:46:00.243195Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:46:00.243521Z	      logo: null,
2025-09-16T23:46:00.243717Z	      name: 'CREE',
2025-09-16T23:46:00.243873Z	      slug: 'cree'
2025-09-16T23:46:00.244016Z	    },
2025-09-16T23:46:00.244249Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:46:00.244488Z	    relatedBrands: null,
2025-09-16T23:46:00.245045Z	    slug: '11111',
2025-09-16T23:46:00.24519Z	    summary: '11111',
2025-09-16T23:46:00.245378Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:00.245531Z	    title: '11111',
2025-09-16T23:46:00.245653Z	    viewCount: 0
2025-09-16T23:46:00.245784Z	  }
2025-09-16T23:46:00.245887Z	}
2025-09-16T23:46:00.245989Z	Solutions fetch result: {
2025-09-16T23:46:00.246086Z	  totalSolutions: 6,
2025-09-16T23:46:00.246188Z	  fetchedSolutions: 4,
2025-09-16T23:46:00.246421Z	  firstSolution: {
2025-09-16T23:46:00.246637Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:46:00.246877Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:46:00.247053Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:46:00.247233Z	    complexity: 'medium',
2025-09-16T23:46:00.247425Z	    coverImage: null,
2025-09-16T23:46:00.247568Z	    description: [ [Object] ],
2025-09-16T23:46:00.247771Z	    isFeatured: false,
2025-09-16T23:46:00.247936Z	    isPublished: true,
2025-09-16T23:46:00.248102Z	    primaryBrand: {
2025-09-16T23:46:00.248279Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:46:00.248457Z	      logo: null,
2025-09-16T23:46:00.248623Z	      name: 'CREE',
2025-09-16T23:46:00.24884Z	      slug: 'cree'
2025-09-16T23:46:00.249324Z	    },
2025-09-16T23:46:00.249536Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:46:00.249862Z	    relatedBrands: null,
2025-09-16T23:46:00.249994Z	    slug: '11111',
2025-09-16T23:46:00.250182Z	    summary: '11111',
2025-09-16T23:46:00.250346Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:00.250488Z	    title: '11111',
2025-09-16T23:46:00.250639Z	    viewCount: 0
2025-09-16T23:46:00.250823Z	  }
2025-09-16T23:46:00.250989Z	}
2025-09-16T23:46:00.251152Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:46:00.251335Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:46:00.251571Z	Products fetch result: {
2025-09-16T23:46:00.251763Z	  totalProducts: 4,
2025-09-16T23:46:00.251916Z	  fetchedProducts: 4,
2025-09-16T23:46:00.252077Z	  firstProduct: {
2025-09-16T23:46:00.252236Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:46:00.252404Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:46:00.252578Z	    _type: 'product',
2025-09-16T23:46:00.252748Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:46:00.252916Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:46:00.253078Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:00.253271Z	    image: null,
2025-09-16T23:46:00.253471Z	    inventory: {
2025-09-16T23:46:00.253621Z	      inStock: true,
2025-09-16T23:46:00.253762Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:46:00.254195Z	      quantity: 0,
2025-09-16T23:46:00.254363Z	      status: 'in_stock',
2025-09-16T23:46:00.254873Z	      warehouse: null
2025-09-16T23:46:00.255237Z	    },
2025-09-16T23:46:00.255758Z	    isActive: true,
2025-09-16T23:46:00.256218Z	    isFeatured: false,
2025-09-16T23:46:00.257131Z	    isNew: false,
2025-09-16T23:46:00.257292Z	    partNumber: '11111',
2025-09-16T23:46:00.25743Z	    pricing: {
2025-09-16T23:46:00.257539Z	      currency: 'CNY',
2025-09-16T23:46:00.25766Z	      leadTime: null,
2025-09-16T23:46:00.257798Z	      moq: null,
2025-09-16T23:46:00.257906Z	      price: null,
2025-09-16T23:46:00.257999Z	      tiers: null
2025-09-16T23:46:00.25814Z	    },
2025-09-16T23:46:00.258272Z	    shortDescription: '11111',
2025-09-16T23:46:00.258459Z	    slug: 'sic mosfet',
2025-09-16T23:46:00.259023Z	    title: '111111'
2025-09-16T23:46:00.259339Z	  }
2025-09-16T23:46:00.259515Z	}
2025-09-16T23:46:00.25965Z	Products fetch result: {
2025-09-16T23:46:00.259789Z	  totalProducts: 4,
2025-09-16T23:46:00.259903Z	  fetchedProducts: 4,
2025-09-16T23:46:00.260017Z	  firstProduct: {
2025-09-16T23:46:00.260123Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:46:00.260232Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:46:00.260343Z	    _type: 'product',
2025-09-16T23:46:00.260463Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:46:00.260582Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:46:00.260729Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:00.26087Z	    image: null,
2025-09-16T23:46:00.260998Z	    inventory: {
2025-09-16T23:46:00.261129Z	      inStock: true,
2025-09-16T23:46:00.261258Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:46:00.261371Z	      quantity: 0,
2025-09-16T23:46:00.261492Z	      status: 'in_stock',
2025-09-16T23:46:00.261601Z	      warehouse: null
2025-09-16T23:46:00.261735Z	    },
2025-09-16T23:46:00.261852Z	    isActive: true,
2025-09-16T23:46:00.261968Z	    isFeatured: false,
2025-09-16T23:46:00.262074Z	    isNew: false,
2025-09-16T23:46:00.262186Z	    partNumber: '11111',
2025-09-16T23:46:00.262294Z	    pricing: {
2025-09-16T23:46:00.262401Z	      currency: 'CNY',
2025-09-16T23:46:00.262511Z	      leadTime: null,
2025-09-16T23:46:00.262606Z	      moq: null,
2025-09-16T23:46:00.262709Z	      price: null,
2025-09-16T23:46:00.262804Z	      tiers: null
2025-09-16T23:46:00.262905Z	    },
2025-09-16T23:46:00.262996Z	    shortDescription: '11111',
2025-09-16T23:46:00.263086Z	    slug: 'sic mosfet',
2025-09-16T23:46:00.263177Z	    title: '111111'
2025-09-16T23:46:00.263266Z	  }
2025-09-16T23:46:00.263356Z	}
2025-09-16T23:46:00.263459Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-16T23:46:00.263544Z	Fetching products with query: 
2025-09-16T23:46:00.263638Z	    {
2025-09-16T23:46:00.263756Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.263853Z	        
2025-09-16T23:46:00.263944Z	    _id,
2025-09-16T23:46:00.264026Z	    _type,
2025-09-16T23:46:00.264118Z	    partNumber,
2025-09-16T23:46:00.26421Z	    "slug": slug.current,
2025-09-16T23:46:00.264308Z	    title,
2025-09-16T23:46:00.264414Z	    shortDescription,
2025-09-16T23:46:00.264532Z	    image,
2025-09-16T23:46:00.264883Z	    brand->{
2025-09-16T23:46:00.265238Z	      name,
2025-09-16T23:46:00.265584Z	      "slug": slug.current,
2025-09-16T23:46:00.265963Z	      logo
2025-09-16T23:46:00.266341Z	    },
2025-09-16T23:46:00.266642Z	    category->{
2025-09-16T23:46:00.266975Z	      name,
2025-09-16T23:46:00.267384Z	      "slug": slug.current
2025-09-16T23:46:00.267741Z	    },
2025-09-16T23:46:00.267867Z	    pricing{
2025-09-16T23:46:00.268371Z	      currency,
2025-09-16T23:46:00.26879Z	      tiers[]{
2025-09-16T23:46:00.268904Z	        quantity,
2025-09-16T23:46:00.270044Z	        price,
2025-09-16T23:46:00.270415Z	        unit
2025-09-16T23:46:00.270743Z	      },
2025-09-16T23:46:00.271091Z	      moq,
2025-09-16T23:46:00.271624Z	      leadTime,
2025-09-16T23:46:00.272008Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.272287Z	      "price": tiers[0].price,
2025-09-16T23:46:00.272658Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.273066Z	    },
2025-09-16T23:46:00.273389Z	    inventory{
2025-09-16T23:46:00.273765Z	      quantity,
2025-09-16T23:46:00.274077Z	      status,
2025-09-16T23:46:00.274431Z	      warehouse,
2025-09-16T23:46:00.274523Z	      lastUpdated,
2025-09-16T23:46:00.274586Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.27465Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.274746Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.27504Z	    },
2025-09-16T23:46:00.275591Z	    isActive,
2025-09-16T23:46:00.275944Z	    isFeatured,
2025-09-16T23:46:00.276117Z	    isNew,
2025-09-16T23:46:00.276279Z	    _createdAt,
2025-09-16T23:46:00.276545Z	    _updatedAt
2025-09-16T23:46:00.276691Z	  
2025-09-16T23:46:00.276863Z	      },
2025-09-16T23:46:00.277023Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-16T23:46:00.277216Z	    }
2025-09-16T23:46:00.277326Z	  
2025-09-16T23:46:00.277428Z	Query parameters: {
2025-09-16T23:46:00.277553Z	  limit: 8,
2025-09-16T23:46:00.277653Z	  offset: 0,
2025-09-16T23:46:00.27779Z	  category: undefined,
2025-09-16T23:46:00.277911Z	  brand: 'mediatek',
2025-09-16T23:46:00.278012Z	  featured: undefined
2025-09-16T23:46:00.278123Z	}
2025-09-16T23:46:00.278227Z	Fetching solutions with query: 
2025-09-16T23:46:00.278341Z	    {
2025-09-16T23:46:00.27844Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.278546Z	        
2025-09-16T23:46:00.278646Z	    _id,
2025-09-16T23:46:00.27877Z	    title,
2025-09-16T23:46:00.278834Z	    "slug": slug.current,
2025-09-16T23:46:00.278896Z	    summary,
2025-09-16T23:46:00.278952Z	    description,
2025-09-16T23:46:00.279007Z	    coverImage,
2025-09-16T23:46:00.27906Z	    primaryBrand->{
2025-09-16T23:46:00.279119Z	      _id,
2025-09-16T23:46:00.279176Z	      name,
2025-09-16T23:46:00.279255Z	      "slug": slug.current,
2025-09-16T23:46:00.279312Z	      logo
2025-09-16T23:46:00.279371Z	    },
2025-09-16T23:46:00.279426Z	    relatedBrands[]->{
2025-09-16T23:46:00.279485Z	      _id,
2025-09-16T23:46:00.279541Z	      name,
2025-09-16T23:46:00.279596Z	      "slug": slug.current,
2025-09-16T23:46:00.279653Z	      logo
2025-09-16T23:46:00.279747Z	    },
2025-09-16T23:46:00.279817Z	    targetMarket,
2025-09-16T23:46:00.279877Z	    complexity,
2025-09-16T23:46:00.279936Z	    publishedAt,
2025-09-16T23:46:00.279991Z	    isPublished,
2025-09-16T23:46:00.280046Z	    isFeatured,
2025-09-16T23:46:00.280101Z	    viewCount,
2025-09-16T23:46:00.280156Z	    _createdAt,
2025-09-16T23:46:00.280211Z	    _updatedAt
2025-09-16T23:46:00.280266Z	  
2025-09-16T23:46:00.280322Z	      },
2025-09-16T23:46:00.280392Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-16T23:46:00.280458Z	    }
2025-09-16T23:46:00.280522Z	  
2025-09-16T23:46:00.280578Z	Query parameters: {
2025-09-16T23:46:00.280639Z	  limit: 4,
2025-09-16T23:46:00.280727Z	  offset: 0,
2025-09-16T23:46:00.280789Z	  targetMarket: undefined,
2025-09-16T23:46:00.280846Z	  brand: 'mediatek',
2025-09-16T23:46:00.2809Z	  featured: undefined
2025-09-16T23:46:00.280954Z	}
2025-09-16T23:46:00.281021Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-16T23:46:00.281079Z	Fetching products with query: 
2025-09-16T23:46:00.281141Z	    {
2025-09-16T23:46:00.281198Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.281257Z	        
2025-09-16T23:46:00.281311Z	    _id,
2025-09-16T23:46:00.281368Z	    _type,
2025-09-16T23:46:00.281425Z	    partNumber,
2025-09-16T23:46:00.281485Z	    "slug": slug.current,
2025-09-16T23:46:00.28154Z	    title,
2025-09-16T23:46:00.281598Z	    shortDescription,
2025-09-16T23:46:00.281653Z	    image,
2025-09-16T23:46:00.324018Z	    brand->{
2025-09-16T23:46:00.324196Z	      name,
2025-09-16T23:46:00.324307Z	      "slug": slug.current,
2025-09-16T23:46:00.324428Z	      logo
2025-09-16T23:46:00.324538Z	    },
2025-09-16T23:46:00.324645Z	    category->{
2025-09-16T23:46:00.324787Z	      name,
2025-09-16T23:46:00.325491Z	      "slug": slug.current
2025-09-16T23:46:00.325835Z	    },
2025-09-16T23:46:00.326039Z	    pricing{
2025-09-16T23:46:00.326147Z	      currency,
2025-09-16T23:46:00.32628Z	      tiers[]{
2025-09-16T23:46:00.32642Z	        quantity,
2025-09-16T23:46:00.326536Z	        price,
2025-09-16T23:46:00.326708Z	        unit
2025-09-16T23:46:00.326886Z	      },
2025-09-16T23:46:00.32707Z	      moq,
2025-09-16T23:46:00.327227Z	      leadTime,
2025-09-16T23:46:00.327387Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.327527Z	      "price": tiers[0].price,
2025-09-16T23:46:00.327649Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.327811Z	    },
2025-09-16T23:46:00.327933Z	    inventory{
2025-09-16T23:46:00.32806Z	      quantity,
2025-09-16T23:46:00.328182Z	      status,
2025-09-16T23:46:00.328409Z	      warehouse,
2025-09-16T23:46:00.328528Z	      lastUpdated,
2025-09-16T23:46:00.328659Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.328786Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.328893Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.329019Z	    },
2025-09-16T23:46:00.329143Z	    isActive,
2025-09-16T23:46:00.329257Z	    isFeatured,
2025-09-16T23:46:00.329375Z	    isNew,
2025-09-16T23:46:00.329514Z	    _createdAt,
2025-09-16T23:46:00.329634Z	    _updatedAt
2025-09-16T23:46:00.329805Z	  
2025-09-16T23:46:00.329891Z	      },
2025-09-16T23:46:00.329998Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-16T23:46:00.330191Z	    }
2025-09-16T23:46:00.330298Z	  
2025-09-16T23:46:00.330492Z	Query parameters: {
2025-09-16T23:46:00.330576Z	  limit: 8,
2025-09-16T23:46:00.330695Z	  offset: 0,
2025-09-16T23:46:00.330807Z	  category: undefined,
2025-09-16T23:46:00.33098Z	  brand: 'mediatek',
2025-09-16T23:46:00.331067Z	  featured: undefined
2025-09-16T23:46:00.331197Z	}
2025-09-16T23:46:00.331358Z	Fetching solutions with query: 
2025-09-16T23:46:00.331521Z	    {
2025-09-16T23:46:00.331663Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.331831Z	        
2025-09-16T23:46:00.332009Z	    _id,
2025-09-16T23:46:00.332076Z	    title,
2025-09-16T23:46:00.332209Z	    "slug": slug.current,
2025-09-16T23:46:00.332368Z	    summary,
2025-09-16T23:46:00.332517Z	    description,
2025-09-16T23:46:00.332757Z	    coverImage,
2025-09-16T23:46:00.332916Z	    primaryBrand->{
2025-09-16T23:46:00.333021Z	      _id,
2025-09-16T23:46:00.33317Z	      name,
2025-09-16T23:46:00.333317Z	      "slug": slug.current,
2025-09-16T23:46:00.333637Z	      logo
2025-09-16T23:46:00.333839Z	    },
2025-09-16T23:46:00.333965Z	    relatedBrands[]->{
2025-09-16T23:46:00.334119Z	      _id,
2025-09-16T23:46:00.334197Z	      name,
2025-09-16T23:46:00.334256Z	      "slug": slug.current,
2025-09-16T23:46:00.334347Z	      logo
2025-09-16T23:46:00.334487Z	    },
2025-09-16T23:46:00.33461Z	    targetMarket,
2025-09-16T23:46:00.334745Z	    complexity,
2025-09-16T23:46:00.334907Z	    publishedAt,
2025-09-16T23:46:00.335069Z	    isPublished,
2025-09-16T23:46:00.335296Z	    isFeatured,
2025-09-16T23:46:00.33545Z	    viewCount,
2025-09-16T23:46:00.335682Z	    _createdAt,
2025-09-16T23:46:00.335886Z	    _updatedAt
2025-09-16T23:46:00.336028Z	  
2025-09-16T23:46:00.336136Z	      },
2025-09-16T23:46:00.336238Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-16T23:46:00.336349Z	    }
2025-09-16T23:46:00.336474Z	  
2025-09-16T23:46:00.336589Z	Query parameters: {
2025-09-16T23:46:00.336709Z	  limit: 4,
2025-09-16T23:46:00.336872Z	  offset: 0,
2025-09-16T23:46:00.336987Z	  targetMarket: undefined,
2025-09-16T23:46:00.33712Z	  brand: 'mediatek',
2025-09-16T23:46:00.337248Z	  featured: undefined
2025-09-16T23:46:00.33733Z	}
2025-09-16T23:46:00.337434Z	✅ [getBrandData] Found brand: MediaTek
2025-09-16T23:46:00.337593Z	✅ [getBrandData] Found brand: MediaTek
2025-09-16T23:46:00.337712Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.337815Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.337912Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.338016Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.338123Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:46:00.338228Z	Fetching products with query: 
2025-09-16T23:46:00.338326Z	    {
2025-09-16T23:46:00.338426Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.338553Z	        
2025-09-16T23:46:00.338662Z	    _id,
2025-09-16T23:46:00.338775Z	    _type,
2025-09-16T23:46:00.338869Z	    partNumber,
2025-09-16T23:46:00.338966Z	    "slug": slug.current,
2025-09-16T23:46:00.339074Z	    title,
2025-09-16T23:46:00.339171Z	    shortDescription,
2025-09-16T23:46:00.339305Z	    image,
2025-09-16T23:46:00.339388Z	    brand->{
2025-09-16T23:46:00.33952Z	      name,
2025-09-16T23:46:00.339598Z	      "slug": slug.current,
2025-09-16T23:46:00.339669Z	      logo
2025-09-16T23:46:00.339833Z	    },
2025-09-16T23:46:00.34Z	    category->{
2025-09-16T23:46:00.340138Z	      name,
2025-09-16T23:46:00.340286Z	      "slug": slug.current
2025-09-16T23:46:00.340412Z	    },
2025-09-16T23:46:00.340515Z	    pricing{
2025-09-16T23:46:00.340711Z	      currency,
2025-09-16T23:46:00.340828Z	      tiers[]{
2025-09-16T23:46:00.341042Z	        quantity,
2025-09-16T23:46:00.341206Z	        price,
2025-09-16T23:46:00.341348Z	        unit
2025-09-16T23:46:00.34152Z	      },
2025-09-16T23:46:00.341691Z	      moq,
2025-09-16T23:46:00.341782Z	      leadTime,
2025-09-16T23:46:00.341911Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.342061Z	      "price": tiers[0].price,
2025-09-16T23:46:00.342158Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.34237Z	    },
2025-09-16T23:46:00.342483Z	    inventory{
2025-09-16T23:46:00.342609Z	      quantity,
2025-09-16T23:46:00.342736Z	      status,
2025-09-16T23:46:00.342844Z	      warehouse,
2025-09-16T23:46:00.34295Z	      lastUpdated,
2025-09-16T23:46:00.343047Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.343152Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.343261Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.343362Z	    },
2025-09-16T23:46:00.343471Z	    isActive,
2025-09-16T23:46:00.343592Z	    isFeatured,
2025-09-16T23:46:00.343719Z	    isNew,
2025-09-16T23:46:00.343827Z	    _createdAt,
2025-09-16T23:46:00.344096Z	    _updatedAt
2025-09-16T23:46:00.344182Z	  
2025-09-16T23:46:00.344287Z	      },
2025-09-16T23:46:00.344413Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:46:00.344538Z	    }
2025-09-16T23:46:00.344682Z	  
2025-09-16T23:46:00.34481Z	Query parameters: {
2025-09-16T23:46:00.344925Z	  limit: 8,
2025-09-16T23:46:00.34504Z	  offset: 0,
2025-09-16T23:46:00.345154Z	  category: undefined,
2025-09-16T23:46:00.345253Z	  brand: 'qualcomm',
2025-09-16T23:46:00.345388Z	  featured: undefined
2025-09-16T23:46:00.345497Z	}
2025-09-16T23:46:00.34561Z	Fetching solutions with query: 
2025-09-16T23:46:00.345725Z	    {
2025-09-16T23:46:00.345852Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.345946Z	        
2025-09-16T23:46:00.346029Z	    _id,
2025-09-16T23:46:00.346107Z	    title,
2025-09-16T23:46:00.346187Z	    "slug": slug.current,
2025-09-16T23:46:00.346275Z	    summary,
2025-09-16T23:46:00.346371Z	    description,
2025-09-16T23:46:00.34647Z	    coverImage,
2025-09-16T23:46:00.346554Z	    primaryBrand->{
2025-09-16T23:46:00.346645Z	      _id,
2025-09-16T23:46:00.346767Z	      name,
2025-09-16T23:46:00.346858Z	      "slug": slug.current,
2025-09-16T23:46:00.346945Z	      logo
2025-09-16T23:46:00.347026Z	    },
2025-09-16T23:46:00.347109Z	    relatedBrands[]->{
2025-09-16T23:46:00.347199Z	      _id,
2025-09-16T23:46:00.34728Z	      name,
2025-09-16T23:46:00.347343Z	      "slug": slug.current,
2025-09-16T23:46:00.347407Z	      logo
2025-09-16T23:46:00.347463Z	    },
2025-09-16T23:46:00.347519Z	    targetMarket,
2025-09-16T23:46:00.347573Z	    complexity,
2025-09-16T23:46:00.347626Z	    publishedAt,
2025-09-16T23:46:00.347704Z	    isPublished,
2025-09-16T23:46:00.347776Z	    isFeatured,
2025-09-16T23:46:00.34785Z	    viewCount,
2025-09-16T23:46:00.347929Z	    _createdAt,
2025-09-16T23:46:00.348019Z	    _updatedAt
2025-09-16T23:46:00.348109Z	  
2025-09-16T23:46:00.34822Z	      },
2025-09-16T23:46:00.348327Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:46:00.348454Z	    }
2025-09-16T23:46:00.348558Z	  
2025-09-16T23:46:00.34865Z	Query parameters: {
2025-09-16T23:46:00.348764Z	  limit: 4,
2025-09-16T23:46:00.348828Z	  offset: 0,
2025-09-16T23:46:00.348889Z	  targetMarket: undefined,
2025-09-16T23:46:00.348988Z	  brand: 'qualcomm',
2025-09-16T23:46:00.349111Z	  featured: undefined
2025-09-16T23:46:00.349224Z	}
2025-09-16T23:46:00.349323Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:46:00.349432Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:46:00.349519Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.34961Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.349725Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.349826Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.349916Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.349991Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.350061Z	✅ [getBrandData] Found brand: PI
2025-09-16T23:46:00.350157Z	✅ [getBrandData] Found brand: PI
2025-09-16T23:46:00.350247Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-16T23:46:00.350507Z	Fetching products with query: 
2025-09-16T23:46:00.350665Z	    {
2025-09-16T23:46:00.350795Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.350972Z	        
2025-09-16T23:46:00.351048Z	    _id,
2025-09-16T23:46:00.351111Z	    _type,
2025-09-16T23:46:00.351192Z	    partNumber,
2025-09-16T23:46:00.351301Z	    "slug": slug.current,
2025-09-16T23:46:00.351362Z	    title,
2025-09-16T23:46:00.351425Z	    shortDescription,
2025-09-16T23:46:00.351482Z	    image,
2025-09-16T23:46:00.351536Z	    brand->{
2025-09-16T23:46:00.351592Z	      name,
2025-09-16T23:46:00.351649Z	      "slug": slug.current,
2025-09-16T23:46:00.351734Z	      logo
2025-09-16T23:46:00.351796Z	    },
2025-09-16T23:46:00.351852Z	    category->{
2025-09-16T23:46:00.351913Z	      name,
2025-09-16T23:46:00.351975Z	      "slug": slug.current
2025-09-16T23:46:00.352065Z	    },
2025-09-16T23:46:00.352163Z	    pricing{
2025-09-16T23:46:00.352257Z	      currency,
2025-09-16T23:46:00.352358Z	      tiers[]{
2025-09-16T23:46:00.352471Z	        quantity,
2025-09-16T23:46:00.352567Z	        price,
2025-09-16T23:46:00.352684Z	        unit
2025-09-16T23:46:00.352786Z	      },
2025-09-16T23:46:00.352859Z	      moq,
2025-09-16T23:46:00.352918Z	      leadTime,
2025-09-16T23:46:00.35301Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.353132Z	      "price": tiers[0].price,
2025-09-16T23:46:00.353229Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.353337Z	    },
2025-09-16T23:46:00.353464Z	    inventory{
2025-09-16T23:46:00.353538Z	      quantity,
2025-09-16T23:46:00.353644Z	      status,
2025-09-16T23:46:00.353765Z	      warehouse,
2025-09-16T23:46:00.35388Z	      lastUpdated,
2025-09-16T23:46:00.353981Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.354155Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.354237Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.354294Z	    },
2025-09-16T23:46:00.354502Z	    isActive,
2025-09-16T23:46:00.354587Z	    isFeatured,
2025-09-16T23:46:00.354785Z	    isNew,
2025-09-16T23:46:00.354897Z	    _createdAt,
2025-09-16T23:46:00.354983Z	    _updatedAt
2025-09-16T23:46:00.355041Z	  
2025-09-16T23:46:00.355165Z	      },
2025-09-16T23:46:00.355298Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-16T23:46:00.355478Z	    }
2025-09-16T23:46:00.355626Z	  
2025-09-16T23:46:00.355808Z	Query parameters: {
2025-09-16T23:46:00.355893Z	  limit: 8,
2025-09-16T23:46:00.356016Z	  offset: 0,
2025-09-16T23:46:00.356136Z	  category: undefined,
2025-09-16T23:46:00.356268Z	  brand: 'mediatek',
2025-09-16T23:46:00.356447Z	  featured: undefined
2025-09-16T23:46:00.356658Z	}
2025-09-16T23:46:00.356839Z	Fetching solutions with query: 
2025-09-16T23:46:00.35695Z	    {
2025-09-16T23:46:00.357065Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.357169Z	        
2025-09-16T23:46:00.357265Z	    _id,
2025-09-16T23:46:00.357434Z	    title,
2025-09-16T23:46:00.357514Z	    "slug": slug.current,
2025-09-16T23:46:00.357606Z	    summary,
2025-09-16T23:46:00.357736Z	    description,
2025-09-16T23:46:00.357879Z	    coverImage,
2025-09-16T23:46:00.357957Z	    primaryBrand->{
2025-09-16T23:46:00.358128Z	      _id,
2025-09-16T23:46:00.358323Z	      name,
2025-09-16T23:46:00.358445Z	      "slug": slug.current,
2025-09-16T23:46:00.35857Z	      logo
2025-09-16T23:46:00.358723Z	    },
2025-09-16T23:46:00.358852Z	    relatedBrands[]->{
2025-09-16T23:46:00.359217Z	      _id,
2025-09-16T23:46:00.35935Z	      name,
2025-09-16T23:46:00.359479Z	      "slug": slug.current,
2025-09-16T23:46:00.359601Z	      logo
2025-09-16T23:46:00.359735Z	    },
2025-09-16T23:46:00.359829Z	    targetMarket,
2025-09-16T23:46:00.359915Z	    complexity,
2025-09-16T23:46:00.360157Z	    publishedAt,
2025-09-16T23:46:00.360389Z	    isPublished,
2025-09-16T23:46:00.360615Z	    isFeatured,
2025-09-16T23:46:00.360883Z	    viewCount,
2025-09-16T23:46:00.360968Z	    _createdAt,
2025-09-16T23:46:00.361038Z	    _updatedAt
2025-09-16T23:46:00.361276Z	  
2025-09-16T23:46:00.361395Z	      },
2025-09-16T23:46:00.361496Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-16T23:46:00.361655Z	    }
2025-09-16T23:46:00.361816Z	  
2025-09-16T23:46:00.362173Z	Query parameters: {
2025-09-16T23:46:00.362378Z	  limit: 4,
2025-09-16T23:46:00.362474Z	  offset: 0,
2025-09-16T23:46:00.362576Z	  targetMarket: undefined,
2025-09-16T23:46:00.362702Z	  brand: 'mediatek',
2025-09-16T23:46:00.362811Z	  featured: undefined
2025-09-16T23:46:00.362918Z	}
2025-09-16T23:46:00.363138Z	✅ [getBrandData] Found brand: MediaTek
2025-09-16T23:46:00.363279Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.36341Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.363497Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-16T23:46:00.363576Z	Fetching products with query: 
2025-09-16T23:46:00.363687Z	    {
2025-09-16T23:46:00.363784Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.363878Z	        
2025-09-16T23:46:00.364002Z	    _id,
2025-09-16T23:46:00.364133Z	    _type,
2025-09-16T23:46:00.364312Z	    partNumber,
2025-09-16T23:46:00.364423Z	    "slug": slug.current,
2025-09-16T23:46:00.364534Z	    title,
2025-09-16T23:46:00.364714Z	    shortDescription,
2025-09-16T23:46:00.364868Z	    image,
2025-09-16T23:46:00.365006Z	    brand->{
2025-09-16T23:46:00.365182Z	      name,
2025-09-16T23:46:00.365285Z	      "slug": slug.current,
2025-09-16T23:46:00.365461Z	      logo
2025-09-16T23:46:00.36562Z	    },
2025-09-16T23:46:00.365761Z	    category->{
2025-09-16T23:46:00.36592Z	      name,
2025-09-16T23:46:00.366016Z	      "slug": slug.current
2025-09-16T23:46:00.366172Z	    },
2025-09-16T23:46:00.366335Z	    pricing{
2025-09-16T23:46:00.366465Z	      currency,
2025-09-16T23:46:00.366587Z	      tiers[]{
2025-09-16T23:46:00.366725Z	        quantity,
2025-09-16T23:46:00.366842Z	        price,
2025-09-16T23:46:00.366968Z	        unit
2025-09-16T23:46:00.36714Z	      },
2025-09-16T23:46:00.367219Z	      moq,
2025-09-16T23:46:00.367284Z	      leadTime,
2025-09-16T23:46:00.367508Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.367681Z	      "price": tiers[0].price,
2025-09-16T23:46:00.367921Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.368026Z	    },
2025-09-16T23:46:00.368186Z	    inventory{
2025-09-16T23:46:00.3683Z	      quantity,
2025-09-16T23:46:00.368499Z	      status,
2025-09-16T23:46:00.368578Z	      warehouse,
2025-09-16T23:46:00.368717Z	      lastUpdated,
2025-09-16T23:46:00.368818Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.368994Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.369152Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.36932Z	    },
2025-09-16T23:46:00.369451Z	    isActive,
2025-09-16T23:46:00.369614Z	    isFeatured,
2025-09-16T23:46:00.369764Z	    isNew,
2025-09-16T23:46:00.36988Z	    _createdAt,
2025-09-16T23:46:00.370027Z	    _updatedAt
2025-09-16T23:46:00.370143Z	  
2025-09-16T23:46:00.370223Z	      },
2025-09-16T23:46:00.370322Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-16T23:46:00.370466Z	    }
2025-09-16T23:46:00.370571Z	  
2025-09-16T23:46:00.370705Z	Query parameters: {
2025-09-16T23:46:00.37083Z	  limit: 8,
2025-09-16T23:46:00.370988Z	  offset: 0,
2025-09-16T23:46:00.371115Z	  category: undefined,
2025-09-16T23:46:00.371297Z	  brand: 'lem',
2025-09-16T23:46:00.371411Z	  featured: undefined
2025-09-16T23:46:00.371527Z	}
2025-09-16T23:46:00.371662Z	Fetching solutions with query: 
2025-09-16T23:46:00.371804Z	    {
2025-09-16T23:46:00.371949Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.372115Z	        
2025-09-16T23:46:00.372219Z	    _id,
2025-09-16T23:46:00.37233Z	    title,
2025-09-16T23:46:00.372444Z	    "slug": slug.current,
2025-09-16T23:46:00.372539Z	    summary,
2025-09-16T23:46:00.372645Z	    description,
2025-09-16T23:46:00.37277Z	    coverImage,
2025-09-16T23:46:00.372876Z	    primaryBrand->{
2025-09-16T23:46:00.372976Z	      _id,
2025-09-16T23:46:00.37307Z	      name,
2025-09-16T23:46:00.37317Z	      "slug": slug.current,
2025-09-16T23:46:00.37326Z	      logo
2025-09-16T23:46:00.373356Z	    },
2025-09-16T23:46:00.37346Z	    relatedBrands[]->{
2025-09-16T23:46:00.373593Z	      _id,
2025-09-16T23:46:00.373736Z	      name,
2025-09-16T23:46:00.373819Z	      "slug": slug.current,
2025-09-16T23:46:00.37393Z	      logo
2025-09-16T23:46:00.374026Z	    },
2025-09-16T23:46:00.374117Z	    targetMarket,
2025-09-16T23:46:00.374217Z	    complexity,
2025-09-16T23:46:00.374321Z	    publishedAt,
2025-09-16T23:46:00.374429Z	    isPublished,
2025-09-16T23:46:00.374528Z	    isFeatured,
2025-09-16T23:46:00.37462Z	    viewCount,
2025-09-16T23:46:00.374742Z	    _createdAt,
2025-09-16T23:46:00.374845Z	    _updatedAt
2025-09-16T23:46:00.374935Z	  
2025-09-16T23:46:00.375028Z	      },
2025-09-16T23:46:00.375127Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-16T23:46:00.37522Z	    }
2025-09-16T23:46:00.375331Z	  
2025-09-16T23:46:00.37545Z	Query parameters: {
2025-09-16T23:46:00.37555Z	  limit: 4,
2025-09-16T23:46:00.375682Z	  offset: 0,
2025-09-16T23:46:00.375806Z	  targetMarket: undefined,
2025-09-16T23:46:00.375999Z	  brand: 'lem',
2025-09-16T23:46:00.376119Z	  featured: undefined
2025-09-16T23:46:00.376222Z	}
2025-09-16T23:46:00.376318Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-16T23:46:00.376439Z	Fetching products with query: 
2025-09-16T23:46:00.376568Z	    {
2025-09-16T23:46:00.376712Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.376844Z	        
2025-09-16T23:46:00.376961Z	    _id,
2025-09-16T23:46:00.37708Z	    _type,
2025-09-16T23:46:00.377181Z	    partNumber,
2025-09-16T23:46:00.377311Z	    "slug": slug.current,
2025-09-16T23:46:00.377419Z	    title,
2025-09-16T23:46:00.377567Z	    shortDescription,
2025-09-16T23:46:00.377645Z	    image,
2025-09-16T23:46:00.377779Z	    brand->{
2025-09-16T23:46:00.377922Z	      name,
2025-09-16T23:46:00.37802Z	      "slug": slug.current,
2025-09-16T23:46:00.37814Z	      logo
2025-09-16T23:46:00.378277Z	    },
2025-09-16T23:46:00.37842Z	    category->{
2025-09-16T23:46:00.378525Z	      name,
2025-09-16T23:46:00.378639Z	      "slug": slug.current
2025-09-16T23:46:00.378819Z	    },
2025-09-16T23:46:00.378939Z	    pricing{
2025-09-16T23:46:00.379045Z	      currency,
2025-09-16T23:46:00.379273Z	      tiers[]{
2025-09-16T23:46:00.3794Z	        quantity,
2025-09-16T23:46:00.379559Z	        price,
2025-09-16T23:46:00.37973Z	        unit
2025-09-16T23:46:00.379846Z	      },
2025-09-16T23:46:00.380021Z	      moq,
2025-09-16T23:46:00.380203Z	      leadTime,
2025-09-16T23:46:00.380319Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.380472Z	      "price": tiers[0].price,
2025-09-16T23:46:00.380583Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.380704Z	    },
2025-09-16T23:46:00.380808Z	    inventory{
2025-09-16T23:46:00.380902Z	      quantity,
2025-09-16T23:46:00.380987Z	      status,
2025-09-16T23:46:00.381072Z	      warehouse,
2025-09-16T23:46:00.381155Z	      lastUpdated,
2025-09-16T23:46:00.381248Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.381353Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.38145Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.381542Z	    },
2025-09-16T23:46:00.381656Z	    isActive,
2025-09-16T23:46:00.381779Z	    isFeatured,
2025-09-16T23:46:00.381877Z	    isNew,
2025-09-16T23:46:00.381976Z	    _createdAt,
2025-09-16T23:46:00.382074Z	    _updatedAt
2025-09-16T23:46:00.38217Z	  
2025-09-16T23:46:00.38227Z	      },
2025-09-16T23:46:00.382449Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-16T23:46:00.382619Z	    }
2025-09-16T23:46:00.382777Z	  
2025-09-16T23:46:00.38289Z	Query parameters: {
2025-09-16T23:46:00.382993Z	  limit: 8,
2025-09-16T23:46:00.383121Z	  offset: 0,
2025-09-16T23:46:00.383237Z	  category: undefined,
2025-09-16T23:46:00.383334Z	  brand: 'lem',
2025-09-16T23:46:00.383433Z	  featured: undefined
2025-09-16T23:46:00.383521Z	}
2025-09-16T23:46:00.383927Z	Fetching solutions with query: 
2025-09-16T23:46:00.384094Z	    {
2025-09-16T23:46:00.384435Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.384719Z	        
2025-09-16T23:46:00.384826Z	    _id,
2025-09-16T23:46:00.3851Z	    title,
2025-09-16T23:46:00.385345Z	    "slug": slug.current,
2025-09-16T23:46:00.385525Z	    summary,
2025-09-16T23:46:00.385604Z	    description,
2025-09-16T23:46:00.385754Z	    coverImage,
2025-09-16T23:46:00.385846Z	    primaryBrand->{
2025-09-16T23:46:00.385985Z	      _id,
2025-09-16T23:46:00.386217Z	      name,
2025-09-16T23:46:00.386352Z	      "slug": slug.current,
2025-09-16T23:46:00.386621Z	      logo
2025-09-16T23:46:00.386735Z	    },
2025-09-16T23:46:00.387025Z	    relatedBrands[]->{
2025-09-16T23:46:00.387105Z	      _id,
2025-09-16T23:46:00.38722Z	      name,
2025-09-16T23:46:00.387411Z	      "slug": slug.current,
2025-09-16T23:46:00.387579Z	      logo
2025-09-16T23:46:00.387667Z	    },
2025-09-16T23:46:00.388005Z	    targetMarket,
2025-09-16T23:46:00.388083Z	    complexity,
2025-09-16T23:46:00.388354Z	    publishedAt,
2025-09-16T23:46:00.388438Z	    isPublished,
2025-09-16T23:46:00.388656Z	    isFeatured,
2025-09-16T23:46:00.388934Z	    viewCount,
2025-09-16T23:46:00.389022Z	    _createdAt,
2025-09-16T23:46:00.389162Z	    _updatedAt
2025-09-16T23:46:00.389347Z	  
2025-09-16T23:46:00.38947Z	      },
2025-09-16T23:46:00.389669Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-16T23:46:00.389961Z	    }
2025-09-16T23:46:00.390188Z	  
2025-09-16T23:46:00.390292Z	Query parameters: {
2025-09-16T23:46:00.390395Z	  limit: 4,
2025-09-16T23:46:00.390538Z	  offset: 0,
2025-09-16T23:46:00.39066Z	  targetMarket: undefined,
2025-09-16T23:46:00.390802Z	  brand: 'lem',
2025-09-16T23:46:00.390942Z	  featured: undefined
2025-09-16T23:46:00.391047Z	}
2025-09-16T23:46:00.391138Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-16T23:46:00.391257Z	Fetching products with query: 
2025-09-16T23:46:00.391359Z	    {
2025-09-16T23:46:00.391418Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.391492Z	        
2025-09-16T23:46:00.391613Z	    _id,
2025-09-16T23:46:00.391755Z	    _type,
2025-09-16T23:46:00.391848Z	    partNumber,
2025-09-16T23:46:00.391951Z	    "slug": slug.current,
2025-09-16T23:46:00.392052Z	    title,
2025-09-16T23:46:00.392154Z	    shortDescription,
2025-09-16T23:46:00.392268Z	    image,
2025-09-16T23:46:00.392405Z	    brand->{
2025-09-16T23:46:00.392481Z	      name,
2025-09-16T23:46:00.392586Z	      "slug": slug.current,
2025-09-16T23:46:00.392713Z	      logo
2025-09-16T23:46:00.392837Z	    },
2025-09-16T23:46:00.392971Z	    category->{
2025-09-16T23:46:00.393072Z	      name,
2025-09-16T23:46:00.393224Z	      "slug": slug.current
2025-09-16T23:46:00.393375Z	    },
2025-09-16T23:46:00.393452Z	    pricing{
2025-09-16T23:46:00.39357Z	      currency,
2025-09-16T23:46:00.393721Z	      tiers[]{
2025-09-16T23:46:00.393863Z	        quantity,
2025-09-16T23:46:00.393939Z	        price,
2025-09-16T23:46:00.394092Z	        unit
2025-09-16T23:46:00.394245Z	      },
2025-09-16T23:46:00.394328Z	      moq,
2025-09-16T23:46:00.394451Z	      leadTime,
2025-09-16T23:46:00.394513Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.394636Z	      "price": tiers[0].price,
2025-09-16T23:46:00.394742Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.394941Z	    },
2025-09-16T23:46:00.395093Z	    inventory{
2025-09-16T23:46:00.395171Z	      quantity,
2025-09-16T23:46:00.395287Z	      status,
2025-09-16T23:46:00.395412Z	      warehouse,
2025-09-16T23:46:00.395555Z	      lastUpdated,
2025-09-16T23:46:00.395623Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.395794Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.39588Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.396008Z	    },
2025-09-16T23:46:00.396143Z	    isActive,
2025-09-16T23:46:00.396278Z	    isFeatured,
2025-09-16T23:46:00.396407Z	    isNew,
2025-09-16T23:46:00.396494Z	    _createdAt,
2025-09-16T23:46:00.396619Z	    _updatedAt
2025-09-16T23:46:00.396779Z	  
2025-09-16T23:46:00.396934Z	      },
2025-09-16T23:46:00.397059Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-16T23:46:00.3972Z	    }
2025-09-16T23:46:00.397335Z	  
2025-09-16T23:46:00.397487Z	Query parameters: {
2025-09-16T23:46:00.397602Z	  limit: 8,
2025-09-16T23:46:00.397736Z	  offset: 0,
2025-09-16T23:46:00.397844Z	  category: undefined,
2025-09-16T23:46:00.397954Z	  brand: 'lem',
2025-09-16T23:46:00.398168Z	  featured: undefined
2025-09-16T23:46:00.39825Z	}
2025-09-16T23:46:00.398353Z	Fetching solutions with query: 
2025-09-16T23:46:00.398536Z	    {
2025-09-16T23:46:00.398907Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.399019Z	        
2025-09-16T23:46:00.399319Z	    _id,
2025-09-16T23:46:00.399438Z	    title,
2025-09-16T23:46:00.39954Z	    "slug": slug.current,
2025-09-16T23:46:00.399869Z	    summary,
2025-09-16T23:46:00.399952Z	    description,
2025-09-16T23:46:00.400018Z	    coverImage,
2025-09-16T23:46:00.40037Z	    primaryBrand->{
2025-09-16T23:46:00.40047Z	      _id,
2025-09-16T23:46:00.400684Z	      name,
2025-09-16T23:46:00.400865Z	      "slug": slug.current,
2025-09-16T23:46:00.401029Z	      logo
2025-09-16T23:46:00.401204Z	    },
2025-09-16T23:46:00.401378Z	    relatedBrands[]->{
2025-09-16T23:46:00.401481Z	      _id,
2025-09-16T23:46:00.40176Z	      name,
2025-09-16T23:46:00.401848Z	      "slug": slug.current,
2025-09-16T23:46:00.40193Z	      logo
2025-09-16T23:46:00.402321Z	    },
2025-09-16T23:46:00.40241Z	    targetMarket,
2025-09-16T23:46:00.402473Z	    complexity,
2025-09-16T23:46:00.402745Z	    publishedAt,
2025-09-16T23:46:00.403043Z	    isPublished,
2025-09-16T23:46:00.403135Z	    isFeatured,
2025-09-16T23:46:00.403199Z	    viewCount,
2025-09-16T23:46:00.403349Z	    _createdAt,
2025-09-16T23:46:00.403407Z	    _updatedAt
2025-09-16T23:46:00.403514Z	  
2025-09-16T23:46:00.403588Z	      },
2025-09-16T23:46:00.403653Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-16T23:46:00.403817Z	    }
2025-09-16T23:46:00.40389Z	  
2025-09-16T23:46:00.404026Z	Query parameters: {
2025-09-16T23:46:00.404161Z	  limit: 4,
2025-09-16T23:46:00.404294Z	  offset: 0,
2025-09-16T23:46:00.4044Z	  targetMarket: undefined,
2025-09-16T23:46:00.404536Z	  brand: 'lem',
2025-09-16T23:46:00.404655Z	  featured: undefined
2025-09-16T23:46:00.404794Z	}
2025-09-16T23:46:00.40491Z	✅ [getBrandData] Found brand: LEM
2025-09-16T23:46:00.405164Z	✅ [getBrandData] Found brand: LEM
2025-09-16T23:46:00.40528Z	Products fetch result: {
2025-09-16T23:46:00.405492Z	  totalProducts: 3,
2025-09-16T23:46:00.405741Z	  fetchedProducts: 3,
2025-09-16T23:46:00.405825Z	  firstProduct: {
2025-09-16T23:46:00.405891Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-16T23:46:00.40624Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-16T23:46:00.406402Z	    _type: 'product',
2025-09-16T23:46:00.406586Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-16T23:46:00.40679Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-16T23:46:00.406952Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-16T23:46:00.407053Z	    image: null,
2025-09-16T23:46:00.407187Z	    inventory: {
2025-09-16T23:46:00.407304Z	      inStock: true,
2025-09-16T23:46:00.407375Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-16T23:46:00.407659Z	      quantity: 0,
2025-09-16T23:46:00.407808Z	      status: 'in_stock',
2025-09-16T23:46:00.40788Z	      warehouse: null
2025-09-16T23:46:00.408009Z	    },
2025-09-16T23:46:00.408171Z	    isActive: true,
2025-09-16T23:46:00.408289Z	    isFeatured: false,
2025-09-16T23:46:00.408397Z	    isNew: false,
2025-09-16T23:46:00.40849Z	    partNumber: 'la55-p',
2025-09-16T23:46:00.408731Z	    pricing: {
2025-09-16T23:46:00.40898Z	      currency: 'CNY',
2025-09-16T23:46:00.409063Z	      leadTime: null,
2025-09-16T23:46:00.409194Z	      moq: null,
2025-09-16T23:46:00.40935Z	      price: null,
2025-09-16T23:46:00.409569Z	      tiers: null
2025-09-16T23:46:00.409743Z	    },
2025-09-16T23:46:00.409829Z	    shortDescription: '电流传感器la55-p',
2025-09-16T23:46:00.409897Z	    slug: 'la55-p',
2025-09-16T23:46:00.40996Z	    title: '电流传感器la55-p'
2025-09-16T23:46:00.410018Z	  }
2025-09-16T23:46:00.410074Z	}
2025-09-16T23:46:00.41013Z	Products fetch result: {
2025-09-16T23:46:00.410184Z	  totalProducts: 3,
2025-09-16T23:46:00.410238Z	  fetchedProducts: 3,
2025-09-16T23:46:00.410291Z	  firstProduct: {
2025-09-16T23:46:00.410347Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-16T23:46:00.410403Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-16T23:46:00.41046Z	    _type: 'product',
2025-09-16T23:46:00.410515Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-16T23:46:00.410569Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-16T23:46:00.410623Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-16T23:46:00.410723Z	    image: null,
2025-09-16T23:46:00.410788Z	    inventory: {
2025-09-16T23:46:00.410841Z	      inStock: true,
2025-09-16T23:46:00.410896Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-16T23:46:00.410951Z	      quantity: 0,
2025-09-16T23:46:00.411012Z	      status: 'in_stock',
2025-09-16T23:46:00.411074Z	      warehouse: null
2025-09-16T23:46:00.411129Z	    },
2025-09-16T23:46:00.411183Z	    isActive: true,
2025-09-16T23:46:00.41134Z	    isFeatured: false,
2025-09-16T23:46:00.411475Z	    isNew: false,
2025-09-16T23:46:00.411544Z	    partNumber: 'la55-p',
2025-09-16T23:46:00.411617Z	    pricing: {
2025-09-16T23:46:00.411726Z	      currency: 'CNY',
2025-09-16T23:46:00.41182Z	      leadTime: null,
2025-09-16T23:46:00.411888Z	      moq: null,
2025-09-16T23:46:00.411957Z	      price: null,
2025-09-16T23:46:00.412038Z	      tiers: null
2025-09-16T23:46:00.412128Z	    },
2025-09-16T23:46:00.412216Z	    shortDescription: '电流传感器la55-p',
2025-09-16T23:46:00.412399Z	    slug: 'la55-p',
2025-09-16T23:46:00.412565Z	    title: '电流传感器la55-p'
2025-09-16T23:46:00.412716Z	  }
2025-09-16T23:46:00.412846Z	}
2025-09-16T23:46:00.412954Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.413174Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.413306Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:46:00.413424Z	Fetching products with query: 
2025-09-16T23:46:00.413536Z	    {
2025-09-16T23:46:00.413643Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.413784Z	        
2025-09-16T23:46:00.413987Z	    _id,
2025-09-16T23:46:00.414118Z	    _type,
2025-09-16T23:46:00.414302Z	    partNumber,
2025-09-16T23:46:00.414415Z	    "slug": slug.current,
2025-09-16T23:46:00.414515Z	    title,
2025-09-16T23:46:00.414626Z	    shortDescription,
2025-09-16T23:46:00.414755Z	    image,
2025-09-16T23:46:00.414854Z	    brand->{
2025-09-16T23:46:00.414945Z	      name,
2025-09-16T23:46:00.415029Z	      "slug": slug.current,
2025-09-16T23:46:00.415114Z	      logo
2025-09-16T23:46:00.415204Z	    },
2025-09-16T23:46:00.415314Z	    category->{
2025-09-16T23:46:00.415429Z	      name,
2025-09-16T23:46:00.415532Z	      "slug": slug.current
2025-09-16T23:46:00.415641Z	    },
2025-09-16T23:46:00.416126Z	    pricing{
2025-09-16T23:46:00.416287Z	      currency,
2025-09-16T23:46:00.416408Z	      tiers[]{
2025-09-16T23:46:00.416511Z	        quantity,
2025-09-16T23:46:00.416605Z	        price,
2025-09-16T23:46:00.416724Z	        unit
2025-09-16T23:46:00.416825Z	      },
2025-09-16T23:46:00.416923Z	      moq,
2025-09-16T23:46:00.417017Z	      leadTime,
2025-09-16T23:46:00.417112Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.417208Z	      "price": tiers[0].price,
2025-09-16T23:46:00.417321Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.417435Z	    },
2025-09-16T23:46:00.417534Z	    inventory{
2025-09-16T23:46:00.417633Z	      quantity,
2025-09-16T23:46:00.417775Z	      status,
2025-09-16T23:46:00.417876Z	      warehouse,
2025-09-16T23:46:00.417971Z	      lastUpdated,
2025-09-16T23:46:00.418065Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.41816Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.418257Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.418358Z	    },
2025-09-16T23:46:00.418482Z	    isActive,
2025-09-16T23:46:00.418579Z	    isFeatured,
2025-09-16T23:46:00.418956Z	    isNew,
2025-09-16T23:46:00.419318Z	    _createdAt,
2025-09-16T23:46:00.419499Z	    _updatedAt
2025-09-16T23:46:00.419629Z	  
2025-09-16T23:46:00.419757Z	      },
2025-09-16T23:46:00.4199Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:46:00.420025Z	    }
2025-09-16T23:46:00.420136Z	  
2025-09-16T23:46:00.420256Z	Query parameters: {
2025-09-16T23:46:00.420463Z	  limit: 8,
2025-09-16T23:46:00.420795Z	  offset: 0,
2025-09-16T23:46:00.420934Z	  category: undefined,
2025-09-16T23:46:00.421099Z	  brand: 'littelfuse',
2025-09-16T23:46:00.421289Z	  featured: undefined
2025-09-16T23:46:00.421656Z	}
2025-09-16T23:46:00.421953Z	Fetching solutions with query: 
2025-09-16T23:46:00.422093Z	    {
2025-09-16T23:46:00.422305Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.422577Z	        
2025-09-16T23:46:00.422649Z	    _id,
2025-09-16T23:46:00.422856Z	    title,
2025-09-16T23:46:00.422953Z	    "slug": slug.current,
2025-09-16T23:46:00.423019Z	    summary,
2025-09-16T23:46:00.423074Z	    description,
2025-09-16T23:46:00.423161Z	    coverImage,
2025-09-16T23:46:00.423535Z	    primaryBrand->{
2025-09-16T23:46:00.423753Z	      _id,
2025-09-16T23:46:00.424383Z	      name,
2025-09-16T23:46:00.424545Z	      "slug": slug.current,
2025-09-16T23:46:00.424836Z	      logo
2025-09-16T23:46:00.42514Z	    },
2025-09-16T23:46:00.425304Z	    relatedBrands[]->{
2025-09-16T23:46:00.425413Z	      _id,
2025-09-16T23:46:00.425524Z	      name,
2025-09-16T23:46:00.425729Z	      "slug": slug.current,
2025-09-16T23:46:00.425842Z	      logo
2025-09-16T23:46:00.425956Z	    },
2025-09-16T23:46:00.426167Z	    targetMarket,
2025-09-16T23:46:00.426587Z	    complexity,
2025-09-16T23:46:00.42693Z	    publishedAt,
2025-09-16T23:46:00.427286Z	    isPublished,
2025-09-16T23:46:00.427698Z	    isFeatured,
2025-09-16T23:46:00.428183Z	    viewCount,
2025-09-16T23:46:00.428524Z	    _createdAt,
2025-09-16T23:46:00.428744Z	    _updatedAt
2025-09-16T23:46:00.428915Z	  
2025-09-16T23:46:00.429167Z	      },
2025-09-16T23:46:00.429292Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:46:00.429398Z	    }
2025-09-16T23:46:00.429474Z	  
2025-09-16T23:46:00.429583Z	Query parameters: {
2025-09-16T23:46:00.429707Z	  limit: 4,
2025-09-16T23:46:00.429808Z	  offset: 0,
2025-09-16T23:46:00.429907Z	  targetMarket: undefined,
2025-09-16T23:46:00.430046Z	  brand: 'littelfuse',
2025-09-16T23:46:00.430178Z	  featured: undefined
2025-09-16T23:46:00.430276Z	}
2025-09-16T23:46:00.430407Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:46:00.430509Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.430778Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.430961Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:46:00.431317Z	Fetching products with query: 
2025-09-16T23:46:00.431512Z	    {
2025-09-16T23:46:00.431631Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.43175Z	        
2025-09-16T23:46:00.431854Z	    _id,
2025-09-16T23:46:00.431941Z	    _type,
2025-09-16T23:46:00.432229Z	    partNumber,
2025-09-16T23:46:00.432421Z	    "slug": slug.current,
2025-09-16T23:46:00.432586Z	    title,
2025-09-16T23:46:00.433004Z	    shortDescription,
2025-09-16T23:46:00.433372Z	    image,
2025-09-16T23:46:00.433532Z	    brand->{
2025-09-16T23:46:00.434032Z	      name,
2025-09-16T23:46:00.434247Z	      "slug": slug.current,
2025-09-16T23:46:00.434414Z	      logo
2025-09-16T23:46:00.434554Z	    },
2025-09-16T23:46:00.434702Z	    category->{
2025-09-16T23:46:00.434878Z	      name,
2025-09-16T23:46:00.435022Z	      "slug": slug.current
2025-09-16T23:46:00.435145Z	    },
2025-09-16T23:46:00.435258Z	    pricing{
2025-09-16T23:46:00.435363Z	      currency,
2025-09-16T23:46:00.435474Z	      tiers[]{
2025-09-16T23:46:00.435581Z	        quantity,
2025-09-16T23:46:00.435706Z	        price,
2025-09-16T23:46:00.435822Z	        unit
2025-09-16T23:46:00.435915Z	      },
2025-09-16T23:46:00.436058Z	      moq,
2025-09-16T23:46:00.436386Z	      leadTime,
2025-09-16T23:46:00.436922Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.437221Z	      "price": tiers[0].price,
2025-09-16T23:46:00.43742Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.437526Z	    },
2025-09-16T23:46:00.437714Z	    inventory{
2025-09-16T23:46:00.437887Z	      quantity,
2025-09-16T23:46:00.437991Z	      status,
2025-09-16T23:46:00.43806Z	      warehouse,
2025-09-16T23:46:00.438118Z	      lastUpdated,
2025-09-16T23:46:00.438184Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.438243Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.438297Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.438351Z	    },
2025-09-16T23:46:00.438411Z	    isActive,
2025-09-16T23:46:00.438465Z	    isFeatured,
2025-09-16T23:46:00.438529Z	    isNew,
2025-09-16T23:46:00.438605Z	    _createdAt,
2025-09-16T23:46:00.438779Z	    _updatedAt
2025-09-16T23:46:00.438898Z	  
2025-09-16T23:46:00.439006Z	      },
2025-09-16T23:46:00.439111Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:46:00.439234Z	    }
2025-09-16T23:46:00.439353Z	  
2025-09-16T23:46:00.439463Z	Query parameters: {
2025-09-16T23:46:00.43956Z	  limit: 8,
2025-09-16T23:46:00.439666Z	  offset: 0,
2025-09-16T23:46:00.439796Z	  category: undefined,
2025-09-16T23:46:00.439895Z	  brand: 'littelfuse',
2025-09-16T23:46:00.440015Z	  featured: undefined
2025-09-16T23:46:00.440131Z	}
2025-09-16T23:46:00.440222Z	Fetching solutions with query: 
2025-09-16T23:46:00.440316Z	    {
2025-09-16T23:46:00.440423Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.44053Z	        
2025-09-16T23:46:00.440634Z	    _id,
2025-09-16T23:46:00.440744Z	    title,
2025-09-16T23:46:00.440837Z	    "slug": slug.current,
2025-09-16T23:46:00.440929Z	    summary,
2025-09-16T23:46:00.44102Z	    description,
2025-09-16T23:46:00.441115Z	    coverImage,
2025-09-16T23:46:00.441208Z	    primaryBrand->{
2025-09-16T23:46:00.441299Z	      _id,
2025-09-16T23:46:00.441413Z	      name,
2025-09-16T23:46:00.441521Z	      "slug": slug.current,
2025-09-16T23:46:00.441624Z	      logo
2025-09-16T23:46:00.441751Z	    },
2025-09-16T23:46:00.44186Z	    relatedBrands[]->{
2025-09-16T23:46:00.441971Z	      _id,
2025-09-16T23:46:00.442071Z	      name,
2025-09-16T23:46:00.442182Z	      "slug": slug.current,
2025-09-16T23:46:00.442286Z	      logo
2025-09-16T23:46:00.442385Z	    },
2025-09-16T23:46:00.442499Z	    targetMarket,
2025-09-16T23:46:00.4426Z	    complexity,
2025-09-16T23:46:00.442728Z	    publishedAt,
2025-09-16T23:46:00.442823Z	    isPublished,
2025-09-16T23:46:00.442913Z	    isFeatured,
2025-09-16T23:46:00.443002Z	    viewCount,
2025-09-16T23:46:00.443112Z	    _createdAt,
2025-09-16T23:46:00.443212Z	    _updatedAt
2025-09-16T23:46:00.443318Z	  
2025-09-16T23:46:00.44342Z	      },
2025-09-16T23:46:00.443528Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:46:00.443639Z	    }
2025-09-16T23:46:00.443776Z	  
2025-09-16T23:46:00.443882Z	Query parameters: {
2025-09-16T23:46:00.443983Z	  limit: 4,
2025-09-16T23:46:00.444083Z	  offset: 0,
2025-09-16T23:46:00.444183Z	  targetMarket: undefined,
2025-09-16T23:46:00.444288Z	  brand: 'littelfuse',
2025-09-16T23:46:00.444383Z	  featured: undefined
2025-09-16T23:46:00.444479Z	}
2025-09-16T23:46:00.44457Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:46:00.444697Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.444806Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.44491Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-16T23:46:00.44502Z	Fetching products with query: 
2025-09-16T23:46:00.445115Z	    {
2025-09-16T23:46:00.44522Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.445326Z	        
2025-09-16T23:46:00.445445Z	    _id,
2025-09-16T23:46:00.445561Z	    _type,
2025-09-16T23:46:00.445693Z	    partNumber,
2025-09-16T23:46:00.445813Z	    "slug": slug.current,
2025-09-16T23:46:00.445916Z	    title,
2025-09-16T23:46:00.446026Z	    shortDescription,
2025-09-16T23:46:00.446135Z	    image,
2025-09-16T23:46:00.44623Z	    brand->{
2025-09-16T23:46:00.446343Z	      name,
2025-09-16T23:46:00.446453Z	      "slug": slug.current,
2025-09-16T23:46:00.446554Z	      logo
2025-09-16T23:46:00.446665Z	    },
2025-09-16T23:46:00.446791Z	    category->{
2025-09-16T23:46:00.446895Z	      name,
2025-09-16T23:46:00.446994Z	      "slug": slug.current
2025-09-16T23:46:00.447088Z	    },
2025-09-16T23:46:00.447188Z	    pricing{
2025-09-16T23:46:00.447281Z	      currency,
2025-09-16T23:46:00.447384Z	      tiers[]{
2025-09-16T23:46:00.447481Z	        quantity,
2025-09-16T23:46:00.447593Z	        price,
2025-09-16T23:46:00.447726Z	        unit
2025-09-16T23:46:00.447839Z	      },
2025-09-16T23:46:00.447947Z	      moq,
2025-09-16T23:46:00.448062Z	      leadTime,
2025-09-16T23:46:00.448166Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.448278Z	      "price": tiers[0].price,
2025-09-16T23:46:00.448387Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.448492Z	    },
2025-09-16T23:46:00.44861Z	    inventory{
2025-09-16T23:46:00.448739Z	      quantity,
2025-09-16T23:46:00.448844Z	      status,
2025-09-16T23:46:00.448946Z	      warehouse,
2025-09-16T23:46:00.449043Z	      lastUpdated,
2025-09-16T23:46:00.449143Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.449257Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.449368Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.449478Z	    },
2025-09-16T23:46:00.449576Z	    isActive,
2025-09-16T23:46:00.449696Z	    isFeatured,
2025-09-16T23:46:00.449819Z	    isNew,
2025-09-16T23:46:00.449925Z	    _createdAt,
2025-09-16T23:46:00.450026Z	    _updatedAt
2025-09-16T23:46:00.450134Z	  
2025-09-16T23:46:00.450237Z	      },
2025-09-16T23:46:00.450338Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-16T23:46:00.450472Z	    }
2025-09-16T23:46:00.450576Z	  
2025-09-16T23:46:00.450688Z	Query parameters: {
2025-09-16T23:46:00.450792Z	  limit: 8,
2025-09-16T23:46:00.450892Z	  offset: 0,
2025-09-16T23:46:00.450988Z	  category: undefined,
2025-09-16T23:46:00.451096Z	  brand: 'sanrex',
2025-09-16T23:46:00.451201Z	  featured: undefined
2025-09-16T23:46:00.451364Z	}
2025-09-16T23:46:00.451479Z	Fetching solutions with query: 
2025-09-16T23:46:00.451589Z	    {
2025-09-16T23:46:00.451723Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.451859Z	        
2025-09-16T23:46:00.451966Z	    _id,
2025-09-16T23:46:00.452059Z	    title,
2025-09-16T23:46:00.452163Z	    "slug": slug.current,
2025-09-16T23:46:00.45226Z	    summary,
2025-09-16T23:46:00.452357Z	    description,
2025-09-16T23:46:00.452463Z	    coverImage,
2025-09-16T23:46:00.452559Z	    primaryBrand->{
2025-09-16T23:46:00.452666Z	      _id,
2025-09-16T23:46:00.452793Z	      name,
2025-09-16T23:46:00.452899Z	      "slug": slug.current,
2025-09-16T23:46:00.453002Z	      logo
2025-09-16T23:46:00.453091Z	    },
2025-09-16T23:46:00.453185Z	    relatedBrands[]->{
2025-09-16T23:46:00.45328Z	      _id,
2025-09-16T23:46:00.453385Z	      name,
2025-09-16T23:46:00.453487Z	      "slug": slug.current,
2025-09-16T23:46:00.453576Z	      logo
2025-09-16T23:46:00.45369Z	    },
2025-09-16T23:46:00.453807Z	    targetMarket,
2025-09-16T23:46:00.453911Z	    complexity,
2025-09-16T23:46:00.454013Z	    publishedAt,
2025-09-16T23:46:00.45412Z	    isPublished,
2025-09-16T23:46:00.454235Z	    isFeatured,
2025-09-16T23:46:00.454342Z	    viewCount,
2025-09-16T23:46:00.454446Z	    _createdAt,
2025-09-16T23:46:00.454545Z	    _updatedAt
2025-09-16T23:46:00.454653Z	  
2025-09-16T23:46:00.454768Z	      },
2025-09-16T23:46:00.454864Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-16T23:46:00.45497Z	    }
2025-09-16T23:46:00.455068Z	  
2025-09-16T23:46:00.455168Z	Query parameters: {
2025-09-16T23:46:00.455257Z	  limit: 4,
2025-09-16T23:46:00.45537Z	  offset: 0,
2025-09-16T23:46:00.455471Z	  targetMarket: undefined,
2025-09-16T23:46:00.455581Z	  brand: 'sanrex',
2025-09-16T23:46:00.455712Z	  featured: undefined
2025-09-16T23:46:00.455817Z	}
2025-09-16T23:46:00.455913Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-16T23:46:00.45603Z	Fetching products with query: 
2025-09-16T23:46:00.4561Z	    {
2025-09-16T23:46:00.456156Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.456255Z	        
2025-09-16T23:46:00.45635Z	    _id,
2025-09-16T23:46:00.45645Z	    _type,
2025-09-16T23:46:00.456571Z	    partNumber,
2025-09-16T23:46:00.4567Z	    "slug": slug.current,
2025-09-16T23:46:00.456807Z	    title,
2025-09-16T23:46:00.456912Z	    shortDescription,
2025-09-16T23:46:00.45701Z	    image,
2025-09-16T23:46:00.45711Z	    brand->{
2025-09-16T23:46:00.457206Z	      name,
2025-09-16T23:46:00.457309Z	      "slug": slug.current,
2025-09-16T23:46:00.457411Z	      logo
2025-09-16T23:46:00.457517Z	    },
2025-09-16T23:46:00.45759Z	    category->{
2025-09-16T23:46:00.457664Z	      name,
2025-09-16T23:46:00.457771Z	      "slug": slug.current
2025-09-16T23:46:00.457838Z	    },
2025-09-16T23:46:00.457916Z	    pricing{
2025-09-16T23:46:00.457994Z	      currency,
2025-09-16T23:46:00.45807Z	      tiers[]{
2025-09-16T23:46:00.458146Z	        quantity,
2025-09-16T23:46:00.458204Z	        price,
2025-09-16T23:46:00.45826Z	        unit
2025-09-16T23:46:00.458367Z	      },
2025-09-16T23:46:00.458474Z	      moq,
2025-09-16T23:46:00.458854Z	      leadTime,
2025-09-16T23:46:00.459011Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.459199Z	      "price": tiers[0].price,
2025-09-16T23:46:00.459458Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.459631Z	    },
2025-09-16T23:46:00.459763Z	    inventory{
2025-09-16T23:46:00.459835Z	      quantity,
2025-09-16T23:46:00.459896Z	      status,
2025-09-16T23:46:00.459957Z	      warehouse,
2025-09-16T23:46:00.460022Z	      lastUpdated,
2025-09-16T23:46:00.460081Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.460142Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.460199Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.460269Z	    },
2025-09-16T23:46:00.460337Z	    isActive,
2025-09-16T23:46:00.460406Z	    isFeatured,
2025-09-16T23:46:00.46048Z	    isNew,
2025-09-16T23:46:00.460545Z	    _createdAt,
2025-09-16T23:46:00.460615Z	    _updatedAt
2025-09-16T23:46:00.460695Z	  
2025-09-16T23:46:00.460782Z	      },
2025-09-16T23:46:00.460846Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-16T23:46:00.460911Z	    }
2025-09-16T23:46:00.46097Z	  
2025-09-16T23:46:00.461039Z	Query parameters: {
2025-09-16T23:46:00.461101Z	  limit: 8,
2025-09-16T23:46:00.461168Z	  offset: 0,
2025-09-16T23:46:00.461227Z	  category: undefined,
2025-09-16T23:46:00.461289Z	  brand: 'sanrex',
2025-09-16T23:46:00.461346Z	  featured: undefined
2025-09-16T23:46:00.461403Z	}
2025-09-16T23:46:00.46147Z	Fetching solutions with query: 
2025-09-16T23:46:00.461531Z	    {
2025-09-16T23:46:00.461591Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.461651Z	        
2025-09-16T23:46:00.461728Z	    _id,
2025-09-16T23:46:00.461804Z	    title,
2025-09-16T23:46:00.461863Z	    "slug": slug.current,
2025-09-16T23:46:00.461919Z	    summary,
2025-09-16T23:46:00.46198Z	    description,
2025-09-16T23:46:00.462042Z	    coverImage,
2025-09-16T23:46:00.4621Z	    primaryBrand->{
2025-09-16T23:46:00.462177Z	      _id,
2025-09-16T23:46:00.462244Z	      name,
2025-09-16T23:46:00.462309Z	      "slug": slug.current,
2025-09-16T23:46:00.462373Z	      logo
2025-09-16T23:46:00.462433Z	    },
2025-09-16T23:46:00.462509Z	    relatedBrands[]->{
2025-09-16T23:46:00.462567Z	      _id,
2025-09-16T23:46:00.462629Z	      name,
2025-09-16T23:46:00.4627Z	      "slug": slug.current,
2025-09-16T23:46:00.462766Z	      logo
2025-09-16T23:46:00.462822Z	    },
2025-09-16T23:46:00.462879Z	    targetMarket,
2025-09-16T23:46:00.462941Z	    complexity,
2025-09-16T23:46:00.463005Z	    publishedAt,
2025-09-16T23:46:00.463069Z	    isPublished,
2025-09-16T23:46:00.463133Z	    isFeatured,
2025-09-16T23:46:00.463193Z	    viewCount,
2025-09-16T23:46:00.463249Z	    _createdAt,
2025-09-16T23:46:00.463308Z	    _updatedAt
2025-09-16T23:46:00.463365Z	  
2025-09-16T23:46:00.463423Z	      },
2025-09-16T23:46:00.463488Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-16T23:46:00.463551Z	    }
2025-09-16T23:46:00.463608Z	  
2025-09-16T23:46:00.463665Z	Query parameters: {
2025-09-16T23:46:00.463734Z	  limit: 4,
2025-09-16T23:46:00.463798Z	  offset: 0,
2025-09-16T23:46:00.463854Z	  targetMarket: undefined,
2025-09-16T23:46:00.463916Z	  brand: 'sanrex',
2025-09-16T23:46:00.463973Z	  featured: undefined
2025-09-16T23:46:00.464029Z	}
2025-09-16T23:46:00.464087Z	✅ [getBrandData] Found brand: Sanrex
2025-09-16T23:46:00.464333Z	✅ [getBrandData] Found brand: Sanrex
2025-09-16T23:46:00.46446Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.464596Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.464778Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.464888Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.465037Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:46:00.465139Z	Fetching products with query: 
2025-09-16T23:46:00.465231Z	    {
2025-09-16T23:46:00.465359Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.465525Z	        
2025-09-16T23:46:00.465661Z	    _id,
2025-09-16T23:46:00.46589Z	    _type,
2025-09-16T23:46:00.466116Z	    partNumber,
2025-09-16T23:46:00.466227Z	    "slug": slug.current,
2025-09-16T23:46:00.466292Z	    title,
2025-09-16T23:46:00.46635Z	    shortDescription,
2025-09-16T23:46:00.466424Z	    image,
2025-09-16T23:46:00.466501Z	    brand->{
2025-09-16T23:46:00.466572Z	      name,
2025-09-16T23:46:00.46664Z	      "slug": slug.current,
2025-09-16T23:46:00.466733Z	      logo
2025-09-16T23:46:00.466816Z	    },
2025-09-16T23:46:00.466886Z	    category->{
2025-09-16T23:46:00.466989Z	      name,
2025-09-16T23:46:00.467065Z	      "slug": slug.current
2025-09-16T23:46:00.467129Z	    },
2025-09-16T23:46:00.467186Z	    pricing{
2025-09-16T23:46:00.467241Z	      currency,
2025-09-16T23:46:00.467306Z	      tiers[]{
2025-09-16T23:46:00.467364Z	        quantity,
2025-09-16T23:46:00.467437Z	        price,
2025-09-16T23:46:00.467497Z	        unit
2025-09-16T23:46:00.467551Z	      },
2025-09-16T23:46:00.467606Z	      moq,
2025-09-16T23:46:00.467664Z	      leadTime,
2025-09-16T23:46:00.467748Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.467809Z	      "price": tiers[0].price,
2025-09-16T23:46:00.467867Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.467929Z	    },
2025-09-16T23:46:00.467986Z	    inventory{
2025-09-16T23:46:00.468049Z	      quantity,
2025-09-16T23:46:00.468111Z	      status,
2025-09-16T23:46:00.468178Z	      warehouse,
2025-09-16T23:46:00.468236Z	      lastUpdated,
2025-09-16T23:46:00.468296Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.468361Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.468421Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.468484Z	    },
2025-09-16T23:46:00.468539Z	    isActive,
2025-09-16T23:46:00.468602Z	    isFeatured,
2025-09-16T23:46:00.468659Z	    isNew,
2025-09-16T23:46:00.468737Z	    _createdAt,
2025-09-16T23:46:00.468805Z	    _updatedAt
2025-09-16T23:46:00.468867Z	  
2025-09-16T23:46:00.468935Z	      },
2025-09-16T23:46:00.468994Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:46:00.469053Z	    }
2025-09-16T23:46:00.469111Z	  
2025-09-16T23:46:00.469176Z	Query parameters: {
2025-09-16T23:46:00.469241Z	  limit: 8,
2025-09-16T23:46:00.469298Z	  offset: 0,
2025-09-16T23:46:00.46936Z	  category: undefined,
2025-09-16T23:46:00.469417Z	  brand: 'Electronicon',
2025-09-16T23:46:00.469483Z	  featured: undefined
2025-09-16T23:46:00.469543Z	}
2025-09-16T23:46:00.469609Z	Fetching solutions with query: 
2025-09-16T23:46:00.469668Z	    {
2025-09-16T23:46:00.469751Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.469813Z	        
2025-09-16T23:46:00.469869Z	    _id,
2025-09-16T23:46:00.46993Z	    title,
2025-09-16T23:46:00.469987Z	    "slug": slug.current,
2025-09-16T23:46:00.470048Z	    summary,
2025-09-16T23:46:00.470114Z	    description,
2025-09-16T23:46:00.470175Z	    coverImage,
2025-09-16T23:46:00.470232Z	    primaryBrand->{
2025-09-16T23:46:00.470306Z	      _id,
2025-09-16T23:46:00.470367Z	      name,
2025-09-16T23:46:00.47044Z	      "slug": slug.current,
2025-09-16T23:46:00.470498Z	      logo
2025-09-16T23:46:00.470556Z	    },
2025-09-16T23:46:00.470612Z	    relatedBrands[]->{
2025-09-16T23:46:00.47068Z	      _id,
2025-09-16T23:46:00.470746Z	      name,
2025-09-16T23:46:00.470805Z	      "slug": slug.current,
2025-09-16T23:46:00.470862Z	      logo
2025-09-16T23:46:00.470924Z	    },
2025-09-16T23:46:00.470982Z	    targetMarket,
2025-09-16T23:46:00.471052Z	    complexity,
2025-09-16T23:46:00.471109Z	    publishedAt,
2025-09-16T23:46:00.471164Z	    isPublished,
2025-09-16T23:46:00.471222Z	    isFeatured,
2025-09-16T23:46:00.471283Z	    viewCount,
2025-09-16T23:46:00.471339Z	    _createdAt,
2025-09-16T23:46:00.471401Z	    _updatedAt
2025-09-16T23:46:00.471465Z	  
2025-09-16T23:46:00.47153Z	      },
2025-09-16T23:46:00.471594Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:46:00.471658Z	    }
2025-09-16T23:46:00.471733Z	  
2025-09-16T23:46:00.471797Z	Query parameters: {
2025-09-16T23:46:00.471859Z	  limit: 4,
2025-09-16T23:46:00.471919Z	  offset: 0,
2025-09-16T23:46:00.471975Z	  targetMarket: undefined,
2025-09-16T23:46:00.472031Z	  brand: 'Electronicon',
2025-09-16T23:46:00.472088Z	  featured: undefined
2025-09-16T23:46:00.472145Z	}
2025-09-16T23:46:00.472203Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:46:00.47226Z	Fetching products with query: 
2025-09-16T23:46:00.472325Z	    {
2025-09-16T23:46:00.472388Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.472459Z	        
2025-09-16T23:46:00.472526Z	    _id,
2025-09-16T23:46:00.472586Z	    _type,
2025-09-16T23:46:00.472641Z	    partNumber,
2025-09-16T23:46:00.47271Z	    "slug": slug.current,
2025-09-16T23:46:00.472776Z	    title,
2025-09-16T23:46:00.472835Z	    shortDescription,
2025-09-16T23:46:00.472896Z	    image,
2025-09-16T23:46:00.47295Z	    brand->{
2025-09-16T23:46:00.473008Z	      name,
2025-09-16T23:46:00.473067Z	      "slug": slug.current,
2025-09-16T23:46:00.473125Z	      logo
2025-09-16T23:46:00.473186Z	    },
2025-09-16T23:46:00.473249Z	    category->{
2025-09-16T23:46:00.473311Z	      name,
2025-09-16T23:46:00.473367Z	      "slug": slug.current
2025-09-16T23:46:00.473423Z	    },
2025-09-16T23:46:00.473488Z	    pricing{
2025-09-16T23:46:00.473588Z	      currency,
2025-09-16T23:46:00.473803Z	      tiers[]{
2025-09-16T23:46:00.473893Z	        quantity,
2025-09-16T23:46:00.474054Z	        price,
2025-09-16T23:46:00.474208Z	        unit
2025-09-16T23:46:00.474332Z	      },
2025-09-16T23:46:00.474585Z	      moq,
2025-09-16T23:46:00.474812Z	      leadTime,
2025-09-16T23:46:00.474897Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.474985Z	      "price": tiers[0].price,
2025-09-16T23:46:00.475171Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.475388Z	    },
2025-09-16T23:46:00.475493Z	    inventory{
2025-09-16T23:46:00.475615Z	      quantity,
2025-09-16T23:46:00.475746Z	      status,
2025-09-16T23:46:00.475904Z	      warehouse,
2025-09-16T23:46:00.475996Z	      lastUpdated,
2025-09-16T23:46:00.476079Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.47623Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.476318Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.476427Z	    },
2025-09-16T23:46:00.476509Z	    isActive,
2025-09-16T23:46:00.476604Z	    isFeatured,
2025-09-16T23:46:00.476752Z	    isNew,
2025-09-16T23:46:00.476871Z	    _createdAt,
2025-09-16T23:46:00.476978Z	    _updatedAt
2025-09-16T23:46:00.47708Z	  
2025-09-16T23:46:00.477177Z	      },
2025-09-16T23:46:00.477286Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:46:00.477402Z	    }
2025-09-16T23:46:00.477501Z	  
2025-09-16T23:46:00.477589Z	Query parameters: {
2025-09-16T23:46:00.477698Z	  limit: 8,
2025-09-16T23:46:00.477832Z	  offset: 0,
2025-09-16T23:46:00.477936Z	  category: undefined,
2025-09-16T23:46:00.478082Z	  brand: 'Electronicon',
2025-09-16T23:46:00.478208Z	  featured: undefined
2025-09-16T23:46:00.478331Z	}
2025-09-16T23:46:00.478434Z	Fetching solutions with query: 
2025-09-16T23:46:00.478509Z	    {
2025-09-16T23:46:00.478613Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.478767Z	        
2025-09-16T23:46:00.478876Z	    _id,
2025-09-16T23:46:00.478978Z	    title,
2025-09-16T23:46:00.479079Z	    "slug": slug.current,
2025-09-16T23:46:00.479187Z	    summary,
2025-09-16T23:46:00.479302Z	    description,
2025-09-16T23:46:00.479402Z	    coverImage,
2025-09-16T23:46:00.47949Z	    primaryBrand->{
2025-09-16T23:46:00.479618Z	      _id,
2025-09-16T23:46:00.479709Z	      name,
2025-09-16T23:46:00.4798Z	      "slug": slug.current,
2025-09-16T23:46:00.479868Z	      logo
2025-09-16T23:46:00.479926Z	    },
2025-09-16T23:46:00.480001Z	    relatedBrands[]->{
2025-09-16T23:46:00.480061Z	      _id,
2025-09-16T23:46:00.480117Z	      name,
2025-09-16T23:46:00.480175Z	      "slug": slug.current,
2025-09-16T23:46:00.480238Z	      logo
2025-09-16T23:46:00.480309Z	    },
2025-09-16T23:46:00.480373Z	    targetMarket,
2025-09-16T23:46:00.48044Z	    complexity,
2025-09-16T23:46:00.480501Z	    publishedAt,
2025-09-16T23:46:00.480557Z	    isPublished,
2025-09-16T23:46:00.480618Z	    isFeatured,
2025-09-16T23:46:00.480688Z	    viewCount,
2025-09-16T23:46:00.480825Z	    _createdAt,
2025-09-16T23:46:00.480886Z	    _updatedAt
2025-09-16T23:46:00.480946Z	  
2025-09-16T23:46:00.481033Z	      },
2025-09-16T23:46:00.481128Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:46:00.481223Z	    }
2025-09-16T23:46:00.481316Z	  
2025-09-16T23:46:00.481411Z	Query parameters: {
2025-09-16T23:46:00.481544Z	  limit: 4,
2025-09-16T23:46:00.481708Z	  offset: 0,
2025-09-16T23:46:00.481826Z	  targetMarket: undefined,
2025-09-16T23:46:00.481936Z	  brand: 'Electronicon',
2025-09-16T23:46:00.482104Z	  featured: undefined
2025-09-16T23:46:00.482188Z	}
2025-09-16T23:46:00.482316Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:46:00.482454Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:46:00.482529Z	Products fetch result: {
2025-09-16T23:46:00.482618Z	  totalProducts: 2,
2025-09-16T23:46:00.482767Z	  fetchedProducts: 2,
2025-09-16T23:46:00.482877Z	  firstProduct: {
2025-09-16T23:46:00.482986Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:46:00.483087Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:46:00.483178Z	    _type: 'product',
2025-09-16T23:46:00.483274Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:46:00.483384Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:46:00.48349Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:46:00.483668Z	    image: null,
2025-09-16T23:46:00.483872Z	    inventory: {
2025-09-16T23:46:00.483955Z	      inStock: true,
2025-09-16T23:46:00.484048Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:46:00.484176Z	      quantity: 0,
2025-09-16T23:46:00.484308Z	      status: 'in_stock',
2025-09-16T23:46:00.484448Z	      warehouse: null
2025-09-16T23:46:00.484558Z	    },
2025-09-16T23:46:00.484657Z	    isActive: true,
2025-09-16T23:46:00.484764Z	    isFeatured: false,
2025-09-16T23:46:00.484863Z	    isNew: false,
2025-09-16T23:46:00.484963Z	    partNumber: '99999',
2025-09-16T23:46:00.485058Z	    pricing: {
2025-09-16T23:46:00.485151Z	      currency: 'CNY',
2025-09-16T23:46:00.485227Z	      leadTime: null,
2025-09-16T23:46:00.485289Z	      moq: null,
2025-09-16T23:46:00.485383Z	      price: null,
2025-09-16T23:46:00.485616Z	   ❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:00.48579Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:00.485903Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:00.486029Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:00.486131Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424) {
2025-09-16T23:46:00.486236Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:00.486366Z	}
2025-09-16T23:46:00.486463Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:00.486556Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:00.486662Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:00.486795Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:00.486924Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424) {
2025-09-16T23:46:00.487034Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:00.487128Z	}
2025-09-16T23:46:00.487217Z	   tiers: null
2025-09-16T23:46:00.487302Z	    },
2025-09-16T23:46:00.487402Z	    shortDescription: null,
2025-09-16T23:46:00.4875Z	    slug: '99999',
2025-09-16T23:46:00.487599Z	    title: '99999'
2025-09-16T23:46:00.487701Z	  }
2025-09-16T23:46:00.487796Z	}
2025-09-16T23:46:00.487885Z	Products fetch result: {
2025-09-16T23:46:00.487975Z	  totalProducts: 2,
2025-09-16T23:46:00.488065Z	  fetchedProducts: 2,
2025-09-16T23:46:00.488177Z	  firstProduct: {
2025-09-16T23:46:00.48828Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:46:00.4884Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:46:00.488508Z	    _type: 'product',
2025-09-16T23:46:00.488606Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:46:00.488722Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:46:00.488839Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:46:00.488953Z	    image: null,
2025-09-16T23:46:00.489056Z	    inventory: {
2025-09-16T23:46:00.489146Z	      inStock: true,
2025-09-16T23:46:00.489263Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:46:00.489563Z	      quantity: 0,
2025-09-16T23:46:00.489751Z	      status: 'in_stock',
2025-09-16T23:46:00.490008Z	      warehouse: null
2025-09-16T23:46:00.490222Z	    },
2025-09-16T23:46:00.490484Z	    isActive: true,
2025-09-16T23:46:00.490629Z	    isFeatured: false,
2025-09-16T23:46:00.490764Z	    isNew: false,
2025-09-16T23:46:00.490878Z	    partNumber: '99999',
2025-09-16T23:46:00.490982Z	    pricing: {
2025-09-16T23:46:00.491093Z	      currency: 'CNY',
2025-09-16T23:46:00.491218Z	      leadTime: null,
2025-09-16T23:46:00.491316Z	      moq: null,
2025-09-16T23:46:00.49142Z	      price: null,
2025-09-16T23:46:00.491521Z	      tiers: null
2025-09-16T23:46:00.491617Z	    },
2025-09-16T23:46:00.491743Z	    shortDescription: null,
2025-09-16T23:46:00.491846Z	    slug: '99999',
2025-09-16T23:46:00.491942Z	    title: '99999'
2025-09-16T23:46:00.492037Z	  }
2025-09-16T23:46:00.49213Z	}
2025-09-16T23:46:00.492235Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.492359Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.492479Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-16T23:46:00.492584Z	Fetching products with query: 
2025-09-16T23:46:00.492689Z	    {
2025-09-16T23:46:00.492802Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.492913Z	        
2025-09-16T23:46:00.493022Z	    _id,
2025-09-16T23:46:00.493124Z	    _type,
2025-09-16T23:46:00.493216Z	    partNumber,
2025-09-16T23:46:00.493322Z	    "slug": slug.current,
2025-09-16T23:46:00.493436Z	    title,
2025-09-16T23:46:00.49354Z	    shortDescription,
2025-09-16T23:46:00.493654Z	    image,
2025-09-16T23:46:00.493775Z	    brand->{
2025-09-16T23:46:00.493872Z	      name,
2025-09-16T23:46:00.493971Z	      "slug": slug.current,
2025-09-16T23:46:00.494062Z	      logo
2025-09-16T23:46:00.494166Z	    },
2025-09-16T23:46:00.494263Z	    category->{
2025-09-16T23:46:00.494376Z	      name,
2025-09-16T23:46:00.494486Z	      "slug": slug.current
2025-09-16T23:46:00.49459Z	    },
2025-09-16T23:46:00.494725Z	    pricing{
2025-09-16T23:46:00.494839Z	      currency,
2025-09-16T23:46:00.494952Z	      tiers[]{
2025-09-16T23:46:00.495051Z	        quantity,
2025-09-16T23:46:00.495161Z	        price,
2025-09-16T23:46:00.495261Z	        unit
2025-09-16T23:46:00.495357Z	      },
2025-09-16T23:46:00.495475Z	      moq,
2025-09-16T23:46:00.495582Z	      leadTime,
2025-09-16T23:46:00.495697Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.495819Z	      "price": tiers[0].price,
2025-09-16T23:46:00.495933Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.496047Z	    },
2025-09-16T23:46:00.496141Z	    inventory{
2025-09-16T23:46:00.496235Z	      quantity,
2025-09-16T23:46:00.496327Z	      status,
2025-09-16T23:46:00.496445Z	      warehouse,
2025-09-16T23:46:00.496545Z	      lastUpdated,
2025-09-16T23:46:00.496697Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.496816Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.496923Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.497033Z	    },
2025-09-16T23:46:00.497133Z	    isActive,
2025-09-16T23:46:00.497292Z	    isFeatured,
2025-09-16T23:46:00.497403Z	    isNew,
2025-09-16T23:46:00.49751Z	    _createdAt,
2025-09-16T23:46:00.497604Z	    _updatedAt
2025-09-16T23:46:00.497719Z	  
2025-09-16T23:46:00.49783Z	      },
2025-09-16T23:46:00.497937Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-16T23:46:00.498047Z	    }
2025-09-16T23:46:00.498153Z	  
2025-09-16T23:46:00.49827Z	Query parameters: {
2025-09-16T23:46:00.498398Z	  limit: 8,
2025-09-16T23:46:00.498513Z	  offset: 0,
2025-09-16T23:46:00.498612Z	  category: undefined,
2025-09-16T23:46:00.498731Z	  brand: 'pi',
2025-09-16T23:46:00.498838Z	  featured: undefined
2025-09-16T23:46:00.498944Z	}
2025-09-16T23:46:00.499033Z	Fetching solutions with query: 
2025-09-16T23:46:00.499125Z	    {
2025-09-16T23:46:00.499249Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.499364Z	        
2025-09-16T23:46:00.499477Z	    _id,
2025-09-16T23:46:00.499585Z	    title,
2025-09-16T23:46:00.499774Z	    "slug": slug.current,
2025-09-16T23:46:00.49989Z	    summary,
2025-09-16T23:46:00.499996Z	    description,
2025-09-16T23:46:00.500099Z	    coverImage,
2025-09-16T23:46:00.50019Z	    primaryBrand->{
2025-09-16T23:46:00.500281Z	      _id,
2025-09-16T23:46:00.500372Z	      name,
2025-09-16T23:46:00.500482Z	      "slug": slug.current,
2025-09-16T23:46:00.500583Z	      logo
2025-09-16T23:46:00.500671Z	    },
2025-09-16T23:46:00.500801Z	    relatedBrands[]->{
2025-09-16T23:46:00.500915Z	      _id,
2025-09-16T23:46:00.501024Z	      name,
2025-09-16T23:46:00.501123Z	      "slug": slug.current,
2025-09-16T23:46:00.50122Z	      logo
2025-09-16T23:46:00.501328Z	    },
2025-09-16T23:46:00.501442Z	    targetMarket,
2025-09-16T23:46:00.501566Z	    complexity,
2025-09-16T23:46:00.501691Z	    publishedAt,
2025-09-16T23:46:00.501801Z	    isPublished,
2025-09-16T23:46:00.501894Z	    isFeatured,
2025-09-16T23:46:00.502003Z	    viewCount,
2025-09-16T23:46:00.502106Z	    _createdAt,
2025-09-16T23:46:00.502214Z	    _updatedAt
2025-09-16T23:46:00.502311Z	  
2025-09-16T23:46:00.502417Z	      },
2025-09-16T23:46:00.502531Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-16T23:46:00.502637Z	    }
2025-09-16T23:46:00.502768Z	  
2025-09-16T23:46:00.502889Z	Query parameters: {
2025-09-16T23:46:00.502991Z	  limit: 4,
2025-09-16T23:46:00.503097Z	  offset: 0,
2025-09-16T23:46:00.5032Z	  targetMarket: undefined,
2025-09-16T23:46:00.503305Z	  brand: 'pi',
2025-09-16T23:46:00.503408Z	  featured: undefined
2025-09-16T23:46:00.503511Z	}
2025-09-16T23:46:00.503627Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-16T23:46:00.503756Z	Fetching products with query: 
2025-09-16T23:46:00.503866Z	    {
2025-09-16T23:46:00.503966Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.504068Z	        
2025-09-16T23:46:00.50418Z	    _id,
2025-09-16T23:46:00.504303Z	    _type,
2025-09-16T23:46:00.504405Z	    partNumber,
2025-09-16T23:46:00.504507Z	    "slug": slug.current,
2025-09-16T23:46:00.504598Z	    title,
2025-09-16T23:46:00.504712Z	    shortDescription,
2025-09-16T23:46:00.504827Z	    image,
2025-09-16T23:46:00.504933Z	    brand->{
2025-09-16T23:46:00.505036Z	      name,
2025-09-16T23:46:00.505136Z	      "slug": slug.current,
2025-09-16T23:46:00.505236Z	      logo
2025-09-16T23:46:00.505329Z	    },
2025-09-16T23:46:00.505419Z	    category->{
2025-09-16T23:46:00.505532Z	      name,
2025-09-16T23:46:00.505641Z	      "slug": slug.current
2025-09-16T23:46:00.505767Z	    },
2025-09-16T23:46:00.505863Z	    pricing{
2025-09-16T23:46:00.505971Z	      currency,
2025-09-16T23:46:00.506086Z	      tiers[]{
2025-09-16T23:46:00.506185Z	        quantity,
2025-09-16T23:46:00.506283Z	        price,
2025-09-16T23:46:00.506385Z	        unit
2025-09-16T23:46:00.506507Z	      },
2025-09-16T23:46:00.506615Z	      moq,
2025-09-16T23:46:00.50673Z	      leadTime,
2025-09-16T23:46:00.506837Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.506929Z	      "price": tiers[0].price,
2025-09-16T23:46:00.507019Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.50712Z	    },
2025-09-16T23:46:00.507232Z	    inventory{
2025-09-16T23:46:00.507345Z	      quantity,
2025-09-16T23:46:00.507458Z	      status,
2025-09-16T23:46:00.507559Z	      warehouse,
2025-09-16T23:46:00.507655Z	      lastUpdated,
2025-09-16T23:46:00.507769Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.507879Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.507993Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.508096Z	    },
2025-09-16T23:46:00.508194Z	    isActive,
2025-09-16T23:46:00.508288Z	    isFeatured,
2025-09-16T23:46:00.508388Z	    isNew,
2025-09-16T23:46:00.508492Z	    _createdAt,
2025-09-16T23:46:00.508601Z	    _updatedAt
2025-09-16T23:46:00.508717Z	  
2025-09-16T23:46:00.508829Z	      },
2025-09-16T23:46:00.508928Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-16T23:46:00.509036Z	    }
2025-09-16T23:46:00.509134Z	  
2025-09-16T23:46:00.509238Z	Query parameters: {
2025-09-16T23:46:00.509336Z	  limit: 8,
2025-09-16T23:46:00.509442Z	  offset: 0,
2025-09-16T23:46:00.509535Z	  category: undefined,
2025-09-16T23:46:00.509631Z	  brand: 'pi',
2025-09-16T23:46:00.509753Z	  featured: undefined
2025-09-16T23:46:00.509858Z	}
2025-09-16T23:46:00.509947Z	Fetching solutions with query: 
2025-09-16T23:46:00.510034Z	    {
2025-09-16T23:46:00.510124Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.510233Z	        
2025-09-16T23:46:00.510363Z	    _id,
2025-09-16T23:46:00.510477Z	    title,
2025-09-16T23:46:00.510571Z	    "slug": slug.current,
2025-09-16T23:46:00.51067Z	    summary,
2025-09-16T23:46:00.510781Z	    description,
2025-09-16T23:46:00.510872Z	    coverImage,
2025-09-16T23:46:00.510959Z	    primaryBrand->{
2025-09-16T23:46:00.511047Z	      _id,
2025-09-16T23:46:00.511133Z	      name,
2025-09-16T23:46:00.511219Z	      "slug": slug.current,
2025-09-16T23:46:00.511307Z	      logo
2025-09-16T23:46:00.511391Z	    },
2025-09-16T23:46:00.511492Z	    relatedBrands[]->{
2025-09-16T23:46:00.511596Z	      _id,
2025-09-16T23:46:00.511719Z	      name,
2025-09-16T23:46:00.511817Z	      "slug": slug.current,
2025-09-16T23:46:00.511906Z	      logo
2025-09-16T23:46:00.511994Z	    },
2025-09-16T23:46:00.512082Z	    targetMarket,
2025-09-16T23:46:00.512174Z	    complexity,
2025-09-16T23:46:00.512261Z	    publishedAt,
2025-09-16T23:46:00.512358Z	    isPublished,
2025-09-16T23:46:00.512465Z	    isFeatured,
2025-09-16T23:46:00.51256Z	    viewCount,
2025-09-16T23:46:00.512653Z	    _createdAt,
2025-09-16T23:46:00.512771Z	    _updatedAt
2025-09-16T23:46:00.51287Z	  
2025-09-16T23:46:00.512966Z	      },
2025-09-16T23:46:00.513061Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-16T23:46:00.513157Z	    }
2025-09-16T23:46:00.513254Z	  
2025-09-16T23:46:00.513355Z	Query parameters: {
2025-09-16T23:46:00.513464Z	  limit: 4,
2025-09-16T23:46:00.513559Z	  offset: 0,
2025-09-16T23:46:00.513652Z	  targetMarket: undefined,
2025-09-16T23:46:00.513771Z	  brand: 'pi',
2025-09-16T23:46:00.513869Z	  featured: undefined
2025-09-16T23:46:00.513975Z	}
2025-09-16T23:46:00.514066Z	✅ [getBrandData] Found brand: PI
2025-09-16T23:46:00.514158Z	✅ [getBrandData] Found brand: PI
2025-09-16T23:46:00.514249Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.514337Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.514438Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.514733Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.514905Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:46:00.515018Z	Fetching products with query: 
2025-09-16T23:46:00.515097Z	    {
2025-09-16T23:46:00.515173Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.515235Z	        
2025-09-16T23:46:00.515298Z	    _id,
2025-09-16T23:46:00.515372Z	    _type,
2025-09-16T23:46:00.515451Z	    partNumber,
2025-09-16T23:46:00.515512Z	    "slug": slug.current,
2025-09-16T23:46:00.515571Z	    title,
2025-09-16T23:46:00.51563Z	    shortDescription,
2025-09-16T23:46:00.515718Z	    image,
2025-09-16T23:46:00.515787Z	    brand->{
2025-09-16T23:46:00.515851Z	      name,
2025-09-16T23:46:00.515911Z	      "slug": slug.current,
2025-09-16T23:46:00.515977Z	      logo
2025-09-16T23:46:00.516047Z	    },
2025-09-16T23:46:00.516106Z	    category->{
2025-09-16T23:46:00.516172Z	      name,
2025-09-16T23:46:00.51623Z	      "slug": slug.current
2025-09-16T23:46:00.516286Z	    },
2025-09-16T23:46:00.516343Z	    pricing{
2025-09-16T23:46:00.516427Z	      currency,
2025-09-16T23:46:00.516493Z	      tiers[]{
2025-09-16T23:46:00.516562Z	        quantity,
2025-09-16T23:46:00.51662Z	        price,
2025-09-16T23:46:00.516695Z	        unit
2025-09-16T23:46:00.516772Z	      },
2025-09-16T23:46:00.51684Z	      moq,
2025-09-16T23:46:00.516899Z	      leadTime,
2025-09-16T23:46:00.516958Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.517023Z	      "price": tiers[0].price,
2025-09-16T23:46:00.517085Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.51715Z	    },
2025-09-16T23:46:00.517209Z	    inventory{
2025-09-16T23:46:00.517264Z	      quantity,
2025-09-16T23:46:00.51732Z	      status,
2025-09-16T23:46:00.517384Z	      warehouse,
2025-09-16T23:46:00.5175Z	      lastUpdated,
2025-09-16T23:46:00.517646Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.517751Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.517816Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.517872Z	    },
2025-09-16T23:46:00.517929Z	    isActive,
2025-09-16T23:46:00.517985Z	    isFeatured,
2025-09-16T23:46:00.518054Z	    isNew,
2025-09-16T23:46:00.518111Z	    _createdAt,
2025-09-16T23:46:00.518166Z	    _updatedAt
2025-09-16T23:46:00.518222Z	  
2025-09-16T23:46:00.518287Z	      },
2025-09-16T23:46:00.518345Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:46:00.518403Z	    }
2025-09-16T23:46:00.518469Z	  
2025-09-16T23:46:00.518526Z	Query parameters: {
2025-09-16T23:46:00.518583Z	  limit: 8,
2025-09-16T23:46:00.518648Z	  offset: 0,
2025-09-16T23:46:00.518743Z	  category: undefined,
2025-09-16T23:46:00.518814Z	  brand: 'Electronicon',
2025-09-16T23:46:00.518872Z	  featured: undefined
2025-09-16T23:46:00.518928Z	}
2025-09-16T23:46:00.518991Z	Fetching solutions with query: 
2025-09-16T23:46:00.519046Z	    {
2025-09-16T23:46:00.519113Z	      "solutions": *[_type == "so❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:00.519194Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:00.51927Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:00.519336Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:00.519399Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424)
2025-09-16T23:46:00.519462Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:00.519519Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:00.519582Z	}
2025-09-16T23:46:00.519637Z	lution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.519725Z	        
2025-09-16T23:46:00.519793Z	    _id,
2025-09-16T23:46:00.51985Z	    title,
2025-09-16T23:46:00.519907Z	    "slug": slug.current,
2025-09-16T23:46:00.519973Z	    summary,
2025-09-16T23:46:00.520032Z	    description,
2025-09-16T23:46:00.520094Z	    coverImage,
2025-09-16T23:46:00.52015Z	    primaryBrand->{
2025-09-16T23:46:00.520262Z	      _id,
2025-09-16T23:46:00.520537Z	      name,
2025-09-16T23:46:00.520779Z	      "slug": slug.current,
2025-09-16T23:46:00.520951Z	      logo
2025-09-16T23:46:00.521096Z	    },
2025-09-16T23:46:00.521253Z	    relatedBrands[]->{
2025-09-16T23:46:00.521373Z	      _id,
2025-09-16T23:46:00.521498Z	      name,
2025-09-16T23:46:00.521592Z	      "slug": slug.current,
2025-09-16T23:46:00.521687Z	      logo
2025-09-16T23:46:00.521797Z	    },
2025-09-16T23:46:00.521864Z	    targetMarket,
2025-09-16T23:46:00.521922Z	    complexity,
2025-09-16T23:46:00.521983Z	    publishedAt,
2025-09-16T23:46:00.522075Z	    isPublished,
2025-09-16T23:46:00.522171Z	    isFeatured,
2025-09-16T23:46:00.522268Z	    viewCount,
2025-09-16T23:46:00.522361Z	    _createdAt,
2025-09-16T23:46:00.522475Z	    _updatedAt
2025-09-16T23:46:00.522578Z	  
2025-09-16T23:46:00.522687Z	      },
2025-09-16T23:46:00.522794Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:46:00.522882Z	    }
2025-09-16T23:46:00.522971Z	  
2025-09-16T23:46:00.52308Z	Query parameters: {
2025-09-16T23:46:00.523217Z	  limit: 4,
2025-09-16T23:46:00.523288Z	  offset: 0,
2025-09-16T23:46:00.523357Z	  targetMarket: undefined,
2025-09-16T23:46:00.523423Z	  brand: 'Electronicon',
2025-09-16T23:46:00.52348Z	  featured: undefined
2025-09-16T23:46:00.523555Z	}
2025-09-16T23:46:00.523619Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:46:00.523732Z	Products fetch result: {
2025-09-16T23:46:00.523801Z	  totalProducts: 2,
2025-09-16T23:46:00.523858Z	  fetchedProducts: 2,
2025-09-16T23:46:00.523941Z	  firstProduct: {
2025-09-16T23:46:00.524042Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:46:00.524159Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:46:00.52424Z	    _type: 'product',
2025-09-16T23:46:00.524298Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:46:00.524357Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:46:00.524414Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:46:00.52447Z	    image: null,
2025-09-16T23:46:00.524523Z	    inventory: {
2025-09-16T23:46:00.524575Z	      inStock: true,
2025-09-16T23:46:00.524639Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:46:00.52473Z	      quantity: 0,
2025-09-16T23:46:00.52479Z	      status: 'in_stock',
2025-09-16T23:46:00.524844Z	      warehouse: null
2025-09-16T23:46:00.524901Z	    },
2025-09-16T23:46:00.524957Z	    isActive: true,
2025-09-16T23:46:00.525021Z	    isFeatured: false,
2025-09-16T23:46:00.525076Z	    isNew: false,
2025-09-16T23:46:00.52513Z	    partNumber: '99999',
2025-09-16T23:46:00.525182Z	    pricing: {
2025-09-16T23:46:00.525234Z	      currency: 'CNY',
2025-09-16T23:46:00.525287Z	      leadTime: null,
2025-09-16T23:46:00.52534Z	      moq: null,
2025-09-16T23:46:00.525396Z	      price: null,
2025-09-16T23:46:00.525448Z	      tiers: null
2025-09-16T23:46:00.5255Z	    },
2025-09-16T23:46:00.525553Z	    shortDescription: null,
2025-09-16T23:46:00.525612Z	    slug: '99999',
2025-09-16T23:46:00.52569Z	    title: '99999'
2025-09-16T23:46:00.525789Z	  }
2025-09-16T23:46:00.525888Z	}
2025-09-16T23:46:00.525982Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.526076Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:46:00.526171Z	Fetching products with query: 
2025-09-16T23:46:00.526263Z	    {
2025-09-16T23:46:00.526376Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.526469Z	        
2025-09-16T23:46:00.526561Z	    _id,
2025-09-16T23:46:00.526668Z	    _type,
2025-09-16T23:46:00.526799Z	    partNumber,
2025-09-16T23:46:00.526914Z	    "slug": slug.current,
2025-09-16T23:46:00.527031Z	    title,
2025-09-16T23:46:00.527136Z	    shortDescription,
2025-09-16T23:46:00.527249Z	    image,
2025-09-16T23:46:00.527357Z	    brand->{
2025-09-16T23:46:00.527467Z	      name,
2025-09-16T23:46:00.527577Z	      "slug": slug.current,
2025-09-16T23:46:00.527708Z	      logo
2025-09-16T23:46:00.527817Z	    },
2025-09-16T23:46:00.527922Z	    category->{
2025-09-16T23:46:00.528038Z	      name,
2025-09-16T23:46:00.528149Z	      "slug": slug.current
2025-09-16T23:46:00.528257Z	    },
2025-09-16T23:46:00.528529Z	    pricing{
2025-09-16T23:46:00.528648Z	      currency,
2025-09-16T23:46:00.52877Z	      tiers[]{
2025-09-16T23:46:00.52888Z	        quantity,
2025-09-16T23:46:00.529007Z	        price,
2025-09-16T23:46:00.529116Z	        unit
2025-09-16T23:46:00.529224Z	      },
2025-09-16T23:46:00.529342Z	      moq,
2025-09-16T23:46:00.529456Z	      leadTime,
2025-09-16T23:46:00.529576Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.529696Z	      "price": tiers[0].price,
2025-09-16T23:46:00.529796Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.529913Z	    },
2025-09-16T23:46:00.53002Z	    inventory{
2025-09-16T23:46:00.530121Z	      quantity,
2025-09-16T23:46:00.530234Z	      status,
2025-09-16T23:46:00.530366Z	      warehouse,
2025-09-16T23:46:00.530486Z	      lastUpdated,
2025-09-16T23:46:00.530596Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.530725Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.530828Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.530925Z	    },
2025-09-16T23:46:00.531021Z	    isActive,
2025-09-16T23:46:00.531122Z	    isFeatured,
2025-09-16T23:46:00.531221Z	    isNew,
2025-09-16T23:46:00.531321Z	    _createdAt,
2025-09-16T23:46:00.531426Z	    _updatedAt
2025-09-16T23:46:00.531548Z	  
2025-09-16T23:46:00.531655Z	      },
2025-09-16T23:46:00.531776Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:46:00.531888Z	    }
2025-09-16T23:46:00.531997Z	  
2025-09-16T23:46:00.53211Z	Query parameters: {
2025-09-16T23:46:00.532209Z	  limit: 8,
2025-09-16T23:46:00.532301Z	  offset: 0,
2025-09-16T23:46:00.532426Z	  category: undefined,
2025-09-16T23:46:00.532531Z	  brand: 'Electronicon',
2025-09-16T23:46:00.532629Z	  featured: undefined
2025-09-16T23:46:00.53275Z	}
2025-09-16T23:46:00.532858Z	Fetching solutions with query: 
2025-09-16T23:46:00.532961Z	    {
2025-09-16T23:46:00.533053Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.53316Z	        
2025-09-16T23:46:00.533252Z	    _id,
2025-09-16T23:46:00.533341Z	    title,
2025-09-16T23:46:00.533454Z	    "slug": slug.current,
2025-09-16T23:46:00.533554Z	    summary,
2025-09-16T23:46:00.533657Z	    description,
2025-09-16T23:46:00.533767Z	    coverImage,
2025-09-16T23:46:00.533877Z	    primaryBrand->{
2025-09-16T23:46:00.533977Z	      _id,
2025-09-16T23:46:00.534072Z	      name,
2025-09-16T23:46:00.534191Z	      "slug": slug.current,
2025-09-16T23:46:00.534302Z	      logo
2025-09-16T23:46:00.534417Z	    },
2025-09-16T23:46:00.534537Z	    relatedBrands[]->{
2025-09-16T23:46:00.534647Z	      _id,
2025-09-16T23:46:00.53476Z	      name,
2025-09-16T23:46:00.53486Z	      "slug": slug.current,
2025-09-16T23:46:00.534978Z	      logo
2025-09-16T23:46:00.535052Z	    },
2025-09-16T23:46:00.53512Z	    targetMarket,
2025-09-16T23:46:00.53522Z	    complexity,
2025-09-16T23:46:00.535326Z	    publishedAt,
2025-09-16T23:46:00.535438Z	    isPublished,
2025-09-16T23:46:00.535543Z	    isFeatured,
2025-09-16T23:46:00.535651Z	    viewCount,
2025-09-16T23:46:00.535766Z	    _createdAt,
2025-09-16T23:46:00.535877Z	    _updatedAt
2025-09-16T23:46:00.535975Z	  
2025-09-16T23:46:00.536081Z	      },
2025-09-16T23:46:00.53619Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:46:00.536293Z	    }
2025-09-16T23:46:00.53641Z	  
2025-09-16T23:46:00.536509Z	Query parameters: {
2025-09-16T23:46:00.536606Z	  limit: 4,
2025-09-16T23:46:00.536713Z	  offset: 0,
2025-09-16T23:46:00.536822Z	  targetMarket: undefined,
2025-09-16T23:46:00.536931Z	  brand: 'Electronicon',
2025-09-16T23:46:00.537027Z	  featured: undefined
2025-09-16T23:46:00.537126Z	}
2025-09-16T23:46:00.537223Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:46:00.53733Z	Products fetch result: {
2025-09-16T23:46:00.537438Z	  totalProducts: 2,
2025-09-16T23:46:00.537537Z	  fetchedProducts: 2,
2025-09-16T23:46:00.537641Z	  firstProduct: {
2025-09-16T23:46:00.537758Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:46:00.53787Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:46:00.537973Z	    _type: 'product',
2025-09-16T23:46:00.538074Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:46:00.538178Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:46:00.538286Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:46:00.538399Z	    image: null,
2025-09-16T23:46:00.538499Z	    inventory: {
2025-09-16T23:46:00.538597Z	      inStock: true,
2025-09-16T23:46:00.538717Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:46:00.538819Z	      quantity: 0,
2025-09-16T23:46:00.538912Z	      status: 'in_stock',
2025-09-16T23:46:00.539017Z	      warehouse: null
2025-09-16T23:46:00.539115Z	    },
2025-09-16T23:46:00.539239Z	    isActive: true,
2025-09-16T23:46:00.539368Z	    isFeatured: false,
2025-09-16T23:46:00.539474Z	    isNew: false,
2025-09-16T23:46:00.539581Z	    partNumber: '99999',
2025-09-16T23:46:00.539706Z	    pricing: {
2025-09-16T23:46:00.539819Z	      currency: 'CNY',
2025-09-16T23:46:00.53992Z	      leadTime: null,
2025-09-16T23:46:00.54002Z	      moq: null,
2025-09-16T23:46:00.540122Z	      price: null,
2025-09-16T23:46:00.540231Z	      tiers: null
2025-09-16T23:46:00.540337Z	    },
2025-09-16T23:46:00.540458Z	    shortDescription: null,
2025-09-16T23:46:00.540565Z	    slug: '99999',
2025-09-16T23:46:00.540669Z	    title: '99999'
2025-09-16T23:46:00.540805Z	  }
2025-09-16T23:46:00.540908Z	}
2025-09-16T23:46:00.541017Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.541128Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-16T23:46:00.541237Z	Fetching products with query: 
2025-09-16T23:46:00.541343Z	    {
2025-09-16T23:46:00.541461Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.541566Z	        
2025-09-16T23:46:00.541667Z	    _id,
2025-09-16T23:46:00.541795Z	    _type,
2025-09-16T23:46:00.541903Z	    partNumber,
2025-09-16T23:46:00.542008Z	    "slug": slug.current,
2025-09-16T23:46:00.54211Z	    title,
2025-09-16T23:46:00.542212Z	    shortDescription,
2025-09-16T23:46:00.542305Z	    image,
2025-09-16T23:46:00.542429Z	    brand->{
2025-09-16T23:46:00.542556Z	      name,
2025-09-16T23:46:00.542685Z	      "slug": slug.current,
2025-09-16T23:46:00.542808Z	      logo
2025-09-16T23:46:00.542914Z	    },
2025-09-16T23:46:00.543017Z	    category->{
2025-09-16T23:46:00.543125Z	      name,
2025-09-16T23:46:00.543228Z	      "slug": slug.current
2025-09-16T23:46:00.543328Z	    },
2025-09-16T23:46:00.543431Z	    pricing{
2025-09-16T23:46:00.543533Z	      currency,
2025-09-16T23:46:00.543633Z	      tiers[]{
2025-09-16T23:46:00.543753Z	        quantity,
2025-09-16T23:46:00.543859Z	        price,
2025-09-16T23:46:00.543961Z	        unit
2025-09-16T23:46:00.544057Z	      },
2025-09-16T23:46:00.544145Z	      moq,
2025-09-16T23:46:00.544251Z	      leadTime,
2025-09-16T23:46:00.544361Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.544461Z	      "price": tiers[0].price,
2025-09-16T23:46:00.544564Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.544711Z	    },
2025-09-16T23:46:00.544817Z	    inventory{
2025-09-16T23:46:00.544914Z	      quantity,
2025-09-16T23:46:00.545026Z	      status,
2025-09-16T23:46:00.545128Z	      warehouse,
2025-09-16T23:46:00.545221Z	      lastUpdated,
2025-09-16T23:46:00.545332Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.545443Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.545538Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.545644Z	    },
2025-09-16T23:46:00.545759Z	    isActive,
2025-09-16T23:46:00.545858Z	    isFeatured,
2025-09-16T23:46:00.545955Z	    isNew,
2025-09-16T23:46:00.546058Z	    _createdAt,
2025-09-16T23:46:00.546156Z	    _updatedAt
2025-09-16T23:46:00.546261Z	  
2025-09-16T23:46:00.546373Z	      },
2025-09-16T23:46:00.546465Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-16T23:46:00.546564Z	    }
2025-09-16T23:46:00.546669Z	  
2025-09-16T23:46:00.546779Z	Query parameters: {
2025-09-16T23:46:00.546878Z	  limit: 8,
2025-09-16T23:46:00.546978Z	  offset: 0,
2025-09-16T23:46:00.547072Z	  category: undefined,
2025-09-16T23:46:00.547172Z	  brand: 'pi',
2025-09-16T23:46:00.547267Z	  featured: undefined
2025-09-16T23:46:00.547375Z	}
2025-09-16T23:46:00.547477Z	Fetching solutions with query: 
2025-09-16T23:46:00.547576Z	    {
2025-09-16T23:46:00.547668Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.547776Z	        
2025-09-16T23:46:00.547883Z	    _id,
2025-09-16T23:46:00.547978Z	    title,
2025-09-16T23:46:00.548073Z	    "slug": slug.current,
2025-09-16T23:46:00.548178Z	    summary,
2025-09-16T23:46:00.548282Z	    description,
2025-09-16T23:46:00.548387Z	    coverImage,
2025-09-16T23:46:00.548487Z	    primaryBrand->{
2025-09-16T23:46:00.548589Z	      _id,
2025-09-16T23:46:00.548694Z	      name,
2025-09-16T23:46:00.548775Z	      "slug": slug.current,
2025-09-16T23:46:00.548934Z	      logo
2025-09-16T23:46:00.549021Z	    },
2025-09-16T23:46:00.54908Z	    relatedBrands[]->{
2025-09-16T23:46:00.549322Z	      _id,
2025-09-16T23:46:00.549405Z	      name,
2025-09-16T23:46:00.549462Z	      "slug": slug.current,
2025-09-16T23:46:00.549569Z	      logo
2025-09-16T23:46:00.549696Z	    },
2025-09-16T23:46:00.54977Z	    targetMarket,
2025-09-16T23:46:00.549941Z	    complexity,
2025-09-16T23:46:00.550025Z	    publishedAt,
2025-09-16T23:46:00.550084Z	    isPublished,
2025-09-16T23:46:00.550143Z	    isFeatured,
2025-09-16T23:46:00.550215Z	    viewCount,
2025-09-16T23:46:00.5503Z	    _createdAt,
2025-09-16T23:46:00.550411Z	    _updatedAt
2025-09-16T23:46:00.550486Z	  
2025-09-16T23:46:00.550544Z	      },
2025-09-16T23:46:00.550602Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-16T23:46:00.550662Z	    }
2025-09-16T23:46:00.550745Z	  
2025-09-16T23:46:00.550817Z	Query parameters: {
2025-09-16T23:46:00.550887Z	  limit: 4,
2025-09-16T23:46:00.550968Z	  offset: 0,
2025-09-16T23:46:00.551025Z	  targetMarket: undefined,
2025-09-16T23:46:00.551169Z	  brand: 'pi',
2025-09-16T23:46:00.551284Z	  featured: undefined
2025-09-16T23:46:00.551407Z	}
2025-09-16T23:46:00.551477Z	✅ [getBrandData] Found brand: PI
2025-09-16T23:46:00.551544Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.551607Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.551667Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-16T23:46:00.55181Z	Fetc❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:00.551946Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:00.55209Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:00.552154Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:00.552211Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424)
2025-09-16T23:46:00.552269Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:00.552327Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:00.552392Z	}
2025-09-16T23:46:00.552451Z	hing products with query: 
2025-09-16T23:46:00.552508Z	    {
2025-09-16T23:46:00.552564Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.552626Z	        
2025-09-16T23:46:00.5527Z	    _id,
2025-09-16T23:46:00.55277Z	    _type,
2025-09-16T23:46:00.552829Z	    partNumber,
2025-09-16T23:46:00.552885Z	    "slug": slug.current,
2025-09-16T23:46:00.55294Z	    title,
2025-09-16T23:46:00.553003Z	    shortDescription,
2025-09-16T23:46:00.553066Z	    image,
2025-09-16T23:46:00.553198Z	    brand->{
2025-09-16T23:46:00.553268Z	      name,
2025-09-16T23:46:00.55333Z	      "slug": slug.current,
2025-09-16T23:46:00.553867Z	      logo
2025-09-16T23:46:00.554162Z	    },
2025-09-16T23:46:00.554292Z	    category->{
2025-09-16T23:46:00.554395Z	      name,
2025-09-16T23:46:00.554507Z	      "slug": slug.current
2025-09-16T23:46:00.554617Z	    },
2025-09-16T23:46:00.554756Z	    pricing{
2025-09-16T23:46:00.554864Z	      currency,
2025-09-16T23:46:00.555041Z	      tiers[]{
2025-09-16T23:46:00.555161Z	        quantity,
2025-09-16T23:46:00.555265Z	        price,
2025-09-16T23:46:00.55538Z	        unit
2025-09-16T23:46:00.555499Z	      },
2025-09-16T23:46:00.555604Z	      moq,
2025-09-16T23:46:00.55574Z	      leadTime,
2025-09-16T23:46:00.555859Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.555971Z	      "price": tiers[0].price,
2025-09-16T23:46:00.556069Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.556166Z	    },
2025-09-16T23:46:00.556267Z	    inventory{
2025-09-16T23:46:00.556366Z	      quantity,
2025-09-16T23:46:00.556474Z	      status,
2025-09-16T23:46:00.556603Z	      warehouse,
2025-09-16T23:46:00.556728Z	      lastUpdated,
2025-09-16T23:46:00.556838Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.556948Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.557046Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.557143Z	    },
2025-09-16T23:46:00.557239Z	    isActive,
2025-09-16T23:46:00.557336Z	    isFeatured,
2025-09-16T23:46:00.557434Z	    isNew,
2025-09-16T23:46:00.557557Z	    _createdAt,
2025-09-16T23:46:00.557693Z	    _updatedAt
2025-09-16T23:46:00.557805Z	  
2025-09-16T23:46:00.557905Z	      },
2025-09-16T23:46:00.558006Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-16T23:46:00.558117Z	    }
2025-09-16T23:46:00.558216Z	  
2025-09-16T23:46:00.558309Z	Query parameters: {
2025-09-16T23:46:00.558408Z	  limit: 8,
2025-09-16T23:46:00.558522Z	  offset: 0,
2025-09-16T23:46:00.558623Z	  category: undefined,
2025-09-16T23:46:00.558742Z	  brand: 'pi',
2025-09-16T23:46:00.558858Z	  featured: undefined
2025-09-16T23:46:00.558957Z	}
2025-09-16T23:46:00.559057Z	Fetching solutions with query: 
2025-09-16T23:46:00.559156Z	    {
2025-09-16T23:46:00.559277Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.559388Z	        
2025-09-16T23:46:00.559507Z	    _id,
2025-09-16T23:46:00.559611Z	    title,
2025-09-16T23:46:00.559729Z	    "slug": slug.current,
2025-09-16T23:46:00.559843Z	    summary,
2025-09-16T23:46:00.55995Z	    description,
2025-09-16T23:46:00.560055Z	    coverImage,
2025-09-16T23:46:00.560161Z	    primaryBrand->{
2025-09-16T23:46:00.560265Z	      _id,
2025-09-16T23:46:00.560372Z	      name,
2025-09-16T23:46:00.560485Z	      "slug": slug.current,
2025-09-16T23:46:00.560587Z	      logo
2025-09-16T23:46:00.560771Z	    },
2025-09-16T23:46:00.560881Z	    relatedBrands[]->{
2025-09-16T23:46:00.560976Z	      _id,
2025-09-16T23:46:00.561071Z	      name,
2025-09-16T23:46:00.561169Z	      "slug": slug.current,
2025-09-16T23:46:00.561272Z	      logo
2025-09-16T23:46:00.561368Z	    },
2025-09-16T23:46:00.561478Z	    targetMarket,
2025-09-16T23:46:00.561585Z	    complexity,
2025-09-16T23:46:00.561707Z	    publishedAt,
2025-09-16T23:46:00.561808Z	    isPublished,
2025-09-16T23:46:00.561898Z	    isFeatured,
2025-09-16T23:46:00.561993Z	    viewCount,
2025-09-16T23:46:00.562088Z	    _createdAt,
2025-09-16T23:46:00.562182Z	    _updatedAt
2025-09-16T23:46:00.562277Z	  
2025-09-16T23:46:00.562372Z	      },
2025-09-16T23:46:00.562479Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-16T23:46:00.562592Z	    }
2025-09-16T23:46:00.562731Z	  
2025-09-16T23:46:00.562841Z	Query parameters: {
2025-09-16T23:46:00.562944Z	  limit: 4,
2025-09-16T23:46:00.563059Z	  offset: 0,
2025-09-16T23:46:00.563156Z	  targetMarket: undefined,
2025-09-16T23:46:00.563247Z	  brand: 'pi',
2025-09-16T23:46:00.563343Z	  featured: undefined
2025-09-16T23:46:00.563459Z	}
2025-09-16T23:46:00.563569Z	✅ [getBrandData] Found brand: PI
2025-09-16T23:46:00.56371Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.563822Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.563922Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-16T23:46:00.564025Z	Fetching products with query: 
2025-09-16T23:46:00.56412Z	    {
2025-09-16T23:46:00.564222Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.564333Z	        
2025-09-16T23:46:00.564431Z	    _id,
2025-09-16T23:46:00.564546Z	    _type,
2025-09-16T23:46:00.564652Z	    partNumber,
2025-09-16T23:46:00.564769Z	    "slug": slug.current,
2025-09-16T23:46:00.564871Z	    title,
2025-09-16T23:46:00.564967Z	    shortDescription,
2025-09-16T23:46:00.565068Z	    image,
2025-09-16T23:46:00.565163Z	    brand->{
2025-09-16T23:46:00.56526Z	      name,
2025-09-16T23:46:00.565358Z	      "slug": slug.current,
2025-09-16T23:46:00.565463Z	      logo
2025-09-16T23:46:00.565573Z	    },
2025-09-16T23:46:00.56567Z	    category->{
2025-09-16T23:46:00.565797Z	      name,
2025-09-16T23:46:00.565907Z	      "slug": slug.current
2025-09-16T23:46:00.566017Z	    },
2025-09-16T23:46:00.566116Z	    pricing{
2025-09-16T23:46:00.566214Z	      currency,
2025-09-16T23:46:00.56631Z	      tiers[]{
2025-09-16T23:46:00.566405Z	        quantity,
2025-09-16T23:46:00.566524Z	        price,
2025-09-16T23:46:00.56663Z	        unit
2025-09-16T23:46:00.566787Z	      },
2025-09-16T23:46:00.566897Z	      moq,
2025-09-16T23:46:00.567005Z	      leadTime,
2025-09-16T23:46:00.567118Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.567235Z	      "price": tiers[0].price,
2025-09-16T23:46:00.567333Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.567438Z	    },
2025-09-16T23:46:00.567554Z	    inventory{
2025-09-16T23:46:00.567652Z	      quantity,
2025-09-16T23:46:00.56777Z	      status,
2025-09-16T23:46:00.567879Z	      warehouse,
2025-09-16T23:46:00.567991Z	      lastUpdated,
2025-09-16T23:46:00.56811Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.568342Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.568454Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.568523Z	    },
2025-09-16T23:46:00.568583Z	    isActive,
2025-09-16T23:46:00.568647Z	    isFeatured,
2025-09-16T23:46:00.568735Z	    isNew,
2025-09-16T23:46:00.568806Z	    _createdAt,
2025-09-16T23:46:00.568866Z	    _updatedAt
2025-09-16T23:46:00.568925Z	  
2025-09-16T23:46:00.568982Z	      },
2025-09-16T23:46:00.569042Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-16T23:46:00.569139Z	    }
2025-09-16T23:46:00.569208Z	  
2025-09-16T23:46:00.569283Z	Query parameters: {
2025-09-16T23:46:00.569352Z	  limit: 8,
2025-09-16T23:46:00.569419Z	  offset: 0,
2025-09-16T23:46:00.569477Z	  category: undefined,
2025-09-16T23:46:00.569537Z	  brand: '英飞凌',
2025-09-16T23:46:00.569604Z	  featured: undefined
2025-09-16T23:46:00.56967Z	}
2025-09-16T23:46:00.569767Z	Fetching solutions with query: 
2025-09-16T23:46:00.569828Z	    {
2025-09-16T23:46:00.569896Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.569962Z	        
2025-09-16T23:46:00.570021Z	    _id,
2025-09-16T23:46:00.570096Z	    title,
2025-09-16T23:46:00.570157Z	    "slug": slug.current,
2025-09-16T23:46:00.570215Z	    summary,
2025-09-16T23:46:00.570276Z	    description,
2025-09-16T23:46:00.570333Z	    coverImage,
2025-09-16T23:46:00.570398Z	    primaryBrand->{
2025-09-16T23:46:00.570463Z	      _id,
2025-09-16T23:46:00.570522Z	      name,
2025-09-16T23:46:00.570584Z	      "slug": slug.current,
2025-09-16T23:46:00.570647Z	      logo
2025-09-16T23:46:00.57074Z	    },
2025-09-16T23:46:00.57082Z	    relatedBrands[]->{
2025-09-16T23:46:00.570887Z	      _id,
2025-09-16T23:46:00.570952Z	      name,
2025-09-16T23:46:00.571013Z	      "slug": slug.current,
2025-09-16T23:46:00.571069Z	      logo
2025-09-16T23:46:00.571126Z	    },
2025-09-16T23:46:00.571184Z	    targetMarket,
2025-09-16T23:46:00.571243Z	    complexity,
2025-09-16T23:46:00.571302Z	    publishedAt,
2025-09-16T23:46:00.571374Z	    isPublished,
2025-09-16T23:46:00.571443Z	    isFeatured,
2025-09-16T23:46:00.571502Z	    viewCount,
2025-09-16T23:46:00.571562Z	    _createdAt,
2025-09-16T23:46:00.571645Z	    _updatedAt
2025-09-16T23:46:00.571742Z	  
2025-09-16T23:46:00.57181Z	      },
2025-09-16T23:46:00.571875Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-16T23:46:00.571945Z	    }
2025-09-16T23:46:00.572008Z	  
2025-09-16T23:46:00.572069Z	Query parameters: {
2025-09-16T23:46:00.572124Z	  limit: 4,
2025-09-16T23:46:00.572182Z	  offset: 0,
2025-09-16T23:46:00.572238Z	  targetMarket: undefined,
2025-09-16T23:46:00.572294Z	  brand: '英飞凌',
2025-09-16T23:46:00.572365Z	  featured: undefined
2025-09-16T23:46:00.572425Z	}
2025-09-16T23:46:00.572482Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-16T23:46:00.572542Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.572601Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.572701Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-16T23:46:00.572789Z	Fetching products with query: 
2025-09-16T23:46:00.572857Z	    {
2025-09-16T23:46:00.572931Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.573002Z	        
2025-09-16T23:46:00.573062Z	    _id,
2025-09-16T23:46:00.57312Z	    _type,
2025-09-16T23:46:00.573185Z	    partNumber,
2025-09-16T23:46:00.573246Z	    "slug": slug.current,
2025-09-16T23:46:00.573311Z	    title,
2025-09-16T23:46:00.573388Z	    shortDescription,
2025-09-16T23:46:00.573452Z	    image,
2025-09-16T23:46:00.573509Z	    brand->{
2025-09-16T23:46:00.573568Z	      name,
2025-09-16T23:46:00.57363Z	      "slug": slug.current,
2025-09-16T23:46:00.573716Z	      logo
2025-09-16T23:46:00.573786Z	    },
2025-09-16T23:46:00.573846Z	    category->{
2025-09-16T23:46:00.573904Z	      name,
2025-09-16T23:46:00.573959Z	      "slug": slug.current
2025-09-16T23:46:00.574018Z	    },
2025-09-16T23:46:00.574074Z	    pricing{
2025-09-16T23:46:00.574134Z	      currency,
2025-09-16T23:46:00.574211Z	      tiers[]{
2025-09-16T23:46:00.574276Z	        quantity,
2025-09-16T23:46:00.574333Z	        price,
2025-09-16T23:46:00.574414Z	        unit
2025-09-16T23:46:00.574481Z	      },
2025-09-16T23:46:00.57454Z	      moq,
2025-09-16T23:46:00.574606Z	      leadTime,
2025-09-16T23:46:00.574668Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.574762Z	      "price": tiers[0].price,
2025-09-16T23:46:00.574826Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.574884Z	    },
2025-09-16T23:46:00.574941Z	    inventory{
2025-09-16T23:46:00.574998Z	      quantity,
2025-09-16T23:46:00.575055Z	      status,
2025-09-16T23:46:00.575117Z	      warehouse,
2025-09-16T23:46:00.575174Z	      lastUpdated,
2025-09-16T23:46:00.57523Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.575288Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.575351Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.575416Z	    },
2025-09-16T23:46:00.575528Z	    isActive,
2025-09-16T23:46:00.575619Z	    isFeatured,
2025-09-16T23:46:00.575696Z	    isNew,
2025-09-16T23:46:00.575781Z	    _createdAt,
2025-09-16T23:46:00.575877Z	    _updatedAt
2025-09-16T23:46:00.575988Z	  
2025-09-16T23:46:00.576104Z	      },
2025-09-16T23:46:00.576239Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-16T23:46:00.576368Z	    }
2025-09-16T23:46:00.576452Z	  
2025-09-16T23:46:00.576613Z	Query parameters: {
2025-09-16T23:46:00.576778Z	  limit: 8,
2025-09-16T23:46:00.576861Z	  offset: 0,
2025-09-16T23:46:00.576937Z	  category: undefined,
2025-09-16T23:46:00.576997Z	  brand: '英飞凌',
2025-09-16T23:46:00.577056Z	  featured: undefined
2025-09-16T23:46:00.577113Z	}
2025-09-16T23:46:00.577169Z	Fetching solutions with query: 
2025-09-16T23:46:00.577226Z	    {
2025-09-16T23:46:00.577284Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.577347Z	        
2025-09-16T23:46:00.577408Z	    _id,
2025-09-16T23:46:00.577462Z	    title,
2025-09-16T23:46:00.577516Z	    "slug": slug.current,
2025-09-16T23:46:00.57757Z	    summary,
2025-09-16T23:46:00.577633Z	    description,
2025-09-16T23:46:00.577712Z	    coverImage,
2025-09-16T23:46:00.577782Z	    primaryBrand->{
2025-09-16T23:46:00.577846Z	      _id,
2025-09-16T23:46:00.577905Z	      name,
2025-09-16T23:46:00.57796Z	      "slug": slug.current,
2025-09-16T23:46:00.578015Z	      logo
2025-09-16T23:46:00.578069Z	    },
2025-09-16T23:46:00.578122Z	    relatedBrands[]->{
2025-09-16T23:46:00.578176Z	      _id,
2025-09-16T23:46:00.578228Z	      name,
2025-09-16T23:46:00.578282Z	      "slug": slug.current,
2025-09-16T23:46:00.578336Z	      logo
2025-09-16T23:46:00.578394Z	    },
2025-09-16T23:46:00.578449Z	    targetMarket,
2025-09-16T23:46:00.578502Z	    complexity,
2025-09-16T23:46:00.578556Z	    publishedAt,
2025-09-16T23:46:00.578616Z	    isPublished,
2025-09-16T23:46:00.578671Z	    isFeatured,
2025-09-16T23:46:00.578756Z	    viewCount,
2025-09-16T23:46:00.578811Z	    _createdAt,
2025-09-16T23:46:00.578864Z	    _updatedAt
2025-09-16T23:46:00.578917Z	  
2025-09-16T23:46:00.57897Z	      },
2025-09-16T23:46:00.579025Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-16T23:46:00.579111Z	    }
2025-09-16T23:46:00.579167Z	  
2025-09-16T23:46:00.579237Z	Query parameters: {
2025-09-16T23:46:00.579293Z	  limit: 4,
2025-09-16T23:46:00.579347Z	  offset: 0,
2025-09-16T23:46:00.57941Z	  targetMarket: undefined,
2025-09-16T23:46:00.579463Z	  brand: '英飞凌',
2025-09-16T23:46:00.579522Z	  featured: undefined
2025-09-16T23:46:00.579577Z	}
2025-09-16T23:46:00.579637Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-16T23:46:00.579722Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.579784Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.579847Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-16T23:46:00.579903Z	Fetching products with query: 
2025-09-16T23:46:00.579958Z	    {
2025-09-16T23:46:00.580034Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | or❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:00.580182Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:00.580242Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:00.580296Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:00.580354Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424)
2025-09-16T23:46:00.580408Z	    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-09-16T23:46:00.580461Z	    at runNextTicks (node:internal/process/task_queues:64:3)
2025-09-16T23:46:00.580514Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:46:00.580575Z	    at process.processTimers (node:internal/timers:512:7) {
2025-09-16T23:46:00.580639Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:00.580727Z	}
2025-09-16T23:46:00.580791Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:00.580846Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:00.580901Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:00.580955Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:00.581008Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424)
2025-09-16T23:46:00.581062Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:00.581116Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:00.581169Z	}
2025-09-16T23:46:00.581222Z	der(_createdAt desc) [0...8] {
2025-09-16T23:46:00.581278Z	        
2025-09-16T23:46:00.58133Z	    _id,
2025-09-16T23:46:00.581387Z	    _type,
2025-09-16T23:46:00.581447Z	    partNumber,
2025-09-16T23:46:00.581501Z	    "slug": slug.current,
2025-09-16T23:46:00.581554Z	    title,
2025-09-16T23:46:00.581621Z	    shortDescription,
2025-09-16T23:46:00.581692Z	    image,
2025-09-16T23:46:00.581761Z	    brand->{
2025-09-16T23:46:00.581818Z	      name,
2025-09-16T23:46:00.581871Z	      "slug": slug.current,
2025-09-16T23:46:00.58193Z	      logo
2025-09-16T23:46:00.581986Z	    },
2025-09-16T23:46:00.582043Z	    category->{
2025-09-16T23:46:00.582103Z	      name,
2025-09-16T23:46:00.582157Z	      "slug": slug.current
2025-09-16T23:46:00.58221Z	    },
2025-09-16T23:46:00.582263Z	    pricing{
2025-09-16T23:46:00.582318Z	      currency,
2025-09-16T23:46:00.582374Z	      tiers[]{
2025-09-16T23:46:00.582428Z	        quantity,
2025-09-16T23:46:00.58248Z	        price,
2025-09-16T23:46:00.582533Z	        unit
2025-09-16T23:46:00.582586Z	      },
2025-09-16T23:46:00.582649Z	      moq,
2025-09-16T23:46:00.583843Z	      leadTime,
2025-09-16T23:46:00.58393Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.583988Z	      "price": tiers[0].price,
2025-09-16T23:46:00.584054Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.584112Z	    },
2025-09-16T23:46:00.584168Z	    inventory{
2025-09-16T23:46:00.584419Z	      quantity,
2025-09-16T23:46:00.584586Z	      status,
2025-09-16T23:46:00.584714Z	      warehouse,
2025-09-16T23:46:00.584875Z	      lastUpdated,
2025-09-16T23:46:00.585008Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.585172Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.585263Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.585344Z	    },
2025-09-16T23:46:00.585477Z	    isActive,
2025-09-16T23:46:00.585557Z	    isFeatured,
2025-09-16T23:46:00.585781Z	    isNew,
2025-09-16T23:46:00.585916Z	    _createdAt,
2025-09-16T23:46:00.58605Z	    _updatedAt
2025-09-16T23:46:00.586137Z	  
2025-09-16T23:46:00.586213Z	      },
2025-09-16T23:46:00.586353Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-16T23:46:00.586477Z	    }
2025-09-16T23:46:00.586601Z	  
2025-09-16T23:46:00.586817Z	Query parameters: {
2025-09-16T23:46:00.586944Z	  limit: 8,
2025-09-16T23:46:00.587053Z	  offset: 0,
2025-09-16T23:46:00.587149Z	  category: undefined,
2025-09-16T23:46:00.58725Z	  brand: 'pi',
2025-09-16T23:46:00.587358Z	  featured: undefined
2025-09-16T23:46:00.587461Z	}
2025-09-16T23:46:00.587579Z	Fetching solutions with query: 
2025-09-16T23:46:00.587733Z	    {
2025-09-16T23:46:00.587839Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.58794Z	        
2025-09-16T23:46:00.588038Z	    _id,
2025-09-16T23:46:00.588129Z	    title,
2025-09-16T23:46:00.588446Z	    "slug": slug.current,
2025-09-16T23:46:00.588577Z	    summary,
2025-09-16T23:46:00.588729Z	    description,
2025-09-16T23:46:00.588813Z	    coverImage,
2025-09-16T23:46:00.588921Z	    primaryBrand->{
2025-09-16T23:46:00.589005Z	      _id,
2025-09-16T23:46:00.589071Z	      name,
2025-09-16T23:46:00.589138Z	      "slug": slug.current,
2025-09-16T23:46:00.589209Z	      logo
2025-09-16T23:46:00.589279Z	    },
2025-09-16T23:46:00.589363Z	    relatedBrands[]->{
2025-09-16T23:46:00.589435Z	      _id,
2025-09-16T23:46:00.589494Z	      name,
2025-09-16T23:46:00.589555Z	      "slug": slug.current,
2025-09-16T23:46:00.589613Z	      logo
2025-09-16T23:46:00.589689Z	    },
2025-09-16T23:46:00.589787Z	    targetMarket,
2025-09-16T23:46:00.589855Z	    complexity,
2025-09-16T23:46:00.589918Z	    publishedAt,
2025-09-16T23:46:00.589999Z	    isPublished,
2025-09-16T23:46:00.590071Z	    isFeatured,
2025-09-16T23:46:00.590136Z	    viewCount,
2025-09-16T23:46:00.590197Z	    _createdAt,
2025-09-16T23:46:00.590275Z	    _updatedAt
2025-09-16T23:46:00.590338Z	  
2025-09-16T23:46:00.590403Z	      },
2025-09-16T23:46:00.590463Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-16T23:46:00.590529Z	    }
2025-09-16T23:46:00.590587Z	  
2025-09-16T23:46:00.590645Z	Query parameters: {
2025-09-16T23:46:00.590732Z	  limit: 4,
2025-09-16T23:46:00.590796Z	  offset: 0,
2025-09-16T23:46:00.590852Z	  targetMarket: undefined,
2025-09-16T23:46:00.590915Z	  brand: 'pi',
2025-09-16T23:46:00.590973Z	  featured: undefined
2025-09-16T23:46:00.591028Z	}
2025-09-16T23:46:00.591084Z	✅ [getBrandData] Found brand: PI
2025-09-16T23:46:00.591142Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.591204Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.59126Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-16T23:46:00.59133Z	Fetching products with query: 
2025-09-16T23:46:00.591409Z	    {
2025-09-16T23:46:00.591474Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.591534Z	        
2025-09-16T23:46:00.591597Z	    _id,
2025-09-16T23:46:00.591657Z	    _type,
2025-09-16T23:46:00.59173Z	    partNumber,
2025-09-16T23:46:00.591785Z	    "slug": slug.current,
2025-09-16T23:46:00.591839Z	    title,
2025-09-16T23:46:00.591894Z	    shortDescription,
2025-09-16T23:46:00.591948Z	    image,
2025-09-16T23:46:00.592003Z	    brand->{
2025-09-16T23:46:00.592059Z	      name,
2025-09-16T23:46:00.592112Z	      "slug": slug.current,
2025-09-16T23:46:00.592166Z	      logo
2025-09-16T23:46:00.592221Z	    },
2025-09-16T23:46:00.592275Z	    category->{
2025-09-16T23:46:00.59233Z	      name,
2025-09-16T23:46:00.592392Z	      "slug": slug.current
2025-09-16T23:46:00.592448Z	    },
2025-09-16T23:46:00.592513Z	    pricing{
2025-09-16T23:46:00.592568Z	      currency,
2025-09-16T23:46:00.592627Z	      tiers[]{
2025-09-16T23:46:00.5927Z	        quantity,
2025-09-16T23:46:00.592758Z	        price,
2025-09-16T23:46:00.592817Z	        unit
2025-09-16T23:46:00.592871Z	      },
2025-09-16T23:46:00.592924Z	      moq,
2025-09-16T23:46:00.592977Z	      leadTime,
2025-09-16T23:46:00.593032Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.593089Z	      "price": tiers[0].price,
2025-09-16T23:46:00.593142Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.593196Z	    },
2025-09-16T23:46:00.59325Z	    inventory{
2025-09-16T23:46:00.593313Z	      quantity,
2025-09-16T23:46:00.593368Z	      status,
2025-09-16T23:46:00.593431Z	      warehouse,
2025-09-16T23:46:00.593498Z	      lastUpdated,
2025-09-16T23:46:00.593555Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.593611Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.593669Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.593741Z	    },
2025-09-16T23:46:00.593798Z	    isActive,
2025-09-16T23:46:00.593859Z	    isFeatured,
2025-09-16T23:46:00.593914Z	    isNew,
2025-09-16T23:46:00.593984Z	    _createdAt,
2025-09-16T23:46:00.59475Z	    _updatedAt
2025-09-16T23:46:00.594906Z	  
2025-09-16T23:46:00.595068Z	      },
2025-09-16T23:46:00.595218Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-16T23:46:00.595369Z	    }
2025-09-16T23:46:00.595519Z	  
2025-09-16T23:46:00.595656Z	Query parameters: {
2025-09-16T23:46:00.595806Z	  limit: 8,
2025-09-16T23:46:00.59595Z	  offset: 0,
2025-09-16T23:46:00.596084Z	  category: undefined,
2025-09-16T23:46:00.596218Z	  brand: 'pi',
2025-09-16T23:46:00.596349Z	  featured: undefined
2025-09-16T23:46:00.596462Z	}
2025-09-16T23:46:00.596562Z	Fetching solutions with query: 
2025-09-16T23:46:00.596715Z	    {
2025-09-16T23:46:00.596817Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.596909Z	        
2025-09-16T23:46:00.597003Z	    _id,
2025-09-16T23:46:00.5971Z	    title,
2025-09-16T23:46:00.597176Z	    "slug": slug.current,
2025-09-16T23:46:00.597243Z	    summary,
2025-09-16T23:46:00.597299Z	    description,
2025-09-16T23:46:00.597364Z	    coverImage,
2025-09-16T23:46:00.597426Z	    primaryBrand->{
2025-09-16T23:46:00.597486Z	      _id,
2025-09-16T23:46:00.597541Z	      name,
2025-09-16T23:46:00.597599Z	      "slug": slug.current,
2025-09-16T23:46:00.597666Z	      logo
2025-09-16T23:46:00.597759Z	    },
2025-09-16T23:46:00.597817Z	    relatedBrands[]->{
2025-09-16T23:46:00.597878Z	      _id,
2025-09-16T23:46:00.597939Z	      name,
2025-09-16T23:46:00.597996Z	      "slug": slug.current,
2025-09-16T23:46:00.598063Z	      logo
2025-09-16T23:46:00.598123Z	    },
2025-09-16T23:46:00.598178Z	    targetMarket,
2025-09-16T23:46:00.59823Z	    complexity,
2025-09-16T23:46:00.598284Z	    publishedAt,
2025-09-16T23:46:00.59834Z	    isPublished,
2025-09-16T23:46:00.598399Z	    isFeatured,
2025-09-16T23:46:00.598462Z	    viewCount,
2025-09-16T23:46:00.598526Z	    _createdAt,
2025-09-16T23:46:00.59858Z	    _updatedAt
2025-09-16T23:46:00.598634Z	  
2025-09-16T23:46:00.598707Z	      },
2025-09-16T23:46:00.59878Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-16T23:46:00.598848Z	    }
2025-09-16T23:46:00.598911Z	  
2025-09-16T23:46:00.598975Z	Query parameters: {
2025-09-16T23:46:00.599037Z	  limit: 4,
2025-09-16T23:46:00.599096Z	  offset: 0,
2025-09-16T23:46:00.599156Z	  targetMarket: undefined,
2025-09-16T23:46:00.599211Z	  brand: 'pi',
2025-09-16T23:46:00.599292Z	  featured: undefined
2025-09-16T23:46:00.599349Z	}
2025-09-16T23:46:00.59942Z	✅ [getBrandData] Found brand: PI
2025-09-16T23:46:00.59951Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.599569Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.599627Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:00.599697Z	Fetching products with query: 
2025-09-16T23:46:00.599755Z	    {
2025-09-16T23:46:00.599812Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.599875Z	        
2025-09-16T23:46:00.599939Z	    _id,
2025-09-16T23:46:00.600003Z	    _type,
2025-09-16T23:46:00.600059Z	    partNumber,
2025-09-16T23:46:00.600112Z	    "slug": slug.current,
2025-09-16T23:46:00.600167Z	    title,
2025-09-16T23:46:00.600226Z	    shortDescription,
2025-09-16T23:46:00.600282Z	    image,
2025-09-16T23:46:00.600342Z	    brand->{
2025-09-16T23:46:00.600411Z	      name,
2025-09-16T23:46:00.600471Z	      "slug": slug.current,
2025-09-16T23:46:00.600535Z	      logo
2025-09-16T23:46:00.600599Z	    },
2025-09-16T23:46:00.60066Z	    category->{
2025-09-16T23:46:00.600734Z	      name,
2025-09-16T23:46:00.600792Z	      "slug": slug.current
2025-09-16T23:46:00.600847Z	    },
2025-09-16T23:46:00.600905Z	    pricing{
2025-09-16T23:46:00.60096Z	      currency,
2025-09-16T23:46:00.601014Z	      tiers[]{
2025-09-16T23:46:00.601069Z	        quantity,
2025-09-16T23:46:00.601121Z	        price,
2025-09-16T23:46:00.601176Z	        unit
2025-09-16T23:46:00.60123Z	      },
2025-09-16T23:46:00.601298Z	      moq,
2025-09-16T23:46:00.601359Z	      leadTime,
2025-09-16T23:46:00.601427Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.601492Z	      "price": tiers[0].price,
2025-09-16T23:46:00.601546Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.601609Z	    },
2025-09-16T23:46:00.601671Z	    inventory{
2025-09-16T23:46:00.601742Z	      quantity,
2025-09-16T23:46:00.601803Z	      status,
2025-09-16T23:46:00.601864Z	      warehouse,
2025-09-16T23:46:00.601924Z	      lastUpdated,
2025-09-16T23:46:00.601981Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.602044Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.602101Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.602173Z	    },
2025-09-16T23:46:00.602238Z	    isActive,
2025-09-16T23:46:00.602298Z	    isFeatured,
2025-09-16T23:46:00.602355Z	    isNew,
2025-09-16T23:46:00.602417Z	    _createdAt,
2025-09-16T23:46:00.602473Z	    _updatedAt
2025-09-16T23:46:00.602527Z	  
2025-09-16T23:46:00.602583Z	      },
2025-09-16T23:46:00.602643Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-16T23:46:00.602712Z	    }
2025-09-16T23:46:00.602776Z	  
2025-09-16T23:46:00.60283Z	Query parameters: {
2025-09-16T23:46:00.60289Z	  limit: 8,
2025-09-16T23:46:00.60295Z	  offset: 0,
2025-09-16T23:46:00.60301Z	  category: undefined,
2025-09-16T23:46:00.60307Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:00.603141Z	  featured: undefined
2025-09-16T23:46:00.603203Z	}
2025-09-16T23:46:00.603261Z	Fetching solutions with query: 
2025-09-16T23:46:00.603314Z	    {
2025-09-16T23:46:00.60337Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.603434Z	        
2025-09-16T23:46:00.603497Z	    _id,
2025-09-16T23:46:00.603553Z	    title,
2025-09-16T23:46:00.603612Z	    "slug": slug.current,
2025-09-16T23:46:00.603666Z	    summary,
2025-09-16T23:46:00.603731Z	    description,
2025-09-16T23:46:00.603788Z	    coverImage,
2025-09-16T23:46:00.603844Z	    primaryBrand->{
2025-09-16T23:46:00.603905Z	      _id,
2025-09-16T23:46:00.603966Z	      name,
2025-09-16T23:46:00.604031Z	      "slug": slug.current,
2025-09-16T23:46:00.604093Z	      logo
2025-09-16T23:46:00.604148Z	    },
2025-09-16T23:46:00.60421Z	    relatedBrands[]->{
2025-09-16T23:46:00.604269Z	      _id,
2025-09-16T23:46:00.604329Z	      name,
2025-09-16T23:46:00.60439Z	      "slug": slug.current,
2025-09-16T23:46:00.60445Z	      logo
2025-09-16T23:46:00.604509Z	    },
2025-09-16T23:46:00.604572Z	    targetMarket,
2025-09-16T23:46:00.604628Z	    complexity,
2025-09-16T23:46:00.604699Z	    publishedAt,
2025-09-16T23:46:00.604762Z	    isPublished,
2025-09-16T23:46:00.604824Z	    isFeatured,
2025-09-16T23:46:00.604885Z	    viewCount,
2025-09-16T23:46:00.604947Z	    _createdAt,
2025-09-16T23:46:00.605002Z	    _updatedAt
2025-09-16T23:46:00.605057Z	  
2025-09-16T23:46:00.605112Z	      },
2025-09-16T23:46:00.605167Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-16T23:46:00.605227Z	    }
2025-09-16T23:46:00.605283Z	  
2025-09-16T23:46:00.605337Z	Query parameters: {
2025-09-16T23:46:00.605412Z	  limit: 4,
2025-09-16T23:46:00.605481Z	  offset: 0,
2025-09-16T23:46:00.605546Z	  targetMarket: undefined,
2025-09-16T23:46:00.605604Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:00.605699Z	  featured: undefined
2025-09-16T23:46:00.605764Z	}
2025-09-16T23:46:00.605829Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:00.605895Z	Fetching products with query: 
2025-09-16T23:46:00.605949Z	    {
2025-09-16T23:46:00.606002Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.606059Z	        
2025-09-16T23:46:00.606119Z	    _id,
2025-09-16T23:46:00.606176Z	    _type,
2025-09-16T23:46:00.60623Z	    partNumber,
2025-09-16T23:46:00.606283Z	    "slug": slug.current,
2025-09-16T23:46:00.606344Z	    title,
2025-09-16T23:46:00.606502Z	    shortDescription,
2025-09-16T23:46:00.606613Z	    image,
2025-09-16T23:46:00.606741Z	    brand->{
2025-09-16T23:46:00.606917Z	      name,
2025-09-16T23:46:00.607036Z	      "slug": slug.current,
2025-09-16T23:46:00.607151Z	      logo
2025-09-16T23:46:00.607255Z	    },
2025-09-16T23:46:00.607356Z	    category->{
2025-09-16T23:46:00.60745Z	      name,
2025-09-16T23:46:00.607586Z	      "slug": slug.current
2025-09-16T23:46:00.607721Z	    },
2025-09-16T23:46:00.608136Z	    pricing{
2025-09-16T23:46:00.608348Z	      currency,
2025-09-16T23:46:00.608444Z	      tiers[]{
2025-09-16T23:46:00.608682Z	        quantity,
2025-09-16T23:46:00.608962Z	        price,
2025-09-16T23:46:00.609049Z	        unit
2025-09-16T23:46:00.609154Z	      },
2025-09-16T23:46:00.609287Z	      moq,
2025-09-16T23:46:00.60941Z	      leadTime,
2025-09-16T23:46:00.609546Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.609811Z	      "price": tiers[0].price,
2025-09-16T23:46:00.609928Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.610032Z	    },
2025-09-16T23:46:00.610125Z	    inventory{
2025-09-16T23:46:00.610219Z	      quantity,
2025-09-16T23:46:00.610307Z	      status,
2025-09-16T23:46:00.610408Z	      warehouse,
2025-09-16T23:46:00.610539Z	      lastUpdated,
2025-09-16T23:46:00.610633Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.61076Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.610866Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.610967Z	    },
2025-09-16T23:46:00.611064Z	    isActive,
2025-09-16T23:46:00.611161Z	    isFeatured,
2025-09-16T23:46:00.611256Z	    isNew,
2025-09-16T23:46:00.611339Z	    _createdAt,
2025-09-16T23:46:00.611438Z	    _updatedAt
2025-09-16T23:46:00.611535Z	  
2025-09-16T23:46:00.611662Z	      },
2025-09-16T23:46:00.611802Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-16T23:46:00.611923Z	    }
2025-09-16T23:46:00.612024Z	  
2025-09-16T23:46:00.61212Z	Query parameters: {
2025-09-16T23:46:00.612206Z	  limit: 8,
2025-09-16T23:46:00.612308Z	  offset: 0,
2025-09-16T23:46:00.612413Z	  category: undefined,
2025-09-16T23:46:00.612505Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:00.612597Z	  featured: undefined
2025-09-16T23:46:00.612695Z	}
2025-09-16T23:46:00.612794Z	Fetching solutions with query: 
2025-09-16T23:46:00.612884Z	    {
2025-09-16T23:46:00.612974Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.613072Z	        
2025-09-16T23:46:00.613171Z	    _id,
2025-09-16T23:46:00.613259Z	    title,
2025-09-16T23:46:00.613345Z	    "slug": slug.current,
2025-09-16T23:46:00.613438Z	    summary,
2025-09-16T23:46:00.613522Z	    description,
2025-09-16T23:46:00.613644Z	    coverImage,
2025-09-16T23:46:00.613822Z	    primaryBrand->{
2025-09-16T23:46:00.613972Z	      _id,
2025-09-16T23:46:00.614075Z	      name,
2025-09-16T23:46:00.614167Z	      "slug": slug.current,
2025-09-16T23:46:00.614298Z	      logo
2025-09-16T23:46:00.61442Z	    },
2025-09-16T23:46:00.614523Z	    relatedBrands[]->{
2025-09-16T23:46:00.614615Z	      _id,
2025-09-16T23:46:00.614727Z	      name,
2025-09-16T23:46:00.614815Z	      "slug": slug.current,
2025-09-16T23:46:00.614901Z	      logo
2025-09-16T23:46:00.614994Z	    },
2025-09-16T23:46:00.615089Z	    targetMarket,
2025-09-16T23:46:00.615175Z	    complexity,
2025-09-16T23:46:00.615263Z	    publishedAt,
2025-09-16T23:46:00.615353Z	    isPublished,
2025-09-16T23:46:00.615454Z	    isFeatured,
2025-09-16T23:46:00.615825Z	    viewCount,
2025-09-16T23:46:00.615947Z	    _createdAt,
2025-09-16T23:46:00.616058Z	    _updatedAt
2025-09-16T23:46:00.616153Z	  
2025-09-16T23:46:00.616245Z	      },
2025-09-16T23:46:00.61635Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-16T23:46:00.616504Z	    }
2025-09-16T23:46:00.61661Z	  
2025-09-16T23:46:00.616713Z	Query parameters: {
2025-09-16T23:46:00.616813Z	  limit: 4,
2025-09-16T23:46:00.616908Z	  offset: 0,
2025-09-16T23:46:00.617064Z	  targetMarket: undefined,
2025-09-16T23:46:00.617174Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:00.617273Z	  featured: undefined
2025-09-16T23:46:00.617362Z	}
2025-09-16T23:46:00.617481Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.61759Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.617706Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.617809Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.617904Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:00.618Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:00.618207Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-16T23:46:00.618398Z	Fetching products with query: 
2025-09-16T23:46:00.618553Z	    {
2025-09-16T23:46:00.618717Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.618873Z	        
2025-09-16T23:46:00.619027Z	    _id,
2025-09-16T23:46:00.619176Z	    _type,
2025-09-16T23:46:00.619339Z	    partNumber,
2025-09-16T23:46:00.619495Z	    "slug": slug.current,
2025-09-16T23:46:00.619639Z	    title,
2025-09-16T23:46:00.619818Z	    shortDescription,
2025-09-16T23:46:00.619972Z	    image,
2025-09-16T23:46:00.620143Z	    brand->{
2025-09-16T23:46:00.620283Z	      name,
2025-09-16T23:46:00.620381Z	      "slug": slug.current,
2025-09-16T23:46:00.620504Z	      logo
2025-09-16T23:46:00.620611Z	    },
2025-09-16T23:46:00.620731Z	    category->{
2025-09-16T23:46:00.62088Z	      name,
2025-09-16T23:46:00.620991Z	      "slug": slug.current
2025-09-16T23:46:00.62109Z	    },
2025-09-16T23:46:00.621192Z	    pricing{
2025-09-16T23:46:00.62129Z	      currency,
2025-09-16T23:46:00.621405Z	      tiers[]{
2025-09-16T23:46:00.621517Z	        quantity,
2025-09-16T23:46:00.621621Z	        price,
2025-09-16T23:46:00.621737Z	        unit
2025-09-16T23:46:00.621835Z	      },
2025-09-16T23:46:00.622057Z	      moq,
2025-09-16T23:46:00.622169Z	      leadTime,
2025-09-16T23:46:00.622266Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.622364Z	      "price": tiers[0].price,
2025-09-16T23:46:00.62247Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.62256Z	    },
2025-09-16T23:46:00.62265Z	    inventory{
2025-09-16T23:46:00.62277Z	      quantity,
2025-09-16T23:46:00.622873Z	      status,
2025-09-16T23:46:00.622963Z	      warehouse,
2025-09-16T23:46:00.623052Z	      lastUpdated,
2025-09-16T23:46:00.623143Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.623233Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.623339Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.623458Z	    },
2025-09-16T23:46:00.623555Z	    isActive,
2025-09-16T23:46:00.623656Z	    isFeatured,
2025-09-16T23:46:00.623786Z	    isNew,
2025-09-16T23:46:00.623889Z	    _createdAt,
2025-09-16T23:46:00.623985Z	    _updatedAt
2025-09-16T23:46:00.624116Z	  
2025-09-16T23:46:00.62423Z	      },
2025-09-16T23:46:00.624318Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-16T23:46:00.624446Z	    }
2025-09-16T23:46:00.624547Z	  
2025-09-16T23:46:00.624645Z	Query parameters: {
2025-09-16T23:46:00.624768Z	  limit: 8,
2025-09-16T23:46:00.624864Z	  offset: 0,
2025-09-16T23:46:00.624964Z	  category: undefined,
2025-09-16T23:46:00.625066Z	  brand: 'semikron',
2025-09-16T23:46:00.625167Z	  featured: undefined
2025-09-16T23:46:00.625269Z	}
2025-09-16T23:46:00.625369Z	Fetching solutions with query: 
2025-09-16T23:46:00.625474Z	    {
2025-09-16T23:46:00.625601Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.625725Z	        
2025-09-16T23:46:00.625834Z	    _id,
2025-09-16T23:46:00.625938Z	    title,
2025-09-16T23:46:00.626046Z	    "slug": slug.current,
2025-09-16T23:46:00.626135Z	    summary,
2025-09-16T23:46:00.626223Z	    description,
2025-09-16T23:46:00.62631Z	    coverImage,
2025-09-16T23:46:00.626408Z	    primaryBrand->{
2025-09-16T23:46:00.626544Z	      _id,
2025-09-16T23:46:00.626648Z	      name,
2025-09-16T23:46:00.626763Z	      "slug": slug.current,
2025-09-16T23:46:00.626862Z	      logo
2025-09-16T23:46:00.626959Z	    },
2025-09-16T23:46:00.627082Z	    relatedBrands[]->{
2025-09-16T23:46:00.62718Z	      _id,
2025-09-16T23:46:00.627277Z	      name,
2025-09-16T23:46:00.627382Z	      "slug": slug.current,
2025-09-16T23:46:00.627487Z	      logo
2025-09-16T23:46:00.627583Z	    },
2025-09-16T23:46:00.62769Z	    targetMarket,
2025-09-16T23:46:00.627804Z	    complexity,
2025-09-16T23:46:00.6279Z	    publishedAt,
2025-09-16T23:46:00.628009Z	    isPublished,
2025-09-16T23:46:00.628109Z	    isFeatured,
2025-09-16T23:46:00.628211Z	    viewCount,
2025-09-16T23:46:00.628312Z	    _createdAt,
2025-09-16T23:46:00.628423Z	    _updatedAt
2025-09-16T23:46:00.628524Z	  
2025-09-16T23:46:00.628618Z	      },
2025-09-16T23:46:00.628739Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-16T23:46:00.628834Z	    }
2025-09-16T23:46:00.628928Z	  
2025-09-16T23:46:00.629016Z	Query parameters: {
2025-09-16T23:46:00.629102Z	  limit: 4,
2025-09-16T23:46:00.629193Z	  offset: 0,
2025-09-16T23:46:00.629297Z	  targetMarket: undefined,
2025-09-16T23:46:00.629407Z	  brand: 'semikron',
2025-09-16T23:46:00.629508Z	  featured: undefined
2025-09-16T23:46:00.629608Z	}
2025-09-16T23:46:00.629764Z	✅ [getBrandData] Found brand: Semikron
2025-09-16T23:46:00.629871Z	Products fetch result: {
2025-09-16T23:46:00.629968Z	  totalProducts: 1,
2025-09-16T23:46:00.630064Z	  fetchedProducts: 1,
2025-09-16T23:46:00.630158Z	  firstProduct: {
2025-09-16T23:46:00.630253Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-16T23:46:00.630347Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-16T23:46:00.630449Z	    _type: 'product',
2025-09-16T23:46:00.630547Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-16T23:46:00.630646Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-16T23:46:00.630823Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:00.630938Z	    image: null,
2025-09-16T23:46:00.631036Z	    inventory: {
2025-09-16T23:46:00.631121Z	      inStock: true,
2025-09-16T23:46:00.631208Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-16T23:46:00.631303Z	      quantity: 0,
2025-09-16T23:46:00.631406Z	      status: 'in_stock',
2025-09-16T23:46:00.631499Z	      warehouse: null
2025-09-16T23:46:00.63159Z	    },
2025-09-16T23:46:00.631709Z	    isActive: true,
2025-09-16T23:46:00.631814Z	    isFeatured: false,
2025-09-16T23:46:00.631995Z	    isNew: false,
2025-09-16T23:46:00.632106Z	    partNumber: 'SKKT106/16E',
2025-09-16T23:46:00.632213Z	    pricing: {
2025-09-16T23:46:00.632313Z	      currency: 'CNY',
2025-09-16T23:46:00.632417Z	      leadTime: null,
2025-09-16T23:46:00.632515Z	      moq: null,
2025-09-16T23:46:00.632609Z	      price: null,
2025-09-16T23:46:00.632723Z	      tiers: null
2025-09-16T23:46:00.632827Z	    },
2025-09-16T23:46:00.632932Z	    shortDescription: 'SKKT106/16E',
2025-09-16T23:46:00.633029Z	    slug: 'SKKT106/16E',
2025-09-16T23:46:00.633125Z	    title: 'SKKT106/16E'
2025-09-16T23:46:00.633219Z	  }
2025-09-16T23:46:00.633315Z	}
2025-09-16T23:46:00.633427Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.63353Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-16T23:46:00.633633Z	Fetching products with query: 
2025-09-16T23:46:00.633751Z	    {
2025-09-16T23:46:00.633853Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.633966Z	        
2025-09-16T23:46:00.634073Z	    _id,
2025-09-16T23:46:00.634169Z	    _type,
2025-09-16T23:46:00.634267Z	    partNumber,
2025-09-16T23:46:00.634369Z	    "slug": slug.current,
2025-09-16T23:46:00.634487Z	    title,
2025-09-16T23:46:00.634591Z	    shortDescription,
2025-09-16T23:46:00.634713Z	    image,
2025-09-16T23:46:00.634819Z	    brand->{
2025-09-16T23:46:00.634919Z	      name,
2025-09-16T23:46:00.635019Z	      "slug": slug.current,
2025-09-16T23:46:00.635115Z	      logo
2025-09-16T23:46:00.635215Z	    },
2025-09-16T23:46:00.635542Z	    category->{
2025-09-16T23:46:00.635685Z	      name,
2025-09-16T23:46:00.635881Z	      "slug": slug.current
2025-09-16T23:46:00.63602Z	    },
2025-09-16T23:46:00.636129Z	    pricing{
2025-09-16T23:46:00.636236Z	      currency,
2025-09-16T23:46:00.636332Z	      tiers[]{
2025-09-16T23:46:00.636437Z	        quantity,
2025-09-16T23:46:00.636532Z	        price,
2025-09-16T23:46:00.636636Z	        unit
2025-09-16T23:46:00.636751Z	      },
2025-09-16T23:46:00.636851Z	      moq,
2025-09-16T23:46:00.636945Z	      leadTime,
2025-09-16T23:46:00.637042Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.637151Z	      "price": tiers[0].price,
2025-09-16T23:46:00.637252Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.637347Z	    },
2025-09-16T23:46:00.637454Z	    inventory{
2025-09-16T23:46:00.637551Z	      quantity,
2025-09-16T23:46:00.637644Z	      status,
2025-09-16T23:46:00.637755Z	      warehouse,
2025-09-16T23:46:00.637854Z	      lastUpdated,
2025-09-16T23:46:00.637949Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.638048Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.638141Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.638235Z	    },
2025-09-16T23:46:00.638329Z	    isActive,
2025-09-16T23:46:00.638432Z	    isFeatured,
2025-09-16T23:46:00.638526Z	    isNew,
2025-09-16T23:46:00.63862Z	    _createdAt,
2025-09-16T23:46:00.638729Z	    _updatedAt
2025-09-16T23:46:00.638829Z	  
2025-09-16T23:46:00.638925Z	      },
2025-09-16T23:46:00.639022Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-16T23:46:00.63913Z	    }
2025-09-16T23:46:00.639252Z	  
2025-09-16T23:46:00.63935Z	Query parameters: {
2025-09-16T23:46:00.63947Z	  limit: 8,
2025-09-16T23:46:00.639572Z	  offset: 0,
2025-09-16T23:46:00.639667Z	  category: undefined,
2025-09-16T23:46:00.639778Z	  brand: 'semikron',
2025-09-16T23:46:00.639878Z	  featured: undefined
2025-09-16T23:46:00.639972Z	}
2025-09-16T23:46:00.640068Z	Fetching solutions with query: 
2025-09-16T23:46:00.640162Z	    {
2025-09-16T23:46:00.640257Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.640363Z	        
2025-09-16T23:46:00.640474Z	    _id,
2025-09-16T23:46:00.640569Z	    title,
2025-09-16T23:46:00.640662Z	    "slug": slug.current,
2025-09-16T23:46:00.640776Z	    summary,
2025-09-16T23:46:00.640878Z	    description,
2025-09-16T23:46:00.64099Z	    coverImage,
2025-09-16T23:46:00.64106Z	    primaryBrand->{
2025-09-16T23:46:00.641117Z	      _id,
2025-09-16T23:46:00.641193Z	      name,
2025-09-16T23:46:00.641252Z	      "slug": slug.current,
2025-09-16T23:46:00.641307Z	      logo
2025-09-16T23:46:00.641368Z	    },
2025-09-16T23:46:00.641436Z	    relatedBrands[]->{
2025-09-16T23:46:00.64149Z	      _id,
2025-09-16T23:46:00.641549Z	      name,
2025-09-16T23:46:00.641605Z	      "slug": slug.current,
2025-09-16T23:46:00.64166Z	      logo
2025-09-16T23:46:00.641753Z	    },
2025-09-16T23:46:00.641817Z	    targetMarket,
2025-09-16T23:46:00.641872Z	    complexity,
2025-09-16T23:46:00.641925Z	    publishedAt,
2025-09-16T23:46:00.641979Z	    isPublished,
2025-09-16T23:46:00.642033Z	    isFeatured,
2025-09-16T23:46:00.642086Z	    viewCount,
2025-09-16T23:46:00.642143Z	    _createdAt,
2025-09-16T23:46:00.642197Z	    _updatedAt
2025-09-16T23:46:00.642251Z	  
2025-09-16T23:46:00.642305Z	      },
2025-09-16T23:46:00.642361Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-16T23:46:00.642429Z	    }
2025-09-16T23:46:00.642489Z	  
2025-09-16T23:46:00.642544Z	Query parameters: {
2025-09-16T23:46:00.642606Z	  limit: 4,
2025-09-16T23:46:00.642663Z	  offset: 0,
2025-09-16T23:46:00.642737Z	  targetMarket: undefined,
2025-09-16T23:46:00.642793Z	  brand: 'semikron',
2025-09-16T23:46:00.642848Z	  featured: undefined
2025-09-16T23:46:00.642905Z	}
2025-09-16T23:46:00.64296Z	✅ [getBrandData] Found brand: Semikron
2025-09-16T23:46:00.643016Z	Products fetch result: {
2025-09-16T23:46:00.64307Z	  totalProducts: 1,
2025-09-16T23:46:00.643123Z	  fetchedProducts: 1,
2025-09-16T23:46:00.643177Z	  firstProduct: {
2025-09-16T23:46:00.64323Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-16T23:46:00.643283Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-16T23:46:00.643336Z	    _type: 'product',
2025-09-16T23:46:00.643396Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-16T23:46:00.643451Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-16T23:46:00.643514Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:00.643571Z	    image: null,
2025-09-16T23:46:00.643625Z	    inventory: {
2025-09-16T23:46:00.6437Z	      inStock: true,
2025-09-16T23:46:00.643783Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-16T23:46:00.64384Z	      quantity: 0,
2025-09-16T23:46:00.643901Z	      status: 'in_stock',
2025-09-16T23:46:00.643954Z	      warehouse: null
2025-09-16T23:46:00.644008Z	    },
2025-09-16T23:46:00.644062Z	    isActive: true,
2025-09-16T23:46:00.644115Z	    isFeatured: false,
2025-09-16T23:46:00.644168Z	    isNew: false,
2025-09-16T23:46:00.644232Z	    partNumber: 'SKKT106/16E',
2025-09-16T23:46:00.644286Z	    pricing: {
2025-09-16T23:46:00.644339Z	      currency: 'CNY',
2025-09-16T23:46:00.644399Z	      leadTime: null,
2025-09-16T23:46:00.644465Z	      moq: null,
2025-09-16T23:46:00.644523Z	      price: null,
2025-09-16T23:46:00.644577Z	      tiers: null
2025-09-16T23:46:00.64463Z	    },
2025-09-16T23:46:00.644697Z	    shortDescription: 'SKKT106/16E',
2025-09-16T23:46:00.644753Z	    slug: 'SKKT106/16E',
2025-09-16T23:46:00.644812Z	    title: 'SKKT106/16E'
2025-09-16T23:46:00.644867Z	  }
2025-09-16T23:46:00.644923Z	}
2025-09-16T23:46:00.644976Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.645031Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-16T23:46:00.645089Z	Fetching products with query: 
2025-09-16T23:46:00.645142Z	    {
2025-09-16T23:46:00.645195Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.645259Z	        
2025-09-16T23:46:00.645312Z	    _id,
2025-09-16T23:46:00.645365Z	    _type,
2025-09-16T23:46:00.645426Z	    partNumber,
2025-09-16T23:46:00.64548Z	    "slug": slug.current,
2025-09-16T23:46:00.645538Z	    title,
2025-09-16T23:46:00.645595Z	    shortDescription,
2025-09-16T23:46:00.645648Z	    image,
2025-09-16T23:46:00.645734Z	    brand->{
2025-09-16T23:46:00.645796Z	      name,
2025-09-16T23:46:00.645849Z	      "slug": slug.current,
2025-09-16T23:46:00.645904Z	      logo
2025-09-16T23:46:00.645958Z	    },
2025-09-16T23:46:00.646011Z	    category->{
2025-09-16T23:46:00.646064Z	      name,
2025-09-16T23:46:00.646122Z	      "slug": slug.current
2025-09-16T23:46:00.646177Z	    },
2025-09-16T23:46:00.64623Z	    pricing{
2025-09-16T23:46:00.646284Z	      currency,
2025-09-16T23:46:00.646336Z	      tiers[]{
2025-09-16T23:46:00.646394Z	        quantity,
2025-09-16T23:46:00.646449Z	        price,
2025-09-16T23:46:00.646576Z	        unit
2025-09-16T23:46:00.646691Z	      },
2025-09-16T23:46:00.646771Z	      moq,
2025-09-16T23:46:00.646827Z	      leadTime,
2025-09-16T23:46:00.646881Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.646943Z	      "price": tiers[0].price,
2025-09-16T23:46:00.646999Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.647052Z	    },
2025-09-16T23:46:00.647109Z	    inventory{
2025-09-16T23:46:00.647162Z	      quantity,
2025-09-16T23:46:00.647216Z	      status,
2025-09-16T23:46:00.64727Z	      warehouse,
2025-09-16T23:46:00.647323Z	      lastUpdated,
2025-09-16T23:46:00.647384Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.647445Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.647498Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.647556Z	    },
2025-09-16T23:46:00.647609Z	    isActive,
2025-09-16T23:46:00.647662Z	    isFeatured,
2025-09-16T23:46:00.647764Z	    isNew,
2025-09-16T23:46:00.647827Z	    _createdAt,
2025-09-16T23:46:00.647882Z	    _updatedAt
2025-09-16T23:46:00.647936Z	  
2025-09-16T23:46:00.647988Z	      },
2025-09-16T23:46:00.648041Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-16T23:46:00.6481Z	    }
2025-09-16T23:46:00.648155Z	  
2025-09-16T23:46:00.648207Z	Query parameters: {
2025-09-16T23:46:00.648261Z	  limit: 8,
2025-09-16T23:46:00.648314Z	  offset: 0,
2025-09-16T23:46:00.648366Z	  category: undefined,
2025-09-16T23:46:00.648433Z	  brand: 'epcos',
2025-09-16T23:46:00.648489Z	  featured: undefined
2025-09-16T23:46:00.648543Z	}
2025-09-16T23:46:00.648598Z	Fetching solutions with query: 
2025-09-16T23:46:00.64865Z	    {
2025-09-16T23:46:00.648735Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.648795Z	        
2025-09-16T23:46:00.64885Z	    _id,
2025-09-16T23:46:00.648903Z	    title,
2025-09-16T23:46:00.648954Z	    "slug": slug.current,
2025-09-16T23:46:00.649012Z	    summary,
2025-09-16T23:46:00.649066Z	    description,
2025-09-16T23:46:00.649119Z	    coverImage,
2025-09-16T23:46:00.649172Z	    primaryBrand->{
2025-09-16T23:46:00.649224Z	      _id,
2025-09-16T23:46:00.649277Z	      name,
2025-09-16T23:46:00.649329Z	      "slug": slug.current,
2025-09-16T23:46:00.649388Z	      logo
2025-09-16T23:46:00.649442Z	    },
2025-09-16T23:46:00.649498Z	    relatedBrands[]->{
2025-09-16T23:46:00.649551Z	      _id,
2025-09-16T23:46:00.649605Z	      name,
2025-09-16T23:46:00.64966Z	      "slug": slug.current,
2025-09-16T23:46:00.649757Z	      logo
2025-09-16T23:46:00.649853Z	    },
2025-09-16T23:46:00.649947Z	    targetMarket,
2025-09-16T23:46:00.650017Z	    complexity,
2025-09-16T23:46:00.650073Z	    publishedAt,
2025-09-16T23:46:00.650137Z	    isPublished,
2025-09-16T23:46:00.650195Z	    isFeatured,
2025-09-16T23:46:00.650256Z	    viewCount,
2025-09-16T23:46:00.650316Z	    _createdAt,
2025-09-16T23:46:00.650383Z	    _updatedAt
2025-09-16T23:46:00.650446Z	  
2025-09-16T23:46:00.650501Z	      },
2025-09-16T23:46:00.650556Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-16T23:46:00.650611Z	    }
2025-09-16T23:46:00.650689Z	  
2025-09-16T23:46:00.650798Z	Query parameters: {
2025-09-16T23:46:00.65093Z	  limit: 4,
2025-09-16T23:46:00.651033Z	  offset: 0,
2025-09-16T23:46:00.651132Z	  targetMarket: undefined,
2025-09-16T23:46:00.651226Z	  brand: 'epcos',
2025-09-16T23:46:00.651323Z	  featured: undefined
2025-09-16T23:46:00.65144Z	}
2025-09-16T23:46:00.651561Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-16T23:46:00.651662Z	Fetching products with query: 
2025-09-16T23:46:00.651772Z	    {
2025-09-16T23:46:00.651879Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.651974Z	        
2025-09-16T23:46:00.652068Z	    _id,
2025-09-16T23:46:00.652161Z	    _type,
2025-09-16T23:46:00.652257Z	    partNumber,
2025-09-16T23:46:00.652357Z	    "slug": slug.current,
2025-09-16T23:46:00.652471Z	    title,
2025-09-16T23:46:00.652574Z	    shortDescription,
2025-09-16T23:46:00.652713Z	    image,
2025-09-16T23:46:00.652814Z	    brand->{
2025-09-16T23:46:00.652914Z	      name,
2025-09-16T23:46:00.653003Z	      "slug": slug.current,
2025-09-16T23:46:00.653084Z	      logo
2025-09-16T23:46:00.65316Z	    },
2025-09-16T23:46:00.653235Z	    category->{
2025-09-16T23:46:00.653311Z	      name,
2025-09-16T23:46:00.653402Z	      "slug": slug.current
2025-09-16T23:46:00.653486Z	    },
2025-09-16T23:46:00.653563Z	    pricing{
2025-09-16T23:46:00.653641Z	      currency,
2025-09-16T23:46:00.653749Z	      tiers[]{
2025-09-16T23:46:00.653837Z	        quantity,
2025-09-16T23:46:00.65392Z	        price,
2025-09-16T23:46:00.654012Z	        unit
2025-09-16T23:46:00.654107Z	      },
2025-09-16T23:46:00.654216Z	      moq,
2025-09-16T23:46:00.654307Z	      leadTime,
2025-09-16T23:46:00.654411Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.654523Z	      "price": tiers[0].price,
2025-09-16T23:46:00.654615Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.654741Z	    },
2025-09-16T23:46:00.654855Z	    inventory{
2025-09-16T23:46:00.654958Z	      quantity,
2025-09-16T23:46:00.655066Z	      status,
2025-09-16T23:46:00.655161Z	      warehouse,
2025-09-16T23:46:00.655259Z	      lastUpdated,
2025-09-16T23:46:00.655355Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.65548Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.655583Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.655692Z	    },
2025-09-16T23:46:00.655805Z	    isActive,
2025-09-16T23:46:00.655917Z	    isFeatured,
2025-09-16T23:46:00.656034Z	    isNew,
2025-09-16T23:46:00.656145Z	    _createdAt,
2025-09-16T23:46:00.656247Z	    _updatedAt
2025-09-16T23:46:00.656348Z	  
2025-09-16T23:46:00.656454Z	      },
2025-09-16T23:46:00.656556Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-16T23:46:00.656684Z	    }
2025-09-16T23:46:00.656796Z	  
2025-09-16T23:46:00.656888Z	Query parameters: {
2025-09-16T23:46:00.657033Z	  limit: 8,
2025-09-16T23:46:00.657155Z	  offset: 0,
2025-09-16T23:46:00.657261Z	  category: undefined,
2025-09-16T23:46:00.65736Z	  brand: 'epcos',
2025-09-16T23:46:00.657471Z	  featured: undefined
2025-09-16T23:46:00.657562Z	}
2025-09-16T23:46:00.657655Z	Fetching solutions with query: 
2025-09-16T23:46:00.657771Z	    {
2025-09-16T23:46:00.657874Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.657979Z	        
2025-09-16T23:46:00.658087Z	    _id,
2025-09-16T23:46:00.65818Z	    title,
2025-09-16T23:46:00.658271Z	    "slug": slug.current,
2025-09-16T23:46:00.658387Z	    summary,
2025-09-16T23:46:00.658503Z	    description,
2025-09-16T23:46:00.658612Z	    coverImage,
2025-09-16T23:46:00.658734Z	    primaryBrand->{
2025-09-16T23:46:00.658839Z	      _id,
2025-09-16T23:46:00.65895Z	      name,
2025-09-16T23:46:00.659051Z	      "slug": slug.current,
2025-09-16T23:46:00.65914Z	      logo
2025-09-16T23:46:00.659251Z	    },
2025-09-16T23:46:00.659356Z	    relatedBrands[]->{
2025-09-16T23:46:00.659463Z	      _id,
2025-09-16T23:46:00.659555Z	      name,
2025-09-16T23:46:00.659647Z	      "slug": slug.current,
2025-09-16T23:46:00.659775Z	      logo
2025-09-16T23:46:00.659877Z	    },
2025-09-16T23:46:00.659969Z	    targetMarket,
2025-09-16T23:46:00.66007Z	    complexity,
2025-09-16T23:46:00.660171Z	    publishedAt,
2025-09-16T23:46:00.660268Z	    isPublished,
2025-09-16T23:46:00.660366Z	    isFeatured,
2025-09-16T23:46:00.660473Z	    viewCount,
2025-09-16T23:46:00.660573Z	    _createdAt,
2025-09-16T23:46:00.66069Z	    _updatedAt
2025-09-16T23:46:00.6608Z	  
2025-09-16T23:46:00.660926Z	      },
2025-09-16T23:46:00.661141Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-16T23:46:00.661255Z	    }
2025-09-16T23:46:00.661369Z	  
2025-09-16T23:46:00.661487Z	Query parameters: {
2025-09-16T23:46:00.66158Z	  limit: 4,
2025-09-16T23:46:00.661692Z	  offset: 0,
2025-09-16T23:46:00.661805Z	  targetMarket: undefined,
2025-09-16T23:46:00.661908Z	  brand: 'epcos',
2025-09-16T23:46:00.662015Z	  featured: undefined
2025-09-16T23:46:00.662131Z	}
2025-09-16T23:46:00.662233Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.662341Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.662455Z	✅ [getBrandData] Found brand: Epcos
2025-09-16T23:46:00.662566Z	✅ [getBrandData] Found brand: Epcos
2025-09-16T23:46:00.662684Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.662794Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.662912Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-16T23:46:00.663025Z	Fetching products with query: 
2025-09-16T23:46:00.663129Z	    {
2025-09-16T23:46:00.663222Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.663327Z	        
2025-09-16T23:46:00.663443Z	    _id,
2025-09-16T23:46:00.663559Z	    _type,
2025-09-16T23:46:00.663661Z	    partNumber,
2025-09-16T23:46:00.663785Z	    "slug": slug.current,
2025-09-16T23:46:00.663893Z	    title,
2025-09-16T23:46:00.663996Z	    shortDescription,
2025-09-16T23:46:00.6641Z	    image,
2025-09-16T23:46:00.664191Z	    brand->{
2025-09-16T23:46:00.664288Z	      name,
2025-09-16T23:46:00.664376Z	      "slug": slug.current,
2025-09-16T23:46:00.664485Z	      logo
2025-09-16T23:46:00.664582Z	    },
2025-09-16T23:46:00.664687Z	    category->{
2025-09-16T23:46:00.664792Z	      name,
2025-09-16T23:46:00.664892Z	      "slug": slug.current
2025-09-16T23:46:00.664997Z	    },
2025-09-16T23:46:00.665126Z	    pricing{
2025-09-16T23:46:00.665223Z	      currency,
2025-09-16T23:46:00.665319Z	      tiers[]{
2025-09-16T23:46:00.665443Z	        quantity,
2025-09-16T23:46:00.665549Z	        price,
2025-09-16T23:46:00.665651Z	        unit
2025-09-16T23:46:00.665767Z	      },
2025-09-16T23:46:00.66586Z	      moq,
2025-09-16T23:46:00.665965Z	      leadTime,
2025-09-16T23:46:00.666061Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.666165Z	      "price": tiers[0].price,
2025-09-16T23:46:00.666266Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.666368Z	    },
2025-09-16T23:46:00.666477Z	    inventory{
2025-09-16T23:46:00.666579Z	      quantity,
2025-09-16T23:46:00.666695Z	      status,
2025-09-16T23:46:00.666805Z	      warehouse,
2025-09-16T23:46:00.666908Z	      lastUpdated,
2025-09-16T23:46:00.667015Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.667164Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.667282Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.667394Z	    },
2025-09-16T23:46:00.667498Z	    isActive,
2025-09-16T23:46:00.667597Z	    isFeatured,
2025-09-16T23:46:00.66771Z	    isNew,
2025-09-16T23:46:00.6678Z	    _createdAt,
2025-09-16T23:46:00.667883Z	    _updatedAt
2025-09-16T23:46:00.667973Z	  
2025-09-16T23:46:00.668057Z	      },
2025-09-16T23:46:00.668148Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-16T23:46:00.668239Z	    }
2025-09-16T23:46:00.668329Z	  
2025-09-16T23:46:00.668428Z	Query parameters: {
2025-09-16T23:46:00.668525Z	  limit: 8,
2025-09-16T23:46:00.668621Z	  offset: 0,
2025-09-16T23:46:00.668749Z	  category: undefined,
2025-09-16T23:46:00.668838Z	  brand: 'epcos',
2025-09-16T23:46:00.668919Z	  featured: undefined
2025-09-16T23:46:00.669012Z	}
2025-09-16T23:46:00.669105Z	Fetching solutions with query: 
2025-09-16T23:46:00.669195Z	    {
2025-09-16T23:46:00.669281Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.669373Z	        
2025-09-16T23:46:00.669484Z	    _id,
2025-09-16T23:46:00.669585Z	    title,
2025-09-16T23:46:00.669697Z	    "slug": slug.current,
2025-09-16T23:46:00.669797Z	    summary,
2025-09-16T23:46:00.669886Z	    description,
2025-09-16T23:46:00.669975Z	    coverImage,
2025-09-16T23:46:00.670065Z	    primaryBrand->{
2025-09-16T23:46:00.670156Z	      _id,
2025-09-16T23:46:00.670249Z	      name,
2025-09-16T23:46:00.670339Z	      "slug": slug.current,
2025-09-16T23:46:00.670453Z	      logo
2025-09-16T23:46:00.670569Z	    },
2025-09-16T23:46:00.670663Z	    relatedBrands[]->{
2025-09-16T23:46:00.670788Z	      _id,
2025-09-16T23:46:00.670891Z	      name,
2025-09-16T23:46:00.67099Z	      "slug": slug.current,
2025-09-16T23:46:00.671096Z	      logo
2025-09-16T23:46:00.671191Z	    },
2025-09-16T23:46:00.671291Z	    targetMarket,
2025-09-16T23:46:00.671397Z	    complexity,
2025-09-16T23:46:00.671512Z	    publishedAt,
2025-09-16T23:46:00.671621Z	    isPublished,
2025-09-16T23:46:00.671747Z	    isFeatured,
2025-09-16T23:46:00.671852Z	    viewCount,
2025-09-16T23:46:00.67195Z	    _createdAt,
2025-09-16T23:46:00.672057Z	    _updatedAt
2025-09-16T23:46:00.672167Z	  
2025-09-16T23:46:00.672275Z	      },
2025-09-16T23:46:00.672372Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-16T23:46:00.672489Z	    }
2025-09-16T23:46:00.672582Z	  
2025-09-16T23:46:00.672715Z	Query parameters: {
2025-09-16T23:46:00.672823Z	  limit: 4,
2025-09-16T23:46:00.672927Z	  offset: 0,
2025-09-16T23:46:00.673048Z	  targetMarket: undefined,
2025-09-16T23:46:00.673151Z	  brand: 'epcos',
2025-09-16T23:46:00.673242Z	  featured: undefined
2025-09-16T23:46:00.673329Z	}
2025-09-16T23:46:00.673434Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:46:00.673536Z	Fetching products with query: 
2025-09-16T23:46:00.673628Z	    {
2025-09-16T23:46:00.673754Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.673856Z	        
2025-09-16T23:46:00.67396Z	    _id,
2025-09-16T23:46:00.67406Z	    _type,
2025-09-16T23:46:00.674159Z	    partNumber,
2025-09-16T23:46:00.67428Z	    "slug": slug.current,
2025-09-16T23:46:00.674399Z	    title,
2025-09-16T23:46:00.674495Z	    shortDescription,
2025-09-16T23:46:00.674584Z	    image,
2025-09-16T23:46:00.674686Z	    brand->{
2025-09-16T23:46:00.674785Z	      name,
2025-09-16T23:46:00.674879Z	      "slug": slug.current,
2025-09-16T23:46:00.674977Z	      logo
2025-09-16T23:46:00.675069Z	    },
2025-09-16T23:46:00.675168Z	    category->{
2025-09-16T23:46:00.675264Z	      name,
2025-09-16T23:46:00.675372Z	      "slug": slug.current
2025-09-16T23:46:00.675487Z	    },
2025-09-16T23:46:00.675585Z	    pricing{
2025-09-16T23:46:00.675695Z	      currency,
2025-09-16T23:46:00.675799Z	      tiers[]{
2025-09-16T23:46:00.675899Z	        quantity,
2025-09-16T23:46:00.675995Z	        price,
2025-09-16T23:46:00.676094Z	        unit
2025-09-16T23:46:00.67619Z	      },
2025-09-16T23:46:00.676282Z	      moq,
2025-09-16T23:46:00.676387Z	      leadTime,
2025-09-16T23:46:00.676487Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.676587Z	      "price": tiers[0].price,
2025-09-16T23:46:00.676701Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.676799Z	    },
2025-09-16T23:46:00.676891Z	    inventory{
2025-09-16T23:46:00.676982Z	      quantity,
2025-09-16T23:46:00.677075Z	      status,
2025-09-16T23:46:00.67718Z	      warehouse,
2025-09-16T23:46:00.677276Z	      lastUpdated,
2025-09-16T23:46:00.677389Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.677492Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.677598Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.677726Z	    },
2025-09-16T23:46:00.677831Z	    isActive,
2025-09-16T23:46:00.677942Z	    isFeatured,
2025-09-16T23:46:00.678042Z	    isNew,
2025-09-16T23:46:00.678145Z	    _createdAt,
2025-09-16T23:46:00.678246Z	    _updatedAt
2025-09-16T23:46:00.678352Z	  
2025-09-16T23:46:00.678464Z	      },
2025-09-16T23:46:00.67857Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:46:00.678669Z	    }
2025-09-16T23:46:00.678812Z	  
2025-09-16T23:46:00.678906Z	Query parameters: {
2025-09-16T23:46:00.678997Z	  limit: 8,
2025-09-16T23:46:00.679088Z	  offset: 0,
2025-09-16T23:46:00.679179Z	  category: undefined,
2025-09-16T23:46:00.679304Z	  brand: 'littelfuse',
2025-09-16T23:46:00.679416Z	  featured: undefined
2025-09-16T23:46:00.679516Z	}
2025-09-16T23:46:00.67962Z	Fetching solutions with query: 
2025-09-16T23:46:00.679747Z	    {
2025-09-16T23:46:00.679884Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.680006Z	        
2025-09-16T23:46:00.680118Z	    _id,
2025-09-16T23:46:00.680233Z	    title,
2025-09-16T23:46:00.680331Z	    "slug": slug.current,
2025-09-16T23:46:00.680442Z	    summary,
2025-09-16T23:46:00.680535Z	    description,
2025-09-16T23:46:00.680638Z	    coverImage,
2025-09-16T23:46:00.680759Z	    primaryBrand->{
2025-09-16T23:46:00.68085Z	      _id,
2025-09-16T23:46:00.680939Z	      name,
2025-09-16T23:46:00.681025Z	      "slug": slug.current,
2025-09-16T23:46:00.681117Z	      logo
2025-09-16T23:46:00.681203Z	    },
2025-09-16T23:46:00.681291Z	    relatedBrands[]->{
2025-09-16T23:46:00.681404Z	      _id,
2025-09-16T23:46:00.681514Z	      name,
2025-09-16T23:46:00.681638Z	      "slug": slug.current,
2025-09-16T23:46:00.681765Z	      logo
2025-09-16T23:46:00.681867Z	    },
2025-09-16T23:46:00.681957Z	    targetMarket,
2025-09-16T23:46:00.682065Z	    complexity,
2025-09-16T23:46:00.682177Z	    publishedAt,
2025-09-16T23:46:00.682278Z	    isPublished,
2025-09-16T23:46:00.682391Z	    isFeatured,
2025-09-16T23:46:00.682492Z	    viewCount,
2025-09-16T23:46:00.682599Z	    _createdAt,
2025-09-16T23:46:00.682754Z	    _updatedAt
2025-09-16T23:46:00.682879Z	  
2025-09-16T23:46:00.683Z	      },
2025-09-16T23:46:00.683108Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:46:00.683213Z	    }
2025-09-16T23:46:00.683313Z	  
2025-09-16T23:46:00.683433Z	Query parameters: {
2025-09-16T23:46:00.683542Z	  limit: 4,
2025-09-16T23:46:00.683633Z	  offset: 0,
2025-09-16T23:46:00.683754Z	  targetMarket: undefined,
2025-09-16T23:46:00.683845Z	  brand: 'littelfuse',
2025-09-16T23:46:00.68393Z	  featured: undefined
2025-09-16T23:46:00.684017Z	}
2025-09-16T23:46:00.684121Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:46:00.684231Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.68433Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.68444Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:46:00.684549Z	Fetching products with query: 
2025-09-16T23:46:00.684654Z	    {
2025-09-16T23:46:00.684774Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.684873Z	        
2025-09-16T23:46:00.684973Z	    _id,
2025-09-16T23:46:00.685079Z	    _type,
2025-09-16T23:46:00.68518Z	    partNumber,
2025-09-16T23:46:00.685277Z	    "slug": slug.current,
2025-09-16T23:46:00.685389Z	    title,
2025-09-16T23:46:00.685492Z	    shortDescription,
2025-09-16T23:46:00.685598Z	    image,
2025-09-16T23:46:00.68572Z	    brand->{
2025-09-16T23:46:00.685838Z	      name,
2025-09-16T23:46:00.685931Z	      "slug": slug.current,
2025-09-16T23:46:00.686037Z	      logo
2025-09-16T23:46:00.686137Z	    },
2025-09-16T23:46:00.686229Z	    category->{
2025-09-16T23:46:00.686327Z	      name,
2025-09-16T23:46:00.686442Z	      "slug": slug.current
2025-09-16T23:46:00.686539Z	    },
2025-09-16T23:46:00.68664Z	    pricing{
2025-09-16T23:46:00.68676Z	      currency,
2025-09-16T23:46:00.686865Z	      tiers[]{
2025-09-16T23:46:00.686966Z	        quantity,
2025-09-16T23:46:00.687056Z	        price,
2025-09-16T23:46:00.687144Z	        unit
2025-09-16T23:46:00.687255Z	      },
2025-09-16T23:46:00.687354Z	      moq,
2025-09-16T23:46:00.687479Z	      leadTime,
2025-09-16T23:46:00.687579Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.687685Z	      "price": tiers[0].price,
2025-09-16T23:46:00.687793Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.687892Z	    },
2025-09-16T23:46:00.687991Z	    inventory{
2025-09-16T23:46:00.688103Z	      quantity,
2025-09-16T23:46:00.688201Z	      status,
2025-09-16T23:46:00.688289Z	      warehouse,
2025-09-16T23:46:00.688397Z	      lastUpdated,
2025-09-16T23:46:00.688503Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.688594Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.688716Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.688824Z	    },
2025-09-16T23:46:00.688924Z	    isActive,
2025-09-16T23:46:00.689022Z	    isFeatured,
2025-09-16T23:46:00.689131Z	    isNew,
2025-09-16T23:46:00.689265Z	    _createdAt,
2025-09-16T23:46:00.689371Z	    _updatedAt
2025-09-16T23:46:00.689479Z	  
2025-09-16T23:46:00.68957Z	      },
2025-09-16T23:46:00.689666Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:46:00.689793Z	    }
2025-09-16T23:46:00.689909Z	  
2025-09-16T23:46:00.690006Z	Query parameters: {
2025-09-16T23:46:00.690104Z	  limit: 8,
2025-09-16T23:46:00.690211Z	  offset: 0,
2025-09-16T23:46:00.690319Z	  category: undefined,
2025-09-16T23:46:00.690429Z	  brand: 'littelfuse',
2025-09-16T23:46:00.690528Z	  featured: undefined
2025-09-16T23:46:00.690625Z	}
2025-09-16T23:46:00.69074Z	Fetching solutions with query: 
2025-09-16T23:46:00.690846Z	    {
2025-09-16T23:46:00.690944Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.691051Z	        
2025-09-16T23:46:00.691145Z	    _id,
2025-09-16T23:46:00.691262Z	    title,
2025-09-16T23:46:00.691359Z	    "slug": slug.current,
2025-09-16T23:46:00.691472Z	    summary,
2025-09-16T23:46:00.691585Z	    description,
2025-09-16T23:46:00.691711Z	    coverImage,
2025-09-16T23:46:00.691814Z	    primaryBrand->{
2025-09-16T23:46:00.691911Z	      _id,
2025-09-16T23:46:00.692006Z	      name,
2025-09-16T23:46:00.6921Z	      "slug": slug.current,
2025-09-16T23:46:00.692207Z	      logo
2025-09-16T23:46:00.692319Z	    },
2025-09-16T23:46:00.692432Z	    relatedBrands[]->{
2025-09-16T23:46:00.692543Z	      _id,
2025-09-16T23:46:00.692648Z	      name,
2025-09-16T23:46:00.692765Z	      "slug": slug.current,
2025-09-16T23:46:00.692868Z	      logo
2025-09-16T23:46:00.692963Z	    },
2025-09-16T23:46:00.69306Z	    targetMarket,
2025-09-16T23:46:00.69316Z	    complexity,
2025-09-16T23:46:00.693258Z	    publishedAt,
2025-09-16T23:46:00.693359Z	    isPublished,
2025-09-16T23:46:00.693466Z	    isFeatured,
2025-09-16T23:46:00.693574Z	    viewCount,
2025-09-16T23:46:00.693697Z	    _createdAt,
2025-09-16T23:46:00.693822Z	    _updatedAt
2025-09-16T23:46:00.693965Z	  
2025-09-16T23:46:00.694069Z	      },
2025-09-16T23:46:00.694164Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:46:00.694274Z	    }
2025-09-16T23:46:00.694364Z	  
2025-09-16T23:46:00.694468Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-16T23:46:00.694564Z	Fetching products with query: 
2025-09-16T23:46:00.694657Z	    {
2025-09-16T23:46:00.694783Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.694891Z	        
2025-09-16T23:46:00.694991Z	    _id,
2025-09-16T23:46:00.695088Z	    _type,
2025-09-16T23:46:00.695182Z	    partNumber,
2025-09-16T23:46:00.69528Z	    "slug": slug.current,
2025-09-16T23:46:00.695387Z	    title,
2025-09-16T23:46:00.695493Z	    shortDescription,
2025-09-16T23:46:00.695593Z	    image,
2025-09-16T23:46:00.695711Z	    brand->{
2025-09-16T23:46:00.695805Z	      name,
2025-09-16T23:46:00.695893Z	      "slug": slug.current,
2025-09-16T23:46:00.695981Z	      logo
2025-09-16T23:46:00.696068Z	    },
2025-09-16T23:46:00.696165Z	    category->{
2025-09-16T23:46:00.696259Z	      name,
2025-09-16T23:46:00.696354Z	      "slug": slug.current
2025-09-16T23:46:00.696466Z	    },
2025-09-16T23:46:00.696563Z	    pricing{
2025-09-16T23:46:00.696662Z	      currency,
2025-09-16T23:46:00.696778Z	      tiers[]{
2025-09-16T23:46:00.696873Z	        quantity,
2025-09-16T23:46:00.696966Z	        price,
2025-09-16T23:46:00.697068Z	        unit
2025-09-16T23:46:00.697161Z	      },
2025-09-16T23:46:00.697258Z	      moq,
2025-09-16T23:46:00.697358Z	      leadTime,
2025-09-16T23:46:00.697467Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.697584Z	      "price": tiers[0].price,
2025-09-16T23:46:00.697697Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.697808Z	    },
2025-09-16T23:46:00.697908Z	    inventory{
2025-09-16T23:46:00.698007Z	      quantity,
2025-09-16T23:46:00.698105Z	      status,
2025-09-16T23:46:00.698206Z	      warehouse,
2025-09-16T23:46:00.698303Z	      lastUpdated,
2025-09-16T23:46:00.698428Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.69853Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.698624Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.698744Z	    },
2025-09-16T23:46:00.698845Z	    isActive,
2025-09-16T23:46:00.698946Z	    isFeatured,
2025-09-16T23:46:00.699053Z	    isNew,
2025-09-16T23:46:00.699152Z	    _createdAt,
2025-09-16T23:46:00.699275Z	    _updatedAt
2025-09-16T23:46:00.699394Z	  
2025-09-16T23:46:00.699511Z	      },
2025-09-16T23:46:00.699606Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-16T23:46:00.699736Z	    }
2025-09-16T23:46:00.699826Z	  
2025-09-16T23:46:00.699917Z	Query parameters: {
2025-09-16T23:46:00.700004Z	  limit: 8,
2025-09-16T23:46:00.700094Z	  offset: 0,
2025-09-16T23:46:00.700204Z	  category: undefined,
2025-09-16T23:46:00.700315Z	  brand: 'mediatek',
2025-09-16T23:46:00.70042Z	  featured: undefined
2025-09-16T23:46:00.700557Z	}
2025-09-16T23:46:00.700683Z	Fetching solutions with query: 
2025-09-16T23:46:00.700823Z	    {
2025-09-16T23:46:00.700957Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.701083Z	        
2025-09-16T23:46:00.701189Z	    _id,
2025-09-16T23:46:00.701318Z	    title,
2025-09-16T23:46:00.701434Z	    "slug": slug.current,
2025-09-16T23:46:00.701558Z	    summary,
2025-09-16T23:46:00.701665Z	    description,
2025-09-16T23:46:00.701792Z	    coverImage,
2025-09-16T23:46:00.701906Z	    primaryBrand->{
2025-09-16T23:46:00.702006Z	      _id,
2025-09-16T23:46:00.702107Z	      name,
2025-09-16T23:46:00.702208Z	      "slug": slug.current,
2025-09-16T23:46:00.702301Z	      logo
2025-09-16T23:46:00.702409Z	    },
2025-09-16T23:46:00.702488Z	    relatedBrands[]->{
2025-09-16T23:46:00.702592Z	      _id,
2025-09-16T23:46:00.702698Z	      name,
2025-09-16T23:46:00.702779Z	      "slug": slug.current,
2025-09-16T23:46:00.702864Z	      logo
2025-09-16T23:46:00.702965Z	    },
2025-09-16T23:46:00.703085Z	    targetMarket,
2025-09-16T23:46:00.703215Z	    complexity,
2025-09-16T23:46:00.703318Z	    publishedAt,
2025-09-16T23:46:00.70343Z	    isPublished,
2025-09-16T23:46:00.703537Z	    isFeatured,
2025-09-16T23:46:00.703653Z	    viewCount,
2025-09-16T23:46:00.703779Z	    _createdAt,
2025-09-16T23:46:00.703905Z	    _updatedAt
2025-09-16T23:46:00.704024Z	  
2025-09-16T23:46:00.704137Z	      },
2025-09-16T23:46:00.704318Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-16T23:46:00.704496Z	    }
2025-09-16T23:46:00.704608Z	  
2025-09-16T23:46:00.704737Z	Query parameters: {
2025-09-16T23:46:00.70483Z	  limit: 4,
2025-09-16T23:46:00.704919Z	  offset: 0,
2025-09-16T23:46:00.705016Z	  targetMarket: undefined,
2025-09-16T23:46:00.705174Z	  brand: 'mediatek',
2025-09-16T23:46:00.705251Z	  featured: undefined
2025-09-16T23:46:00.705347Z	}
2025-09-16T23:46:00.705534Z	✅ [getBrandData] Found brand: LEM
2025-09-16T23:46:00.705714Z	Products fetch result: {
2025-09-16T23:46:00.705803Z	  totalProducts: 3,
2025-09-16T23:46:00.705904Z	  fetchedProducts: 3,
2025-09-16T23:46:00.706015Z	  firstProduct: {
2025-09-16T23:46:00.706179Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-16T23:46:00.706341Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-16T23:46:00.706472Z	    _type: 'product',
2025-09-16T23:46:00.706645Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-16T23:46:00.70677Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-16T23:46:00.706876Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-16T23:46:00.706984Z	    image: null,
2025-09-16T23:46:00.707096Z	    inventory: {
2025-09-16T23:46:00.707218Z	      inStock: true,
2025-09-16T23:46:00.707345Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-16T23:46:00.707475Z	      quantity: 0,
2025-09-16T23:46:00.707603Z	      status: 'in_stock',
2025-09-16T23:46:00.707745Z	      warehouse: null
2025-09-16T23:46:00.707865Z	    },
2025-09-16T23:46:00.707966Z	    isActive: true,
2025-09-16T23:46:00.708124Z	    isFeatured: false,
2025-09-16T23:46:00.708255Z	    isNew: false,
2025-09-16T23:46:00.708395Z	    partNumber: 'la55-p',
2025-09-16T23:46:00.708529Z	    pricing: {
2025-09-16T23:46:00.708682Z	      currency: 'CNY',
2025-09-16T23:46:00.708829Z	      leadTime: null,
2025-09-16T23:46:00.708959Z	      moq: null,
2025-09-16T23:46:00.709109Z	      price: null,
2025-09-16T23:46:00.709329Z	      tiers: null
2025-09-16T23:46:00.709475Z	    },
2025-09-16T23:46:00.709614Z	    shortDescription: '电流传感器la55-p',
2025-09-16T23:46:00.709976Z	    slug: 'la55-p',
2025-09-16T23:46:00.710134Z	    title: '电流传感器la55-p'
2025-09-16T23:46:00.71024Z	  }
2025-09-16T23:46:00.710423Z	}
2025-09-16T23:46:00.710569Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.71067Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-16T23:46:00.710784Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-16T23:46:00.710905Z	Fetching products with query: 
2025-09-16T23:46:00.711027Z	    {
2025-09-16T23:46:00.711167Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.711285Z	        
2025-09-16T23:46:00.711744Z	    _id,
2025-09-16T23:46:00.711995Z	    _type,
2025-09-16T23:46:00.712087Z	    partNumber,
2025-09-16T23:46:00.712365Z	    "slug": slug.current,
2025-09-16T23:46:00.712459Z	    title,
2025-09-16T23:46:00.712608Z	    shortDescription,
2025-09-16T23:46:00.712798Z	    image,
2025-09-16T23:46:00.713064Z	    brand->{
2025-09-16T23:46:00.713335Z	      name,
2025-09-16T23:46:00.713601Z	      "slug": slug.current,
2025-09-16T23:46:00.713769Z	      logo
2025-09-16T23:46:00.713884Z	    },
2025-09-16T23:46:00.714216Z	    category->{
2025-09-16T23:46:00.714295Z	      name,
2025-09-16T23:46:00.714452Z	      "slug": slug.current
2025-09-16T23:46:00.714566Z	    },
2025-09-16T23:46:00.714689Z	    pricing{
2025-09-16T23:46:00.714818Z	      currency,
2025-09-16T23:46:00.714944Z	      tiers[]{
2025-09-16T23:46:00.715296Z	        quantity,
2025-09-16T23:46:00.715439Z	        price,
2025-09-16T23:46:00.715712Z	        unit
2025-09-16T23:46:00.716007Z	      },
2025-09-16T23:46:00.716102Z	      moq,
2025-09-16T23:46:00.716346Z	      leadTime,
2025-09-16T23:46:00.716433Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.716557Z	      "price": tiers[0].price,
2025-09-16T23:46:00.716666Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.716855Z	    },
2025-09-16T23:46:00.716928Z	    inventory{
2025-09-16T23:46:00.716986Z	      quantity,
2025-09-16T23:46:00.717043Z	      status,
2025-09-16T23:46:00.7171Z	      warehouse,
2025-09-16T23:46:00.717157Z	      lastUpdated,
2025-09-16T23:46:00.717214Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.717275Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.71733Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.717384Z	    },
2025-09-16T23:46:00.717439Z	    isActive,
2025-09-16T23:46:00.717503Z	    isFeatured,
2025-09-16T23:46:00.717558Z	    isNew,
2025-09-16T23:46:00.717612Z	    _createdAt,
2025-09-16T23:46:00.717686Z	    _updatedAt
2025-09-16T23:46:00.71776Z	  
2025-09-16T23:46:00.717816Z	      },
2025-09-16T23:46:00.717873Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-16T23:46:00.717948Z	    }
2025-09-16T23:46:00.718011Z	  
2025-09-16T23:46:00.718069Z	Query parameters: {
2025-09-16T23:46:00.718125Z	  limit: 8,
2025-09-16T23:46:00.718179Z	  offset: 0,
2025-09-16T23:46:00.718257Z	  category: undefined,
2025-09-16T23:46:00.718323Z	  brand: 'mediatek',
2025-09-16T23:46:00.718385Z	  featured: undefined
2025-09-16T23:46:00.718448Z	}
2025-09-16T23:46:00.718505Z	Fetching solutions with query: 
2025-09-16T23:46:00.718562Z	    {
2025-09-16T23:46:00.718619Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.718687Z	        
2025-09-16T23:46:00.718763Z	    _id,
2025-09-16T23:46:00.718876Z	    title,
2025-09-16T23:46:00.718956Z	    "slug": slug.current,
2025-09-16T23:46:00.719015Z	    summary,
2025-09-16T23:46:00.719072Z	    description,
2025-09-16T23:46:00.719129Z	    coverImage,
2025-09-16T23:46:00.71961Z	    primaryBrand->{
2025-09-16T23:46:00.719807Z	      _id,
2025-09-16T23:46:00.719996Z	      name,
2025-09-16T23:46:00.720166Z	      "slug": slug.current,
2025-09-16T23:46:00.720263Z	      logo
2025-09-16T23:46:00.720405Z	    },
2025-09-16T23:46:00.720558Z	    relatedBrands[]->{
2025-09-16T23:46:00.720745Z	      _id,
2025-09-16T23:46:00.720863Z	      name,
2025-09-16T23:46:00.721015Z	      "slug": slug.current,
2025-09-16T23:46:00.721137Z	      logo
2025-09-16T23:46:00.721238Z	    },
2025-09-16T23:46:00.721408Z	    targetMarket,
2025-09-16T23:46:00.721613Z	    complexity,
2025-09-16T23:46:00.721768Z	    publishedAt,
2025-09-16T23:46:00.721912Z	    isPublished,
2025-09-16T23:46:00.72199Z	    isFeatured,
2025-09-16T23:46:00.722119Z	    viewCount,
2025-09-16T23:46:00.722258Z	    _createdAt,
2025-09-16T23:46:00.722399Z	    _updatedAt
2025-09-16T23:46:00.72254Z	  
2025-09-16T23:46:00.722726Z	      },
2025-09-16T23:46:00.722913Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-16T23:46:00.723197Z	    }
2025-09-16T23:46:00.723367Z	  
2025-09-16T23:46:00.723526Z	Query parameters: {
2025-09-16T23:46:00.723713Z	  limit: 4,
2025-09-16T23:46:00.723873Z	  offset: 0,
2025-09-16T23:46:00.723957Z	  targetMarket: undefined,
2025-09-16T23:46:00.724086Z	  brand: 'mediatek',
2025-09-16T23:46:00.724369Z	  featured: undefined
2025-09-16T23:46:00.724639Z	}
2025-09-16T23:46:00.724766Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-16T23:46:00.725158Z	Fetching products with query: 
2025-09-16T23:46:00.725244Z	    {
2025-09-16T23:46:00.725488Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.725764Z	        
2025-09-16T23:46:00.726029Z	    _id,
2025-09-16T23:46:00.726286Z	    _type,
2025-09-16T23:46:00.726376Z	    partNumber,
2025-09-16T23:46:00.726641Z	    "slug": slug.current,
2025-09-16T23:46:00.726813Z	    title,
2025-09-16T23:46:00.727184Z	    shortDescription,
2025-09-16T23:46:00.727268Z	    image,
2025-09-16T23:46:00.727394Z	    brand->{
2025-09-16T23:46:00.727742Z	      name,
2025-09-16T23:46:00.727911Z	      "slug": slug.current,
2025-09-16T23:46:00.728029Z	      logo
2025-09-16T23:46:00.728159Z	    },
2025-09-16T23:46:00.728324Z	    category->{
2025-09-16T23:46:00.728425Z	      name,
2025-09-16T23:46:00.728561Z	      "slug": slug.current
2025-09-16T23:46:00.728693Z	    },
2025-09-16T23:46:00.728801Z	    pricing{
2025-09-16T23:46:00.728906Z	      currency,
2025-09-16T23:46:00.728999Z	      tiers[]{
2025-09-16T23:46:00.729101Z	        quantity,
2025-09-16T23:46:00.729201Z	        price,
2025-09-16T23:46:00.72932Z	        unit
2025-09-16T23:46:00.729415Z	      },
2025-09-16T23:46:00.729601Z	      moq,
2025-09-16T23:46:00.729774Z	      leadTime,
2025-09-16T23:46:00.729857Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.729954Z	      "price": tiers[0].price,
2025-09-16T23:46:00.730078Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.730207Z	    },
2025-09-16T23:46:00.730405Z	    inventory{
2025-09-16T23:46:00.730548Z	      quantity,
2025-09-16T23:46:00.730692Z	      status,
2025-09-16T23:46:00.730819Z	      warehouse,
2025-09-16T23:46:00.730928Z	      lastUpdated,
2025-09-16T23:46:00.731026Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.731124Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.731216Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.731321Z	    },
2025-09-16T23:46:00.731422Z	    isActive,
2025-09-16T23:46:00.73153Z	    isFeatured,
2025-09-16T23:46:00.731627Z	    isNew,
2025-09-16T23:46:00.731747Z	    _createdAt,
2025-09-16T23:46:00.731849Z	    _updatedAt
2025-09-16T23:46:00.731947Z	  
2025-09-16T23:46:00.732043Z	      },
2025-09-16T23:46:00.732154Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-16T23:46:00.732271Z	    }
2025-09-16T23:46:00.732368Z	  
2025-09-16T23:46:00.732484Z	Query parameters: {
2025-09-16T23:46:00.732586Z	  limit: 8,
2025-09-16T23:46:00.732699Z	  offset: 0,
2025-09-16T23:46:00.732806Z	  category: undefined,
2025-09-16T23:46:00.732907Z	  brand: 'mediatek',
2025-09-16T23:46:00.733009Z	  featured: undefined
2025-09-16T23:46:00.733113Z	}
2025-09-16T23:46:00.733223Z	Fetching solutions with query: 
2025-09-16T23:46:00.733329Z	    {
2025-09-16T23:46:00.733434Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.733642Z	        
2025-09-16T23:46:00.733807Z	    _id,
2025-09-16T23:46:00.733913Z	    title,
2025-09-16T23:46:00.734004Z	    "slug": slug.current,
2025-09-16T23:46:00.734107Z	    summary,
2025-09-16T23:46:00.734208Z	    description,
2025-09-16T23:46:00.734306Z	    coverImage,
2025-09-16T23:46:00.734402Z	    primaryBrand->{
2025-09-16T23:46:00.734511Z	      _id,
2025-09-16T23:46:00.734614Z	      name,
2025-09-16T23:46:00.734734Z	      "slug": slug.current,
2025-09-16T23:46:00.73484Z	      logo
2025-09-16T23:46:00.734946Z	    },
2025-09-16T23:46:00.735045Z	    relatedBrands[]->{
2025-09-16T23:46:00.735151Z	      _id,
2025-09-16T23:46:00.735248Z	      name,
2025-09-16T23:46:00.735347Z	      "slug": slug.current,
2025-09-16T23:46:00.735478Z	      logo
2025-09-16T23:46:00.735584Z	    },
2025-09-16T23:46:00.735688Z	    targetMarket,
2025-09-16T23:46:00.735809Z	    complexity,
2025-09-16T23:46:00.735904Z	    publishedAt,
2025-09-16T23:46:00.735995Z	    isPublished,
2025-09-16T23:46:00.736086Z	    isFeatured,
2025-09-16T23:46:00.736183Z	    viewCount,
2025-09-16T23:46:00.736281Z	    _createdAt,
2025-09-16T23:46:00.736378Z	    _updatedAt
2025-09-16T23:46:00.736491Z	  
2025-09-16T23:46:00.736591Z	      },
2025-09-16T23:46:00.736713Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-16T23:46:00.736823Z	    }
2025-09-16T23:46:00.736931Z	  
2025-09-16T23:46:00.737038Z	Query parameters: {
2025-09-16T23:46:00.737155Z	  limit: 4,
2025-09-16T23:46:00.737263Z	  offset: 0,
2025-09-16T23:46:00.737361Z	  targetMarket: undefined,
2025-09-16T23:46:00.737476Z	  brand: 'mediatek',
2025-09-16T23:46:00.737577Z	  featured: undefined
2025-09-16T23:46:00.737695Z	}
2025-09-16T23:46:00.737814Z	✅ [getBrandData] Found brand: MediaTek
2025-09-16T23:46:00.737919Z	✅ [getBrandData] Found brand: MediaTek
2025-09-16T23:46:00.738018Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.73813Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.738273Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.738465Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.738611Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-16T23:46:00.738825Z	Fetching products with query: 
2025-09-16T23:46:00.738966Z	    {
2025-09-16T23:46:00.739084Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.739202Z	        
2025-09-16T23:46:00.739327Z	    _id,
2025-09-16T23:46:00.739435Z	    _type,
2025-09-16T23:46:00.739544Z	    partNumber,
2025-09-16T23:46:00.739647Z	    "slug": slug.current,
2025-09-16T23:46:00.739797Z	    title,
2025-09-16T23:46:00.739905Z	    shortDescription,
2025-09-16T23:46:00.740018Z	    image,
2025-09-16T23:46:00.740122Z	    brand->{
2025-09-16T23:46:00.740227Z	      name,
2025-09-16T23:46:00.740318Z	      "slug": slug.current,
2025-09-16T23:46:00.740429Z	      logo
2025-09-16T23:46:00.740537Z	    },
2025-09-16T23:46:00.740648Z	    category->{
2025-09-16T23:46:00.740768Z	      name,
2025-09-16T23:46:00.740875Z	      "slug": slug.current
2025-09-16T23:46:00.740975Z	    },
2025-09-16T23:46:00.741146Z	    pricing{
2025-09-16T23:46:00.741267Z	      currency,
2025-09-16T23:46:00.741374Z	      tiers[]{
2025-09-16T23:46:00.74149Z	        quantity,
2025-09-16T23:46:00.741594Z	        price,
2025-09-16T23:46:00.741714Z	        unit
2025-09-16T23:46:00.741821Z	      },
2025-09-16T23:46:00.741924Z	      moq,
2025-09-16T23:46:00.742011Z	      leadTime,
2025-09-16T23:46:00.742098Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.742199Z	      "price": tiers[0].price,
2025-09-16T23:46:00.742301Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.742413Z	    },
2025-09-16T23:46:00.742513Z	    inventory{
2025-09-16T23:46:00.742611Z	      quantity,
2025-09-16T23:46:00.742732Z	      status,
2025-09-16T23:46:00.742838Z	      warehouse,
2025-09-16T23:46:00.742942Z	      lastUpdated,
2025-09-16T23:46:00.743064Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.743162Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.743263Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.743359Z	    },
2025-09-16T23:46:00.743469Z	    isActive,
2025-09-16T23:46:00.74358Z	    isFeatured,
2025-09-16T23:46:00.743698Z	    isNew,
2025-09-16T23:46:00.743806Z	    _createdAt,
2025-09-16T23:46:00.743907Z	    _updatedAt
2025-09-16T23:46:00.744003Z	  
2025-09-16T23:46:00.744094Z	      },
2025-09-16T23:46:00.744193Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-16T23:46:00.744313Z	    }
2025-09-16T23:46:00.744423Z	  
2025-09-16T23:46:00.744529Z	Query parameters: {
2025-09-16T23:46:00.744634Z	  limit: 8,
2025-09-16T23:46:00.744759Z	  offset: 0,
2025-09-16T23:46:00.744868Z	  category: undefined,
2025-09-16T23:46:00.744977Z	  brand: 'ncc',
2025-09-16T23:46:00.745083Z	  featured: undefined
2025-09-16T23:46:00.745181Z	}
2025-09-16T23:46:00.745277Z	Fetching solutions with query: 
2025-09-16T23:46:00.745364Z	    {
2025-09-16T23:46:00.745486Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.745586Z	        
2025-09-16T23:46:00.745718Z	    _id,
2025-09-16T23:46:00.745819Z	    title,
2025-09-16T23:46:00.74593Z	    "slug": slug.current,
2025-09-16T23:46:00.74604Z	    summary,
2025-09-16T23:46:00.74614Z	    description,
2025-09-16T23:46:00.746237Z	    coverImage,
2025-09-16T23:46:00.746329Z	    primaryBrand->{
2025-09-16T23:46:00.746439Z	      _id,
2025-09-16T23:46:00.746541Z	      name,
2025-09-16T23:46:00.746641Z	      "slug": slug.current,
2025-09-16T23:46:00.746763Z	      logo
2025-09-16T23:46:00.74687Z	    },
2025-09-16T23:46:00.746973Z	    relatedBrands[]->{
2025-09-16T23:46:00.747067Z	      _id,
2025-09-16T23:46:00.747163Z	      name,
2025-09-16T23:46:00.747253Z	      "slug": slug.current,
2025-09-16T23:46:00.747352Z	      logo
2025-09-16T23:46:00.747462Z	    },
2025-09-16T23:46:00.747583Z	    targetMarket,
2025-09-16T23:46:00.747701Z	    complexity,
2025-09-16T23:46:00.74782Z	    publishedAt,
2025-09-16T23:46:00.74792Z	    isPublished,
2025-09-16T23:46:00.748021Z	    isFeatured,
2025-09-16T23:46:00.748126Z	    viewCount,
2025-09-16T23:46:00.748217Z	    _createdAt,
2025-09-16T23:46:00.748315Z	    _updatedAt
2025-09-16T23:46:00.748431Z	  
2025-09-16T23:46:00.748529Z	      },
2025-09-16T23:46:00.748624Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-16T23:46:00.74875Z	    }
2025-09-16T23:46:00.748853Z	  
2025-09-16T23:46:00.74895Z	Query parameters: {
2025-09-16T23:46:00.749053Z	  limit: 4,
2025-09-16T23:46:00.749163Z	  offset: 0,
2025-09-16T23:46:00.749267Z	  targetMarket: undefined,
2025-09-16T23:46:00.749364Z	  brand: 'ncc',
2025-09-16T23:46:00.749474Z	  featured: undefined
2025-09-16T23:46:00.749582Z	}
2025-09-16T23:46:00.749705Z	✅ [getBrandData] Found brand: ncc
2025-09-16T23:46:00.749819Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.74994Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.750043Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-16T23:46:00.750149Z	Fetching products with query: 
2025-09-16T23:46:00.750254Z	    {
2025-09-16T23:46:00.750351Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.750471Z	        
2025-09-16T23:46:00.75058Z	    _id,
2025-09-16T23:46:00.750688Z	    _type,
2025-09-16T23:46:00.750805Z	    partNumber,
2025-09-16T23:46:00.750905Z	    "slug": slug.current,
2025-09-16T23:46:00.751004Z	    title,
2025-09-16T23:46:00.751107Z	    shortDescription,
2025-09-16T23:46:00.751208Z	    image,
2025-09-16T23:46:00.751303Z	    brand->{
2025-09-16T23:46:00.751401Z	      name,
2025-09-16T23:46:00.751497Z	      "slug": slug.current,
2025-09-16T23:46:00.751611Z	      logo
2025-09-16T23:46:00.751733Z	    },
2025-09-16T23:46:00.751843Z	    category->{
2025-09-16T23:46:00.75195Z	      name,
2025-09-16T23:46:00.752047Z	      "slug": slug.current
2025-09-16T23:46:00.752141Z	    },
2025-09-16T23:46:00.752237Z	    pricing{
2025-09-16T23:46:00.752331Z	      currency,
2025-09-16T23:46:00.752446Z	      tiers[]{
2025-09-16T23:46:00.752552Z	        quantity,
2025-09-16T23:46:00.752649Z	        price,
2025-09-16T23:46:00.752764Z	        unit
2025-09-16T23:46:00.752868Z	      },
2025-09-16T23:46:00.752962Z	      moq,
2025-09-16T23:46:00.753065Z	      leadTime,
2025-09-16T23:46:00.753178Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.753285Z	      "price": tiers[0].price,
2025-09-16T23:46:00.753394Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.753504Z	    },
2025-09-16T23:46:00.753603Z	    inventory{
2025-09-16T23:46:00.753724Z	      quantity,
2025-09-16T23:46:00.753887Z	      status,
2025-09-16T23:46:00.753998Z	      warehouse,
2025-09-16T23:46:00.754102Z	      lastUpdated,
2025-09-16T23:46:00.754216Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.754334Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.75445Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.754551Z	    },
2025-09-16T23:46:00.75465Z	    isActive,
2025-09-16T23:46:00.754782Z	    isFeatured,
2025-09-16T23:46:00.754893Z	    isNew,
2025-09-16T23:46:00.754992Z	    _createdAt,
2025-09-16T23:46:00.755086Z	    _updatedAt
2025-09-16T23:46:00.755172Z	  
2025-09-16T23:46:00.755257Z	      },
2025-09-16T23:46:00.755345Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-16T23:46:00.75546Z	    }
2025-09-16T23:46:00.75557Z	  
2025-09-16T23:46:00.755696Z	Query parameters: {
2025-09-16T23:46:00.755809Z	  limit: 8,
2025-09-16T23:46:00.755908Z	  offset: 0,
2025-09-16T23:46:00.756014Z	  category: undefined,
2025-09-16T23:46:00.756118Z	  brand: 'ncc',
2025-09-16T23:46:00.756223Z	  featured: undefined
2025-09-16T23:46:00.756328Z	}
2025-09-16T23:46:00.756461Z	Fetching solutions with query: 
2025-09-16T23:46:00.756566Z	    {
2025-09-16T23:46:00.756701Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.756811Z	        
2025-09-16T23:46:00.756904Z	    _id,
2025-09-16T23:46:00.757002Z	    title,
2025-09-16T23:46:00.757089Z	    "slug": slug.current,
2025-09-16T23:46:00.757183Z	    summary,
2025-09-16T23:46:00.757276Z	    description,
2025-09-16T23:46:00.757396Z	    coverImage,
2025-09-16T23:46:00.757519Z	    primaryBrand->{
2025-09-16T23:46:00.757627Z	      _id,
2025-09-16T23:46:00.757746Z	      name,
2025-09-16T23:46:00.757843Z	      "slug": slug.current,
2025-09-16T23:46:00.757937Z	      logo
2025-09-16T23:46:00.758043Z	    },
2025-09-16T23:46:00.758144Z	    relatedBrands[]->{
2025-09-16T23:46:00.758242Z	      _id,
2025-09-16T23:46:00.758346Z	      name,
2025-09-16T23:46:00.758465Z	      "slug": slug.current,
2025-09-16T23:46:00.758563Z	      logo
2025-09-16T23:46:00.75865Z	    },
2025-09-16T23:46:00.758771Z	    targetMarket,
2025-09-16T23:46:00.758882Z	    complexity,
2025-09-16T23:46:00.758988Z	    publishedAt,
2025-09-16T23:46:00.759086Z	    isPublished,
2025-09-16T23:46:00.759191Z	    isFeatured,
2025-09-16T23:46:00.759311Z	    viewCount,
2025-09-16T23:46:00.759425Z	    _createdAt,
2025-09-16T23:46:00.759529Z	    _updatedAt
2025-09-16T23:46:00.759641Z	  
2025-09-16T23:46:00.759757Z	      },
2025-09-16T23:46:00.759858Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-16T23:46:00.75997Z	    }
2025-09-16T23:46:00.760068Z	  
2025-09-16T23:46:00.760163Z	Query parameters: {
2025-09-16T23:46:00.76027Z	  limit: 4,
2025-09-16T23:46:00.760383Z	  offset: 0,
2025-09-16T23:46:00.760486Z	  targetMarket: undefined,
2025-09-16T23:46:00.760592Z	  brand: 'ncc',
2025-09-16T23:46:00.760712Z	  featured: undefined
2025-09-16T23:46:00.760826Z	}
2025-09-16T23:46:00.760928Z	✅ [getBrandData] Found brand: ncc
2025-09-16T23:46:00.761044Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.761157Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.761265Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-16T23:46:00.761385Z	Fetching products with query: 
2025-09-16T23:46:00.761488Z	    {
2025-09-16T23:46:00.761588Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.761711Z	        
2025-09-16T23:46:00.761823Z	    _id,
2025-09-16T23:46:00.761933Z	    _type,
2025-09-16T23:46:00.762035Z	    partNumber,
2025-09-16T23:46:00.762145Z	    "slug": slug.current,
2025-09-16T23:46:00.762238Z	    title,
2025-09-16T23:46:00.762337Z	    shortDescription,
2025-09-16T23:46:00.762437Z	    image,
2025-09-16T23:46:00.762525Z	    brand->{
2025-09-16T23:46:00.762622Z	      name,
2025-09-16T23:46:00.762738Z	      "slug": slug.current,
2025-09-16T23:46:00.762839Z	      logo
2025-09-16T23:46:00.762949Z	    },
2025-09-16T23:46:00.763049Z	    category->{
2025-09-16T23:46:00.763144Z	      name,
2025-09-16T23:46:00.763242Z	      "slug": slug.current
2025-09-16T23:46:00.763352Z	    },
2025-09-16T23:46:00.763456Z	    pricing{
2025-09-16T23:46:00.763576Z	      currency,
2025-09-16T23:46:00.763691Z	      tiers[]{
2025-09-16T23:46:00.763797Z	        quantity,
2025-09-16T23:46:00.763895Z	        price,
2025-09-16T23:46:00.763986Z	        unit
2025-09-16T23:46:00.764075Z	      },
2025-09-16T23:46:00.76417Z	      moq,
2025-09-16T23:46:00.764262Z	      leadTime,
2025-09-16T23:46:00.764366Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.76448Z	      "price": tiers[0].price,
2025-09-16T23:46:00.764587Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.7647Z	    },
2025-09-16T23:46:00.764805Z	    inventory{
2025-09-16T23:46:00.764907Z	      quantity,
2025-09-16T23:46:00.765008Z	      status,
2025-09-16T23:46:00.765106Z	      warehouse,
2025-09-16T23:46:00.765208Z	      lastUpdated,
2025-09-16T23:46:00.765314Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.765431Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.765531Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.765627Z	    },
2025-09-16T23:46:00.765747Z	    isActive,
2025-09-16T23:46:00.765853Z	    isFeatured,
2025-09-16T23:46:00.76595Z	    isNew,
2025-09-16T23:46:00.766048Z	    _createdAt,
2025-09-16T23:46:00.766145Z	    _updatedAt
2025-09-16T23:46:00.76624Z	  
2025-09-16T23:46:00.766335Z	      },
2025-09-16T23:46:00.766448Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-16T23:46:00.766559Z	    }
2025-09-16T23:46:00.766656Z	  
2025-09-16T23:46:00.76677Z	Query parameters: {
2025-09-16T23:46:00.766875Z	  limit: 8,
2025-09-16T23:46:00.766966Z	  offset: 0,
2025-09-16T23:46:00.767061Z	  category: undefined,
2025-09-16T23:46:00.767161Z	  brand: 'epcos',
2025-09-16T23:46:00.767261Z	  featured: undefined
2025-09-16T23:46:00.767353Z	}
2025-09-16T23:46:00.767465Z	Fetching solutions with query: 
2025-09-16T23:46:00.767571Z	    {
2025-09-16T23:46:00.76771Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.76782Z	        
2025-09-16T23:46:00.767923Z	    _id,
2025-09-16T23:46:00.768025Z	    title,
2025-09-16T23:46:00.768122Z	    "slug": slug.current,
2025-09-16T23:46:00.768222Z	    summary,
2025-09-16T23:46:00.768328Z	    description,
2025-09-16T23:46:00.768435Z	    coverImage,
2025-09-16T23:46:00.768532Z	    primaryBrand->{
2025-09-16T23:46:00.768625Z	      _id,
2025-09-16T23:46:00.76874Z	      name,
2025-09-16T23:46:00.768849Z	      "slug": slug.current,
2025-09-16T23:46:00.76897Z	      logo
2025-09-16T23:46:00.769085Z	    },
2025-09-16T23:46:00.769205Z	    relatedBrands[]->{
2025-09-16T23:46:00.76932Z	      _id,
2025-09-16T23:46:00.769505Z	      name,
2025-09-16T23:46:00.769706Z	      "slug": slug.current,
2025-09-16T23:46:00.76981Z	      logo
2025-09-16T23:46:00.770001Z	    },
2025-09-16T23:46:00.77019Z	    targetMarket,
2025-09-16T23:46:00.770328Z	    complexity,
2025-09-16T23:46:00.770449Z	    publishedAt,
2025-09-16T23:46:00.77057Z	    isPublished,
2025-09-16T23:46:00.770667Z	    isFeatured,
2025-09-16T23:46:00.770794Z	    viewCount,
2025-09-16T23:46:00.770883Z	    _createdAt,
2025-09-16T23:46:00.770974Z	    _updatedAt
2025-09-16T23:46:00.771065Z	  
2025-09-16T23:46:00.771239Z	      },
2025-09-16T23:46:00.771348Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-16T23:46:00.77146Z	    }
2025-09-16T23:46:00.771568Z	  
2025-09-16T23:46:00.771688Z	Query parameters: {
2025-09-16T23:46:00.771879Z	  limit: 4,
2025-09-16T23:46:00.771991Z	  offset: 0,
2025-09-16T23:46:00.772099Z	  targetMarket: undefined,
2025-09-16T23:46:00.772209Z	  brand: 'epcos',
2025-09-16T23:46:00.772312Z	  featured: undefined
2025-09-16T23:46:00.772426Z	}
2025-09-16T23:46:00.772525Z	✅ [getBrandData] Found brand: Epcos
2025-09-16T23:46:00.772621Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.77274Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.77285Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-16T23:46:00.772955Z	Fetching products with query: 
2025-09-16T23:46:00.773056Z	    {
2025-09-16T23:46:00.773169Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.773281Z	        
2025-09-16T23:46:00.773392Z	    _id,
2025-09-16T23:46:00.773523Z	    _type,
2025-09-16T23:46:00.773772Z	    partNumber,
2025-09-16T23:46:00.773939Z	    "slug": slug.current,
2025-09-16T23:46:00.776864Z	    title,
2025-09-16T23:46:00.777042Z	    shortDescription,
2025-09-16T23:46:00.77717Z	    image,
2025-09-16T23:46:00.777284Z	    brand->{
2025-09-16T23:46:00.7774Z	      name,
2025-09-16T23:46:00.777552Z	      "slug": slug.current,
2025-09-16T23:46:00.777662Z	      logo
2025-09-16T23:46:00.777799Z	    },
2025-09-16T23:46:00.777914Z	    category->{
2025-09-16T23:46:00.778029Z	      name,
2025-09-16T23:46:00.778144Z	      "slug": slug.current
2025-09-16T23:46:00.778257Z	    },
2025-09-16T23:46:00.778372Z	    pricing{
2025-09-16T23:46:00.778497Z	      currency,
2025-09-16T23:46:00.778605Z	      tiers[]{
2025-09-16T23:46:00.778745Z	        quantity,
2025-09-16T23:46:00.778865Z	        price,
2025-09-16T23:46:00.779013Z	        unit
2025-09-16T23:46:00.779116Z	      },
2025-09-16T23:46:00.779215Z	      moq,
2025-09-16T23:46:00.779344Z	      leadTime,
2025-09-16T23:46:00.779456Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.779573Z	      "price": tiers[0].price,
2025-09-16T23:46:00.779697Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.779815Z	    },
2025-09-16T23:46:00.779929Z	    inventory{
2025-09-16T23:46:00.780043Z	      quantity,
2025-09-16T23:46:00.780164Z	      status,
2025-09-16T23:46:00.780272Z	      warehouse,
2025-09-16T23:46:00.780384Z	      lastUpdated,
2025-09-16T23:46:00.780507Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.780621Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.780759Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.78088Z	    },
2025-09-16T23:46:00.781001Z	    isActive,
2025-09-16T23:46:00.781117Z	    isFeatured,
2025-09-16T23:46:00.781232Z	    isNew,
2025-09-16T23:46:00.781338Z	    _createdAt,
2025-09-16T23:46:00.781457Z	    _updatedAt
2025-09-16T23:46:00.781567Z	  
2025-09-16T23:46:00.781701Z	      },
2025-09-16T23:46:00.781826Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-16T23:46:00.781945Z	    }
2025-09-16T23:46:00.782057Z	  
2025-09-16T23:46:00.78217Z	Query parameters: {
2025-09-16T23:46:00.782273Z	  limit: 8,
2025-09-16T23:46:00.782383Z	  offset: 0,
2025-09-16T23:46:00.78251Z	  category: undefined,
2025-09-16T23:46:00.782619Z	  brand: 'epcos',
2025-09-16T23:46:00.793155Z	  featured: undefined
2025-09-16T23:46:00.793478Z	}
2025-09-16T23:46:00.793799Z	Fetching solutions with query: 
2025-09-16T23:46:00.793934Z	    {
2025-09-16T23:46:00.79492Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.795063Z	        
2025-09-16T23:46:00.795165Z	    _id,
2025-09-16T23:46:00.79526Z	    title,
2025-09-16T23:46:00.795361Z	    "slug": slug.current,
2025-09-16T23:46:00.795483Z	    summary,
2025-09-16T23:46:00.795591Z	    description,
2025-09-16T23:46:00.795852Z	    coverImage,
2025-09-16T23:46:00.795997Z	    primaryBrand->{
2025-09-16T23:46:00.796214Z	      _id,
2025-09-16T23:46:00.79665Z	      name,
2025-09-16T23:46:00.796935Z	      "slug": slug.current,
2025-09-16T23:46:00.797171Z	      logo
2025-09-16T23:46:00.797525Z	    },
2025-09-16T23:46:00.797867Z	    relatedBrands[]->{
2025-09-16T23:46:00.801889Z	      _id,
2025-09-16T23:46:00.80211Z	      name,
2025-09-16T23:46:00.802284Z	      "slug": slug.current,
2025-09-16T23:46:00.802429Z	      logo
2025-09-16T23:46:00.802558Z	    },
2025-09-16T23:46:00.802685Z	    targetMarket,
2025-09-16T23:46:00.802828Z	    complexity,
2025-09-16T23:46:00.803103Z	    publishedAt,
2025-09-16T23:46:00.803277Z	    isPublished,
2025-09-16T23:46:00.803399Z	    isFeatured,
2025-09-16T23:46:00.803498Z	    viewCount,
2025-09-16T23:46:00.803627Z	    _createdAt,
2025-09-16T23:46:00.803772Z	    _updatedAt
2025-09-16T23:46:00.803843Z	  
2025-09-16T23:46:00.803902Z	      },
2025-09-16T23:46:00.80409Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-16T23:46:00.804158Z	    }
2025-09-16T23:46:00.804293Z	  
2025-09-16T23:46:00.805225Z	Query parameters: {
2025-09-16T23:46:00.805439Z	  limit: 4,
2025-09-16T23:46:00.805595Z	  offset: 0,
2025-09-16T23:46:00.806253Z	  targetMarket: undefined,
2025-09-16T23:46:00.806411Z	  brand: 'epcos',
2025-09-16T23:46:00.806537Z	  featured: undefined
2025-09-16T23:46:00.806652Z	}
2025-09-16T23:46:00.806964Z	✅ [getBrandData] Found brand: Epcos
2025-09-16T23:46:00.807098Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.807469Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.807597Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-16T23:46:00.807725Z	Fetching products with query: 
2025-09-16T23:46:00.807831Z	    {
2025-09-16T23:46:00.807938Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.80803Z	        
2025-09-16T23:46:00.808163Z	    _id,
2025-09-16T23:46:00.808395Z	    _type,
2025-09-16T23:46:00.808794Z	    partNumber,
2025-09-16T23:46:00.809126Z	    "slug": slug.current,
2025-09-16T23:46:00.809287Z	    title,
2025-09-16T23:46:00.809511Z	    shortDescription,
2025-09-16T23:46:00.809643Z	    image,
2025-09-16T23:46:00.809771Z	    brand->{
2025-09-16T23:46:00.809909Z	      name,
2025-09-16T23:46:00.81011Z	      "slug": slug.current,
2025-09-16T23:46:00.810386Z	      logo
2025-09-16T23:46:00.810506Z	    },
2025-09-16T23:46:00.810796Z	    category->{
2025-09-16T23:46:00.810911Z	      name,
2025-09-16T23:46:00.811009Z	      "slug": slug.current
2025-09-16T23:46:00.811175Z	    },
2025-09-16T23:46:00.811323Z	    pricing{
2025-09-16T23:46:00.811546Z	      currency,
2025-09-16T23:46:00.811667Z	      tiers[]{
2025-09-16T23:46:00.811788Z	        quantity,
2025-09-16T23:46:00.811892Z	        price,
2025-09-16T23:46:00.811988Z	        unit
2025-09-16T23:46:00.812136Z	      },
2025-09-16T23:46:00.81226Z	      moq,
2025-09-16T23:46:00.812359Z	      leadTime,
2025-09-16T23:46:00.81242Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.812507Z	      "price": tiers[0].price,
2025-09-16T23:46:00.812566Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.812628Z	    },
2025-09-16T23:46:00.812806Z	    inventory{
2025-09-16T23:46:00.812899Z	      quantity,
2025-09-16T23:46:00.812964Z	      status,
2025-09-16T23:46:00.813024Z	      warehouse,
2025-09-16T23:46:00.813078Z	      lastUpdated,
2025-09-16T23:46:00.813134Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.813231Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.813374Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.813449Z	    },
2025-09-16T23:46:00.813508Z	    isActive,
2025-09-16T23:46:00.813563Z	    isFeatured,
2025-09-16T23:46:00.813617Z	    isNew,
2025-09-16T23:46:00.81367Z	    _createdAt,
2025-09-16T23:46:00.813756Z	    _updatedAt
2025-09-16T23:46:00.813813Z	  
2025-09-16T23:46:00.813881Z	      },
2025-09-16T23:46:00.813936Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-16T23:46:00.813996Z	    }
2025-09-16T23:46:00.814052Z	  
2025-09-16T23:46:00.814106Z	Query parameters: {
2025-09-16T23:46:00.81416Z	  limit: 8,
2025-09-16T23:46:00.814215Z	  offset: 0,
2025-09-16T23:46:00.814267Z	  category: undefined,
2025-09-16T23:46:00.814341Z	  brand: 'sanrex',
2025-09-16T23:46:00.814397Z	  featured: undefined
2025-09-16T23:46:00.814464Z	}
2025-09-16T23:46:00.814521Z	Fetching solutions with query: 
2025-09-16T23:46:00.814576Z	    {
2025-09-16T23:46:00.814631Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.814712Z	        
2025-09-16T23:46:00.814773Z	    _id,
2025-09-16T23:46:00.814917Z	    title,
2025-09-16T23:46:00.815035Z	    "slug": slug.current,
2025-09-16T23:46:00.815135Z	    summary,
2025-09-16T23:46:00.8152Z	    description,
2025-09-16T23:46:00.815255Z	    coverImage,
2025-09-16T23:46:00.815309Z	    primaryBrand->{
2025-09-16T23:46:00.815362Z	      _id,
2025-09-16T23:46:00.815418Z	      name,
2025-09-16T23:46:00.81548Z	      "slug": slug.current,
2025-09-16T23:46:00.815533Z	      logo
2025-09-16T23:46:00.815586Z	    },
2025-09-16T23:46:00.81564Z	    relatedBrands[]->{
2025-09-16T23:46:00.815717Z	      _id,
2025-09-16T23:46:00.815784Z	      name,
2025-09-16T23:46:00.815842Z	      "slug": slug.current,
2025-09-16T23:46:00.815897Z	      logo
2025-09-16T23:46:00.815957Z	    },
2025-09-16T23:46:00.816019Z	    targetMarket,
2025-09-16T23:46:00.816074Z	    complexity,
2025-09-16T23:46:00.816129Z	    publishedAt,
2025-09-16T23:46:00.816189Z	    isPublished,
2025-09-16T23:46:00.816245Z	    isFeatured,
2025-09-16T23:46:00.816311Z	    viewCount,
2025-09-16T23:46:00.816396Z	    _createdAt,
2025-09-16T23:46:00.816468Z	    _updatedAt
2025-09-16T23:46:00.816524Z	  
2025-09-16T23:46:00.81658Z	      },
2025-09-16T23:46:00.816637Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-16T23:46:00.816721Z	    }
2025-09-16T23:46:00.816781Z	  
2025-09-16T23:46:00.816836Z	Query parameters: {
2025-09-16T23:46:00.816889Z	  limit: 4,
2025-09-16T23:46:00.816943Z	  offset: 0,
2025-09-16T23:46:00.816997Z	  targetMarket: undefined,
2025-09-16T23:46:00.81705Z	  brand: 'sanrex',
2025-09-16T23:46:00.817103Z	  featured: undefined
2025-09-16T23:46:00.817155Z	}
2025-09-16T23:46:00.817208Z	✅ [getBrandData] Found brand: Sanrex
2025-09-16T23:46:00.817265Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.817324Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.81739Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-16T23:46:00.817458Z	Fetching products with query: 
2025-09-16T23:46:00.817516Z	    {
2025-09-16T23:46:00.817575Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.817633Z	        
2025-09-16T23:46:00.823955Z	    _id,
2025-09-16T23:46:00.824133Z	    _type,
2025-09-16T23:46:00.824233Z	    partNumber,
2025-09-16T23:46:00.824332Z	    "slug": slug.current,
2025-09-16T23:46:00.824567Z	    title,
2025-09-16T23:46:00.824792Z	    shortDescription,
2025-09-16T23:46:00.824901Z	    image,
2025-09-16T23:46:00.825002Z	    brand->{
2025-09-16T23:46:00.825215Z	      name,
2025-09-16T23:46:00.825353Z	      "slug": slug.current,
2025-09-16T23:46:00.825526Z	      logo
2025-09-16T23:46:00.82566Z	    },
2025-09-16T23:46:00.825893Z	    category->{
2025-09-16T23:46:00.826069Z	      name,
2025-09-16T23:46:00.826215Z	      "slug": slug.current
2025-09-16T23:46:00.826379Z	    },
2025-09-16T23:46:00.826546Z	    pricing{
2025-09-16T23:46:00.826827Z	      currency,
2025-09-16T23:46:00.827099Z	      tiers[]{
2025-09-16T23:46:00.827208Z	        quantity,
2025-09-16T23:46:00.827316Z	        price,
2025-09-16T23:46:00.82744Z	        unit
2025-09-16T23:46:00.827552Z	      },
2025-09-16T23:46:00.827655Z	      moq,
2025-09-16T23:46:00.827785Z	      leadTime,
2025-09-16T23:46:00.827901Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.828009Z	      "price": tiers[0].price,
2025-09-16T23:46:00.828176Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.828406Z	    },
2025-09-16T23:46:00.828607Z	    inventory{
2025-09-16T23:46:00.828777Z	      quantity,
2025-09-16T23:46:00.829004Z	      status,
2025-09-16T23:46:00.829111Z	      warehouse,
2025-09-16T23:46:00.829314Z	      lastUpdated,
2025-09-16T23:46:00.829491Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.8296Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.829659Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.829815Z	    },
2025-09-16T23:46:00.829981Z	    isActive,
2025-09-16T23:46:00.830171Z	    isFeatured,
2025-09-16T23:46:00.830344Z	    isNew,
2025-09-16T23:46:00.830531Z	    _createdAt,
2025-09-16T23:46:00.830616Z	    _updatedAt
2025-09-16T23:46:00.830769Z	  
2025-09-16T23:46:00.830878Z	      },
2025-09-16T23:46:00.831033Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-16T23:46:00.831187Z	    }
2025-09-16T23:46:00.831354Z	  
2025-09-16T23:46:00.831504Z	Query parameters: {
2025-09-16T23:46:00.831789Z	  limit: 8,
2025-09-16T23:46:00.831919Z	  offset: 0,
2025-09-16T23:46:00.832071Z	  category: undefined,
2025-09-16T23:46:00.832425Z	  brand: 'sanrex',
2025-09-16T23:46:00.832509Z	  featured: undefined
2025-09-16T23:46:00.832591Z	}
2025-09-16T23:46:00.832866Z	Fetching solutions with query: 
2025-09-16T23:46:00.832988Z	    {
2025-09-16T23:46:00.833091Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.833198Z	        
2025-09-16T23:46:00.833298Z	    _id,
2025-09-16T23:46:00.833419Z	    title,
2025-09-16T23:46:00.833531Z	    "slug": slug.current,
2025-09-16T23:46:00.833646Z	    summary,
2025-09-16T23:46:00.83378Z	    description,
2025-09-16T23:46:00.833916Z	    coverImage,
2025-09-16T23:46:00.834044Z	    primaryBrand->{
2025-09-16T23:46:00.834172Z	      _id,
2025-09-16T23:46:00.834287Z	      name,
2025-09-16T23:46:00.834498Z	      "slug": slug.current,
2025-09-16T23:46:00.834571Z	      logo
2025-09-16T23:46:00.834707Z	    },
2025-09-16T23:46:00.834825Z	    relatedBrands[]->{
2025-09-16T23:46:00.834939Z	      _id,
2025-09-16T23:46:00.835033Z	      name,
2025-09-16T23:46:00.835126Z	      "slug": slug.current,
2025-09-16T23:46:00.835225Z	      logo
2025-09-16T23:46:00.835319Z	    },
2025-09-16T23:46:00.835419Z	    targetMarket,
2025-09-16T23:46:00.835517Z	    complexity,
2025-09-16T23:46:00.835609Z	    publishedAt,
2025-09-16T23:46:00.835735Z	    isPublished,
2025-09-16T23:46:00.835831Z	    isFeatured,
2025-09-16T23:46:00.835931Z	    viewCount,
2025-09-16T23:46:00.836022Z	    _createdAt,
2025-09-16T23:46:00.836118Z	    _updatedAt
2025-09-16T23:46:00.836211Z	  
2025-09-16T23:46:00.836334Z	      },
2025-09-16T23:46:00.836454Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-16T23:46:00.836564Z	    }
2025-09-16T23:46:00.83667Z	  
2025-09-16T23:46:00.836784Z	Query parameters: {
2025-09-16T23:46:00.836876Z	  limit: 4,
2025-09-16T23:46:00.836934Z	  offset: 0,
2025-09-16T23:46:00.83701Z	  targetMarket: undefined,
2025-09-16T23:46:00.837104Z	  brand: 'sanrex',
2025-09-16T23:46:00.837186Z	  featured: undefined
2025-09-16T23:46:00.837274Z	}
2025-09-16T23:46:00.837365Z	✅ [getBrandData] Found brand: Sanrex
2025-09-16T23:46:00.837456Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.837546Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.837708Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-16T23:46:00.837885Z	Fetching products with query: 
2025-09-16T23:46:00.838002Z	    {
2025-09-16T23:46:00.838114Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.838221Z	        
2025-09-16T23:46:00.838328Z	    _id,
2025-09-16T23:46:00.83843Z	    _type,
2025-09-16T23:46:00.838535Z	    partNumber,
2025-09-16T23:46:00.838625Z	    "slug": slug.current,
2025-09-16T23:46:00.838764Z	    title,
2025-09-16T23:46:00.838884Z	    shortDescription,
2025-09-16T23:46:00.838993Z	    image,
2025-09-16T23:46:00.839095Z	    brand->{
2025-09-16T23:46:00.839288Z	      name,
2025-09-16T23:46:00.839411Z	      "slug": slug.current,
2025-09-16T23:46:00.839514Z	      logo
2025-09-16T23:46:00.839603Z	    },
2025-09-16T23:46:00.8397Z	    category->{
2025-09-16T23:46:00.839813Z	      name,
2025-09-16T23:46:00.839904Z	      "slug": slug.current
2025-09-16T23:46:00.840172Z	    },
2025-09-16T23:46:00.840321Z	    pricing{
2025-09-16T23:46:00.840406Z	      currency,
2025-09-16T23:46:00.840567Z	      tiers[]{
2025-09-16T23:46:00.840756Z	        quantity,
2025-09-16T23:46:00.840891Z	        price,
2025-09-16T23:46:00.841066Z	        unit
2025-09-16T23:46:00.841197Z	      },
2025-09-16T23:46:00.84133Z	      moq,
2025-09-16T23:46:00.841437Z	      leadTime,
2025-09-16T23:46:00.841592Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.841723Z	      "price": tiers[0].price,
2025-09-16T23:46:00.841889Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.842004Z	    },
2025-09-16T23:46:00.842105Z	    inventory{
2025-09-16T23:46:00.842201Z	      quantity,
2025-09-16T23:46:00.842327Z	      status,
2025-09-16T23:46:00.842448Z	      warehouse,
2025-09-16T23:46:00.842562Z	      lastUpdated,
2025-09-16T23:46:00.842657Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.842801Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.843022Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.84317Z	    },
2025-09-16T23:46:00.843288Z	    isActive,
2025-09-16T23:46:00.843459Z	    isFeatured,
2025-09-16T23:46:00.843619Z	    isNew,
2025-09-16T23:46:00.843826Z	    _createdAt,
2025-09-16T23:46:00.843945Z	    _updatedAt
2025-09-16T23:46:00.844093Z	  
2025-09-16T23:46:00.844189Z	      },
2025-09-16T23:46:00.844311Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-16T23:46:00.844476Z	    }
2025-09-16T23:46:00.844576Z	  
2025-09-16T23:46:00.844689Z	Query parameters: {
2025-09-16T23:46:00.844805Z	  limit: 8,
2025-09-16T23:46:00.84489Z	  offset: 0,
2025-09-16T23:46:00.844986Z	  category: undefined,
2025-09-16T23:46:00.845085Z	  brand: 'epcos',
2025-09-16T23:46:00.845144Z	  featured: undefined
2025-09-16T23:46:00.845203Z	}
2025-09-16T23:46:00.845284Z	Fetching solutions with query: 
2025-09-16T23:46:00.84538Z	    {
2025-09-16T23:46:00.84548Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.845578Z	        
2025-09-16T23:46:00.845722Z	    _id,
2025-09-16T23:46:00.845831Z	    title,
2025-09-16T23:46:00.845947Z	    "slug": slug.current,
2025-09-16T23:46:00.846039Z	    summary,
2025-09-16T23:46:00.846134Z	    description,
2025-09-16T23:46:00.846201Z	    coverImage,
2025-09-16T23:46:00.846285Z	    primaryBrand->{
2025-09-16T23:46:00.846376Z	      _id,
2025-09-16T23:46:00.846472Z	      name,
2025-09-16T23:46:00.846579Z	      "slug": slug.current,
2025-09-16T23:46:00.846686Z	      logo
2025-09-16T23:46:00.846793Z	    },
2025-09-16T23:46:00.846907Z	    relatedBrands[]->{
2025-09-16T23:46:00.847098Z	      _id,
2025-09-16T23:46:00.847224Z	      name,
2025-09-16T23:46:00.847361Z	      "slug": slug.current,
2025-09-16T23:46:00.847493Z	      logo
2025-09-16T23:46:00.847616Z	    },
2025-09-16T23:46:00.847772Z	    targetMarket,
2025-09-16T23:46:00.847923Z	    complexity,
2025-09-16T23:46:00.848066Z	    publishedAt,
2025-09-16T23:46:00.848194Z	    isPublished,
2025-09-16T23:46:00.848411Z	    isFeatured,
2025-09-16T23:46:00.848551Z	    viewCount,
2025-09-16T23:46:00.848651Z	    _createdAt,
2025-09-16T23:46:00.84878Z	    _updatedAt
2025-09-16T23:46:00.848879Z	  
2025-09-16T23:46:00.849079Z	      },
2025-09-16T23:46:00.849222Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-16T23:46:00.849352Z	    }
2025-09-16T23:46:00.849509Z	  
2025-09-16T23:46:00.849687Z	Query parameters: {
2025-09-16T23:46:00.849851Z	  limit: 4,
2025-09-16T23:46:00.849942Z	  offset: 0,
2025-09-16T23:46:00.850113Z	  targetMarket: undefined,
2025-09-16T23:46:00.850213Z	  brand: 'epcos',
2025-09-16T23:46:00.85034Z	  featured: undefined
2025-09-16T23:46:00.850428Z	}
2025-09-16T23:46:00.862899Z	✅ [getBrandData] Found brand: Epcos
2025-09-16T23:46:00.863057Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.863126Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.863211Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-16T23:46:00.863284Z	Fetching products with query: 
2025-09-16T23:46:00.863349Z	    {
2025-09-16T23:46:00.863419Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.863479Z	        
2025-09-16T23:46:00.863538Z	    _id,
2025-09-16T23:46:00.863616Z	    _type,
2025-09-16T23:46:00.863731Z	    partNumber,
2025-09-16T23:46:00.86384Z	    "slug": slug.current,
2025-09-16T23:46:00.863949Z	    title,
2025-09-16T23:46:00.864045Z	    shortDescription,
2025-09-16T23:46:00.86414Z	    image,
2025-09-16T23:46:00.864238Z	    brand->{
2025-09-16T23:46:00.864334Z	      name,
2025-09-16T23:46:00.864451Z	      "slug": slug.current,
2025-09-16T23:46:00.864536Z	      logo
2025-09-16T23:46:00.864609Z	    },
2025-09-16T23:46:00.864701Z	    category->{
2025-09-16T23:46:00.864787Z	      name,
2025-09-16T23:46:00.864854Z	      "slug": slug.current
2025-09-16T23:46:00.864924Z	    },
2025-09-16T23:46:00.865022Z	    pricing{
2025-09-16T23:46:00.865116Z	      currency,
2025-09-16T23:46:00.865209Z	      tiers[]{
2025-09-16T23:46:00.865299Z	        quantity,
2025-09-16T23:46:00.865402Z	        price,
2025-09-16T23:46:00.865505Z	        unit
2025-09-16T23:46:00.865604Z	      },
2025-09-16T23:46:00.865736Z	      moq,
2025-09-16T23:46:00.865827Z	      leadTime,
2025-09-16T23:46:00.865955Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.866048Z	      "price": tiers[0].price,
2025-09-16T23:46:00.866176Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.866289Z	    },
2025-09-16T23:46:00.866396Z	    inventory{
2025-09-16T23:46:00.866492Z	      quantity,
2025-09-16T23:46:00.866587Z	      status,
2025-09-16T23:46:00.866687Z	      warehouse,
2025-09-16T23:46:00.866877Z	      lastUpdated,
2025-09-16T23:46:00.867033Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.86718Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.867254Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.867321Z	    },
2025-09-16T23:46:00.86739Z	    isActive,
2025-09-16T23:46:00.867459Z	    isFeatured,
2025-09-16T23:46:00.867556Z	    isNew,
2025-09-16T23:46:00.867628Z	    _createdAt,
2025-09-16T23:46:00.8677Z	    _updatedAt
2025-09-16T23:46:00.867762Z	  
2025-09-16T23:46:00.867819Z	      },
2025-09-16T23:46:00.867876Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-16T23:46:00.86794Z	    }
2025-09-16T23:46:00.867996Z	  
2025-09-16T23:46:00.868052Z	Query parameters: {
2025-09-16T23:46:00.868112Z	  limit: 8,
2025-09-16T23:46:00.868178Z	  offset: 0,
2025-09-16T23:46:00.868236Z	  category: undefined,
2025-09-16T23:46:00.868293Z	  brand: 'epcos',
2025-09-16T23:46:00.868351Z	  featured: undefined
2025-09-16T23:46:00.868416Z	}
2025-09-16T23:46:00.868484Z	Fetching solutions with query: 
2025-09-16T23:46:00.868542Z	    {
2025-09-16T23:46:00.8686Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.868659Z	        
2025-09-16T23:46:00.868729Z	    _id,
2025-09-16T23:46:00.868787Z	    title,
2025-09-16T23:46:00.868848Z	    "slug": slug.current,
2025-09-16T23:46:00.868908Z	    summary,
2025-09-16T23:46:00.868965Z	    description,
2025-09-16T23:46:00.869021Z	    coverImage,
2025-09-16T23:46:00.869076Z	    primaryBrand->{
2025-09-16T23:46:00.869131Z	      _id,
2025-09-16T23:46:00.869189Z	      name,
2025-09-16T23:46:00.869245Z	      "slug": slug.current,
2025-09-16T23:46:00.8693Z	      logo
2025-09-16T23:46:00.869354Z	    },
2025-09-16T23:46:00.869412Z	    relatedBrands[]->{
2025-09-16T23:46:00.869478Z	      _id,
2025-09-16T23:46:00.869535Z	      name,
2025-09-16T23:46:00.86959Z	      "slug": slug.current,
2025-09-16T23:46:00.86965Z	      logo
2025-09-16T23:46:00.869719Z	    },
2025-09-16T23:46:00.869778Z	    targetMarket,
2025-09-16T23:46:00.869837Z	    complexity,
2025-09-16T23:46:00.869896Z	    publishedAt,
2025-09-16T23:46:00.869959Z	    isPublished,
2025-09-16T23:46:00.870016Z	    isFeatured,
2025-09-16T23:46:00.870071Z	    viewCount,
2025-09-16T23:46:00.870131Z	    _createdAt,
2025-09-16T23:46:00.87019Z	    _updatedAt
2025-09-16T23:46:00.870246Z	  
2025-09-16T23:46:00.870307Z	      },
2025-09-16T23:46:00.870365Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-16T23:46:00.870422Z	    }
2025-09-16T23:46:00.870483Z	  
2025-09-16T23:46:00.870538Z	Query parameters: {
2025-09-16T23:46:00.870594Z	  limit: 4,
2025-09-16T23:46:00.870649Z	  offset: 0,
2025-09-16T23:46:00.870717Z	  targetMarket: undefined,
2025-09-16T23:46:00.870773Z	  brand: 'epcos',
2025-09-16T23:46:00.870835Z	  featured: undefined
2025-09-16T23:46:00.870895Z	}
2025-09-16T23:46:00.870972Z	✅ [getBrandData] Found brand: Epcos
2025-09-16T23:46:00.871041Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.871098Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.871155Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:46:00.87122Z	Fetching products with query: 
2025-09-16T23:46:00.871276Z	    {
2025-09-16T23:46:00.871332Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.871388Z	        
2025-09-16T23:46:00.871449Z	    _id,
2025-09-16T23:46:00.871505Z	    _type,
2025-09-16T23:46:00.871559Z	    partNumber,
2025-09-16T23:46:00.87162Z	    "slug": slug.current,
2025-09-16T23:46:00.871687Z	    title,
2025-09-16T23:46:00.871766Z	    shortDescription,
2025-09-16T23:46:00.872013Z	    image,
2025-09-16T23:46:00.872109Z	    brand->{
2025-09-16T23:46:00.872167Z	      name,
2025-09-16T23:46:00.872223Z	      "slug": slug.current,
2025-09-16T23:46:00.872288Z	      logo
2025-09-16T23:46:00.872349Z	    },
2025-09-16T23:46:00.872404Z	    category->{
2025-09-16T23:46:00.872467Z	      name,
2025-09-16T23:46:00.872528Z	      "slug": slug.current
2025-09-16T23:46:00.87259Z	    },
2025-09-16T23:46:00.872646Z	    pricing{
2025-09-16T23:46:00.872714Z	      currency,
2025-09-16T23:46:00.872769Z	      tiers[]{
2025-09-16T23:46:00.872824Z	        quantity,
2025-09-16T23:46:00.872877Z	        price,
2025-09-16T23:46:00.872931Z	        unit
2025-09-16T23:46:00.872985Z	      },
2025-09-16T23:46:00.873039Z	      moq,
2025-09-16T23:46:00.873091Z	      leadTime,
2025-09-16T23:46:00.873151Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.873207Z	      "price": tiers[0].price,
2025-09-16T23:46:00.873282Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.885974Z	    },
2025-09-16T23:46:00.886053Z	    inventory{
2025-09-16T23:46:00.886118Z	      quantity,
2025-09-16T23:46:00.886174Z	      status,
2025-09-16T23:46:00.88623Z	      warehouse,
2025-09-16T23:46:00.886287Z	      lastUpdated,
2025-09-16T23:46:00.886347Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.886407Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.886479Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.886535Z	    },
2025-09-16T23:46:00.886599Z	    isActive,
2025-09-16T23:46:00.886654Z	    isFeatured,
2025-09-16T23:46:00.886728Z	    isNew,
2025-09-16T23:46:00.886782Z	    _createdAt,
2025-09-16T23:46:00.886837Z	    _updatedAt
2025-09-16T23:46:00.886892Z	  
2025-09-16T23:46:00.886946Z	      },
2025-09-16T23:46:00.886998Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:46:00.887082Z	    }
2025-09-16T23:46:00.887139Z	  
2025-09-16T23:46:00.8872Z	Query parameters: {
2025-09-16T23:46:00.887254Z	  limit: 8,
2025-09-16T23:46:00.887306Z	  offset: 0,
2025-09-16T23:46:00.887359Z	  category: undefined,
2025-09-16T23:46:00.887415Z	  brand: 'qualcomm',
2025-09-16T23:46:00.887484Z	  featured: undefined
2025-09-16T23:46:00.887545Z	}
2025-09-16T23:46:00.887606Z	Fetching solutions with query: 
2025-09-16T23:46:00.887667Z	    {
2025-09-16T23:46:00.887737Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.887796Z	        
2025-09-16T23:46:00.887851Z	    _id,
2025-09-16T23:46:00.887912Z	    title,
2025-09-16T23:46:00.887977Z	    "slug": slug.current,
2025-09-16T23:46:00.888038Z	    summary,
2025-09-16T23:46:00.888092Z	    description,
2025-09-16T23:46:00.888152Z	    coverImage,
2025-09-16T23:46:00.888207Z	    primaryBrand->{
2025-09-16T23:46:00.888267Z	      _id,
2025-09-16T23:46:00.888327Z	      name,
2025-09-16T23:46:00.888381Z	      "slug": slug.current,
2025-09-16T23:46:00.888444Z	      logo
2025-09-16T23:46:00.888503Z	    },
2025-09-16T23:46:00.888562Z	    relatedBrands[]->{
2025-09-16T23:46:00.888619Z	      _id,
2025-09-16T23:46:00.888688Z	      name,
2025-09-16T23:46:00.888751Z	      "slug": slug.current,
2025-09-16T23:46:00.888808Z	      logo
2025-09-16T23:46:00.88887Z	    },
2025-09-16T23:46:00.888925Z	    targetMarket,
2025-09-16T23:46:00.88898Z	    complexity,
2025-09-16T23:46:00.889035Z	    publishedAt,
2025-09-16T23:46:00.889088Z	    isPublished,
2025-09-16T23:46:00.889145Z	    isFeatured,
2025-09-16T23:46:00.889209Z	    viewCount,
2025-09-16T23:46:00.889269Z	    _createdAt,
2025-09-16T23:46:00.889323Z	    _updatedAt
2025-09-16T23:46:00.889386Z	  
2025-09-16T23:46:00.889448Z	      },
2025-09-16T23:46:00.889504Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:46:00.889563Z	    }
2025-09-16T23:46:00.889626Z	  
2025-09-16T23:46:00.889689Z	Query parameters: {
2025-09-16T23:46:00.889748Z	  limit: 4,
2025-09-16T23:46:00.889808Z	  offset: 0,
2025-09-16T23:46:00.889868Z	  targetMarket: undefined,
2025-09-16T23:46:00.889937Z	  brand: 'qualcomm',
2025-09-16T23:46:00.889998Z	  featured: undefined
2025-09-16T23:46:00.890059Z	}
2025-09-16T23:46:00.890117Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:46:00.890179Z	Fetching products with query: 
2025-09-16T23:46:00.890234Z	    {
2025-09-16T23:46:00.890297Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.890363Z	        
2025-09-16T23:46:00.890431Z	    _id,
2025-09-16T23:46:00.890593Z	    _type,
2025-09-16T23:46:00.890833Z	    partNumber,
2025-09-16T23:46:00.890958Z	    "slug": slug.current,
2025-09-16T23:46:00.891066Z	    title,
2025-09-16T23:46:00.891168Z	    shortDescription,
2025-09-16T23:46:00.891268Z	    image,
2025-09-16T23:46:00.891358Z	    brand->{
2025-09-16T23:46:00.891459Z	      name,
2025-09-16T23:46:00.891555Z	      "slug": slug.current,
2025-09-16T23:46:00.891688Z	      logo
2025-09-16T23:46:00.891801Z	    },
2025-09-16T23:46:00.891914Z	    category->{
2025-09-16T23:46:00.892044Z	      name,
2025-09-16T23:46:00.89216Z	      "slug": slug.current
2025-09-16T23:46:00.892272Z	    },
2025-09-16T23:46:00.892381Z	    pricing{
2025-09-16T23:46:00.892488Z	      currency,
2025-09-16T23:46:00.892597Z	      tiers[]{
2025-09-16T23:46:00.892726Z	        quantity,
2025-09-16T23:46:00.892834Z	        price,
2025-09-16T23:46:00.892952Z	        unit
2025-09-16T23:46:00.893058Z	      },
2025-09-16T23:46:00.893152Z	      moq,
2025-09-16T23:46:00.89326Z	      leadTime,
2025-09-16T23:46:00.893372Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.893487Z	      "price": tiers[0].price,
2025-09-16T23:46:00.893593Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.893734Z	    },
2025-09-16T23:46:00.893848Z	    inventory{
2025-09-16T23:46:00.893968Z	      quantity,
2025-09-16T23:46:00.894082Z	      status,
2025-09-16T23:46:00.894187Z	      warehouse,
2025-09-16T23:46:00.894286Z	      lastUpdated,
2025-09-16T23:46:00.894382Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.894483Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.894573Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.894717Z	    },
2025-09-16T23:46:00.894834Z	    isActive,
2025-09-16T23:46:00.894929Z	    isFeatured,
2025-09-16T23:46:00.895039Z	    isNew,
2025-09-16T23:46:00.895134Z	    _createdAt,
2025-09-16T23:46:00.895224Z	    _updatedAt
2025-09-16T23:46:00.895314Z	  
2025-09-16T23:46:00.895431Z	      },
2025-09-16T23:46:00.895538Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:46:00.895669Z	    }
2025-09-16T23:46:00.895792Z	  
2025-09-16T23:46:00.8959Z	Query parameters: {
2025-09-16T23:46:00.896011Z	  limit: 8,
2025-09-16T23:46:00.896114Z	  offset: 0,
2025-09-16T23:46:00.896232Z	  category: undefined,
2025-09-16T23:46:00.89633Z	  brand: 'qualcomm',
2025-09-16T23:46:00.896451Z	  featured: undefined
2025-09-16T23:46:00.896558Z	}
2025-09-16T23:46:00.896669Z	Fetching solutions with query: 
2025-09-16T23:46:00.896811Z	    {
2025-09-16T23:46:00.896939Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.897053Z	        
2025-09-16T23:46:00.897153Z	    _id,
2025-09-16T23:46:00.897258Z	    title,
2025-09-16T23:46:00.897374Z	    "slug": slug.current,
2025-09-16T23:46:00.897488Z	    summary,
2025-09-16T23:46:00.8976Z	    description,
2025-09-16T23:46:00.897739Z	    coverImage,
2025-09-16T23:46:00.897846Z	    primaryBrand->{
2025-09-16T23:46:00.897948Z	      _id,
2025-09-16T23:46:00.898053Z	      name,
2025-09-16T23:46:00.898144Z	      "slug": slug.current,
2025-09-16T23:46:00.898254Z	      logo
2025-09-16T23:46:00.898357Z	    },
2025-09-16T23:46:00.898456Z	    relatedBrands[]->{
2025-09-16T23:46:00.898553Z	      _id,
2025-09-16T23:46:00.898668Z	      name,
2025-09-16T23:46:00.898791Z	      "slug": slug.current,
2025-09-16T23:46:00.898887Z	      logo
2025-09-16T23:46:00.898984Z	    },
2025-09-16T23:46:00.899088Z	    targetMarket,
2025-09-16T23:46:00.899182Z	    complexity,
2025-09-16T23:46:00.899294Z	    publishedAt,
2025-09-16T23:46:00.899402Z	    isPublished,
2025-09-16T23:46:00.899494Z	    isFeatured,
2025-09-16T23:46:00.89961Z	    viewCount,
2025-09-16T23:46:00.899739Z	    _createdAt,
2025-09-16T23:46:00.899852Z	    _updatedAt
2025-09-16T23:46:00.899954Z	  
2025-09-16T23:46:00.900054Z	      },
2025-09-16T23:46:00.900148Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:46:00.900256Z	    }
2025-09-16T23:46:00.900349Z	  
2025-09-16T23:46:00.900445Z	Query parameters: {
2025-09-16T23:46:00.900559Z	  limit: 4,
2025-09-16T23:46:00.900669Z	  offset: 0,
2025-09-16T23:46:00.900787Z	  targetMarket: undefined,
2025-09-16T23:46:00.900887Z	  brand: 'qualcomm',
2025-09-16T23:46:00.900979Z	  featured: undefined
2025-09-16T23:46:00.901076Z	}
2025-09-16T23:46:00.901162Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.901261Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.901378Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:46:00.901504Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:46:00.901621Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.901757Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.901863Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-16T23:46:00.901961Z	Fetching products with query: 
2025-09-16T23:46:00.902064Z	    {
2025-09-16T23:46:00.902162Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.902276Z	        
2025-09-16T23:46:00.902387Z	    _id,
2025-09-16T23:46:00.902486Z	    _type,
2025-09-16T23:46:00.902585Z	    partNumber,
2025-09-16T23:46:00.902714Z	    "slug": slug.current,
2025-09-16T23:46:00.902841Z	    title,
2025-09-16T23:46:00.902952Z	    shortDescription,
2025-09-16T23:46:00.903062Z	    image,
2025-09-16T23:46:00.903164Z	    brand->{
2025-09-16T23:46:00.903253Z	      name,
2025-09-16T23:46:00.90334Z	      "slug": slug.current,
2025-09-16T23:46:00.903444Z	      logo
2025-09-16T23:46:00.903533Z	    },
2025-09-16T23:46:00.903621Z	    category->{
2025-09-16T23:46:00.903749Z	      name,
2025-09-16T23:46:00.903849Z	      "slug": slug.current
2025-09-16T23:46:00.903958Z	    },
2025-09-16T23:46:00.904065Z	    pricing{
2025-09-16T23:46:00.904164Z	      currency,
2025-09-16T23:46:00.904263Z	      tiers[]{
2025-09-16T23:46:00.904361Z	        quantity,
2025-09-16T23:46:00.904463Z	        price,
2025-09-16T23:46:00.904561Z	        unit
2025-09-16T23:46:00.904711Z	      },
2025-09-16T23:46:00.904827Z	      moq,
2025-09-16T23:46:00.904927Z	      leadTime,
2025-09-16T23:46:00.905043Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.905157Z	      "price": tiers[0].price,
2025-09-16T23:46:00.905271Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.905375Z	    },
2025-09-16T23:46:00.905474Z	    inventory{
2025-09-16T23:46:00.905583Z	      quantity,
2025-09-16T23:46:00.905717Z	      status,
2025-09-16T23:46:00.905833Z	      warehouse,
2025-09-16T23:46:00.90594Z	      lastUpdated,
2025-09-16T23:46:00.906043Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.906146Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.906245Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.906345Z	    },
2025-09-16T23:46:00.906446Z	    isActive,
2025-09-16T23:46:00.906545Z	    isFeatured,
2025-09-16T23:46:00.906652Z	    isNew,
2025-09-16T23:46:00.906768Z	    _createdAt,
2025-09-16T23:46:00.906867Z	    _updatedAt
2025-09-16T23:46:00.906964Z	  
2025-09-16T23:46:00.907073Z	      },
2025-09-16T23:46:00.907192Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-16T23:46:00.907309Z	    }
2025-09-16T23:46:00.90741Z	  
2025-09-16T23:46:00.907503Z	Query parameters: {
2025-09-16T23:46:00.907594Z	  limit: 8,
2025-09-16T23:46:00.90772Z	  offset: 0,
2025-09-16T23:46:00.907834Z	  category: undefined,
2025-09-16T23:46:00.907939Z	  brand: 'mediatek',
2025-09-16T23:46:00.908038Z	  featured: undefined
2025-09-16T23:46:00.908136Z	}
2025-09-16T23:46:00.908254Z	Fetching solutions with query: 
2025-09-16T23:46:00.908353Z	    {
2025-09-16T23:46:00.908445Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.908551Z	        
2025-09-16T23:46:00.90866Z	    _id,
2025-09-16T23:46:00.908775Z	    title,
2025-09-16T23:46:00.908877Z	    "slug": slug.current,
2025-09-16T23:46:00.908978Z	    summary,
2025-09-16T23:46:00.909077Z	    description,
2025-09-16T23:46:00.909183Z	    coverImage,
2025-09-16T23:46:00.909273Z	    primaryBrand->{
2025-09-16T23:46:00.909359Z	      _id,
2025-09-16T23:46:00.909446Z	      name,
2025-09-16T23:46:00.909543Z	      "slug": slug.current,
2025-09-16T23:46:00.909639Z	      logo
2025-09-16T23:46:00.909764Z	    },
2025-09-16T23:46:00.909863Z	    relatedBrands[]->{
2025-09-16T23:46:00.909973Z	      _id,
2025-09-16T23:46:00.910071Z	      name,
2025-09-16T23:46:00.91018Z	      "slug": slug.current,
2025-09-16T23:46:00.910282Z	      logo
2025-09-16T23:46:00.910382Z	    },
2025-09-16T23:46:00.91048Z	    targetMarket,
2025-09-16T23:46:00.910579Z	    complexity,
2025-09-16T23:46:00.910697Z	    publishedAt,
2025-09-16T23:46:00.910804Z	    isPublished,
2025-09-16T23:46:00.910894Z	    isFeatured,
2025-09-16T23:46:00.910983Z	    viewCount,
2025-09-16T23:46:00.911071Z	    _createdAt,
2025-09-16T23:46:00.911408Z	    _updatedAt
2025-09-16T23:46:00.911543Z	  
2025-09-16T23:46:00.911663Z	      },
2025-09-16T23:46:00.91178Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-16T23:46:00.91189Z	    }
2025-09-16T23:46:00.912015Z	  
2025-09-16T23:46:00.912114Z	Query parameters: {
2025-09-16T23:46:00.912211Z	  limit: 4,
2025-09-16T23:46:00.912306Z	  offset: 0,
2025-09-16T23:46:00.912397Z	  targetMarket: undefined,
2025-09-16T23:46:00.9125Z	  brand: 'mediatek',
2025-09-16T23:46:00.912589Z	  featured: undefined
2025-09-16T23:46:00.912709Z	}
2025-09-16T23:46:00.912808Z	✅ [getBrandData] Found brand: MediaTek
2025-09-16T23:46:00.912903Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.913009Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.913117Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-16T23:46:00.913222Z	Fetching products with query: 
2025-09-16T23:46:00.91332Z	    {
2025-09-16T23:46:00.913418Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.913522Z	        
2025-09-16T23:46:00.913624Z	    _id,
2025-09-16T23:46:00.91375Z	    _type,
2025-09-16T23:46:00.913865Z	    partNumber,
2025-09-16T23:46:00.913958Z	    "slug": slug.current,
2025-09-16T23:46:00.914048Z	    title,
2025-09-16T23:46:00.914135Z	    shortDescription,
2025-09-16T23:46:00.914222Z	    image,
2025-09-16T23:46:00.914311Z	    brand->{
2025-09-16T23:46:00.914399Z	      name,
2025-09-16T23:46:00.914501Z	      "slug": slug.current,
2025-09-16T23:46:00.914608Z	      logo
2025-09-16T23:46:00.914729Z	    },
2025-09-16T23:46:00.914833Z	    category->{
2025-09-16T23:46:00.914933Z	      name,
2025-09-16T23:46:00.915028Z	      "slug": slug.current
2025-09-16T23:46:00.91513Z	    },
2025-09-16T23:46:00.915228Z	    pricing{
2025-09-16T23:46:00.915334Z	      currency,
2025-09-16T23:46:00.915424Z	      tiers[]{
2025-09-16T23:46:00.915517Z	        quantity,
2025-09-16T23:46:00.915606Z	        price,
2025-09-16T23:46:00.915736Z	        unit
2025-09-16T23:46:00.915838Z	      },
2025-09-16T23:46:00.915934Z	      moq,
2025-09-16T23:46:00.916027Z	      leadTime,
2025-09-16T23:46:00.916124Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.916221Z	      "price": tiers[0].price,
2025-09-16T23:46:00.916317Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.916408Z	    },
2025-09-16T23:46:00.916505Z	    inventory{
2025-09-16T23:46:00.916597Z	      quantity,
2025-09-16T23:46:00.916722Z	      status,
2025-09-16T23:46:00.916902Z	      warehouse,
2025-09-16T23:46:00.917024Z	      lastUpdated,
2025-09-16T23:46:00.917125Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.917236Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.917335Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.917435Z	    },
2025-09-16T23:46:00.917531Z	    isActive,
2025-09-16T23:46:00.917621Z	    isFeatured,
2025-09-16T23:46:00.917734Z	    isNew,
2025-09-16T23:46:00.917821Z	    _createdAt,
2025-09-16T23:46:00.917903Z	    _updatedAt
2025-09-16T23:46:00.917993Z	  
2025-09-16T23:46:00.918079Z	      },
2025-09-16T23:46:00.918165Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-16T23:46:00.918259Z	    }
2025-09-16T23:46:00.918346Z	  
2025-09-16T23:46:00.918433Z	Query parameters: {
2025-09-16T23:46:00.918526Z	  limit: 8,
2025-09-16T23:46:00.918614Z	  offset: 0,
2025-09-16T23:46:00.918733Z	  category: undefined,
2025-09-16T23:46:00.918833Z	  brand: 'mediatek',
2025-09-16T23:46:00.918928Z	  featured: undefined
2025-09-16T23:46:00.919024Z	}
2025-09-16T23:46:00.919133Z	Fetching solutions with query: 
2025-09-16T23:46:00.919264Z	    {
2025-09-16T23:46:00.919367Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.919494Z	        
2025-09-16T23:46:00.919655Z	    _id,
2025-09-16T23:46:00.919783Z	    title,
2025-09-16T23:46:00.919888Z	    "slug": slug.current,
2025-09-16T23:46:00.919986Z	    summary,
2025-09-16T23:46:00.920082Z	    description,
2025-09-16T23:46:00.920179Z	    coverImage,
2025-09-16T23:46:00.920276Z	    primaryBrand->{
2025-09-16T23:46:00.920369Z	      _id,
2025-09-16T23:46:00.920464Z	      name,
2025-09-16T23:46:00.92055Z	      "slug": slug.current,
2025-09-16T23:46:00.920649Z	      logo
2025-09-16T23:46:00.920766Z	    },
2025-09-16T23:46:00.920866Z	    relatedBrands[]->{
2025-09-16T23:46:00.920972Z	      _id,
2025-09-16T23:46:00.921079Z	      name,
2025-09-16T23:46:00.92117Z	      "slug": slug.current,
2025-09-16T23:46:00.921261Z	      logo
2025-09-16T23:46:00.92135Z	    },
2025-09-16T23:46:00.921449Z	    targetMarket,
2025-09-16T23:46:00.921662Z	    complexity,
2025-09-16T23:46:00.921884Z	    publishedAt,
2025-09-16T23:46:00.922061Z	    isPublished,
2025-09-16T23:46:00.922232Z	    isFeatured,
2025-09-16T23:46:00.92245Z	    viewCount,
2025-09-16T23:46:00.922728Z	    _createdAt,
2025-09-16T23:46:00.922855Z	    _updatedAt
2025-09-16T23:46:00.922969Z	  
2025-09-16T23:46:00.923072Z	      },
2025-09-16T23:46:00.923171Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-16T23:46:00.923265Z	    }
2025-09-16T23:46:00.923356Z	  
2025-09-16T23:46:00.923458Z	Query parameters: {
2025-09-16T23:46:00.923563Z	  limit: 4,
2025-09-16T23:46:00.923664Z	  offset: 0,
2025-09-16T23:46:00.923813Z	  targetMarket: undefined,
2025-09-16T23:46:00.923909Z	  brand: 'mediatek',
2025-09-16T23:46:00.924009Z	  featured: undefined
2025-09-16T23:46:00.924098Z	}
2025-09-16T23:46:00.924213Z	✅ [getBrandData] Found brand: MediaTek
2025-09-16T23:46:00.924322Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:00.924436Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.924548Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:46:00.924666Z	Fetching products with query: 
2025-09-16T23:46:00.924795Z	    {
2025-09-16T23:46:00.924891Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.924982Z	        
2025-09-16T23:46:00.925069Z	    _id,
2025-09-16T23:46:00.925155Z	    _type,
2025-09-16T23:46:00.925242Z	    partNumber,
2025-09-16T23:46:00.925327Z	    "slug": slug.current,
2025-09-16T23:46:00.925419Z	    title,
2025-09-16T23:46:00.925509Z	    shortDescription,
2025-09-16T23:46:00.925601Z	    image,
2025-09-16T23:46:00.925722Z	    brand->{
2025-09-16T23:46:00.925844Z	      name,
2025-09-16T23:46:00.925947Z	      "slug": slug.current,
2025-09-16T23:46:00.926046Z	      logo
2025-09-16T23:46:00.926142Z	    },
2025-09-16T23:46:00.926236Z	    category->{
2025-09-16T23:46:00.926332Z	      name,
2025-09-16T23:46:00.926429Z	      "slug": slug.current
2025-09-16T23:46:00.92653Z	    },
2025-09-16T23:46:00.92664Z	    pricing{
2025-09-16T23:46:00.926757Z	      currency,
2025-09-16T23:46:00.926848Z	      tiers[]{
2025-09-16T23:46:00.926947Z	        quantity,
2025-09-16T23:46:00.927042Z	        price,
2025-09-16T23:46:00.927137Z	        unit
2025-09-16T23:46:00.927235Z	      },
2025-09-16T23:46:00.927328Z	      moq,
2025-09-16T23:46:00.927424Z	      leadTime,
2025-09-16T23:46:00.927521Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.927618Z	      "price": tiers[0].price,
2025-09-16T23:46:00.927748Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.927855Z	    },
2025-09-16T23:46:00.927953Z	    inventory{
2025-09-16T23:46:00.928049Z	      quantity,
2025-09-16T23:46:00.928143Z	      status,
2025-09-16T23:46:00.92823Z	      warehouse,
2025-09-16T23:46:00.928326Z	      lastUpdated,
2025-09-16T23:46:00.928453Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.928546Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.928644Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.928755Z	    },
2025-09-16T23:46:00.928848Z	    isActive,
2025-09-16T23:46:00.928949Z	    isFeatured,
2025-09-16T23:46:00.92905Z	    isNew,
2025-09-16T23:46:00.929144Z	    _createdAt,
2025-09-16T23:46:00.929247Z	    _updatedAt
2025-09-16T23:46:00.929365Z	  
2025-09-16T23:46:00.929466Z	      },
2025-09-16T23:46:00.929563Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:46:00.929705Z	    }
2025-09-16T23:46:00.92981Z	  
2025-09-16T23:46:00.929905Z	Query parameters: {
2025-09-16T23:46:00.929997Z	  limit: 8,
2025-09-16T23:46:00.93009Z	  offset: 0,
2025-09-16T23:46:00.930181Z	  category: undefined,
2025-09-16T23:46:00.930279Z	  brand: 'cree',
2025-09-16T23:46:00.93037Z	  featured: undefined
2025-09-16T23:46:00.930468Z	}
2025-09-16T23:46:00.930561Z	Fetching solutions with query: 
2025-09-16T23:46:00.930664Z	    {
2025-09-16T23:46:00.930784Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.930892Z	        
2025-09-16T23:46:00.93099Z	    _id,
2025-09-16T23:46:00.931086Z	    title,
2025-09-16T23:46:00.931181Z	    "slug": slug.current,
2025-09-16T23:46:00.931282Z	    summary,
2025-09-16T23:46:00.931392Z	    description,
2025-09-16T23:46:00.931531Z	    coverImage,
2025-09-16T23:46:00.931639Z	    primaryBrand->{
2025-09-16T23:46:00.931756Z	      _id,
2025-09-16T23:46:00.93185Z	      name,
2025-09-16T23:46:00.931948Z	      "slug": slug.current,
2025-09-16T23:46:00.932045Z	      logo
2025-09-16T23:46:00.932143Z	    },
2025-09-16T23:46:00.932236Z	    relatedBrands[]->{
2025-09-16T23:46:00.932337Z	      _id,
2025-09-16T23:46:00.932438Z	      name,
2025-09-16T23:46:00.932528Z	      "slug": slug.current,
2025-09-16T23:46:00.932615Z	      logo
2025-09-16T23:46:00.932737Z	    },
2025-09-16T23:46:00.932829Z	    targetMarket,
2025-09-16T23:46:00.932913Z	    complexity,
2025-09-16T23:46:00.932996Z	    publishedAt,
2025-09-16T23:46:00.933082Z	    isPublished,
2025-09-16T23:46:00.933168Z	    isFeatured,
2025-09-16T23:46:00.933283Z	    viewCount,
2025-09-16T23:46:00.933382Z	    _createdAt,
2025-09-16T23:46:00.933482Z	    _updatedAt
2025-09-16T23:46:00.93358Z	  
2025-09-16T23:46:00.933699Z	      },
2025-09-16T23:46:00.933811Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:46:00.933916Z	    }
2025-09-16T23:46:00.934013Z	  
2025-09-16T23:46:00.934113Z	Query parameters: {
2025-09-16T23:46:00.934209Z	  limit: 4,
2025-09-16T23:46:00.934304Z	  offset: 0,
2025-09-16T23:46:00.9344Z	  targetMarket: undefined,
2025-09-16T23:46:00.9345Z	  brand: 'cree',
2025-09-16T23:46:00.934596Z	  featured: undefined
2025-09-16T23:46:00.934743Z	}
2025-09-16T23:46:00.934848Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:46:00.934947Z	Products fetch result: {
2025-09-16T23:46:00.935044Z	  totalProducts: 4,
2025-09-16T23:46:00.935141Z	  fetchedProducts: 4,
2025-09-16T23:46:00.935237Z	  firstProduct: {
2025-09-16T23:46:00.935332Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:46:00.935443Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:46:00.935541Z	    _type: 'product',
2025-09-16T23:46:00.93565Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:46:00.935772Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:46:00.935863Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:00.935953Z	    image: null,
2025-09-16T23:46:00.936038Z	    inventory: {
2025-09-16T23:46:00.936136Z	      inStock: true,
2025-09-16T23:46:00.93623Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:46:00.936329Z	      quantity: 0,
2025-09-16T23:46:00.936424Z	      status: 'in_stock',
2025-09-16T23:46:00.936521Z	      warehouse: null
2025-09-16T23:46:00.936617Z	    },
2025-09-16T23:46:00.936746Z	    isActive: true,
2025-09-16T23:46:00.936846Z	    isFeatured: false,
2025-09-16T23:46:00.936947Z	    isNew: false,
2025-09-16T23:46:00.937063Z	    partNumber: '11111',
2025-09-16T23:46:00.937163Z	    pricing: {
2025-09-16T23:46:00.93726Z	      currency: 'CNY',
2025-09-16T23:46:00.937369Z	      leadTime: null,
2025-09-16T23:46:00.937458Z	      moq: null,
2025-09-16T23:46:00.937546Z	      price: null,
2025-09-16T23:46:00.937643Z	      tiers: null
2025-09-16T23:46:00.937755Z	    },
2025-09-16T23:46:00.937851Z	    shortDescription: '11111',
2025-09-16T23:46:00.937944Z	    slug: 'sic mosfet',
2025-09-16T23:46:00.938037Z	    title: '111111'
2025-09-16T23:46:00.938131Z	  }
2025-09-16T23:46:00.938239Z	}
2025-09-16T23:46:00.938348Z	Solutions fetch result: {
2025-09-16T23:46:00.938459Z	  totalSolutions: 6,
2025-09-16T23:46:00.938564Z	  fetchedSolutions: 4,
2025-09-16T23:46:00.93867Z	  firstSolution: {
2025-09-16T23:46:00.938796Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:46:00.938908Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:46:00.939011Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:46:00.9391Z	    complexity: 'medium',
2025-09-16T23:46:00.939195Z	    coverImage: null,
2025-09-16T23:46:00.939324Z	    description: [ [Object] ],
2025-09-16T23:46:00.939429Z	    isFeatured: false,
2025-09-16T23:46:00.939539Z	    isPublished: true,
2025-09-16T23:46:00.939647Z	    primaryBrand: {
2025-09-16T23:46:00.939759Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:46:00.939853Z	      logo: null,
2025-09-16T23:46:00.939941Z	      name: 'CREE',
2025-09-16T23:46:00.940028Z	      slug: 'cree'
2025-09-16T23:46:00.940116Z	    },
2025-09-16T23:46:00.940201Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:46:00.940288Z	    relatedBrands: null,
2025-09-16T23:46:00.940377Z	    slug: '11111',
2025-09-16T23:46:00.940466Z	    summary: '11111',
2025-09-16T23:46:00.940553Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:00.940662Z	    title: '11111',
2025-09-16T23:46:00.94078Z	    viewCount: 0
2025-09-16T23:46:00.940879Z	  }
2025-09-16T23:46:00.940976Z	}
2025-09-16T23:46:00.941067Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:46:00.941172Z	Fetching products with query: 
2025-09-16T23:46:00.941268Z	    {
2025-09-16T23:46:00.941362Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.941462Z	        
2025-09-16T23:46:00.941555Z	    _id,
2025-09-16T23:46:00.941667Z	    _type,
2025-09-16T23:46:00.941793Z	    partNumber,
2025-09-16T23:46:00.941884Z	    "slug": slug.current,
2025-09-16T23:46:00.941971Z	    title,
2025-09-16T23:46:00.942061Z	    shortDescription,
2025-09-16T23:46:00.942147Z	    image,
2025-09-16T23:46:00.942231Z	    brand->{
2025-09-16T23:46:00.942318Z	      name,
2025-09-16T23:46:00.942403Z	      "slug": slug.current,
2025-09-16T23:46:00.942495Z	      logo
2025-09-16T23:46:00.942597Z	    },
2025-09-16T23:46:00.942721Z	    category->{
2025-09-16T23:46:00.942819Z	      name,
2025-09-16T23:46:00.942917Z	      "slug": slug.current
2025-09-16T23:46:00.94302Z	    },
2025-09-16T23:46:00.943113Z	    pricing{
2025-09-16T23:46:00.943204Z	      currency,
2025-09-16T23:46:00.943304Z	      tiers[]{
2025-09-16T23:46:00.943392Z	        quantity,
2025-09-16T23:46:00.943484Z	        price,
2025-09-16T23:46:00.943572Z	        unit
2025-09-16T23:46:00.943685Z	      },
2025-09-16T23:46:00.943793Z	      moq,
2025-09-16T23:46:00.943889Z	      leadTime,
2025-09-16T23:46:00.943986Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.944087Z	      "price": tiers[0].price,
2025-09-16T23:46:00.944183Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.944279Z	    },
2025-09-16T23:46:00.944377Z	    inventory{
2025-09-16T23:46:00.944476Z	      quantity,
2025-09-16T23:46:00.94457Z	      status,
2025-09-16T23:46:00.944689Z	      warehouse,
2025-09-16T23:46:00.94479Z	      lastUpdated,
2025-09-16T23:46:00.944882Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.944973Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.945059Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.945156Z	    },
2025-09-16T23:46:00.945253Z	    isActive,
2025-09-16T23:46:00.94535Z	    isFeatured,
2025-09-16T23:46:00.945447Z	    isNew,
2025-09-16T23:46:00.945549Z	    _createdAt,
2025-09-16T23:46:00.945647Z	    _updatedAt
2025-09-16T23:46:00.945763Z	  
2025-09-16T23:46:00.945862Z	      },
2025-09-16T23:46:00.94597Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:46:00.946075Z	    }
2025-09-16T23:46:00.946172Z	  
2025-09-16T23:46:00.946266Z	Query parameters: {
2025-09-16T23:46:00.946362Z	  limit: 8,
2025-09-16T23:46:00.946463Z	  offset: 0,
2025-09-16T23:46:00.946558Z	  category: undefined,
2025-09-16T23:46:00.946662Z	  brand: 'cree',
2025-09-16T23:46:00.946781Z	  featured: undefined
2025-09-16T23:46:00.946881Z	}
2025-09-16T23:46:00.946981Z	Fetching solutions with query: 
2025-09-16T23:46:00.94708Z	    {
2025-09-16T23:46:00.947178Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.947277Z	        
2025-09-16T23:46:00.947369Z	    _id,
2025-09-16T23:46:00.947472Z	    title,
2025-09-16T23:46:00.947599Z	    "slug": slug.current,
2025-09-16T23:46:00.947718Z	    summary,
2025-09-16T23:46:00.947822Z	    description,
2025-09-16T23:46:00.947919Z	    coverImage,
2025-09-16T23:46:00.948013Z	    primaryBrand->{
2025-09-16T23:46:00.948113Z	      _id,
2025-09-16T23:46:00.948225Z	      name,
2025-09-16T23:46:00.948329Z	      "slug": slug.current,
2025-09-16T23:46:00.948427Z	      logo
2025-09-16T23:46:00.948522Z	    },
2025-09-16T23:46:00.948616Z	    relatedBrands[]->{
2025-09-16T23:46:00.948744Z	      _id,
2025-09-16T23:46:00.948843Z	      name,
2025-09-16T23:46:00.948943Z	      "slug": slug.current,
2025-09-16T23:46:00.94904Z	      logo
2025-09-16T23:46:00.949128Z	    },
2025-09-16T23:46:00.949216Z	    targetMarket,
2025-09-16T23:46:00.949301Z	    complexity,
2025-09-16T23:46:00.949387Z	    publishedAt,
2025-09-16T23:46:00.949478Z	    isPublished,
2025-09-16T23:46:00.949565Z	    isFeatured,
2025-09-16T23:46:00.949662Z	    viewCount,
2025-09-16T23:46:00.949788Z	    _createdAt,
2025-09-16T23:46:00.949893Z	    _updatedAt
2025-09-16T23:46:00.949982Z	  
2025-09-16T23:46:00.950072Z	      },
2025-09-16T23:46:00.950161Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:46:00.950253Z	    }
2025-09-16T23:46:00.950342Z	  
2025-09-16T23:46:00.95043Z	Query parameters: {
2025-09-16T23:46:00.950517Z	  limit: 4,
2025-09-16T23:46:00.950606Z	  offset: 0,
2025-09-16T23:46:00.950739Z	  targetMarket: undefined,
2025-09-16T23:46:00.950845Z	  brand: 'cree',
2025-09-16T23:46:00.95094Z	  featured: undefined
2025-09-16T23:46:00.951033Z	}
2025-09-16T23:46:00.951129Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:46:00.95123Z	Products fetch result: {
2025-09-16T23:46:00.951325Z	  totalProducts: 4,
2025-09-16T23:46:00.951419Z	  fetchedProducts: 4,
2025-09-16T23:46:00.951513Z	  firstProduct: {
2025-09-16T23:46:00.951614Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:46:00.951741Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:46:00.951849Z	    _type: 'product',
2025-09-16T23:46:00.951972Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:46:00.952082Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:46:00.952178Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:00.952273Z	    image: null,
2025-09-16T23:46:00.952363Z	    inventory: {
2025-09-16T23:46:00.952457Z	      inStock: true,
2025-09-16T23:46:00.952547Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:46:00.952647Z	      quantity: 0,
2025-09-16T23:46:00.952761Z	      status: 'in_stock',
2025-09-16T23:46:00.95286Z	      warehouse: null
2025-09-16T23:46:00.952956Z	    },
2025-09-16T23:46:00.953053Z	    isActive: true,
2025-09-16T23:46:00.953147Z	    isFeatured: false,
2025-09-16T23:46:00.953244Z	    isNew: false,
2025-09-16T23:46:00.953337Z	    partNumber: '11111',
2025-09-16T23:46:00.953434Z	    pricing: {
2025-09-16T23:46:00.953527Z	      currency: 'CNY',
2025-09-16T23:46:00.953638Z	      leadTime: null,
2025-09-16T23:46:00.953782Z	      moq: null,
2025-09-16T23:46:00.953894Z	      price: null,
2025-09-16T23:46:00.95399Z	      tiers: null
2025-09-16T23:46:00.954092Z	    },
2025-09-16T23:46:00.95419Z	    shortDescription: '11111',
2025-09-16T23:46:00.95429Z	    slug: 'sic mosfet',
2025-09-16T23:46:00.954396Z	    title: '111111'
2025-09-16T23:46:00.954498Z	  }
2025-09-16T23:46:00.954603Z	}
2025-09-16T23:46:00.954723Z	Solutions fetch result: {
2025-09-16T23:46:00.954826Z	  totalSolutions: 6,
2025-09-16T23:46:00.954933Z	  fetchedSolutions: 4,
2025-09-16T23:46:00.955033Z	  firstSolution: {
2025-09-16T23:46:00.955122Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:46:00.955222Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:46:00.955316Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:46:00.95542Z	    complexity: 'medium',
2025-09-16T23:46:00.955523Z	    coverImage: null,
2025-09-16T23:46:00.955621Z	    description: [ [Object] ],
2025-09-16T23:46:00.955755Z	    isFeatured: false,
2025-09-16T23:46:00.955866Z	    isPublished: true,
2025-09-16T23:46:00.955958Z	    primaryBrand: {
2025-09-16T23:46:00.956061Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:46:00.956163Z	      logo: null,
2025-09-16T23:46:00.956259Z	      name: 'CREE',
2025-09-16T23:46:00.956357Z	      slug: 'cree'
2025-09-16T23:46:00.956476Z	    },
2025-09-16T23:46:00.956573Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:46:00.956709Z	    relatedBrands: null,
2025-09-16T23:46:00.956827Z	    slug: '11111',
2025-09-16T23:46:00.956929Z	    summary: '11111',
2025-09-16T23:46:00.957036Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:00.957146Z	    title: '11111',
2025-09-16T23:46:00.957246Z	    viewCount: 0
2025-09-16T23:46:00.957345Z	  }
2025-09-16T23:46:00.95744Z	}
2025-09-16T23:46:00.957541Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-16T23:46:00.957648Z	Fetching products with query: 
2025-09-16T23:46:00.957779Z	    {
2025-09-16T23:46:00.957882Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.95799Z	        
2025-09-16T23:46:00.958093Z	    _id,
2025-09-16T23:46:00.958186Z	    _type,
2025-09-16T23:46:00.958292Z	    partNumber,
2025-09-16T23:46:00.958393Z	    "slug": slug.current,
2025-09-16T23:46:00.958489Z	    title,
2025-09-16T23:46:00.958591Z	    shortDescription,
2025-09-16T23:46:00.958719Z	    image,
2025-09-16T23:46:00.958825Z	    brand->{
2025-09-16T23:46:00.958928Z	      name,
2025-09-16T23:46:00.959024Z	      "slug": slug.current,
2025-09-16T23:46:00.959117Z	      logo
2025-09-16T23:46:00.959247Z	    },
2025-09-16T23:46:00.959356Z	    category->{
2025-09-16T23:46:00.959449Z	      name,
2025-09-16T23:46:00.959551Z	      "slug": slug.current
2025-09-16T23:46:00.959668Z	    },
2025-09-16T23:46:00.95979Z	    pricing{
2025-09-16T23:46:00.959891Z	      currency,
2025-09-16T23:46:00.959991Z	      tiers[]{
2025-09-16T23:46:00.960083Z	        quantity,
2025-09-16T23:46:00.960205Z	        price,
2025-09-16T23:46:00.960312Z	        unit
2025-09-16T23:46:00.960412Z	      },
2025-09-16T23:46:00.960514Z	      moq,
2025-09-16T23:46:00.960612Z	      leadTime,
2025-09-16T23:46:00.960738Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.960854Z	      "price": tiers[0].price,
2025-09-16T23:46:00.960963Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.961066Z	    },
2025-09-16T23:46:00.961169Z	    inventory{
2025-09-16T23:46:00.96126Z	      quantity,
2025-09-16T23:46:00.961365Z	      status,
2025-09-16T23:46:00.961467Z	      warehouse,
2025-09-16T23:46:00.961558Z	      lastUpdated,
2025-09-16T23:46:00.9617Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.961806Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.961898Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.961983Z	    },
2025-09-16T23:46:00.962072Z	    isActive,
2025-09-16T23:46:00.962178Z	    isFeatured,
2025-09-16T23:46:00.962288Z	    isNew,
2025-09-16T23:46:00.96238Z	    _createdAt,
2025-09-16T23:46:00.96247Z	    _updatedAt
2025-09-16T23:46:00.962571Z	  
2025-09-16T23:46:00.962706Z	      },
2025-09-16T23:46:00.962814Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-16T23:46:00.96292Z	    }
2025-09-16T23:46:00.963013Z	  
2025-09-16T23:46:00.963093Z	Query parameters: {
2025-09-16T23:46:00.963175Z	  limit: 8,
2025-09-16T23:46:00.963284Z	  offset: 0,
2025-09-16T23:46:00.963383Z	  category: undefined,
2025-09-16T23:46:00.963486Z	  brand: 'semikron',
2025-09-16T23:46:00.963585Z	  featured: undefined
2025-09-16T23:46:00.963713Z	}
2025-09-16T23:46:00.963824Z	Fetching solutions with query: 
2025-09-16T23:46:00.963942Z	    {
2025-09-16T23:46:00.964053Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.964167Z	        
2025-09-16T23:46:00.964267Z	    _id,
2025-09-16T23:46:00.96437Z	    title,
2025-09-16T23:46:00.964476Z	    "slug": slug.current,
2025-09-16T23:46:00.964588Z	    summary,
2025-09-16T23:46:00.964717Z	    description,
2025-09-16T23:46:00.964831Z	    coverImage,
2025-09-16T23:46:00.964938Z	    primaryBrand->{
2025-09-16T23:46:00.965029Z	      _id,
2025-09-16T23:46:00.965123Z	      name,
2025-09-16T23:46:00.965224Z	      "slug": slug.current,
2025-09-16T23:46:00.965318Z	      logo
2025-09-16T23:46:00.965442Z	    },
2025-09-16T23:46:00.965545Z	    relatedBrands[]->{
2025-09-16T23:46:00.965664Z	      _id,
2025-09-16T23:46:00.965786Z	      name,
2025-09-16T23:46:00.965888Z	      "slug": slug.current,
2025-09-16T23:46:00.965983Z	      logo
2025-09-16T23:46:00.966089Z	    },
2025-09-16T23:46:00.966192Z	    targetMarket,
2025-09-16T23:46:00.966291Z	    complexity,
2025-09-16T23:46:00.96639Z	    publishedAt,
2025-09-16T23:46:00.966499Z	    isPublished,
2025-09-16T23:46:00.966593Z	    isFeatured,
2025-09-16T23:46:00.966724Z	    viewCount,
2025-09-16T23:46:00.966828Z	    _createdAt,
2025-09-16T23:46:00.966926Z	    _updatedAt
2025-09-16T23:46:00.967017Z	  
2025-09-16T23:46:00.967129Z	      },
2025-09-16T23:46:00.967232Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-16T23:46:00.967334Z	    }
2025-09-16T23:46:00.967425Z	  
2025-09-16T23:46:00.967523Z	Query parameters: {
2025-09-16T23:46:00.967621Z	  limit: 4,
2025-09-16T23:46:00.967746Z	  offset: 0,
2025-09-16T23:46:00.967848Z	  targetMarket: undefined,
2025-09-16T23:46:00.967949Z	  brand: 'semikron',
2025-09-16T23:46:00.968049Z	  featured: undefined
2025-09-16T23:46:00.968146Z	}
2025-09-16T23:46:00.968246Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-16T23:46:00.96835Z	Fetching products with query: 
2025-09-16T23:46:00.968453Z	    {
2025-09-16T23:46:00.968551Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.968715Z	        
2025-09-16T23:46:00.968832Z	    _id,
2025-09-16T23:46:00.968948Z	    _type,
2025-09-16T23:46:00.969054Z	    partNumber,
2025-09-16T23:46:00.969159Z	    "slug": slug.current,
2025-09-16T23:46:00.969267Z	    title,
2025-09-16T23:46:00.969396Z	    shortDescription,
2025-09-16T23:46:00.969506Z	    image,
2025-09-16T23:46:00.969598Z	    brand->{
2025-09-16T23:46:00.969747Z	      name,
2025-09-16T23:46:00.969857Z	      "slug": slug.current,
2025-09-16T23:46:00.969956Z	      logo
2025-09-16T23:46:00.970049Z	    },
2025-09-16T23:46:00.970147Z	    category->{
2025-09-16T23:46:00.970235Z	      name,
2025-09-16T23:46:00.970327Z	      "slug": slug.current
2025-09-16T23:46:00.970417Z	    },
2025-09-16T23:46:00.970504Z	    pricing{
2025-09-16T23:46:00.970609Z	      currency,
2025-09-16T23:46:00.970732Z	      tiers[]{
2025-09-16T23:46:00.970842Z	        quantity,
2025-09-16T23:46:00.970952Z	        price,
2025-09-16T23:46:00.971058Z	        unit
2025-09-16T23:46:00.971157Z	      },
2025-09-16T23:46:00.971247Z	      moq,
2025-09-16T23:46:00.971355Z	      leadTime,
2025-09-16T23:46:00.971456Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.97158Z	      "price": tiers[0].price,
2025-09-16T23:46:00.971721Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.971833Z	    },
2025-09-16T23:46:00.97195Z	    inventory{
2025-09-16T23:46:00.972054Z	      quantity,
2025-09-16T23:46:00.972161Z	      status,
2025-09-16T23:46:00.972264Z	      warehouse,
2025-09-16T23:46:00.972357Z	      lastUpdated,
2025-09-16T23:46:00.972449Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.972542Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.972646Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.972767Z	    },
2025-09-16T23:46:00.972862Z	    isActive,
2025-09-16T23:46:00.972953Z	    isFeatured,
2025-09-16T23:46:00.973045Z	    isNew,
2025-09-16T23:46:00.973139Z	    _createdAt,
2025-09-16T23:46:00.973232Z	    _updatedAt
2025-09-16T23:46:00.973319Z	  
2025-09-16T23:46:00.973408Z	      },
2025-09-16T23:46:00.973497Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-16T23:46:00.973606Z	    }
2025-09-16T23:46:00.97374Z	  
2025-09-16T23:46:00.973845Z	Query parameters: {
2025-09-16T23:46:00.973941Z	  limit: 8,
2025-09-16T23:46:00.974042Z	  offset: 0,
2025-09-16T23:46:00.974143Z	  category: undefined,
2025-09-16T23:46:00.974241Z	  brand: 'semikron',
2025-09-16T23:46:00.974347Z	  featured: undefined
2025-09-16T23:46:00.974449Z	}
2025-09-16T23:46:00.974542Z	Fetching solutions with query: 
2025-09-16T23:46:00.974662Z	    {
2025-09-16T23:46:00.974782Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.974886Z	        
2025-09-16T23:46:00.974981Z	    _id,
2025-09-16T23:46:00.975071Z	    title,
2025-09-16T23:46:00.975179Z	    "slug": slug.current,
2025-09-16T23:46:00.97528Z	    summary,
2025-09-16T23:46:00.975383Z	    description,
2025-09-16T23:46:00.97552Z	    coverImage,
2025-09-16T23:46:00.975638Z	    primaryBrand->{
2025-09-16T23:46:00.975778Z	      _id,
2025-09-16T23:46:00.975891Z	      name,
2025-09-16T23:46:00.975994Z	      "slug": slug.current,
2025-09-16T23:46:00.976098Z	      logo
2025-09-16T23:46:00.976209Z	    },
2025-09-16T23:46:00.976312Z	    relatedBrands[]->{
2025-09-16T23:46:00.976422Z	      _id,
2025-09-16T23:46:00.976531Z	      name,
2025-09-16T23:46:00.976638Z	      "slug": slug.current,
2025-09-16T23:46:00.976773Z	      logo
2025-09-16T23:46:00.976869Z	    },
2025-09-16T23:46:00.976962Z	    targetMarket,
2025-09-16T23:46:00.977051Z	    complexity,
2025-09-16T23:46:00.977153Z	    publishedAt,
2025-09-16T23:46:00.97724Z	    isPublished,
2025-09-16T23:46:00.977348Z	    isFeatured,
2025-09-16T23:46:00.977443Z	    viewCount,
2025-09-16T23:46:00.977534Z	    _createdAt,
2025-09-16T23:46:00.977626Z	    _updatedAt
2025-09-16T23:46:00.977756Z	  
2025-09-16T23:46:00.977865Z	      },
2025-09-16T23:46:00.977973Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-16T23:46:00.978085Z	    }
2025-09-16T23:46:00.978182Z	  
2025-09-16T23:46:00.978287Z	Query parameters: {
2025-09-16T23:46:00.978386Z	  limit: 4,
2025-09-16T23:46:00.978481Z	  offset: 0,
2025-09-16T23:46:00.978584Z	  targetMarket: undefined,
2025-09-16T23:46:00.978714Z	  brand: 'semikron',
2025-09-16T23:46:00.978825Z	  featured: undefined
2025-09-16T23:46:00.978917Z	}
2025-09-16T23:46:00.979008Z	Products fetch result: {
2025-09-16T23:46:00.979107Z	  totalProducts: 1,
2025-09-16T23:46:00.979208Z	  fetchedProducts: 1,
2025-09-16T23:46:00.979328Z	  firstProduct: {
2025-09-16T23:46:00.97942Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-16T23:46:00.979517Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-16T23:46:00.979606Z	    _type: 'product',
2025-09-16T23:46:00.979734Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-16T23:46:00.979929Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-16T23:46:00.980169Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:00.980264Z	    image: null,
2025-09-16T23:46:00.98045Z	    inventory: {
2025-09-16T23:46:00.980552Z	      inStock: true,
2025-09-16T23:46:00.980655Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-16T23:46:00.980777Z	      quantity: 0,
2025-09-16T23:46:00.980881Z	      status: 'in_stock',
2025-09-16T23:46:00.980986Z	      warehouse: null
2025-09-16T23:46:00.981107Z	    },
2025-09-16T23:46:00.981351Z	    isActive: true,
2025-09-16T23:46:00.981473Z	    isFeatured: false,
2025-09-16T23:46:00.981535Z	    isNew: false,
2025-09-16T23:46:00.981644Z	    partNumber: 'SKKT106/16E',
2025-09-16T23:46:00.981773Z	    pricing: {
2025-09-16T23:46:00.981848Z	      currency: 'CNY',
2025-09-16T23:46:00.981934Z	      leadTime: null,
2025-09-16T23:46:00.982119Z	      moq: null,
2025-09-16T23:46:00.982269Z	      price: null,
2025-09-16T23:46:00.982347Z	      tiers: null
2025-09-16T23:46:00.982498Z	    },
2025-09-16T23:46:00.982628Z	    shortDescription: 'SKKT106/16E',
2025-09-16T23:46:00.982924Z	    slug: 'SKKT106/16E',
2025-09-16T23:46:00.983062Z	    title: 'SKKT106/16E'
2025-09-16T23:46:00.983193Z	  }
2025-09-16T23:46:00.983303Z	}
2025-09-16T23:46:00.983399Z	Products fetch result: {
2025-09-16T23:46:00.983521Z	  totalProducts: 1,
2025-09-16T23:46:00.983629Z	  fetchedProducts: 1,
2025-09-16T23:46:00.983753Z	  firstProduct: {
2025-09-16T23:46:00.983856Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-16T23:46:00.98397Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-16T23:46:00.984073Z	    _type: 'product',
2025-09-16T23:46:00.984172Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-16T23:46:00.984273Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-16T23:46:00.984411Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:00.984524Z	    image: null,
2025-09-16T23:46:00.984632Z	    inventory: {
2025-09-16T23:46:00.984768Z	      inStock: true,
2025-09-16T23:46:00.984887Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-16T23:46:00.985002Z	      quantity: 0,
2025-09-16T23:46:00.985108Z	      status: 'in_stock',
2025-09-16T23:46:00.985209Z	      warehouse: null
2025-09-16T23:46:00.985336Z	    },
2025-09-16T23:46:00.985464Z	    isActive: true,
2025-09-16T23:46:00.985567Z	    isFeatured: false,
2025-09-16T23:46:00.985629Z	    isNew: false,
2025-09-16T23:46:00.985795Z	    partNumber: 'SKKT106/16E',
2025-09-16T23:46:00.985908Z	    pricing: {
2025-09-16T23:46:00.986018Z	      currency: 'CNY',
2025-09-16T23:46:00.986168Z	      leadTime: null,
2025-09-16T23:46:00.986299Z	      moq: null,
2025-09-16T23:46:00.986385Z	      price: null,
2025-09-16T23:46:00.986549Z	      tiers: null
2025-09-16T23:46:00.98672Z	    },
2025-09-16T23:46:00.986808Z	    shortDescription: 'SKKT106/16E',
2025-09-16T23:46:00.986967Z	    slug: 'SKKT106/16E',
2025-09-16T23:46:00.987057Z	    title: 'SKKT106/16E'
2025-09-16T23:46:00.987199Z	  }
2025-09-16T23:46:00.987285Z	}
2025-09-16T23:46:00.987398Z	✅ [getBrandData] Found brand: Semikron
2025-09-16T23:46:00.987544Z	✅ [getBrandData] Found brand: Semikron
2025-09-16T23:46:00.987663Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.987784Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:00.987885Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-16T23:46:00.988Z	Fetching products with query: 
2025-09-16T23:46:00.988104Z	    {
2025-09-16T23:46:00.988198Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:00.988306Z	        
2025-09-16T23:46:00.988414Z	    _id,
2025-09-16T23:46:00.988499Z	    _type,
2025-09-16T23:46:00.98858Z	    partNumber,
2025-09-16T23:46:00.988731Z	    "slug": slug.current,
2025-09-16T23:46:00.98885Z	    title,
2025-09-16T23:46:00.988957Z	    shortDescription,
2025-09-16T23:46:00.989056Z	    image,
2025-09-16T23:46:00.989148Z	    brand->{
2025-09-16T23:46:00.989333Z	      name,
2025-09-16T23:46:00.989455Z	      "slug": slug.current,
2025-09-16T23:46:00.989578Z	      logo
2025-09-16T23:46:00.98971Z	    },
2025-09-16T23:46:00.98986Z	    category->{
2025-09-16T23:46:00.989988Z	      name,
2025-09-16T23:46:00.99017Z	      "slug": slug.current
2025-09-16T23:46:00.990316Z	    },
2025-09-16T23:46:00.990474Z	    pricing{
2025-09-16T23:46:00.990609Z	      currency,
2025-09-16T23:46:00.990766Z	      tiers[]{
2025-09-16T23:46:00.990895Z	        quantity,
2025-09-16T23:46:00.991121Z	        price,
2025-09-16T23:46:00.991215Z	        unit
2025-09-16T23:46:00.991418Z	      },
2025-09-16T23:46:00.991554Z	      moq,
2025-09-16T23:46:00.991646Z	      leadTime,
2025-09-16T23:46:00.991837Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:00.991911Z	      "price": tiers[0].price,
2025-09-16T23:46:00.992098Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:00.992173Z	    },
2025-09-16T23:46:00.992285Z	    inventory{
2025-09-16T23:46:00.992508Z	      quantity,
2025-09-16T23:46:00.992743Z	      status,
2025-09-16T23:46:00.992903Z	      warehouse,
2025-09-16T23:46:00.993008Z	      lastUpdated,
2025-09-16T23:46:00.993188Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:00.993315Z	      "inStock": status == "in_stock",
2025-09-16T23:46:00.99344Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:00.9936Z	    },
2025-09-16T23:46:00.993729Z	    isActive,
2025-09-16T23:46:00.993842Z	    isFeatured,
2025-09-16T23:46:00.994012Z	    isNew,
2025-09-16T23:46:00.994118Z	    _createdAt,
2025-09-16T23:46:00.994261Z	    _updatedAt
2025-09-16T23:46:00.994349Z	  
2025-09-16T23:46:00.994481Z	      },
2025-09-16T23:46:00.99457Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-16T23:46:00.994762Z	    }
2025-09-16T23:46:00.994842Z	  
2025-09-16T23:46:00.994984Z	Query parameters: {
2025-09-16T23:46:00.995321Z	  limit: 8,
2025-09-16T23:46:00.995451Z	  offset: 0,
2025-09-16T23:46:00.995552Z	  category: undefined,
2025-09-16T23:46:00.995655Z	  brand: 'epcos',
2025-09-16T23:46:00.995916Z	  featured: undefined
2025-09-16T23:46:00.996038Z	}
2025-09-16T23:46:00.996435Z	Fetching solutions with query: 
2025-09-16T23:46:00.996518Z	    {
2025-09-16T23:46:00.996814Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:00.996901Z	        
2025-09-16T23:46:00.99718Z	    _id,
2025-09-16T23:46:00.997262Z	    title,
2025-09-16T23:46:00.997521Z	    "slug": slug.current,
2025-09-16T23:46:00.9978Z	    summary,
2025-09-16T23:46:00.998071Z	    description,
2025-09-16T23:46:00.998342Z	    coverImage,
2025-09-16T23:46:00.998429Z	    primaryBrand->{
2025-09-16T23:46:00.998718Z	      _id,
2025-09-16T23:46:00.998993Z	      name,
2025-09-16T23:46:00.999082Z	      "slug": slug.current,
2025-09-16T23:46:00.999354Z	      logo
2025-09-16T23:46:00.999653Z	    },
2025-09-16T23:46:00.99975Z	    relatedBrands[]->{
2025-09-16T23:46:00.999864Z	      _id,
2025-09-16T23:46:01.000233Z	      name,
2025-09-16T23:46:01.000341Z	      "slug": slug.current,
2025-09-16T23:46:01.000793Z	      logo
2025-09-16T23:46:01.001054Z	    },
2025-09-16T23:46:01.001138Z	    targetMarket,
2025-09-16T23:46:01.001325Z	    complexity,
2025-09-16T23:46:01.00144Z	    publishedAt,
2025-09-16T23:46:01.001667Z	    isPublished,
2025-09-16T23:46:01.001881Z	    isFeatured,
2025-09-16T23:46:01.002107Z	    viewCount,
2025-09-16T23:46:01.002207Z	    _createdAt,
2025-09-16T23:46:01.00241Z	    _updatedAt
2025-09-16T23:46:01.00255Z	  
2025-09-16T23:46:01.002764Z	      },
2025-09-16T23:46:01.002928Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-16T23:46:01.003056Z	    }
2025-09-16T23:46:01.003214Z	  
2025-09-16T23:46:01.003367Z	Query parameters: {
2025-09-16T23:46:01.003478Z	  limit: 4,
2025-09-16T23:46:01.00366Z	  offset: 0,
2025-09-16T23:46:01.003793Z	  targetMarket: undefined,
2025-09-16T23:46:01.003906Z	  brand: 'epcos',
2025-09-16T23:46:01.004012Z	  featured: undefined
2025-09-16T23:46:01.004117Z	}
2025-09-16T23:46:01.004218Z	Query parameters: {
2025-09-16T23:46:01.004344Z	  limit: 4,
2025-09-16T23:46:01.004583Z	  offset: 0,
2025-09-16T23:46:01.004718Z	  targetMarket: undefined,
2025-09-16T23:46:01.004889Z	  brand: 'littelfuse',
2025-09-16T23:46:01.00503Z	  featured: undefined
2025-09-16T23:46:01.005155Z	}
2025-09-16T23:46:01.005266Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:46:01.005376Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:01.005489Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:01.005601Z	✅ [getBrandData] Found brand: MediaTek
2025-09-16T23:46:01.005746Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:01.005856Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:01.00596Z	Fetching products with query: 
2025-09-16T23:46:01.006065Z	    {
2025-09-16T23:46:01.00625Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.006326Z	        
2025-09-16T23:46:01.006437Z	    _id,
2025-09-16T23:46:01.006602Z	    _type,
2025-09-16T23:46:01.006738Z	    partNumber,
2025-09-16T23:46:01.006849Z	    "slug": slug.current,
2025-09-16T23:46:01.00699Z	    title,
2025-09-16T23:46:01.007115Z	    shortDescription,
2025-09-16T23:46:01.007236Z	    image,
2025-09-16T23:46:01.007389Z	    brand->{
2025-09-16T23:46:01.007505Z	      name,
2025-09-16T23:46:01.00766Z	      "slug": slug.current,
2025-09-16T23:46:01.007781Z	      logo
2025-09-16T23:46:01.007897Z	    },
2025-09-16T23:46:01.008002Z	    category->{
2025-09-16T23:46:01.008127Z	      name,
2025-09-16T23:46:01.008233Z	      "slug": slug.current
2025-09-16T23:46:01.008357Z	    },
2025-09-16T23:46:01.00847Z	    pricing{
2025-09-16T23:46:01.008588Z	      currency,
2025-09-16T23:46:01.008902Z	      tiers[]{
2025-09-16T23:46:01.008993Z	        quantity,
2025-09-16T23:46:01.00919Z	        price,
2025-09-16T23:46:01.009361Z	        unit
2025-09-16T23:46:01.009463Z	      },
2025-09-16T23:46:01.009568Z	      moq,
2025-09-16T23:46:01.009692Z	      leadTime,
2025-09-16T23:46:01.009795Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.009868Z	      "price": tiers[0].price,
2025-09-16T23:46:01.010013Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.010117Z	    },
2025-09-16T23:46:01.010221Z	    inventory{
2025-09-16T23:46:01.010327Z	      quantity,
2025-09-16T23:46:01.01041Z	      status,
2025-09-16T23:46:01.010468Z	      warehouse,
2025-09-16T23:46:01.010532Z	      lastUpdated,
2025-09-16T23:46:01.010592Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.010657Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.010741Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.0108Z	    },
2025-09-16T23:46:01.010867Z	    isActive,
2025-09-16T23:46:01.010925Z	    isFeatured,
2025-09-16T23:46:01.010979Z	    isNew,
2025-09-16T23:46:01.011032Z	    _createdAt,
2025-09-16T23:46:01.011085Z	    _updatedAt
2025-09-16T23:46:01.01114Z	  
2025-09-16T23:46:01.011193Z	      },
2025-09-16T23:46:01.011246Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-16T23:46:01.011303Z	    }
2025-09-16T23:46:01.011355Z	  
2025-09-16T23:46:01.011411Z	Query parameters: {
2025-09-16T23:46:01.011465Z	  limit: 8,
2025-09-16T23:46:01.011518Z	  offset: 0,
2025-09-16T23:46:01.011569Z	  category: undefined,
2025-09-16T23:46:01.011632Z	  brand: 'lem',
2025-09-16T23:46:01.011712Z	  featured: undefined
2025-09-16T23:46:01.011816Z	}
2025-09-16T23:46:01.011927Z	Fetching solutions with query: 
2025-09-16T23:46:01.012024Z	    {
2025-09-16T23:46:01.012124Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.01222Z	        
2025-09-16T23:46:01.012313Z	    _id,
2025-09-16T23:46:01.012417Z	    title,
2025-09-16T23:46:01.012514Z	    "slug": slug.current,
2025-09-16T23:46:01.012624Z	    summary,
2025-09-16T23:46:01.012745Z	    description,
2025-09-16T23:46:01.012878Z	    coverImage,
2025-09-16T23:46:01.013004Z	    primaryBrand->{
2025-09-16T23:46:01.01314Z	      _id,
2025-09-16T23:46:01.01329Z	      name,
2025-09-16T23:46:01.013409Z	      "slug": slug.current,
2025-09-16T23:46:01.013566Z	      logo
2025-09-16T23:46:01.01379Z	    },
2025-09-16T23:46:01.014304Z	    relatedBrands[]->{
2025-09-16T23:46:01.014436Z	      _id,
2025-09-16T23:46:01.014585Z	      name,
2025-09-16T23:46:01.014712Z	      "slug": slug.current,
2025-09-16T23:46:01.014804Z	      logo
2025-09-16T23:46:01.014926Z	    },
2025-09-16T23:46:01.01503Z	    targetMarket,
2025-09-16T23:46:01.01511Z	    complexity,
2025-09-16T23:46:01.015232Z	    publishedAt,
2025-09-16T23:46:01.015351Z	    isPublished,
2025-09-16T23:46:01.015603Z	    isFeatured,
2025-09-16T23:46:01.015767Z	    viewCount,
2025-09-16T23:46:01.015891Z	    _createdAt,
2025-09-16T23:46:01.01599Z	    _updatedAt
2025-09-16T23:46:01.016086Z	  
2025-09-16T23:46:01.016194Z	      },
2025-09-16T23:46:01.016296Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-16T23:46:01.0164Z	    }
2025-09-16T23:46:01.016525Z	  
2025-09-16T23:46:01.016634Z	Query parameters: {
2025-09-16T23:46:01.016757Z	  limit: 4,
2025-09-16T23:46:01.016861Z	  offset: 0,
2025-09-16T23:46:01.01696Z	  targetMarket: undefined,
2025-09-16T23:46:01.017061Z	  brand: 'lem',
2025-09-16T23:46:01.017151Z	  featured: undefined
2025-09-16T23:46:01.017238Z	}
2025-09-16T23:46:01.017339Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:46:01.017456Z	Fetching products with query: 
2025-09-16T23:46:01.017552Z	    {
2025-09-16T23:46:01.017654Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.017781Z	        
2025-09-16T23:46:01.017884Z	    _id,
2025-09-16T23:46:01.017997Z	    _type,
2025-09-16T23:46:01.0181Z	    partNumber,
2025-09-16T23:46:01.018203Z	    "slug": slug.current,
2025-09-16T23:46:01.018311Z	    title,
2025-09-16T23:46:01.018409Z	    shortDescription,
2025-09-16T23:46:01.018526Z	    image,
2025-09-16T23:46:01.018633Z	    brand->{
2025-09-16T23:46:01.018752Z	      name,
2025-09-16T23:46:01.018859Z	      "slug": slug.current,
2025-09-16T23:46:01.018955Z	      logo
2025-09-16T23:46:01.019066Z	    },
2025-09-16T23:46:01.01917Z	    category->{
2025-09-16T23:46:01.019287Z	      name,
2025-09-16T23:46:01.019383Z	      "slug": slug.current
2025-09-16T23:46:01.019483Z	    },
2025-09-16T23:46:01.019589Z	    pricing{
2025-09-16T23:46:01.019693Z	      currency,
2025-09-16T23:46:01.01979Z	      tiers[]{
2025-09-16T23:46:01.01988Z	        quantity,
2025-09-16T23:46:01.019982Z	        price,
2025-09-16T23:46:01.020103Z	        unit
2025-09-16T23:46:01.020219Z	      },
2025-09-16T23:46:01.020321Z	      moq,
2025-09-16T23:46:01.020424Z	      leadTime,
2025-09-16T23:46:01.020542Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.020654Z	      "price": tiers[0].price,
2025-09-16T23:46:01.020768Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.020873Z	    },
2025-09-16T23:46:01.020978Z	    inventory{
2025-09-16T23:46:01.021084Z	      quantity,
2025-09-16T23:46:01.021184Z	      status,
2025-09-16T23:46:01.021292Z	      warehouse,
2025-09-16T23:46:01.021385Z	      lastUpdated,
2025-09-16T23:46:01.021494Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.021606Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.021726Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.021832Z	    },
2025-09-16T23:46:01.021938Z	    isActive,
2025-09-16T23:46:01.022049Z	    isFeatured,
2025-09-16T23:46:01.022159Z	    isNew,
2025-09-16T23:46:01.022259Z	    _createdAt,
2025-09-16T23:46:01.022369Z	    _updatedAt
2025-09-16T23:46:01.022471Z	  
2025-09-16T23:46:01.022593Z	      },
2025-09-16T23:46:01.02272Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:46:01.022831Z	    }
2025-09-16T23:46:01.022923Z	  
2025-09-16T23:46:01.023025Z	Query parameters: {
2025-09-16T23:46:01.023203Z	  limit: 8,
2025-09-16T23:46:01.023317Z	  offset: 0,
2025-09-16T23:46:01.02342Z	  category: undefined,
2025-09-16T23:46:01.023536Z	  brand: 'cree',
2025-09-16T23:46:01.023637Z	  featured: undefined
2025-09-16T23:46:01.023754Z	}
2025-09-16T23:46:01.023854Z	Fetching solutions with query: 
2025-09-16T23:46:01.023961Z	    {
2025-09-16T23:46:01.024065Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.024177Z	        
2025-09-16T23:46:01.024278Z	    _id,
2025-09-16T23:46:01.024386Z	    title,
2025-09-16T23:46:01.024499Z	    "slug": slug.current,
2025-09-16T23:46:01.0246Z	    summary,
2025-09-16T23:46:01.024712Z	    description,
2025-09-16T23:46:01.024826Z	    coverImage,
2025-09-16T23:46:01.024926Z	    primaryBrand->{
2025-09-16T23:46:01.025016Z	      _id,
2025-09-16T23:46:01.025105Z	      name,
2025-09-16T23:46:01.025221Z	      "slug": slug.current,
2025-09-16T23:46:01.025334Z	      logo
2025-09-16T23:46:01.025449Z	    },
2025-09-16T23:46:01.025551Z	    relatedBrands[]->{
2025-09-16T23:46:01.025654Z	      _id,
2025-09-16T23:46:01.025788Z	      name,
2025-09-16T23:46:01.025902Z	      "slug": slug.current,
2025-09-16T23:46:01.026007Z	      logo
2025-09-16T23:46:01.026136Z	    },
2025-09-16T23:46:01.026233Z	    targetMarket,
2025-09-16T23:46:01.026322Z	    complexity,
2025-09-16T23:46:01.026408Z	    publishedAt,
2025-09-16T23:46:01.02652Z	    isPublished,
2025-09-16T23:46:01.026609Z	    isFeatured,
2025-09-16T23:46:01.026734Z	    viewCount,
2025-09-16T23:46:01.026841Z	    _createdAt,
2025-09-16T23:46:01.026939Z	    _updatedAt
2025-09-16T23:46:01.027031Z	  
2025-09-16T23:46:01.027128Z	      },
2025-09-16T23:46:01.027228Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:46:01.027331Z	    }
2025-09-16T23:46:01.02743Z	  
2025-09-16T23:46:01.027543Z	Query parameters: {
2025-09-16T23:46:01.027649Z	  limit: 4,
2025-09-16T23:46:01.027784Z	  offset: 0,
2025-09-16T23:46:01.027886Z	  targetMarket: undefined,
2025-09-16T23:46:01.027989Z	  brand: 'cree',
2025-09-16T23:46:01.028087Z	  featured: undefined
2025-09-16T23:46:01.028186Z	}
2025-09-16T23:46:01.028272Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:46:01.028365Z	Fetching products with query: 
2025-09-16T23:46:01.028477Z	    {
2025-09-16T23:46:01.028582Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.028708Z	        
2025-09-16T23:46:01.028821Z	    _id,
2025-09-16T23:46:01.028925Z	    _type,
2025-09-16T23:46:01.02903Z	    partNumber,
2025-09-16T23:46:01.029154Z	    "slug": slug.current,
2025-09-16T23:46:01.029261Z	    title,
2025-09-16T23:46:01.029359Z	    shortDescription,
2025-09-16T23:46:01.029461Z	    image,
2025-09-16T23:46:01.029556Z	    brand->{
2025-09-16T23:46:01.029641Z	      name,
2025-09-16T23:46:01.029752Z	      "slug": slug.current,
2025-09-16T23:46:01.029853Z	      logo
2025-09-16T23:46:01.029958Z	    },
2025-09-16T23:46:01.030059Z	    category->{
2025-09-16T23:46:01.030159Z	      name,
2025-09-16T23:46:01.030265Z	      "slug": slug.current
2025-09-16T23:46:01.030372Z	    },
2025-09-16T23:46:01.030492Z	    pricing{
2025-09-16T23:46:01.030592Z	      currency,
2025-09-16T23:46:01.030711Z	      tiers[]{
2025-09-16T23:46:01.030822Z	        quantity,
2025-09-16T23:46:01.030922Z	        price,
2025-09-16T23:46:01.031021Z	        unit
2025-09-16T23:46:01.031127Z	      },
2025-09-16T23:46:01.031227Z	      moq,
2025-09-16T23:46:01.031323Z	      leadTime,
2025-09-16T23:46:01.031416Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.031536Z	      "price": tiers[0].price,
2025-09-16T23:46:01.031637Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.031772Z	    },
2025-09-16T23:46:01.031879Z	    inventory{
2025-09-16T23:46:01.03198Z	      quantity,
2025-09-16T23:46:01.032094Z	      status,
2025-09-16T23:46:01.03221Z	      warehouse,
2025-09-16T23:46:01.032311Z	      lastUpdated,
2025-09-16T23:46:01.032429Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.032539Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.032638Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.03277Z	    },
2025-09-16T23:46:01.032873Z	    isActive,
2025-09-16T23:46:01.03297Z	    isFeatured,
2025-09-16T23:46:01.033071Z	    isNew,
2025-09-16T23:46:01.033169Z	    _createdAt,
2025-09-16T23:46:01.033264Z	    _updatedAt
2025-09-16T23:46:01.033363Z	  
2025-09-16T23:46:01.033472Z	      },
2025-09-16T23:46:01.033571Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:46:01.033685Z	    }
2025-09-16T23:46:01.033797Z	  
2025-09-16T23:46:01.033901Z	Query parameters: {
2025-09-16T23:46:01.033999Z	  limit: 8,
2025-09-16T23:46:01.034101Z	  offset: 0,
2025-09-16T23:46:01.034199Z	  category: undefined,
2025-09-16T23:46:01.034299Z	  brand: 'littelfuse',
2025-09-16T23:46:01.034404Z	  featured: undefined
2025-09-16T23:46:01.034519Z	}
2025-09-16T23:46:01.034622Z	Fetching solutions with query: 
2025-09-16T23:46:01.034756Z	    {
2025-09-16T23:46:01.034863Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.034984Z	        
2025-09-16T23:46:01.035089Z	    _id,
2025-09-16T23:46:01.035186Z	    title,
2025-09-16T23:46:01.035282Z	    "slug": slug.current,
2025-09-16T23:46:01.035379Z	    summary,
2025-09-16T23:46:01.035492Z	    description,
2025-09-16T23:46:01.035591Z	    coverImage,
2025-09-16T23:46:01.035731Z	    primaryBrand->{
2025-09-16T23:46:01.03585Z	      _id,
2025-09-16T23:46:01.035964Z	      name,
2025-09-16T23:46:01.03607Z	      "slug": slug.current,
2025-09-16T23:46:01.036174Z	      logo
2025-09-16T23:46:01.036276Z	    },
2025-09-16T23:46:01.036366Z	    relatedBrands[]->{
2025-09-16T23:46:01.036474Z	      _id,
2025-09-16T23:46:01.036573Z	      name,
2025-09-16T23:46:01.036692Z	      "slug": slug.current,
2025-09-16T23:46:01.036794Z	      logo
2025-09-16T23:46:01.03689Z	    },
2025-09-16T23:46:01.036994Z	    targetMarket,
2025-09-16T23:46:01.037111Z	    complexity,
2025-09-16T23:46:01.037212Z	    publishedAt,
2025-09-16T23:46:01.03731Z	    isPublished,
2025-09-16T23:46:01.037416Z	    isFeatured,
2025-09-16T23:46:01.037537Z	    viewCount,
2025-09-16T23:46:01.037641Z	    _createdAt,
2025-09-16T23:46:01.03777Z	    _updatedAt
2025-09-16T23:46:01.03787Z	  
2025-09-16T23:46:01.037966Z	      },
2025-09-16T23:46:01.038062Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:46:01.038182Z	    }
2025-09-16T23:46:01.038311Z	  
2025-09-16T23:46:01.038404Z	Query parameters: {
2025-09-16T23:46:01.038509Z	  limit: 4,
2025-09-16T23:46:01.038596Z	  offset: 0,
2025-09-16T23:46:01.038706Z	  targetMarket: undefined,
2025-09-16T23:46:01.038853Z	  brand: 'littelfuse',
2025-09-16T23:46:01.038997Z	  featured: undefined
2025-09-16T23:46:01.03909Z	}
2025-09-16T23:46:01.039241Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:46:01.039358Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:01.039467Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:01.039595Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:46:01.039759Z	Fetching products with query: 
2025-09-16T23:46:01.039865Z	    {
2025-09-16T23:46:01.040014Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.040141Z	        
2025-09-16T23:46:01.040267Z	    _id,
2025-09-16T23:46:01.04037Z	    _type,
2025-09-16T23:46:01.040478Z	    partNumber,
2025-09-16T23:46:01.040621Z	    "slug": slug.current,
2025-09-16T23:46:01.040749Z	    title,
2025-09-16T23:46:01.040893Z	    shortDescription,
2025-09-16T23:46:01.041Z	    image,
2025-09-16T23:46:01.041096Z	    brand->{
2025-09-16T23:46:01.041209Z	      name,
2025-09-16T23:46:01.041298Z	      "slug": slug.current,
2025-09-16T23:46:01.041388Z	      logo
2025-09-16T23:46:01.041503Z	    },
2025-09-16T23:46:01.041636Z	    category->{
2025-09-16T23:46:01.041795Z	      name,
2025-09-16T23:46:01.041901Z	      "slug": slug.current
2025-09-16T23:46:01.041994Z	    },
2025-09-16T23:46:01.042085Z	    pricing{
2025-09-16T23:46:01.042188Z	      currency,
2025-09-16T23:46:01.042278Z	      tiers[]{
2025-09-16T23:46:01.042392Z	        quantity,
2025-09-16T23:46:01.042498Z	        price,
2025-09-16T23:46:01.042595Z	        unit
2025-09-16T23:46:01.042803Z	      },
2025-09-16T23:46:01.042959Z	      moq,
2025-09-16T23:46:01.043106Z	      leadTime,
2025-09-16T23:46:01.04321Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.043303Z	      "price": tiers[0].price,
2025-09-16T23:46:01.043396Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.043555Z	    },
2025-09-16T23:46:01.043653Z	    inventory{
2025-09-16T23:46:01.043821Z	      quantity,
2025-09-16T23:46:01.043926Z	      status,
2025-09-16T23:46:01.04406Z	      warehouse,
2025-09-16T23:46:01.044159Z	      lastUpdated,
2025-09-16T23:46:01.044269Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.044428Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.044591Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.044718Z	    },
2025-09-16T23:46:01.044843Z	    isActive,
2025-09-16T23:46:01.044937Z	    isFeatured,
2025-09-16T23:46:01.045038Z	    isNew,
2025-09-16T23:46:01.045178Z	    _createdAt,
2025-09-16T23:46:01.045274Z	    _updatedAt
2025-09-16T23:46:01.045396Z	  
2025-09-16T23:46:01.045495Z	      },
2025-09-16T23:46:01.045605Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:46:01.045725Z	    }
2025-09-16T23:46:01.045845Z	  
2025-09-16T23:46:01.04596Z	Query parameters: {
2025-09-16T23:46:01.046053Z	  limit: 8,
2025-09-16T23:46:01.046142Z	  offset: 0,
2025-09-16T23:46:01.046242Z	  category: undefined,
2025-09-16T23:46:01.046386Z	  brand: 'littelfuse',
2025-09-16T23:46:01.046502Z	  featured: undefined
2025-09-16T23:46:01.046639Z	}
2025-09-16T23:46:01.046764Z	Fetching solutions with query: 
2025-09-16T23:46:01.046868Z	    {
2025-09-16T23:46:01.046984Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.04708Z	        
2025-09-16T23:46:01.047173Z	    _id,
2025-09-16T23:46:01.047316Z	    title,
2025-09-16T23:46:01.047415Z	    "slug": slug.current,
2025-09-16T23:46:01.047567Z	    summary,
2025-09-16T23:46:01.04769Z	    description,
2025-09-16T23:46:01.047799Z	    coverImage,
2025-09-16T23:46:01.04792Z	    primaryBrand->{
2025-09-16T23:46:01.048011Z	      _id,
2025-09-16T23:46:01.048113Z	      name,
2025-09-16T23:46:01.048247Z	      "slug": slug.current,
2025-09-16T23:46:01.048351Z	      logo
2025-09-16T23:46:01.048498Z	    },
2025-09-16T23:46:01.048605Z	    relatedBrands[]->{
2025-09-16T23:46:01.048724Z	      _id,
2025-09-16T23:46:01.04882Z	      name,
2025-09-16T23:46:01.048909Z	      "slug": slug.current,
2025-09-16T23:46:01.048997Z	      logo
2025-09-16T23:46:01.04911Z	    },
2025-09-16T23:46:01.04921Z	    targetMarket,
2025-09-16T23:46:01.049304Z	    complexity,
2025-09-16T23:46:01.049398Z	    publishedAt,
2025-09-16T23:46:01.049548Z	    isPublished,
2025-09-16T23:46:01.049651Z	    isFeatured,
2025-09-16T23:46:01.049804Z	    viewCount,
2025-09-16T23:46:01.049921Z	    _createdAt,
2025-09-16T23:46:01.050024Z	    _updatedAt
2025-09-16T23:46:01.05017Z	  
2025-09-16T23:46:01.050276Z	      },
2025-09-16T23:46:01.050428Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:46:01.050558Z	    }
2025-09-16T23:46:01.05071Z	  
2025-09-16T23:46:01.050835Z	Query parameters: {
2025-09-16T23:46:01.050998Z	  limit: 4,
2025-09-16T23:46:01.051121Z	  offset: 0,
2025-09-16T23:46:01.05127Z	  targetMarket: undefined,
2025-09-16T23:46:01.051378Z	  brand: 'littelfuse',
2025-09-16T23:46:01.051512Z	  featured: undefined
2025-09-16T23:46:01.051615Z	}
2025-09-16T23:46:01.051853Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:46:01.051982Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:01.052136Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:01.052247Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-16T23:46:01.052354Z	Fetching products with query: 
2025-09-16T23:46:01.052464Z	    {
2025-09-16T23:46:01.052567Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.052662Z	        
2025-09-16T23:46:01.052791Z	    _id,
2025-09-16T23:46:01.052901Z	    _type,
2025-09-16T23:46:01.05301Z	    partNumber,
2025-09-16T23:46:01.05311Z	    "slug": slug.current,
2025-09-16T23:46:01.053208Z	    title,
2025-09-16T23:46:01.053308Z	    shortDescription,
2025-09-16T23:46:01.053397Z	    image,
2025-09-16T23:46:01.0535Z	    brand->{
2025-09-16T23:46:01.053604Z	      name,
2025-09-16T23:46:01.053716Z	      "slug": slug.current,
2025-09-16T23:46:01.053832Z	      logo
2025-09-16T23:46:01.053935Z	    },
2025-09-16T23:46:01.054032Z	    category->{
2025-09-16T23:46:01.05413Z	      name,
2025-09-16T23:46:01.054225Z	      "slug": slug.current
2025-09-16T23:46:01.054315Z	    },
2025-09-16T23:46:01.054412Z	    pricing{
2025-09-16T23:46:01.054523Z	      currency,
2025-09-16T23:46:01.054628Z	      tiers[]{
2025-09-16T23:46:01.054742Z	        quantity,
2025-09-16T23:46:01.054855Z	        price,
2025-09-16T23:46:01.054953Z	        unit
2025-09-16T23:46:01.055044Z	      },
2025-09-16T23:46:01.055154Z	      moq,
2025-09-16T23:46:01.055256Z	      leadTime,
2025-09-16T23:46:01.055355Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.055469Z	      "price": tiers[0].price,
2025-09-16T23:46:01.055576Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.055692Z	    },
2025-09-16T23:46:01.055801Z	    inventory{
2025-09-16T23:46:01.055935Z	      quantity,
2025-09-16T23:46:01.056034Z	      status,
2025-09-16T23:46:01.056162Z	      warehouse,
2025-09-16T23:46:01.056298Z	      lastUpdated,
2025-09-16T23:46:01.056409Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.056528Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.056641Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.056888Z	    },
2025-09-16T23:46:01.057033Z	    isActive,
2025-09-16T23:46:01.057217Z	    isFeatured,
2025-09-16T23:46:01.057304Z	    isNew,
2025-09-16T23:46:01.057452Z	    _createdAt,
2025-09-16T23:46:01.057622Z	    _updatedAt
2025-09-16T23:46:01.057749Z	  
2025-09-16T23:46:01.057825Z	      },
2025-09-16T23:46:01.057953Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-16T23:46:01.05805Z	    }
2025-09-16T23:46:01.058121Z	  
2025-09-16T23:46:01.058256Z	Query parameters: {
2025-09-16T23:46:01.058403Z	  limit: 8,
2025-09-16T23:46:01.058523Z	  offset: 0,
2025-09-16T23:46:01.058629Z	  category: undefined,
2025-09-16T23:46:01.058784Z	  brand: 'pi',
2025-09-16T23:46:01.058926Z	  featured: undefined
2025-09-16T23:46:01.059132Z	}
2025-09-16T23:46:01.059269Z	Fetching solutions with query: 
2025-09-16T23:46:01.059362Z	    {
2025-09-16T23:46:01.059483Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.059605Z	        
2025-09-16T23:46:01.059767Z	    _id,
2025-09-16T23:46:01.060348Z	    title,
2025-09-16T23:46:01.060452Z	    "slug": slug.current,
2025-09-16T23:46:01.060714Z	    summary,
2025-09-16T23:46:01.060878Z	    description,
2025-09-16T23:46:01.06099Z	    coverImage,
2025-09-16T23:46:01.061101Z	    primaryBrand->{
2025-09-16T23:46:01.06121Z	      _id,
2025-09-16T23:46:01.061318Z	      name,
2025-09-16T23:46:01.061451Z	      "slug": slug.current,
2025-09-16T23:46:01.061583Z	      logo
2025-09-16T23:46:01.061706Z	    },
2025-09-16T23:46:01.061814Z	    relatedBrands[]->{
2025-09-16T23:46:01.061914Z	      _id,
2025-09-16T23:46:01.062006Z	      name,
2025-09-16T23:46:01.062119Z	      "slug": slug.current,
2025-09-16T23:46:01.06222Z	      logo
2025-09-16T23:46:01.062312Z	    },
2025-09-16T23:46:01.06242Z	    targetMarket,
2025-09-16T23:46:01.062524Z	    complexity,
2025-09-16T23:46:01.062631Z	    publishedAt,
2025-09-16T23:46:01.062754Z	    isPublished,
2025-09-16T23:46:01.06288Z	    isFeatured,
2025-09-16T23:46:01.062985Z	    viewCount,
2025-09-16T23:46:01.063111Z	    _createdAt,
2025-09-16T23:46:01.063217Z	    _updatedAt
2025-09-16T23:46:01.063326Z	  
2025-09-16T23:46:01.063651Z	      },
2025-09-16T23:46:01.063855Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-16T23:46:01.063933Z	    }
2025-09-16T23:46:01.06405Z	  
2025-09-16T23:46:01.064166Z	Query parameters: {
2025-09-16T23:46:01.064252Z	  limit: 4,
2025-09-16T23:46:01.06442Z	  offset: 0,
2025-09-16T23:46:01.064505Z	  targetMarket: undefined,
2025-09-16T23:46:01.064585Z	  brand: 'pi',
2025-09-16T23:46:01.064767Z	  featured: undefined
2025-09-16T23:46:01.064858Z	}
2025-09-16T23:46:01.064939Z	✅ [getBrandData] Found brand: PI
2025-09-16T23:46:01.065058Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:01.065255Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:01.06551Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-16T23:46:01.065636Z	Fetching products with query: 
2025-09-16T23:46:01.065816Z	    {
2025-09-16T23:46:01.065939Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.06622Z	        
2025-09-16T23:46:01.066316Z	    _id,
2025-09-16T23:46:01.066597Z	    _type,
2025-09-16T23:46:01.066689Z	    partNumber,
2025-09-16T23:46:01.066923Z	    "slug": slug.current,
2025-09-16T23:46:01.067044Z	    title,
2025-09-16T23:46:01.067147Z	    shortDescription,
2025-09-16T23:46:01.067254Z	    image,
2025-09-16T23:46:01.067411Z	    brand->{
2025-09-16T23:46:01.067526Z	      name,
2025-09-16T23:46:01.067656Z	      "slug": slug.current,
2025-09-16T23:46:01.067803Z	      logo
2025-09-16T23:46:01.067939Z	    },
2025-09-16T23:46:01.068028Z	    category->{
2025-09-16T23:46:01.068089Z	      name,
2025-09-16T23:46:01.068257Z	      "slug": slug.current
2025-09-16T23:46:01.068332Z	    },
2025-09-16T23:46:01.068443Z	    pricing{
2025-09-16T23:46:01.068568Z	      currency,
2025-09-16T23:46:01.068746Z	      tiers[]{
2025-09-16T23:46:01.06882Z	        quantity,
2025-09-16T23:46:01.068965Z	        price,
2025-09-16T23:46:01.069084Z	        unit
2025-09-16T23:46:01.069207Z	      },
2025-09-16T23:46:01.069314Z	      moq,
2025-09-16T23:46:01.069559Z	      leadTime,
2025-09-16T23:46:01.069732Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.069823Z	      "price": tiers[0].price,
2025-09-16T23:46:01.069961Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.070076Z	    },
2025-09-16T23:46:01.070228Z	    inventory{
2025-09-16T23:46:01.070367Z	      quantity,
2025-09-16T23:46:01.070475Z	      status,
2025-09-16T23:46:01.070541Z	      warehouse,
2025-09-16T23:46:01.070597Z	      lastUpdated,
2025-09-16T23:46:01.070652Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.070813Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.070961Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.071134Z	    },
2025-09-16T23:46:01.071282Z	    isActive,
2025-09-16T23:46:01.071402Z	    isFeatured,
2025-09-16T23:46:01.071547Z	    isNew,
2025-09-16T23:46:01.071734Z	    _createdAt,
2025-09-16T23:46:01.071855Z	    _updatedAt
2025-09-16T23:46:01.072024Z	  
2025-09-16T23:46:01.072112Z	      },
2025-09-16T23:46:01.072215Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-16T23:46:01.072366Z	    }
2025-09-16T23:46:01.072484Z	  
2025-09-16T23:46:01.072594Z	Query parameters: {
2025-09-16T23:46:01.072752Z	  limit: 8,
2025-09-16T23:46:01.072858Z	  offset: 0,
2025-09-16T23:46:01.07297Z	  category: undefined,
2025-09-16T23:46:01.073077Z	  brand: 'pi',
2025-09-16T23:46:01.073182Z	  featured: undefined
2025-09-16T23:46:01.073288Z	}
2025-09-16T23:46:01.073454Z	Fetching solutions with query: 
2025-09-16T23:46:01.073616Z	    {
2025-09-16T23:46:01.073739Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.073854Z	        
2025-09-16T23:46:01.074036Z	    _id,
2025-09-16T23:46:01.074154Z	    title,
2025-09-16T23:46:01.074256Z	    "slug": slug.current,
2025-09-16T23:46:01.074365Z	    summary,
2025-09-16T23:46:01.074475Z	    description,
2025-09-16T23:46:01.074581Z	    coverImage,
2025-09-16T23:46:01.074695Z	    primaryBrand->{
2025-09-16T23:46:01.074946Z	      _id,
2025-09-16T23:46:01.075054Z	      name,
2025-09-16T23:46:01.075158Z	      "slug": slug.current,
2025-09-16T23:46:01.075254Z	      logo
2025-09-16T23:46:01.075356Z	    },
2025-09-16T23:46:01.075463Z	    relatedBrands[]->{
2025-09-16T23:46:01.075569Z	      _id,
2025-09-16T23:46:01.07567Z	      name,
2025-09-16T23:46:01.075931Z	      "slug": slug.current,
2025-09-16T23:46:01.076029Z	      logo
2025-09-16T23:46:01.076088Z	    },
2025-09-16T23:46:01.076229Z	    targetMarket,
2025-09-16T23:46:01.076311Z	    complexity,
2025-09-16T23:46:01.076456Z	    publishedAt,
2025-09-16T23:46:01.076528Z	    isPublished,
2025-09-16T23:46:01.07659Z	    isFeatured,
2025-09-16T23:46:01.076691Z	    viewCount,
2025-09-16T23:46:01.076858Z	    _createdAt,
2025-09-16T23:46:01.077002Z	    _updatedAt
2025-09-16T23:46:01.077081Z	  
2025-09-16T23:46:01.077148Z	      },
2025-09-16T23:46:01.077341Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-16T23:46:01.077428Z	    }
2025-09-16T23:46:01.077593Z	  
2025-09-16T23:46:01.077722Z	Query parameters: {
2025-09-16T23:46:01.077829Z	  limit: 4,
2025-09-16T23:46:01.077927Z	  offset: 0,
2025-09-16T23:46:01.078027Z	  targetMarket: undefined,
2025-09-16T23:46:01.078298Z	  brand: 'pi',
2025-09-16T23:46:01.078381Z	  featured: undefined
2025-09-16T23:46:01.078456Z	}
2025-09-16T23:46:01.078737Z	✅ [getBrandData] Found brand: PI
2025-09-16T23:46:01.078891Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:01.07903Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:01.079201Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:46:01.079302Z	Fetching products with query: 
2025-09-16T23:46:01.079448Z	    {
2025-09-16T23:46:01.079573Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.079698Z	        
2025-09-16T23:46:01.079804Z	    _id,
2025-09-16T23:46:01.079899Z	    _type,
2025-09-16T23:46:01.079989Z	    partNumber,
2025-09-16T23:46:01.080081Z	    "slug": slug.current,
2025-09-16T23:46:01.080186Z	    title,
2025-09-16T23:46:01.080296Z	    shortDescription,
2025-09-16T23:46:01.080395Z	    image,
2025-09-16T23:46:01.080503Z	    brand->{
2025-09-16T23:46:01.080661Z	      name,
2025-09-16T23:46:01.080776Z	      "slug": slug.current,
2025-09-16T23:46:01.080874Z	      logo
2025-09-16T23:46:01.080977Z	    },
2025-09-16T23:46:01.081069Z	    category->{
2025-09-16T23:46:01.081155Z	      name,
2025-09-16T23:46:01.081273Z	      "slug": slug.current
2025-09-16T23:46:01.08136Z	    },
2025-09-16T23:46:01.081486Z	    pricing{
2025-09-16T23:46:01.081607Z	      currency,
2025-09-16T23:46:01.081719Z	      tiers[]{
2025-09-16T23:46:01.081819Z	        quantity,
2025-09-16T23:46:01.08192Z	        price,
2025-09-16T23:46:01.082053Z	        unit
2025-09-16T23:46:01.082218Z	      },
2025-09-16T23:46:01.082315Z	      moq,
2025-09-16T23:46:01.082453Z	      leadTime,
2025-09-16T23:46:01.082531Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.082734Z	      "price": tiers[0].price,
2025-09-16T23:46:01.082854Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.082945Z	    },
2025-09-16T23:46:01.083036Z	    inventory{
2025-09-16T23:46:01.083183Z	      quantity,
2025-09-16T23:46:01.083321Z	      status,
2025-09-16T23:46:01.083445Z	      warehouse,
2025-09-16T23:46:01.083579Z	      lastUpdated,
2025-09-16T23:46:01.083694Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.083794Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.083889Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.083989Z	    },
2025-09-16T23:46:01.084074Z	    isActive,
2025-09-16T23:46:01.084308Z	    isFeatured,
2025-09-16T23:46:01.08437Z	    isNew,
2025-09-16T23:46:01.08463Z	    _createdAt,
2025-09-16T23:46:01.084744Z	    _updatedAt
2025-09-16T23:46:01.085011Z	  
2025-09-16T23:46:01.085087Z	      },
2025-09-16T23:46:01.085147Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:46:01.085393Z	    }
2025-09-16T23:46:01.085506Z	  
2025-09-16T23:46:01.085762Z	Query parameters: {
2025-09-16T23:46:01.085864Z	  limit: 8,
2025-09-16T23:46:01.085995Z	  offset: 0,
2025-09-16T23:46:01.086122Z	  category: undefined,
2025-09-16T23:46:01.086197Z	  brand: 'cree',
2025-09-16T23:46:01.08632Z	  featured: undefined
2025-09-16T23:46:01.0864Z	}
2025-09-16T23:46:01.086495Z	Fetching solutions with query: 
2025-09-16T23:46:01.086599Z	    {
2025-09-16T23:46:01.086716Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.086831Z	        
2025-09-16T23:46:01.086982Z	    _id,
2025-09-16T23:46:01.087095Z	    title,
2025-09-16T23:46:01.087191Z	    "slug": slug.current,
2025-09-16T23:46:01.087281Z	    summary,
2025-09-16T23:46:01.087459Z	    description,
2025-09-16T23:46:01.087535Z	    coverImage,
2025-09-16T23:46:01.087596Z	    primaryBrand->{
2025-09-16T23:46:01.087765Z	      _id,
2025-09-16T23:46:01.087837Z	      name,
2025-09-16T23:46:01.087892Z	      "slug": slug.current,
2025-09-16T23:46:01.088006Z	      logo
2025-09-16T23:46:01.088084Z	    },
2025-09-16T23:46:01.088141Z	    relatedBrands[]->{
2025-09-16T23:46:01.088269Z	      _id,
2025-09-16T23:46:01.088342Z	      name,
2025-09-16T23:46:01.088399Z	      "slug": slug.current,
2025-09-16T23:46:01.088518Z	      logo
2025-09-16T23:46:01.088602Z	    },
2025-09-16T23:46:01.088723Z	    targetMarket,
2025-09-16T23:46:01.088838Z	    complexity,
2025-09-16T23:46:01.088956Z	    publishedAt,
2025-09-16T23:46:01.089071Z	    isPublished,
2025-09-16T23:46:01.089173Z	    isFeatured,
2025-09-16T23:46:01.089266Z	    viewCount,
2025-09-16T23:46:01.089363Z	    _createdAt,
2025-09-16T23:46:01.089461Z	    _updatedAt
2025-09-16T23:46:01.089618Z	  
2025-09-16T23:46:01.08975Z	      },
2025-09-16T23:46:01.089849Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:46:01.08994Z	    }
2025-09-16T23:46:01.090077Z	  
2025-09-16T23:46:01.090176Z	Query parameters: {
2025-09-16T23:46:01.090328Z	  limit: 4,
2025-09-16T23:46:01.090476Z	  offset: 0,
2025-09-16T23:46:01.090625Z	  targetMarket: undefined,
2025-09-16T23:46:01.090739Z	  brand: 'cree',
2025-09-16T23:46:01.090845Z	  featured: undefined
2025-09-16T23:46:01.090984Z	}
2025-09-16T23:46:01.091083Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:46:01.091184Z	Products fetch result: {
2025-09-16T23:46:01.091289Z	  totalProducts: 4,
2025-09-16T23:46:01.091385Z	  fetchedProducts: 4,
2025-09-16T23:46:01.091498Z	  firstProduct: {
2025-09-16T23:46:01.091602Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:46:01.091714Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:46:01.091813Z	    _type: 'product',
2025-09-16T23:46:01.091905Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:46:01.092023Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:46:01.092148Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:01.092259Z	    image: null,
2025-09-16T23:46:01.09237Z	    inventory: {
2025-09-16T23:46:01.092481Z	      inStock: true,
2025-09-16T23:46:01.092593Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:46:01.092737Z	      quantity: 0,
2025-09-16T23:46:01.092903Z	      status: 'in_stock',
2025-09-16T23:46:01.093Z	      warehouse: null
2025-09-16T23:46:01.09311Z	    },
2025-09-16T23:46:01.093219Z	    isActive: true,
2025-09-16T23:46:01.093322Z	    isFeatured: false,
2025-09-16T23:46:01.093425Z	    isNew: false,
2025-09-16T23:46:01.093504Z	    partNumber: '11111',
2025-09-16T23:46:01.093739Z	    pricing: {
2025-09-16T23:46:01.093831Z	      currency: 'CNY',
2025-09-16T23:46:01.093912Z	      leadTime: null,
2025-09-16T23:46:01.094004Z	      moq: null,
2025-09-16T23:46:01.094105Z	      price: null,
2025-09-16T23:46:01.094197Z	      tiers: null
2025-09-16T23:46:01.0943Z	    },
2025-09-16T23:46:01.094395Z	    shortDescription: '11111',
2025-09-16T23:46:01.0945Z	    slug: 'sic mosfet',
2025-09-16T23:46:01.094606Z	    title: '111111'
2025-09-16T23:46:01.094716Z	  }
2025-09-16T23:46:01.09482Z	}
2025-09-16T23:46:01.09492Z	Solutions fetch result: {
2025-09-16T23:46:01.09502Z	  totalSolutions: 6,
2025-09-16T23:46:01.095187Z	  fetchedSolutions: 4,
2025-09-16T23:46:01.095299Z	  firstSolution: {
2025-09-16T23:46:01.095395Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:46:01.095471Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:46:01.09556Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:46:01.095666Z	    complexity: 'medium',
2025-09-16T23:46:01.095803Z	    coverImage: null,
2025-09-16T23:46:01.095951Z	    description: [ [Object] ],
2025-09-16T23:46:01.096054Z	    isFeatured: false,
2025-09-16T23:46:01.096222Z	    isPublished: true,
2025-09-16T23:46:01.096373Z	    primaryBrand: {
2025-09-16T23:46:01.096571Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:46:01.096649Z	      logo: null,
2025-09-16T23:46:01.096779Z	      name: 'CREE',
2025-09-16T23:46:01.096938Z	      slug: 'cree'
2025-09-16T23:46:01.097045Z	    },
2025-09-16T23:46:01.097138Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:46:01.097247Z	    relatedBrands: null,
2025-09-16T23:46:01.097354Z	    slug: '11111',
2025-09-16T23:46:01.097459Z	    summary: '11111',
2025-09-16T23:46:01.097562Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:01.097703Z	    title: '11111',
2025-09-16T23:46:01.097848Z	    viewCount: 0
2025-09-16T23:46:01.098006Z	  }
2025-09-16T23:46:01.098132Z	}
2025-09-16T23:46:01.098246Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:46:01.0984Z	Fetching products with query: 
2025-09-16T23:46:01.098502Z	    {
2025-09-16T23:46:01.098718Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.098814Z	        
2025-09-16T23:46:01.098994Z	    _id,
2025-09-16T23:46:01.099078Z	    _type,
2025-09-16T23:46:01.099206Z	    partNumber,
2025-09-16T23:46:01.099372Z	    "slug": slug.current,
2025-09-16T23:46:01.099529Z	    title,
2025-09-16T23:46:01.099658Z	    shortDescription,
2025-09-16T23:46:01.099792Z	    image,
2025-09-16T23:46:01.099922Z	    brand->{
2025-09-16T23:46:01.100037Z	      name,
2025-09-16T23:46:01.100167Z	      "slug": slug.current,
2025-09-16T23:46:01.100324Z	      logo
2025-09-16T23:46:01.100476Z	    },
2025-09-16T23:46:01.100624Z	    category->{
2025-09-16T23:46:01.100769Z	      name,
2025-09-16T23:46:01.10092Z	      "slug": slug.current
2025-09-16T23:46:01.101067Z	    },
2025-09-16T23:46:01.101207Z	    pricing{
2025-09-16T23:46:01.101364Z	      currency,
2025-09-16T23:46:01.101524Z	      tiers[]{
2025-09-16T23:46:01.10166Z	        quantity,
2025-09-16T23:46:01.101828Z	        price,
2025-09-16T23:46:01.101995Z	        unit
2025-09-16T23:46:01.102147Z	      },
2025-09-16T23:46:01.102295Z	      moq,
2025-09-16T23:46:01.102527Z	      leadTime,
2025-09-16T23:46:01.102685Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.102839Z	      "price": tiers[0].price,
2025-09-16T23:46:01.102961Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.103081Z	    },
2025-09-16T23:46:01.103147Z	    inventory{
2025-09-16T23:46:01.103437Z	      quantity,
2025-09-16T23:46:01.103524Z	      status,
2025-09-16T23:46:01.103666Z	      warehouse,
2025-09-16T23:46:01.103769Z	      lastUpdated,
2025-09-16T23:46:01.103891Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.104022Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.104146Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.10425Z	    },
2025-09-16T23:46:01.104355Z	    isActive,
2025-09-16T23:46:01.104464Z	    isFeatured,
2025-09-16T23:46:01.104562Z	    isNew,
2025-09-16T23:46:01.104656Z	    _createdAt,
2025-09-16T23:46:01.104769Z	    _updatedAt
2025-09-16T23:46:01.104863Z	  
2025-09-16T23:46:01.104976Z	      },
2025-09-16T23:46:01.10513Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:46:01.105281Z	    }
2025-09-16T23:46:01.105433Z	  
2025-09-16T23:46:01.105513Z	Query parameters: {
2025-09-16T23:46:01.105592Z	  limit: 8,
2025-09-16T23:46:01.105668Z	  offset: 0,
2025-09-16T23:46:01.105792Z	  category: undefined,
2025-09-16T23:46:01.105956Z	  brand: 'cree',
2025-09-16T23:46:01.106076Z	  featured: undefined
2025-09-16T23:46:01.106233Z	}
2025-09-16T23:46:01.10634Z	Fetching solutions with query: 
2025-09-16T23:46:01.106523Z	    {
2025-09-16T23:46:01.106653Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.106796Z	        
2025-09-16T23:46:01.106897Z	    _id,
2025-09-16T23:46:01.107062Z	    title,
2025-09-16T23:46:01.107141Z	    "slug": slug.current,
2025-09-16T23:46:01.107282Z	    summary,
2025-09-16T23:46:01.10742Z	    description,
2025-09-16T23:46:01.107561Z	    coverImage,
2025-09-16T23:46:01.107634Z	    primaryBrand->{
2025-09-16T23:46:01.107777Z	      _id,
2025-09-16T23:46:01.107856Z	      name,
2025-09-16T23:46:01.107982Z	      "slug": slug.current,
2025-09-16T23:46:01.108303Z	      logo
2025-09-16T23:46:01.108474Z	    },
2025-09-16T23:46:01.108562Z	    relatedBrands[]->{
2025-09-16T23:46:01.108778Z	      _id,
2025-09-16T23:46:01.108863Z	      name,
2025-09-16T23:46:01.108984Z	      "slug": slug.current,
2025-09-16T23:46:01.109117Z	      logo
2025-09-16T23:46:01.109236Z	    },
2025-09-16T23:46:01.1093Z	    targetMarket,
2025-09-16T23:46:01.109392Z	    complexity,
2025-09-16T23:46:01.109518Z	    publishedAt,
2025-09-16T23:46:01.109582Z	    isPublished,
2025-09-16T23:46:01.109702Z	    isFeatured,
2025-09-16T23:46:01.109833Z	    viewCount,
2025-09-16T23:46:01.109948Z	    _createdAt,
2025-09-16T23:46:01.110068Z	    _updatedAt
2025-09-16T23:46:01.110139Z	  
2025-09-16T23:46:01.110238Z	      },
2025-09-16T23:46:01.110376Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:46:01.110501Z	    }
2025-09-16T23:46:01.110793Z	  
2025-09-16T23:46:01.111015Z	Query parameters: {
2025-09-16T23:46:01.111096Z	  limit: 4,
2025-09-16T23:46:01.111222Z	  offset: 0,
2025-09-16T23:46:01.111367Z	  targetMarket: undefined,
2025-09-16T23:46:01.111458Z	  brand: 'cree',
2025-09-16T23:46:01.111594Z	  featured: undefined
2025-09-16T23:46:01.111718Z	}
2025-09-16T23:46:01.111825Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:46:01.111929Z	Products fetch result: {
2025-09-16T23:46:01.112169Z	  totalProducts: 4,
2025-09-16T23:46:01.112273Z	  fetchedProducts: 4,
2025-09-16T23:46:01.112478Z	  firstProduct: {
2025-09-16T23:46:01.112715Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:46:01.112952Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:46:01.113044Z	    _type: 'product',
2025-09-16T23:46:01.11327Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:46:01.113359Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:46:01.113491Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:01.113628Z	    image: null,
2025-09-16T23:46:01.113779Z	    inventory: {
2025-09-16T23:46:01.113899Z	      inStock: true,
2025-09-16T23:46:01.114023Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:46:01.11414Z	      quantity: 0,
2025-09-16T23:46:01.114258Z	      status: 'in_stock',
2025-09-16T23:46:01.114372Z	      warehouse: null
2025-09-16T23:46:01.114488Z	    },
2025-09-16T23:46:01.114564Z	    isActive: true,
2025-09-16T23:46:01.114671Z	    isFeatured: false,
2025-09-16T23:46:01.114794Z	    isNew: false,
2025-09-16T23:46:01.114886Z	    partNumber: '11111',
2025-09-16T23:46:01.11498Z	    pricing: {
2025-09-16T23:46:01.115086Z	      currency: 'CNY',
2025-09-16T23:46:01.115191Z	      leadTime: null,
2025-09-16T23:46:01.115285Z	      moq: null,
2025-09-16T23:46:01.115358Z	      price: null,
2025-09-16T23:46:01.115434Z	      tiers: null
2025-09-16T23:46:01.115579Z	    },
2025-09-16T23:46:01.115705Z	    shortDescription: '11111',
2025-09-16T23:46:01.115823Z	    slug: 'sic mosfet',
2025-09-16T23:46:01.115881Z	    title: '111111'
2025-09-16T23:46:01.116016Z	  }
2025-09-16T23:46:01.116085Z	}
2025-09-16T23:46:01.116142Z	Solutions fetch result: {
2025-09-16T23:46:01.116263Z	  totalSolutions: 6,
2025-09-16T23:46:01.116505Z	  fetchedSolutions: 4,
2025-09-16T23:46:01.116608Z	  firstSolution: {
2025-09-16T23:46:01.116754Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:46:01.116906Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:46:01.116989Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:46:01.117139Z	    complexity: 'medium',
2025-09-16T23:46:01.117213Z	    coverImage: null,
2025-09-16T23:46:01.117334Z	    description: [ [Object] ],
2025-09-16T23:46:01.117488Z	    isFeatured: false,
2025-09-16T23:46:01.117567Z	    isPublished: true,
2025-09-16T23:46:01.117718Z	    primaryBrand: {
2025-09-16T23:46:01.117843Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:46:01.117994Z	      logo: null,
2025-09-16T23:46:01.118072Z	      name: 'CREE',
2025-09-16T23:46:01.118203Z	      slug: 'cree'
2025-09-16T23:46:01.118287Z	    },
2025-09-16T23:46:01.118416Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:46:01.118588Z	    relatedBrands: null,
2025-09-16T23:46:01.118738Z	    slug: '11111',
2025-09-16T23:46:01.118824Z	    summary: '11111',
2025-09-16T23:46:01.118884Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:01.118942Z	    title: '11111',
2025-09-16T23:46:01.119003Z	    viewCount: 0
2025-09-16T23:46:01.119064Z	  }
2025-09-16T23:46:01.119127Z	}
2025-09-16T23:46:01.119197Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-16T23:46:01.119287Z	Fetching products with query: 
2025-09-16T23:46:01.119349Z	    {
2025-09-16T23:46:01.119411Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.119495Z	        
2025-09-16T23:46:01.119558Z	    _id,
2025-09-16T23:46:01.119622Z	    _type,
2025-09-16T23:46:01.119702Z	    partNumber,
2025-09-16T23:46:01.119766Z	    "slug": slug.current,
2025-09-16T23:46:01.119822Z	    title,
2025-09-16T23:46:01.119878Z	    shortDescription,
2025-09-16T23:46:01.120626Z	    image,
2025-09-16T23:46:01.120844Z	    brand->{
2025-09-16T23:46:01.120926Z	      name,
2025-09-16T23:46:01.121102Z	      "slug": slug.current,
2025-09-16T23:46:01.12118Z	      logo
2025-09-16T23:46:01.121279Z	    },
2025-09-16T23:46:01.121383Z	    category->{
2025-09-16T23:46:01.121491Z	      name,
2025-09-16T23:46:01.121668Z	      "slug": slug.current
2025-09-16T23:46:01.121807Z	    },
2025-09-16T23:46:01.121929Z	    pricing{
2025-09-16T23:46:01.122023Z	      currency,
2025-09-16T23:46:01.122129Z	      tiers[]{
2025-09-16T23:46:01.122245Z	        quantity,
2025-09-16T23:46:01.122351Z	        price,
2025-09-16T23:46:01.122462Z	        unit
2025-09-16T23:46:01.122537Z	      },
2025-09-16T23:46:01.122635Z	      moq,
2025-09-16T23:46:01.122806Z	      leadTime,
2025-09-16T23:46:01.122926Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.123036Z	      "price": tiers[0].price,
2025-09-16T23:46:01.12318Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.123273Z	    },
2025-09-16T23:46:01.123439Z	    inventory{
2025-09-16T23:46:01.123545Z	      quantity,
2025-09-16T23:46:01.123646Z	      status,
2025-09-16T23:46:01.123826Z	      warehouse,
2025-09-16T23:46:01.12394Z	      lastUpdated,
2025-09-16T23:46:01.124093Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.124173Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.124259Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.124432Z	    },
2025-09-16T23:46:01.124525Z	    isActive,
2025-09-16T23:46:01.124629Z	    isFeatured,
2025-09-16T23:46:01.124754Z	    isNew,
2025-09-16T23:46:01.124857Z	    _createdAt,
2025-09-16T23:46:01.124961Z	    _updatedAt
2025-09-16T23:46:01.125074Z	  
2025-09-16T23:46:01.125498Z	      },
2025-09-16T23:46:01.125601Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-16T23:46:01.125698Z	    }
2025-09-16T23:46:01.128995Z	  
2025-09-16T23:46:01.129955Z	Query parameters: {
2025-09-16T23:46:01.130089Z	  limit: 8,
2025-09-16T23:46:01.130154Z	  offset: 0,
2025-09-16T23:46:01.130209Z	  category: undefined,
2025-09-16T23:46:01.130264Z	  brand: 'sanrex',
2025-09-16T23:46:01.130317Z	  featured: undefined
2025-09-16T23:46:01.13037Z	}
2025-09-16T23:46:01.130428Z	Fetching solutions with query: 
2025-09-16T23:46:01.130482Z	    {
2025-09-16T23:46:01.130561Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.130629Z	        
2025-09-16T23:46:01.130735Z	    _id,
2025-09-16T23:46:01.1308Z	    title,
2025-09-16T23:46:01.13086Z	    "slug": slug.current,
2025-09-16T23:46:01.130914Z	    summary,
2025-09-16T23:46:01.130967Z	    description,
2025-09-16T23:46:01.131019Z	    coverImage,
2025-09-16T23:46:01.131079Z	    primaryBrand->{
2025-09-16T23:46:01.131152Z	      _id,
2025-09-16T23:46:01.131254Z	      name,
2025-09-16T23:46:01.131351Z	      "slug": slug.current,
2025-09-16T23:46:01.131458Z	      logo
2025-09-16T23:46:01.13156Z	    },
2025-09-16T23:46:01.131684Z	    relatedBrands[]->{
2025-09-16T23:46:01.131791Z	      _id,
2025-09-16T23:46:01.131888Z	      name,
2025-09-16T23:46:01.131991Z	      "slug": slug.current,
2025-09-16T23:46:01.132103Z	      logo
2025-09-16T23:46:01.132211Z	    },
2025-09-16T23:46:01.132307Z	    targetMarket,
2025-09-16T23:46:01.132415Z	    complexity,
2025-09-16T23:46:01.132519Z	    publishedAt,
2025-09-16T23:46:01.132616Z	    isPublished,
2025-09-16T23:46:01.132734Z	    isFeatured,
2025-09-16T23:46:01.132841Z	    viewCount,
2025-09-16T23:46:01.13295Z	    _createdAt,
2025-09-16T23:46:01.133054Z	    _updatedAt
2025-09-16T23:46:01.133146Z	  
2025-09-16T23:46:01.133241Z	      },
2025-09-16T23:46:01.133339Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-16T23:46:01.133512Z	    }
2025-09-16T23:46:01.133598Z	  
2025-09-16T23:46:01.133689Z	Query parameters: {
2025-09-16T23:46:01.133883Z	  limit: 4,
2025-09-16T23:46:01.134041Z	  offset: 0,
2025-09-16T23:46:01.134181Z	  targetMarket: undefined,
2025-09-16T23:46:01.134332Z	  brand: 'sanrex',
2025-09-16T23:46:01.134484Z	  featured: undefined
2025-09-16T23:46:01.134585Z	}
2025-09-16T23:46:01.134752Z	✅ [getBrandData] Found brand: Sanrex
2025-09-16T23:46:01.134844Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:01.134915Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:01.135035Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-16T23:46:01.135127Z	Fetching products with query: 
2025-09-16T23:46:01.135225Z	    {
2025-09-16T23:46:01.135332Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.135638Z	        
2025-09-16T23:46:01.135893Z	    _id,
2025-09-16T23:46:01.136065Z	    _type,
2025-09-16T23:46:01.136178Z	    partNumber,
2025-09-16T23:46:01.136347Z	    "slug": slug.current,
2025-09-16T23:46:01.136477Z	    title,
2025-09-16T23:46:01.136646Z	    shortDescription,
2025-09-16T23:46:01.136791Z	    image,
2025-09-16T23:46:01.136911Z	    brand->{
2025-09-16T23:46:01.13701Z	      name,
2025-09-16T23:46:01.137129Z	      "slug": slug.current,
2025-09-16T23:46:01.137213Z	      logo
2025-09-16T23:46:01.137302Z	    },
2025-09-16T23:46:01.137396Z	    category->{
2025-09-16T23:46:01.137488Z	      name,
2025-09-16T23:46:01.137551Z	      "slug": slug.current
2025-09-16T23:46:01.137607Z	    },
2025-09-16T23:46:01.137667Z	    pricing{
2025-09-16T23:46:01.137764Z	      currency,
2025-09-16T23:46:01.137843Z	      tiers[]{
2025-09-16T23:46:01.137923Z	        quantity,
2025-09-16T23:46:01.138008Z	        price,
2025-09-16T23:46:01.138156Z	        unit
2025-09-16T23:46:01.13826Z	      },
2025-09-16T23:46:01.138406Z	      moq,
2025-09-16T23:46:01.138561Z	      leadTime,
2025-09-16T23:46:01.138729Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.138821Z	      "price": tiers[0].price,
2025-09-16T23:46:01.138891Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.139034Z	    },
2025-09-16T23:46:01.139125Z	    inventory{
2025-09-16T23:46:01.13925Z	      quantity,
2025-09-16T23:46:01.139388Z	      status,
2025-09-16T23:46:01.139504Z	      warehouse,
2025-09-16T23:46:01.139651Z	      lastUpdated,
2025-09-16T23:46:01.13976Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.139879Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.139996Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.140106Z	    },
2025-09-16T23:46:01.140227Z	    isActive,
2025-09-16T23:46:01.140359Z	    isFeatured,
2025-09-16T23:46:01.140482Z	    isNew,
2025-09-16T23:46:01.140647Z	    _createdAt,
2025-09-16T23:46:01.140771Z	    _updatedAt
2025-09-16T23:46:01.140931Z	  
2025-09-16T23:46:01.14102Z	      },
2025-09-16T23:46:01.141178Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-16T23:46:01.141306Z	    }
2025-09-16T23:46:01.141447Z	  
2025-09-16T23:46:01.141523Z	Query parameters: {
2025-09-16T23:46:01.141688Z	  limit: 8,
2025-09-16T23:46:01.141853Z	  offset: 0,
2025-09-16T23:46:01.141978Z	  category: undefined,
2025-09-16T23:46:01.142061Z	  brand: 'sanrex',
2025-09-16T23:46:01.142252Z	  featured: undefined
2025-09-16T23:46:01.142364Z	}
2025-09-16T23:46:01.142471Z	Fetching solutions with query: 
2025-09-16T23:46:01.142582Z	    {
2025-09-16T23:46:01.142708Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.142839Z	        
2025-09-16T23:46:01.142942Z	    _id,
2025-09-16T23:46:01.14306Z	    title,
2025-09-16T23:46:01.143162Z	    "slug": slug.current,
2025-09-16T23:46:01.143257Z	    summary,
2025-09-16T23:46:01.143361Z	    description,
2025-09-16T23:46:01.143458Z	    coverImage,
2025-09-16T23:46:01.143557Z	    primaryBrand->{
2025-09-16T23:46:01.143655Z	      _id,
2025-09-16T23:46:01.143778Z	      name,
2025-09-16T23:46:01.143883Z	      "slug": slug.current,
2025-09-16T23:46:01.143975Z	      logo
2025-09-16T23:46:01.144051Z	    },
2025-09-16T23:46:01.144225Z	    relatedBrands[]->{
2025-09-16T23:46:01.144349Z	      _id,
2025-09-16T23:46:01.144488Z	      name,
2025-09-16T23:46:01.14465Z	      "slug": slug.current,
2025-09-16T23:46:01.144834Z	      logo
2025-09-16T23:46:01.14496Z	    },
2025-09-16T23:46:01.145117Z	    targetMarket,
2025-09-16T23:46:01.145268Z	    complexity,
2025-09-16T23:46:01.145385Z	    publishedAt,
2025-09-16T23:46:01.145553Z	    isPublished,
2025-09-16T23:46:01.145687Z	    isFeatured,
2025-09-16T23:46:01.145828Z	    viewCount,
2025-09-16T23:46:01.145996Z	    _createdAt,
2025-09-16T23:46:01.146105Z	    _updatedAt
2025-09-16T23:46:01.146218Z	  
2025-09-16T23:46:01.146407Z	      },
2025-09-16T23:46:01.146494Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-16T23:46:01.146609Z	    }
2025-09-16T23:46:01.146814Z	  
2025-09-16T23:46:01.146922Z	Query parameters: {
2025-09-16T23:46:01.147038Z	  limit: 4,
2025-09-16T23:46:01.147214Z	  offset: 0,
2025-09-16T23:46:01.147356Z	  targetMarket: undefined,
2025-09-16T23:46:01.147491Z	  brand: 'sanrex',
2025-09-16T23:46:01.147594Z	  featured: undefined
2025-09-16T23:46:01.147739Z	}
2025-09-16T23:46:01.14784Z	✅ [getBrandData] Found brand: Sanrex
2025-09-16T23:46:01.147952Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:01.148075Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:01.148221Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-16T23:46:01.148343Z	Fetching products with query: 
2025-09-16T23:46:01.148448Z	    {
2025-09-16T23:46:01.148551Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.14867Z	        
2025-09-16T23:46:01.148806Z	    _id,
2025-09-16T23:46:01.148908Z	    _type,
2025-09-16T23:46:01.149007Z	    partNumber,
2025-09-16T23:46:01.149095Z	    "slug": slug.current,
2025-09-16T23:46:01.149254Z	    title,
2025-09-16T23:46:01.149425Z	    shortDescription,
2025-09-16T23:46:01.14961Z	    image,
2025-09-16T23:46:01.149809Z	    brand->{
2025-09-16T23:46:01.149892Z	      name,
2025-09-16T23:46:01.150024Z	      "slug": slug.current,
2025-09-16T23:46:01.150194Z	      logo
2025-09-16T23:46:01.150331Z	    },
2025-09-16T23:46:01.150465Z	    category->{
2025-09-16T23:46:01.150595Z	      name,
2025-09-16T23:46:01.15076Z	      "slug": slug.current
2025-09-16T23:46:01.150869Z	    },
2025-09-16T23:46:01.151066Z	    pricing{
2025-09-16T23:46:01.151173Z	      currency,
2025-09-16T23:46:01.151279Z	      tiers[]{
2025-09-16T23:46:01.151404Z	        quantity,
2025-09-16T23:46:01.15155Z	        price,
2025-09-16T23:46:01.15164Z	        unit
2025-09-16T23:46:01.151771Z	      },
2025-09-16T23:46:01.151838Z	      moq,
2025-09-16T23:46:01.151933Z	      leadTime,
2025-09-16T23:46:01.152089Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.152213Z	      "price": tiers[0].price,
2025-09-16T23:46:01.152318Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.1525Z	    },
2025-09-16T23:46:01.152606Z	    inventory{
2025-09-16T23:46:01.15276Z	      quantity,
2025-09-16T23:46:01.152873Z	      status,
2025-09-16T23:46:01.152987Z	      warehouse,
2025-09-16T23:46:01.153138Z	      lastUpdated,
2025-09-16T23:46:01.153241Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.153363Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.15348Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.153589Z	    },
2025-09-16T23:46:01.153729Z	    isActive,
2025-09-16T23:46:01.153846Z	    isFeatured,
2025-09-16T23:46:01.153989Z	    isNew,
2025-09-16T23:46:01.154089Z	    _createdAt,
2025-09-16T23:46:01.154156Z	    _updatedAt
2025-09-16T23:46:01.154219Z	  
2025-09-16T23:46:01.154282Z	      },
2025-09-16T23:46:01.154342Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-16T23:46:01.154419Z	    }
2025-09-16T23:46:01.154482Z	  
2025-09-16T23:46:01.154536Z	Query parameters: {
2025-09-16T23:46:01.15459Z	  limit: 8,
2025-09-16T23:46:01.154652Z	  offset: 0,
2025-09-16T23:46:01.154743Z	  category: undefined,
2025-09-16T23:46:01.154816Z	  brand: 'ixys',
2025-09-16T23:46:01.154878Z	  featured: undefined
2025-09-16T23:46:01.154934Z	}
2025-09-16T23:46:01.154989Z	Fetching solutions with query: 
2025-09-16T23:46:01.155051Z	    {
2025-09-16T23:46:01.155123Z	      "solutions": *[_type == "solution" && (isPublished == t❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:01.155186Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:01.155241Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:01.155296Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:01.155357Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424)
2025-09-16T23:46:01.155426Z	    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-09-16T23:46:01.155498Z	    at runNextTicks (node:internal/process/task_queues:64:3)
2025-09-16T23:46:01.155556Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:46:01.155613Z	    at process.processTimers (node:internal/timers:512:7) {
2025-09-16T23:46:01.155682Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:01.155744Z	}
2025-09-16T23:46:01.155799Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:01.155856Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:01.155918Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:01.155978Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:01.156039Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424)
2025-09-16T23:46:01.156094Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:01.156149Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:01.156211Z	}
2025-09-16T23:46:01.199518Z	rue || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.199834Z	        
2025-09-16T23:46:01.199972Z	    _id,
2025-09-16T23:46:01.200083Z	    title,
2025-09-16T23:46:01.200197Z	    "slug": slug.current,
2025-09-16T23:46:01.200302Z	    summary,
2025-09-16T23:46:01.200441Z	    description,
2025-09-16T23:46:01.200556Z	    coverImage,
2025-09-16T23:46:01.200661Z	    primaryBrand->{
2025-09-16T23:46:01.200829Z	      _id,
2025-09-16T23:46:01.200956Z	      name,
2025-09-16T23:46:01.201064Z	      "slug": slug.current,
2025-09-16T23:46:01.201199Z	      logo
2025-09-16T23:46:01.201323Z	    },
2025-09-16T23:46:01.201447Z	    relatedBrands[]->{
2025-09-16T23:46:01.201561Z	      _id,
2025-09-16T23:46:01.201663Z	      name,
2025-09-16T23:46:01.201793Z	      "slug": slug.current,
2025-09-16T23:46:01.201907Z	      logo
2025-09-16T23:46:01.202019Z	    },
2025-09-16T23:46:01.202128Z	    targetMarket,
2025-09-16T23:46:01.202246Z	    complexity,
2025-09-16T23:46:01.202398Z	    publishedAt,
2025-09-16T23:46:01.202606Z	    isPublished,
2025-09-16T23:46:01.202768Z	    isFeatured,
2025-09-16T23:46:01.202894Z	    viewCount,
2025-09-16T23:46:01.203006Z	    _createdAt,
2025-09-16T23:46:01.203116Z	    _updatedAt
2025-09-16T23:46:01.20322Z	  
2025-09-16T23:46:01.203353Z	      },
2025-09-16T23:46:01.20354Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-16T23:46:01.203818Z	    }
2025-09-16T23:46:01.204165Z	  
2025-09-16T23:46:01.204291Z	Query parameters: {
2025-09-16T23:46:01.20442Z	  limit: 4,
2025-09-16T23:46:01.204531Z	  offset: 0,
2025-09-16T23:46:01.204657Z	  targetMarket: undefined,
2025-09-16T23:46:01.204793Z	  brand: 'ixys',
2025-09-16T23:46:01.204902Z	  featured: undefined
2025-09-16T23:46:01.205025Z	}
2025-09-16T23:46:01.205142Z	✅ [getBrandData] Found brand: IXYS
2025-09-16T23:46:01.205255Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:01.20538Z	Solutions fetch result: {
2025-09-16T23:46:01.205494Z	  totalSolutions: 1,
2025-09-16T23:46:01.205594Z	  fetchedSolutions: 1,
2025-09-16T23:46:01.205713Z	  firstSolution: {
2025-09-16T23:46:01.205819Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-16T23:46:01.205921Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-16T23:46:01.20602Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-16T23:46:01.206125Z	    complexity: 'medium',
2025-09-16T23:46:01.206231Z	    coverImage: null,
2025-09-16T23:46:01.206337Z	    description: [ [Object] ],
2025-09-16T23:46:01.206463Z	    isFeatured: false,
2025-09-16T23:46:01.206568Z	    isPublished: true,
2025-09-16T23:46:01.206765Z	    primaryBrand: {
2025-09-16T23:46:01.206896Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:46:01.207008Z	      logo: null,
2025-09-16T23:46:01.207115Z	      name: 'IXYS',
2025-09-16T23:46:01.207222Z	      slug: 'ixys'
2025-09-16T23:46:01.207325Z	    },
2025-09-16T23:46:01.207449Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-16T23:46:01.207565Z	    relatedBrands: null,
2025-09-16T23:46:01.207686Z	    slug: '99999',
2025-09-16T23:46:01.207802Z	    summary: '99999',
2025-09-16T23:46:01.207906Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:01.208015Z	    title: '99999',
2025-09-16T23:46:01.208128Z	    viewCount: 0
2025-09-16T23:46:01.208229Z	  }
2025-09-16T23:46:01.208328Z	}
2025-09-16T23:46:01.208448Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-16T23:46:01.208563Z	Fetching products with query: 
2025-09-16T23:46:01.208713Z	    {
2025-09-16T23:46:01.208834Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.208944Z	        
2025-09-16T23:46:01.209076Z	    _id,
2025-09-16T23:46:01.209182Z	    _type,
2025-09-16T23:46:01.209282Z	    partNumber,
2025-09-16T23:46:01.209395Z	    "slug": slug.current,
2025-09-16T23:46:01.209514Z	    title,
2025-09-16T23:46:01.209613Z	    shortDescription,
2025-09-16T23:46:01.209745Z	    image,
2025-09-16T23:46:01.209869Z	    brand->{
2025-09-16T23:46:01.209996Z	      name,
2025-09-16T23:46:01.210107Z	      "slug": slug.current,
2025-09-16T23:46:01.210214Z	      logo
2025-09-16T23:46:01.210307Z	    },
2025-09-16T23:46:01.210429Z	    category->{
2025-09-16T23:46:01.210541Z	      name,
2025-09-16T23:46:01.210646Z	      "slug": slug.current
2025-09-16T23:46:01.21078Z	    },
2025-09-16T23:46:01.210894Z	    pricing{
2025-09-16T23:46:01.210991Z	      currency,
2025-09-16T23:46:01.211096Z	      tiers[]{
2025-09-16T23:46:01.211202Z	        quantity,
2025-09-16T23:46:01.211328Z	        price,
2025-09-16T23:46:01.211445Z	        unit
2025-09-16T23:46:01.211552Z	      },
2025-09-16T23:46:01.211659Z	      moq,
2025-09-16T23:46:01.211794Z	      leadTime,
2025-09-16T23:46:01.211902Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.212026Z	      "price": tiers[0].price,
2025-09-16T23:46:01.212166Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.21229Z	    },
2025-09-16T23:46:01.212406Z	    inventory{
2025-09-16T23:46:01.212517Z	      quantity,
2025-09-16T23:46:01.21264Z	      status,
2025-09-16T23:46:01.212773Z	      warehouse,
2025-09-16T23:46:01.212881Z	      lastUpdated,
2025-09-16T23:46:01.212988Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.21309Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.213872Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.214053Z	    },
2025-09-16T23:46:01.214188Z	    isActive,
2025-09-16T23:46:01.214331Z	    isFeatured,
2025-09-16T23:46:01.214483Z	    isNew,
2025-09-16T23:46:01.214633Z	    _createdAt,
2025-09-16T23:46:01.21479Z	    _updatedAt
2025-09-16T23:46:01.214943Z	  
2025-09-16T23:46:01.215075Z	      },
2025-09-16T23:46:01.215218Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-16T23:46:01.215367Z	    }
2025-09-16T23:46:01.215834Z	  
2025-09-16T23:46:01.215998Z	Query parameters: {
2025-09-16T23:46:01.216132Z	  limit: 8,
2025-09-16T23:46:01.216251Z	  offset: 0,
2025-09-16T23:46:01.216358Z	  category: undefined,
2025-09-16T23:46:01.216469Z	  brand: 'ixys',
2025-09-16T23:46:01.216604Z	  featured: undefined
2025-09-16T23:46:01.217053Z	}
2025-09-16T23:46:01.217223Z	Fetching solutions with query: 
2025-09-16T23:46:01.217353Z	    {
2025-09-16T23:46:01.217483Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.217592Z	        
2025-09-16T23:46:01.217716Z	    _id,
2025-09-16T23:46:01.217843Z	    title,
2025-09-16T23:46:01.217989Z	    "slug": slug.current,
2025-09-16T23:46:01.218083Z	    summary,
2025-09-16T23:46:01.218183Z	    description,
2025-09-16T23:46:01.21828Z	    coverImage,
2025-09-16T23:46:01.218387Z	    primaryBrand->{
2025-09-16T23:46:01.218604Z	      _id,
2025-09-16T23:46:01.218746Z	      name,
2025-09-16T23:46:01.219108Z	      "slug": slug.current,
2025-09-16T23:46:01.21949Z	      logo
2025-09-16T23:46:01.219617Z	    },
2025-09-16T23:46:01.219738Z	    relatedBrands[]->{
2025-09-16T23:46:01.219854Z	      _id,
2025-09-16T23:46:01.220725Z	      name,
2025-09-16T23:46:01.221139Z	      "slug": slug.current,
2025-09-16T23:46:01.221303Z	      logo
2025-09-16T23:46:01.221435Z	    },
2025-09-16T23:46:01.221554Z	    targetMarket,
2025-09-16T23:46:01.221665Z	    complexity,
2025-09-16T23:46:01.222425Z	    publishedAt,
2025-09-16T23:46:01.222555Z	    isPublished,
2025-09-16T23:46:01.222658Z	    isFeatured,
2025-09-16T23:46:01.222783Z	    viewCount,
2025-09-16T23:46:01.223135Z	    _createdAt,
2025-09-16T23:46:01.223249Z	    _updatedAt
2025-09-16T23:46:01.223599Z	  
2025-09-16T23:46:01.223956Z	      },
2025-09-16T23:46:01.224395Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-16T23:46:01.224899Z	    }
2025-09-16T23:46:01.22502Z	  
2025-09-16T23:46:01.227625Z	Query parameters: {
2025-09-16T23:46:01.227795Z	  limit: 4,
2025-09-16T23:46:01.227917Z	  offset: 0,
2025-09-16T23:46:01.228024Z	  targetMarket: undefined,
2025-09-16T23:46:01.228211Z	  brand: 'ixys',
2025-09-16T23:46:01.228484Z	  featured: undefined
2025-09-16T23:46:01.228949Z	}
2025-09-16T23:46:01.229097Z	✅ [getBrandData] Found brand: IXYS
2025-09-16T23:46:01.229218Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:01.229373Z	Solutions fetch result: {
2025-09-16T23:46:01.229492Z	  totalSolutions: 1,
2025-09-16T23:46:01.229595Z	  fetchedSolutions: 1,
2025-09-16T23:46:01.229819Z	  firstSolution: {
2025-09-16T23:46:01.23014Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-16T23:46:01.230308Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-16T23:46:01.230461Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-16T23:46:01.230572Z	    complexity: 'medium',
2025-09-16T23:46:01.230707Z	    coverImage: null,
2025-09-16T23:46:01.230859Z	    description: [ [Object] ],
2025-09-16T23:46:01.23102Z	    isFeatured: false,
2025-09-16T23:46:01.231154Z	    isPublished: true,
2025-09-16T23:46:01.231294Z	    primaryBrand: {
2025-09-16T23:46:01.23146Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:46:01.23162Z	      logo: null,
2025-09-16T23:46:01.231783Z	      name: 'IXYS',
2025-09-16T23:46:01.231945Z	      slug: 'ixys'
2025-09-16T23:46:01.232108Z	    },
2025-09-16T23:46:01.232272Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-16T23:46:01.23244Z	    relatedBrands: null,
2025-09-16T23:46:01.23259Z	    slug: '99999',
2025-09-16T23:46:01.232752Z	    summary: '99999',
2025-09-16T23:46:01.232922Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:01.233037Z	    title: '99999',
2025-09-16T23:46:01.233147Z	    viewCount: 0
2025-09-16T23:46:01.233244Z	  }
2025-09-16T23:46:01.23334Z	}
2025-09-16T23:46:01.233441Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-16T23:46:01.233546Z	Fetching products with query: 
2025-09-16T23:46:01.233647Z	    {
2025-09-16T23:46:01.233785Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.234126Z	        
2025-09-16T23:46:01.234391Z	    _id,
2025-09-16T23:46:01.234555Z	    _type,
2025-09-16T23:46:01.234732Z	    partNumber,
2025-09-16T23:46:01.234894Z	    "slug": slug.current,
2025-09-16T23:46:01.235046Z	    title,
2025-09-16T23:46:01.235206Z	    shortDescription,
2025-09-16T23:46:01.235346Z	    image,
2025-09-16T23:46:01.235612Z	    brand->{
2025-09-16T23:46:01.236736Z	      name,
2025-09-16T23:46:01.236925Z	      "slug": slug.current,
2025-09-16T23:46:01.237059Z	      logo
2025-09-16T23:46:01.237168Z	    },
2025-09-16T23:46:01.237263Z	    category->{
2025-09-16T23:46:01.23736Z	      name,
2025-09-16T23:46:01.23747Z	      "slug": slug.current
2025-09-16T23:46:01.237567Z	    },
2025-09-16T23:46:01.237749Z	    pricing{
2025-09-16T23:46:01.238199Z	      currency,
2025-09-16T23:46:01.238558Z	      tiers[]{
2025-09-16T23:46:01.238785Z	        quantity,
2025-09-16T23:46:01.239124Z	        price,
2025-09-16T23:46:01.239356Z	        unit
2025-09-16T23:46:01.239514Z	      },
2025-09-16T23:46:01.239686Z	      moq,
2025-09-16T23:46:01.239846Z	      leadTime,
2025-09-16T23:46:01.24008Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.240351Z	      "price": tiers[0].price,
2025-09-16T23:46:01.240589Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.240748Z	    },
2025-09-16T23:46:01.240864Z	    inventory{
2025-09-16T23:46:01.240965Z	      quantity,
2025-09-16T23:46:01.241068Z	      status,
2025-09-16T23:46:01.241181Z	      warehouse,
2025-09-16T23:46:01.241293Z	      lastUpdated,
2025-09-16T23:46:01.241436Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.241745Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.241903Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.242106Z	    },
2025-09-16T23:46:01.242335Z	    isActive,
2025-09-16T23:46:01.242525Z	    isFeatured,
2025-09-16T23:46:01.242644Z	    isNew,
2025-09-16T23:46:01.242774Z	    _createdAt,
2025-09-16T23:46:01.242884Z	    _updatedAt
2025-09-16T23:46:01.24299Z	  
2025-09-16T23:46:01.267336Z	      },
2025-09-16T23:46:01.267544Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-16T23:46:01.267666Z	    }
2025-09-16T23:46:01.267791Z	  
2025-09-16T23:46:01.268131Z	Query parameters: {
2025-09-16T23:46:01.269328Z	  limit: 8,
2025-09-16T23:46:01.269491Z	  offset: 0,
2025-09-16T23:46:01.269612Z	  category: undefined,
2025-09-16T23:46:01.269755Z	  brand: 'sanrex',
2025-09-16T23:46:01.269856Z	  featured: undefined
2025-09-16T23:46:01.269947Z	}
2025-09-16T23:46:01.270572Z	Fetching solutions with query: 
2025-09-16T23:46:01.270969Z	    {
2025-09-16T23:46:01.271089Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.271189Z	        
2025-09-16T23:46:01.271283Z	    _id,
2025-09-16T23:46:01.271371Z	    title,
2025-09-16T23:46:01.271469Z	    "slug": slug.current,
2025-09-16T23:46:01.271558Z	    summary,
2025-09-16T23:46:01.271649Z	    description,
2025-09-16T23:46:01.271756Z	    coverImage,
2025-09-16T23:46:01.27188Z	    primaryBrand->{
2025-09-16T23:46:01.272578Z	      _id,
2025-09-16T23:46:01.274858Z	      name,
2025-09-16T23:46:01.275033Z	      "slug": slug.current,
2025-09-16T23:46:01.275147Z	      logo
2025-09-16T23:46:01.275236Z	    },
2025-09-16T23:46:01.275321Z	    relatedBrands[]->{
2025-09-16T23:46:01.275413Z	      _id,
2025-09-16T23:46:01.275508Z	      name,
2025-09-16T23:46:01.275601Z	      "slug": slug.current,
2025-09-16T23:46:01.275718Z	      logo
2025-09-16T23:46:01.275793Z	    },
2025-09-16T23:46:01.275849Z	    targetMarket,
2025-09-16T23:46:01.275902Z	    complexity,
2025-09-16T23:46:01.275962Z	    publishedAt,
2025-09-16T23:46:01.27602Z	    isPublished,
2025-09-16T23:46:01.276075Z	    isFeatured,
2025-09-16T23:46:01.276129Z	    viewCount,
2025-09-16T23:46:01.276183Z	    _createdAt,
2025-09-16T23:46:01.276237Z	    _updatedAt
2025-09-16T23:46:01.27629Z	  
2025-09-16T23:46:01.276345Z	      },
2025-09-16T23:46:01.2764Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-16T23:46:01.276462Z	    }
2025-09-16T23:46:01.276516Z	  
2025-09-16T23:46:01.276568Z	Query parameters: {
2025-09-16T23:46:01.27662Z	  limit: 4,
2025-09-16T23:46:01.276704Z	  offset: 0,
2025-09-16T23:46:01.324104Z	  targetMarket: undefined,
2025-09-16T23:46:01.324366Z	  brand: 'sanrex',
2025-09-16T23:46:01.324573Z	  featured: undefined
2025-09-16T23:46:01.324714Z	}
2025-09-16T23:46:01.324837Z	✅ [getBrandData] Found brand: Sanrex
2025-09-16T23:46:01.324941Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:01.325041Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:01.325151Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-16T23:46:01.325257Z	Fetching products with query: 
2025-09-16T23:46:01.325344Z	    {
2025-09-16T23:46:01.325441Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.325544Z	        
2025-09-16T23:46:01.325643Z	    _id,
2025-09-16T23:46:01.325764Z	    _type,
2025-09-16T23:46:01.325864Z	    partNumber,
2025-09-16T23:46:01.325991Z	    "slug": slug.current,
2025-09-16T23:46:01.326093Z	    title,
2025-09-16T23:46:01.326194Z	    shortDescription,
2025-09-16T23:46:01.326294Z	    image,
2025-09-16T23:46:01.326392Z	    brand->{
2025-09-16T23:46:01.326538Z	      name,
2025-09-16T23:46:01.326732Z	      "slug": slug.current,
2025-09-16T23:46:01.326873Z	      logo
2025-09-16T23:46:01.327009Z	    },
2025-09-16T23:46:01.32711Z	    category->{
2025-09-16T23:46:01.327202Z	      name,
2025-09-16T23:46:01.327337Z	      "slug": slug.current
2025-09-16T23:46:01.327499Z	    },
2025-09-16T23:46:01.3276Z	    pricing{
2025-09-16T23:46:01.327725Z	      currency,
2025-09-16T23:46:01.327825Z	      tiers[]{
2025-09-16T23:46:01.327916Z	        quantity,
2025-09-16T23:46:01.328014Z	        price,
2025-09-16T23:46:01.328099Z	        unit
2025-09-16T23:46:01.328181Z	      },
2025-09-16T23:46:01.328262Z	      moq,
2025-09-16T23:46:01.328368Z	      leadTime,
2025-09-16T23:46:01.328454Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.328541Z	      "price": tiers[0].price,
2025-09-16T23:46:01.328624Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.328737Z	    },
2025-09-16T23:46:01.328822Z	    inventory{
2025-09-16T23:46:01.328901Z	      quantity,
2025-09-16T23:46:01.328979Z	      status,
2025-09-16T23:46:01.329059Z	      warehouse,
2025-09-16T23:46:01.329155Z	      lastUpdated,
2025-09-16T23:46:01.329264Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.32936Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.32956Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.329652Z	    },
2025-09-16T23:46:01.329768Z	    isActive,
2025-09-16T23:46:01.329862Z	    isFeatured,
2025-09-16T23:46:01.329948Z	    isNew,
2025-09-16T23:46:01.330031Z	    _createdAt,
2025-09-16T23:46:01.330114Z	    _updatedAt
2025-09-16T23:46:01.330211Z	  
2025-09-16T23:46:01.330307Z	      },
2025-09-16T23:46:01.330408Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-16T23:46:01.330523Z	    }
2025-09-16T23:46:01.330625Z	  
2025-09-16T23:46:01.330755Z	Query parameters: {
2025-09-16T23:46:01.330854Z	  limit: 8,
2025-09-16T23:46:01.330942Z	  offset: 0,
2025-09-16T23:46:01.33103Z	  category: undefined,
2025-09-16T23:46:01.331116Z	  brand: 'sanrex',
2025-09-16T23:46:01.3312Z	  featured: undefined
2025-09-16T23:46:01.331289Z	}
2025-09-16T23:46:01.33138Z	Fetching solutions with query: 
2025-09-16T23:46:01.331484Z	    {
2025-09-16T23:46:01.33159Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.333092Z	        
2025-09-16T23:46:01.356071Z	    _id,
2025-09-16T23:46:01.356266Z	    title,
2025-09-16T23:46:01.356388Z	    "slug": slug.current,
2025-09-16T23:46:01.356535Z	    summary,
2025-09-16T23:46:01.356661Z	    description,
2025-09-16T23:46:01.356808Z	    coverImage,
2025-09-16T23:46:01.356908Z	    primaryBrand->{
2025-09-16T23:46:01.357011Z	      _id,
2025-09-16T23:46:01.357114Z	      name,
2025-09-16T23:46:01.357222Z	      "slug": slug.current,
2025-09-16T23:46:01.357322Z	      logo
2025-09-16T23:46:01.357419Z	    },
2025-09-16T23:46:01.357525Z	    relatedBrands[]->{
2025-09-16T23:46:01.357624Z	      _id,
2025-09-16T23:46:01.357759Z	      name,
2025-09-16T23:46:01.357878Z	      "slug": slug.current,
2025-09-16T23:46:01.357979Z	      logo
2025-09-16T23:46:01.35807Z	    },
2025-09-16T23:46:01.358167Z	    targetMarket,
2025-09-16T23:46:01.358329Z	    complexity,
2025-09-16T23:46:01.358465Z	    publishedAt,
2025-09-16T23:46:01.358595Z	    isPublished,
2025-09-16T23:46:01.358733Z	    isFeatured,
2025-09-16T23:46:01.358844Z	    viewCount,
2025-09-16T23:46:01.358948Z	    _createdAt,
2025-09-16T23:46:01.359042Z	    _updatedAt
2025-09-16T23:46:01.359136Z	  
2025-09-16T23:46:01.359252Z	      },
2025-09-16T23:46:01.359351Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-16T23:46:01.35945Z	    }
2025-09-16T23:46:01.359542Z	  
2025-09-16T23:46:01.359634Z	Query parameters: {
2025-09-16T23:46:01.359755Z	  limit: 4,
2025-09-16T23:46:01.359858Z	  offset: 0,
2025-09-16T23:46:01.35996Z	  targetMarket: undefined,
2025-09-16T23:46:01.360065Z	  brand: 'sanrex',
2025-09-16T23:46:01.360162Z	  featured: undefined
2025-09-16T23:46:01.360254Z	}
2025-09-16T23:46:01.360344Z	✅ [getBrandData] Found brand: Sanrex
2025-09-16T23:46:01.360456Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:01.360554Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:01.361464Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:46:01.36161Z	Products fetch result: {
2025-09-16T23:46:01.361963Z	  totalProducts: 4,
2025-09-16T23:46:01.362073Z	  fetchedProducts: 4,
2025-09-16T23:46:01.362365Z	  firstProduct: {
2025-09-16T23:46:01.362486Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:46:01.36258Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:46:01.362667Z	    _type: 'product',
2025-09-16T23:46:01.362776Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:46:01.362856Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:46:01.36296Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:01.363064Z	    image: null,
2025-09-16T23:46:01.363162Z	    inventory: {
2025-09-16T23:46:01.36327Z	      inStock: true,
2025-09-16T23:46:01.363358Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:46:01.36344Z	      quantity: 0,
2025-09-16T23:46:01.363527Z	      status: 'in_stock',
2025-09-16T23:46:01.363617Z	      warehouse: null
2025-09-16T23:46:01.363747Z	    },
2025-09-16T23:46:01.363857Z	    isActive: true,
2025-09-16T23:46:01.363955Z	    isFeatured: false,
2025-09-16T23:46:01.364053Z	    isNew: false,
2025-09-16T23:46:01.364151Z	    partNumber: '11111',
2025-09-16T23:46:01.364239Z	    pricing: {
2025-09-16T23:46:01.364331Z	      currency: 'CNY',
2025-09-16T23:46:01.36442Z	      leadTime: null,
2025-09-16T23:46:01.364509Z	      moq: null,
2025-09-16T23:46:01.364598Z	      price: null,
2025-09-16T23:46:01.364711Z	      tiers: null
2025-09-16T23:46:01.364807Z	    },
2025-09-16T23:46:01.364897Z	    shortDescription: '11111',
2025-09-16T23:46:01.364986Z	    slug: 'sic mosfet',
2025-09-16T23:46:01.365073Z	    title: '111111'
2025-09-16T23:46:01.36516Z	  }
2025-09-16T23:46:01.365249Z	}
2025-09-16T23:46:01.365349Z	Solutions fetch result: {
2025-09-16T23:46:01.365443Z	  totalSolutions: 6,
2025-09-16T23:46:01.36838Z	  fetchedSolutions: 4,
2025-09-16T23:46:01.3688Z	  firstSolution: {
2025-09-16T23:46:01.368914Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:46:01.369228Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:46:01.36936Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:46:01.369465Z	    complexity: 'medium',
2025-09-16T23:46:01.369558Z	    coverImage: null,
2025-09-16T23:46:01.369656Z	    description: [ [Object] ],
2025-09-16T23:46:01.369827Z	    isFeatured: false,
2025-09-16T23:46:01.369894Z	    isPublished: true,
2025-09-16T23:46:01.369949Z	    primaryBrand: {
2025-09-16T23:46:01.370004Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:46:01.370059Z	      logo: null,
2025-09-16T23:46:01.423855Z	      name: 'CREE',
2025-09-16T23:46:01.424202Z	      slug: 'cree'
2025-09-16T23:46:01.42448Z	    },
2025-09-16T23:46:01.424699Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:46:01.424895Z	    relatedBrands: null,
2025-09-16T23:46:01.42506Z	    slug: '11111',
2025-09-16T23:46:01.425209Z	    summary: '11111',
2025-09-16T23:46:01.425353Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:01.425515Z	    title: '11111',
2025-09-16T23:46:01.425701Z	    viewCount: 0
2025-09-16T23:46:01.426186Z	  }
2025-09-16T23:46:01.426639Z	}
2025-09-16T23:46:01.427593Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:46:01.42818Z	Fetching products with query: 
2025-09-16T23:46:01.42843Z	    {
2025-09-16T23:46:01.428585Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.428726Z	        
2025-09-16T23:46:01.428836Z	    _id,
2025-09-16T23:46:01.428954Z	    _type,
2025-09-16T23:46:01.429053Z	    partNumber,
2025-09-16T23:46:01.429143Z	    "slug": slug.current,
2025-09-16T23:46:01.429239Z	    title,
2025-09-16T23:46:01.429327Z	    shortDescription,
2025-09-16T23:46:01.429415Z	    image,
2025-09-16T23:46:01.429513Z	    brand->{
2025-09-16T23:46:01.429601Z	      name,
2025-09-16T23:46:01.429712Z	      "slug": slug.current,
2025-09-16T23:46:01.429831Z	      logo
2025-09-16T23:46:01.429927Z	    },
2025-09-16T23:46:01.43002Z	    category->{
2025-09-16T23:46:01.430109Z	      name,
2025-09-16T23:46:01.430207Z	      "slug": slug.current
2025-09-16T23:46:01.4303Z	    },
2025-09-16T23:46:01.430394Z	    pricing{
2025-09-16T23:46:01.430497Z	      currency,
2025-09-16T23:46:01.430594Z	      tiers[]{
2025-09-16T23:46:01.430713Z	        quantity,
2025-09-16T23:46:01.430822Z	        price,
2025-09-16T23:46:01.430918Z	        unit
2025-09-16T23:46:01.431022Z	      },
2025-09-16T23:46:01.431119Z	      moq,
2025-09-16T23:46:01.431216Z	      leadTime,
2025-09-16T23:46:01.431315Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.431416Z	      "price": tiers[0].price,
2025-09-16T23:46:01.431529Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.431667Z	    },
2025-09-16T23:46:01.431996Z	    inventory{
2025-09-16T23:46:01.432118Z	      quantity,
2025-09-16T23:46:01.432216Z	      status,
2025-09-16T23:46:01.432309Z	      warehouse,
2025-09-16T23:46:01.433016Z	      lastUpdated,
2025-09-16T23:46:01.433322Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.433525Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.433702Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.433865Z	    },
2025-09-16T23:46:01.434024Z	    isActive,
2025-09-16T23:46:01.434182Z	    isFeatured,
2025-09-16T23:46:01.434394Z	    isNew,
2025-09-16T23:46:01.434559Z	    _createdAt,
2025-09-16T23:46:01.434661Z	    _updatedAt
2025-09-16T23:46:01.434787Z	  
2025-09-16T23:46:01.434885Z	      },
2025-09-16T23:46:01.434978Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:46:01.435089Z	    }
2025-09-16T23:46:01.435177Z	  
2025-09-16T23:46:01.435555Z	Query parameters: {
2025-09-16T23:46:01.435858Z	  limit: 8,
2025-09-16T23:46:01.436055Z	  offset: 0,
2025-09-16T23:46:01.436214Z	  category: undefined,
2025-09-16T23:46:01.436345Z	  brand: 'cree',
2025-09-16T23:46:01.43649Z	  featured: undefined
2025-09-16T23:46:01.436652Z	}
2025-09-16T23:46:01.436806Z	Fetching solutions with query: 
2025-09-16T23:46:01.436974Z	    {
2025-09-16T23:46:01.437076Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.437196Z	        
2025-09-16T23:46:01.437324Z	    _id,
2025-09-16T23:46:01.437431Z	    title,
2025-09-16T23:46:01.437526Z	    "slug": slug.current,
2025-09-16T23:46:01.437617Z	    summary,
2025-09-16T23:46:01.437734Z	    description,
2025-09-16T23:46:01.437837Z	    coverImage,
2025-09-16T23:46:01.437931Z	    primaryBrand->{
2025-09-16T23:46:01.438025Z	      _id,
2025-09-16T23:46:01.438114Z	      name,
2025-09-16T23:46:01.438208Z	      "slug": slug.current,
2025-09-16T23:46:01.438299Z	      logo
2025-09-16T23:46:01.438391Z	    },
2025-09-16T23:46:01.438481Z	    relatedBrands[]->{
2025-09-16T23:46:01.438577Z	      _id,
2025-09-16T23:46:01.438667Z	      name,
2025-09-16T23:46:01.438789Z	      "slug": slug.current,
2025-09-16T23:46:01.438883Z	      logo
2025-09-16T23:46:01.438975Z	    },
2025-09-16T23:46:01.439078Z	    targetMarket,
2025-09-16T23:46:01.439185Z	    complexity,
2025-09-16T23:46:01.439309Z	    publishedAt,
2025-09-16T23:46:01.439403Z	    isPublished,
2025-09-16T23:46:01.439498Z	    isFeatured,
2025-09-16T23:46:01.4396Z	    viewCount,
2025-09-16T23:46:01.439736Z	    _createdAt,
2025-09-16T23:46:01.43985Z	    _updatedAt
2025-09-16T23:46:01.43995Z	  
2025-09-16T23:46:01.440049Z	      },
2025-09-16T23:46:01.440146Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:46:01.440242Z	    }
2025-09-16T23:46:01.440331Z	  
2025-09-16T23:46:01.440423Z	Query parameters: {
2025-09-16T23:46:01.440523Z	  limit: 4,
2025-09-16T23:46:01.440623Z	  offset: 0,
2025-09-16T23:46:01.440747Z	  targetMarket: undefined,
2025-09-16T23:46:01.440844Z	  brand: 'cree',
2025-09-16T23:46:01.440929Z	  featured: undefined
2025-09-16T23:46:01.441017Z	}
2025-09-16T23:46:01.441105Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:46:01.44121Z	Products fetch result: {
2025-09-16T23:46:01.441312Z	  totalProducts: 4,
2025-09-16T23:46:01.441415Z	  fetchedProducts: 4,
2025-09-16T23:46:01.441511Z	  firstProduct: {
2025-09-16T23:46:01.441656Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:46:01.441838Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:46:01.441917Z	    _type: 'product',
2025-09-16T23:46:01.441986Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:46:01.442049Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:46:01.442188Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:01.442383Z	    image: null,
2025-09-16T23:46:01.442497Z	    inventory: {
2025-09-16T23:46:01.442597Z	      inStock: true,
2025-09-16T23:46:01.44273Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:46:01.442843Z	      quantity: 0,
2025-09-16T23:46:01.442954Z	      status: 'in_stock',
2025-09-16T23:46:01.44309Z	      warehouse: null
2025-09-16T23:46:01.443184Z	    },
2025-09-16T23:46:01.443371Z	    isActive: true,
2025-09-16T23:46:01.4435Z	    isFeatured: false,
2025-09-16T23:46:01.443645Z	    isNew: false,
2025-09-16T23:46:01.443886Z	    partNumber: '11111',
2025-09-16T23:46:01.444002Z	    pricing: {
2025-09-16T23:46:01.444148Z	      currency: 'CNY',
2025-09-16T23:46:01.444288Z	      leadTime: null,
2025-09-16T23:46:01.44445Z	      moq: null,
2025-09-16T23:46:01.444603Z	      price: null,
2025-09-16T23:46:01.444764Z	      tiers: null
2025-09-16T23:46:01.444904Z	    },
2025-09-16T23:46:01.445029Z	    shortDescription: '11111',
2025-09-16T23:46:01.445161Z	    slug: 'sic mosfet',
2025-09-16T23:46:01.445287Z	    title: '111111'
2025-09-16T23:46:01.445419Z	  }
2025-09-16T23:46:01.445562Z	}
2025-09-16T23:46:01.445689Z	Solutions fetch result: {
2025-09-16T23:46:01.445801Z	  totalSolutions: 6,
2025-09-16T23:46:01.445897Z	  fetchedSolutions: 4,
2025-09-16T23:46:01.446077Z	  firstSolution: {
2025-09-16T23:46:01.446326Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:46:01.446515Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:46:01.446646Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:46:01.446789Z	    complexity: 'medium',
2025-09-16T23:46:01.446899Z	    coverImage: null,
2025-09-16T23:46:01.446993Z	    description: [ [Object] ],
2025-09-16T23:46:01.447157Z	    isFeatured: false,
2025-09-16T23:46:01.447315Z	    isPublished: true,
2025-09-16T23:46:01.44843Z	    primaryBrand: {
2025-09-16T23:46:01.450237Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:46:01.450413Z	      logo: null,
2025-09-16T23:46:01.450526Z	      name: 'CREE',
2025-09-16T23:46:01.450619Z	      slug: 'cree'
2025-09-16T23:46:01.450747Z	    },
2025-09-16T23:46:01.452866Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:46:01.453055Z	    relatedBrands: null,
2025-09-16T23:46:01.453166Z	    slug: '11111',
2025-09-16T23:46:01.45327Z	    summary: '11111',
2025-09-16T23:46:01.453372Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:01.453464Z	    title: '11111',
2025-09-16T23:46:01.453558Z	    viewCount: 0
2025-09-16T23:46:01.453652Z	  }
2025-09-16T23:46:01.453778Z	}
2025-09-16T23:46:01.45389Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-16T23:46:01.45398Z	Fetching products with query: 
2025-09-16T23:46:01.454069Z	    {
2025-09-16T23:46:01.454172Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.45428Z	        
2025-09-16T23:46:01.454377Z	    _id,
2025-09-16T23:46:01.454471Z	    _type,
2025-09-16T23:46:01.454563Z	    partNumber,
2025-09-16T23:46:01.454654Z	    "slug": slug.current,
2025-09-16T23:46:01.454829Z	    title,
2025-09-16T23:46:01.455258Z	    shortDescription,
2025-09-16T23:46:01.455503Z	    image,
2025-09-16T23:46:01.45581Z	    brand->{
2025-09-16T23:46:01.456071Z	      name,
2025-09-16T23:46:01.456239Z	      "slug": slug.current,
2025-09-16T23:46:01.456344Z	      logo
2025-09-16T23:46:01.456445Z	    },
2025-09-16T23:46:01.4566Z	    category->{
2025-09-16T23:46:01.456722Z	      name,
2025-09-16T23:46:01.456824Z	      "slug": slug.current
2025-09-16T23:46:01.456985Z	    },
2025-09-16T23:46:01.457189Z	    pricing{
2025-09-16T23:46:01.45736Z	      currency,
2025-09-16T23:46:01.457525Z	      tiers[]{
2025-09-16T23:46:01.457834Z	        quantity,
2025-09-16T23:46:01.457956Z	        price,
2025-09-16T23:46:01.458162Z	        unit
2025-09-16T23:46:01.458313Z	      },
2025-09-16T23:46:01.458459Z	      moq,
2025-09-16T23:46:01.458557Z	      leadTime,
2025-09-16T23:46:01.45887Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.459055Z	      "price": tiers[0].price,
2025-09-16T23:46:01.459154Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.459276Z	    },
2025-09-16T23:46:01.459381Z	    inventory{
2025-09-16T23:46:01.459476Z	      quantity,
2025-09-16T23:46:01.462813Z	      status,
2025-09-16T23:46:01.462976Z	      warehouse,
2025-09-16T23:46:01.463103Z	      lastUpdated,
2025-09-16T23:46:01.463232Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.463358Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.463464Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.463571Z	    },
2025-09-16T23:46:01.463708Z	    isActive,
2025-09-16T23:46:01.463824Z	    isFeatured,
2025-09-16T23:46:01.463927Z	    isNew,
2025-09-16T23:46:01.464028Z	    _createdAt,
2025-09-16T23:46:01.464131Z	    _updatedAt
2025-09-16T23:46:01.464228Z	  
2025-09-16T23:46:01.464327Z	      },
2025-09-16T23:46:01.464442Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-16T23:46:01.464563Z	    }
2025-09-16T23:46:01.464697Z	  
2025-09-16T23:46:01.464813Z	Query parameters: {
2025-09-16T23:46:01.464922Z	  limit: 8,
2025-09-16T23:46:01.46503Z	  offset: 0,
2025-09-16T23:46:01.465134Z	  category: undefined,
2025-09-16T23:46:01.46524Z	  brand: '英飞凌',
2025-09-16T23:46:01.465347Z	  featured: undefined
2025-09-16T23:46:01.465451Z	}
2025-09-16T23:46:01.46555Z	Fetching solutions with query: 
2025-09-16T23:46:01.465687Z	    {
2025-09-16T23:46:01.465822Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.465946Z	        
2025-09-16T23:46:01.466083Z	    _id,
2025-09-16T23:46:01.466197Z	    title,
2025-09-16T23:46:01.466301Z	    "slug": slug.current,
2025-09-16T23:46:01.466404Z	    summary,
2025-09-16T23:46:01.466507Z	    description,
2025-09-16T23:46:01.466611Z	    coverImage,
2025-09-16T23:46:01.466752Z	    primaryBrand->{
2025-09-16T23:46:01.466858Z	      _id,
2025-09-16T23:46:01.467017Z	      name,
2025-09-16T23:46:01.467224Z	      "slug": slug.current,
2025-09-16T23:46:01.467348Z	      logo
2025-09-16T23:46:01.467459Z	    },
2025-09-16T23:46:01.467572Z	    relatedBrands[]->{
2025-09-16T23:46:01.467702Z	      _id,
2025-09-16T23:46:01.467841Z	      name,
2025-09-16T23:46:01.467955Z	      "slug": slug.current,
2025-09-16T23:46:01.468063Z	      logo
2025-09-16T23:46:01.46826Z	    },
2025-09-16T23:46:01.468394Z	    targetMarket,
2025-09-16T23:46:01.468503Z	    complexity,
2025-09-16T23:46:01.46991Z	    publishedAt,
2025-09-16T23:46:01.470101Z	    isPublished,
2025-09-16T23:46:01.470328Z	    isFeatured,
2025-09-16T23:46:01.47052Z	    viewCount,
2025-09-16T23:46:01.470803Z	    _createdAt,
2025-09-16T23:46:01.47106Z	    _updatedAt
2025-09-16T23:46:01.471324Z	  
2025-09-16T23:46:01.471456Z	      },
2025-09-16T23:46:01.47156Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-16T23:46:01.472897Z	    }
2025-09-16T23:46:01.473144Z	  
2025-09-16T23:46:01.473253Z	Query parameters: {
2025-09-16T23:46:01.47334Z	  limit: 4,
2025-09-16T23:46:01.47342Z	  offset: 0,
2025-09-16T23:46:01.473499Z	  targetMarket: undefined,
2025-09-16T23:46:01.473599Z	  brand: '英飞凌',
2025-09-16T23:46:01.473862Z	  featured: undefined
2025-09-16T23:46:01.473978Z	}
2025-09-16T23:46:01.474147Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-16T23:46:01.474285Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:01.47438Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:01.474474Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-16T23:46:01.474589Z	Fetching products with query: 
2025-09-16T23:46:01.474715Z	    {
2025-09-16T23:46:01.47483Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.474929Z	        
2025-09-16T23:46:01.475018Z	    _id,
2025-09-16T23:46:01.475108Z	    _type,
2025-09-16T23:46:01.475194Z	    partNumber,
2025-09-16T23:46:01.475685Z	    "slug": slug.current,
2025-09-16T23:46:01.475807Z	    title,
2025-09-16T23:46:01.475972Z	    shortDescription,
2025-09-16T23:46:01.476038Z	    image,
2025-09-16T23:46:01.476094Z	    brand->{
2025-09-16T23:46:01.476163Z	      name,
2025-09-16T23:46:01.476225Z	      "slug": slug.current,
2025-09-16T23:46:01.476282Z	      logo
2025-09-16T23:46:01.476337Z	    },
2025-09-16T23:46:01.47639Z	    category->{
2025-09-16T23:46:01.476511Z	      name,
2025-09-16T23:46:01.476566Z	      "slug": slug.current
2025-09-16T23:46:01.476785Z	    },
2025-09-16T23:46:01.47691Z	    pricing{
2025-09-16T23:46:01.477193Z	      currency,
2025-09-16T23:46:01.477348Z	      tiers[]{
2025-09-16T23:46:01.477533Z	        quantity,
2025-09-16T23:46:01.477693Z	        price,
2025-09-16T23:46:01.477814Z	        unit
2025-09-16T23:46:01.477941Z	      },
2025-09-16T23:46:01.478042Z	      moq,
2025-09-16T23:46:01.478138Z	      leadTime,
2025-09-16T23:46:01.478233Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.478336Z	      "price": tiers[0].price,
2025-09-16T23:46:01.47843Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.478527Z	    },
2025-09-16T23:46:01.478619Z	    inventory{
2025-09-16T23:46:01.478754Z	      quantity,
2025-09-16T23:46:01.478865Z	      status,
2025-09-16T23:46:01.478963Z	      warehouse,
2025-09-16T23:46:01.479055Z	      lastUpdated,
2025-09-16T23:46:01.479148Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.479271Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.479367Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.479467Z	    },
2025-09-16T23:46:01.479562Z	    isActive,
2025-09-16T23:46:01.479654Z	    isFeatured,
2025-09-16T23:46:01.479785Z	    isNew,
2025-09-16T23:46:01.479882Z	    _createdAt,
2025-09-16T23:46:01.479988Z	    _updatedAt
2025-09-16T23:46:01.480083Z	  
2025-09-16T23:46:01.480179Z	      },
2025-09-16T23:46:01.480289Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-16T23:46:01.480393Z	    }
2025-09-16T23:46:01.480487Z	  
2025-09-16T23:46:01.480577Z	Query parameters: {
2025-09-16T23:46:01.523959Z	  limit: 8,
2025-09-16T23:46:01.524259Z	  offset: 0,
2025-09-16T23:46:01.524377Z	  category: undefined,
2025-09-16T23:46:01.524481Z	  brand: '英飞凌',
2025-09-16T23:46:01.525105Z	  featured: undefined
2025-09-16T23:46:01.525427Z	}
2025-09-16T23:46:01.525655Z	Fetching solutions with query: 
2025-09-16T23:46:01.525873Z	    {
2025-09-16T23:46:01.526112Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.52626Z	        
2025-09-16T23:46:01.526454Z	    _id,
2025-09-16T23:46:01.526651Z	    title,
2025-09-16T23:46:01.526855Z	    "slug": slug.current,
2025-09-16T23:46:01.526989Z	    summary,
2025-09-16T23:46:01.527363Z	    description,
2025-09-16T23:46:01.527655Z	    coverImage,
2025-09-16T23:46:01.527828Z	    primaryBrand->{
2025-09-16T23:46:01.528083Z	      _id,
2025-09-16T23:46:01.528239Z	      name,
2025-09-16T23:46:01.528338Z	      "slug": slug.current,
2025-09-16T23:46:01.528436Z	      logo
2025-09-16T23:46:01.528624Z	    },
2025-09-16T23:46:01.528828Z	    relatedBrands[]->{
2025-09-16T23:46:01.528972Z	      _id,
2025-09-16T23:46:01.529149Z	      name,
2025-09-16T23:46:01.529315Z	      "slug": slug.current,
2025-09-16T23:46:01.529474Z	      logo
2025-09-16T23:46:01.529687Z	    },
2025-09-16T23:46:01.529893Z	    targetMarket,
2025-09-16T23:46:01.530092Z	    complexity,
2025-09-16T23:46:01.530233Z	    publishedAt,
2025-09-16T23:46:01.530349Z	    isPublished,
2025-09-16T23:46:01.530467Z	    isFeatured,
2025-09-16T23:46:01.530581Z	    viewCount,
2025-09-16T23:46:01.530717Z	    _createdAt,
2025-09-16T23:46:01.530829Z	    _updatedAt
2025-09-16T23:46:01.530937Z	  
2025-09-16T23:46:01.531041Z	      },
2025-09-16T23:46:01.531153Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-16T23:46:01.531271Z	    }
2025-09-16T23:46:01.531394Z	  
2025-09-16T23:46:01.531512Z	Query parameters: {
2025-09-16T23:46:01.531618Z	  limit: 4,
2025-09-16T23:46:01.531748Z	  offset: 0,
2025-09-16T23:46:01.531851Z	  targetMarket: undefined,
2025-09-16T23:46:01.531951Z	  brand: '英飞凌',
2025-09-16T23:46:01.532047Z	  featured: undefined
2025-09-16T23:46:01.532145Z	}
2025-09-16T23:46:01.532244Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-16T23:46:01.532354Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:01.532625Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:01.532854Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-16T23:46:01.533028Z	Fetching products with query: 
2025-09-16T23:46:01.533234Z	    {
2025-09-16T23:46:01.534649Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.534814Z	        
2025-09-16T23:46:01.534934Z	    _id,
2025-09-16T23:46:01.535043Z	    _type,
2025-09-16T23:46:01.53515Z	    partNumber,
2025-09-16T23:46:01.53534Z	    "slug": slug.current,
2025-09-16T23:46:01.535462Z	    title,
2025-09-16T23:46:01.535555Z	    shortDescription,
2025-09-16T23:46:01.53564Z	    image,
2025-09-16T23:46:01.535757Z	    brand->{
2025-09-16T23:46:01.535858Z	      name,
2025-09-16T23:46:01.535967Z	      "slug": slug.current,
2025-09-16T23:46:01.536069Z	      logo
2025-09-16T23:46:01.536166Z	    },
2025-09-16T23:46:01.536285Z	    category->{
2025-09-16T23:46:01.53639Z	      name,
2025-09-16T23:46:01.53651Z	      "slug": slug.current
2025-09-16T23:46:01.536621Z	    },
2025-09-16T23:46:01.536741Z	    pricing{
2025-09-16T23:46:01.536842Z	      currency,
2025-09-16T23:46:01.536946Z	      tiers[]{
2025-09-16T23:46:01.537056Z	        quantity,
2025-09-16T23:46:01.537159Z	        price,
2025-09-16T23:46:01.537266Z	        unit
2025-09-16T23:46:01.537368Z	      },
2025-09-16T23:46:01.537481Z	      moq,
2025-09-16T23:46:01.537592Z	      leadTime,
2025-09-16T23:46:01.537732Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.537852Z	      "price": tiers[0].price,
2025-09-16T23:46:01.538021Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.538289Z	    },
2025-09-16T23:46:01.539737Z	    inventory{
2025-09-16T23:46:01.540008Z	      quantity,
2025-09-16T23:46:01.540223Z	      status,
2025-09-16T23:46:01.540444Z	      warehouse,
2025-09-16T23:46:01.540662Z	      lastUpdated,
2025-09-16T23:46:01.540858Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.541045Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.541187Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.541311Z	    },
2025-09-16T23:46:01.541449Z	    isActive,
2025-09-16T23:46:01.541596Z	    isFeatured,
2025-09-16T23:46:01.541762Z	    isNew,
2025-09-16T23:46:01.541928Z	    _createdAt,
2025-09-16T23:46:01.542434Z	    _updatedAt
2025-09-16T23:46:01.542773Z	  
2025-09-16T23:46:01.54312Z	      },
2025-09-16T23:46:01.543239Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-16T23:46:01.543347Z	    }
2025-09-16T23:46:01.543442Z	  
2025-09-16T23:46:01.543535Z	Query parameters: {
2025-09-16T23:46:01.543636Z	  limit: 8,
2025-09-16T23:46:01.54376Z	  offset: 0,
2025-09-16T23:46:01.543863Z	  category: undefined,
2025-09-16T23:46:01.54397Z	  brand: 'lem',
2025-09-16T23:46:01.544352Z	  featured: undefined
2025-09-16T23:46:01.544508Z	}
2025-09-16T23:46:01.54464Z	Fetching solutions with query: 
2025-09-16T23:46:01.544789Z	    {
2025-09-16T23:46:01.544912Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.54503Z	        
2025-09-16T23:46:01.545185Z	    _id,
2025-09-16T23:46:01.545287Z	    title,
2025-09-16T23:46:01.545388Z	    "slug": slug.current,
2025-09-16T23:46:01.545487Z	    summary,
2025-09-16T23:46:01.545587Z	    description,
2025-09-16T23:46:01.545739Z	    coverImage,
2025-09-16T23:46:01.545875Z	    primaryBrand->{
2025-09-16T23:46:01.545977Z	      _id,
2025-09-16T23:46:01.546075Z	      name,
2025-09-16T23:46:01.546189Z	      "slug": slug.current,
2025-09-16T23:46:01.546287Z	      logo
2025-09-16T23:46:01.546398Z	    },
2025-09-16T23:46:01.546499Z	    relatedBrands[]->{
2025-09-16T23:46:01.546598Z	      _id,
2025-09-16T23:46:01.546745Z	      name,
2025-09-16T23:46:01.546863Z	      "slug": slug.current,
2025-09-16T23:46:01.546991Z	      logo
2025-09-16T23:46:01.54727Z	    },
2025-09-16T23:46:01.547416Z	    targetMarket,
2025-09-16T23:46:01.547537Z	    complexity,
2025-09-16T23:46:01.547665Z	    publishedAt,
2025-09-16T23:46:01.547815Z	    isPublished,
2025-09-16T23:46:01.547979Z	    isFeatured,
2025-09-16T23:46:01.54816Z	    viewCount,
2025-09-16T23:46:01.548266Z	    _createdAt,
2025-09-16T23:46:01.548396Z	    _updatedAt
2025-09-16T23:46:01.548519Z	  
2025-09-16T23:46:01.548666Z	      },
2025-09-16T23:46:01.548811Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-16T23:46:01.548924Z	    }
2025-09-16T23:46:01.549027Z	  
2025-09-16T23:46:01.549128Z	Query parameters: {
2025-09-16T23:46:01.549222Z	  limit: 4,
2025-09-16T23:46:01.549326Z	  offset: 0,
2025-09-16T23:46:01.549441Z	  targetMarket: undefined,
2025-09-16T23:46:01.549543Z	  brand: 'lem',
2025-09-16T23:46:01.549649Z	  featured: undefined
2025-09-16T23:46:01.549771Z	}
2025-09-16T23:46:01.54988Z	✅ [getBrandData] Found brand: LEM
2025-09-16T23:46:01.550001Z	Products fetch result: {
2025-09-16T23:46:01.550108Z	  totalProducts: 3,
2025-09-16T23:46:01.55021Z	  fetchedProducts: 3,
2025-09-16T23:46:01.55031Z	  firstProduct: {
2025-09-16T23:46:01.550423Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-16T23:46:01.550522Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-16T23:46:01.55062Z	    _type: 'product',
2025-09-16T23:46:01.550741Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-16T23:46:01.550841Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-16T23:46:01.550947Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-16T23:46:01.551046Z	    image: null,
2025-09-16T23:46:01.551141Z	    inventory: {
2025-09-16T23:46:01.551234Z	      inStock: true,
2025-09-16T23:46:01.551321Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-16T23:46:01.551436Z	      quantity: 0,
2025-09-16T23:46:01.551542Z	      status: 'in_stock',
2025-09-16T23:46:01.551643Z	      warehouse: null
2025-09-16T23:46:01.551762Z	    },
2025-09-16T23:46:01.551861Z	    isActive: true,
2025-09-16T23:46:01.55196Z	    isFeatured: false,
2025-09-16T23:46:01.55206Z	    isNew: false,
2025-09-16T23:46:01.552174Z	    partNumber: 'la55-p',
2025-09-16T23:46:01.552286Z	    pricing: {
2025-09-16T23:46:01.552391Z	      currency: 'CNY',
2025-09-16T23:46:01.552491Z	      leadTime: null,
2025-09-16T23:46:01.552587Z	      moq: null,
2025-09-16T23:46:01.552716Z	      price: null,
2025-09-16T23:46:01.552813Z	      tiers: null
2025-09-16T23:46:01.552896Z	    },
2025-09-16T23:46:01.552981Z	    shortDescription: '电流传感器la55-p',
2025-09-16T23:46:01.553071Z	    slug: 'la55-p',
2025-09-16T23:46:01.553164Z	    title: '电流传感器la55-p'
2025-09-16T23:46:01.553252Z	  }
2025-09-16T23:46:01.553355Z	}
2025-09-16T23:46:01.553466Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:01.553566Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-16T23:46:01.553662Z	Fetching products with query: 
2025-09-16T23:46:01.553775Z	    {
2025-09-16T23:46:01.553869Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.553981Z	        
2025-09-16T23:46:01.554074Z	    _id,
2025-09-16T23:46:01.55445Z	    _type,
2025-09-16T23:46:01.554635Z	    partNumber,
2025-09-16T23:46:01.554826Z	    "slug": slug.current,
2025-09-16T23:46:01.55497Z	    title,
2025-09-16T23:46:01.555216Z	    shortDescription,
2025-09-16T23:46:01.555593Z	    image,
2025-09-16T23:46:01.555982Z	    brand->{
2025-09-16T23:46:01.5562Z	      name,
2025-09-16T23:46:01.556313Z	      "slug": slug.current,
2025-09-16T23:46:01.556374Z	      logo
2025-09-16T23:46:01.556432Z	    },
2025-09-16T23:46:01.556661Z	    category->{
2025-09-16T23:46:01.556868Z	      name,
2025-09-16T23:46:01.557034Z	      "slug": slug.current
2025-09-16T23:46:01.557159Z	    },
2025-09-16T23:46:01.557308Z	    pricing{
2025-09-16T23:46:01.557569Z	      currency,
2025-09-16T23:46:01.557749Z	      tiers[]{
2025-09-16T23:46:01.557971Z	        quantity,
2025-09-16T23:46:01.558067Z	        price,
2025-09-16T23:46:01.55815Z	        unit
2025-09-16T23:46:01.558327Z	      },
2025-09-16T23:46:01.558465Z	      moq,
2025-09-16T23:46:01.558542Z	      leadTime,
2025-09-16T23:46:01.558616Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.558788Z	      "price": tiers[0].price,
2025-09-16T23:46:01.558893Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.559045Z	    },
2025-09-16T23:46:01.559146Z	    inventory{
2025-09-16T23:46:01.559263Z	      quantity,
2025-09-16T23:46:01.559377Z	      status,
2025-09-16T23:46:01.559497Z	      warehouse,
2025-09-16T23:46:01.5596Z	      lastUpdated,
2025-09-16T23:46:01.559732Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.559854Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.559963Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.560073Z	    },
2025-09-16T23:46:01.560193Z	    isActive,
2025-09-16T23:46:01.560306Z	    isFeatured,
2025-09-16T23:46:01.560439Z	    isNew,
2025-09-16T23:46:01.560643Z	    _createdAt,
2025-09-16T23:46:01.560788Z	    _updatedAt
2025-09-16T23:46:01.560891Z	  
2025-09-16T23:46:01.560991Z	      },
2025-09-16T23:46:01.561078Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-16T23:46:01.561177Z	    }
2025-09-16T23:46:01.561277Z	  
2025-09-16T23:46:01.561366Z	Query parameters: {
2025-09-16T23:46:01.561453Z	  limit: 8,
2025-09-16T23:46:01.561544Z	  offset: 0,
2025-09-16T23:46:01.561634Z	  category: undefined,
2025-09-16T23:46:01.561766Z	  brand: 'lem',
2025-09-16T23:46:01.561861Z	  featured: undefined
2025-09-16T23:46:01.56195Z	}
2025-09-16T23:46:01.562047Z	Fetching solutions with query: 
2025-09-16T23:46:01.562135Z	    {
2025-09-16T23:46:01.562224Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.56289Z	        
2025-09-16T23:46:01.563142Z	    _id,
2025-09-16T23:46:01.563282Z	    title,
2025-09-16T23:46:01.563424Z	    "slug": slug.current,
2025-09-16T23:46:01.563538Z	    summary,
2025-09-16T23:46:01.563645Z	    description,
2025-09-16T23:46:01.563782Z	    coverImage,
2025-09-16T23:46:01.563896Z	    primaryBrand->{
2025-09-16T23:46:01.564004Z	      _id,
2025-09-16T23:46:01.564111Z	      name,
2025-09-16T23:46:01.564204Z	      "slug": slug.current,
2025-09-16T23:46:01.564292Z	      logo
2025-09-16T23:46:01.564387Z	    },
2025-09-16T23:46:01.56451Z	    relatedBrands[]->{
2025-09-16T23:46:01.564622Z	      _id,
2025-09-16T23:46:01.564766Z	      name,
2025-09-16T23:46:01.564888Z	      "slug": slug.current,
2025-09-16T23:46:01.565003Z	      logo
2025-09-16T23:46:01.565118Z	    },
2025-09-16T23:46:01.565235Z	    targetMarket,
2025-09-16T23:46:01.565351Z	    complexity,
2025-09-16T23:46:01.565476Z	    publishedAt,
2025-09-16T23:46:01.565586Z	    isPublished,
2025-09-16T23:46:01.565726Z	    isFeatured,
2025-09-16T23:46:01.565841Z	    viewCount,
2025-09-16T23:46:01.565948Z	    _createdAt,
2025-09-16T23:46:01.56605Z	    _updatedAt
2025-09-16T23:46:01.566154Z	  
2025-09-16T23:46:01.566321Z	      },
2025-09-16T23:46:01.566443Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-16T23:46:01.566549Z	    }
2025-09-16T23:46:01.566644Z	  
2025-09-16T23:46:01.566761Z	Query parameters: {
2025-09-16T23:46:01.56686Z	  limit: 4,
2025-09-16T23:46:01.566956Z	  offset: 0,
2025-09-16T23:46:01.56705Z	  targetMarket: undefined,
2025-09-16T23:46:01.567151Z	  brand: 'lem',
2025-09-16T23:46:01.567243Z	  featured: undefined
2025-09-16T23:46:01.567351Z	}
2025-09-16T23:46:01.567479Z	✅ [getBrandData] Found brand: LEM
2025-09-16T23:46:01.567605Z	Products fetch result: {
2025-09-16T23:46:01.567728Z	  totalProducts: 3,
2025-09-16T23:46:01.56783Z	  fetchedProducts: 3,
2025-09-16T23:46:01.567926Z	  firstProduct: {
2025-09-16T23:46:01.568026Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-16T23:46:01.568153Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-16T23:46:01.568269Z	    _type: 'product',
2025-09-16T23:46:01.568383Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-16T23:46:01.568514Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-16T23:46:01.568624Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-16T23:46:01.568754Z	    image: null,
2025-09-16T23:46:01.568881Z	    inventory: {
2025-09-16T23:46:01.568986Z	      inStock: true,
2025-09-16T23:46:01.569083Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-16T23:46:01.569174Z	      quantity: 0,
2025-09-16T23:46:01.569264Z	      status: 'in_stock',
2025-09-16T23:46:01.569358Z	      warehouse: null
2025-09-16T23:46:01.569477Z	    },
2025-09-16T23:46:01.569578Z	    isActive: true,
2025-09-16T23:46:01.569671Z	    isFeatured: false,
2025-09-16T23:46:01.569803Z	    isNew: false,
2025-09-16T23:46:01.569909Z	    partNumber: 'la55-p',
2025-09-16T23:46:01.570015Z	    pricing: {
2025-09-16T23:46:01.571875Z	      currency: 'CNY',
2025-09-16T23:46:01.572024Z	      leadTime: null,
2025-09-16T23:46:01.572135Z	      moq: null,
2025-09-16T23:46:01.572237Z	      price: null,
2025-09-16T23:46:01.572334Z	      tiers: null
2025-09-16T23:46:01.572445Z	    },
2025-09-16T23:46:01.572548Z	    shortDescription: '电流传感器la55-p',
2025-09-16T23:46:01.572646Z	    slug: 'la55-p',
2025-09-16T23:46:01.572766Z	    title: '电流传感器la55-p'
2025-09-16T23:46:01.57286Z	  }
2025-09-16T23:46:01.572948Z	}
2025-09-16T23:46:01.573029Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:01.573121Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:46:01.573212Z	Fetching products with query: 
2025-09-16T23:46:01.573304Z	    {
2025-09-16T23:46:01.573395Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.573505Z	        
2025-09-16T23:46:01.573594Z	    _id,
2025-09-16T23:46:01.573699Z	    _type,
2025-09-16T23:46:01.573807Z	    partNumber,
2025-09-16T23:46:01.573969Z	    "slug": slug.current,
2025-09-16T23:46:01.574074Z	    title,
2025-09-16T23:46:01.574168Z	    shortDescription,
2025-09-16T23:46:01.57428Z	    image,
2025-09-16T23:46:01.574384Z	    brand->{
2025-09-16T23:46:01.574487Z	      name,
2025-09-16T23:46:01.574573Z	      "slug": slug.current,
2025-09-16T23:46:01.574654Z	      logo
2025-09-16T23:46:01.574768Z	    },
2025-09-16T23:46:01.574874Z	    category->{
2025-09-16T23:46:01.574989Z	      name,
2025-09-16T23:46:01.575085Z	      "slug": slug.current
2025-09-16T23:46:01.575307Z	    },
2025-09-16T23:46:01.575485Z	    pricing{
2025-09-16T23:46:01.575614Z	      currency,
2025-09-16T23:46:01.575805Z	      tiers[]{
2025-09-16T23:46:01.575926Z	        quantity,
2025-09-16T23:46:01.576038Z	        price,
2025-09-16T23:46:01.576158Z	        unit
2025-09-16T23:46:01.576272Z	      },
2025-09-16T23:46:01.576381Z	      moq,
2025-09-16T23:46:01.576495Z	      leadTime,
2025-09-16T23:46:01.576608Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.576773Z	      "price": tiers[0].price,
2025-09-16T23:46:01.576957Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.577087Z	    },
2025-09-16T23:46:01.577204Z	    inventory{
2025-09-16T23:46:01.577318Z	      quantity,
2025-09-16T23:46:01.577436Z	      status,
2025-09-16T23:46:01.577548Z	      warehouse,
2025-09-16T23:46:01.57769Z	      lastUpdated,
2025-09-16T23:46:01.577817Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.577935Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.578051Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.578165Z	    },
2025-09-16T23:46:01.578272Z	    isActive,
2025-09-16T23:46:01.578377Z	    isFeatured,
2025-09-16T23:46:01.578483Z	    isNew,
2025-09-16T23:46:01.578591Z	    _createdAt,
2025-09-16T23:46:01.578769Z	    _updatedAt
2025-09-16T23:46:01.578932Z	  
2025-09-16T23:46:01.579593Z	      },
2025-09-16T23:46:01.579724Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:46:01.579828Z	    }
2025-09-16T23:46:01.579923Z	  
2025-09-16T23:46:01.580015Z	Query parameters: {
2025-09-16T23:46:01.580172Z	  limit: 8,
2025-09-16T23:46:01.580268Z	  offset: 0,
2025-09-16T23:46:01.580358Z	  category: undefined,
2025-09-16T23:46:01.580457Z	  brand: 'Electronicon',
2025-09-16T23:46:01.58055Z	  featured: undefined
2025-09-16T23:46:01.580648Z	}
2025-09-16T23:46:01.580755Z	Fetching solutions with query: 
2025-09-16T23:46:01.580824Z	    {
2025-09-16T23:46:01.580881Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.580949Z	        
2025-09-16T23:46:01.581007Z	    _id,
2025-09-16T23:46:01.581063Z	    title,
2025-09-16T23:46:01.581119Z	    "slug": slug.current,
2025-09-16T23:46:01.581175Z	    summary,
2025-09-16T23:46:01.581229Z	    description,
2025-09-16T23:46:01.581291Z	    coverImage,
2025-09-16T23:46:01.581346Z	    primaryBrand->{
2025-09-16T23:46:01.581406Z	      _id,
2025-09-16T23:46:01.581462Z	      name,
2025-09-16T23:46:01.581533Z	      "slug": slug.current,
2025-09-16T23:46:01.581591Z	      logo
2025-09-16T23:46:01.581661Z	    },
2025-09-16T23:46:01.624165Z	    relatedBrands[]->{
2025-09-16T23:46:01.624386Z	      _id,
2025-09-16T23:46:01.624533Z	      name,
2025-09-16T23:46:01.624881Z	      "slug": slug.current,
2025-09-16T23:46:01.627007Z	      logo
2025-09-16T23:46:01.627205Z	    },
2025-09-16T23:46:01.627635Z	    targetMarket,
2025-09-16T23:46:01.628049Z	    complexity,
2025-09-16T23:46:01.62853Z	    publishedAt,
2025-09-16T23:46:01.628905Z	    isPublished,
2025-09-16T23:46:01.629256Z	    isFeatured,
2025-09-16T23:46:01.629383Z	    viewCount,
2025-09-16T23:46:01.629529Z	    _createdAt,
2025-09-16T23:46:01.62973Z	    _updatedAt
2025-09-16T23:46:01.629854Z	  
2025-09-16T23:46:01.629962Z	      },
2025-09-16T23:46:01.630063Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:46:01.630168Z	    }
2025-09-16T23:46:01.630273Z	  
2025-09-16T23:46:01.630369Z	Query parameters: {
2025-09-16T23:46:01.630475Z	  limit: 4,
2025-09-16T23:46:01.630567Z	  offset: 0,
2025-09-16T23:46:01.630656Z	  targetMarket: undefined,
2025-09-16T23:46:01.630791Z	  brand: 'Electronicon',
2025-09-16T23:46:01.630898Z	  featured: undefined
2025-09-16T23:46:01.630999Z	}
2025-09-16T23:46:01.631102Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:46:01.631202Z	Products fetch result: {
2025-09-16T23:46:01.631296Z	  totalProducts: 2,
2025-09-16T23:46:01.631389Z	  fetchedProducts: 2,
2025-09-16T23:46:01.631494Z	  firstProduct: {
2025-09-16T23:46:01.631589Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:46:01.631712Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:46:01.631817Z	    _type: 'product',
2025-09-16T23:46:01.631906Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:46:01.631997Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:46:01.632084Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:46:01.63217Z	    image: null,
2025-09-16T23:46:01.63226Z	    inventory: {
2025-09-16T23:46:01.63235Z	      inStock: true,
2025-09-16T23:46:01.632458Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:46:01.632563Z	      quantity: 0,
2025-09-16T23:46:01.632669Z	      status: 'in_stock',
2025-09-16T23:46:01.632789Z	      warehouse: null
2025-09-16T23:46:01.632885Z	    },
2025-09-16T23:46:01.632981Z	    isActive: true,
2025-09-16T23:46:01.633087Z	    isFeatured: false,
2025-09-16T23:46:01.633183Z	    isNew: false,
2025-09-16T23:46:01.633278Z	    partNumber: '99999',
2025-09-16T23:46:01.633376Z	    pricing: {
2025-09-16T23:46:01.633484Z	      currency: 'CNY',
2025-09-16T23:46:01.633576Z	      leadTime: null,
2025-09-16T23:46:01.633659Z	      moq: null,
2025-09-16T23:46:01.633798Z	      price: null,
2025-09-16T23:46:01.633896Z	      tiers: null
2025-09-16T23:46:01.633993Z	    },
2025-09-16T23:46:01.634089Z	    shortDescription: null,
2025-09-16T23:46:01.634179Z	    slug: '99999',
2025-09-16T23:46:01.634267Z	    title: '99999'
2025-09-16T23:46:01.634355Z	  }
2025-09-16T23:46:01.63445Z	}
2025-09-16T23:46:01.634553Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:01.634653Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:46:01.634782Z	Fetching products with query: 
2025-09-16T23:46:01.634881Z	    {
2025-09-16T23:46:01.634982Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.635084Z	        
2025-09-16T23:46:01.635224Z	    _id,
2025-09-16T23:46:01.635341Z	    _type,
2025-09-16T23:46:01.635465Z	    partNumber,
2025-09-16T23:46:01.635569Z	    "slug": slug.current,
2025-09-16T23:46:01.635672Z	    title,
2025-09-16T23:46:01.63579Z	    shortDescription,
2025-09-16T23:46:01.635891Z	    image,
2025-09-16T23:46:01.635988Z	    brand->{
2025-09-16T23:46:01.63608Z	      name,
2025-09-16T23:46:01.636703Z	      "slug": slug.current,
2025-09-16T23:46:01.636862Z	      logo
2025-09-16T23:46:01.636967Z	    },
2025-09-16T23:46:01.637059Z	    category->{
2025-09-16T23:46:01.637146Z	      name,
2025-09-16T23:46:01.637231Z	      "slug": slug.current
2025-09-16T23:46:01.637435Z	    },
2025-09-16T23:46:01.638107Z	    pricing{
2025-09-16T23:46:01.638591Z	      currency,
2025-09-16T23:46:01.639118Z	      tiers[]{
2025-09-16T23:46:01.63962Z	        quantity,
2025-09-16T23:46:01.640098Z	        price,
2025-09-16T23:46:01.640923Z	        unit
2025-09-16T23:46:01.641082Z	      },
2025-09-16T23:46:01.641199Z	      moq,
2025-09-16T23:46:01.641316Z	      leadTime,
2025-09-16T23:46:01.641459Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.641581Z	      "price": tiers[0].price,
2025-09-16T23:46:01.642899Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.643038Z	    },
2025-09-16T23:46:01.643139Z	    inventory{
2025-09-16T23:46:01.643232Z	      quantity,
2025-09-16T23:46:01.64333Z	      status,
2025-09-16T23:46:01.643452Z	      warehouse,
2025-09-16T23:46:01.64357Z	      lastUpdated,
2025-09-16T23:46:01.643666Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.643793Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.643909Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.64401Z	    },
2025-09-16T23:46:01.644114Z	    isActive,
2025-09-16T23:46:01.644228Z	    isFeatured,
2025-09-16T23:46:01.644326Z	    isNew,
2025-09-16T23:46:01.644465Z	    _createdAt,
2025-09-16T23:46:01.644581Z	    _updatedAt
2025-09-16T23:46:01.644702Z	  
2025-09-16T23:46:01.644823Z	      },
2025-09-16T23:46:01.644955Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:46:01.64507Z	    }
2025-09-16T23:46:01.645173Z	  
2025-09-16T23:46:01.645293Z	Query parameters: {
2025-09-16T23:46:01.64542Z	  limit: 8,
2025-09-16T23:46:01.645534Z	  offset: 0,
2025-09-16T23:46:01.645748Z	  category: undefined,
2025-09-16T23:46:01.64588Z	  brand: 'Electronicon',
2025-09-16T23:46:01.645992Z	  featured: undefined
2025-09-16T23:46:01.646106Z	}
2025-09-16T23:46:01.646213Z	Fetching solutions with query: 
2025-09-16T23:46:01.646389Z	    {
2025-09-16T23:46:01.646576Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.647229Z	        
2025-09-16T23:46:01.647408Z	    _id,
2025-09-16T23:46:01.648422Z	    title,
2025-09-16T23:46:01.648569Z	    "slug": slug.current,
2025-09-16T23:46:01.648773Z	    summary,
2025-09-16T23:46:01.64918Z	    description,
2025-09-16T23:46:01.649381Z	    coverImage,
2025-09-16T23:46:01.649723Z	    primaryBrand->{
2025-09-16T23:46:01.649884Z	      _id,
2025-09-16T23:46:01.650034Z	      name,
2025-09-16T23:46:01.650182Z	      "slug": slug.current,
2025-09-16T23:46:01.650299Z	      logo
2025-09-16T23:46:01.650404Z	    },
2025-09-16T23:46:01.650523Z	    relatedBrands[]->{
2025-09-16T23:46:01.650625Z	      _id,
2025-09-16T23:46:01.650763Z	      name,
2025-09-16T23:46:01.650894Z	      "slug": slug.current,
2025-09-16T23:46:01.65107Z	      logo
2025-09-16T23:46:01.651185Z	    },
2025-09-16T23:46:01.651282Z	    targetMarket,
2025-09-16T23:46:01.651657Z	    complexity,
2025-09-16T23:46:01.651927Z	    publishedAt,
2025-09-16T23:46:01.65204Z	    isPublished,
2025-09-16T23:46:01.652136Z	    isFeatured,
2025-09-16T23:46:01.65224Z	    viewCount,
2025-09-16T23:46:01.652343Z	    _createdAt,
2025-09-16T23:46:01.652485Z	    _updatedAt
2025-09-16T23:46:01.652587Z	  
2025-09-16T23:46:01.652699Z	      },
2025-09-16T23:46:01.652802Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:46:01.6529Z	    }
2025-09-16T23:46:01.653Z	  
2025-09-16T23:46:01.653094Z	Query parameters: {
2025-09-16T23:46:01.653189Z	  limit: 4,
2025-09-16T23:46:01.653285Z	  offset: 0,
2025-09-16T23:46:01.65339Z	  targetMarket: undefined,
2025-09-16T23:46:01.653496Z	  brand: 'Electronicon',
2025-09-16T23:46:01.653597Z	  featured: undefined
2025-09-16T23:46:01.653725Z	}
2025-09-16T23:46:01.65404Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:46:01.654156Z	Products fetch result: {
2025-09-16T23:46:01.654254Z	  totalProducts: 2,
2025-09-16T23:46:01.654349Z	  fetchedProducts: 2,
2025-09-16T23:46:01.65452Z	  firstProduct: {
2025-09-16T23:46:01.654642Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:46:01.654801Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:46:01.654914Z	    _type: 'product',
2025-09-16T23:46:01.655011Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:46:01.655133Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:46:01.655237Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:46:01.655337Z	    image: null,
2025-09-16T23:46:01.65544Z	    inventory: {
2025-09-16T23:46:01.655529Z	      inStock: true,
2025-09-16T23:46:01.655698Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:46:01.655807Z	      quantity: 0,
2025-09-16T23:46:01.655909Z	      status: 'in_stock',
2025-09-16T23:46:01.655995Z	      warehouse: null
2025-09-16T23:46:01.656079Z	    },
2025-09-16T23:46:01.656306Z	    isActive: true,
2025-09-16T23:46:01.656491Z	    isFeatured: false,
2025-09-16T23:46:01.656613Z	    isNew: false,
2025-09-16T23:46:01.657001Z	    partNumber: '99999',
2025-09-16T23:46:01.657097Z	    pricing: {
2025-09-16T23:46:01.65718Z	      currency: 'CNY',
2025-09-16T23:46:01.657416Z	      leadTime: null,
2025-09-16T23:46:01.657569Z	      moq: null,
2025-09-16T23:46:01.657641Z	      price: null,
2025-09-16T23:46:01.65776Z	      tiers: null
2025-09-16T23:46:01.65786Z	    },
2025-09-16T23:46:01.658095Z	    shortDescription: null,
2025-09-16T23:46:01.658218Z	    slug: '99999',
2025-09-16T23:46:01.6585Z	    title: '99999'
2025-09-16T23:46:01.658705Z	  }
2025-09-16T23:46:01.658847Z	}
2025-09-16T23:46:01.659012Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:01.659179Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-16T23:46:01.659368Z	Fetching products with query: 
2025-09-16T23:46:01.659559Z	    {
2025-09-16T23:46:01.659738Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.659967Z	        
2025-09-16T23:46:01.660124Z	    _id,
2025-09-16T23:46:01.66024Z	    _type,
2025-09-16T23:46:01.66039Z	    partNumber,
2025-09-16T23:46:01.66061Z	    "slug": slug.current,
2025-09-16T23:46:01.660795Z	    title,
2025-09-16T23:46:01.661074Z	    shortDescription,
2025-09-16T23:46:01.661219Z	    image,
2025-09-16T23:46:01.661329Z	    brand->{
2025-09-16T23:46:01.661435Z	      name,
2025-09-16T23:46:01.661615Z	      "slug": slug.current,
2025-09-16T23:46:01.661763Z	      logo
2025-09-16T23:46:01.661919Z	    },
2025-09-16T23:46:01.662044Z	    category->{
2025-09-16T23:46:01.662311Z	      name,
2025-09-16T23:46:01.663716Z	      "slug": slug.current
2025-09-16T23:46:01.663954Z	    },
2025-09-16T23:46:01.664121Z	    pricing{
2025-09-16T23:46:01.664286Z	      currency,
2025-09-16T23:46:01.664445Z	      tiers[]{
2025-09-16T23:46:01.664593Z	        quantity,
2025-09-16T23:46:01.66474Z	        price,
2025-09-16T23:46:01.664848Z	        unit
2025-09-16T23:46:01.664953Z	      },
2025-09-16T23:46:01.665058Z	      moq,
2025-09-16T23:46:01.665177Z	      leadTime,
2025-09-16T23:46:01.665296Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.665415Z	      "price": tiers[0].price,
2025-09-16T23:46:01.665532Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.665653Z	    },
2025-09-16T23:46:01.665787Z	    inventory{
2025-09-16T23:46:01.665897Z	      quantity,
2025-09-16T23:46:01.666007Z	      status,
2025-09-16T23:46:01.666117Z	      warehouse,
2025-09-16T23:46:01.666222Z	      lastUpdated,
2025-09-16T23:46:01.666332Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.666439Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.666543Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.666955Z	    },
2025-09-16T23:46:01.667077Z	    isActive,
2025-09-16T23:46:01.672335Z	    isFeatured,
2025-09-16T23:46:01.672521Z	    isNew,
2025-09-16T23:46:01.672668Z	    _createdAt,
2025-09-16T23:46:01.672802Z	    _updatedAt
2025-09-16T23:46:01.67291Z	  
2025-09-16T23:46:01.673025Z	      },
2025-09-16T23:46:01.673132Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-16T23:46:01.673247Z	    }
2025-09-16T23:46:01.673365Z	  
2025-09-16T23:46:01.673492Z	Query parameters: {
2025-09-16T23:46:01.673594Z	  limit: 8,
2025-09-16T23:46:01.673732Z	  offset: 0,
2025-09-16T23:46:01.673849Z	  category: undefined,
2025-09-16T23:46:01.673954Z	  brand: 'mediatek',
2025-09-16T23:46:01.674057Z	  featured: undefined
2025-09-16T23:46:01.67419Z	}
2025-09-16T23:46:01.674293Z	Fetching solutions with query: 
2025-09-16T23:46:01.674394Z	    {
2025-09-16T23:46:01.674501Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.674612Z	        
2025-09-16T23:46:01.67476Z	    _id,
2025-09-16T23:46:01.675699Z	    title,
2025-09-16T23:46:01.675854Z	    "slug": slug.current,
2025-09-16T23:46:01.675959Z	    summary,
2025-09-16T23:46:01.676066Z	    description,
2025-09-16T23:46:01.682017Z	    coverImage,
2025-09-16T23:46:01.682237Z	    primaryBrand->{
2025-09-16T23:46:01.682346Z	      _id,
2025-09-16T23:46:01.68244Z	      name,
2025-09-16T23:46:01.682551Z	      "slug": slug.current,
2025-09-16T23:46:01.68266Z	      logo
2025-09-16T23:46:01.682792Z	    },
2025-09-16T23:46:01.682892Z	    relatedBrands[]->{
2025-09-16T23:46:01.682993Z	      _id,
2025-09-16T23:46:01.68309Z	      name,
2025-09-16T23:46:01.683186Z	      "slug": slug.current,
2025-09-16T23:46:01.68328Z	      logo
2025-09-16T23:46:01.683374Z	    },
2025-09-16T23:46:01.683486Z	    targetMarket,
2025-09-16T23:46:01.683589Z	    complexity,
2025-09-16T23:46:01.683716Z	    publishedAt,
2025-09-16T23:46:01.683812Z	    isPublished,
2025-09-16T23:46:01.6839Z	    isFeatured,
2025-09-16T23:46:01.683992Z	    viewCount,
2025-09-16T23:46:01.684092Z	    _createdAt,
2025-09-16T23:46:01.684188Z	    _updatedAt
2025-09-16T23:46:01.684278Z	  
2025-09-16T23:46:01.68437Z	      },
2025-09-16T23:46:01.68447Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-16T23:46:01.684566Z	    }
2025-09-16T23:46:01.684667Z	  
2025-09-16T23:46:01.687588Z	Query parameters: {
2025-09-16T23:46:01.687744Z	  limit: 4,
2025-09-16T23:46:01.687849Z	  offset: 0,
2025-09-16T23:46:01.688804Z	  targetMarket: undefined,
2025-09-16T23:46:01.688935Z	  brand: 'mediatek',
2025-09-16T23:46:01.689034Z	  featured: undefined
2025-09-16T23:46:01.68933Z	}
2025-09-16T23:46:01.689441Z	✅ [getBrandData] Found brand: MediaTek
2025-09-16T23:46:01.689539Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:01.689642Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:01.689781Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-16T23:46:01.689888Z	Fetching products with query: 
2025-09-16T23:46:01.689979Z	    {
2025-09-16T23:46:01.69007Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.690167Z	        
2025-09-16T23:46:01.690266Z	    _id,
2025-09-16T23:46:01.690364Z	    _type,
2025-09-16T23:46:01.690468Z	    partNumber,
2025-09-16T23:46:01.690564Z	    "slug": slug.current,
2025-09-16T23:46:01.723989Z	    title,
2025-09-16T23:46:01.724362Z	    shortDescription,
2025-09-16T23:46:01.724504Z	    image,
2025-09-16T23:46:01.724627Z	    brand->{
2025-09-16T23:46:01.72479Z	      name,
2025-09-16T23:46:01.724897Z	      "slug": slug.current,
2025-09-16T23:46:01.725017Z	      logo
2025-09-16T23:46:01.725129Z	    },
2025-09-16T23:46:01.72523Z	    category->{
2025-09-16T23:46:01.725334Z	      name,
2025-09-16T23:46:01.725438Z	      "slug": slug.current
2025-09-16T23:46:01.725537Z	    },
2025-09-16T23:46:01.725743Z	    pricing{
2025-09-16T23:46:01.725846Z	      currency,
2025-09-16T23:46:01.725938Z	      tiers[]{
2025-09-16T23:46:01.726052Z	        quantity,
2025-09-16T23:46:01.726144Z	        price,
2025-09-16T23:46:01.726232Z	        unit
2025-09-16T23:46:01.726317Z	      },
2025-09-16T23:46:01.726405Z	      moq,
2025-09-16T23:46:01.726498Z	      leadTime,
2025-09-16T23:46:01.726606Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.726734Z	      "price": tiers[0].price,
2025-09-16T23:46:01.726878Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.72699Z	    },
2025-09-16T23:46:01.72709Z	    inventory{
2025-09-16T23:46:01.727194Z	      quantity,
2025-09-16T23:46:01.727293Z	      status,
2025-09-16T23:46:01.727392Z	      warehouse,
2025-09-16T23:46:01.727501Z	      lastUpdated,
2025-09-16T23:46:01.72764Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.727767Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.727875Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.727977Z	    },
2025-09-16T23:46:01.728084Z	    isActive,
2025-09-16T23:46:01.728186Z	    isFeatured,
2025-09-16T23:46:01.728287Z	    isNew,
2025-09-16T23:46:01.728388Z	    _createdAt,
2025-09-16T23:46:01.728495Z	    _updatedAt
2025-09-16T23:46:01.728612Z	  
2025-09-16T23:46:01.728764Z	      },
2025-09-16T23:46:01.728885Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-16T23:46:01.729008Z	    }
2025-09-16T23:46:01.729113Z	  
2025-09-16T23:46:01.729231Z	Query parameters: {
2025-09-16T23:46:01.729332Z	  limit: 8,
2025-09-16T23:46:01.729433Z	  offset: 0,
2025-09-16T23:46:01.729529Z	  category: undefined,
2025-09-16T23:46:01.729643Z	  brand: 'mediatek',
2025-09-16T23:46:01.729789Z	  featured: undefined
2025-09-16T23:46:01.729901Z	}
2025-09-16T23:46:01.730003Z	Fetching solutions with query: 
2025-09-16T23:46:01.730125Z	    {
2025-09-16T23:46:01.730248Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.730361Z	        
2025-09-16T23:46:01.730467Z	    _id,
2025-09-16T23:46:01.730571Z	    title,
2025-09-16T23:46:01.730717Z	    "slug": slug.current,
2025-09-16T23:46:01.730921Z	    summary,
2025-09-16T23:46:01.731112Z	    description,
2025-09-16T23:46:01.73131Z	    coverImage,
2025-09-16T23:46:01.731503Z	    primaryBrand->{
2025-09-16T23:46:01.731755Z	      _id,
2025-09-16T23:46:01.731955Z	      name,
2025-09-16T23:46:01.732217Z	      "slug": slug.current,
2025-09-16T23:46:01.736528Z	      logo
2025-09-16T23:46:01.73675Z	    },
2025-09-16T23:46:01.736878Z	    relatedBrands[]->{
2025-09-16T23:46:01.737081Z	      _id,
2025-09-16T23:46:01.737348Z	      name,
2025-09-16T23:46:01.737465Z	      "slug": slug.current,
2025-09-16T23:46:01.737554Z	      logo
2025-09-16T23:46:01.73765Z	    },
2025-09-16T23:46:01.738022Z	    targetMarket,
2025-09-16T23:46:01.738128Z	    complexity,
2025-09-16T23:46:01.738257Z	    publishedAt,
2025-09-16T23:46:01.738423Z	    isPublished,
2025-09-16T23:46:01.738542Z	    isFeatured,
2025-09-16T23:46:01.738635Z	    viewCount,
2025-09-16T23:46:01.738747Z	    _createdAt,
2025-09-16T23:46:01.738843Z	    _updatedAt
2025-09-16T23:46:01.739082Z	  
2025-09-16T23:46:01.739188Z	      },
2025-09-16T23:46:01.739282Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-16T23:46:01.739361Z	    }
2025-09-16T23:46:01.739432Z	  
2025-09-16T23:46:01.739513Z	Query parameters: {
2025-09-16T23:46:01.739585Z	  limit: 4,
2025-09-16T23:46:01.739653Z	  offset: 0,
2025-09-16T23:46:01.739752Z	  targetMarket: undefined,
2025-09-16T23:46:01.739833Z	  brand: 'mediatek',
2025-09-16T23:46:01.739907Z	  featured: undefined
2025-09-16T23:46:01.739979Z	}
2025-09-16T23:46:01.740058Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:46:01.740133Z	Fetching products with query: 
2025-09-16T23:46:01.741662Z	    {
2025-09-16T23:46:01.742064Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.742286Z	        
2025-09-16T23:46:01.742452Z	    _id,
2025-09-16T23:46:01.742769Z	    _type,
2025-09-16T23:46:01.742923Z	    partNumber,
2025-09-16T23:46:01.743051Z	    "slug": slug.current,
2025-09-16T23:46:01.743198Z	    title,
2025-09-16T23:46:01.74336Z	    shortDescription,
2025-09-16T23:46:01.743535Z	    image,
2025-09-16T23:46:01.744959Z	    brand->{
2025-09-16T23:46:01.745094Z	      name,
2025-09-16T23:46:01.745202Z	      "slug": slug.current,
2025-09-16T23:46:01.745301Z	      logo
2025-09-16T23:46:01.745418Z	    },
2025-09-16T23:46:01.745521Z	    category->{
2025-09-16T23:46:01.745615Z	      name,
2025-09-16T23:46:01.745737Z	      "slug": slug.current
2025-09-16T23:46:01.745853Z	    },
2025-09-16T23:46:01.745954Z	    pricing{
2025-09-16T23:46:01.746059Z	      currency,
2025-09-16T23:46:01.746169Z	      tiers[]{
2025-09-16T23:46:01.746286Z	        quantity,
2025-09-16T23:46:01.746395Z	        price,
2025-09-16T23:46:01.746493Z	        unit
2025-09-16T23:46:01.747236Z	      },
2025-09-16T23:46:01.747411Z	      moq,
2025-09-16T23:46:01.747599Z	      leadTime,
2025-09-16T23:46:01.747809Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.74796Z	      "price": tiers[0].price,
2025-09-16T23:46:01.748133Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.74831Z	    },
2025-09-16T23:46:01.748463Z	    inventory{
2025-09-16T23:46:01.748616Z	      quantity,
2025-09-16T23:46:01.748818Z	      status,
2025-09-16T23:46:01.749006Z	      warehouse,
2025-09-16T23:46:01.74915Z	      lastUpdated,
2025-09-16T23:46:01.749271Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.749415Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.749574Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.749743Z	    },
2025-09-16T23:46:01.750223Z	    isActive,
2025-09-16T23:46:01.750386Z	    isFeatured,
2025-09-16T23:46:01.750493Z	    isNew,
2025-09-16T23:46:01.750696Z	    _createdAt,
2025-09-16T23:46:01.750838Z	    _updatedAt
2025-09-16T23:46:01.750948Z	  
2025-09-16T23:46:01.751117Z	      },
2025-09-16T23:46:01.751689Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:46:01.751985Z	    }
2025-09-16T23:46:01.752126Z	  
2025-09-16T23:46:01.752254Z	Query parameters: {
2025-09-16T23:46:01.752392Z	  limit: 8,
2025-09-16T23:46:01.752514Z	  offset: 0,
2025-09-16T23:46:01.752684Z	  category: undefined,
2025-09-16T23:46:01.752808Z	  brand: 'cree',
2025-09-16T23:46:01.752909Z	  featured: undefined
2025-09-16T23:46:01.753073Z	}
2025-09-16T23:46:01.753287Z	Fetching solutions with query: 
2025-09-16T23:46:01.75347Z	    {
2025-09-16T23:46:01.753841Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.753967Z	        
2025-09-16T23:46:01.75407Z	    _id,
2025-09-16T23:46:01.754163Z	    title,
2025-09-16T23:46:01.754227Z	    "slug": slug.current,
2025-09-16T23:46:01.754285Z	    summary,
2025-09-16T23:46:01.754339Z	    description,
2025-09-16T23:46:01.754423Z	    coverImage,
2025-09-16T23:46:01.754481Z	    primaryBrand->{
2025-09-16T23:46:01.75454Z	      _id,
2025-09-16T23:46:01.754621Z	      name,
2025-09-16T23:46:01.754723Z	      "slug": slug.current,
2025-09-16T23:46:01.754796Z	      logo
2025-09-16T23:46:01.754853Z	    },
2025-09-16T23:46:01.754907Z	    relatedBrands[]->{
2025-09-16T23:46:01.754995Z	      _id,
2025-09-16T23:46:01.755056Z	      name,
2025-09-16T23:46:01.755114Z	      "slug": slug.current,
2025-09-16T23:46:01.755195Z	      logo
2025-09-16T23:46:01.755262Z	    },
2025-09-16T23:46:01.755323Z	    targetMarket,
2025-09-16T23:46:01.755383Z	    complexity,
2025-09-16T23:46:01.755441Z	    publishedAt,
2025-09-16T23:46:01.755499Z	    isPublished,
2025-09-16T23:46:01.755557Z	    isFeatured,
2025-09-16T23:46:01.755623Z	    viewCount,
2025-09-16T23:46:01.755699Z	    _createdAt,
2025-09-16T23:46:01.755767Z	    _updatedAt
2025-09-16T23:46:01.755842Z	  
2025-09-16T23:46:01.755903Z	      },
2025-09-16T23:46:01.755961Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:46:01.756019Z	    }
2025-09-16T23:46:01.756075Z	  
2025-09-16T23:46:01.75613Z	Query parameters: {
2025-09-16T23:46:01.756185Z	  limit: 4,
2025-09-16T23:46:01.756253Z	  offset: 0,
2025-09-16T23:46:01.756308Z	  targetMarket: undefined,
2025-09-16T23:46:01.756366Z	  brand: 'cree',
2025-09-16T23:46:01.756423Z	  featured: undefined
2025-09-16T23:46:01.756482Z	}
2025-09-16T23:46:01.756541Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:46:01.756608Z	Products fetch result: {
2025-09-16T23:46:01.756664Z	  totalProducts: 4,
2025-09-16T23:46:01.756751Z	  fetchedProducts: 4,
2025-09-16T23:46:01.756811Z	  firstProduct: {
2025-09-16T23:46:01.756865Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:46:01.756922Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:46:01.75698Z	    _type: 'product',
2025-09-16T23:46:01.75704Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:46:01.757098Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:46:01.757169Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:01.757229Z	    image: null,
2025-09-16T23:46:01.757283Z	    inventory: {
2025-09-16T23:46:01.757338Z	      inStock: true,
2025-09-16T23:46:01.757397Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:46:01.757453Z	      quantity: 0,
2025-09-16T23:46:01.757509Z	      status: 'in_stock',
2025-09-16T23:46:01.757563Z	      warehouse: null
2025-09-16T23:46:01.757628Z	    },
2025-09-16T23:46:01.757707Z	    isActive: true,
2025-09-16T23:46:01.757774Z	    isFeatured: false,
2025-09-16T23:46:01.757829Z	    isNew: false,
2025-09-16T23:46:01.757886Z	    partNumber: '11111',
2025-09-16T23:46:01.757941Z	    pricing: {
2025-09-16T23:46:01.757996Z	      currency: 'CNY',
2025-09-16T23:46:01.758053Z	      leadTime: null,
2025-09-16T23:46:01.758106Z	      moq: null,
2025-09-16T23:46:01.758161Z	      price: null,
2025-09-16T23:46:01.758219Z	      tiers: null
2025-09-16T23:46:01.758274Z	    },
2025-09-16T23:46:01.758329Z	    shortDescription: '11111',
2025-09-16T23:46:01.758387Z	    slug: 'sic mosfet',
2025-09-16T23:46:01.758441Z	    title: '111111'
2025-09-16T23:46:01.758494Z	  }
2025-09-16T23:46:01.758549Z	}
2025-09-16T23:46:01.758607Z	Solutions fetch result: {
2025-09-16T23:46:01.758661Z	  totalSolutions: 6,
2025-09-16T23:46:01.758747Z	  fetchedSolutions: 4,
2025-09-16T23:46:01.758805Z	  firstSolution: {
2025-09-16T23:46:01.758859Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:46:01.758913Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:46:01.759009Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:46:01.759077Z	    complexity: 'medium',
2025-09-16T23:46:01.759135Z	    coverImage: null,
2025-09-16T23:46:01.759189Z	    description: [ [Object] ],
2025-09-16T23:46:01.759264Z	    isFeatured: false,
2025-09-16T23:46:01.759328Z	    isPublished: true,
2025-09-16T23:46:01.759382Z	    primaryBrand: {
2025-09-16T23:46:01.759436Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:46:01.759491Z	      logo: null,
2025-09-16T23:46:01.759544Z	      name: 'CREE',
2025-09-16T23:46:01.759603Z	      slug: 'cree'
2025-09-16T23:46:01.759658Z	    },
2025-09-16T23:46:01.759728Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:46:01.759783Z	    relatedBrands: null,
2025-09-16T23:46:01.759839Z	    slug: '11111',
2025-09-16T23:46:01.759892Z	    summary: '11111',
2025-09-16T23:46:01.75995Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:01.760005Z	    title: '11111',
2025-09-16T23:46:01.760059Z	    viewCount: 0
2025-09-16T23:46:01.760113Z	  }
2025-09-16T23:46:01.760168Z	}
2025-09-16T23:46:01.760223Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:46:01.760287Z	Fetching products with query: 
2025-09-16T23:46:01.760345Z	    {
2025-09-16T23:46:01.760403Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.76046Z	        
2025-09-16T23:46:01.760518Z	    _id,
2025-09-16T23:46:01.760575Z	    _type,
2025-09-16T23:46:01.760639Z	    partNumber,
2025-09-16T23:46:01.760707Z	    "slug": slug.current,
2025-09-16T23:46:01.760764Z	    title,
2025-09-16T23:46:01.76082Z	    shortDescription,
2025-09-16T23:46:01.760878Z	    image,
2025-09-16T23:46:01.760934Z	    brand->{
2025-09-16T23:46:01.760992Z	      name,
2025-09-16T23:46:01.761059Z	      "slug": slug.current,
2025-09-16T23:46:01.761116Z	      logo
2025-09-16T23:46:01.761172Z	    },
2025-09-16T23:46:01.761229Z	    category->{
2025-09-16T23:46:01.761284Z	      name,
2025-09-16T23:46:01.761337Z	      "slug": slug.current
2025-09-16T23:46:01.761392Z	    },
2025-09-16T23:46:01.76145Z	    pricing{
2025-09-16T23:46:01.761505Z	      currency,
2025-09-16T23:46:01.761565Z	      tiers[]{
2025-09-16T23:46:01.761636Z	        quantity,
2025-09-16T23:46:01.761719Z	        price,
2025-09-16T23:46:01.761784Z	        unit
2025-09-16T23:46:01.761842Z	      },
2025-09-16T23:46:01.761897Z	      moq,
2025-09-16T23:46:01.761954Z	      leadTime,
2025-09-16T23:46:01.762011Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.76207Z	      "price": tiers[0].price,
2025-09-16T23:46:01.762133Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.76219Z	    },
2025-09-16T23:46:01.762246Z	    inventory{
2025-09-16T23:46:01.762305Z	      quantity,
2025-09-16T23:46:01.76237Z	      status,
2025-09-16T23:46:01.762435Z	      warehouse,
2025-09-16T23:46:01.762494Z	      lastUpdated,
2025-09-16T23:46:01.762559Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.762626Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.762727Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.762794Z	    },
2025-09-16T23:46:01.76285Z	    isActive,
2025-09-16T23:46:01.762906Z	    isFeatured,
2025-09-16T23:46:01.762962Z	    isNew,
2025-09-16T23:46:01.763022Z	    _createdAt,
2025-09-16T23:46:01.763091Z	    _updatedAt
2025-09-16T23:46:01.763151Z	  
2025-09-16T23:46:01.763211Z	      },
2025-09-16T23:46:01.763273Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:46:01.763339Z	    }
2025-09-16T23:46:01.7634Z	  
2025-09-16T23:46:01.763459Z	Query parameters: {
2025-09-16T23:46:01.763513Z	  limit: 8,
2025-09-16T23:46:01.763568Z	  offset: 0,
2025-09-16T23:46:01.763632Z	  category: undefined,
2025-09-16T23:46:01.763735Z	  brand: 'cree',
2025-09-16T23:46:01.763804Z	  featured: undefined
2025-09-16T23:46:01.763862Z	}
2025-09-16T23:46:01.763918Z	Fetching solutions with query: 
2025-09-16T23:46:01.763977Z	    {
2025-09-16T23:46:01.764034Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.764093Z	        
2025-09-16T23:46:01.764148Z	    _id,
2025-09-16T23:46:01.764209Z	    title,
2025-09-16T23:46:01.764299Z	    "slug": slug.current,
2025-09-16T23:46:01.764399Z	    summary,
2025-09-16T23:46:01.764506Z	    description,
2025-09-16T23:46:01.764723Z	    coverImage,
2025-09-16T23:46:01.764896Z	    primaryBrand->{
2025-09-16T23:46:01.764974Z	      _id,
2025-09-16T23:46:01.765043Z	      name,
2025-09-16T23:46:01.765238Z	      "slug": slug.current,
2025-09-16T23:46:01.765386Z	      logo
2025-09-16T23:46:01.765493Z	    },
2025-09-16T23:46:01.76559Z	    relatedBrands[]->{
2025-09-16T23:46:01.765726Z	      _id,
2025-09-16T23:46:01.766043Z	      name,
2025-09-16T23:46:01.766445Z	      "slug": slug.current,
2025-09-16T23:46:01.766568Z	      logo
2025-09-16T23:46:01.76671Z	    },
2025-09-16T23:46:01.766819Z	    targetMarket,
2025-09-16T23:46:01.766921Z	    complexity,
2025-09-16T23:46:01.767072Z	    publishedAt,
2025-09-16T23:46:01.76718Z	    isPublished,
2025-09-16T23:46:01.767279Z	    isFeatured,
2025-09-16T23:46:01.767417Z	    viewCount,
2025-09-16T23:46:01.767595Z	    _createdAt,
2025-09-16T23:46:01.767735Z	    _updatedAt
2025-09-16T23:46:01.76784Z	  
2025-09-16T23:46:01.767982Z	      },
2025-09-16T23:46:01.768144Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:46:01.768286Z	    }
2025-09-16T23:46:01.768396Z	  
2025-09-16T23:46:01.76858Z	Query parameters: {
2025-09-16T23:46:01.768715Z	  limit: 4,
2025-09-16T23:46:01.768816Z	  offset: 0,
2025-09-16T23:46:01.768986Z	  targetMarket: undefined,
2025-09-16T23:46:01.769097Z	  brand: 'cree',
2025-09-16T23:46:01.769197Z	  featured: undefined
2025-09-16T23:46:01.769341Z	}
2025-09-16T23:46:01.769454Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:01.769574Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:01.769745Z	✅ [getBrandData] Found brand: Epcos
2025-09-16T23:46:01.769893Z	✅ [getBrandData] Found brand: Epcos
2025-09-16T23:46:01.770101Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:01.770316Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:01.770443Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-16T23:46:01.770549Z	Fetching products with query: 
2025-09-16T23:46:01.770652Z	    {
2025-09-16T23:46:01.770773Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.770867Z	        
2025-09-16T23:46:01.770962Z	    _id,
2025-09-16T23:46:01.771058Z	    _type,
2025-09-16T23:46:01.77116Z	    partNumber,
2025-09-16T23:46:01.771259Z	    "slug": slug.current,
2025-09-16T23:46:01.771356Z	    title,
2025-09-16T23:46:01.77145Z	    shortDescription,
2025-09-16T23:46:01.771541Z	    image,
2025-09-16T23:46:01.771634Z	    brand->{
2025-09-16T23:46:01.771745Z	      name,
2025-09-16T23:46:01.771838Z	      "slug": slug.current,
2025-09-16T23:46:01.77193Z	      logo
2025-09-16T23:46:01.772018Z	    },
2025-09-16T23:46:01.77211Z	    category->{
2025-09-16T23:46:01.772204Z	      name,
2025-09-16T23:46:01.772294Z	      "slug": slug.current
2025-09-16T23:46:01.772386Z	    },
2025-09-16T23:46:01.772473Z	    pricing{
2025-09-16T23:46:01.772559Z	      currency,
2025-09-16T23:46:01.772645Z	      tiers[]{
2025-09-16T23:46:01.772754Z	        quantity,
2025-09-16T23:46:01.772841Z	        price,
2025-09-16T23:46:01.772925Z	        unit
2025-09-16T23:46:01.773005Z	      },
2025-09-16T23:46:01.773096Z	      moq,
2025-09-16T23:46:01.773197Z	      leadTime,
2025-09-16T23:46:01.773291Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.773394Z	      "price": tiers[0].price,
2025-09-16T23:46:01.773488Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.773585Z	    },
2025-09-16T23:46:01.773694Z	    inventory{
2025-09-16T23:46:01.773807Z	      quantity,
2025-09-16T23:46:01.773901Z	      status,
2025-09-16T23:46:01.774012Z	      warehouse,
2025-09-16T23:46:01.774106Z	      lastUpdated,
2025-09-16T23:46:01.774197Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.774297Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.774398Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.774478Z	    },
2025-09-16T23:46:01.774559Z	    isActive,
2025-09-16T23:46:01.774641Z	    isFeatured,
2025-09-16T23:46:01.774743Z	    isNew,
2025-09-16T23:46:01.77485Z	    _createdAt,
2025-09-16T23:46:01.774949Z	    _updatedAt
2025-09-16T23:46:01.775042Z	  
2025-09-16T23:46:01.775131Z	      },
2025-09-16T23:46:01.775222Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-16T23:46:01.775321Z	    }
2025-09-16T23:46:01.775412Z	  
2025-09-16T23:46:01.775518Z	Query parameters: {
2025-09-16T23:46:01.775619Z	  limit: 8,
2025-09-16T23:46:01.775736Z	  offset: 0,
2025-09-16T23:46:01.775834Z	  category: undefined,
2025-09-16T23:46:01.775927Z	  brand: 'sanrex',
2025-09-16T23:46:01.776035Z	  featured: undefined
2025-09-16T23:46:01.776139Z	}
2025-09-16T23:46:01.776233Z	Fetching solutions with query: 
2025-09-16T23:46:01.776323Z	    {
2025-09-16T23:46:01.776422Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.776518Z	        
2025-09-16T23:46:01.776612Z	    _id,
2025-09-16T23:46:01.776743Z	    title,
2025-09-16T23:46:01.776817Z	    "slug": slug.current,
2025-09-16T23:46:01.776875Z	    summary,
2025-09-16T23:46:01.776947Z	    description,
2025-09-16T23:46:01.77706Z	    coverImage,
2025-09-16T23:46:01.777163Z	    primaryBrand->{
2025-09-16T23:46:01.777263Z	      _id,
2025-09-16T23:46:01.777326Z	      name,
2025-09-16T23:46:01.777392Z	      "slug": slug.current,
2025-09-16T23:46:01.777459Z	      logo
2025-09-16T23:46:01.777519Z	    },
2025-09-16T23:46:01.777576Z	    relatedBrands[]->{
2025-09-16T23:46:01.777642Z	      _id,
2025-09-16T23:46:01.77773Z	      name,
2025-09-16T23:46:01.778074Z	      "slug": slug.current,
2025-09-16T23:46:01.778168Z	      logo
2025-09-16T23:46:01.778249Z	    },
2025-09-16T23:46:01.778345Z	    targetMarket,
2025-09-16T23:46:01.778459Z	    complexity,
2025-09-16T23:46:01.778555Z	    publishedAt,
2025-09-16T23:46:01.778661Z	    isPublished,
2025-09-16T23:46:01.778782Z	    isFeatured,
2025-09-16T23:46:01.77888Z	    viewCount,
2025-09-16T23:46:01.779152Z	    _createdAt,
2025-09-16T23:46:01.779284Z	    _updatedAt
2025-09-16T23:46:01.779541Z	  
2025-09-16T23:46:01.77965Z	      },
2025-09-16T23:46:01.779772Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-16T23:46:01.779908Z	    }
2025-09-16T23:46:01.78002Z	  
2025-09-16T23:46:01.780119Z	Query parameters: {
2025-09-16T23:46:01.780234Z	  limit: 4,
2025-09-16T23:46:01.78033Z	  offset: 0,
2025-09-16T23:46:01.78043Z	  targetMarket: undefined,
2025-09-16T23:46:01.780536Z	  brand: 'sanrex',
2025-09-16T23:46:01.780644Z	  featured: undefined
2025-09-16T23:46:01.780759Z	}
2025-09-16T23:46:01.780867Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-16T23:46:01.780967Z	Fetching products with query: 
2025-09-16T23:46:01.781072Z	    {
2025-09-16T23:46:01.781178Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.781282Z	        
2025-09-16T23:46:01.781387Z	    _id,
2025-09-16T23:46:01.781484Z	    _type,
2025-09-16T23:46:01.781586Z	    partNumber,
2025-09-16T23:46:01.781708Z	    "slug": slug.current,
2025-09-16T23:46:01.781806Z	    title,
2025-09-16T23:46:01.781895Z	    shortDescription,
2025-09-16T23:46:01.78199Z	    image,
2025-09-16T23:46:01.782083Z	    brand->{
2025-09-16T23:46:01.782172Z	      name,
2025-09-16T23:46:01.782259Z	      "slug": slug.current,
2025-09-16T23:46:01.782371Z	      logo
2025-09-16T23:46:01.782475Z	    },
2025-09-16T23:46:01.782566Z	    category->{
2025-09-16T23:46:01.782662Z	      name,
2025-09-16T23:46:01.782779Z	      "slug": slug.current
2025-09-16T23:46:01.782872Z	    },
2025-09-16T23:46:01.782983Z	    pricing{
2025-09-16T23:46:01.783086Z	      currency,
2025-09-16T23:46:01.783184Z	      tiers[]{
2025-09-16T23:46:01.783273Z	        quantity,
2025-09-16T23:46:01.783377Z	        price,
2025-09-16T23:46:01.783478Z	        unit
2025-09-16T23:46:01.783569Z	      },
2025-09-16T23:46:01.783793Z	      moq,
2025-09-16T23:46:01.783936Z	      leadTime,
2025-09-16T23:46:01.784054Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.784161Z	      "price": tiers[0].price,
2025-09-16T23:46:01.784262Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.784603Z	    },
2025-09-16T23:46:01.784784Z	    inventory{
2025-09-16T23:46:01.785034Z	      quantity,
2025-09-16T23:46:01.78515Z	      status,
2025-09-16T23:46:01.785399Z	      warehouse,
2025-09-16T23:46:01.785654Z	      lastUpdated,
2025-09-16T23:46:01.785798Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.786016Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.786165Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.786285Z	    },
2025-09-16T23:46:01.786409Z	    isActive,
2025-09-16T23:46:01.786538Z	    isFeatured,
2025-09-16T23:46:01.786667Z	    isNew,
2025-09-16T23:46:01.786835Z	    _createdAt,
2025-09-16T23:46:01.786956Z	    _updatedAt
2025-09-16T23:46:01.787073Z	  
2025-09-16T23:46:01.787187Z	      },
2025-09-16T23:46:01.787289Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-16T23:46:01.78741Z	    }
2025-09-16T23:46:01.787532Z	  
2025-09-16T23:46:01.787657Z	Query parameters: {
2025-09-16T23:46:01.787796Z	  limit: 8,
2025-09-16T23:46:01.787898Z	  offset: 0,
2025-09-16T23:46:01.788Z	  category: undefined,
2025-09-16T23:46:01.788098Z	  brand: 'sanrex',
2025-09-16T23:46:01.788211Z	  featured: undefined
2025-09-16T23:46:01.788357Z	}
2025-09-16T23:46:01.788492Z	Fetching solutions with query: 
2025-09-16T23:46:01.788606Z	    {
2025-09-16T23:46:01.788745Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.78885Z	        
2025-09-16T23:46:01.788954Z	    _id,
2025-09-16T23:46:01.789048Z	    title,
2025-09-16T23:46:01.789146Z	    "slug": slug.current,
2025-09-16T23:46:01.789248Z	    summary,
2025-09-16T23:46:01.789345Z	    description,
2025-09-16T23:46:01.78944Z	    coverImage,
2025-09-16T23:46:01.789526Z	    primaryBrand->{
2025-09-16T23:46:01.789607Z	      _id,
2025-09-16T23:46:01.789749Z	      name,
2025-09-16T23:46:01.789862Z	      "slug": slug.current,
2025-09-16T23:46:01.789955Z	      logo
2025-09-16T23:46:01.790043Z	    },
2025-09-16T23:46:01.790136Z	    relatedBrands[]->{
2025-09-16T23:46:01.790216Z	      _id,
2025-09-16T23:46:01.790307Z	      name,
2025-09-16T23:46:01.790403Z	      "slug": slug.current,
2025-09-16T23:46:01.790519Z	      logo
2025-09-16T23:46:01.790627Z	    },
2025-09-16T23:46:01.790764Z	    targetMarket,
2025-09-16T23:46:01.790867Z	    complexity,
2025-09-16T23:46:01.790969Z	    publishedAt,
2025-09-16T23:46:01.791065Z	    isPublished,
2025-09-16T23:46:01.791221Z	    isFeatured,
2025-09-16T23:46:01.791321Z	    viewCount,
2025-09-16T23:46:01.79143Z	    _createdAt,
2025-09-16T23:46:01.791543Z	    _updatedAt
2025-09-16T23:46:01.791689Z	  
2025-09-16T23:46:01.791808Z	      },
2025-09-16T23:46:01.791905Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-16T23:46:01.791969Z	    }
2025-09-16T23:46:01.792025Z	  
2025-09-16T23:46:01.792081Z	Query parameters: {
2025-09-16T23:46:01.792138Z	  limit: 4,
2025-09-16T23:46:01.792192Z	  offset: 0,
2025-09-16T23:46:01.792245Z	  targetMarket: undefined,
2025-09-16T23:46:01.792297Z	  brand: 'sanrex',
2025-09-16T23:46:01.792354Z	  featured: undefined
2025-09-16T23:46:01.792417Z	}
2025-09-16T23:46:01.792477Z	✅ [getBrandData] Found brand: Sanrex
2025-09-16T23:46:01.792558Z	✅ [getBrandData] Found brand: Sanrex
2025-09-16T23:46:01.79262Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:01.792692Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:01.792771Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:01.792827Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:01.792885Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-16T23:46:01.792944Z	Fetching products with query: 
2025-09-16T23:46:01.792997Z	    {
2025-09-16T23:46:01.793057Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.793116Z	        
2025-09-16T23:46:01.793169Z	    _id,
2025-09-16T23:46:01.793225Z	    _type,
2025-09-16T23:46:01.793278Z	    partNumber,
2025-09-16T23:46:01.79333Z	    "slug": slug.current,
2025-09-16T23:46:01.793383Z	    title,
2025-09-16T23:46:01.793443Z	    shortDescription,
2025-09-16T23:46:01.793497Z	    image,
2025-09-16T23:46:01.793552Z	    brand->{
2025-09-16T23:46:01.793605Z	      name,
2025-09-16T23:46:01.793657Z	      "slug": slug.current,
2025-09-16T23:46:01.79373Z	      logo
2025-09-16T23:46:01.793785Z	    },
2025-09-16T23:46:01.79384Z	    category->{
2025-09-16T23:46:01.793901Z	      name,
2025-09-16T23:46:01.793956Z	      "slug": slug.current
2025-09-16T23:46:01.794009Z	    },
2025-09-16T23:46:01.794062Z	    pricing{
2025-09-16T23:46:01.794114Z	      currency,
2025-09-16T23:46:01.794166Z	      tiers[]{
2025-09-16T23:46:01.79422Z	        quantity,
2025-09-16T23:46:01.794272Z	        price,
2025-09-16T23:46:01.794325Z	        unit
2025-09-16T23:46:01.794378Z	      },
2025-09-16T23:46:01.794443Z	      moq,
2025-09-16T23:46:01.794498Z	      leadTime,
2025-09-16T23:46:01.794554Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.794609Z	      "price": tiers[0].price,
2025-09-16T23:46:01.794662Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.794738Z	    },
2025-09-16T23:46:01.794822Z	    inventory{
2025-09-16T23:46:01.794923Z	      quantity,
2025-09-16T23:46:01.795019Z	      status,
2025-09-16T23:46:01.795113Z	      warehouse,
2025-09-16T23:46:01.795179Z	      lastUpdated,
2025-09-16T23:46:01.795237Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.795296Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.795359Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.79543Z	    },
2025-09-16T23:46:01.795514Z	    isActive,
2025-09-16T23:46:01.795574Z	    isFeatured,
2025-09-16T23:46:01.795631Z	    isNew,
2025-09-16T23:46:01.795741Z	    _createdAt,
2025-09-16T23:46:01.795843Z	    _updatedAt
2025-09-16T23:46:01.795906Z	  
2025-09-16T23:46:01.795961Z	      },
2025-09-16T23:46:01.796019Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-16T23:46:01.796091Z	    }
2025-09-16T23:46:01.796149Z	  
2025-09-16T23:46:01.796204Z	Query parameters: {
2025-09-16T23:46:01.796259Z	  limit: 8,
2025-09-16T23:46:01.796313Z	  offset: 0,
2025-09-16T23:46:01.796365Z	  category: undefined,
2025-09-16T23:46:01.796427Z	  brand: '英飞凌',
2025-09-16T23:46:01.796483Z	  featured: undefined
2025-09-16T23:46:01.796538Z	}
2025-09-16T23:46:01.796598Z	Fetching solutions with query: 
2025-09-16T23:46:01.796656Z	    {
2025-09-16T23:46:01.796776Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.796881Z	        
2025-09-16T23:46:01.796953Z	    _id,
2025-09-16T23:46:01.797075Z	    title,
2025-09-16T23:46:01.797184Z	    "slug": slug.current,
2025-09-16T23:46:01.797291Z	    summary,
2025-09-16T23:46:01.79742Z	    description,
2025-09-16T23:46:01.797522Z	    coverImage,
2025-09-16T23:46:01.79763Z	    primaryBrand->{
2025-09-16T23:46:01.797752Z	      _id,
2025-09-16T23:46:01.79786Z	      name,
2025-09-16T23:46:01.797964Z	      "slug": slug.current,
2025-09-16T23:46:01.798071Z	      logo
2025-09-16T23:46:01.79817Z	    },
2025-09-16T23:46:01.798255Z	    relatedBrands[]->{
2025-09-16T23:46:01.798345Z	      _id,
2025-09-16T23:46:01.798463Z	      name,
2025-09-16T23:46:01.79856Z	      "slug": slug.current,
2025-09-16T23:46:01.798655Z	      logo
2025-09-16T23:46:01.798757Z	    },
2025-09-16T23:46:01.798847Z	    targetMarket,
2025-09-16T23:46:01.798941Z	    complexity,
2025-09-16T23:46:01.799033Z	    publishedAt,
2025-09-16T23:46:01.799139Z	    isPublished,
2025-09-16T23:46:01.79926Z	    isFeatured,
2025-09-16T23:46:01.79936Z	    viewCount,
2025-09-16T23:46:01.799457Z	    _createdAt,
2025-09-16T23:46:01.799555Z	    _updatedAt
2025-09-16T23:46:01.799646Z	  
2025-09-16T23:46:01.799764Z	      },
2025-09-16T23:46:01.799873Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-16T23:46:01.799978Z	    }
2025-09-16T23:46:01.800079Z	  
2025-09-16T23:46:01.80017Z	Query parameters: {
2025-09-16T23:46:01.800266Z	  limit: 4,
2025-09-16T23:46:01.800372Z	  offset: 0,
2025-09-16T23:46:01.800484Z	  targetMarket: undefined,
2025-09-16T23:46:01.800584Z	  brand: '英飞凌',
2025-09-16T23:46:01.8007Z	  featured: undefined
2025-09-16T23:46:01.800819Z	}
2025-09-16T23:46:01.801056Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-16T23:46:01.801154Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:01.801332Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:01.801469Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-16T23:46:01.801618Z	Fetching products with query: 
2025-09-16T23:46:01.80196Z	    {
2025-09-16T23:46:01.802046Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.80216Z	        
2025-09-16T23:46:01.803156Z	    _id,
2025-09-16T23:46:01.803329Z	    _type,
2025-09-16T23:46:01.803464Z	    partNumber,
2025-09-16T23:46:01.803574Z	    "slug": slug.current,
2025-09-16T23:46:01.803788Z	    title,
2025-09-16T23:46:01.80393Z	    shortDescription,
2025-09-16T23:46:01.804053Z	    image,
2025-09-16T23:46:01.804173Z	    brand->{
2025-09-16T23:46:01.804285Z	      name,
2025-09-16T23:46:01.804397Z	      "slug": slug.current,
2025-09-16T23:46:01.804514Z	      logo
2025-09-16T23:46:01.804619Z	    },
2025-09-16T23:46:01.80474Z	    category->{
2025-09-16T23:46:01.804841Z	      name,
2025-09-16T23:46:01.804941Z	      "slug": slug.current
2025-09-16T23:46:01.805037Z	    },
2025-09-16T23:46:01.805133Z	    pricing{
2025-09-16T23:46:01.805232Z	      currency,
2025-09-16T23:46:01.805328Z	      tiers[]{
2025-09-16T23:46:01.805436Z	        quantity,
2025-09-16T23:46:01.80555Z	        price,
2025-09-16T23:46:01.805651Z	        unit
2025-09-16T23:46:01.824106Z	      },
2025-09-16T23:46:01.824292Z	      moq,
2025-09-16T23:46:01.824434Z	      leadTime,
2025-09-16T23:46:01.82456Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.824709Z	      "price": tiers[0].price,
2025-09-16T23:46:01.82484Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.824951Z	    },
2025-09-16T23:46:01.825055Z	    inventory{
2025-09-16T23:46:01.825174Z	      quantity,
2025-09-16T23:46:01.825273Z	      status,
2025-09-16T23:46:01.825367Z	      warehouse,
2025-09-16T23:46:01.8255Z	      lastUpdated,
2025-09-16T23:46:01.825603Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.825724Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.825821Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.825909Z	    },
2025-09-16T23:46:01.825997Z	    isActive,
2025-09-16T23:46:01.826082Z	    isFeatured,
2025-09-16T23:46:01.826168Z	    isNew,
2025-09-16T23:46:01.82626Z	    _createdAt,
2025-09-16T23:46:01.826345Z	    _updatedAt
2025-09-16T23:46:01.826444Z	  
2025-09-16T23:46:01.826557Z	      },
2025-09-16T23:46:01.826687Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-16T23:46:01.826807Z	    }
2025-09-16T23:46:01.826904Z	  
2025-09-16T23:46:01.827Z	Query parameters: {
2025-09-16T23:46:01.827093Z	  limit: 8,
2025-09-16T23:46:01.827233Z	  offset: 0,
2025-09-16T23:46:01.827322Z	  category: undefined,
2025-09-16T23:46:01.827427Z	  brand: '英飞凌',
2025-09-16T23:46:01.827519Z	  featured: undefined
2025-09-16T23:46:01.827616Z	}
2025-09-16T23:46:01.827729Z	Fetching solutions with query: 
2025-09-16T23:46:01.82783Z	    {
2025-09-16T23:46:01.827919Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.828019Z	        
2025-09-16T23:46:01.828118Z	    _id,
2025-09-16T23:46:01.828208Z	    title,
2025-09-16T23:46:01.828292Z	    "slug": slug.current,
2025-09-16T23:46:01.828373Z	    summary,
2025-09-16T23:46:01.82851Z	    description,
2025-09-16T23:46:01.828643Z	    coverImage,
2025-09-16T23:46:01.828771Z	    primaryBrand->{
2025-09-16T23:46:01.82888Z	      _id,
2025-09-16T23:46:01.828984Z	      name,
2025-09-16T23:46:01.8291Z	      "slug": slug.current,
2025-09-16T23:46:01.829209Z	      logo
2025-09-16T23:46:01.829321Z	    },
2025-09-16T23:46:01.829436Z	    relatedBrands[]->{
2025-09-16T23:46:01.829535Z	      _id,
2025-09-16T23:46:01.829625Z	      name,
2025-09-16T23:46:01.829741Z	      "slug": slug.current,
2025-09-16T23:46:01.82984Z	      logo
2025-09-16T23:46:01.829936Z	    },
2025-09-16T23:46:01.830032Z	    targetMarket,
2025-09-16T23:46:01.830127Z	    complexity,
2025-09-16T23:46:01.830229Z	    publishedAt,
2025-09-16T23:46:01.830325Z	    isPublished,
2025-09-16T23:46:01.830434Z	    isFeatured,
2025-09-16T23:46:01.830541Z	    viewCount,
2025-09-16T23:46:01.830641Z	    _createdAt,
2025-09-16T23:46:01.83076Z	    _updatedAt
2025-09-16T23:46:01.830858Z	  
2025-09-16T23:46:01.830954Z	      },
2025-09-16T23:46:01.831068Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-16T23:46:01.831181Z	    }
2025-09-16T23:46:01.831278Z	  
2025-09-16T23:46:01.831375Z	Query parameters: {
2025-09-16T23:46:01.831488Z	  limit: 4,
2025-09-16T23:46:01.831588Z	  offset: 0,
2025-09-16T23:46:01.831709Z	  targetMarket: undefined,
2025-09-16T23:46:01.831819Z	  brand: '英飞凌',
2025-09-16T23:46:01.831917Z	  featured: undefined
2025-09-16T23:46:01.832013Z	}
2025-09-16T23:46:01.832098Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-16T23:46:01.832198Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:01.832315Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:01.832432Z	✅ [getBrandData] Found brand: LEM
2025-09-16T23:46:01.832533Z	Products fetch result: {
2025-09-16T23:46:01.832643Z	  totalProducts: 3,
2025-09-16T23:46:01.832767Z	  fetchedProducts: 3,
2025-09-16T23:46:01.832887Z	  firstProduct: {
2025-09-16T23:46:01.83299Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-16T23:46:01.833106Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-16T23:46:01.833207Z	    _type: 'product',
2025-09-16T23:46:01.833336Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-16T23:46:01.833464Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-16T23:46:01.833595Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-16T23:46:01.833729Z	    image: null,
2025-09-16T23:46:01.833842Z	    inventory: {
2025-09-16T23:46:01.83395Z	      inStock: true,
2025-09-16T23:46:01.834067Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-16T23:46:01.834182Z	      quantity: 0,
2025-09-16T23:46:01.834427Z	      status: 'in_stock',
2025-09-16T23:46:01.834552Z	      warehouse: null
2025-09-16T23:46:01.834668Z	    },
2025-09-16T23:46:01.8348Z	    isActive: true,
2025-09-16T23:46:01.834903Z	    isFeatured: false,
2025-09-16T23:46:01.835008Z	    isNew: false,
2025-09-16T23:46:01.835107Z	    partNumber: 'la55-p',
2025-09-16T23:46:01.835202Z	    pricing: {
2025-09-16T23:46:01.835312Z	      currency: 'CNY',
2025-09-16T23:46:01.835433Z	      leadTime: null,
2025-09-16T23:46:01.835552Z	      moq: null,
2025-09-16T23:46:01.835656Z	      price: null,
2025-09-16T23:46:01.835771Z	      tiers: null
2025-09-16T23:46:01.835868Z	    },
2025-09-16T23:46:01.835965Z	    shortDescription: '电流传感器la55-p',
2025-09-16T23:46:01.836061Z	    slug: 'la55-p',
2025-09-16T23:46:01.836161Z	    title: '电流传感器la55-p'
2025-09-16T23:46:01.836255Z	  }
2025-09-16T23:46:01.836353Z	}
2025-09-16T23:46:01.836461Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:01.836559Z	✅ [getBrandData] Found brand: MediaTek
2025-09-16T23:46:01.836654Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:01.836765Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:01.836862Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-16T23:46:01.83696Z	Fetching products with query: 
2025-09-16T23:46:01.837047Z	    {
2025-09-16T23:46:01.837144Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.837256Z	        
2025-09-16T23:46:01.83736Z	    _id,
2025-09-16T23:46:01.837466Z	    _type,
2025-09-16T23:46:01.837574Z	    partNumber,
2025-09-16T23:46:01.837697Z	    "slug": slug.current,
2025-09-16T23:46:01.837838Z	    title,
2025-09-16T23:46:01.837942Z	    shortDescription,
2025-09-16T23:46:01.838039Z	    image,
2025-09-16T23:46:01.838135Z	    brand->{
2025-09-16T23:46:01.838253Z	      name,
2025-09-16T23:46:01.83836Z	      "slug": slug.current,
2025-09-16T23:46:01.838482Z	      logo
2025-09-16T23:46:01.838586Z	    },
2025-09-16T23:46:01.83872Z	    category->{
2025-09-16T23:46:01.838833Z	      name,
2025-09-16T23:46:01.838943Z	      "slug": slug.current
2025-09-16T23:46:01.839059Z	    },
2025-09-16T23:46:01.839182Z	    pricing{
2025-09-16T23:46:01.839311Z	      currency,
2025-09-16T23:46:01.839427Z	      tiers[]{
2025-09-16T23:46:01.839534Z	        quantity,
2025-09-16T23:46:01.839636Z	        price,
2025-09-16T23:46:01.83976Z	        unit
2025-09-16T23:46:01.839881Z	      },
2025-09-16T23:46:01.839989Z	      moq,
2025-09-16T23:46:01.840095Z	      leadTime,
2025-09-16T23:46:01.840206Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.840326Z	      "price": tiers[0].price,
2025-09-16T23:46:01.840532Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.840718Z	    },
2025-09-16T23:46:01.840839Z	    inventory{
2025-09-16T23:46:01.840951Z	      quantity,
2025-09-16T23:46:01.84106Z	      status,
2025-09-16T23:46:01.841188Z	      warehouse,
2025-09-16T23:46:01.841306Z	      lastUpdated,
2025-09-16T23:46:01.841428Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.84155Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.841665Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.841791Z	    },
2025-09-16T23:46:01.841894Z	    isActive,
2025-09-16T23:46:01.842005Z	    isFeatured,
2025-09-16T23:46:01.842113Z	    isNew,
2025-09-16T23:46:01.842224Z	    _createdAt,
2025-09-16T23:46:01.842334Z	    _updatedAt
2025-09-16T23:46:01.842445Z	  
2025-09-16T23:46:01.842552Z	      },
2025-09-16T23:46:01.842662Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-16T23:46:01.842808Z	    }
2025-09-16T23:46:01.842921Z	  
2025-09-16T23:46:01.843037Z	Query parameters: {
2025-09-16T23:46:01.843151Z	  limit: 8,
2025-09-16T23:46:01.843266Z	  offset: 0,
2025-09-16T23:46:01.843383Z	  category: undefined,
2025-09-16T23:46:01.843502Z	  brand: 'semikron',
2025-09-16T23:46:01.843608Z	  featured: undefined
2025-09-16T23:46:01.843733Z	}
2025-09-16T23:46:01.843841Z	Fetching solutions with query: 
2025-09-16T23:46:01.843941Z	    {
2025-09-16T23:46:01.84405Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.844178Z	        
2025-09-16T23:46:01.844311Z	    _id,
2025-09-16T23:46:01.844441Z	    title,
2025-09-16T23:46:01.844593Z	    "slug": slug.current,
2025-09-16T23:46:01.844736Z	    summary,
2025-09-16T23:46:01.844857Z	    description,
2025-09-16T23:46:01.844973Z	    coverImage,
2025-09-16T23:46:01.845078Z	    primaryBrand->{
2025-09-16T23:46:01.845186Z	      _id,
2025-09-16T23:46:01.845299Z	      name,
2025-09-16T23:46:01.845411Z	      "slug": slug.current,
2025-09-16T23:46:01.845511Z	      logo
2025-09-16T23:46:01.84561Z	    },
2025-09-16T23:46:01.845728Z	    relatedBrands[]->{
2025-09-16T23:46:01.845848Z	      _id,
2025-09-16T23:46:01.845956Z	      name,
2025-09-16T23:46:01.846063Z	      "slug": slug.current,
2025-09-16T23:46:01.846171Z	      logo
2025-09-16T23:46:01.84627Z	    },
2025-09-16T23:46:01.846372Z	    targetMarket,
2025-09-16T23:46:01.846492Z	    complexity,
2025-09-16T23:46:01.846597Z	    publishedAt,
2025-09-16T23:46:01.846729Z	    isPublished,
2025-09-16T23:46:01.846842Z	    isFeatured,
2025-09-16T23:46:01.846953Z	    viewCount,
2025-09-16T23:46:01.847065Z	    _createdAt,
2025-09-16T23:46:01.847171Z	    _updatedAt
2025-09-16T23:46:01.847274Z	  
2025-09-16T23:46:01.847375Z	      },
2025-09-16T23:46:01.847491Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-16T23:46:01.847606Z	    }
2025-09-16T23:46:01.847733Z	  
2025-09-16T23:46:01.847842Z	Query parameters: {
2025-09-16T23:46:01.847958Z	  limit: 4,
2025-09-16T23:46:01.848064Z	  offset: 0,
2025-09-16T23:46:01.848175Z	  targetMarket: undefined,
2025-09-16T23:46:01.848301Z	  brand: 'semikron',
2025-09-16T23:46:01.848424Z	  featured: undefined
2025-09-16T23:46:01.848531Z	}
2025-09-16T23:46:01.848635Z	✅ [getBrandData] Found brand: Semikron
2025-09-16T23:46:01.848761Z	Products fetch result: {
2025-09-16T23:46:01.848868Z	  totalProducts: 1,
2025-09-16T23:46:01.848964Z	  fetchedProducts: 1,
2025-09-16T23:46:01.84906Z	  firstProduct: {
2025-09-16T23:46:01.849148Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-16T23:46:01.849239Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-16T23:46:01.849323Z	    _type: 'product',
2025-09-16T23:46:01.849412Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-16T23:46:01.849499Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-16T23:46:01.849582Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:01.849662Z	    image: null,
2025-09-16T23:46:01.849766Z	    inventory: {
2025-09-16T23:46:01.849849Z	      inStock: true,
2025-09-16T23:46:01.849942Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-16T23:46:01.850038Z	      quantity: 0,
2025-09-16T23:46:01.850135Z	      status: 'in_stock',
2025-09-16T23:46:01.850228Z	      warehouse: null
2025-09-16T23:46:01.850329Z	    },
2025-09-16T23:46:01.850432Z	    isActive: true,
2025-09-16T23:46:01.850525Z	    isFeatured: false,
2025-09-16T23:46:01.850621Z	    isNew: false,
2025-09-16T23:46:01.85073Z	    partNumber: 'SKKT106/16E',
2025-09-16T23:46:01.850815Z	    pricing: {
2025-09-16T23:46:01.8509Z	      currency: 'CNY',
2025-09-16T23:46:01.850979Z	      leadTime: null,
2025-09-16T23:46:01.851062Z	      moq: null,
2025-09-16T23:46:01.851145Z	      price: null,
2025-09-16T23:46:01.851305Z	      tiers: null
2025-09-16T23:46:01.851456Z	    },
2025-09-16T23:46:01.851563Z	    shortDescription: 'SKKT106/16E',
2025-09-16T23:46:01.851657Z	    slug: 'SKKT106/16E',
2025-09-16T23:46:01.851765Z	    title: 'SKKT106/16E'
2025-09-16T23:46:01.85186Z	  }
2025-09-16T23:46:01.851958Z	}
2025-09-16T23:46:01.852067Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:01.852169Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-16T23:46:01.852275Z	Fetching products with query: 
2025-09-16T23:46:01.852366Z	    {
2025-09-16T23:46:01.852474Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.852567Z	        
2025-09-16T23:46:01.852633Z	    _id,
2025-09-16T23:46:01.852738Z	    _type,
2025-09-16T23:46:01.85281Z	    partNumber,
2025-09-16T23:46:01.852876Z	    "slug": slug.current,
2025-09-16T23:46:01.852943Z	    title,
2025-09-16T23:46:01.853012Z	    shortDescription,
2025-09-16T23:46:01.853069Z	    image,
2025-09-16T23:46:01.853125Z	    brand->{
2025-09-16T23:46:01.853211Z	      name,
2025-09-16T23:46:01.853301Z	      "slug": slug.current,
2025-09-16T23:46:01.853397Z	      logo
2025-09-16T23:46:01.8535Z	    },
2025-09-16T23:46:01.8536Z	    category->{
2025-09-16T23:46:01.853713Z	      name,
2025-09-16T23:46:01.853805Z	      "slug": slug.current
2025-09-16T23:46:01.853899Z	    },
2025-09-16T23:46:01.853995Z	    pricing{
2025-09-16T23:46:01.854086Z	      currency,
2025-09-16T23:46:01.854189Z	      tiers[]{
2025-09-16T23:46:01.854284Z	        quantity,
2025-09-16T23:46:01.854379Z	        price,
2025-09-16T23:46:01.854495Z	        unit
2025-09-16T23:46:01.854585Z	      },
2025-09-16T23:46:01.854683Z	      moq,
2025-09-16T23:46:01.854784Z	      leadTime,
2025-09-16T23:46:01.854901Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.854999Z	      "price": tiers[0].price,
2025-09-16T23:46:01.855084Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.855177Z	    },
2025-09-16T23:46:01.855277Z	    inventory{
2025-09-16T23:46:01.855376Z	      quantity,
2025-09-16T23:46:01.855519Z	      status,
2025-09-16T23:46:01.855623Z	      warehouse,
2025-09-16T23:46:01.855775Z	      lastUpdated,
2025-09-16T23:46:01.85589Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.855991Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.856085Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.856175Z	    },
2025-09-16T23:46:01.85626Z	    isActive,
2025-09-16T23:46:01.856356Z	    isFeatured,
2025-09-16T23:46:01.856461Z	    isNew,
2025-09-16T23:46:01.856559Z	    _createdAt,
2025-09-16T23:46:01.856648Z	    _updatedAt
2025-09-16T23:46:01.856768Z	  
2025-09-16T23:46:01.856863Z	      },
2025-09-16T23:46:01.85695Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-16T23:46:01.857046Z	    }
2025-09-16T23:46:01.857133Z	  
2025-09-16T23:46:01.85722Z	Query parameters: {
2025-09-16T23:46:01.857313Z	  limit: 8,
2025-09-16T23:46:01.857417Z	  offset: 0,
2025-09-16T23:46:01.857514Z	  category: undefined,
2025-09-16T23:46:01.85761Z	  brand: 'semikron',
2025-09-16T23:46:01.85772Z	  featured: undefined
2025-09-16T23:46:01.857817Z	}
2025-09-16T23:46:01.857906Z	Fetching solutions with query: 
2025-09-16T23:46:01.857997Z	    {
2025-09-16T23:46:01.858083Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.858186Z	        
2025-09-16T23:46:01.858289Z	    _id,
2025-09-16T23:46:01.858385Z	    title,
2025-09-16T23:46:01.858487Z	    "slug": slug.current,
2025-09-16T23:46:01.858585Z	    summary,
2025-09-16T23:46:01.858685Z	    description,
2025-09-16T23:46:01.858794Z	    coverImage,
2025-09-16T23:46:01.858906Z	    primaryBrand->{
2025-09-16T23:46:01.858998Z	      _id,
2025-09-16T23:46:01.859092Z	      name,
2025-09-16T23:46:01.859186Z	      "slug": slug.current,
2025-09-16T23:46:01.859302Z	      logo
2025-09-16T23:46:01.859395Z	    },
2025-09-16T23:46:01.859466Z	    relatedBrands[]->{
2025-09-16T23:46:01.859561Z	      _id,
2025-09-16T23:46:01.859661Z	      name,
2025-09-16T23:46:01.859777Z	      "slug": slug.current,
2025-09-16T23:46:01.860035Z	      logo
2025-09-16T23:46:01.860134Z	    },
2025-09-16T23:46:01.860209Z	    targetMarket,
2025-09-16T23:46:01.860519Z	    complexity,
2025-09-16T23:46:01.860595Z	    publishedAt,
2025-09-16T23:46:01.860772Z	    isPublished,
2025-09-16T23:46:01.860946Z	    isFeatured,
2025-09-16T23:46:01.861128Z	    viewCount,
2025-09-16T23:46:01.861251Z	    _createdAt,
2025-09-16T23:46:01.861383Z	    _updatedAt
2025-09-16T23:46:01.86154Z	  
2025-09-16T23:46:01.861703Z	      },
2025-09-16T23:46:01.861784Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-16T23:46:01.862032Z	    }
2025-09-16T23:46:01.862112Z	  
2025-09-16T23:46:01.862225Z	Query parameters: {
2025-09-16T23:46:01.86233Z	  limit: 4,
2025-09-16T23:46:01.862464Z	  offset: 0,
2025-09-16T23:46:01.862587Z	  targetMarket: undefined,
2025-09-16T23:46:01.862712Z	  brand: 'semikron',
2025-09-16T23:46:01.862782Z	  featured: undefined
2025-09-16T23:46:01.862836Z	}
2025-09-16T23:46:01.862891Z	✅ [getBrandData] Found brand: Semikron
2025-09-16T23:46:01.862946Z	Products fetch result: {
2025-09-16T23:46:01.863008Z	  totalProducts: 1,
2025-09-16T23:46:01.863103Z	  fetchedProducts: 1,
2025-09-16T23:46:01.863207Z	  firstProduct: {
2025-09-16T23:46:01.863316Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-16T23:46:01.86344Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-16T23:46:01.863559Z	    _type: 'product',
2025-09-16T23:46:01.863698Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-16T23:46:01.863813Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-16T23:46:01.863931Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:01.864035Z	    image: null,
2025-09-16T23:46:01.864135Z	    inventory: {
2025-09-16T23:46:01.864284Z	      inStock: true,
2025-09-16T23:46:01.864425Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-16T23:46:01.864507Z	      quantity: 0,
2025-09-16T23:46:01.864664Z	      status: 'in_stock',
2025-09-16T23:46:01.864835Z	      warehouse: null
2025-09-16T23:46:01.864965Z	    },
2025-09-16T23:46:01.865037Z	    isActive: true,
2025-09-16T23:46:01.86515Z	    isFeatured: false,
2025-09-16T23:46:01.865283Z	    isNew: false,
2025-09-16T23:46:01.865395Z	    partNumber: 'SKKT106/16E',
2025-09-16T23:46:01.86552Z	    pricing: {
2025-09-16T23:46:01.865746Z	      currency: 'CNY',
2025-09-16T23:46:01.865933Z	      leadTime: null,
2025-09-16T23:46:01.866103Z	      moq: null,
2025-09-16T23:46:01.86618Z	      price: null,
2025-09-16T23:46:01.866273Z	      tiers: null
2025-09-16T23:46:01.866378Z	    },
2025-09-16T23:46:01.8665Z	    shortDescription: 'SKKT106/16E',
2025-09-16T23:46:01.866638Z	    slug: 'SKKT106/16E',
2025-09-16T23:46:01.866782Z	    title: 'SKKT106/16E'
2025-09-16T23:46:01.866893Z	  }
2025-09-16T23:46:01.86704Z	}
2025-09-16T23:46:01.867113Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:01.867232Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:46:01.86741Z	Products fetch result: {
2025-09-16T23:46:01.867558Z	  totalProducts: 4,
2025-09-16T23:46:01.867634Z	  fetchedProducts: 4,
2025-09-16T23:46:01.868037Z	  firstProduct: {
2025-09-16T23:46:01.868223Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:46:01.868614Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:46:01.868779Z	    _type: 'product',
2025-09-16T23:46:01.868966Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:46:01.86906Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:46:01.869216Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:01.869313Z	    image: null,
2025-09-16T23:46:01.869457Z	    inventory: {
2025-09-16T23:46:01.869625Z	      inStock: true,
2025-09-16T23:46:01.869897Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:46:01.870062Z	      quantity: 0,
2025-09-16T23:46:01.870215Z	      status: 'in_stock',
2025-09-16T23:46:01.870392Z	      warehouse: null
2025-09-16T23:46:01.870505Z	    },
2025-09-16T23:46:01.870618Z	    isActive: true,
2025-09-16T23:46:01.870789Z	    isFeatured: false,
2025-09-16T23:46:01.870958Z	    isNew: false,
2025-09-16T23:46:01.871085Z	    partNumber: '11111',
2025-09-16T23:46:01.871204Z	    pricing: {
2025-09-16T23:46:01.871571Z	      currency: 'CNY',
2025-09-16T23:46:01.871669Z	      leadTime: null,
2025-09-16T23:46:01.871865Z	      moq: null,
2025-09-16T23:46:01.87195Z	      price: null,
2025-09-16T23:46:01.872012Z	      tiers: null
2025-09-16T23:46:01.872173Z	    },
2025-09-16T23:46:01.872424Z	    shortDescription: '11111',
2025-09-16T23:46:01.872595Z	    slug: 'sic mosfet',
2025-09-16T23:46:01.872771Z	    title: '111111'
2025-09-16T23:46:01.872927Z	  }
2025-09-16T23:46:01.873127Z	}
2025-09-16T23:46:01.873284Z	Solutions fetch result: {
2025-09-16T23:46:01.87339Z	  totalSolutions: 6,
2025-09-16T23:46:01.873522Z	  fetchedSolutions: 4,
2025-09-16T23:46:01.87363Z	  firstSolution: {
2025-09-16T23:46:01.873894Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:46:01.87397Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:46:01.874082Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:46:01.874478Z	    complexity: 'medium',
2025-09-16T23:46:01.874743Z	    coverImage: null,
2025-09-16T23:46:01.875015Z	    description: [ [Object] ],
2025-09-16T23:46:01.87517Z	    isFeatured: false,
2025-09-16T23:46:01.875273Z	    isPublished: true,
2025-09-16T23:46:01.875337Z	    primaryBrand: {
2025-09-16T23:46:01.875402Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:46:01.87546Z	      logo: null,
2025-09-16T23:46:01.875518Z	      name: 'CREE',
2025-09-16T23:46:01.87558Z	      slug: 'cree'
2025-09-16T23:46:01.875639Z	    },
2025-09-16T23:46:01.875709Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:46:01.875771Z	    relatedBrands: null,
2025-09-16T23:46:01.875834Z	    slug: '11111',
2025-09-16T23:46:01.875894Z	    summary: '11111',
2025-09-16T23:46:01.875963Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:01.876018Z	    title: '11111',
2025-09-16T23:46:01.876073Z	    viewCount: 0
2025-09-16T23:46:01.876127Z	  }
2025-09-16T23:46:01.876181Z	}
2025-09-16T23:46:01.876249Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-16T23:46:01.876312Z	Fetching products with query: 
2025-09-16T23:46:01.876367Z	    {
2025-09-16T23:46:01.876443Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.876515Z	        
2025-09-16T23:46:01.876577Z	    _id,
2025-09-16T23:46:01.87664Z	    _type,
2025-09-16T23:46:01.876714Z	    partNumber,
2025-09-16T23:46:01.87677Z	    "slug": slug.current,
2025-09-16T23:46:01.87688Z	    title,
2025-09-16T23:46:01.876942Z	    shortDescription,
2025-09-16T23:46:01.876997Z	    image,
2025-09-16T23:46:01.87705Z	    brand->{
2025-09-16T23:46:01.877107Z	      name,
2025-09-16T23:46:01.877221Z	      "slug": slug.current,
2025-09-16T23:46:01.877329Z	      logo
2025-09-16T23:46:01.877443Z	    },
2025-09-16T23:46:01.877552Z	    category->{
2025-09-16T23:46:01.877622Z	      name,
2025-09-16T23:46:01.877745Z	      "slug": slug.current
2025-09-16T23:46:01.87819Z	    },
2025-09-16T23:46:01.878374Z	    pricing{
2025-09-16T23:46:01.878464Z	      currency,
2025-09-16T23:46:01.878593Z	      tiers[]{
2025-09-16T23:46:01.878688Z	        quantity,
2025-09-16T23:46:01.878788Z	        price,
2025-09-16T23:46:01.878848Z	        unit
2025-09-16T23:46:01.878903Z	      },
2025-09-16T23:46:01.878958Z	      moq,
2025-09-16T23:46:01.879014Z	      leadTime,
2025-09-16T23:46:01.879073Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.879169Z	      "price": tiers[0].price,
2025-09-16T23:46:01.879261Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.879348Z	    },
2025-09-16T23:46:01.879456Z	    inventory{
2025-09-16T23:46:01.879555Z	      quantity,
2025-09-16T23:46:01.879653Z	      status,
2025-09-16T23:46:01.879842Z	      warehouse,
2025-09-16T23:46:01.879919Z	      lastUpdated,
2025-09-16T23:46:01.880005Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.880123Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.88022Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.880311Z	    },
2025-09-16T23:46:01.880488Z	    isActive,
2025-09-16T23:46:01.880569Z	    isFeatured,
2025-09-16T23:46:01.880626Z	    isNew,
2025-09-16T23:46:01.880952Z	    _createdAt,
2025-09-16T23:46:01.881079Z	    _updatedAt
2025-09-16T23:46:01.881178Z	  
2025-09-16T23:46:01.881289Z	      },
2025-09-16T23:46:01.881416Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-16T23:46:01.881542Z	    }
2025-09-16T23:46:01.881648Z	  
2025-09-16T23:46:01.881779Z	Query parameters: {
2025-09-16T23:46:01.881939Z	  limit: 8,
2025-09-16T23:46:01.882049Z	  offset: 0,
2025-09-16T23:46:01.882148Z	  category: undefined,
2025-09-16T23:46:01.882253Z	  brand: 'ncc',
2025-09-16T23:46:01.882352Z	  featured: undefined
2025-09-16T23:46:01.882473Z	}
2025-09-16T23:46:01.882583Z	Fetching solutions with query: 
2025-09-16T23:46:01.8827Z	    {
2025-09-16T23:46:01.882814Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.882934Z	        
2025-09-16T23:46:01.883037Z	    _id,
2025-09-16T23:46:01.88328Z	    title,
2025-09-16T23:46:01.88337Z	    "slug": slug.current,
2025-09-16T23:46:01.883633Z	    summary,
2025-09-16T23:46:01.883768Z	    description,
2025-09-16T23:46:01.883974Z	    coverImage,
2025-09-16T23:46:01.884291Z	    primaryBrand->{
2025-09-16T23:46:01.88439Z	      _id,
2025-09-16T23:46:01.884614Z	      name,
2025-09-16T23:46:01.884752Z	      "slug": slug.current,
2025-09-16T23:46:01.885102Z	      logo
2025-09-16T23:46:01.885189Z	    },
2025-09-16T23:46:01.885274Z	    relatedBrands[]->{
2025-09-16T23:46:01.885648Z	      _id,
2025-09-16T23:46:01.885905Z	      name,
2025-09-16T23:46:01.886007Z	      "slug": slug.current,
2025-09-16T23:46:01.886357Z	      logo
2025-09-16T23:46:01.88645Z	    },
2025-09-16T23:46:01.886513Z	    targetMarket,
2025-09-16T23:46:01.886915Z	    complexity,
2025-09-16T23:46:01.886996Z	    publishedAt,
2025-09-16T23:46:01.887126Z	    isPublished,
2025-09-16T23:46:01.887237Z	    isFeatured,
2025-09-16T23:46:01.887496Z	    viewCount,
2025-09-16T23:46:01.887578Z	    _createdAt,
2025-09-16T23:46:01.88773Z	    _updatedAt
2025-09-16T23:46:01.88782Z	  
2025-09-16T23:46:01.887882Z	      },
2025-09-16T23:46:01.888017Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-16T23:46:01.888108Z	    }
2025-09-16T23:46:01.88823Z	  
2025-09-16T23:46:01.888393Z	Query parameters: {
2025-09-16T23:46:01.888468Z	  limit: 4,
2025-09-16T23:46:01.888641Z	  offset: 0,
2025-09-16T23:46:01.888753Z	  targetMarket: undefined,
2025-09-16T23:46:01.888878Z	  brand: 'ncc',
2025-09-16T23:46:01.889019Z	  featured: undefined
2025-09-16T23:46:01.889136Z	}
2025-09-16T23:46:01.889245Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-16T23:46:01.889385Z	Fetching products with query: 
2025-09-16T23:46:01.889505Z	    {
2025-09-16T23:46:01.889606Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.889724Z	        
2025-09-16T23:46:01.890011Z	    _id,
2025-09-16T23:46:01.890089Z	    _type,
2025-09-16T23:46:01.890293Z	    partNumber,
2025-09-16T23:46:01.890402Z	    "slug": slug.current,
2025-09-16T23:46:01.890527Z	    title,
2025-09-16T23:46:01.890656Z	    shortDescription,
2025-09-16T23:46:01.890807Z	    image,
2025-09-16T23:46:01.890899Z	    brand->{
2025-09-16T23:46:01.89114Z	      name,
2025-09-16T23:46:01.891229Z	      "slug": slug.current,
2025-09-16T23:46:01.891404Z	      logo
2025-09-16T23:46:01.891482Z	    },
2025-09-16T23:46:01.891632Z	    category->{
2025-09-16T23:46:01.891906Z	      name,
2025-09-16T23:46:01.891993Z	      "slug": slug.current
2025-09-16T23:46:01.892135Z	    },
2025-09-16T23:46:01.892221Z	    pricing{
2025-09-16T23:46:01.892286Z	      currency,
2025-09-16T23:46:01.892342Z	      tiers[]{
2025-09-16T23:46:01.892405Z	        quantity,
2025-09-16T23:46:01.892463Z	        price,
2025-09-16T23:46:01.892518Z	        unit
2025-09-16T23:46:01.892582Z	      },
2025-09-16T23:46:01.892639Z	      moq,
2025-09-16T23:46:01.892724Z	      leadTime,
2025-09-16T23:46:01.892793Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.892854Z	      "price": tiers[0].price,
2025-09-16T23:46:01.892912Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.892967Z	    },
2025-09-16T23:46:01.893311Z	    inventory{
2025-09-16T23:46:01.893596Z	      quantity,
2025-09-16T23:46:01.893778Z	      status,
2025-09-16T23:46:01.893876Z	      warehouse,
2025-09-16T23:46:01.894009Z	      lastUpdated,
2025-09-16T23:46:01.894102Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.894211Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.894361Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.89445Z	    },
2025-09-16T23:46:01.894534Z	    isActive,
2025-09-16T23:46:01.894647Z	    isFeatured,
2025-09-16T23:46:01.894902Z	    isNew,
2025-09-16T23:46:01.895004Z	    _createdAt,
2025-09-16T23:46:01.895251Z	    _updatedAt
2025-09-16T23:46:01.895328Z	  
2025-09-16T23:46:01.895401Z	      },
2025-09-16T23:46:01.895648Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-16T23:46:01.895762Z	    }
2025-09-16T23:46:01.895973Z	  
2025-09-16T23:46:01.896039Z	Query parameters: {
2025-09-16T23:46:01.896417Z	  limit: 8,
2025-09-16T23:46:01.896653Z	  offset: 0,
2025-09-16T23:46:01.89684Z	  category: undefined,
2025-09-16T23:46:01.896923Z	  brand: 'ncc',
2025-09-16T23:46:01.896995Z	  featured: undefined
2025-09-16T23:46:01.897144Z	}
2025-09-16T23:46:01.897328Z	Fetching solutions with query: 
2025-09-16T23:46:01.897435Z	    {
2025-09-16T23:46:01.897552Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.897708Z	        
2025-09-16T23:46:01.897844Z	    _id,
2025-09-16T23:46:01.897968Z	    title,
2025-09-16T23:46:01.898106Z	    "slug": slug.current,
2025-09-16T23:46:01.898237Z	    summary,
2025-09-16T23:46:01.898402Z	    description,
2025-09-16T23:46:01.898502Z	    coverImage,
2025-09-16T23:46:01.898651Z	    primaryBrand->{
2025-09-16T23:46:01.898819Z	      _id,
2025-09-16T23:46:01.89889Z	      name,
2025-09-16T23:46:01.899Z	      "slug": slug.current,
2025-09-16T23:46:01.899073Z	      logo
2025-09-16T23:46:01.89918Z	    },
2025-09-16T23:46:01.8993Z	    relatedBrands[]->{
2025-09-16T23:46:01.899482Z	      _id,
2025-09-16T23:46:01.899569Z	      name,
2025-09-16T23:46:01.899709Z	      "slug": slug.current,
2025-09-16T23:46:01.899855Z	      logo
2025-09-16T23:46:01.900506Z	    },
2025-09-16T23:46:01.900592Z	    targetMarket,
2025-09-16T23:46:01.900668Z	    complexity,
2025-09-16T23:46:01.900884Z	    publishedAt,
2025-09-16T23:46:01.900979Z	    isPublished,
2025-09-16T23:46:01.901103Z	    isFeatured,
2025-09-16T23:46:01.901286Z	    viewCount,
2025-09-16T23:46:01.901442Z	    _createdAt,
2025-09-16T23:46:01.901568Z	    _updatedAt
2025-09-16T23:46:01.901706Z	  
2025-09-16T23:46:01.901835Z	      },
2025-09-16T23:46:01.901959Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-16T23:46:01.902079Z	    }
2025-09-16T23:46:01.902196Z	  
2025-09-16T23:46:01.902327Z	Query parameters: {
2025-09-16T23:46:01.902449Z	  limit: 4,
2025-09-16T23:46:01.902563Z	  offset: 0,
2025-09-16T23:46:01.902671Z	  targetMarket: undefined,
2025-09-16T23:46:01.902812Z	  brand: 'ncc',
2025-09-16T23:46:01.90293Z	  featured: undefined
2025-09-16T23:46:01.903062Z	}
2025-09-16T23:46:01.903182Z	✅ [getBrandData] Found brand: ncc
2025-09-16T23:46:01.903303Z	✅ [getBrandData] Found brand: ncc
2025-09-16T23:46:01.903424Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:01.903529Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:01.903648Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:01.903791Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:01.903913Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:46:01.904035Z	Fetching products with query: 
2025-09-16T23:46:01.904173Z	    {
2025-09-16T23:46:01.904282Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.904392Z	        
2025-09-16T23:46:01.904502Z	    _id,
2025-09-16T23:46:01.904601Z	    _type,
2025-09-16T23:46:01.904724Z	    partNumber,
2025-09-16T23:46:01.904847Z	    "slug": slug.current,
2025-09-16T23:46:01.904959Z	    title,
2025-09-16T23:46:01.905068Z	    shortDescription,
2025-09-16T23:46:01.905185Z	    image,
2025-09-16T23:46:01.905297Z	    brand->{
2025-09-16T23:46:01.90547Z	      name,
2025-09-16T23:46:01.90559Z	      "slug": slug.current,
2025-09-16T23:46:01.905731Z	      logo
2025-09-16T23:46:01.905877Z	    },
2025-09-16T23:46:01.905997Z	    category->{
2025-09-16T23:46:01.906118Z	      name,
2025-09-16T23:46:01.906232Z	      "slug": slug.current
2025-09-16T23:46:01.906343Z	    },
2025-09-16T23:46:01.906456Z	    pricing{
2025-09-16T23:46:01.906592Z	      currency,
2025-09-16T23:46:01.90674Z	      tiers[]{
2025-09-16T23:46:01.90685Z	        quantity,
2025-09-16T23:46:01.906957Z	        price,
2025-09-16T23:46:01.907072Z	        unit
2025-09-16T23:46:01.907181Z	      },
2025-09-16T23:46:01.907284Z	      moq,
2025-09-16T23:46:01.90739Z	      leadTime,
2025-09-16T23:46:01.9075Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.907613Z	      "price": tiers[0].price,
2025-09-16T23:46:01.907746Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.907866Z	    },
2025-09-16T23:46:01.907986Z	    inventory{
2025-09-16T23:46:01.908094Z	      quantity,
2025-09-16T23:46:01.908208Z	      status,
2025-09-16T23:46:01.908317Z	      warehouse,
2025-09-16T23:46:01.908429Z	      lastUpdated,
2025-09-16T23:46:01.908552Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.908699Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.90883Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.908951Z	    },
2025-09-16T23:46:01.909066Z	    isActive,
2025-09-16T23:46:01.909175Z	    isFeatured,
2025-09-16T23:46:01.909289Z	    isNew,
2025-09-16T23:46:01.909394Z	    _createdAt,
2025-09-16T23:46:01.909504Z	    _updatedAt
2025-09-16T23:46:01.909634Z	  
2025-09-16T23:46:01.909773Z	      },
2025-09-16T23:46:01.909896Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:46:01.910022Z	    }
2025-09-16T23:46:01.910151Z	  
2025-09-16T23:46:01.91027Z	Query parameters: {
2025-09-16T23:46:01.910383Z	  limit: 8,
2025-09-16T23:46:01.910504Z	  offset: 0,
2025-09-16T23:46:01.91063Z	  category: undefined,
2025-09-16T23:46:01.910763Z	  brand: 'littelfuse',
2025-09-16T23:46:01.91088Z	  featured: undefined
2025-09-16T23:46:01.910995Z	}
2025-09-16T23:46:01.911111Z	Fetching solutions with query: 
2025-09-16T23:46:01.91124Z	    {
2025-09-16T23:46:01.91135Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.911482Z	        
2025-09-16T23:46:01.911598Z	    _id,
2025-09-16T23:46:01.91174Z	    title,
2025-09-16T23:46:01.911858Z	    "slug": slug.current,
2025-09-16T23:46:01.911973Z	    summary,
2025-09-16T23:46:01.912101Z	    description,
2025-09-16T23:46:01.912226Z	    coverImage,
2025-09-16T23:46:01.912328Z	    primaryBrand->{
2025-09-16T23:46:01.912429Z	      _id,
2025-09-16T23:46:01.912528Z	      name,
2025-09-16T23:46:01.912646Z	      "slug": slug.current,
2025-09-16T23:46:01.912773Z	      logo
2025-09-16T23:46:01.912873Z	    },
2025-09-16T23:46:01.91298Z	    relatedBrands[]->{
2025-09-16T23:46:01.913093Z	      _id,
2025-09-16T23:46:01.913207Z	      name,
2025-09-16T23:46:01.913418Z	      "slug": slug.current,
2025-09-16T23:46:01.913665Z	      logo
2025-09-16T23:46:01.913915Z	    },
2025-09-16T23:46:01.914137Z	    targetMarket,
2025-09-16T23:46:01.91433Z	    complexity,
2025-09-16T23:46:01.914449Z	    publishedAt,
2025-09-16T23:46:01.914569Z	    isPublished,
2025-09-16T23:46:01.914706Z	    isFeatured,
2025-09-16T23:46:01.914845Z	    viewCount,
2025-09-16T23:46:01.914964Z	    _createdAt,
2025-09-16T23:46:01.915081Z	    _updatedAt
2025-09-16T23:46:01.915208Z	  
2025-09-16T23:46:01.91533Z	      },
2025-09-16T23:46:01.915441Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:46:01.915545Z	    }
2025-09-16T23:46:01.915651Z	  
2025-09-16T23:46:01.915792Z	Query parameters: {
2025-09-16T23:46:01.915896Z	  limit: 4,
2025-09-16T23:46:01.916025Z	  offset: 0,
2025-09-16T23:46:01.916142Z	  targetMarket: undefined,
2025-09-16T23:46:01.916247Z	  brand: 'littelfuse',
2025-09-16T23:46:01.91636Z	  featured: undefined
2025-09-16T23:46:01.916499Z	}
2025-09-16T23:46:01.916623Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:46:01.916759Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:01.916872Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:01.917001Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:46:01.917119Z	Fetching products with query: 
2025-09-16T23:46:01.917238Z	    {
2025-09-16T23:46:01.917347Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.917468Z	        
2025-09-16T23:46:01.917589Z	    _id,
2025-09-16T23:46:01.917728Z	    _type,
2025-09-16T23:46:01.917848Z	    partNumber,
2025-09-16T23:46:01.917953Z	    "slug": slug.current,
2025-09-16T23:46:01.918062Z	    title,
2025-09-16T23:46:01.918167Z	    shortDescription,
2025-09-16T23:46:01.918279Z	    image,
2025-09-16T23:46:01.918386Z	    brand->{
2025-09-16T23:46:01.918509Z	      name,
2025-09-16T23:46:01.91863Z	      "slug": slug.current,
2025-09-16T23:46:01.918766Z	      logo
2025-09-16T23:46:01.918882Z	    },
2025-09-16T23:46:01.918982Z	    category->{
2025-09-16T23:46:01.919107Z	      name,
2025-09-16T23:46:01.91921Z	      "slug": slug.current
2025-09-16T23:46:01.919351Z	    },
2025-09-16T23:46:01.919466Z	    pricing{
2025-09-16T23:46:01.919579Z	      currency,
2025-09-16T23:46:01.91975Z	      tiers[]{
2025-09-16T23:46:01.919883Z	        quantity,
2025-09-16T23:46:01.920004Z	        price,
2025-09-16T23:46:01.920118Z	        unit
2025-09-16T23:46:01.920231Z	      },
2025-09-16T23:46:01.920341Z	      moq,
2025-09-16T23:46:01.920449Z	      leadTime,
2025-09-16T23:46:01.920574Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.920711Z	      "price": tiers[0].price,
2025-09-16T23:46:01.92083Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.920933Z	    },
2025-09-16T23:46:01.921035Z	    inventory{
2025-09-16T23:46:01.921135Z	      quantity,
2025-09-16T23:46:01.921231Z	      status,
2025-09-16T23:46:01.921328Z	      warehouse,
2025-09-16T23:46:01.921441Z	      lastUpdated,
2025-09-16T23:46:01.921559Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.921693Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.921809Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.92193Z	    },
2025-09-16T23:46:01.922032Z	    isActive,
2025-09-16T23:46:01.922139Z	    isFeatured,
2025-09-16T23:46:01.922259Z	    isNew,
2025-09-16T23:46:01.92237Z	    _createdAt,
2025-09-16T23:46:01.922479Z	    _updatedAt
2025-09-16T23:46:01.922578Z	  
2025-09-16T23:46:01.922701Z	      },
2025-09-16T23:46:01.922825Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:46:01.922943Z	    }
2025-09-16T23:46:01.923058Z	  
2025-09-16T23:46:01.923168Z	Query parameters: {
2025-09-16T23:46:01.923268Z	  limit: 8,
2025-09-16T23:46:01.923358Z	  offset: 0,
2025-09-16T23:46:01.923448Z	  category: undefined,
2025-09-16T23:46:01.923539Z	  brand: 'littelfuse',
2025-09-16T23:46:01.923635Z	  featured: undefined
2025-09-16T23:46:01.923774Z	}
2025-09-16T23:46:01.923887Z	Fetching solutions with query: 
2025-09-16T23:46:01.923978Z	    {
2025-09-16T23:46:01.924069Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.924176Z	        
2025-09-16T23:46:01.924259Z	    _id,
2025-09-16T23:46:01.924316Z	    title,
2025-09-16T23:46:01.924378Z	    "slug": slug.current,
2025-09-16T23:46:01.924481Z	    summary,
2025-09-16T23:46:01.924631Z	    description,
2025-09-16T23:46:01.924806Z	    coverImage,
2025-09-16T23:46:01.924953Z	    primaryBrand->{
2025-09-16T23:46:01.925157Z	      _id,
2025-09-16T23:46:01.925308Z	      name,
2025-09-16T23:46:01.925468Z	      "slug": slug.current,
2025-09-16T23:46:01.925614Z	      logo
2025-09-16T23:46:01.925792Z	    },
2025-09-16T23:46:01.92594Z	    relatedBrands[]->{
2025-09-16T23:46:01.926095Z	      _id,
2025-09-16T23:46:01.926223Z	      name,
2025-09-16T23:46:01.926391Z	      "❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:01.926531Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:01.926696Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:01.926902Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:01.92702Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424)
2025-09-16T23:46:01.927146Z	    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-09-16T23:46:01.927268Z	    at runNextTicks (node:internal/process/task_queues:64:3)
2025-09-16T23:46:01.927369Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:46:01.92747Z	    at process.processTimers (node:internal/timers:512:7) {
2025-09-16T23:46:01.927568Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:01.927714Z	}
2025-09-16T23:46:01.927812Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:01.927908Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:01.928007Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:01.928111Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:01.928214Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424)
2025-09-16T23:46:01.928295Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:01.928397Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:01.928503Z	}
2025-09-16T23:46:01.928608Z	slug": slug.current,
2025-09-16T23:46:01.92874Z	      logo
2025-09-16T23:46:01.92884Z	    },
2025-09-16T23:46:01.928937Z	    targetMarket,
2025-09-16T23:46:01.929028Z	    complexity,
2025-09-16T23:46:01.92912Z	    publishedAt,
2025-09-16T23:46:01.929222Z	    isPublished,
2025-09-16T23:46:01.929314Z	    isFeatured,
2025-09-16T23:46:01.929413Z	    viewCount,
2025-09-16T23:46:01.929511Z	    _createdAt,
2025-09-16T23:46:01.929604Z	    _updatedAt
2025-09-16T23:46:01.929726Z	  
2025-09-16T23:46:01.929833Z	      },
2025-09-16T23:46:01.929929Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:46:01.930045Z	    }
2025-09-16T23:46:01.930139Z	  
2025-09-16T23:46:01.930231Z	Query parameters: {
2025-09-16T23:46:01.930316Z	  limit: 4,
2025-09-16T23:46:01.930403Z	  offset: 0,
2025-09-16T23:46:01.930486Z	  targetMarket: undefined,
2025-09-16T23:46:01.930573Z	  brand: 'littelfuse',
2025-09-16T23:46:01.930658Z	  featured: undefined
2025-09-16T23:46:01.930783Z	}
2025-09-16T23:46:01.930891Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:46:01.930999Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:01.93109Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:01.931189Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-16T23:46:01.931295Z	Fetching products with query: 
2025-09-16T23:46:01.931392Z	    {
2025-09-16T23:46:01.931486Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.931577Z	        
2025-09-16T23:46:01.931689Z	    _id,
2025-09-16T23:46:01.931812Z	    _type,
2025-09-16T23:46:01.931905Z	    partNumber,
2025-09-16T23:46:01.931999Z	    "slug": slug.current,
2025-09-16T23:46:01.932088Z	    title,
2025-09-16T23:46:01.932177Z	    shortDescription,
2025-09-16T23:46:01.932286Z	    image,
2025-09-16T23:46:01.932369Z	    brand->{
2025-09-16T23:46:01.932487Z	      name,
2025-09-16T23:46:01.932616Z	      "slug": slug.current,
2025-09-16T23:46:01.932721Z	      logo
2025-09-16T23:46:01.93282Z	    },
2025-09-16T23:46:01.932916Z	    category->{
2025-09-16T23:46:01.93302Z	      name,
2025-09-16T23:46:01.933117Z	      "slug": slug.current
2025-09-16T23:46:01.933212Z	    },
2025-09-16T23:46:01.933312Z	    pricing{
2025-09-16T23:46:01.9334Z	      currency,
2025-09-16T23:46:01.933461Z	      tiers[]{
2025-09-16T23:46:01.933519Z	        quantity,
2025-09-16T23:46:01.933574Z	        price,
2025-09-16T23:46:01.933636Z	        unit
2025-09-16T23:46:01.933743Z	      },
2025-09-16T23:46:01.933811Z	      moq,
2025-09-16T23:46:01.933985Z	      leadTime,
2025-09-16T23:46:01.934131Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.934231Z	      "price": tiers[0].price,
2025-09-16T23:46:01.934331Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.934492Z	    },
2025-09-16T23:46:01.934623Z	    inventory{
2025-09-16T23:46:01.934796Z	      quantity,
2025-09-16T23:46:01.934962Z	      status,
2025-09-16T23:46:01.935094Z	      warehouse,
2025-09-16T23:46:01.935194Z	      lastUpdated,
2025-09-16T23:46:01.935305Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.935406Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.9355Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.935596Z	    },
2025-09-16T23:46:01.935723Z	    isActive,
2025-09-16T23:46:01.93583Z	    isFeatured,
2025-09-16T23:46:01.935922Z	    isNew,
2025-09-16T23:46:01.936025Z	    _createdAt,
2025-09-16T23:46:01.936136Z	    _updatedAt
2025-09-16T23:46:01.936236Z	  
2025-09-16T23:46:01.936327Z	      },
2025-09-16T23:46:01.936432Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-16T23:46:01.936597Z	    }
2025-09-16T23:46:01.936718Z	  
2025-09-16T23:46:01.936819Z	Query parameters: {
2025-09-16T23:46:01.936913Z	  limit: 8,
2025-09-16T23:46:01.937006Z	  offset: 0,
2025-09-16T23:46:01.93711Z	  category: undefined,
2025-09-16T23:46:01.937211Z	  brand: 'ixys',
2025-09-16T23:46:01.937312Z	  featured: undefined
2025-09-16T23:46:01.937411Z	}
2025-09-16T23:46:01.9375Z	Fetching solutions with query: 
2025-09-16T23:46:01.937589Z	    {
2025-09-16T23:46:01.937695Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.937811Z	        
2025-09-16T23:46:01.937967Z	    _id,
2025-09-16T23:46:01.938071Z	    title,
2025-09-16T23:46:01.938175Z	    "slug": slug.current,
2025-09-16T23:46:01.938275Z	    summary,
2025-09-16T23:46:01.938368Z	    description,
2025-09-16T23:46:01.938473Z	    coverImage,
2025-09-16T23:46:01.938592Z	    primaryBrand->{
2025-09-16T23:46:01.938782Z	      _id,
2025-09-16T23:46:01.93891Z	      name,
2025-09-16T23:46:01.939029Z	      "slug": slug.current,
2025-09-16T23:46:01.939174Z	      logo
2025-09-16T23:46:01.939321Z	    },
2025-09-16T23:46:01.939426Z	    relatedBrands[]->{
2025-09-16T23:46:01.939574Z	      _id,
2025-09-16T23:46:01.93971Z	      name,
2025-09-16T23:46:01.939825Z	      "slug": slug.current,
2025-09-16T23:46:01.939953Z	      logo
2025-09-16T23:46:01.940081Z	    },
2025-09-16T23:46:01.940208Z	    targetMarket,
2025-09-16T23:46:01.940372Z	    complexity,
2025-09-16T23:46:01.940489Z	    publishedAt,
2025-09-16T23:46:01.940596Z	    isPublished,
2025-09-16T23:46:01.94075Z	    isFeatured,
2025-09-16T23:46:01.940883Z	    viewCount,
2025-09-16T23:46:01.941019Z	    _createdAt,
2025-09-16T23:46:01.941147Z	    _updatedAt
2025-09-16T23:46:01.941241Z	  
2025-09-16T23:46:01.941369Z	      },
2025-09-16T23:46:01.941492Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-16T23:46:01.9416Z	    }
2025-09-16T23:46:01.941773Z	  
2025-09-16T23:46:01.941904Z	Query parameters: {
2025-09-16T23:46:01.942033Z	  limit: 4,
2025-09-16T23:46:01.942162Z	  offset: 0,
2025-09-16T23:46:01.942291Z	  targetMarket: undefined,
2025-09-16T23:46:01.942459Z	  brand: 'ixys',
2025-09-16T23:46:01.942586Z	  featured: undefined
2025-09-16T23:46:01.94272Z	}
2025-09-16T23:46:01.942864Z	✅ [getBrandData] Found brand: IXYS
2025-09-16T23:46:01.942971Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:01.943101Z	Solutions fetch result: {
2025-09-16T23:46:01.943213Z	  totalSolutions: 1,
2025-09-16T23:46:01.943333Z	  fetchedSolutions: 1,
2025-09-16T23:46:01.943488Z	  firstSolution: {
2025-09-16T23:46:01.943619Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-16T23:46:01.943764Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-16T23:46:01.943904Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-16T23:46:01.944089Z	    complexity: 'medium',
2025-09-16T23:46:01.944227Z	    coverImage: null,
2025-09-16T23:46:01.94432Z	    description: [ [Object] ],
2025-09-16T23:46:01.944428Z	    isFeatured: false,
2025-09-16T23:46:01.944572Z	    isPublished: true,
2025-09-16T23:46:01.944705Z	    primaryBrand: {
2025-09-16T23:46:01.944852Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:46:01.94502Z	      logo: null,
2025-09-16T23:46:01.945103Z	      name: 'IXYS',
2025-09-16T23:46:01.945219Z	      slug: 'ixys'
2025-09-16T23:46:01.945394Z	    },
2025-09-16T23:46:01.945543Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-16T23:46:01.945665Z	    relatedBrands: null,
2025-09-16T23:46:01.945792Z	    slug: '99999',
2025-09-16T23:46:01.945912Z	    summary: '99999',
2025-09-16T23:46:01.946026Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:01.946146Z	    title: '99999',
2025-09-16T23:46:01.946266Z	    viewCount: 0
2025-09-16T23:46:01.946367Z	  }
2025-09-16T23:46:01.946472Z	}
2025-09-16T23:46:01.946577Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-16T23:46:01.946694Z	Fetching products with query: 
2025-09-16T23:46:01.946786Z	    {
2025-09-16T23:46:01.946886Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.947015Z	        
2025-09-16T23:46:01.947136Z	    _id,
2025-09-16T23:46:01.947237Z	    _type,
2025-09-16T23:46:01.947341Z	    partNumber,
2025-09-16T23:46:01.947503Z	    "slug": slug.current,
2025-09-16T23:46:01.947608Z	    title,
2025-09-16T23:46:01.947751Z	    shortDescription,
2025-09-16T23:46:01.947851Z	    image,
2025-09-16T23:46:01.947944Z	    brand->{
2025-09-16T23:46:01.948045Z	      name,
2025-09-16T23:46:01.948138Z	      "slug": slug.current,
2025-09-16T23:46:01.948241Z	      logo
2025-09-16T23:46:01.94834Z	    },
2025-09-16T23:46:01.948447Z	    category->{
2025-09-16T23:46:01.948586Z	      name,
2025-09-16T23:46:01.94875Z	      "slug": slug.current
2025-09-16T23:46:01.948881Z	    },
2025-09-16T23:46:01.949002Z	    pricing{
2025-09-16T23:46:01.949115Z	      currency,
2025-09-16T23:46:01.949224Z	      tiers[]{
2025-09-16T23:46:01.949338Z	        quantity,
2025-09-16T23:46:01.949457Z	        price,
2025-09-16T23:46:01.949615Z	        unit
2025-09-16T23:46:01.949765Z	      },
2025-09-16T23:46:01.949845Z	      moq,
2025-09-16T23:46:01.949951Z	      leadTime,
2025-09-16T23:46:01.950069Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.950203Z	      "price": tiers[0].price,
2025-09-16T23:46:01.950365Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.950449Z	    },
2025-09-16T23:46:01.950552Z	    inventory{
2025-09-16T23:46:01.950719Z	      quantity,
2025-09-16T23:46:01.950854Z	      status,
2025-09-16T23:46:01.950985Z	      warehouse,
2025-09-16T23:46:01.951145Z	      lastUpdated,
2025-09-16T23:46:01.951289Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.951461Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.951534Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.951653Z	    },
2025-09-16T23:46:01.951825Z	    isActive,
2025-09-16T23:46:01.951971Z	    isFeatured,
2025-09-16T23:46:01.952047Z	    isNew,
2025-09-16T23:46:01.952154Z	    _createdAt,
2025-09-16T23:46:01.952347Z	    _updatedAt
2025-09-16T23:46:01.952505Z	  
2025-09-16T23:46:01.952613Z	      },
2025-09-16T23:46:01.95302Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-16T23:46:01.953192Z	    }
2025-09-16T23:46:01.953358Z	  
2025-09-16T23:46:01.953561Z	Query parameters: {
2025-09-16T23:46:01.953642Z	  limit: 8,
2025-09-16T23:46:01.953791Z	  offset: 0,
2025-09-16T23:46:01.953919Z	  category: undefined,
2025-09-16T23:46:01.954163Z	  brand: 'ixys',
2025-09-16T23:46:01.954259Z	  featured: undefined
2025-09-16T23:46:01.954417Z	}
2025-09-16T23:46:01.954606Z	Fetching solutions with query: 
2025-09-16T23:46:01.95474Z	    {
2025-09-16T23:46:01.954859Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.95504Z	        
2025-09-16T23:46:01.955202Z	    _id,
2025-09-16T23:46:01.955349Z	    title,
2025-09-16T23:46:01.955424Z	    "slug": slug.current,
2025-09-16T23:46:01.955483Z	    summary,
2025-09-16T23:46:01.955541Z	    description,
2025-09-16T23:46:01.956511Z	    coverImage,
2025-09-16T23:46:01.956588Z	    primaryBrand->{
2025-09-16T23:46:01.956647Z	      _id,
2025-09-16T23:46:01.956735Z	      name,
2025-09-16T23:46:01.956795Z	      "slug": slug.current,
2025-09-16T23:46:01.956854Z	      logo
2025-09-16T23:46:01.956909Z	    },
2025-09-16T23:46:01.956966Z	    relatedBrands[]->{
2025-09-16T23:46:01.957021Z	      _id,
2025-09-16T23:46:01.957073Z	      name,
2025-09-16T23:46:01.957125Z	      "slug": slug.current,
2025-09-16T23:46:01.957178Z	      logo
2025-09-16T23:46:01.957232Z	    },
2025-09-16T23:46:01.957287Z	    targetMarket,
2025-09-16T23:46:01.957551Z	    complexity,
2025-09-16T23:46:01.957641Z	    publishedAt,
2025-09-16T23:46:01.957812Z	    isPublished,
2025-09-16T23:46:01.957882Z	    isFeatured,
2025-09-16T23:46:01.95794Z	    viewCount,
2025-09-16T23:46:01.958058Z	    _createdAt,
2025-09-16T23:46:01.958124Z	    _updatedAt
2025-09-16T23:46:01.958271Z	  
2025-09-16T23:46:01.958401Z	      },
2025-09-16T23:46:01.958482Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-16T23:46:01.958543Z	    }
2025-09-16T23:46:01.958717Z	  
2025-09-16T23:46:01.958878Z	Query parameters: {
2025-09-16T23:46:01.959011Z	  limit: 4,
2025-09-16T23:46:01.959094Z	  offset: 0,
2025-09-16T23:46:01.959154Z	  targetMarket: undefined,
2025-09-16T23:46:01.959309Z	  brand: 'ixys',
2025-09-16T23:46:01.959443Z	  featured: undefined
2025-09-16T23:46:01.959519Z	}
2025-09-16T23:46:01.95959Z	✅ [getBrandData] Found brand: IXYS
2025-09-16T23:46:01.959758Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:01.959906Z	Solutions fetch result: {
2025-09-16T23:46:01.959967Z	  totalSolutions: 1,
2025-09-16T23:46:01.960084Z	  fetchedSolutions: 1,
2025-09-16T23:46:01.960174Z	  firstSolution: {
2025-09-16T23:46:01.960319Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-16T23:46:01.960392Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-16T23:46:01.960456Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-16T23:46:01.960591Z	    complexity: 'medium',
2025-09-16T23:46:01.960656Z	    coverImage: null,
2025-09-16T23:46:01.960832Z	    description: [ [Object] ],
2025-09-16T23:46:01.960995Z	    isFeatured: false,
2025-09-16T23:46:01.961107Z	    isPublished: true,
2025-09-16T23:46:01.9613Z	    primaryBrand: {
2025-09-16T23:46:01.9614Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:46:01.961603Z	      logo: null,
2025-09-16T23:46:01.961793Z	      name: 'IXYS',
2025-09-16T23:46:01.961897Z	      slug: 'ixys'
2025-09-16T23:46:01.962057Z	    },
2025-09-16T23:46:01.962185Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-16T23:46:01.962277Z	    relatedBrands: null,
2025-09-16T23:46:01.962455Z	    slug: '99999',
2025-09-16T23:46:01.962557Z	    summary: '99999',
2025-09-16T23:46:01.962643Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:01.962748Z	    title: '99999',
2025-09-16T23:46:01.962833Z	    viewCount: 0
2025-09-16T23:46:01.962917Z	  }
2025-09-16T23:46:01.962998Z	}
2025-09-16T23:46:01.963092Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-16T23:46:01.963183Z	Fetching products with query: 
2025-09-16T23:46:01.963265Z	    {
2025-09-16T23:46:01.963366Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.963466Z	        
2025-09-16T23:46:01.963554Z	    _id,
2025-09-16T23:46:01.96364Z	    _type,
2025-09-16T23:46:01.963752Z	    partNumber,
2025-09-16T23:46:01.963837Z	    "slug": slug.current,
2025-09-16T23:46:01.963921Z	    title,
2025-09-16T23:46:01.964025Z	    shortDescription,
2025-09-16T23:46:01.964113Z	    image,
2025-09-16T23:46:01.964199Z	    brand->{
2025-09-16T23:46:01.964285Z	      name,
2025-09-16T23:46:01.964368Z	      "slug": slug.current,
2025-09-16T23:46:01.964459Z	      logo
2025-09-16T23:46:01.964549Z	    },
2025-09-16T23:46:01.964631Z	    category->{
2025-09-16T23:46:01.96473Z	      name,
2025-09-16T23:46:01.964817Z	      "slug": slug.current
2025-09-16T23:46:01.964903Z	    },
2025-09-16T23:46:01.964992Z	    pricing{
2025-09-16T23:46:01.965082Z	      currency,
2025-09-16T23:46:01.965177Z	      tiers[]{
2025-09-16T23:46:01.965267Z	        quantity,
2025-09-16T23:46:01.965365Z	        price,
2025-09-16T23:46:01.965475Z	        unit
2025-09-16T23:46:01.965574Z	      },
2025-09-16T23:46:01.965668Z	      moq,
2025-09-16T23:46:01.965782Z	      leadTime,
2025-09-16T23:46:01.965876Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.965979Z	      "price": tiers[0].price,
2025-09-16T23:46:01.966075Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.966167Z	    },
2025-09-16T23:46:01.96626Z	    inventory{
2025-09-16T23:46:01.96635Z	      quantity,
2025-09-16T23:46:01.966455Z	      status,
2025-09-16T23:46:01.966548Z	      warehouse,
2025-09-16T23:46:01.966635Z	      lastUpdated,
2025-09-16T23:46:01.966743Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.966842Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.966935Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.967026Z	    },
2025-09-16T23:46:01.967113Z	    isActive,
2025-09-16T23:46:01.967201Z	    isFeatured,
2025-09-16T23:46:01.967283Z	    isNew,
2025-09-16T23:46:01.967389Z	    _createdAt,
2025-09-16T23:46:01.967512Z	    _updatedAt
2025-09-16T23:46:01.967596Z	  
2025-09-16T23:46:01.967692Z	      },
2025-09-16T23:46:01.9678Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-16T23:46:01.96791Z	    }
2025-09-16T23:46:01.968004Z	  
2025-09-16T23:46:01.968094Z	Query parameters: {
2025-09-16T23:46:01.968188Z	  limit: 8,
2025-09-16T23:46:01.968278Z	  offset: 0,
2025-09-16T23:46:01.96837Z	  category: undefined,
2025-09-16T23:46:01.968468Z	  brand: '英飞凌',
2025-09-16T23:46:01.968565Z	  featured: undefined
2025-09-16T23:46:01.96865Z	}
2025-09-16T23:46:01.968752Z	Fetching solutions with query: 
2025-09-16T23:46:01.968843Z	    {
2025-09-16T23:46:01.968929Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.969027Z	        
2025-09-16T23:46:01.969135Z	    _id,
2025-09-16T23:46:01.969225Z	    title,
2025-09-16T23:46:01.969313Z	    "slug": slug.current,
2025-09-16T23:46:01.969395Z	    summary,
2025-09-16T23:46:01.96949Z	    description,
2025-09-16T23:46:01.96958Z	    coverImage,
2025-09-16T23:46:01.969682Z	    primaryBrand->{
2025-09-16T23:46:01.96979Z	      _id,
2025-09-16T23:46:01.969879Z	      name,
2025-09-16T23:46:01.969965Z	      "slug": slug.current,
2025-09-16T23:46:01.970052Z	      logo
2025-09-16T23:46:01.970136Z	    },
2025-09-16T23:46:01.970226Z	    relatedBrands[]->{
2025-09-16T23:46:01.970314Z	      _id,
2025-09-16T23:46:01.970401Z	      name,
2025-09-16T23:46:01.970501Z	      "slug": slug.current,
2025-09-16T23:46:01.97059Z	      logo
2025-09-16T23:46:01.970688Z	    },
2025-09-16T23:46:01.970791Z	    targetMarket,
2025-09-16T23:46:01.970887Z	    complexity,
2025-09-16T23:46:01.970981Z	    publishedAt,
2025-09-16T23:46:01.971077Z	    isPublished,
2025-09-16T23:46:01.971168Z	    isFeatured,
2025-09-16T23:46:01.971259Z	    viewCount,
2025-09-16T23:46:01.971349Z	    _createdAt,
2025-09-16T23:46:01.971441Z	    _updatedAt
2025-09-16T23:46:01.971526Z	  
2025-09-16T23:46:01.971616Z	      },
2025-09-16T23:46:01.971733Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-16T23:46:01.971843Z	    }
2025-09-16T23:46:01.971934Z	  
2025-09-16T23:46:01.971993Z	Query parameters: {
2025-09-16T23:46:01.972048Z	  limit: 4,
2025-09-16T23:46:01.972101Z	  offset: 0,
2025-09-16T23:46:01.972154Z	  targetMarket: undefined,
2025-09-16T23:46:01.972208Z	  brand: '英飞凌',
2025-09-16T23:46:01.972264Z	  featured: undefined
2025-09-16T23:46:01.972315Z	}
2025-09-16T23:46:01.972368Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-16T23:46:01.972464Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:01.972525Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:01.972579Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-16T23:46:01.972641Z	Fetching products with query: 
2025-09-16T23:46:01.972718Z	    {
2025-09-16T23:46:01.972786Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.972846Z	        
2025-09-16T23:46:01.972899Z	    _id,
2025-09-16T23:46:01.972952Z	    _type,
2025-09-16T23:46:01.973006Z	    partNumber,
2025-09-16T23:46:01.973058Z	    "slug": slug.current,
2025-09-16T23:46:01.97311Z	    title,
2025-09-16T23:46:01.973166Z	    shortDescription,
2025-09-16T23:46:01.973222Z	    image,
2025-09-16T23:46:01.973275Z	    brand->{
2025-09-16T23:46:01.973341Z	      name,
2025-09-16T23:46:01.973396Z	      "slug": slug.current,
2025-09-16T23:46:01.973457Z	      logo
2025-09-16T23:46:01.97351Z	    },
2025-09-16T23:46:01.973563Z	    category->{
2025-09-16T23:46:01.973614Z	      name,
2025-09-16T23:46:01.973667Z	      "slug": slug.current
2025-09-16T23:46:01.97375Z	    },
2025-09-16T23:46:01.973805Z	    pricing{
2025-09-16T23:46:01.973858Z	      currency,
2025-09-16T23:46:01.973909Z	      tiers[]{
2025-09-16T23:46:01.973961Z	        quantity,
2025-09-16T23:46:01.974014Z	        price,
2025-09-16T23:46:01.974066Z	        unit
2025-09-16T23:46:01.974118Z	      },
2025-09-16T23:46:01.974169Z	      moq,
2025-09-16T23:46:01.974221Z	      leadTime,
2025-09-16T23:46:01.974272Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.974328Z	      "price": tiers[0].price,
2025-09-16T23:46:01.97438Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.974447Z	    },
2025-09-16T23:46:01.974505Z	    inventory{
2025-09-16T23:46:01.974557Z	      quantity,
2025-09-16T23:46:01.974608Z	      status,
2025-09-16T23:46:01.974662Z	      warehouse,
2025-09-16T23:46:01.974743Z	      lastUpdated,
2025-09-16T23:46:01.974805Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.974899Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.975042Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.975136Z	    },
2025-09-16T23:46:01.975201Z	    isActive,
2025-09-16T23:46:01.975257Z	    isFeatured,
2025-09-16T23:46:01.975312Z	    isNew,
2025-09-16T23:46:01.975372Z	    _createdAt,
2025-09-16T23:46:01.975465Z	    _updatedAt
2025-09-16T23:46:01.97555Z	  
2025-09-16T23:46:01.975777Z	      },
2025-09-16T23:46:01.975867Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-16T23:46:01.97594Z	    }
2025-09-16T23:46:01.975997Z	  
2025-09-16T23:46:01.976053Z	Query parameters: {
2025-09-16T23:46:01.976108Z	  limit: 8,
2025-09-16T23:46:01.976164Z	  offset: 0,
2025-09-16T23:46:01.976219Z	  category: undefined,
2025-09-16T23:46:01.976278Z	  brand: '英飞凌',
2025-09-16T23:46:01.976334Z	  featured: undefined
2025-09-16T23:46:01.976388Z	}
2025-09-16T23:46:01.976451Z	Fetching solutions with query: 
2025-09-16T23:46:01.976509Z	    {
2025-09-16T23:46:01.976565Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.976629Z	        
2025-09-16T23:46:01.976743Z	    _id,
2025-09-16T23:46:01.976843Z	    title,
2025-09-16T23:46:01.97692Z	    "slug": slug.current,
2025-09-16T23:46:01.97724Z	    summary,
2025-09-16T23:46:01.9774Z	    description,
2025-09-16T23:46:01.977544Z	    coverImage,
2025-09-16T23:46:01.977653Z	    primaryBrand->{
2025-09-16T23:46:01.977773Z	      _id,
2025-09-16T23:46:01.977898Z	      name,
2025-09-16T23:46:01.977996Z	      "slug": slug.current,
2025-09-16T23:46:01.978309Z	      logo
2025-09-16T23:46:01.978398Z	    },
2025-09-16T23:46:01.978657Z	    relatedBrands[]->{
2025-09-16T23:46:01.978895Z	      _id,
2025-09-16T23:46:01.979016Z	      name,
2025-09-16T23:46:01.979124Z	      "slug": slug.current,
2025-09-16T23:46:01.979194Z	      logo
2025-09-16T23:46:01.979273Z	    },
2025-09-16T23:46:01.979663Z	    targetMarket,
2025-09-16T23:46:01.979791Z	    complexity,
2025-09-16T23:46:01.980113Z	    publishedAt,
2025-09-16T23:46:01.98032Z	    isPublished,
2025-09-16T23:46:01.980408Z	    isFeatured,
2025-09-16T23:46:01.980513Z	    viewCount,
2025-09-16T23:46:01.980616Z	    _createdAt,
2025-09-16T23:46:01.980734Z	    _updatedAt
2025-09-16T23:46:01.980831Z	  
2025-09-16T23:46:01.980926Z	      },
2025-09-16T23:46:01.981022Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-16T23:46:01.981132Z	    }
2025-09-16T23:46:01.98123Z	  
2025-09-16T23:46:01.981326Z	Query parameters: {
2025-09-16T23:46:01.98142Z	  limit: 4,
2025-09-16T23:46:01.981522Z	  offset: 0,
2025-09-16T23:46:01.981616Z	  targetMarket: undefined,
2025-09-16T23:46:01.981733Z	  brand: '英飞凌',
2025-09-16T23:46:01.98183Z	  featured: undefined
2025-09-16T23:46:01.98192Z	}
2025-09-16T23:46:01.982027Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-16T23:46:01.982122Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:01.982211Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:01.98241Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-16T23:46:01.982543Z	Fetching products with query: 
2025-09-16T23:46:01.982633Z	    {
2025-09-16T23:46:01.982751Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.982858Z	        
2025-09-16T23:46:01.982954Z	    _id,
2025-09-16T23:46:01.983045Z	    _type,
2025-09-16T23:46:01.983207Z	    partNumber,
2025-09-16T23:46:01.983373Z	    "slug": slug.current,
2025-09-16T23:46:01.98354Z	    title,
2025-09-16T23:46:01.983713Z	    shortDescription,
2025-09-16T23:46:01.983879Z	    image,
2025-09-16T23:46:01.98404Z	    brand->{
2025-09-16T23:46:01.984189Z	      name,
2025-09-16T23:46:01.984377Z	      "slug": slug.current,
2025-09-16T23:46:01.984582Z	      logo
2025-09-16T23:46:01.984817Z	    },
2025-09-16T23:46:01.984936Z	    category->{
2025-09-16T23:46:01.985052Z	      name,
2025-09-16T23:46:01.985158Z	      "slug": slug.current
2025-09-16T23:46:01.985274Z	    },
2025-09-16T23:46:01.98536Z	    pricing{
2025-09-16T23:46:01.985504Z	      currency,
2025-09-16T23:46:01.985614Z	      tiers[]{
2025-09-16T23:46:01.985731Z	        quantity,
2025-09-16T23:46:01.985836Z	        price,
2025-09-16T23:46:01.98595Z	        unit
2025-09-16T23:46:01.986049Z	      },
2025-09-16T23:46:01.986185Z	      moq,
2025-09-16T23:46:01.986277Z	      leadTime,
2025-09-16T23:46:01.986336Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.986409Z	      "price": tiers[0].price,
2025-09-16T23:46:01.987476Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.987569Z	    },
2025-09-16T23:46:01.987633Z	    inventory{
2025-09-16T23:46:01.987833Z	      quantity,
2025-09-16T23:46:01.987982Z	      status,
2025-09-16T23:46:01.988057Z	      warehouse,
2025-09-16T23:46:01.988114Z	      lastUpdated,
2025-09-16T23:46:01.988273Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.988441Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.988544Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.988645Z	    },
2025-09-16T23:46:01.98877Z	    isActive,
2025-09-16T23:46:01.988958Z	    isFeatured,
2025-09-16T23:46:01.989052Z	    isNew,
2025-09-16T23:46:01.989141Z	    _createdAt,
2025-09-16T23:46:01.989239Z	    _updatedAt
2025-09-16T23:46:01.989339Z	  
2025-09-16T23:46:01.989447Z	      },
2025-09-16T23:46:01.989544Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-16T23:46:01.989744Z	    }
2025-09-16T23:46:01.98985Z	  
2025-09-16T23:46:01.989951Z	Query parameters: {
2025-09-16T23:46:01.990038Z	  limit: 8,
2025-09-16T23:46:01.990096Z	  offset: 0,
2025-09-16T23:46:01.990149Z	  category: undefined,
2025-09-16T23:46:01.990204Z	  brand: 'lem',
2025-09-16T23:46:01.990272Z	  featured: undefined
2025-09-16T23:46:01.990344Z	}
2025-09-16T23:46:01.990471Z	Fetching solutions with query: 
2025-09-16T23:46:01.990571Z	    {
2025-09-16T23:46:01.990663Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:01.990791Z	        
2025-09-16T23:46:01.990921Z	    _id,
2025-09-16T23:46:01.991016Z	    title,
2025-09-16T23:46:01.991166Z	    "slug": slug.current,
2025-09-16T23:46:01.991268Z	    summary,
2025-09-16T23:46:01.99134Z	    description,
2025-09-16T23:46:01.991399Z	    coverImage,
2025-09-16T23:46:01.991465Z	    primaryBrand->{
2025-09-16T23:46:01.991527Z	      _id,
2025-09-16T23:46:01.991598Z	      name,
2025-09-16T23:46:01.99174Z	      "slug": slug.current,
2025-09-16T23:46:01.99191Z	      logo
2025-09-16T23:46:01.99201Z	    },
2025-09-16T23:46:01.992119Z	    relatedBrands[]->{
2025-09-16T23:46:01.992212Z	      _id,
2025-09-16T23:46:01.992303Z	      name,
2025-09-16T23:46:01.992391Z	      "slug": slug.current,
2025-09-16T23:46:01.992487Z	      logo
2025-09-16T23:46:01.992574Z	    },
2025-09-16T23:46:01.99266Z	    targetMarket,
2025-09-16T23:46:01.992767Z	    complexity,
2025-09-16T23:46:01.992881Z	    publishedAt,
2025-09-16T23:46:01.992967Z	    isPublished,
2025-09-16T23:46:01.993049Z	    isFeatured,
2025-09-16T23:46:01.993135Z	    viewCount,
2025-09-16T23:46:01.993228Z	    _createdAt,
2025-09-16T23:46:01.993315Z	    _updatedAt
2025-09-16T23:46:01.993398Z	  
2025-09-16T23:46:01.993495Z	      },
2025-09-16T23:46:01.993581Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-16T23:46:01.993668Z	    }
2025-09-16T23:46:01.993771Z	  
2025-09-16T23:46:01.993863Z	Query parameters: {
2025-09-16T23:46:01.993948Z	  limit: 4,
2025-09-16T23:46:01.994031Z	  offset: 0,
2025-09-16T23:46:01.994118Z	  targetMarket: undefined,
2025-09-16T23:46:01.994201Z	  brand: 'lem',
2025-09-16T23:46:01.994289Z	  featured: undefined
2025-09-16T23:46:01.994377Z	}
2025-09-16T23:46:01.99448Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-16T23:46:01.994574Z	Fetching products with query: 
2025-09-16T23:46:01.994658Z	    {
2025-09-16T23:46:01.994766Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:01.994855Z	        
2025-09-16T23:46:01.994949Z	    _id,
2025-09-16T23:46:01.995041Z	    _type,
2025-09-16T23:46:01.995135Z	    partNumber,
2025-09-16T23:46:01.995227Z	    "slug": slug.current,
2025-09-16T23:46:01.995324Z	    title,
2025-09-16T23:46:01.995417Z	    shortDescription,
2025-09-16T23:46:01.99552Z	    image,
2025-09-16T23:46:01.995611Z	    brand->{
2025-09-16T23:46:01.995724Z	      name,
2025-09-16T23:46:01.995829Z	      "slug": slug.current,
2025-09-16T23:46:01.995923Z	      logo
2025-09-16T23:46:01.996021Z	    },
2025-09-16T23:46:01.996123Z	    category->{
2025-09-16T23:46:01.996233Z	      name,
2025-09-16T23:46:01.996341Z	      "slug": slug.current
2025-09-16T23:46:01.996457Z	    },
2025-09-16T23:46:01.996556Z	    pricing{
2025-09-16T23:46:01.996653Z	      currency,
2025-09-16T23:46:01.996775Z	      tiers[]{
2025-09-16T23:46:01.996858Z	        quantity,
2025-09-16T23:46:01.996948Z	        price,
2025-09-16T23:46:01.997063Z	        unit
2025-09-16T23:46:01.997161Z	      },
2025-09-16T23:46:01.997253Z	      moq,
2025-09-16T23:46:01.997325Z	      leadTime,
2025-09-16T23:46:01.997399Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:01.997476Z	      "price": tiers[0].price,
2025-09-16T23:46:01.997555Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:01.997639Z	    },
2025-09-16T23:46:01.997741Z	    inventory{
2025-09-16T23:46:01.997847Z	      quantity,
2025-09-16T23:46:01.997915Z	      status,
2025-09-16T23:46:01.997973Z	      warehouse,
2025-09-16T23:46:01.998031Z	      lastUpdated,
2025-09-16T23:46:01.998093Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:01.998163Z	      "inStock": status == "in_stock",
2025-09-16T23:46:01.998249Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:01.998312Z	    },
2025-09-16T23:46:01.998387Z	    isActive,
2025-09-16T23:46:01.998455Z	    isFeatured,
2025-09-16T23:46:01.998538Z	    isNew,
2025-09-16T23:46:01.998645Z	    _createdAt,
2025-09-16T23:46:01.998767Z	    _updatedAt
2025-09-16T23:46:01.998869Z	  
2025-09-16T23:46:01.998936Z	      },
2025-09-16T23:46:01.999019Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-16T23:46:01.999117Z	    }
2025-09-16T23:46:01.999185Z	  
2025-09-16T23:46:01.999284Z	Query parameters: {
2025-09-16T23:46:01.999378Z	  limit: 8,
2025-09-16T23:46:01.999476Z	  offset: 0,
2025-09-16T23:46:01.99956Z	  category: undefined,
2025-09-16T23:46:01.999641Z	  brand: 'lem',
2025-09-16T23:46:01.999744Z	  featured: undefined
2025-09-16T23:46:01.99983Z	}
2025-09-16T23:46:01.999916Z	Fetching solutions with query: 
2025-09-16T23:46:02.000018Z	    {
2025-09-16T23:46:02.00011Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:02.000217Z	        
2025-09-16T23:46:02.000312Z	    _id,
2025-09-16T23:46:02.000401Z	    title,
2025-09-16T23:46:02.0005Z	    "slug": slug.current,
2025-09-16T23:46:02.00059Z	    summary,
2025-09-16T23:46:02.000717Z	    description,
2025-09-16T23:46:02.000815Z	    coverImage,
2025-09-16T23:46:02.000905Z	    primaryBrand->{
2025-09-16T23:46:02.001021Z	      _id,
2025-09-16T23:46:02.001116Z	      name,
2025-09-16T23:46:02.001237Z	      "slug": slug.current,
2025-09-16T23:46:02.001334Z	      logo
2025-09-16T23:46:02.00142Z	    },
2025-09-16T23:46:02.001486Z	    relatedBrands[]->{
2025-09-16T23:46:02.001546Z	      _id,
2025-09-16T23:46:02.0016Z	      name,
2025-09-16T23:46:02.001795Z	      "slug": slug.current,
2025-09-16T23:46:02.001875Z	      logo
2025-09-16T23:46:02.001947Z	    },
2025-09-16T23:46:02.002034Z	    targetMarket,
2025-09-16T23:46:02.002197Z	    complexity,
2025-09-16T23:46:02.002304Z	    publishedAt,
2025-09-16T23:46:02.002418Z	    isPublished,
2025-09-16T23:46:02.002502Z	    isFeatured,
2025-09-16T23:46:02.002638Z	    viewCount,
2025-09-16T23:46:02.002767Z	    _createdAt,
2025-09-16T23:46:02.00286Z	    _updatedAt
2025-09-16T23:46:02.00295Z	  
2025-09-16T23:46:02.003035Z	      },
2025-09-16T23:46:02.003138Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-16T23:46:02.003248Z	    }
2025-09-16T23:46:02.003398Z	  
2025-09-16T23:46:02.003501Z	Query parameters: {
2025-09-16T23:46:02.003652Z	  limit: 4,
2025-09-16T23:46:02.003754Z	  offset: 0,
2025-09-16T23:46:02.003868Z	  targetMarket: undefined,
2025-09-16T23:46:02.003943Z	  brand: 'lem',
2025-09-16T23:46:02.004027Z	  featured: undefined
2025-09-16T23:46:02.004117Z	}
2025-09-16T23:46:02.004228Z	✅ [getBrandData] Found brand: LEM
2025-09-16T23:46:02.004322Z	✅ [getBrandData] Found brand: LEM
2025-09-16T23:46:02.00441Z	Products fetch result: {
2025-09-16T23:46:02.00451Z	  totalProducts: 3,
2025-09-16T23:46:02.004649Z	  fetchedProducts: 3,
2025-09-16T23:46:02.004808Z	  firstProduct: {
2025-09-16T23:46:02.004924Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-16T23:46:02.005025Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-16T23:46:02.005117Z	    _type: 'product',
2025-09-16T23:46:02.005214Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-16T23:46:02.005315Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-16T23:46:02.005411Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-16T23:46:02.00551Z	    image: null,
2025-09-16T23:46:02.005612Z	    inventory: {
2025-09-16T23:46:02.005726Z	      inStock: true,
2025-09-16T23:46:02.005851Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-16T23:46:02.006104Z	      quantity: 0,
2025-09-16T23:46:02.006341Z	      status: 'in_stock',
2025-09-16T23:46:02.006466Z	      warehouse: null
2025-09-16T23:46:02.006566Z	    },
2025-09-16T23:46:02.006886Z	    isActive: true,
2025-09-16T23:46:02.006989Z	    isFeatured: false,
2025-09-16T23:46:02.007099Z	    isNew: false,
2025-09-16T23:46:02.007198Z	    partNumber: 'la55-p',
2025-09-16T23:46:02.007296Z	    pricing: {
2025-09-16T23:46:02.0074Z	      currency: 'CNY',
2025-09-16T23:46:02.007492Z	      leadTime: null,
2025-09-16T23:46:02.007696Z	      moq: null,
2025-09-16T23:46:02.007877Z	      price: null,
2025-09-16T23:46:02.008008Z	      tiers: null
2025-09-16T23:46:02.008129Z	    },
2025-09-16T23:46:02.008236Z	    shortDescription: '电流传感器la55-p',
2025-09-16T23:46:02.008348Z	    slug: 'la55-p',
2025-09-16T23:46:02.008456Z	    title: '电流传感器la55-p'
2025-09-16T23:46:02.008564Z	  }
2025-09-16T23:46:02.008667Z	}
2025-09-16T23:46:02.008781Z	Products fetch result: {
2025-09-16T23:46:02.00889Z	  totalProducts: 3,
2025-09-16T23:46:02.009033Z	  fetchedProducts: 3,
2025-09-16T23:46:02.009152Z	  firstProduct: {
2025-09-16T23:46:02.009261Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-16T23:46:02.009367Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-16T23:46:02.009479Z	    _type: 'product',
2025-09-16T23:46:02.009594Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-16T23:46:02.009725Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-16T23:46:02.009829Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-16T23:46:02.009931Z	    image: null,
2025-09-16T23:46:02.010026Z	    inventory: {
2025-09-16T23:46:02.010133Z	      inStock: true,
2025-09-16T23:46:02.010238Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-16T23:46:02.010336Z	      quantity: 0,
2025-09-16T23:46:02.010428Z	      status: 'in_stock',
2025-09-16T23:46:02.010525Z	      warehouse: null
2025-09-16T23:46:02.010637Z	    },
2025-09-16T23:46:02.010761Z	    isActive: true,
2025-09-16T23:46:02.010867Z	    isFeatured: false,
2025-09-16T23:46:02.010959Z	    isNew: false,
2025-09-16T23:46:02.011044Z	    partNumber: 'la55-p',
2025-09-16T23:46:02.01112Z	    pricing: {
2025-09-16T23:46:02.011227Z	      currency: 'CNY',
2025-09-16T23:46:02.011323Z	      leadTime: null,
2025-09-16T23:46:02.011417Z	      moq: null,
2025-09-16T23:46:02.011486Z	      price: null,
2025-09-16T23:46:02.011567Z	      tiers: null
2025-09-16T23:46:02.011685Z	    },
2025-09-16T23:46:02.011808Z	    shortDescription: '电流传感器la55-p',
2025-09-16T23:46:02.01191Z	    slug: 'la55-p',
2025-09-16T23:46:02.011985Z	    title: '电流传感器la55-p'
2025-09-16T23:46:02.012042Z	  }
2025-09-16T23:46:02.012148Z	}
2025-09-16T23:46:02.012275Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:02.012383Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:02.012479Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:02.012578Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:02.012659Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:02.012762Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:02.012867Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424)
2025-09-16T23:46:02.012945Z	    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-09-16T23:46:02.013014Z	    at runNextTicks (node:internal/process/task_queues:64:3)
2025-09-16T23:46:02.013118Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:46:02.013229Z	    at process.processTimers (node:internal/timers:512:7) {
2025-09-16T23:46:02.013342Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:02.013418Z	}
2025-09-16T23:46:02.013475Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:02.01353Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:02.013586Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:02.013663Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:02.013757Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424)
2025-09-16T23:46:02.013827Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:02.013884Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:02.013939Z	}
2025-09-16T23:46:02.013999Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:02.014056Z	Fetching products with query: 
2025-09-16T23:46:02.014115Z	    {
2025-09-16T23:46:02.01417Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:02.01423Z	        
2025-09-16T23:46:02.014286Z	    _id,
2025-09-16T23:46:02.014343Z	    _type,
2025-09-16T23:46:02.0144Z	    partNumber,
2025-09-16T23:46:02.014454Z	    "slug": slug.current,
2025-09-16T23:46:02.014508Z	    title,
2025-09-16T23:46:02.014563Z	    shortDescription,
2025-09-16T23:46:02.014622Z	    image,
2025-09-16T23:46:02.014696Z	    brand->{
2025-09-16T23:46:02.014785Z	      name,
2025-09-16T23:46:02.014844Z	      "slug": slug.current,
2025-09-16T23:46:02.014911Z	      logo
2025-09-16T23:46:02.014969Z	    },
2025-09-16T23:46:02.015025Z	    category->{
2025-09-16T23:46:02.015083Z	      name,
2025-09-16T23:46:02.01514Z	      "slug": slug.current
2025-09-16T23:46:02.015231Z	    },
2025-09-16T23:46:02.015302Z	    pricing{
2025-09-16T23:46:02.015408Z	      currency,
2025-09-16T23:46:02.015468Z	      tiers[]{
2025-09-16T23:46:02.015532Z	        quantity,
2025-09-16T23:46:02.015589Z	        price,
2025-09-16T23:46:02.015651Z	        unit
2025-09-16T23:46:02.015737Z	      },
2025-09-16T23:46:02.015798Z	      moq,
2025-09-16T23:46:02.015852Z	      leadTime,
2025-09-16T23:46:02.015909Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:02.015966Z	      "price": tiers[0].price,
2025-09-16T23:46:02.016021Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:02.016075Z	    },
2025-09-16T23:46:02.016127Z	    inventory{
2025-09-16T23:46:02.016183Z	      quantity,
2025-09-16T23:46:02.016252Z	      status,
2025-09-16T23:46:02.01631Z	      warehouse,
2025-09-16T23:46:02.016365Z	      lastUpdated,
2025-09-16T23:46:02.016501Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:02.016572Z	      "inStock": status == "in_stock",
2025-09-16T23:46:02.016635Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:02.016723Z	    },
2025-09-16T23:46:02.016785Z	    isActive,
2025-09-16T23:46:02.01684Z	    isFeatured,
2025-09-16T23:46:02.016895Z	    isNew,
2025-09-16T23:46:02.016948Z	    _createdAt,
2025-09-16T23:46:02.017021Z	    _updatedAt
2025-09-16T23:46:02.017081Z	  
2025-09-16T23:46:02.017136Z	      },
2025-09-16T23:46:02.01719Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-16T23:46:02.017245Z	    }
2025-09-16T23:46:02.017298Z	  
2025-09-16T23:46:02.017352Z	Query parameters: {
2025-09-16T23:46:02.017411Z	  limit: 8,
2025-09-16T23:46:02.017464Z	  offset: 0,
2025-09-16T23:46:02.017518Z	  category: undefined,
2025-09-16T23:46:02.017571Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:02.017631Z	  featured: undefined
2025-09-16T23:46:02.01771Z	}
2025-09-16T23:46:02.017773Z	Fetching solutions with query: 
2025-09-16T23:46:02.017826Z	    {
2025-09-16T23:46:02.017886Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:02.017951Z	        
2025-09-16T23:46:02.018005Z	    _id,
2025-09-16T23:46:02.018058Z	    title,
2025-09-16T23:46:02.018113Z	    "slug": slug.current,
2025-09-16T23:46:02.018167Z	    summary,
2025-09-16T23:46:02.018221Z	    description,
2025-09-16T23:46:02.01828Z	    coverImage,
2025-09-16T23:46:02.018334Z	    primaryBrand->{
2025-09-16T23:46:02.01839Z	      _id,
2025-09-16T23:46:02.018444Z	      name,
2025-09-16T23:46:02.018497Z	      "slug": slug.current,
2025-09-16T23:46:02.018549Z	      logo
2025-09-16T23:46:02.018601Z	    },
2025-09-16T23:46:02.018661Z	    relatedBrands[]->{
2025-09-16T23:46:02.018764Z	      _id,
2025-09-16T23:46:02.018829Z	      name,
2025-09-16T23:46:02.018884Z	      "slug": slug.current,
2025-09-16T23:46:02.018938Z	      logo
2025-09-16T23:46:02.018991Z	    },
2025-09-16T23:46:02.019044Z	    targetMarket,
2025-09-16T23:46:02.019097Z	    complexity,
2025-09-16T23:46:02.019151Z	    publishedAt,
2025-09-16T23:46:02.019204Z	    isPublished,
2025-09-16T23:46:02.019273Z	    isFeatured,
2025-09-16T23:46:02.019327Z	    viewCount,
2025-09-16T23:46:02.019385Z	    _createdAt,
2025-09-16T23:46:02.019453Z	    _updatedAt
2025-09-16T23:46:02.01951Z	  
2025-09-16T23:46:02.019568Z	      },
2025-09-16T23:46:02.019629Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-16T23:46:02.019717Z	    }
2025-09-16T23:46:02.019781Z	  
2025-09-16T23:46:02.019836Z	Query parameters: {
2025-09-16T23:46:02.019892Z	  limit: 4,
2025-09-16T23:46:02.019948Z	  offset: 0,
2025-09-16T23:46:02.020034Z	  targetMarket: undefined,
2025-09-16T23:46:02.020121Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:02.020202Z	  featured: undefined
2025-09-16T23:46:02.020291Z	}
2025-09-16T23:46:02.02038Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:02.020477Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:02.020568Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:02.020668Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:02.020774Z	Fetching products with query: 
2025-09-16T23:46:02.020865Z	    {
2025-09-16T23:46:02.020954Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:02.021048Z	        
2025-09-16T23:46:02.021167Z	    _id,
2025-09-16T23:46:02.021393Z	    _type,
2025-09-16T23:46:02.021524Z	    partNumber,
2025-09-16T23:46:02.021611Z	    "slug": slug.current,
2025-09-16T23:46:02.021774Z	    title,
2025-09-16T23:46:02.021874Z	    shortDescription,
2025-09-16T23:46:02.021968Z	    image,
2025-09-16T23:46:02.022069Z	    brand->{
2025-09-16T23:46:02.02216Z	      name,
2025-09-16T23:46:02.022247Z	      "slug": slug.current,
2025-09-16T23:46:02.022358Z	      logo
2025-09-16T23:46:02.022458Z	    },
2025-09-16T23:46:02.022549Z	    category->{
2025-09-16T23:46:02.02266Z	      name,
2025-09-16T23:46:02.022781Z	      "slug": slug.current
2025-09-16T23:46:02.022863Z	    },
2025-09-16T23:46:02.02296Z	    pricing{
2025-09-16T23:46:02.023062Z	      currency,
2025-09-16T23:46:02.023167Z	      tiers[]{
2025-09-16T23:46:02.023267Z	        quantity,
2025-09-16T23:46:02.023365Z	        price,
2025-09-16T23:46:02.023652Z	        unit
2025-09-16T23:46:02.023812Z	      },
2025-09-16T23:46:02.023948Z	      moq,
2025-09-16T23:46:02.024066Z	      leadTime,
2025-09-16T23:46:02.024175Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:02.024274Z	      "price": tiers[0].price,
2025-09-16T23:46:02.024374Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:02.024483Z	    },
2025-09-16T23:46:02.024578Z	    inventory{
2025-09-16T23:46:02.02465Z	      quantity,
2025-09-16T23:46:02.02475Z	      status,
2025-09-16T23:46:02.024849Z	      warehouse,
2025-09-16T23:46:02.024939Z	      lastUpdated,
2025-09-16T23:46:02.025031Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:02.025127Z	      "inStock": status == "in_stock",
2025-09-16T23:46:02.02522Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:02.02533Z	    },
2025-09-16T23:46:02.025409Z	    isActive,
2025-09-16T23:46:02.025467Z	    isFeatured,
2025-09-16T23:46:02.025523Z	    isNew,
2025-09-16T23:46:02.027634Z	    _createdAt,
2025-09-16T23:46:02.02779Z	    _updatedAt
2025-09-16T23:46:02.027861Z	  
2025-09-16T23:46:02.027942Z	      },
2025-09-16T23:46:02.028009Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-16T23:46:02.028066Z	    }
2025-09-16T23:46:02.028123Z	  
2025-09-16T23:46:02.028185Z	Query parameters: {
2025-09-16T23:46:02.028243Z	  limit: 8,
2025-09-16T23:46:02.028297Z	  offset: 0,
2025-09-16T23:46:02.02835Z	  category: undefined,
2025-09-16T23:46:02.028402Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:02.02847Z	  featured: undefined
2025-09-16T23:46:02.028527Z	}
2025-09-16T23:46:02.02858Z	Fetching solutions with query: 
2025-09-16T23:46:02.028634Z	    {
2025-09-16T23:46:02.028753Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:02.028832Z	        
2025-09-16T23:46:02.028889Z	    _id,
2025-09-16T23:46:02.028942Z	    title,
2025-09-16T23:46:02.028995Z	    "slug": slug.current,
2025-09-16T23:46:02.029047Z	    summary,
2025-09-16T23:46:02.029099Z	    description,
2025-09-16T23:46:02.029226Z	    coverImage,
2025-09-16T23:46:02.029763Z	    primaryBrand->{
2025-09-16T23:46:02.02985Z	      _id,
2025-09-16T23:46:02.029907Z	      name,
2025-09-16T23:46:02.029961Z	      "slug": slug.current,
2025-09-16T23:46:02.030014Z	      logo
2025-09-16T23:46:02.030066Z	    },
2025-09-16T23:46:02.030185Z	    relatedBrands[]->{
2025-09-16T23:46:02.030243Z	      _id,
2025-09-16T23:46:02.0303Z	      name,
2025-09-16T23:46:02.030353Z	      "slug": slug.current,
2025-09-16T23:46:02.030406Z	      logo
2025-09-16T23:46:02.030465Z	    },
2025-09-16T23:46:02.03052Z	    targetMarket,
2025-09-16T23:46:02.030573Z	    complexity,
2025-09-16T23:46:02.030625Z	    publishedAt,
2025-09-16T23:46:02.030693Z	    isPublished,
2025-09-16T23:46:02.030764Z	    isFeatured,
2025-09-16T23:46:02.030818Z	    viewCount,
2025-09-16T23:46:02.030873Z	    _createdAt,
2025-09-16T23:46:02.030932Z	    _updatedAt
2025-09-16T23:46:02.030986Z	  
2025-09-16T23:46:02.031039Z	      },
2025-09-16T23:46:02.031092Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-16T23:46:02.031152Z	    }
2025-09-16T23:46:02.031207Z	  
2025-09-16T23:46:02.031259Z	Query parameters: {
2025-09-16T23:46:02.031311Z	  limit: 4,
2025-09-16T23:46:02.031363Z	  offset: 0,
2025-09-16T23:46:02.031415Z	  targetMarket: undefined,
2025-09-16T23:46:02.031479Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:02.031535Z	  featured: undefined
2025-09-16T23:46:02.031587Z	}
2025-09-16T23:46:02.031644Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:02.03175Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:02.031816Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:02.031879Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-16T23:46:02.031941Z	Fetching products with query: 
2025-09-16T23:46:02.031997Z	    {
2025-09-16T23:46:02.03205Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:02.032105Z	        
2025-09-16T23:46:02.032158Z	    _id,
2025-09-16T23:46:02.032214Z	    _type,
2025-09-16T23:46:02.032268Z	    partNumber,
2025-09-16T23:46:02.032321Z	    "slug": slug.current,
2025-09-16T23:46:02.032374Z	    title,
2025-09-16T23:46:02.032427Z	    shortDescription,
2025-09-16T23:46:02.032487Z	    image,
2025-09-16T23:46:02.032542Z	    brand->{
2025-09-16T23:46:02.032599Z	      name,
2025-09-16T23:46:02.032652Z	      "slug": slug.current,
2025-09-16T23:46:02.032765Z	      logo
2025-09-16T23:46:02.032836Z	    },
2025-09-16T23:46:02.032898Z	    category->{
2025-09-16T23:46:02.032954Z	      name,
2025-09-16T23:46:02.033029Z	      "slug": slug.current
2025-09-16T23:46:02.033085Z	    },
2025-09-16T23:46:02.03314Z	    pricing{
2025-09-16T23:46:02.033206Z	      currency,
2025-09-16T23:46:02.033262Z	      tiers[]{
2025-09-16T23:46:02.033323Z	        quantity,
2025-09-16T23:46:02.033382Z	        price,
2025-09-16T23:46:02.03345Z	        unit
2025-09-16T23:46:02.033512Z	      },
2025-09-16T23:46:02.033574Z	      moq,
2025-09-16T23:46:02.033635Z	      leadTime,
2025-09-16T23:46:02.033722Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:02.033794Z	      "price": tiers[0].price,
2025-09-16T23:46:02.03386Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:02.033917Z	    },
2025-09-16T23:46:02.033982Z	    inventory{
2025-09-16T23:46:02.034043Z	      quantity,
2025-09-16T23:46:02.034099Z	      status,
2025-09-16T23:46:02.034156Z	      warehouse,
2025-09-16T23:46:02.034217Z	      lastUpdated,
2025-09-16T23:46:02.034281Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:02.034347Z	      "inStock": status == "in_stock",
2025-09-16T23:46:02.034403Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:02.034468Z	    },
2025-09-16T23:46:02.034532Z	    isActive,
2025-09-16T23:46:02.034587Z	    isFeatured,
2025-09-16T23:46:02.034647Z	    isNew,
2025-09-16T23:46:02.034729Z	    _createdAt,
2025-09-16T23:46:02.034788Z	    _updatedAt
2025-09-16T23:46:02.034844Z	  
2025-09-16T23:46:02.034909Z	      },
2025-09-16T23:46:02.034969Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-16T23:46:02.035043Z	    }
2025-09-16T23:46:02.0351Z	  
2025-09-16T23:46:02.035156Z	Query parameters: {
2025-09-16T23:46:02.035218Z	  limit: 8,
2025-09-16T23:46:02.035277Z	  offset: 0,
2025-09-16T23:46:02.035331Z	  category: undefined,
2025-09-16T23:46:02.035387Z	  brand: 'mediatek',
2025-09-16T23:46:02.035905Z	  featured: undefined
2025-09-16T23:46:02.037889Z	}
2025-09-16T23:46:02.037972Z	Fetching solutions with query: 
2025-09-16T23:46:02.038041Z	    {
2025-09-16T23:46:02.038107Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:02.038178Z	        
2025-09-16T23:46:02.038284Z	    _id,
2025-09-16T23:46:02.038362Z	    title,
2025-09-16T23:46:02.038421Z	    "slug": slug.current,
2025-09-16T23:46:02.038484Z	    summary,
2025-09-16T23:46:02.038547Z	    description,
2025-09-16T23:46:02.038603Z	    coverImage,
2025-09-16T23:46:02.038659Z	    primaryBrand->{
2025-09-16T23:46:02.038746Z	      _id,
2025-09-16T23:46:02.038811Z	      name,
2025-09-16T23:46:02.038867Z	      "slug": slug.current,
2025-09-16T23:46:02.038922Z	      logo
2025-09-16T23:46:02.038982Z	    },
2025-09-16T23:46:02.039044Z	    relatedBrands[]->{
2025-09-16T23:46:02.039105Z	      _id,
2025-09-16T23:46:02.03916Z	      name,
2025-09-16T23:46:02.039234Z	      "slug": slug.current,
2025-09-16T23:46:02.039299Z	      logo
2025-09-16T23:46:02.039355Z	    },
2025-09-16T23:46:02.039412Z	    targetMarket,
2025-09-16T23:46:02.039494Z	    complexity,
2025-09-16T23:46:02.039552Z	    publishedAt,
2025-09-16T23:46:02.039608Z	    isPublished,
2025-09-16T23:46:02.039669Z	    isFeatured,
2025-09-16T23:46:02.039774Z	    viewCount,
2025-09-16T23:46:02.039836Z	    _createdAt,
2025-09-16T23:46:02.039899Z	    _updatedAt
2025-09-16T23:46:02.039964Z	  
2025-09-16T23:46:02.040028Z	      },
2025-09-16T23:46:02.040092Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-16T23:46:02.040153Z	    }
2025-09-16T23:46:02.040208Z	  
2025-09-16T23:46:02.040266Z	Query parameters: {
2025-09-16T23:46:02.040322Z	  limit: 4,
2025-09-16T23:46:02.040377Z	  offset: 0,
2025-09-16T23:46:02.040433Z	  targetMarket: undefined,
2025-09-16T23:46:02.040498Z	  brand: 'mediatek',
2025-09-16T23:46:02.040552Z	  featured: undefined
2025-09-16T23:46:02.040616Z	}
2025-09-16T23:46:02.040689Z	✅ [getBrandData] Found brand: MediaTek
2025-09-16T23:46:02.04077Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:02.040879Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:02.380084Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-16T23:46:02.380386Z	Fetching products with query: 
2025-09-16T23:46:02.380522Z	    {
2025-09-16T23:46:02.380632Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:02.380795Z	        
2025-09-16T23:46:02.380905Z	    _id,
2025-09-16T23:46:02.381006Z	    _type,
2025-09-16T23:46:02.381111Z	    partNumber,
2025-09-16T23:46:02.381205Z	    "slug": slug.current,
2025-09-16T23:46:02.381299Z	    title,
2025-09-16T23:46:02.381394Z	    shortDescription,
2025-09-16T23:46:02.381489Z	    image,
2025-09-16T23:46:02.381585Z	    brand->{
2025-09-16T23:46:02.381702Z	      name,
2025-09-16T23:46:02.381813Z	      "slug": slug.current,
2025-09-16T23:46:02.381913Z	      logo
2025-09-16T23:46:02.382006Z	    },
2025-09-16T23:46:02.382102Z	    category->{
2025-09-16T23:46:02.382195Z	      name,
2025-09-16T23:46:02.382293Z	      "slug": slug.current
2025-09-16T23:46:02.382386Z	    },
2025-09-16T23:46:02.382494Z	    pricing{
2025-09-16T23:46:02.382603Z	      currency,
2025-09-16T23:46:02.382738Z	      tiers[]{
2025-09-16T23:46:02.384167Z	        quantity,
2025-09-16T23:46:02.386285Z	        price,
2025-09-16T23:46:02.386745Z	        unit
2025-09-16T23:46:02.387093Z	      },
2025-09-16T23:46:02.387482Z	      moq,
2025-09-16T23:46:02.388046Z	      leadTime,
2025-09-16T23:46:02.390556Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:02.390765Z	      "price": tiers[0].price,
2025-09-16T23:46:02.390894Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:02.391013Z	    },
2025-09-16T23:46:02.391133Z	    inventory{
2025-09-16T23:46:02.391239Z	      quantity,
2025-09-16T23:46:02.391341Z	      status,
2025-09-16T23:46:02.391438Z	      warehouse,
2025-09-16T23:46:02.391537Z	      lastUpdated,
2025-09-16T23:46:02.391643Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:02.391808Z	      "inStock": status == "in_stock",
2025-09-16T23:46:02.391914Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:02.392013Z	    },
2025-09-16T23:46:02.392113Z	    isActive,
2025-09-16T23:46:02.392229Z	    isFeatured,
2025-09-16T23:46:02.392346Z	    isNew,
2025-09-16T23:46:02.392462Z	    _createdAt,
2025-09-16T23:46:02.392575Z	    _updatedAt
2025-09-16T23:46:02.392705Z	  
2025-09-16T23:46:02.392821Z	      },
2025-09-16T23:46:02.39293Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-16T23:46:02.393055Z	    }
2025-09-16T23:46:02.393166Z	  
2025-09-16T23:46:02.393272Z	Query parameters: {
2025-09-16T23:46:02.393384Z	  limit: 8,
2025-09-16T23:46:02.393515Z	  offset: 0,
2025-09-16T23:46:02.393621Z	  category: undefined,
2025-09-16T23:46:02.39376Z	  brand: 'mediatek',
2025-09-16T23:46:02.393874Z	  featured: undefined
2025-09-16T23:46:02.393972Z	}
2025-09-16T23:46:02.394074Z	Fetching solutions with query: 
2025-09-16T23:46:02.39418Z	    {
2025-09-16T23:46:02.394281Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:02.394388Z	        
2025-09-16T23:46:02.394499Z	    _id,
2025-09-16T23:46:02.394602Z	    title,
2025-09-16T23:46:02.394733Z	    "slug": slug.current,
2025-09-16T23:46:02.394856Z	    summary,
2025-09-16T23:46:02.394962Z	    description,
2025-09-16T23:46:02.39507Z	    coverImage,
2025-09-16T23:46:02.39518Z	    primaryBrand->{
2025-09-16T23:46:02.395288Z	      _id,
2025-09-16T23:46:02.395394Z	      name,
2025-09-16T23:46:02.395501Z	      "slug": slug.current,
2025-09-16T23:46:02.404696Z	      logo
2025-09-16T23:46:02.404919Z	    },
2025-09-16T23:46:02.405044Z	    relatedBrands[]->{
2025-09-16T23:46:02.405148Z	      _id,
2025-09-16T23:46:02.405253Z	      name,
2025-09-16T23:46:02.405359Z	      "slug": slug.current,
2025-09-16T23:46:02.405473Z	      logo
2025-09-16T23:46:02.405614Z	    },
2025-09-16T23:46:02.405734Z	    targetMarket,
2025-09-16T23:46:02.405826Z	    complexity,
2025-09-16T23:46:02.405915Z	    publishedAt,
2025-09-16T23:46:02.406006Z	    isPublished,
2025-09-16T23:46:02.406104Z	    isFeatured,
2025-09-16T23:46:02.40621Z	    viewCount,
2025-09-16T23:46:02.406299Z	    _createdAt,
2025-09-16T23:46:02.406415Z	    _updatedAt
2025-09-16T23:46:02.40653Z	  
2025-09-16T23:46:02.406633Z	      },
2025-09-16T23:46:02.406828Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-16T23:46:02.406936Z	    }
2025-09-16T23:46:02.407032Z	  
2025-09-16T23:46:02.40713Z	Query parameters: {
2025-09-16T23:46:02.407246Z	  limit: 4,
2025-09-16T23:46:02.407354Z	  offset: 0,
2025-09-16T23:46:02.407474Z	  targetMarket: undefined,
2025-09-16T23:46:02.407575Z	  brand: 'mediatek',
2025-09-16T23:46:02.407696Z	  featured: undefined
2025-09-16T23:46:02.407815Z	}
2025-09-16T23:46:02.407916Z	✅ [getBrandData] Found brand: MediaTek
2025-09-16T23:46:02.408021Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:02.408124Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:02.414649Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-16T23:46:02.414948Z	Fetching products with query: 
2025-09-16T23:46:02.415075Z	    {
2025-09-16T23:46:02.417267Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:02.417433Z	        
2025-09-16T23:46:02.417545Z	    _id,
2025-09-16T23:46:02.417634Z	    _type,
2025-09-16T23:46:02.417741Z	    partNumber,
2025-09-16T23:46:02.417834Z	    "slug": slug.current,
2025-09-16T23:46:02.417929Z	    title,
2025-09-16T23:46:02.418014Z	    shortDescription,
2025-09-16T23:46:02.418093Z	    image,
2025-09-16T23:46:02.418172Z	    brand->{
2025-09-16T23:46:02.418251Z	      name,
2025-09-16T23:46:02.418346Z	      "slug": slug.current,
2025-09-16T23:46:02.418468Z	      logo
2025-09-16T23:46:02.418569Z	    },
2025-09-16T23:46:02.418812Z	    category->{
2025-09-16T23:46:02.418937Z	      name,
2025-09-16T23:46:02.419053Z	      "slug": slug.current
2025-09-16T23:46:02.419188Z	    },
2025-09-16T23:46:02.419332Z	    pricing{
2025-09-16T23:46:02.419432Z	      currency,
2025-09-16T23:46:02.41951Z	      tiers[]{
2025-09-16T23:46:02.419586Z	        quantity,
2025-09-16T23:46:02.419684Z	        price,
2025-09-16T23:46:02.41978Z	        unit
2025-09-16T23:46:02.420216Z	      },
2025-09-16T23:46:02.420388Z	      moq,
2025-09-16T23:46:02.420509Z	      leadTime,
2025-09-16T23:46:02.42417Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:02.424344Z	      "price": tiers[0].price,
2025-09-16T23:46:02.424472Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:02.424569Z	    },
2025-09-16T23:46:02.424659Z	    inventory{
2025-09-16T23:46:02.424784Z	      quantity,
2025-09-16T23:46:02.424878Z	      status,
2025-09-16T23:46:02.424972Z	      warehouse,
2025-09-16T23:46:02.425067Z	      lastUpdated,
2025-09-16T23:46:02.42516Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:02.425255Z	      "inStock": status == "in_stock",
2025-09-16T23:46:02.425348Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:02.425437Z	    },
2025-09-16T23:46:02.425536Z	    isActive,
2025-09-16T23:46:02.425621Z	    isFeatured,
2025-09-16T23:46:02.425739Z	    isNew,
2025-09-16T23:46:02.425845Z	    _createdAt,
2025-09-16T23:46:02.425944Z	    _updatedAt
2025-09-16T23:46:02.426041Z	  
2025-09-16T23:46:02.426139Z	      },
2025-09-16T23:46:02.426238Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-16T23:46:02.426349Z	    }
2025-09-16T23:46:02.426451Z	  
2025-09-16T23:46:02.426605Z	Query parameters: {
2025-09-16T23:46:02.426731Z	  limit: 8,
2025-09-16T23:46:02.426822Z	  offset: 0,
2025-09-16T23:46:02.42691Z	  category: undefined,
2025-09-16T23:46:02.427002Z	  brand: 'ncc',
2025-09-16T23:46:02.427094Z	  featured: undefined
2025-09-16T23:46:02.427204Z	}
2025-09-16T23:46:02.427323Z	Fetching solutions with query: 
2025-09-16T23:46:02.427499Z	    {
2025-09-16T23:46:02.427712Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:02.427858Z	        
2025-09-16T23:46:02.42796Z	    _id,
2025-09-16T23:46:02.428059Z	    title,
2025-09-16T23:46:02.428155Z	    "slug": slug.current,
2025-09-16T23:46:02.42825Z	    summary,
2025-09-16T23:46:02.42839Z	    description,
2025-09-16T23:46:02.428697Z	    coverImage,
2025-09-16T23:46:02.428906Z	    primaryBrand->{
2025-09-16T23:46:02.429369Z	      _id,
2025-09-16T23:46:02.429539Z	      name,
2025-09-16T23:46:02.429751Z	      "slug": slug.current,
2025-09-16T23:46:02.429875Z	      logo
2025-09-16T23:46:02.429974Z	    },
2025-09-16T23:46:02.430068Z	    relatedBrands[]->{
2025-09-16T23:46:02.430328Z	      _id,
2025-09-16T23:46:02.430456Z	      name,
2025-09-16T23:46:02.430552Z	      "slug": slug.current,
2025-09-16T23:46:02.430879Z	      logo
2025-09-16T23:46:02.430993Z	    },
2025-09-16T23:46:02.431105Z	    targetMarket,
2025-09-16T23:46:02.431213Z	    complexity,
2025-09-16T23:46:02.431321Z	    publishedAt,
2025-09-16T23:46:02.43144Z	    isPublished,
2025-09-16T23:46:02.431551Z	    isFeatured,
2025-09-16T23:46:02.431659Z	    viewCount,
2025-09-16T23:46:02.431795Z	    _createdAt,
2025-09-16T23:46:02.431901Z	    _updatedAt
2025-09-16T23:46:02.432003Z	  
2025-09-16T23:46:02.432103Z	      },
2025-09-16T23:46:02.432202Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-16T23:46:02.432303Z	    }
2025-09-16T23:46:02.432953Z	  
2025-09-16T23:46:02.433091Z	Query parameters: {
2025-09-16T23:46:02.433393Z	  limit: 4,
2025-09-16T23:46:02.433563Z	  offset: 0,
2025-09-16T23:46:02.433787Z	  targetMarket: undefined,
2025-09-16T23:46:02.433917Z	  brand: 'ncc',
2025-09-16T23:46:02.434062Z	  featured: undefined
2025-09-16T23:46:02.434251Z	}
2025-09-16T23:46:02.434469Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-16T23:46:02.434596Z	Fetching products with query: 
2025-09-16T23:46:02.434891Z	    {
2025-09-16T23:46:02.435066Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:02.435193Z	        
2025-09-16T23:46:02.435309Z	    _id,
2025-09-16T23:46:02.435409Z	    _type,
2025-09-16T23:46:02.435522Z	    partNumber,
2025-09-16T23:46:02.435625Z	    "slug": slug.current,
2025-09-16T23:46:02.435749Z	    title,
2025-09-16T23:46:02.435847Z	    shortDescription,
2025-09-16T23:46:02.435942Z	    image,
2025-09-16T23:46:02.436037Z	    brand->{
2025-09-16T23:46:02.436131Z	      name,
2025-09-16T23:46:02.436247Z	      "slug": slug.current,
2025-09-16T23:46:02.436355Z	      logo
2025-09-16T23:46:02.436458Z	    },
2025-09-16T23:46:02.436564Z	    category->{
2025-09-16T23:46:02.436664Z	      name,
2025-09-16T23:46:02.436828Z	      "slug": slug.current
2025-09-16T23:46:02.436947Z	    },
2025-09-16T23:46:02.437054Z	    pricing{
2025-09-16T23:46:02.437159Z	      currency,
2025-09-16T23:46:02.437264Z	      tiers[]{
2025-09-16T23:46:02.43737Z	        quantity,
2025-09-16T23:46:02.437477Z	        price,
2025-09-16T23:46:02.437587Z	        unit
2025-09-16T23:46:02.43777Z	      },
2025-09-16T23:46:02.437887Z	      moq,
2025-09-16T23:46:02.437989Z	      leadTime,
2025-09-16T23:46:02.438089Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:02.438197Z	      "price": tiers[0].price,
2025-09-16T23:46:02.438292Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:02.438389Z	    },
2025-09-16T23:46:02.438483Z	    inventory{
2025-09-16T23:46:02.438575Z	      quantity,
2025-09-16T23:46:02.438688Z	      status,
2025-09-16T23:46:02.438803Z	      warehouse,
2025-09-16T23:46:02.438899Z	      lastUpdated,
2025-09-16T23:46:02.438997Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:02.439096Z	      "inStock": status == "in_stock",
2025-09-16T23:46:02.43918Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:02.439283Z	    },
2025-09-16T23:46:02.439365Z	    isActive,
2025-09-16T23:46:02.43945Z	    isFeatured,
2025-09-16T23:46:02.439544Z	    isNew,
2025-09-16T23:46:02.439631Z	    _createdAt,
2025-09-16T23:46:02.439741Z	    _updatedAt
2025-09-16T23:46:02.439832Z	  
2025-09-16T23:46:02.439925Z	      },
2025-09-16T23:46:02.440017Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-16T23:46:02.44012Z	    }
2025-09-16T23:46:02.440209Z	  
2025-09-16T23:46:02.440302Z	Query parameters: {
2025-09-16T23:46:02.440393Z	  limit: 8,
2025-09-16T23:46:02.440484Z	  offset: 0,
2025-09-16T23:46:02.440571Z	  category: undefined,
2025-09-16T23:46:02.440659Z	  brand: 'ncc',
2025-09-16T23:46:02.44109Z	  featured: undefined
2025-09-16T23:46:02.441204Z	}
2025-09-16T23:46:02.441296Z	Fetching solutions with query: 
2025-09-16T23:46:02.441387Z	    {
2025-09-16T23:46:02.441483Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:02.442343Z	        
2025-09-16T23:46:02.442932Z	    _id,
2025-09-16T23:46:02.444791Z	    title,
2025-09-16T23:46:02.445222Z	    "slug": slug.current,
2025-09-16T23:46:02.445499Z	    summary,
2025-09-16T23:46:02.445632Z	    description,
2025-09-16T23:46:02.448539Z	    coverImage,
2025-09-16T23:46:02.448819Z	    primaryBrand->{
2025-09-16T23:46:02.449108Z	      _id,
2025-09-16T23:46:02.449275Z	      name,
2025-09-16T23:46:02.449404Z	      "slug": slug.current,
2025-09-16T23:46:02.449557Z	      logo
2025-09-16T23:46:02.449724Z	    },
2025-09-16T23:46:02.449873Z	    relatedBrands[]->{
2025-09-16T23:46:02.449995Z	      _id,
2025-09-16T23:46:02.45014Z	      name,
2025-09-16T23:46:02.450278Z	      "slug": slug.current,
2025-09-16T23:46:02.450401Z	      logo
2025-09-16T23:46:02.450547Z	    },
2025-09-16T23:46:02.450712Z	    targetMarket,
2025-09-16T23:46:02.450863Z	    complexity,
2025-09-16T23:46:02.451009Z	    publishedAt,
2025-09-16T23:46:02.451126Z	    isPublished,
2025-09-16T23:46:02.451259Z	    isFeatured,
2025-09-16T23:46:02.451373Z	    viewCount,
2025-09-16T23:46:02.45149Z	    _createdAt,
2025-09-16T23:46:02.451604Z	    _updatedAt
2025-09-16T23:46:02.451727Z	  
2025-09-16T23:46:02.451847Z	      },
2025-09-16T23:46:02.45195Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-16T23:46:02.452048Z	    }
2025-09-16T23:46:02.452152Z	  
2025-09-16T23:46:02.452279Z	Query parameters: {
2025-09-16T23:46:02.452376Z	  limit: 4,
2025-09-16T23:46:02.452466Z	  offset: 0,
2025-09-16T23:46:02.452554Z	  targetMarket: undefined,
2025-09-16T23:46:02.45264Z	  brand: 'ncc',
2025-09-16T23:46:02.452752Z	  featured: undefined
2025-09-16T23:46:02.45284Z	}
2025-09-16T23:46:02.453795Z	✅ [getBrandData] Found brand: ncc
2025-09-16T23:46:02.454037Z	✅ [getBrandData] Found brand: ncc
2025-09-16T23:46:02.454202Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:02.454364Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:02.455944Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:02.456084Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:02.456194Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-16T23:46:02.456401Z	Fetching products with query: 
2025-09-16T23:46:02.456593Z	    {
2025-09-16T23:46:02.456782Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:02.456955Z	        
2025-09-16T23:46:02.457114Z	    _id,
2025-09-16T23:46:02.45727Z	    _type,
2025-09-16T23:46:02.457465Z	    partNumber,
2025-09-16T23:46:02.457583Z	    "slug": slug.current,
2025-09-16T23:46:02.457723Z	    title,
2025-09-16T23:46:02.457862Z	    shortDescription,
2025-09-16T23:46:02.457972Z	    image,
2025-09-16T23:46:02.458079Z	    brand->{
2025-09-16T23:46:02.458183Z	      name,
2025-09-16T23:46:02.458315Z	      "slug": slug.current,
2025-09-16T23:46:02.46808Z	      logo
2025-09-16T23:46:02.468285Z	    },
2025-09-16T23:46:02.468402Z	    category->{
2025-09-16T23:46:02.46851Z	      name,
2025-09-16T23:46:02.468615Z	      "slug": slug.current
2025-09-16T23:46:02.46876Z	    },
2025-09-16T23:46:02.468861Z	    pricing{
2025-09-16T23:46:02.468952Z	      currency,
2025-09-16T23:46:02.469045Z	      tiers[]{
2025-09-16T23:46:02.469136Z	        quantity,
2025-09-16T23:46:02.469231Z	        price,
2025-09-16T23:46:02.469323Z	        unit
2025-09-16T23:46:02.46941Z	      },
2025-09-16T23:46:02.469499Z	      moq,
2025-09-16T23:46:02.469591Z	      leadTime,
2025-09-16T23:46:02.469722Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:02.469842Z	      "price": tiers[0].price,
2025-09-16T23:46:02.469944Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:02.470064Z	    },
2025-09-16T23:46:02.47016Z	    inventory{
2025-09-16T23:46:02.47028Z	      quantity,
2025-09-16T23:46:02.470383Z	      status,
2025-09-16T23:46:02.470475Z	      warehouse,
2025-09-16T23:46:02.47057Z	      lastUpdated,
2025-09-16T23:46:02.47066Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:02.470811Z	      "inStock": status == "in_stock",
2025-09-16T23:46:02.47091Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:02.471003Z	    },
2025-09-16T23:46:02.471101Z	    isActive,
2025-09-16T23:46:02.471194Z	    isFeatured,
2025-09-16T23:46:02.471286Z	    isNew,
2025-09-16T23:46:02.471375Z	    _createdAt,
2025-09-16T23:46:02.471469Z	    _updatedAt
2025-09-16T23:46:02.471563Z	  
2025-09-16T23:46:02.471664Z	      },
2025-09-16T23:46:02.471785Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-16T23:46:02.471901Z	    }
2025-09-16T23:46:02.471992Z	  
2025-09-16T23:46:02.472078Z	Query parameters: {
2025-09-16T23:46:02.472165Z	  limit: 8,
2025-09-16T23:46:02.472254Z	  offset: 0,
2025-09-16T23:46:02.47234Z	  category: undefined,
2025-09-16T23:46:02.472431Z	  brand: 'ixys',
2025-09-16T23:46:02.472522Z	  featured: undefined
2025-09-16T23:46:02.472612Z	}
2025-09-16T23:46:02.472732Z	Fetching solutions with query: 
2025-09-16T23:46:02.472836Z	    {
2025-09-16T23:46:02.472936Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:02.473047Z	        
2025-09-16T23:46:02.473142Z	    _id,
2025-09-16T23:46:02.473239Z	    title,
2025-09-16T23:46:02.473332Z	    "slug": slug.current,
2025-09-16T23:46:02.473429Z	    summary,
2025-09-16T23:46:02.473534Z	    description,
2025-09-16T23:46:02.473631Z	    coverImage,
2025-09-16T23:46:02.473796Z	    primaryBrand->{
2025-09-16T23:46:02.473899Z	      _id,
2025-09-16T23:46:02.473996Z	      name,
2025-09-16T23:46:02.474092Z	      "slug": slug.current,
2025-09-16T23:46:02.474191Z	      logo
2025-09-16T23:46:02.474288Z	    },
2025-09-16T23:46:02.474383Z	    relatedBrands[]->{
2025-09-16T23:46:02.474482Z	      _id,
2025-09-16T23:46:02.474575Z	      name,
2025-09-16T23:46:02.474685Z	      "slug": slug.current,
2025-09-16T23:46:02.474811Z	      logo
2025-09-16T23:46:02.474919Z	    },
2025-09-16T23:46:02.475004Z	    targetMarket,
2025-09-16T23:46:02.475084Z	    complexity,
2025-09-16T23:46:02.475174Z	    publishedAt,
2025-09-16T23:46:02.529944Z	    isPublished,
2025-09-16T23:46:02.530181Z	    isFeatured,
2025-09-16T23:46:02.530296Z	    viewCount,
2025-09-16T23:46:02.530438Z	    _createdAt,
2025-09-16T23:46:02.530547Z	    _updatedAt
2025-09-16T23:46:02.530649Z	  
2025-09-16T23:46:02.530771Z	      },
2025-09-16T23:46:02.530864Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-16T23:46:02.53097Z	    }
2025-09-16T23:46:02.531069Z	  
2025-09-16T23:46:02.531172Z	Query parameters: {
2025-09-16T23:46:02.531257Z	  limit: 4,
2025-09-16T23:46:02.531338Z	  offset: 0,
2025-09-16T23:46:02.531438Z	  targetMarket: undefined,
2025-09-16T23:46:02.531527Z	  brand: 'ixys',
2025-09-16T23:46:02.531618Z	  featured: undefined
2025-09-16T23:46:02.531735Z	}
2025-09-16T23:46:02.532257Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-16T23:46:02.532437Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-16T23:46:02.532572Z	Fetching products with query: 
2025-09-16T23:46:02.532727Z	    {
2025-09-16T23:46:02.532864Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:02.53298Z	        
2025-09-16T23:46:02.533083Z	    _id,
2025-09-16T23:46:02.533181Z	    _type,
2025-09-16T23:46:02.533279Z	    partNumber,
2025-09-16T23:46:02.533375Z	    "slug": slug.current,
2025-09-16T23:46:02.533476Z	    title,
2025-09-16T23:46:02.533572Z	    shortDescription,
2025-09-16T23:46:02.533698Z	    image,
2025-09-16T23:46:02.53381Z	    brand->{
2025-09-16T23:46:02.533982Z	      name,
2025-09-16T23:46:02.534213Z	      "slug": slug.current,
2025-09-16T23:46:02.534383Z	      logo
2025-09-16T23:46:02.534546Z	    },
2025-09-16T23:46:02.534725Z	    category->{
2025-09-16T23:46:02.534902Z	      name,
2025-09-16T23:46:02.535061Z	      "slug": slug.current
2025-09-16T23:46:02.535229Z	    },
2025-09-16T23:46:02.535384Z	    pricing{
2025-09-16T23:46:02.535531Z	      currency,
2025-09-16T23:46:02.535695Z	      tiers[]{
2025-09-16T23:46:02.535886Z	        quantity,
2025-09-16T23:46:02.536566Z	        price,
2025-09-16T23:46:02.536815Z	        unit
2025-09-16T23:46:02.536953Z	      },
2025-09-16T23:46:02.53707Z	      moq,
2025-09-16T23:46:02.537174Z	      leadTime,
2025-09-16T23:46:02.537275Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:02.537381Z	      "price": tiers[0].price,
2025-09-16T23:46:02.537482Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:02.53758Z	    },
2025-09-16T23:46:02.537717Z	    inventory{
2025-09-16T23:46:02.537828Z	      quantity,
2025-09-16T23:46:02.537927Z	      status,
2025-09-16T23:46:02.538032Z	      warehouse,
2025-09-16T23:46:02.538126Z	      lastUpdated,
2025-09-16T23:46:02.538219Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:02.538319Z	      "inStock": status == "in_stock",
2025-09-16T23:46:02.538414Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:02.538527Z	    },
2025-09-16T23:46:02.538639Z	    isActive,
2025-09-16T23:46:02.538779Z	    isFeatured,
2025-09-16T23:46:02.538886Z	    isNew,
2025-09-16T23:46:02.538997Z	    _createdAt,
2025-09-16T23:46:02.539102Z	    _updatedAt
2025-09-16T23:46:02.539206Z	  
2025-09-16T23:46:02.539356Z	      },
2025-09-16T23:46:02.539468Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-16T23:46:02.539585Z	    }
2025-09-16T23:46:02.539733Z	  
2025-09-16T23:46:02.539845Z	Query parameters: {
2025-09-16T23:46:02.539957Z	  limit: 8,
2025-09-16T23:46:02.540056Z	  offset: 0,
2025-09-16T23:46:02.540157Z	  category: undefined,
2025-09-16T23:46:02.54026Z	  brand: 'lem',
2025-09-16T23:46:02.540365Z	  featured: undefined
2025-09-16T23:46:02.54047Z	}
2025-09-16T23:46:02.540574Z	Fetching solutions with query: 
2025-09-16T23:46:02.540713Z	    {
2025-09-16T23:46:02.540833Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:02.540946Z	        
2025-09-16T23:46:02.541059Z	    _id,
2025-09-16T23:46:02.545521Z	    title,
2025-09-16T23:46:02.545706Z	    "slug": slug.current,
2025-09-16T23:46:02.545821Z	    summary,
2025-09-16T23:46:02.545917Z	    description,
2025-09-16T23:46:02.546005Z	    coverImage,
2025-09-16T23:46:02.546094Z	    primaryBrand->{
2025-09-16T23:46:02.546191Z	      _id,
2025-09-16T23:46:02.546269Z	      name,
2025-09-16T23:46:02.546929Z	      "slug": slug.current,
2025-09-16T23:46:02.547083Z	      logo
2025-09-16T23:46:02.547194Z	    },
2025-09-16T23:46:02.547302Z	    relatedBrands[]->{
2025-09-16T23:46:02.547884Z	      _id,
2025-09-16T23:46:02.548072Z	      name,
2025-09-16T23:46:02.548281Z	      "slug": slug.current,
2025-09-16T23:46:02.548446Z	      logo
2025-09-16T23:46:02.548582Z	    },
2025-09-16T23:46:02.548781Z	    targetMarket,
2025-09-16T23:46:02.550078Z	    complexity,
2025-09-16T23:46:02.550373Z	    publishedAt,
2025-09-16T23:46:02.5505Z	    isPublished,
2025-09-16T23:46:02.550594Z	    isFeatured,
2025-09-16T23:46:02.550713Z	    viewCount,
2025-09-16T23:46:02.550828Z	    _createdAt,
2025-09-16T23:46:02.550925Z	    _updatedAt
2025-09-16T23:46:02.551239Z	  
2025-09-16T23:46:02.551366Z	      },
2025-09-16T23:46:02.55147Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-16T23:46:02.551595Z	    }
2025-09-16T23:46:02.551718Z	  
2025-09-16T23:46:02.551815Z	Query parameters: {
2025-09-16T23:46:02.55384Z	  limit: 4,
2025-09-16T23:46:02.554857Z	  offset: 0,
2025-09-16T23:46:02.554977Z	  targetMarket: undefined,
2025-09-16T23:46:02.555081Z	  brand: 'lem',
2025-09-16T23:46:02.555581Z	  featured: undefined
2025-09-16T23:46:02.555783Z	}
2025-09-16T23:46:02.555897Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-16T23:46:02.566912Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-16T23:46:02.567224Z	Fetching products with query: 
2025-09-16T23:46:02.567387Z	    {
2025-09-16T23:46:02.567554Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:02.567665Z	        
2025-09-16T23:46:02.567784Z	    _id,
2025-09-16T23:46:02.567882Z	    _type,
2025-09-16T23:46:02.567976Z	    partNumber,
2025-09-16T23:46:02.568095Z	    "slug": slug.current,
2025-09-16T23:46:02.56819Z	    title,
2025-09-16T23:46:02.568282Z	    shortDescription,
2025-09-16T23:46:02.568392Z	    image,
2025-09-16T23:46:02.56849Z	    brand->{
2025-09-16T23:46:02.56858Z	      name,
2025-09-16T23:46:02.568686Z	      "slug": slug.current,
2025-09-16T23:46:02.568785Z	      logo
2025-09-16T23:46:02.568873Z	    },
2025-09-16T23:46:02.568963Z	    category->{
2025-09-16T23:46:02.569045Z	      name,
2025-09-16T23:46:02.569197Z	      "slug": slug.current
2025-09-16T23:46:02.569405Z	    },
2025-09-16T23:46:02.56956Z	    pricing{
2025-09-16T23:46:02.570113Z	      currency,
2025-09-16T23:46:02.570274Z	      tiers[]{
2025-09-16T23:46:02.570401Z	        quantity,
2025-09-16T23:46:02.570623Z	        price,
2025-09-16T23:46:02.570795Z	        unit
2025-09-16T23:46:02.570955Z	      },
2025-09-16T23:46:02.571101Z	      moq,
2025-09-16T23:46:02.571245Z	      leadTime,
2025-09-16T23:46:02.571446Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:02.571649Z	      "price": tiers[0].price,
2025-09-16T23:46:02.571837Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:02.571992Z	    },
2025-09-16T23:46:02.572135Z	    inventory{
2025-09-16T23:46:02.572301Z	      quantity,
2025-09-16T23:46:02.572463Z	      status,
2025-09-16T23:46:02.572637Z	      warehouse,
2025-09-16T23:46:02.572827Z	      lastUpdated,
2025-09-16T23:46:02.573117Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:02.573283Z	      "inStock": status == "in_stock",
2025-09-16T23:46:02.573384Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:02.573472Z	    },
2025-09-16T23:46:02.573558Z	    isActive,
2025-09-16T23:46:02.573655Z	    isFeatured,
2025-09-16T23:46:02.573762Z	    isNew,
2025-09-16T23:46:02.632024Z	    _createdAt,
2025-09-16T23:46:02.632918Z	    _updatedAt
2025-09-16T23:46:02.633215Z	  
2025-09-16T23:46:02.633532Z	      },
2025-09-16T23:46:02.636491Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-16T23:46:02.636818Z	    }
2025-09-16T23:46:02.640159Z	  
2025-09-16T23:46:02.641459Z	Query parameters: {
2025-09-16T23:46:02.64175Z	  limit: 8,
2025-09-16T23:46:02.641972Z	  offset: 0,
2025-09-16T23:46:02.64235Z	  category: undefined,
2025-09-16T23:46:02.642877Z	  brand: 'semikron',
2025-09-16T23:46:02.648659Z	  featured: undefined
2025-09-16T23:46:02.65062Z	}
2025-09-16T23:46:02.650845Z	Fetching solutions with query: 
2025-09-16T23:46:02.650977Z	    {
2025-09-16T23:46:02.651098Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:02.651212Z	        
2025-09-16T23:46:02.651322Z	    _id,
2025-09-16T23:46:02.651427Z	    title,
2025-09-16T23:46:02.651541Z	    "slug": slug.current,
2025-09-16T23:46:02.651656Z	    summary,
2025-09-16T23:46:02.651785Z	    description,
2025-09-16T23:46:02.651891Z	    coverImage,
2025-09-16T23:46:02.651994Z	    primaryBrand->{
2025-09-16T23:46:02.652096Z	      _id,
2025-09-16T23:46:02.654419Z	      name,
2025-09-16T23:46:02.654669Z	      "slug": slug.current,
2025-09-16T23:46:02.654881Z	      logo
2025-09-16T23:46:02.655054Z	    },
2025-09-16T23:46:02.65522Z	    relatedBrands[]->{
2025-09-16T23:46:02.65539Z	      _id,
2025-09-16T23:46:02.655611Z	      name,
2025-09-16T23:46:02.655969Z	      "slug": slug.current,
2025-09-16T23:46:02.656168Z	      logo
2025-09-16T23:46:02.656344Z	    },
2025-09-16T23:46:02.656515Z	    targetMarket,
2025-09-16T23:46:02.656703Z	    complexity,
2025-09-16T23:46:02.656971Z	    publishedAt,
2025-09-16T23:46:02.65714Z	    isPublished,
2025-09-16T23:46:02.65731Z	    isFeatured,
2025-09-16T23:46:02.657528Z	    viewCount,
2025-09-16T23:46:02.65781Z	    _createdAt,
2025-09-16T23:46:02.657953Z	    _updatedAt
2025-09-16T23:46:02.658058Z	  
2025-09-16T23:46:02.658155Z	      },
2025-09-16T23:46:02.658253Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-16T23:46:02.658352Z	    }
2025-09-16T23:46:02.658443Z	  
2025-09-16T23:46:02.658535Z	Query parameters: {
2025-09-16T23:46:02.658633Z	  limit: 4,
2025-09-16T23:46:02.658756Z	  offset: 0,
2025-09-16T23:46:02.658855Z	  targetMarket: undefined,
2025-09-16T23:46:02.658952Z	  brand: 'semikron',
2025-09-16T23:46:02.659064Z	  featured: undefined
2025-09-16T23:46:02.659159Z	}
2025-09-16T23:46:02.660336Z	✅ [getBrandData] Found brand: Semikron
2025-09-16T23:46:02.660507Z	Products fetch result: {
2025-09-16T23:46:02.660627Z	  totalProducts: 1,
2025-09-16T23:46:02.66076Z	  fetchedProducts: 1,
2025-09-16T23:46:02.660868Z	  firstProduct: {
2025-09-16T23:46:02.66097Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-16T23:46:02.661069Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-16T23:46:02.662943Z	    _type: 'product',
2025-09-16T23:46:02.663078Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-16T23:46:02.663196Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-16T23:46:02.663305Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:02.663419Z	    image: null,
2025-09-16T23:46:02.663551Z	    inventory: {
2025-09-16T23:46:02.663667Z	      inStock: true,
2025-09-16T23:46:02.663822Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-16T23:46:02.66394Z	      quantity: 0,
2025-09-16T23:46:02.664046Z	      status: 'in_stock',
2025-09-16T23:46:02.664161Z	      warehouse: null
2025-09-16T23:46:02.66427Z	    },
2025-09-16T23:46:02.665118Z	    isActive: true,
2025-09-16T23:46:02.665277Z	    isFeatured: false,
2025-09-16T23:46:02.665404Z	    isNew: false,
2025-09-16T23:46:02.665503Z	    partNumber: 'SKKT106/16E',
2025-09-16T23:46:02.665594Z	    pricing: {
2025-09-16T23:46:02.665701Z	      currency: 'CNY',
2025-09-16T23:46:02.665797Z	      leadTime: null,
2025-09-16T23:46:02.665887Z	      moq: null,
2025-09-16T23:46:02.665975Z	      price: null,
2025-09-16T23:46:02.666062Z	      tiers: null
2025-09-16T23:46:02.666144Z	    },
2025-09-16T23:46:02.666226Z	    shortDescription: 'SKKT106/16E',
2025-09-16T23:46:02.666307Z	    slug: 'SKKT106/16E',
2025-09-16T23:46:02.667402Z	    title: 'SKKT106/16E'
2025-09-16T23:46:02.668637Z	  }
2025-09-16T23:46:02.672894Z	}
2025-09-16T23:46:02.673078Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:02.673186Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-16T23:46:02.673872Z	Fetching products with query: 
2025-09-16T23:46:02.673963Z	    {
2025-09-16T23:46:02.674024Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:02.674103Z	        
2025-09-16T23:46:02.67416Z	    _id,
2025-09-16T23:46:02.674216Z	    _type,
2025-09-16T23:46:02.67427Z	    partNumber,
2025-09-16T23:46:02.674329Z	    "slug": slug.current,
2025-09-16T23:46:02.674385Z	    title,
2025-09-16T23:46:02.674439Z	    shortDescription,
2025-09-16T23:46:02.674496Z	    image,
2025-09-16T23:46:02.674549Z	    brand->{
2025-09-16T23:46:02.674602Z	      name,
2025-09-16T23:46:02.674654Z	      "slug": slug.current,
2025-09-16T23:46:02.674762Z	      logo
2025-09-16T23:46:02.67482Z	    },
2025-09-16T23:46:02.674874Z	    category->{
2025-09-16T23:46:02.674928Z	      name,
2025-09-16T23:46:02.674985Z	      "slug": slug.current
2025-09-16T23:46:02.675041Z	    },
2025-09-16T23:46:02.675095Z	    pricing{
2025-09-16T23:46:02.675146Z	      currency,
2025-09-16T23:46:02.675207Z	      tiers[]{
2025-09-16T23:46:02.675261Z	        quantity,
2025-09-16T23:46:02.675314Z	        price,
2025-09-16T23:46:02.675365Z	        unit
2025-09-16T23:46:02.675417Z	      },
2025-09-16T23:46:02.675477Z	      moq,
2025-09-16T23:46:02.675533Z	      leadTime,
2025-09-16T23:46:02.675586Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:02.675649Z	      "price": tiers[0].price,
2025-09-16T23:46:02.67574Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:02.675801Z	    },
2025-09-16T23:46:02.675855Z	    inventory{
2025-09-16T23:46:02.67591Z	      quantity,
2025-09-16T23:46:02.675964Z	      status,
2025-09-16T23:46:02.676017Z	      warehouse,
2025-09-16T23:46:02.676078Z	      lastUpdated,
2025-09-16T23:46:02.676134Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:02.67619Z	      "inStock": status == "in_stock",
2025-09-16T23:46:02.676245Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:02.676298Z	    },
2025-09-16T23:46:02.67635Z	    isActive,
2025-09-16T23:46:02.676404Z	    isFeatured,
2025-09-16T23:46:02.676459Z	    isNew,
2025-09-16T23:46:02.676518Z	    _createdAt,
2025-09-16T23:46:02.676573Z	    _updatedAt
2025-09-16T23:46:02.676648Z	  
2025-09-16T23:46:02.676738Z	      },
2025-09-16T23:46:02.676801Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-16T23:46:02.676876Z	    }
2025-09-16T23:46:02.676934Z	  
2025-09-16T23:46:02.676992Z	Query parameters: {
2025-09-16T23:46:02.677048Z	  limit: 8,
2025-09-16T23:46:02.677104Z	  offset: 0,
2025-09-16T23:46:02.677158Z	  category: undefined,
2025-09-16T23:46:02.677215Z	  brand: 'semikron',
2025-09-16T23:46:02.677272Z	  featured: undefined
2025-09-16T23:46:02.677328Z	}
2025-09-16T23:46:02.677401Z	Fetching solutions with query: 
2025-09-16T23:46:02.677463Z	    {
2025-09-16T23:46:02.677521Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:02.677581Z	        
2025-09-16T23:46:02.677636Z	    _id,
2025-09-16T23:46:02.677723Z	    title,
2025-09-16T23:46:02.677785Z	    "slug": slug.current,
2025-09-16T23:46:02.677841Z	    summary,
2025-09-16T23:46:02.677904Z	    description,
2025-09-16T23:46:02.67796Z	    coverImage,
2025-09-16T23:46:02.678014Z	    primaryBrand->{
2025-09-16T23:46:02.678073Z	      _id,
2025-09-16T23:46:02.67813Z	      name,
2025-09-16T23:46:02.678186Z	      "slug": slug.current,
2025-09-16T23:46:02.678246Z	      logo
2025-09-16T23:46:02.678302Z	    },
2025-09-16T23:46:02.678355Z	    relatedBrands[]->{
2025-09-16T23:46:02.678415Z	      _id,
2025-09-16T23:46:02.678473Z	      name,
2025-09-16T23:46:02.678527Z	      "slug": slug.current,
2025-09-16T23:46:02.67858Z	      logo
2025-09-16T23:46:02.678633Z	    },
2025-09-16T23:46:02.680728Z	    targetMarket,
2025-09-16T23:46:02.680911Z	    complexity,
2025-09-16T23:46:02.681045Z	    publishedAt,
2025-09-16T23:46:02.681167Z	    isPublished,
2025-09-16T23:46:02.68128Z	    isFeatured,
2025-09-16T23:46:02.681401Z	    viewCount,
2025-09-16T23:46:02.681517Z	    _createdAt,
2025-09-16T23:46:02.681647Z	    _updatedAt
2025-09-16T23:46:02.724628Z	  
2025-09-16T23:46:02.724826Z	      },
2025-09-16T23:46:02.724979Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-16T23:46:02.726088Z	    }
2025-09-16T23:46:02.726379Z	  
2025-09-16T23:46:02.726496Z	Query parameters: {
2025-09-16T23:46:02.726607Z	  limit: 4,
2025-09-16T23:46:02.726743Z	  offset: 0,
2025-09-16T23:46:02.726986Z	  targetMarket: undefined,
2025-09-16T23:46:02.727129Z	  brand: 'semikron',
2025-09-16T23:46:02.728036Z	  featured: undefined
2025-09-16T23:46:02.728184Z	}
2025-09-16T23:46:02.728303Z	✅ [getBrandData] Found brand: Semikron
2025-09-16T23:46:02.728414Z	Products fetch result: {
2025-09-16T23:46:02.728535Z	  totalProducts: 1,
2025-09-16T23:46:02.728637Z	  fetchedProducts: 1,
2025-09-16T23:46:02.728805Z	  firstProduct: {
2025-09-16T23:46:02.729151Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-16T23:46:02.729301Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-16T23:46:02.72941Z	    _type: 'product',
2025-09-16T23:46:02.729569Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-16T23:46:02.729808Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-16T23:46:02.730041Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:02.730469Z	    image: null,
2025-09-16T23:46:02.730654Z	    inventory: {
2025-09-16T23:46:02.730913Z	      inStock: true,
2025-09-16T23:46:02.737939Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-16T23:46:02.738202Z	      quantity: 0,
2025-09-16T23:46:02.738353Z	      status: 'in_stock',
2025-09-16T23:46:02.738479Z	      warehouse: null
2025-09-16T23:46:02.738597Z	    },
2025-09-16T23:46:02.738744Z	    isActive: true,
2025-09-16T23:46:02.739959Z	    isFeatured: false,
2025-09-16T23:46:02.74043Z	    isNew: false,
2025-09-16T23:46:02.740793Z	    partNumber: 'SKKT106/16E',
2025-09-16T23:46:02.741053Z	    pricing: {
2025-09-16T23:46:02.741182Z	      currency: 'CNY',
2025-09-16T23:46:02.741299Z	      leadTime: null,
2025-09-16T23:46:02.741425Z	      moq: null,
2025-09-16T23:46:02.741541Z	      price: null,
2025-09-16T23:46:02.741663Z	      tiers: null
2025-09-16T23:46:02.741819Z	    },
2025-09-16T23:46:02.741934Z	    shortDescription: 'SKKT106/16E',
2025-09-16T23:46:02.742038Z	    slug: 'SKKT106/16E',
2025-09-16T23:46:02.742143Z	    title: 'SKKT106/16E'
2025-09-16T23:46:02.742236Z	  }
2025-09-16T23:46:02.742323Z	}
2025-09-16T23:46:02.742412Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:02.74251Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:46:02.742613Z	Fetching products with query: 
2025-09-16T23:46:02.742742Z	    {
2025-09-16T23:46:02.742853Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:02.742963Z	        
2025-09-16T23:46:02.743072Z	    _id,
2025-09-16T23:46:02.743168Z	    _type,
2025-09-16T23:46:02.743261Z	    partNumber,
2025-09-16T23:46:02.743363Z	    "slug": slug.current,
2025-09-16T23:46:02.743467Z	    title,
2025-09-16T23:46:02.743571Z	    shortDescription,
2025-09-16T23:46:02.743714Z	    image,
2025-09-16T23:46:02.743834Z	    brand->{
2025-09-16T23:46:02.743948Z	      name,
2025-09-16T23:46:02.744054Z	      "slug": slug.current,
2025-09-16T23:46:02.744167Z	      logo
2025-09-16T23:46:02.744283Z	    },
2025-09-16T23:46:02.744401Z	    category->{
2025-09-16T23:46:02.74451Z	      name,
2025-09-16T23:46:02.744616Z	      "slug": slug.current
2025-09-16T23:46:02.74475Z	    },
2025-09-16T23:46:02.744863Z	    pricing{
2025-09-16T23:46:02.744972Z	      currency,
2025-09-16T23:46:02.745079Z	      tiers[]{
2025-09-16T23:46:02.745184Z	        quantity,
2025-09-16T23:46:02.7453Z	        price,
2025-09-16T23:46:02.745404Z	        unit
2025-09-16T23:46:02.745506Z	      },
2025-09-16T23:46:02.745602Z	      moq,
2025-09-16T23:46:02.745728Z	      leadTime,
2025-09-16T23:46:02.745836Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:02.745955Z	      "price": tiers[0].price,
2025-09-16T23:46:02.746083Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:02.746191Z	    },
2025-09-16T23:46:02.746296Z	    inventory{
2025-09-16T23:46:02.746423Z	      quantity,
2025-09-16T23:46:02.746654Z	      status,
2025-09-16T23:46:02.746799Z	      warehouse,
2025-09-16T23:46:02.746917Z	      lastUpdated,
2025-09-16T23:46:02.747109Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:02.747243Z	      "inStock": status == "in_stock",
2025-09-16T23:46:02.747354Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:02.748187Z	    },
2025-09-16T23:46:02.748405Z	    isActive,
2025-09-16T23:46:02.748942Z	    isFeatured,
2025-09-16T23:46:02.749379Z	    isNew,
2025-09-16T23:46:02.74983Z	    _createdAt,
2025-09-16T23:46:02.751783Z	    _updatedAt
2025-09-16T23:46:02.752771Z	  
2025-09-16T23:46:02.753698Z	      },
2025-09-16T23:46:02.753861Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:46:02.754064Z	    }
2025-09-16T23:46:02.75435Z	  
2025-09-16T23:46:02.754659Z	Query parameters: {
2025-09-16T23:46:02.754819Z	  limit: 8,
2025-09-16T23:46:02.755006Z	  offset: 0,
2025-09-16T23:46:02.755146Z	  category: undefined,
2025-09-16T23:46:02.755274Z	  brand: 'cree',
2025-09-16T23:46:02.756828Z	  featured: undefined
2025-09-16T23:46:02.757068Z	}
2025-09-16T23:46:02.757309Z	Fetching solutions with query: 
2025-09-16T23:46:02.757476Z	    {
2025-09-16T23:46:02.757599Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:02.757727Z	        
2025-09-16T23:46:02.757831Z	    _id,
2025-09-16T23:46:02.75795Z	    title,
2025-09-16T23:46:02.758062Z	    "slug": slug.current,
2025-09-16T23:46:02.758212Z	    summary,
2025-09-16T23:46:02.758357Z	    description,
2025-09-16T23:46:02.758471Z	    coverImage,
2025-09-16T23:46:02.75857Z	    primaryBrand->{
2025-09-16T23:46:02.758691Z	      _id,
2025-09-16T23:46:02.758842Z	      name,
2025-09-16T23:46:02.759031Z	      "slug": slug.current,
2025-09-16T23:46:02.759169Z	      logo
2025-09-16T23:46:02.75934Z	    },
2025-09-16T23:46:02.759519Z	    relatedBrands[]->{
2025-09-16T23:46:02.759645Z	      _id,
2025-09-16T23:46:02.75983Z	      name,
2025-09-16T23:46:02.759987Z	      "slug": slug.current,
2025-09-16T23:46:02.760104Z	      logo
2025-09-16T23:46:02.760227Z	    },
2025-09-16T23:46:02.760367Z	    targetMarket,
2025-09-16T23:46:02.760661Z	    complexity,
2025-09-16T23:46:02.766095Z	    publishedAt,
2025-09-16T23:46:02.766259Z	    isPublished,
2025-09-16T23:46:02.766647Z	    isFeatured,
2025-09-16T23:46:02.766849Z	    viewCount,
2025-09-16T23:46:02.766967Z	    _createdAt,
2025-09-16T23:46:02.767086Z	    _updatedAt
2025-09-16T23:46:02.767193Z	  
2025-09-16T23:46:02.767651Z	      },
2025-09-16T23:46:02.767791Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:46:02.768594Z	    }
2025-09-16T23:46:02.768769Z	  
2025-09-16T23:46:02.768879Z	Query parameters: {
2025-09-16T23:46:02.768974Z	  limit: 4,
2025-09-16T23:46:02.769073Z	  offset: 0,
2025-09-16T23:46:02.769172Z	  targetMarket: undefined,
2025-09-16T23:46:02.769282Z	  brand: 'cree',
2025-09-16T23:46:02.76939Z	  featured: undefined
2025-09-16T23:46:02.769495Z	}
2025-09-16T23:46:02.769599Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:46:02.769747Z	Products fetch result: {
2025-09-16T23:46:02.769858Z	  totalProducts: 4,
2025-09-16T23:46:02.769962Z	  fetchedProducts: 4,
2025-09-16T23:46:02.770064Z	  firstProduct: {
2025-09-16T23:46:02.770163Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:46:02.770259Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:46:02.770361Z	    _type: 'product',
2025-09-16T23:46:02.770466Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:46:02.770568Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:46:02.77071Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:02.771504Z	    image: null,
2025-09-16T23:46:02.771713Z	    inventory: {
2025-09-16T23:46:02.771878Z	      inStock: true,
2025-09-16T23:46:02.772038Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:46:02.772193Z	      quantity: 0,
2025-09-16T23:46:02.772349Z	      status: 'in_stock',
2025-09-16T23:46:02.772519Z	      warehouse: null
2025-09-16T23:46:02.773262Z	    },
2025-09-16T23:46:02.773471Z	    isActive: true,
2025-09-16T23:46:02.773908Z	    isFeatured: false,
2025-09-16T23:46:02.774196Z	    isNew: false,
2025-09-16T23:46:02.774944Z	    partNumber: '11111',
2025-09-16T23:46:02.775089Z	    pricing: {
2025-09-16T23:46:02.775202Z	      currency: 'CNY',
2025-09-16T23:46:02.775301Z	      leadTime: null,
2025-09-16T23:46:02.77541Z	      moq: null,
2025-09-16T23:46:02.77589Z	      price: null,
2025-09-16T23:46:02.776252Z	      tiers: null
2025-09-16T23:46:02.776394Z	    },
2025-09-16T23:46:02.776508Z	    shortDescription: '11111',
2025-09-16T23:46:02.776615Z	    slug: 'sic mosfet',
2025-09-16T23:46:02.776757Z	    title: '111111'
2025-09-16T23:46:02.776891Z	  }
2025-09-16T23:46:02.777011Z	}
2025-09-16T23:46:02.777122Z	Solutions fetch result: {
2025-09-16T23:46:02.777912Z	  totalSolutions: 6,
2025-09-16T23:46:02.778067Z	  fetchedSolutions: 4,
2025-09-16T23:46:02.77818Z	  firstSolution: {
2025-09-16T23:46:02.778295Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:46:02.778422Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:46:02.778845Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:46:02.779011Z	    complexity: 'medium',
2025-09-16T23:46:02.779134Z	    coverImage: null,
2025-09-16T23:46:02.779257Z	    description: [ [Object] ],
2025-09-16T23:46:02.779383Z	    isFeatured: false,
2025-09-16T23:46:02.779489Z	    isPublished: true,
2025-09-16T23:46:02.779586Z	    primaryBrand: {
2025-09-16T23:46:02.779698Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:46:02.779813Z	      logo: null,
2025-09-16T23:46:02.779921Z	      name: 'CREE',
2025-09-16T23:46:02.780029Z	      slug: 'cree'
2025-09-16T23:46:02.780134Z	    },
2025-09-16T23:46:02.780238Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:46:02.780345Z	    relatedBrands: null,
2025-09-16T23:46:02.780464Z	    slug: '11111',
2025-09-16T23:46:02.78056Z	    summary: '11111',
2025-09-16T23:46:02.780661Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:02.780782Z	    title: '11111',
2025-09-16T23:46:02.780884Z	    viewCount: 0
2025-09-16T23:46:02.780983Z	  }
2025-09-16T23:46:02.781081Z	}
2025-09-16T23:46:02.781179Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:46:02.781296Z	Fetching products with query: 
2025-09-16T23:46:02.781401Z	    {
2025-09-16T23:46:02.781495Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:02.781591Z	        
2025-09-16T23:46:02.781706Z	    _id,
2025-09-16T23:46:02.781803Z	    _type,
2025-09-16T23:46:02.781897Z	    partNumber,
2025-09-16T23:46:02.781986Z	    "slug": slug.current,
2025-09-16T23:46:02.782073Z	    title,
2025-09-16T23:46:02.782157Z	    shortDescription,
2025-09-16T23:46:02.782242Z	    image,
2025-09-16T23:46:02.782331Z	    brand->{
2025-09-16T23:46:02.782438Z	      name,
2025-09-16T23:46:02.78254Z	      "slug": slug.current,
2025-09-16T23:46:02.782643Z	      logo
2025-09-16T23:46:02.782759Z	    },
2025-09-16T23:46:02.782853Z	    category->{
2025-09-16T23:46:02.783525Z	      name,
2025-09-16T23:46:02.783667Z	      "slug": slug.current
2025-09-16T23:46:02.783789Z	    },
2025-09-16T23:46:02.783886Z	    pricing{
2025-09-16T23:46:02.783979Z	      currency,
2025-09-16T23:46:02.784081Z	      tiers[]{
2025-09-16T23:46:02.784173Z	        quantity,
2025-09-16T23:46:02.784268Z	        price,
2025-09-16T23:46:02.784397Z	        unit
2025-09-16T23:46:02.784505Z	      },
2025-09-16T23:46:02.784629Z	      moq,
2025-09-16T23:46:02.784741Z	      leadTime,
2025-09-16T23:46:02.785265Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:02.785521Z	      "price": tiers[0].price,
2025-09-16T23:46:02.785724Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:02.785874Z	    },
2025-09-16T23:46:02.786004Z	    inventory{
2025-09-16T23:46:02.786085Z	      quantity,
2025-09-16T23:46:02.786152Z	      status,
2025-09-16T23:46:02.786215Z	      warehouse,
2025-09-16T23:46:02.786272Z	      lastUpdated,
2025-09-16T23:46:02.786359Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:02.786488Z	      "inStock": status == "in_stock",
2025-09-16T23:46:02.786592Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:02.786741Z	    },
2025-09-16T23:46:02.787085Z	    isActive,
2025-09-16T23:46:02.787352Z	    isFeatured,
2025-09-16T23:46:02.787527Z	    isNew,
2025-09-16T23:46:02.787649Z	    _createdAt,
2025-09-16T23:46:02.787773Z	    _updatedAt
2025-09-16T23:46:02.787883Z	  
2025-09-16T23:46:02.788037Z	      },
2025-09-16T23:46:02.788146Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:46:02.788276Z	    }
2025-09-16T23:46:02.788376Z	  
2025-09-16T23:46:02.788483Z	Query parameters: {
2025-09-16T23:46:02.788633Z	  limit: 8,
2025-09-16T23:46:02.78877Z	  offset: 0,
2025-09-16T23:46:02.788851Z	  category: undefined,
2025-09-16T23:46:02.78891Z	  brand: 'cree',
2025-09-16T23:46:02.788966Z	  featured: undefined
2025-09-16T23:46:02.78903Z	}
2025-09-16T23:46:02.789085Z	Fetching solutions with query: 
2025-09-16T23:46:02.789139Z	    {
2025-09-16T23:46:02.801733Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:02.80205Z	        
2025-09-16T23:46:02.802169Z	    _id,
2025-09-16T23:46:02.802274Z	    title,
2025-09-16T23:46:02.802388Z	    "slug": slug.current,
2025-09-16T23:46:02.814972Z	    summary,
2025-09-16T23:46:02.823936Z	    description,
2025-09-16T23:46:02.824105Z	    coverImage,
2025-09-16T23:46:02.824214Z	    primaryBrand->{
2025-09-16T23:46:02.824312Z	      _id,
2025-09-16T23:46:02.82442Z	      name,
2025-09-16T23:46:02.824983Z	      "slug": slug.current,
2025-09-16T23:46:02.825249Z	      logo
2025-09-16T23:46:02.825366Z	    },
2025-09-16T23:46:02.825482Z	    relatedBrands[]->{
2025-09-16T23:46:02.82742Z	      _id,
2025-09-16T23:46:02.827645Z	      name,
2025-09-16T23:46:02.827916Z	      "slug": slug.current,
2025-09-16T23:46:02.82812Z	      logo
2025-09-16T23:46:02.828318Z	    },
2025-09-16T23:46:02.828442Z	    targetMarket,
2025-09-16T23:46:02.828548Z	    complexity,
2025-09-16T23:46:02.830146Z	    publishedAt,
2025-09-16T23:46:02.830314Z	    isPublished,
2025-09-16T23:46:02.830459Z	    isFeatured,
2025-09-16T23:46:02.830832Z	    viewCount,
2025-09-16T23:46:02.831038Z	    _createdAt,
2025-09-16T23:46:02.831332Z	    _updatedAt
2025-09-16T23:46:02.831567Z	  
2025-09-16T23:46:02.831753Z	      },
2025-09-16T23:46:02.831948Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:46:02.832285Z	    }
2025-09-16T23:46:02.832464Z	  
2025-09-16T23:46:02.832659Z	Query parameters: {
2025-09-16T23:46:02.832841Z	  limit: 4,
2025-09-16T23:46:02.832948Z	  offset: 0,
2025-09-16T23:46:02.833046Z	  targetMarket: undefined,
2025-09-16T23:46:02.833147Z	  brand: 'cree',
2025-09-16T23:46:02.833241Z	  featured: undefined
2025-09-16T23:46:02.833412Z	}
2025-09-16T23:46:02.833554Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-16T23:46:02.834353Z	Fetching products with query: 
2025-09-16T23:46:02.834575Z	    {
2025-09-16T23:46:02.834712Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:02.834869Z	        
2025-09-16T23:46:02.835016Z	    _id,
2025-09-16T23:46:02.835147Z	    _type,
2025-09-16T23:46:02.835264Z	    partNumber,
2025-09-16T23:46:02.835442Z	    "slug": slug.current,
2025-09-16T23:46:02.835576Z	    title,
2025-09-16T23:46:02.835747Z	    shortDescription,
2025-09-16T23:46:02.835891Z	    image,
2025-09-16T23:46:02.836118Z	    brand->{
2025-09-16T23:46:02.836253Z	      name,
2025-09-16T23:46:02.836428Z	      "slug": slug.current,
2025-09-16T23:46:02.836559Z	      logo
2025-09-16T23:46:02.836892Z	    },
2025-09-16T23:46:02.837195Z	    category->{
2025-09-16T23:46:02.837541Z	      name,
2025-09-16T23:46:02.83774Z	      "slug": slug.current
2025-09-16T23:46:02.837915Z	    },
2025-09-16T23:46:02.838148Z	    pricing{
2025-09-16T23:46:02.841482Z	      currency,
2025-09-16T23:46:02.841638Z	      tiers[]{
2025-09-16T23:46:02.841784Z	        quantity,
2025-09-16T23:46:02.842269Z	        price,
2025-09-16T23:46:02.842752Z	        unit
2025-09-16T23:46:02.842954Z	      },
2025-09-16T23:46:02.843125Z	      moq,
2025-09-16T23:46:02.843334Z	      leadTime,
2025-09-16T23:46:02.843471Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:02.843548Z	      "price": tiers[0].price,
2025-09-16T23:46:02.843613Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:02.84367Z	    },
2025-09-16T23:46:02.847926Z	    inventory{
2025-09-16T23:46:02.848042Z	      quantity,
2025-09-16T23:46:02.84815Z	      status,
2025-09-16T23:46:02.84825Z	      warehouse,
2025-09-16T23:46:02.848332Z	      lastUpdated,
2025-09-16T23:46:02.852695Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:02.85292Z	      "inStock": status == "in_stock",
2025-09-16T23:46:02.853038Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:02.853127Z	    },
2025-09-16T23:46:02.853213Z	    isActive,
2025-09-16T23:46:02.853272Z	    isFeatured,
2025-09-16T23:46:02.85335Z	    isNew,
2025-09-16T23:46:02.853417Z	    _createdAt,
2025-09-16T23:46:02.853473Z	    _updatedAt
2025-09-16T23:46:02.853526Z	  
2025-09-16T23:46:02.853579Z	      },
2025-09-16T23:46:02.853639Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-16T23:46:02.85372Z	    }
2025-09-16T23:46:02.85378Z	  
2025-09-16T23:46:02.853836Z	Query parameters: {
2025-09-16T23:46:02.853891Z	  limit: 8,
2025-09-16T23:46:02.853944Z	  offset: 0,
2025-09-16T23:46:02.853998Z	  category: undefined,
2025-09-16T23:46:02.854052Z	  brand: 'epcos',
2025-09-16T23:46:02.854104Z	  featured: undefined
2025-09-16T23:46:02.854158Z	}
2025-09-16T23:46:02.85421Z	Fetching solutions with query: 
2025-09-16T23:46:02.854262Z	    {
2025-09-16T23:46:02.85432Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:02.854396Z	        
2025-09-16T23:46:02.854452Z	    _id,
2025-09-16T23:46:02.854506Z	    title,
2025-09-16T23:46:02.854558Z	    "slug": slug.current,
2025-09-16T23:46:02.854614Z	    summary,
2025-09-16T23:46:02.854668Z	    description,
2025-09-16T23:46:02.854735Z	    coverImage,
2025-09-16T23:46:02.854788Z	    primaryBrand->{
2025-09-16T23:46:02.854842Z	      _id,
2025-09-16T23:46:02.854894Z	      name,
2025-09-16T23:46:02.854946Z	      "slug": slug.current,
2025-09-16T23:46:02.855202Z	      logo
2025-09-16T23:46:02.855342Z	    },
2025-09-16T23:46:02.855439Z	    relatedBrands[]->{
2025-09-16T23:46:02.855528Z	      _id,
2025-09-16T23:46:02.855636Z	      name,
2025-09-16T23:46:02.855811Z	      "slug": slug.current,
2025-09-16T23:46:02.855937Z	      logo
2025-09-16T23:46:02.856238Z	    },
2025-09-16T23:46:02.856359Z	    targetMarket,
2025-09-16T23:46:02.856461Z	    complexity,
2025-09-16T23:46:02.856567Z	    publishedAt,
2025-09-16T23:46:02.856824Z	    isPublished,
2025-09-16T23:46:02.857086Z	    isFeatured,
2025-09-16T23:46:02.857243Z	    viewCount,
2025-09-16T23:46:02.857411Z	    _createdAt,
2025-09-16T23:46:02.857609Z	    _updatedAt
2025-09-16T23:46:02.857842Z	  
2025-09-16T23:46:02.85796Z	      },
2025-09-16T23:46:02.858072Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-16T23:46:02.858177Z	    }
2025-09-16T23:46:02.85828Z	  
2025-09-16T23:46:02.858388Z	Query parameters: {
2025-09-16T23:46:02.858523Z	  limit: 4,
2025-09-16T23:46:02.858617Z	  offset: 0,
2025-09-16T23:46:02.858741Z	  targetMarket: undefined,
2025-09-16T23:46:02.858932Z	  brand: 'epcos',
2025-09-16T23:46:02.859377Z	  featured: undefined
2025-09-16T23:46:02.859896Z	}
2025-09-16T23:46:02.860406Z	✅ [getBrandData] Found brand: Epcos
2025-09-16T23:46:02.860671Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:02.864971Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:02.865653Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-16T23:46:02.865857Z	Fetching products with query: 
2025-09-16T23:46:02.86602Z	    {
2025-09-16T23:46:02.866151Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:02.866294Z	        
2025-09-16T23:46:02.866415Z	    _id,
2025-09-16T23:46:02.866537Z	    _type,
2025-09-16T23:46:02.86665Z	    partNumber,
2025-09-16T23:46:02.866784Z	    "slug": slug.current,
2025-09-16T23:46:02.866889Z	    title,
2025-09-16T23:46:02.866992Z	    shortDescription,
2025-09-16T23:46:02.867093Z	    image,
2025-09-16T23:46:02.867203Z	    brand->{
2025-09-16T23:46:02.867307Z	      name,
2025-09-16T23:46:02.867418Z	      "slug": slug.current,
2025-09-16T23:46:02.867525Z	      logo
2025-09-16T23:46:02.867639Z	    },
2025-09-16T23:46:02.867782Z	    category->{
2025-09-16T23:46:02.867898Z	      name,
2025-09-16T23:46:02.868004Z	      "slug": slug.current
2025-09-16T23:46:02.868158Z	    },
2025-09-16T23:46:02.868549Z	    pricing{
2025-09-16T23:46:02.868814Z	      currency,
2025-09-16T23:46:02.86915Z	      tiers[]{
2025-09-16T23:46:02.872897Z	        quantity,
2025-09-16T23:46:02.873037Z	        price,
2025-09-16T23:46:02.873161Z	        unit
2025-09-16T23:46:02.873269Z	      },
2025-09-16T23:46:02.873399Z	      moq,
2025-09-16T23:46:02.873506Z	      leadTime,
2025-09-16T23:46:02.873599Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:02.873733Z	      "price": tiers[0].price,
2025-09-16T23:46:02.873845Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:02.873937Z	    },
2025-09-16T23:46:02.874016Z	    inventory{
2025-09-16T23:46:02.874108Z	      quantity,
2025-09-16T23:46:02.874206Z	      status,
2025-09-16T23:46:02.874306Z	      warehouse,
2025-09-16T23:46:02.874421Z	      lastUpdated,
2025-09-16T23:46:02.874531Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:02.874637Z	      "inStock": status == "in_stock",
2025-09-16T23:46:02.874785Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:02.87489Z	    },
2025-09-16T23:46:02.874989Z	    isActive,
2025-09-16T23:46:02.875071Z	    isFeatured,
2025-09-16T23:46:02.875169Z	    isNew,
2025-09-16T23:46:02.875269Z	    _createdAt,
2025-09-16T23:46:02.875378Z	    _updatedAt
2025-09-16T23:46:02.87548Z	  
2025-09-16T23:46:02.875578Z	      },
2025-09-16T23:46:02.875712Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-16T23:46:02.875851Z	    }
2025-09-16T23:46:02.876027Z	  
2025-09-16T23:46:02.876173Z	Query parameters: {
2025-09-16T23:46:02.876301Z	  limit: 8,
2025-09-16T23:46:02.876445Z	  offset: 0,
2025-09-16T23:46:02.876575Z	  category: undefined,
2025-09-16T23:46:02.876726Z	  brand: 'epcos',
2025-09-16T23:46:02.880844Z	  featured: undefined
2025-09-16T23:46:02.881027Z	}
2025-09-16T23:46:02.881134Z	Fetching solutions with query: 
2025-09-16T23:46:02.881233Z	    {
2025-09-16T23:46:02.881323Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:02.88143Z	        
2025-09-16T23:46:02.881549Z	    _id,
2025-09-16T23:46:02.924283Z	    title,
2025-09-16T23:46:02.92462Z	    "slug": slug.current,
2025-09-16T23:46:02.92481Z	    summary,
2025-09-16T23:46:02.925315Z	    description,
2025-09-16T23:46:02.925474Z	    coverImage,
2025-09-16T23:46:02.925587Z	    primaryBrand->{
2025-09-16T23:46:02.925711Z	      _id,
2025-09-16T23:46:02.925884Z	      name,
2025-09-16T23:46:02.926004Z	      "slug": slug.current,
2025-09-16T23:46:02.927198Z	      logo
2025-09-16T23:46:02.927349Z	    },
2025-09-16T23:46:02.927468Z	    relatedBrands[]->{
2025-09-16T23:46:02.92756Z	      _id,
2025-09-16T23:46:02.927648Z	      name,
2025-09-16T23:46:02.927752Z	      "slug": slug.current,
2025-09-16T23:46:02.927839Z	      logo
2025-09-16T23:46:02.928457Z	    },
2025-09-16T23:46:02.928598Z	    targetMarket,
2025-09-16T23:46:02.93515Z	    complexity,
2025-09-16T23:46:02.935317Z	    publishedAt,
2025-09-16T23:46:02.935428Z	    isPublished,
2025-09-16T23:46:02.93554Z	    isFeatured,
2025-09-16T23:46:02.936381Z	    viewCount,
2025-09-16T23:46:02.936529Z	    _createdAt,
2025-09-16T23:46:02.936634Z	    _updatedAt
2025-09-16T23:46:02.936824Z	  
2025-09-16T23:46:02.936934Z	      },
2025-09-16T23:46:02.937031Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-16T23:46:02.937133Z	    }
2025-09-16T23:46:02.937228Z	  
2025-09-16T23:46:02.937335Z	Query parameters: {
2025-09-16T23:46:02.937438Z	  limit: 4,
2025-09-16T23:46:02.937528Z	  offset: 0,
2025-09-16T23:46:02.937612Z	  targetMarket: undefined,
2025-09-16T23:46:02.937723Z	  brand: 'epcos',
2025-09-16T23:46:02.937818Z	  featured: undefined
2025-09-16T23:46:02.937907Z	}
2025-09-16T23:46:02.938003Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:46:02.938105Z	Products fetch result: {
2025-09-16T23:46:02.9382Z	  totalProducts: 4,
2025-09-16T23:46:02.93829Z	  fetchedProducts: 4,
2025-09-16T23:46:02.938394Z	  firstProduct: {
2025-09-16T23:46:02.939327Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:46:02.939469Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:46:02.939572Z	    _type: 'product',
2025-09-16T23:46:02.940528Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:46:02.940723Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:46:02.940848Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:02.940963Z	    image: null,
2025-09-16T23:46:02.941077Z	    inventory: {
2025-09-16T23:46:02.941709Z	      inStock: true,
2025-09-16T23:46:02.942188Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:46:02.942441Z	      quantity: 0,
2025-09-16T23:46:02.942751Z	      status: 'in_stock',
2025-09-16T23:46:02.942911Z	      warehouse: null
2025-09-16T23:46:02.943062Z	    },
2025-09-16T23:46:02.943221Z	    isActive: true,
2025-09-16T23:46:02.943378Z	    isFeatured: false,
2025-09-16T23:46:02.943528Z	    isNew: false,
2025-09-16T23:46:02.9437Z	    partNumber: '11111',
2025-09-16T23:46:02.943989Z	    pricing: {
2025-09-16T23:46:02.944234Z	      currency: 'CNY',
2025-09-16T23:46:02.944415Z	      leadTime: null,
2025-09-16T23:46:02.945705Z	      moq: null,
2025-09-16T23:46:02.945971Z	      price: null,
2025-09-16T23:46:02.946298Z	      tiers: null
2025-09-16T23:46:02.947389Z	    },
2025-09-16T23:46:02.947532Z	    shortDescription: '11111',
2025-09-16T23:46:02.947662Z	    slug: 'sic mosfet',
2025-09-16T23:46:02.94781Z	    title: '111111'
2025-09-16T23:46:02.947924Z	  }
2025-09-16T23:46:02.948031Z	}
2025-09-16T23:46:02.948133Z	Solutions fetch result: {
2025-09-16T23:46:02.948249Z	  totalSolutions: 6,
2025-09-16T23:46:02.948367Z	  fetchedSolutions: 4,
2025-09-16T23:46:02.948488Z	  firstSolution: {
2025-09-16T23:46:02.948604Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:46:02.948734Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:46:02.948982Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:46:02.949157Z	    complexity: 'medium',
2025-09-16T23:46:02.949273Z	    coverImage: null,
2025-09-16T23:46:02.950252Z	    description: [ [Object] ],
2025-09-16T23:46:02.950443Z	    isFeatured: false,
2025-09-16T23:46:02.950803Z	    isPublished: true,
2025-09-16T23:46:02.950973Z	    primaryBrand: {
2025-09-16T23:46:02.951123Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:46:02.951266Z	      logo: null,
2025-09-16T23:46:02.951407Z	      name: 'CREE',
2025-09-16T23:46:02.951517Z	      slug: 'cree'
2025-09-16T23:46:02.951631Z	    },
2025-09-16T23:46:02.951968Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:46:02.952114Z	    relatedBrands: null,
2025-09-16T23:46:02.952263Z	    slug: '11111',
2025-09-16T23:46:02.952508Z	    summary: '11111',
2025-09-16T23:46:02.95266Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:02.952811Z	    title: '11111',
2025-09-16T23:46:02.952923Z	    viewCount: 0
2025-09-16T23:46:02.953104Z	  }
2025-09-16T23:46:02.953226Z	}
2025-09-16T23:46:02.953345Z	✅ [getBrandData] Found brand: Epcos
2025-09-16T23:46:02.953453Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:02.953559Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:02.953687Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-16T23:46:02.953927Z	Fetching products with query: 
2025-09-16T23:46:02.954077Z	    {
2025-09-16T23:46:02.954195Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:02.954328Z	        
2025-09-16T23:46:02.954454Z	    _id,
2025-09-16T23:46:02.954562Z	    _type,
2025-09-16T23:46:02.954671Z	    partNumber,
2025-09-16T23:46:02.95479Z	    "slug": slug.current,
2025-09-16T23:46:02.95489Z	    title,
2025-09-16T23:46:02.954985Z	    shortDescription,
2025-09-16T23:46:02.95508Z	    image,
2025-09-16T23:46:02.955175Z	    brand->{
2025-09-16T23:46:02.955265Z	      name,
2025-09-16T23:46:02.955394Z	      "slug": slug.current,
2025-09-16T23:46:02.955495Z	      logo
2025-09-16T23:46:02.95564Z	    },
2025-09-16T23:46:02.955996Z	    category->{
2025-09-16T23:46:02.956105Z	      name,
2025-09-16T23:46:02.956198Z	      "slug": slug.current
2025-09-16T23:46:02.956303Z	    },
2025-09-16T23:46:02.956409Z	    pricing{
2025-09-16T23:46:02.956501Z	      currency,
2025-09-16T23:46:02.956591Z	      tiers[]{
2025-09-16T23:46:02.956704Z	        quantity,
2025-09-16T23:46:02.956801Z	        price,
2025-09-16T23:46:02.956889Z	        unit
2025-09-16T23:46:02.956987Z	      },
2025-09-16T23:46:02.957091Z	      moq,
2025-09-16T23:46:02.957185Z	      leadTime,
2025-09-16T23:46:02.957279Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:02.957393Z	      "price": tiers[0].price,
2025-09-16T23:46:02.957493Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:02.957591Z	    },
2025-09-16T23:46:02.957711Z	    inventory{
2025-09-16T23:46:02.957812Z	      quantity,
2025-09-16T23:46:02.957899Z	      status,
2025-09-16T23:46:02.957985Z	      warehouse,
2025-09-16T23:46:02.95807Z	      lastUpdated,
2025-09-16T23:46:02.958156Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:02.958247Z	      "inStock": status == "in_stock",
2025-09-16T23:46:02.958341Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:02.958459Z	    },
2025-09-16T23:46:02.958561Z	    isActive,
2025-09-16T23:46:02.958655Z	    isFeatured,
2025-09-16T23:46:02.958787Z	    isNew,
2025-09-16T23:46:02.958891Z	    _createdAt,
2025-09-16T23:46:02.958982Z	    _updatedAt
2025-09-16T23:46:02.959068Z	  
2025-09-16T23:46:02.95917Z	      },
2025-09-16T23:46:02.959293Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-16T23:46:02.961986Z	    }
2025-09-16T23:46:02.962135Z	  
2025-09-16T23:46:02.962262Z	Query parameters: {
2025-09-16T23:46:02.96239Z	  limit: 8,
2025-09-16T23:46:02.963059Z	  offset: 0,
2025-09-16T23:46:02.963318Z	  category: undefined,
2025-09-16T23:46:02.963494Z	  brand: '英飞凌',
2025-09-16T23:46:02.963638Z	  featured: undefined
2025-09-16T23:46:02.963786Z	}
2025-09-16T23:46:02.963962Z	Fetching solutions with query: 
2025-09-16T23:46:02.964127Z	    {
2025-09-16T23:46:02.964257Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:02.9646Z	        
2025-09-16T23:46:02.964807Z	    _id,
2025-09-16T23:46:02.964913Z	    title,
2025-09-16T23:46:02.965725Z	    "slug": slug.current,
2025-09-16T23:46:02.965939Z	    summary,
2025-09-16T23:46:02.966095Z	    description,
2025-09-16T23:46:02.966224Z	    coverImage,
2025-09-16T23:46:02.96638Z	    primaryBrand->{
2025-09-16T23:46:02.966525Z	      _id,
2025-09-16T23:46:02.966789Z	      name,
2025-09-16T23:46:02.966975Z	      "slug": slug.current,
2025-09-16T23:46:02.967147Z	      logo
2025-09-16T23:46:02.967318Z	    },
2025-09-16T23:46:02.967525Z	    relatedBrands[]->{
2025-09-16T23:46:02.967695Z	      _id,
2025-09-16T23:46:02.967873Z	      name,
2025-09-16T23:46:02.968078Z	      "slug": slug.current,
2025-09-16T23:46:02.968259Z	      logo
2025-09-16T23:46:02.968428Z	    },
2025-09-16T23:46:02.968653Z	    targetMarket,
2025-09-16T23:46:02.968854Z	    complexity,
2025-09-16T23:46:02.969035Z	    publishedAt,
2025-09-16T23:46:02.96921Z	    isPublished,
2025-09-16T23:46:02.969384Z	    isFeatured,
2025-09-16T23:46:02.969559Z	    viewCount,
2025-09-16T23:46:02.969738Z	    _createdAt,
2025-09-16T23:46:02.96995Z	    _updatedAt
2025-09-16T23:46:02.97021Z	  
2025-09-16T23:46:02.9707Z	      },
2025-09-16T23:46:02.97118Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-16T23:46:02.971772Z	    }
2025-09-16T23:46:02.97218Z	  
2025-09-16T23:46:02.972351Z	Query parameters: {
2025-09-16T23:46:02.97249Z	  limit: 4,
2025-09-16T23:46:02.972606Z	  offset: 0,
2025-09-16T23:46:02.972747Z	  targetMarket: undefined,
2025-09-16T23:46:02.972869Z	  brand: '英飞凌',
2025-09-16T23:46:02.972976Z	  featured: undefined
2025-09-16T23:46:02.973087Z	}
2025-09-16T23:46:02.973192Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-16T23:46:02.973318Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:02.97342Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:02.973692Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-16T23:46:02.973826Z	Fetching products with query: 
2025-09-16T23:46:02.973952Z	    {
2025-09-16T23:46:02.974073Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:02.974187Z	        
2025-09-16T23:46:02.974295Z	    _id,
2025-09-16T23:46:02.974403Z	    _type,
2025-09-16T23:46:02.97452Z	    partNumber,
2025-09-16T23:46:02.974627Z	    "slug": slug.current,
2025-09-16T23:46:02.974752Z	    title,
2025-09-16T23:46:02.974855Z	    shortDescription,
2025-09-16T23:46:02.974966Z	    image,
2025-09-16T23:46:02.975071Z	    brand->{
2025-09-16T23:46:02.975174Z	      name,
2025-09-16T23:46:02.975284Z	      "slug": slug.current,
2025-09-16T23:46:02.975389Z	      logo
2025-09-16T23:46:02.97551Z	    },
2025-09-16T23:46:02.975624Z	    category->{
2025-09-16T23:46:02.975743Z	      name,
2025-09-16T23:46:02.975849Z	      "slug": slug.current
2025-09-16T23:46:02.97595Z	    },
2025-09-16T23:46:02.97605Z	    pricing{
2025-09-16T23:46:02.976153Z	      currency,
2025-09-16T23:46:02.976257Z	      tiers[]{
2025-09-16T23:46:02.976413Z	        quantity,
2025-09-16T23:46:02.976539Z	        price,
2025-09-16T23:46:02.976669Z	        unit
2025-09-16T23:46:02.976804Z	      },
2025-09-16T23:46:02.976909Z	      moq,
2025-09-16T23:46:02.977001Z	      leadTime,
2025-09-16T23:46:02.977099Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:02.977194Z	      "price": tiers[0].price,
2025-09-16T23:46:02.97729Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:02.977389Z	    },
2025-09-16T23:46:02.977513Z	    inventory{
2025-09-16T23:46:02.977619Z	      quantity,
2025-09-16T23:46:02.977747Z	      status,
2025-09-16T23:46:02.977851Z	      warehouse,
2025-09-16T23:46:02.977964Z	      lastUpdated,
2025-09-16T23:46:02.978072Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:02.978178Z	      "inStock": status == "in_stock",
2025-09-16T23:46:02.978275Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:02.97837Z	    },
2025-09-16T23:46:02.979037Z	    isActive,
2025-09-16T23:46:02.979165Z	    isFeatured,
2025-09-16T23:46:02.979308Z	    isNew,
2025-09-16T23:46:02.979438Z	    _createdAt,
2025-09-16T23:46:02.979557Z	    _updatedAt
2025-09-16T23:46:02.979665Z	  
2025-09-16T23:46:03.023955Z	      },
2025-09-16T23:46:03.024215Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-16T23:46:03.024365Z	    }
2025-09-16T23:46:03.024493Z	  
2025-09-16T23:46:03.024627Z	Query parameters: {
2025-09-16T23:46:03.024762Z	  limit: 8,
2025-09-16T23:46:03.024869Z	  offset: 0,
2025-09-16T23:46:03.024966Z	  category: undefined,
2025-09-16T23:46:03.025071Z	  brand: '英飞凌',
2025-09-16T23:46:03.02517Z	  featured: undefined
2025-09-16T23:46:03.025318Z	}
2025-09-16T23:46:03.025477Z	Fetching solutions with query: 
2025-09-16T23:46:03.025594Z	    {
2025-09-16T23:46:03.025818Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.02604Z	        
2025-09-16T23:46:03.026329Z	    _id,
2025-09-16T23:46:03.02902Z	    title,
2025-09-16T23:46:03.029189Z	    "slug": slug.current,
2025-09-16T23:46:03.029316Z	    summary,
2025-09-16T23:46:03.029467Z	    description,
2025-09-16T23:46:03.029582Z	    coverImage,
2025-09-16T23:46:03.029748Z	    primaryBrand->{
2025-09-16T23:46:03.029888Z	      _id,
2025-09-16T23:46:03.030027Z	      name,
2025-09-16T23:46:03.030149Z	      "slug": slug.current,
2025-09-16T23:46:03.030284Z	      logo
2025-09-16T23:46:03.030445Z	    },
2025-09-16T23:46:03.030558Z	    relatedBrands[]->{
2025-09-16T23:46:03.030699Z	      _id,
2025-09-16T23:46:03.030802Z	      name,
2025-09-16T23:46:03.030955Z	      "slug": slug.current,
2025-09-16T23:46:03.031082Z	      logo
2025-09-16T23:46:03.031212Z	    },
2025-09-16T23:46:03.031332Z	    targetMarket,
2025-09-16T23:46:03.031731Z	    complexity,
2025-09-16T23:46:03.03195Z	    publishedAt,
2025-09-16T23:46:03.032164Z	    isPublished,
2025-09-16T23:46:03.032298Z	    isFeatured,
2025-09-16T23:46:03.032403Z	    viewCount,
2025-09-16T23:46:03.0325Z	    _createdAt,
2025-09-16T23:46:03.03259Z	    _updatedAt
2025-09-16T23:46:03.032782Z	  
2025-09-16T23:46:03.032917Z	      },
2025-09-16T23:46:03.033023Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-16T23:46:03.03313Z	    }
2025-09-16T23:46:03.033222Z	  
2025-09-16T23:46:03.033313Z	Query parameters: {
2025-09-16T23:46:03.033593Z	  limit: 4,
2025-09-16T23:46:03.033822Z	  offset: 0,
2025-09-16T23:46:03.034057Z	  targetMarket: undefined,
2025-09-16T23:46:03.034149Z	  brand: '英飞凌',
2025-09-16T23:46:03.034332Z	  featured: undefined
2025-09-16T23:46:03.034463Z	}
2025-09-16T23:46:03.034566Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-16T23:46:03.034669Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.034797Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.034914Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-16T23:46:03.035009Z	Fetching products with query: 
2025-09-16T23:46:03.035112Z	    {
2025-09-16T23:46:03.035227Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.035331Z	        
2025-09-16T23:46:03.035439Z	    _id,
2025-09-16T23:46:03.035533Z	    _type,
2025-09-16T23:46:03.035628Z	    partNumber,
2025-09-16T23:46:03.035743Z	    "slug": slug.current,
2025-09-16T23:46:03.035846Z	    title,
2025-09-16T23:46:03.036Z	    shortDescription,
2025-09-16T23:46:03.0361Z	    image,
2025-09-16T23:46:03.036195Z	    brand->{
2025-09-16T23:46:03.03629Z	      name,
2025-09-16T23:46:03.036404Z	      "slug": slug.current,
2025-09-16T23:46:03.036503Z	      logo
2025-09-16T23:46:03.036606Z	    },
2025-09-16T23:46:03.03674Z	    category->{
2025-09-16T23:46:03.036854Z	      name,
2025-09-16T23:46:03.037022Z	      "slug": slug.current
2025-09-16T23:46:03.037146Z	    },
2025-09-16T23:46:03.037247Z	    pricing{
2025-09-16T23:46:03.037347Z	      currency,
2025-09-16T23:46:03.037582Z	      tiers[]{
2025-09-16T23:46:03.037806Z	        quantity,
2025-09-16T23:46:03.037926Z	        price,
2025-09-16T23:46:03.038037Z	        unit
2025-09-16T23:46:03.038272Z	      },
2025-09-16T23:46:03.038395Z	      moq,
2025-09-16T23:46:03.038516Z	      leadTime,
2025-09-16T23:46:03.038792Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.038916Z	      "price": tiers[0].price,
2025-09-16T23:46:03.039061Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.039239Z	    },
2025-09-16T23:46:03.039352Z	    inventory{
2025-09-16T23:46:03.039449Z	      quantity,
2025-09-16T23:46:03.039545Z	      status,
2025-09-16T23:46:03.039641Z	      warehouse,
2025-09-16T23:46:03.03975Z	      lastUpdated,
2025-09-16T23:46:03.039949Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.040081Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.040184Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.040285Z	    },
2025-09-16T23:46:03.040385Z	    isActive,
2025-09-16T23:46:03.040483Z	    isFeatured,
2025-09-16T23:46:03.04059Z	    isNew,
2025-09-16T23:46:03.040726Z	    _createdAt,
2025-09-16T23:46:03.040827Z	    _updatedAt
2025-09-16T23:46:03.040916Z	  
2025-09-16T23:46:03.041Z	      },
2025-09-16T23:46:03.041092Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-16T23:46:03.04119Z	    }
2025-09-16T23:46:03.041282Z	  
2025-09-16T23:46:03.041372Z	Query parameters: {
2025-09-16T23:46:03.041469Z	  limit: 8,
2025-09-16T23:46:03.04158Z	  offset: 0,
2025-09-16T23:46:03.041699Z	  category: undefined,
2025-09-16T23:46:03.041801Z	  brand: 'lem',
2025-09-16T23:46:03.041891Z	  featured: undefined
2025-09-16T23:46:03.041982Z	}
2025-09-16T23:46:03.042076Z	Fetching solutions with query: 
2025-09-16T23:46:03.04217Z	    {
2025-09-16T23:46:03.042272Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.042372Z	        
2025-09-16T23:46:03.042473Z	    _id,
2025-09-16T23:46:03.042567Z	    title,
2025-09-16T23:46:03.042662Z	    "slug": slug.current,
2025-09-16T23:46:03.042783Z	    summary,
2025-09-16T23:46:03.042883Z	    description,
2025-09-16T23:46:03.042977Z	    coverImage,
2025-09-16T23:46:03.043076Z	    primaryBrand->{
2025-09-16T23:46:03.043174Z	      _id,
2025-09-16T23:46:03.043269Z	      name,
2025-09-16T23:46:03.043363Z	      "slug": slug.current,
2025-09-16T23:46:03.043464Z	      logo
2025-09-16T23:46:03.043564Z	    },
2025-09-16T23:46:03.043664Z	    relatedBrands[]->{
2025-09-16T23:46:03.043783Z	      _id,
2025-09-16T23:46:03.043884Z	      name,
2025-09-16T23:46:03.043979Z	      "slug": slug.current,
2025-09-16T23:46:03.044071Z	      logo
2025-09-16T23:46:03.044163Z	    },
2025-09-16T23:46:03.044255Z	    targetMarket,
2025-09-16T23:46:03.044355Z	    complexity,
2025-09-16T23:46:03.044459Z	    publishedAt,
2025-09-16T23:46:03.044569Z	    isPublished,
2025-09-16T23:46:03.044671Z	    isFeatured,
2025-09-16T23:46:03.044777Z	    viewCount,
2025-09-16T23:46:03.044871Z	    _createdAt,
2025-09-16T23:46:03.044965Z	    _updatedAt
2025-09-16T23:46:03.045107Z	  
2025-09-16T23:46:03.04521Z	      },
2025-09-16T23:46:03.045339Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-16T23:46:03.045453Z	    }
2025-09-16T23:46:03.04567Z	  
2025-09-16T23:46:03.045805Z	Query parameters: {
2025-09-16T23:46:03.045898Z	  limit: 4,
2025-09-16T23:46:03.045992Z	  offset: 0,
2025-09-16T23:46:03.046096Z	  targetMarket: undefined,
2025-09-16T23:46:03.046188Z	  brand: 'lem',
2025-09-16T23:46:03.046287Z	  featured: undefined
2025-09-16T23:46:03.046385Z	}
2025-09-16T23:46:03.046478Z	✅ [getBrandData] Found brand: LEM
2025-09-16T23:46:03.046577Z	Products fetch result: {
2025-09-16T23:46:03.046694Z	  totalProducts: 3,
2025-09-16T23:46:03.046793Z	  fetchedProducts: 3,
2025-09-16T23:46:03.046891Z	  firstProduct: {
2025-09-16T23:46:03.046982Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-16T23:46:03.047077Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-16T23:46:03.047171Z	    _type: 'product',
2025-09-16T23:46:03.047263Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-16T23:46:03.047381Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-16T23:46:03.047476Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-16T23:46:03.047571Z	    image: null,
2025-09-16T23:46:03.04767Z	    inventory: {
2025-09-16T23:46:03.047782Z	      inStock: true,
2025-09-16T23:46:03.047884Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-16T23:46:03.047983Z	      quantity: 0,
2025-09-16T23:46:03.048073Z	      status: 'in_stock',
2025-09-16T23:46:03.048171Z	      warehouse: null
2025-09-16T23:46:03.048265Z	    },
2025-09-16T23:46:03.048364Z	    isActive: true,
2025-09-16T23:46:03.04846Z	    isFeatured: false,
2025-09-16T23:46:03.048554Z	    isNew: false,
2025-09-16T23:46:03.048653Z	    partNumber: 'la55-p',
2025-09-16T23:46:03.04877Z	    pricing: {
2025-09-16T23:46:03.048869Z	      currency: 'CNY',
2025-09-16T23:46:03.048957Z	      leadTime: null,
2025-09-16T23:46:03.049049Z	      moq: null,
2025-09-16T23:46:03.049141Z	      price: null,
2025-09-16T23:46:03.049234Z	      tiers: null
2025-09-16T23:46:03.049326Z	    },
2025-09-16T23:46:03.04943Z	    shortDescription: '电流传感器la55-p',
2025-09-16T23:46:03.049527Z	    slug: 'la55-p',
2025-09-16T23:46:03.049644Z	    title: '电流传感器la55-p'
2025-09-16T23:46:03.049763Z	  }
2025-09-16T23:46:03.049862Z	}
2025-09-16T23:46:03.049951Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.050055Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-16T23:46:03.050152Z	Fetching products with query: 
2025-09-16T23:46:03.050254Z	    {
2025-09-16T23:46:03.050346Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.050443Z	        
2025-09-16T23:46:03.050537Z	    _id,
2025-09-16T23:46:03.050637Z	    _type,
2025-09-16T23:46:03.050745Z	    partNumber,
2025-09-16T23:46:03.050844Z	    "slug": slug.current,
2025-09-16T23:46:03.050949Z	    title,
2025-09-16T23:46:03.051046Z	    shortDescription,
2025-09-16T23:46:03.051142Z	    image,
2025-09-16T23:46:03.051239Z	    brand->{
2025-09-16T23:46:03.051336Z	      name,
2025-09-16T23:46:03.051433Z	      "slug": slug.current,
2025-09-16T23:46:03.051543Z	      logo
2025-09-16T23:46:03.051648Z	    },
2025-09-16T23:46:03.051754Z	    category->{
2025-09-16T23:46:03.051849Z	      name,
2025-09-16T23:46:03.051946Z	      "slug": slug.current
2025-09-16T23:46:03.052042Z	    },
2025-09-16T23:46:03.052137Z	    pricing{
2025-09-16T23:46:03.052236Z	      currency,
2025-09-16T23:46:03.052332Z	      tiers[]{
2025-09-16T23:46:03.052422Z	        quantity,
2025-09-16T23:46:03.052513Z	        price,
2025-09-16T23:46:03.052601Z	        unit
2025-09-16T23:46:03.052716Z	      },
2025-09-16T23:46:03.052816Z	      moq,
2025-09-16T23:46:03.052922Z	      leadTime,
2025-09-16T23:46:03.05302Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.05311Z	      "price": tiers[0].price,
2025-09-16T23:46:03.053208Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.053291Z	    },
2025-09-16T23:46:03.053374Z	    inventory{
2025-09-16T23:46:03.05348Z	      quantity,
2025-09-16T23:46:03.053571Z	      status,
2025-09-16T23:46:03.053689Z	      warehouse,
2025-09-16T23:46:03.053792Z	      lastUpdated,
2025-09-16T23:46:03.053892Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.053992Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.054086Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.054185Z	    },
2025-09-16T23:46:03.054277Z	    isActive,
2025-09-16T23:46:03.054375Z	    isFeatured,
2025-09-16T23:46:03.054475Z	    isNew,
2025-09-16T23:46:03.054569Z	    _createdAt,
2025-09-16T23:46:03.054667Z	    _updatedAt
2025-09-16T23:46:03.054781Z	  
2025-09-16T23:46:03.054891Z	      },
2025-09-16T23:46:03.054986Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-16T23:46:03.055084Z	    }
2025-09-16T23:46:03.055173Z	  
2025-09-16T23:46:03.055261Z	Query parameters: {
2025-09-16T23:46:03.055352Z	  limit: 8,
2025-09-16T23:46:03.055455Z	  offset: 0,
2025-09-16T23:46:03.055557Z	  category: undefined,
2025-09-16T23:46:03.055659Z	  brand: 'lem',
2025-09-16T23:46:03.055763Z	  featured: undefined
2025-09-16T23:46:03.05585Z	}
2025-09-16T23:46:03.055938Z	Fetching solutions with query: 
2025-09-16T23:46:03.056035Z	    {
2025-09-16T23:46:03.056132Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.056232Z	        
2025-09-16T23:46:03.056322Z	    _id,
2025-09-16T23:46:03.05641Z	    title,
2025-09-16T23:46:03.05651Z	    "slug": slug.current,
2025-09-16T23:46:03.056604Z	    summary,
2025-09-16T23:46:03.056711Z	    description,
2025-09-16T23:46:03.056809Z	    coverImage,
2025-09-16T23:46:03.056901Z	    primaryBrand->{
2025-09-16T23:46:03.056993Z	      _id,
2025-09-16T23:46:03.057083Z	      name,
2025-09-16T23:46:03.05718Z	      "slug": slug.current,
2025-09-16T23:46:03.057272Z	      logo
2025-09-16T23:46:03.057366Z	    },
2025-09-16T23:46:03.057456Z	    relatedBrands[]->{
2025-09-16T23:46:03.057544Z	      _id,
2025-09-16T23:46:03.057642Z	      name,
2025-09-16T23:46:03.057743Z	      "slug": slug.current,
2025-09-16T23:46:03.057832Z	      logo
2025-09-16T23:46:03.057928Z	    },
2025-09-16T23:46:03.058024Z	    targetMarket,
2025-09-16T23:46:03.05812Z	    complexity,
2025-09-16T23:46:03.05822Z	    publishedAt,
2025-09-16T23:46:03.058306Z	    isPublished,
2025-09-16T23:46:03.058393Z	    isFeatured,
2025-09-16T23:46:03.058476Z	    viewCount,
2025-09-16T23:46:03.058562Z	    _createdAt,
2025-09-16T23:46:03.058658Z	    _updatedAt
2025-09-16T23:46:03.058761Z	  
2025-09-16T23:46:03.058847Z	      },
2025-09-16T23:46:03.05894Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-16T23:46:03.059033Z	    }
2025-09-16T23:46:03.059125Z	  
2025-09-16T23:46:03.059212Z	Query parameters: {
2025-09-16T23:46:03.059325Z	  limit: 4,
2025-09-16T23:46:03.05942Z	  offset: 0,
2025-09-16T23:46:03.059523Z	  targetMarket: undefined,
2025-09-16T23:46:03.059628Z	  brand: 'lem',
2025-09-16T23:46:03.059733Z	  featured: undefined
2025-09-16T23:46:03.059824Z	}
2025-09-16T23:46:03.05991Z	✅ [getBrandData] Found brand: LEM
2025-09-16T23:46:03.060002Z	Products fetch result: {
2025-09-16T23:46:03.060089Z	  totalProducts: 3,
2025-09-16T23:46:03.060177Z	  fetchedProducts: 3,
2025-09-16T23:46:03.060274Z	  firstProduct: {
2025-09-16T23:46:03.060363Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-16T23:46:03.060458Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-16T23:46:03.060545Z	    _type: 'product',
2025-09-16T23:46:03.060649Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-16T23:46:03.060763Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-16T23:46:03.060855Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-16T23:46:03.060944Z	    image: null,
2025-09-16T23:46:03.061028Z	    inventory: {
2025-09-16T23:46:03.061115Z	      inStock: true,
2025-09-16T23:46:03.061202Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-16T23:46:03.061299Z	      quantity: 0,
2025-09-16T23:46:03.061395Z	      status: 'in_stock',
2025-09-16T23:46:03.061486Z	      warehouse: null
2025-09-16T23:46:03.061583Z	    },
2025-09-16T23:46:03.061692Z	    isActive: true,
2025-09-16T23:46:03.061789Z	    isFeatured: false,
2025-09-16T23:46:03.06188Z	    isNew: false,
2025-09-16T23:46:03.061976Z	    partNumber: 'la55-p',
2025-09-16T23:46:03.062072Z	    pricing: {
2025-09-16T23:46:03.062165Z	      currency: 'CNY',
2025-09-16T23:46:03.062259Z	      leadTime: null,
2025-09-16T23:46:03.062356Z	      moq: null,
2025-09-16T23:46:03.062455Z	      price: null,
2025-09-16T23:46:03.062551Z	      tiers: null
2025-09-16T23:46:03.062646Z	    },
2025-09-16T23:46:03.062742Z	    shortDescription: '电流传感器la55-p',
2025-09-16T23:46:03.062826Z	    slug: 'la55-p',
2025-09-16T23:46:03.062915Z	    title: '电流传感器la55-p'
2025-09-16T23:46:03.063003Z	  }
2025-09-16T23:46:03.063171Z	}
2025-09-16T23:46:03.063313Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.06342Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:03.063538Z	Fetching products with query: 
2025-09-16T23:46:03.063639Z	    {
2025-09-16T23:46:03.063752Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.063847Z	        
2025-09-16T23:46:03.063939Z	    _id,
2025-09-16T23:46:03.064033Z	    _type,
2025-09-16T23:46:03.064131Z	    partNumber,
2025-09-16T23:46:03.064218Z	    "slug": slug.current,
2025-09-16T23:46:03.06431Z	    title,
2025-09-16T23:46:03.06441Z	    shortDescription,
2025-09-16T23:46:03.064508Z	    image,
2025-09-16T23:46:03.064608Z	    brand->{
2025-09-16T23:46:03.064729Z	      name,
2025-09-16T23:46:03.064834Z	      "slug": slug.current,
2025-09-16T23:46:03.064925Z	      logo
2025-09-16T23:46:03.065017Z	    },
2025-09-16T23:46:03.065099Z	    category->{
2025-09-16T23:46:03.065181Z	      name,
2025-09-16T23:46:03.065268Z	      "slug": slug.current
2025-09-16T23:46:03.065367Z	    },
2025-09-16T23:46:03.065461Z	    pricing{
2025-09-16T23:46:03.065543Z	      currency,
2025-09-16T23:46:03.065637Z	      tiers[]{
2025-09-16T23:46:03.065742Z	        quantity,
2025-09-16T23:46:03.065832Z	        price,
2025-09-16T23:46:03.065929Z	        unit
2025-09-16T23:46:03.066046Z	      },
2025-09-16T23:46:03.066144Z	      moq,
2025-09-16T23:46:03.066237Z	      leadTime,
2025-09-16T23:46:03.066406Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.06651Z	      "price": tiers[0].price,
2025-09-16T23:46:03.066611Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.066719Z	    },
2025-09-16T23:46:03.066813Z	    inventory{
2025-09-16T23:46:03.066906Z	      quantity,
2025-09-16T23:46:03.06705Z	      status,
2025-09-16T23:46:03.067147Z	      warehouse,
2025-09-16T23:46:03.067234Z	      lastUpdated,
2025-09-16T23:46:03.067325Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.067415Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.067502Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.067587Z	    },
2025-09-16T23:46:03.06771Z	    isActive,
2025-09-16T23:46:03.067814Z	    isFeatured,
2025-09-16T23:46:03.067909Z	    isNew,
2025-09-16T23:46:03.067998Z	    _createdAt,
2025-09-16T23:46:03.068091Z	    _updatedAt
2025-09-16T23:46:03.06819Z	  
2025-09-16T23:46:03.068278Z	      },
2025-09-16T23:46:03.068375Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-16T23:46:03.068473Z	    }
2025-09-16T23:46:03.06857Z	  
2025-09-16T23:46:03.068663Z	Query parameters: {
2025-09-16T23:46:03.068801Z	  limit: 8,
2025-09-16T23:46:03.068911Z	  offset: 0,
2025-09-16T23:46:03.068998Z	  category: undefined,
2025-09-16T23:46:03.069082Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:03.069165Z	  featured: undefined
2025-09-16T23:46:03.069256Z	}
2025-09-16T23:46:03.069348Z	Fetching solutions with query: 
2025-09-16T23:46:03.069436Z	    {
2025-09-16T23:46:03.06952Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.069624Z	        
2025-09-16T23:46:03.069726Z	    _id,
2025-09-16T23:46:03.069806Z	    title,
2025-09-16T23:46:03.069891Z	    "slug": slug.current,
2025-09-16T23:46:03.069969Z	    summary,
2025-09-16T23:46:03.070047Z	    description,
2025-09-16T23:46:03.070127Z	    coverImage,
2025-09-16T23:46:03.070203Z	    primaryBrand->{
2025-09-16T23:46:03.07028Z	      _id,
2025-09-16T23:46:03.070358Z	      name,
2025-09-16T23:46:03.070439Z	      "slug": slug.current,
2025-09-16T23:46:03.070524Z	      logo
2025-09-16T23:46:03.070612Z	    },
2025-09-16T23:46:03.070716Z	    relatedBrands[]->{
2025-09-16T23:46:03.070821Z	      _id,
2025-09-16T23:46:03.070914Z	      name,
2025-09-16T23:46:03.071Z	      "slug": slug.current,
2025-09-16T23:46:03.071089Z	      logo
2025-09-16T23:46:03.071181Z	    },
2025-09-16T23:46:03.071274Z	    targetMarket,
2025-09-16T23:46:03.071361Z	    complexity,
2025-09-16T23:46:03.07145Z	    publishedAt,
2025-09-16T23:46:03.071535Z	    isPublished,
2025-09-16T23:46:03.071629Z	    isFeatured,
2025-09-16T23:46:03.071734Z	    viewCount,
2025-09-16T23:46:03.071815Z	    _createdAt,
2025-09-16T23:46:03.071892Z	    _updatedAt
2025-09-16T23:46:03.071977Z	  
2025-09-16T23:46:03.072056Z	      },
2025-09-16T23:46:03.072134Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-16T23:46:03.07222Z	    }
2025-09-16T23:46:03.072303Z	  
2025-09-16T23:46:03.072389Z	Query parameters: {
2025-09-16T23:46:03.072476Z	  limit: 4,
2025-09-16T23:46:03.07256Z	  offset: 0,
2025-09-16T23:46:03.072654Z	  targetMarket: undefined,
2025-09-16T23:46:03.07275Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:03.072833Z	  featured: undefined
2025-09-16T23:46:03.072915Z	}
2025-09-16T23:46:03.072996Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:03.073078Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.073165Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.073256Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:03.073345Z	Fetching products with query: 
2025-09-16T23:46:03.07345Z	    {
2025-09-16T23:46:03.07354Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.073641Z	        
2025-09-16T23:46:03.073747Z	    _id,
2025-09-16T23:46:03.073835Z	    _type,
2025-09-16T23:46:03.073921Z	    partNumber,
2025-09-16T23:46:03.074008Z	    "slug": slug.current,
2025-09-16T23:46:03.074095Z	    title,
2025-09-16T23:46:03.074185Z	    shortDescription,
2025-09-16T23:46:03.074271Z	    image,
2025-09-16T23:46:03.074356Z	    brand->{
2025-09-16T23:46:03.074443Z	      name,
2025-09-16T23:46:03.074527Z	      "slug": slug.current,
2025-09-16T23:46:03.07462Z	      logo
2025-09-16T23:46:03.074722Z	    },
2025-09-16T23:46:03.074809Z	    category->{
2025-09-16T23:46:03.074895Z	      name,
2025-09-16T23:46:03.074984Z	      "slug": slug.current
2025-09-16T23:46:03.075069Z	    },
2025-09-16T23:46:03.075156Z	    pricing{
2025-09-16T23:46:03.075242Z	      currency,
2025-09-16T23:46:03.075334Z	      tiers[]{
2025-09-16T23:46:03.075413Z	        quantity,
2025-09-16T23:46:03.075495Z	        price,
2025-09-16T23:46:03.075577Z	        unit
2025-09-16T23:46:03.075684Z	      },
2025-09-16T23:46:03.075783Z	      moq,
2025-09-16T23:46:03.075866Z	      leadTime,
2025-09-16T23:46:03.075946Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.076027Z	      "price": tiers[0].price,
2025-09-16T23:46:03.076105Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.07619Z	    },
2025-09-16T23:46:03.076274Z	    inventory{
2025-09-16T23:46:03.076357Z	      quantity,
2025-09-16T23:46:03.076438Z	      status,
2025-09-16T23:46:03.076515Z	      warehouse,
2025-09-16T23:46:03.076599Z	      lastUpdated,
2025-09-16T23:46:03.07672Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.07681Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.07689Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.07697Z	    },
2025-09-16T23:46:03.077047Z	    isActive,
2025-09-16T23:46:03.077126Z	    isFeatured,
2025-09-16T23:46:03.077208Z	    isNew,
2025-09-16T23:46:03.077304Z	    _createdAt,
2025-09-16T23:46:03.077392Z	    _updatedAt
2025-09-16T23:46:03.077479Z	  
2025-09-16T23:46:03.077567Z	      },
2025-09-16T23:46:03.077657Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-16T23:46:03.077764Z	    }
2025-09-16T23:46:03.077853Z	  
2025-09-16T23:46:03.077938Z	Query parameters: {
2025-09-16T23:46:03.078021Z	  limit: 8,
2025-09-16T23:46:03.078108Z	  offset: 0,
2025-09-16T23:46:03.078193Z	  category: undefined,
2025-09-16T23:46:03.078297Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:03.078385Z	  featured: undefined
2025-09-16T23:46:03.078474Z	}
2025-09-16T23:46:03.078562Z	Fetching solutions with query: 
2025-09-16T23:46:03.078655Z	    {
2025-09-16T23:46:03.078759Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.078851Z	        
2025-09-16T23:46:03.078935Z	    _id,
2025-09-16T23:46:03.079023Z	    title,
2025-09-16T23:46:03.079111Z	    "slug": slug.current,
2025-09-16T23:46:03.079197Z	    summary,
2025-09-16T23:46:03.079307Z	    description,
2025-09-16T23:46:03.079405Z	    coverImage,
2025-09-16T23:46:03.079496Z	    primaryBrand->{
2025-09-16T23:46:03.079583Z	      _id,
2025-09-16T23:46:03.079687Z	      name,
2025-09-16T23:46:03.079785Z	      "slug": slug.current,
2025-09-16T23:46:03.079873Z	      logo
2025-09-16T23:46:03.079965Z	    },
2025-09-16T23:46:03.080052Z	    relatedBrands[]->{
2025-09-16T23:46:03.080137Z	      _id,
2025-09-16T23:46:03.080222Z	      name,
2025-09-16T23:46:03.080306Z	      "slug": slug.current,
2025-09-16T23:46:03.080392Z	      logo
2025-09-16T23:46:03.08048Z	    },
2025-09-16T23:46:03.08057Z	    targetMarket,
2025-09-16T23:46:03.080665Z	    complexity,
2025-09-16T23:46:03.080768Z	    publishedAt,
2025-09-16T23:46:03.080854Z	    isPublished,
2025-09-16T23:46:03.080939Z	    isFeatured,
2025-09-16T23:46:03.081025Z	    viewCount,
2025-09-16T23:46:03.081114Z	    _createdAt,
2025-09-16T23:46:03.0812Z	    _updatedAt
2025-09-16T23:46:03.081288Z	  
2025-09-16T23:46:03.081373Z	      },
2025-09-16T23:46:03.081464Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-16T23:46:03.081553Z	    }
2025-09-16T23:46:03.08165Z	  
2025-09-16T23:46:03.081752Z	Query parameters: {
2025-09-16T23:46:03.081841Z	  limit: 4,
2025-09-16T23:46:03.081942Z	  offset: 0,
2025-09-16T23:46:03.082028Z	  targetMarket: undefined,
2025-09-16T23:46:03.082132Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:03.08223Z	  featured: undefined
2025-09-16T23:46:03.082322Z	}
2025-09-16T23:46:03.082416Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:03.082509Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.082628Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.082733Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:46:03.082829Z	Fetching products with query: 
2025-09-16T23:46:03.082917Z	    {
2025-09-16T23:46:03.083021Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.083116Z	        
2025-09-16T23:46:03.083197Z	    _id,
2025-09-16T23:46:03.083289Z	    _type,
2025-09-16T23:46:03.08339Z	    partNumber,
2025-09-16T23:46:03.083488Z	    "slug": slug.current,
2025-09-16T23:46:03.083588Z	    title,
2025-09-16T23:46:03.083714Z	    shortDescription,
2025-09-16T23:46:03.083814Z	    image,
2025-09-16T23:46:03.083917Z	    brand->{
2025-09-16T23:46:03.084016Z	      name,
2025-09-16T23:46:03.084107Z	      "slug": slug.current,
2025-09-16T23:46:03.084205Z	      logo
2025-09-16T23:46:03.084308Z	    },
2025-09-16T23:46:03.084412Z	    category->{
2025-09-16T23:46:03.084519Z	      name,
2025-09-16T23:46:03.084615Z	      "slug": slug.current
2025-09-16T23:46:03.08472Z	    },
2025-09-16T23:46:03.084812Z	    pricing{
2025-09-16T23:46:03.084902Z	      currency,
2025-09-16T23:46:03.084995Z	      tiers[]{
2025-09-16T23:46:03.085085Z	        quantity,
2025-09-16T23:46:03.085181Z	        price,
2025-09-16T23:46:03.08528Z	        unit
2025-09-16T23:46:03.085372Z	      },
2025-09-16T23:46:03.08546Z	      moq,
2025-09-16T23:46:03.085549Z	      leadTime,
2025-09-16T23:46:03.085653Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.085761Z	      "price": tiers[0].price,
2025-09-16T23:46:03.08585Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.085942Z	    },
2025-09-16T23:46:03.086025Z	    inventory{
2025-09-16T23:46:03.086113Z	      quantity,
2025-09-16T23:46:03.086202Z	      status,
2025-09-16T23:46:03.086287Z	      warehouse,
2025-09-16T23:46:03.086379Z	      lastUpdated,
2025-09-16T23:46:03.086468Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.086556Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.086651Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.086775Z	    },
2025-09-16T23:46:03.086862Z	    isActive,
2025-09-16T23:46:03.086949Z	    isFeatured,
2025-09-16T23:46:03.087034Z	    isNew,
2025-09-16T23:46:03.087118Z	    _createdAt,
2025-09-16T23:46:03.0872Z	    _updatedAt
2025-09-16T23:46:03.087287Z	  
2025-09-16T23:46:03.087375Z	      },
2025-09-16T23:46:03.087462Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:46:03.087549Z	    }
2025-09-16T23:46:03.087639Z	  
2025-09-16T23:46:03.087744Z	Query parameters: {
2025-09-16T23:46:03.087837Z	  limit: 8,
2025-09-16T23:46:03.087923Z	  offset: 0,
2025-09-16T23:46:03.088016Z	  category: undefined,
2025-09-16T23:46:03.088108Z	  brand: 'littelfuse',
2025-09-16T23:46:03.0882Z	  featured: undefined
2025-09-16T23:46:03.088312Z	}
2025-09-16T23:46:03.088406Z	Fetching solutions with query: 
2025-09-16T23:46:03.088494Z	    {
2025-09-16T23:46:03.088585Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.088698Z	        
2025-09-16T23:46:03.088786Z	    _id,
2025-09-16T23:46:03.088866Z	    title,
2025-09-16T23:46:03.088948Z	    "slug": slug.current,
2025-09-16T23:46:03.089031Z	    summary,
2025-09-16T23:46:03.089111Z	    description,
2025-09-16T23:46:03.08919Z	    coverImage,
2025-09-16T23:46:03.089268Z	    primaryBrand->{
2025-09-16T23:46:03.089347Z	      _id,
2025-09-16T23:46:03.089433Z	      name,
2025-09-16T23:46:03.089514Z	      "slug": slug.current,
2025-09-16T23:46:03.089605Z	      logo
2025-09-16T23:46:03.089711Z	    },
2025-09-16T23:46:03.089804Z	    relatedBrands[]->{
2025-09-16T23:46:03.08989Z	      _id,
2025-09-16T23:46:03.089972Z	      name,
2025-09-16T23:46:03.090068Z	      "slug": slug.current,
2025-09-16T23:46:03.090158Z	      logo
2025-09-16T23:46:03.090251Z	    },
2025-09-16T23:46:03.090346Z	    targetMarket,
2025-09-16T23:46:03.090446Z	    complexity,
2025-09-16T23:46:03.090546Z	    publishedAt,
2025-09-16T23:46:03.090646Z	    isPublished,
2025-09-16T23:46:03.090755Z	    isFeatured,
2025-09-16T23:46:03.090847Z	    viewCount,
2025-09-16T23:46:03.090938Z	    _createdAt,
2025-09-16T23:46:03.091025Z	    _updatedAt
2025-09-16T23:46:03.091109Z	  
2025-09-16T23:46:03.091188Z	      },
2025-09-16T23:46:03.091274Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:46:03.091359Z	    }
2025-09-16T23:46:03.091452Z	  
2025-09-16T23:46:03.091545Z	Query parameters: {
2025-09-16T23:46:03.091653Z	  limit: 4,
2025-09-16T23:46:03.09176Z	  offset: 0,
2025-09-16T23:46:03.091844Z	  targetMarket: undefined,
2025-09-16T23:46:03.091923Z	  brand: 'littelfuse',
2025-09-16T23:46:03.09201Z	  featured: undefined
2025-09-16T23:46:03.0921Z	}
2025-09-16T23:46:03.092197Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:46:03.092287Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.092378Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.092469Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:46:03.092558Z	Fetching products with query: 
2025-09-16T23:46:03.092647Z	    {
2025-09-16T23:46:03.09275Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.092834Z	        
2025-09-16T23:46:03.092912Z	    _id,
2025-09-16T23:46:03.093013Z	    _type,
2025-09-16T23:46:03.093096Z	    partNumber,
2025-09-16T23:46:03.093175Z	    "slug": slug.current,
2025-09-16T23:46:03.09326Z	    title,
2025-09-16T23:46:03.093342Z	    shortDescription,
2025-09-16T23:46:03.093422Z	    image,
2025-09-16T23:46:03.0935Z	    brand->{
2025-09-16T23:46:03.093576Z	      name,
2025-09-16T23:46:03.093664Z	      "slug": slug.current,
2025-09-16T23:46:03.093768Z	      logo
2025-09-16T23:46:03.093855Z	    },
2025-09-16T23:46:03.093942Z	    category->{
2025-09-16T23:46:03.094036Z	      name,
2025-09-16T23:46:03.094121Z	      "slug": slug.current
2025-09-16T23:46:03.094209Z	    },
2025-09-16T23:46:03.094296Z	    pricing{
2025-09-16T23:46:03.094384Z	      currency,
2025-09-16T23:46:03.094471Z	      tiers[]{
2025-09-16T23:46:03.094554Z	        quantity,
2025-09-16T23:46:03.094645Z	        price,
2025-09-16T23:46:03.094749Z	        unit
2025-09-16T23:46:03.094842Z	      },
2025-09-16T23:46:03.094931Z	      moq,
2025-09-16T23:46:03.095021Z	      leadTime,
2025-09-16T23:46:03.095111Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.095204Z	      "price": tiers[0].price,
2025-09-16T23:46:03.095298Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.095485Z	    },
2025-09-16T23:46:03.095699Z	    inventory{
2025-09-16T23:46:03.095795Z	      quantity,
2025-09-16T23:46:03.095858Z	      status,
2025-09-16T23:46:03.095917Z	      warehouse,
2025-09-16T23:46:03.095976Z	      lastUpdated,
2025-09-16T23:46:03.096076Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.096156Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.09622Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.096282Z	    },
2025-09-16T23:46:03.09634Z	    isActive,
2025-09-16T23:46:03.096397Z	    isFeatured,
2025-09-16T23:46:03.096499Z	    isNew,
2025-09-16T23:46:03.096565Z	    _createdAt,
2025-09-16T23:46:03.096622Z	    _updatedAt
2025-09-16T23:46:03.096701Z	  
2025-09-16T23:46:03.096847Z	      },
2025-09-16T23:46:03.09698Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:46:03.097136Z	    }
2025-09-16T23:46:03.097317Z	  
2025-09-16T23:46:03.09741Z	Query parameters: {
2025-09-16T23:46:03.097537Z	  limit: 8,
2025-09-16T23:46:03.097642Z	  offset: 0,
2025-09-16T23:46:03.097761Z	  category: undefined,
2025-09-16T23:46:03.097924Z	  brand: 'littelfuse',
2025-09-16T23:46:03.098092Z	  featured: undefined
2025-09-16T23:46:03.098194Z	}
2025-09-16T23:46:03.09833Z	Fetching solutions with query: 
2025-09-16T23:46:03.098482Z	    {
2025-09-16T23:46:03.098721Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.098886Z	        
2025-09-16T23:46:03.09896Z	    _id,
2025-09-16T23:46:03.099017Z	    title,
2025-09-16T23:46:03.099088Z	    "slug": slug.current,
2025-09-16T23:46:03.099146Z	    summary,
2025-09-16T23:46:03.099202Z	    description,
2025-09-16T23:46:03.099277Z	    coverImage,
2025-09-16T23:46:03.099334Z	    primaryBrand->{
2025-09-16T23:46:03.099404Z	      _id,
2025-09-16T23:46:03.099461Z	      name,
2025-09-16T23:46:03.099514Z	      "slug": slug.current,
2025-09-16T23:46:03.099567Z	      logo
2025-09-16T23:46:03.099625Z	    },
2025-09-16T23:46:03.099699Z	    relatedBrands[]->{
2025-09-16T23:46:03.099771Z	      _id,
2025-09-16T23:46:03.099826Z	      name,
2025-09-16T23:46:03.099879Z	      "slug": slug.current,
2025-09-16T23:46:03.099932Z	      logo
2025-09-16T23:46:03.099987Z	    },
2025-09-16T23:46:03.10004Z	    targetMarket,
2025-09-16T23:46:03.100093Z	    complexity,
2025-09-16T23:46:03.100157Z	    publishedAt,
2025-09-16T23:46:03.10021Z	    isPublished,
2025-09-16T23:46:03.100264Z	    isFeatured,
2025-09-16T23:46:03.100324Z	    viewCount,
2025-09-16T23:46:03.100385Z	    _createdAt,
2025-09-16T23:46:03.100453Z	    _updatedAt
2025-09-16T23:46:03.100509Z	  
2025-09-16T23:46:03.100563Z	      },
2025-09-16T23:46:03.100623Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:46:03.100709Z	    }
2025-09-16T23:46:03.100773Z	  
2025-09-16T23:46:03.100828Z	Query parameters: {
2025-09-16T23:46:03.100892Z	  limit: 4,
2025-09-16T23:46:03.100946Z	  offset: 0,
2025-09-16T23:46:03.100999Z	  targetMarket: undefined,
2025-09-16T23:46:03.101055Z	  brand: 'littelfuse',
2025-09-16T23:46:03.101107Z	  featured: undefined
2025-09-16T23:46:03.101159Z	}
2025-09-16T23:46:03.101213Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:46:03.101269Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.101325Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.101388Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:46:03.101453Z	Fetching products with query: 
2025-09-16T23:46:03.101508Z	    {
2025-09-16T23:46:03.101562Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.10162Z	        
2025-09-16T23:46:03.101696Z	    _id,
2025-09-16T23:46:03.101765Z	    _type,
2025-09-16T23:46:03.101825Z	    partNumber,
2025-09-16T23:46:03.101879Z	    "slug": slug.current,
2025-09-16T23:46:03.101933Z	    title,
2025-09-16T23:46:03.101986Z	    shortDescription,
2025-09-16T23:46:03.102049Z	    image,
2025-09-16T23:46:03.102107Z	    brand->{
2025-09-16T23:46:03.102161Z	      name,
2025-09-16T23:46:03.102215Z	      "slug": slug.current,
2025-09-16T23:46:03.102271Z	      logo
2025-09-16T23:46:03.102325Z	    },
2025-09-16T23:46:03.102388Z	    category->{
2025-09-16T23:46:03.102445Z	      name,
2025-09-16T23:46:03.102501Z	      "slug": slug.current
2025-09-16T23:46:03.102555Z	    },
2025-09-16T23:46:03.102612Z	    pricing{
2025-09-16T23:46:03.102665Z	      currency,
2025-09-16T23:46:03.102758Z	      tiers[]{
2025-09-16T23:46:03.10282Z	        quantity,
2025-09-16T23:46:03.102879Z	        price,
2025-09-16T23:46:03.102937Z	        unit
2025-09-16T23:46:03.102992Z	      },
2025-09-16T23:46:03.103048Z	      moq,
2025-09-16T23:46:03.103103Z	      leadTime,
2025-09-16T23:46:03.103163Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.10322Z	      "price": tiers[0].price,
2025-09-16T23:46:03.103275Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.10333Z	    },
2025-09-16T23:46:03.103394Z	    inventory{
2025-09-16T23:46:03.103449Z	      quantity,
2025-09-16T23:46:03.103505Z	      status,
2025-09-16T23:46:03.103571Z	      warehouse,
2025-09-16T23:46:03.103629Z	      lastUpdated,
2025-09-16T23:46:03.103706Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.103769Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.103824Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.10388Z	    },
2025-09-16T23:46:03.103935Z	    isActive,
2025-09-16T23:46:03.103988Z	    isFeatured,
2025-09-16T23:46:03.104043Z	    isNew,
2025-09-16T23:46:03.104096Z	    _createdAt,
2025-09-16T23:46:03.104156Z	    _updatedAt
2025-09-16T23:46:03.104212Z	  
2025-09-16T23:46:03.104265Z	      },
2025-09-16T23:46:03.104318Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:46:03.104383Z	    }
2025-09-16T23:46:03.104439Z	  
2025-09-16T23:46:03.104498Z	Query parameters: {
2025-09-16T23:46:03.104558Z	  limit: 8,
2025-09-16T23:46:03.104614Z	  offset: 0,
2025-09-16T23:46:03.104669Z	  category: undefined,
2025-09-16T23:46:03.104757Z	  brand: 'qualcomm',
2025-09-16T23:46:03.104825Z	  featured: undefined
2025-09-16T23:46:03.104892Z	}
2025-09-16T23:46:03.104948Z	Fetching solutions with query: 
2025-09-16T23:46:03.105002Z	    {
2025-09-16T23:46:03.105059Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.105115Z	        
2025-09-16T23:46:03.105169Z	    _id,
2025-09-16T23:46:03.105221Z	    title,
2025-09-16T23:46:03.105286Z	    "slug": slug.current,
2025-09-16T23:46:03.105341Z	    summary,
2025-09-16T23:46:03.105403Z	    description,
2025-09-16T23:46:03.105464Z	    coverImage,
2025-09-16T23:46:03.105517Z	    primaryBrand->{
2025-09-16T23:46:03.105571Z	      _id,
2025-09-16T23:46:03.105625Z	      name,
2025-09-16T23:46:03.10569Z	      "slug": slug.current,
2025-09-16T23:46:03.10575Z	      logo
2025-09-16T23:46:03.105805Z	    },
2025-09-16T23:46:03.105863Z	    relatedBrands[]->{
2025-09-16T23:46:03.105918Z	      _id,
2025-09-16T23:46:03.105974Z	      name,
2025-09-16T23:46:03.106034Z	      "slug": slug.current,
2025-09-16T23:46:03.10609Z	      logo
2025-09-16T23:46:03.106145Z	    },
2025-09-16T23:46:03.1062Z	    targetMarket,
2025-09-16T23:46:03.106254Z	    complexity,
2025-09-16T23:46:03.10631Z	    publishedAt,
2025-09-16T23:46:03.10637Z	    isPublished,
2025-09-16T23:46:03.106425Z	    isFeatured,
2025-09-16T23:46:03.106479Z	    viewCount,
2025-09-16T23:46:03.106533Z	    _createdAt,
2025-09-16T23:46:03.106593Z	    _updatedAt
2025-09-16T23:46:03.106648Z	  
2025-09-16T23:46:03.106717Z	      },
2025-09-16T23:46:03.106775Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:46:03.106831Z	    }
2025-09-16T23:46:03.106884Z	  
2025-09-16T23:46:03.106937Z	Query parameters: {
2025-09-16T23:46:03.106992Z	  limit: 4,
2025-09-16T23:46:03.107045Z	  offset: 0,
2025-09-16T23:46:03.107097Z	  targetMarket: undefined,
2025-09-16T23:46:03.107155Z	  brand: 'qualcomm',
2025-09-16T23:46:03.10721Z	  featured: undefined
2025-09-16T23:46:03.107263Z	}
2025-09-16T23:46:03.107318Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:46:03.107382Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.107444Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.107501Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:46:03.107557Z	Fetching products with query: 
2025-09-16T23:46:03.107612Z	    {
2025-09-16T23:46:03.107668Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.107738Z	        
2025-09-16T23:46:03.107793Z	    _id,
2025-09-16T23:46:03.107845Z	    _type,
2025-09-16T23:46:03.107904Z	    partNumber,
2025-09-16T23:46:03.107959Z	    "slug": slug.current,
2025-09-16T23:46:03.108015Z	    title,
2025-09-16T23:46:03.108069Z	    shortDescription,
2025-09-16T23:46:03.108122Z	    image,
2025-09-16T23:46:03.108175Z	    brand->{
2025-09-16T23:46:03.108229Z	      name,
2025-09-16T23:46:03.108283Z	      "slug": slug.current,
2025-09-16T23:46:03.108337Z	      logo
2025-09-16T23:46:03.108409Z	    },
2025-09-16T23:46:03.10847Z	    category->{
2025-09-16T23:46:03.108524Z	      name,
2025-09-16T23:46:03.108577Z	      "slug": slug.current
2025-09-16T23:46:03.108631Z	    },
2025-09-16T23:46:03.108702Z	    pricing{
2025-09-16T23:46:03.108758Z	      currency,
2025-09-16T23:46:03.108812Z	      tiers[]{
2025-09-16T23:46:03.108864Z	        quantity,
2025-09-16T23:46:03.108918Z	        price,
2025-09-16T23:46:03.108975Z	        unit
2025-09-16T23:46:03.109032Z	      },
2025-09-16T23:46:03.109086Z	      moq,
2025-09-16T23:46:03.109138Z	      leadTime,
2025-09-16T23:46:03.109196Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.109252Z	      "price": tiers[0].price,
2025-09-16T23:46:03.109306Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.109366Z	    },
2025-09-16T23:46:03.10942Z	    inventory{
2025-09-16T23:46:03.109475Z	      quantity,
2025-09-16T23:46:03.10953Z	      status,
2025-09-16T23:46:03.109582Z	      warehouse,
2025-09-16T23:46:03.109646Z	      lastUpdated,
2025-09-16T23:46:03.109721Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.10978Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.109835Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.109899Z	    },
2025-09-16T23:46:03.109953Z	    isActive,
2025-09-16T23:46:03.110006Z	    isFeatured,
2025-09-16T23:46:03.11006Z	    isNew,
2025-09-16T23:46:03.110114Z	    _createdAt,
2025-09-16T23:46:03.110166Z	    _updatedAt
2025-09-16T23:46:03.110219Z	  
2025-09-16T23:46:03.110271Z	      },
2025-09-16T23:46:03.110324Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:46:03.11039Z	    }
2025-09-16T23:46:03.110444Z	  
2025-09-16T23:46:03.1105Z	Query parameters: {
2025-09-16T23:46:03.110554Z	  limit: 8,
2025-09-16T23:46:03.110606Z	  offset: 0,
2025-09-16T23:46:03.110658Z	  category: undefined,
2025-09-16T23:46:03.111099Z	  brand: 'qualcomm',
2025-09-16T23:46:03.111171Z	  featured: undefined
2025-09-16T23:46:03.111226Z	}
2025-09-16T23:46:03.111279Z	Fetching solutions with query: 
2025-09-16T23:46:03.111333Z	    {
2025-09-16T23:46:03.111395Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.111461Z	        
2025-09-16T23:46:03.111516Z	    _id,
2025-09-16T23:46:03.111569Z	    title,
2025-09-16T23:46:03.111622Z	    "slug": slug.current,
2025-09-16T23:46:03.111691Z	    summary,
2025-09-16T23:46:03.11175Z	    description,
2025-09-16T23:46:03.111909Z	    coverImage,
2025-09-16T23:46:03.113568Z	    primaryBrand->{
2025-09-16T23:46:03.113706Z	      _id,
2025-09-16T23:46:03.113925Z	      name,
2025-09-16T23:46:03.114061Z	      "slug": slug.current,
2025-09-16T23:46:03.114174Z	      logo
2025-09-16T23:46:03.114297Z	    },
2025-09-16T23:46:03.114404Z	    relatedBrands[]->{
2025-09-16T23:46:03.114519Z	      _id,
2025-09-16T23:46:03.114617Z	      name,
2025-09-16T23:46:03.114706Z	      "slug": slug.current,
2025-09-16T23:46:03.114888Z	      logo
2025-09-16T23:46:03.115008Z	    },
2025-09-16T23:46:03.11518Z	    targetMarket,
2025-09-16T23:46:03.115381Z	    complexity,
2025-09-16T23:46:03.115523Z	    publishedAt,
2025-09-16T23:46:03.115594Z	    isPublished,
2025-09-16T23:46:03.115662Z	    isFeatured,
2025-09-16T23:46:03.115747Z	    viewCount,
2025-09-16T23:46:03.115805Z	    _createdAt,
2025-09-16T23:46:03.115862Z	    _updatedAt
2025-09-16T23:46:03.115937Z	  
2025-09-16T23:46:03.116043Z	      },
2025-09-16T23:46:03.116133Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:46:03.116232Z	    }
2025-09-16T23:46:03.116326Z	  
2025-09-16T23:46:03.1167Z	Query parameters: {
2025-09-16T23:46:03.116934Z	  limit: 4,
2025-09-16T23:46:03.117106Z	  offset: 0,
2025-09-16T23:46:03.1172Z	  targetMarket: undefined,
2025-09-16T23:46:03.117348Z	  brand: 'qualcomm',
2025-09-16T23:46:03.117516Z	  featured: undefined
2025-09-16T23:46:03.117632Z	}
2025-09-16T23:46:03.117853Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:46:03.117997Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.118171Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.118419Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:03.118559Z	Fetching products with query: 
2025-09-16T23:46:03.118654Z	    {
2025-09-16T23:46:03.118778Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.11889Z	        
2025-09-16T23:46:03.118988Z	    _id,
2025-09-16T23:46:03.119083Z	    _type,
2025-09-16T23:46:03.119178Z	    partNumber,
2025-09-16T23:46:03.119288Z	    "slug": slug.current,
2025-09-16T23:46:03.119376Z	    title,
2025-09-16T23:46:03.119458Z	    shortDescription,
2025-09-16T23:46:03.119539Z	    image,
2025-09-16T23:46:03.119623Z	    brand->{
2025-09-16T23:46:03.11979Z	      name,
2025-09-16T23:46:03.119883Z	      "slug": slug.current,
2025-09-16T23:46:03.119966Z	      logo
2025-09-16T23:46:03.120054Z	    },
2025-09-16T23:46:03.120142Z	    category->{
2025-09-16T23:46:03.120228Z	      name,
2025-09-16T23:46:03.120317Z	      "slug": slug.current
2025-09-16T23:46:03.120401Z	    },
2025-09-16T23:46:03.120578Z	    pricing{
2025-09-16T23:46:03.120704Z	      currency,
2025-09-16T23:46:03.120803Z	      tiers[]{
2025-09-16T23:46:03.120897Z	        quantity,
2025-09-16T23:46:03.120989Z	        price,
2025-09-16T23:46:03.121089Z	        unit
2025-09-16T23:46:03.12119Z	      },
2025-09-16T23:46:03.121284Z	      moq,
2025-09-16T23:46:03.121376Z	      leadTime,
2025-09-16T23:46:03.121472Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.121564Z	      "price": tiers[0].price,
2025-09-16T23:46:03.121655Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.121764Z	    },
2025-09-16T23:46:03.121844Z	    inventory{
2025-09-16T23:46:03.121932Z	      quantity,
2025-09-16T23:46:03.122032Z	      status,
2025-09-16T23:46:03.122126Z	      warehouse,
2025-09-16T23:46:03.122217Z	      lastUpdated,
2025-09-16T23:46:03.122305Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.122401Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.122492Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.122583Z	    },
2025-09-16T23:46:03.122688Z	    isActive,
2025-09-16T23:46:03.122783Z	    isFeatured,
2025-09-16T23:46:03.122874Z	    isNew,
2025-09-16T23:46:03.12308Z	    _createdAt,
2025-09-16T23:46:03.123181Z	    _updatedAt
2025-09-16T23:46:03.123269Z	  
2025-09-16T23:46:03.123362Z	      },
2025-09-16T23:46:03.123462Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-16T23:46:03.123559Z	    }
2025-09-16T23:46:03.123652Z	  
2025-09-16T23:46:03.123764Z	Query parameters: {
2025-09-16T23:46:03.123861Z	  limit: 8,
2025-09-16T23:46:03.12395Z	  offset: 0,
2025-09-16T23:46:03.124033Z	  category: undefined,
2025-09-16T23:46:03.124119Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:03.124201Z	  featured: undefined
2025-09-16T23:46:03.124303Z	}
2025-09-16T23:46:03.124395Z	Fetching solutions with query: 
2025-09-16T23:46:03.12448Z	    {
2025-09-16T23:46:03.124579Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.124691Z	        
2025-09-16T23:46:03.124786Z	    _id,
2025-09-16T23:46:03.124871Z	    title,
2025-09-16T23:46:03.124958Z	    "slug": slug.current,
2025-09-16T23:46:03.125051Z	    summary,
2025-09-16T23:46:03.125132Z	    description,
2025-09-16T23:46:03.125219Z	    coverImage,
2025-09-16T23:46:03.12531Z	    primaryBrand->{
2025-09-16T23:46:03.12539Z	      _id,
2025-09-16T23:46:03.125472Z	      name,
2025-09-16T23:46:03.125562Z	      "slug": slug.current,
2025-09-16T23:46:03.125651Z	      logo
2025-09-16T23:46:03.125773Z	    },
2025-09-16T23:46:03.125877Z	    relatedBrands[]->{
2025-09-16T23:46:03.125969Z	      _id,
2025-09-16T23:46:03.126062Z	      name,
2025-09-16T23:46:03.126152Z	      "slug": slug.current,
2025-09-16T23:46:03.126254Z	      logo
2025-09-16T23:46:03.126344Z	    },
2025-09-16T23:46:03.126427Z	    targetMarket,
2025-09-16T23:46:03.126517Z	    complexity,
2025-09-16T23:46:03.126604Z	    publishedAt,
2025-09-16T23:46:03.126717Z	    isPublished,
2025-09-16T23:46:03.126818Z	    isFeatured,
2025-09-16T23:46:03.12691Z	    viewCount,
2025-09-16T23:46:03.127001Z	    _createdAt,
2025-09-16T23:46:03.127086Z	    _updatedAt
2025-09-16T23:46:03.12717Z	  
2025-09-16T23:46:03.127254Z	      },
2025-09-16T23:46:03.127344Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-16T23:46:03.127442Z	    }
2025-09-16T23:46:03.127531Z	  
2025-09-16T23:46:03.127625Z	Query parameters: {
2025-09-16T23:46:03.127736Z	  limit: 4,
2025-09-16T23:46:03.127826Z	  offset: 0,
2025-09-16T23:46:03.127907Z	  targetMarket: undefined,
2025-09-16T23:46:03.128Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:03.128093Z	  featured: undefined
2025-09-16T23:46:03.128195Z	}
2025-09-16T23:46:03.128303Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:03.128401Z	Fetching products with query: 
2025-09-16T23:46:03.128496Z	    {
2025-09-16T23:46:03.128587Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.128694Z	        
2025-09-16T23:46:03.128786Z	    _id,
2025-09-16T23:46:03.128878Z	    _type,
2025-09-16T23:46:03.128969Z	    partNumber,
2025-09-16T23:46:03.129057Z	    "slug": slug.current,
2025-09-16T23:46:03.129146Z	    title,
2025-09-16T23:46:03.129268Z	    shortDescription,
2025-09-16T23:46:03.129366Z	    image,
2025-09-16T23:46:03.129451Z	    brand->{
2025-09-16T23:46:03.129541Z	      name,
2025-09-16T23:46:03.129623Z	      "slug": slug.current,
2025-09-16T23:46:03.129736Z	      logo
2025-09-16T23:46:03.129826Z	    },
2025-09-16T23:46:03.12992Z	    category->{
2025-09-16T23:46:03.130012Z	      name,
2025-09-16T23:46:03.1301Z	      "slug": slug.current
2025-09-16T23:46:03.130182Z	    },
2025-09-16T23:46:03.130269Z	    pricing{
2025-09-16T23:46:03.130365Z	      currency,
2025-09-16T23:46:03.13046Z	      tiers[]{
2025-09-16T23:46:03.13055Z	        quantity,
2025-09-16T23:46:03.130657Z	        price,
2025-09-16T23:46:03.130767Z	        unit
2025-09-16T23:46:03.130857Z	      },
2025-09-16T23:46:03.130943Z	      moq,
2025-09-16T23:46:03.131029Z	      leadTime,
2025-09-16T23:46:03.13113Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.131219Z	      "price": tiers[0].price,
2025-09-16T23:46:03.131315Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.131402Z	    },
2025-09-16T23:46:03.131489Z	    inventory{
2025-09-16T23:46:03.131584Z	      quantity,
2025-09-16T23:46:03.131686Z	      status,
2025-09-16T23:46:03.131778Z	      warehouse,
2025-09-16T23:46:03.131865Z	      lastUpdated,
2025-09-16T23:46:03.131961Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.132059Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.132149Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.132249Z	    },
2025-09-16T23:46:03.132334Z	    isActive,
2025-09-16T23:46:03.132414Z	    isFeatured,
2025-09-16T23:46:03.132509Z	    isNew,
2025-09-16T23:46:03.132598Z	    _createdAt,
2025-09-16T23:46:03.13271Z	    _updatedAt
2025-09-16T23:46:03.132804Z	  
2025-09-16T23:46:03.132894Z	      },
2025-09-16T23:46:03.132982Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-16T23:46:03.133076Z	    }
2025-09-16T23:46:03.133159Z	  
2025-09-16T23:46:03.133244Z	Query parameters: {
2025-09-16T23:46:03.133335Z	  limit: 8,
2025-09-16T23:46:03.133419Z	  offset: 0,
2025-09-16T23:46:03.133509Z	  category: undefined,
2025-09-16T23:46:03.133593Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:03.133691Z	  featured: undefined
2025-09-16T23:46:03.133787Z	}
2025-09-16T23:46:03.133878Z	Fetching solutions with query: 
2025-09-16T23:46:03.133964Z	    {
2025-09-16T23:46:03.134045Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.134149Z	        
2025-09-16T23:46:03.134262Z	    _id,
2025-09-16T23:46:03.134358Z	    title,
2025-09-16T23:46:03.134451Z	    "slug": slug.current,
2025-09-16T23:46:03.134543Z	    summary,
2025-09-16T23:46:03.134629Z	    description,
2025-09-16T23:46:03.134733Z	    coverImage,
2025-09-16T23:46:03.134816Z	    primaryBrand->{
2025-09-16T23:46:03.134901Z	      _id,
2025-09-16T23:46:03.134989Z	      name,
2025-09-16T23:46:03.135077Z	      "slug": slug.current,
2025-09-16T23:46:03.135174Z	      logo
2025-09-16T23:46:03.135262Z	    },
2025-09-16T23:46:03.135372Z	    relatedBrands[]->{
2025-09-16T23:46:03.13546Z	      _id,
2025-09-16T23:46:03.135553Z	      name,
2025-09-16T23:46:03.135637Z	      "slug": slug.current,
2025-09-16T23:46:03.135775Z	      logo
2025-09-16T23:46:03.135875Z	    },
2025-09-16T23:46:03.135965Z	    targetMarket,
2025-09-16T23:46:03.136138Z	    complexity,
2025-09-16T23:46:03.136241Z	    publishedAt,
2025-09-16T23:46:03.136335Z	    isPublished,
2025-09-16T23:46:03.136433Z	    isFeatured,
2025-09-16T23:46:03.136533Z	    viewCount,
2025-09-16T23:46:03.136633Z	    _createdAt,
2025-09-16T23:46:03.136748Z	    _updatedAt
2025-09-16T23:46:03.136846Z	  
2025-09-16T23:46:03.136927Z	      },
2025-09-16T23:46:03.137007Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-16T23:46:03.137095Z	    }
2025-09-16T23:46:03.137186Z	  
2025-09-16T23:46:03.137274Z	Query parameters: {
2025-09-16T23:46:03.137371Z	  limit: 4,
2025-09-16T23:46:03.13746Z	  offset: 0,
2025-09-16T23:46:03.137543Z	  targetMarket: undefined,
2025-09-16T23:46:03.137626Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:03.137734Z	  featured: undefined
2025-09-16T23:46:03.137959Z	}
2025-09-16T23:46:03.138181Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:03.138317Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:03.138506Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.138612Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.138721Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.138852Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.138994Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-16T23:46:03.139097Z	Fetching products with query: 
2025-09-16T23:46:03.139201Z	    {
2025-09-16T23:46:03.13931Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.13942Z	        
2025-09-16T23:46:03.13955Z	    _id,
2025-09-16T23:46:03.139651Z	    _type,
2025-09-16T23:46:03.139758Z	    partNumber,
2025-09-16T23:46:03.139859Z	    "slug": slug.current,
2025-09-16T23:46:03.139955Z	    title,
2025-09-16T23:46:03.140059Z	    shortDescription,
2025-09-16T23:46:03.140155Z	    image,
2025-09-16T23:46:03.140246Z	    brand->{
2025-09-16T23:46:03.140333Z	      name,
2025-09-16T23:46:03.140477Z	      "slug": slug.current,
2025-09-16T23:46:03.140624Z	      logo
2025-09-16T23:46:03.140742Z	    },
2025-09-16T23:46:03.14086Z	    category->{
2025-09-16T23:46:03.140971Z	      name,
2025-09-16T23:46:03.141053Z	      "slug": slug.current
2025-09-16T23:46:03.141118Z	    },
2025-09-16T23:46:03.141208Z	    pricing{
2025-09-16T23:46:03.141306Z	      currency,
2025-09-16T23:46:03.141404Z	      tiers[]{
2025-09-16T23:46:03.141527Z	        quantity,
2025-09-16T23:46:03.141664Z	        price,
2025-09-16T23:46:03.141801Z	        unit
2025-09-16T23:46:03.141902Z	      },
2025-09-16T23:46:03.14203Z	      moq,
2025-09-16T23:46:03.142158Z	      leadTime,
2025-09-16T23:46:03.14233Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.142441Z	      "price": tiers[0].price,
2025-09-16T23:46:03.142571Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.142709Z	    },
2025-09-16T23:46:03.142825Z	    inventory{
2025-09-16T23:46:03.142948Z	      quantity,
2025-09-16T23:46:03.143066Z	      status,
2025-09-16T23:46:03.143165Z	      warehouse,
2025-09-16T23:46:03.143267Z	      lastUpdated,
2025-09-16T23:46:03.143368Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.14347Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.143585Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.143752Z	    },
2025-09-16T23:46:03.143876Z	    isActive,
2025-09-16T23:46:03.143996Z	    isFeatured,
2025-09-16T23:46:03.144111Z	    isNew,
2025-09-16T23:46:03.144236Z	    _createdAt,
2025-09-16T23:46:03.144371Z	    _updatedAt
2025-09-16T23:46:03.144509Z	  
2025-09-16T23:46:03.144619Z	      },
2025-09-16T23:46:03.144766Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-16T23:46:03.144899Z	    }
2025-09-16T23:46:03.144996Z	  
2025-09-16T23:46:03.145098Z	Query parameters: {
2025-09-16T23:46:03.145199Z	  limit: 8,
2025-09-16T23:46:03.145341Z	  offset: 0,
2025-09-16T23:46:03.145441Z	  category: undefined,
2025-09-16T23:46:03.145539Z	  brand: 'semikron',
2025-09-16T23:46:03.145741Z	  featured: undefined
2025-09-16T23:46:03.145822Z	}
2025-09-16T23:46:03.145968Z	Fetching solutions with query: 
2025-09-16T23:46:03.146155Z	    {
2025-09-16T23:46:03.14631Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.146489Z	        
2025-09-16T23:46:03.14657Z	    _id,
2025-09-16T23:46:03.146659Z	    title,
2025-09-16T23:46:03.147164Z	    "slug": slug.current,
2025-09-16T23:46:03.147253Z	    summary,
2025-09-16T23:46:03.1475Z	    description,
2025-09-16T23:46:03.147599Z	    coverImage,
2025-09-16T23:46:03.147774Z	    primaryBrand->{
2025-09-16T23:46:03.147922Z	      _id,
2025-09-16T23:46:03.148119Z	      name,
2025-09-16T23:46:03.14819Z	      "slug": slug.current,
2025-09-16T23:46:03.148323Z	      logo
2025-09-16T23:46:03.148437Z	    },
2025-09-16T23:46:03.148603Z	    relatedBrands[]->{
2025-09-16T23:46:03.148769Z	      _id,
2025-09-16T23:46:03.148906Z	      name,
2025-09-16T23:46:03.149051Z	      "slug": slug.current,
2025-09-16T23:46:03.149219Z	      logo
2025-09-16T23:46:03.149364Z	    },
2025-09-16T23:46:03.149521Z	    targetMarket,
2025-09-16T23:46:03.149661Z	    complexity,
2025-09-16T23:46:03.149864Z	    publishedAt,
2025-09-16T23:46:03.149939Z	    isPublished,
2025-09-16T23:46:03.150147Z	    isFeatured,
2025-09-16T23:46:03.15027Z	    viewCount,
2025-09-16T23:46:03.150335Z	    _createdAt,
2025-09-16T23:46:03.150404Z	    _updatedAt
2025-09-16T23:46:03.150465Z	  
2025-09-16T23:46:03.150693Z	      },
2025-09-16T23:46:03.150847Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-16T23:46:03.151007Z	    }
2025-09-16T23:46:03.151126Z	  
2025-09-16T23:46:03.151233Z	Query parameters: {
2025-09-16T23:46:03.15138Z	  limit: 4,
2025-09-16T23:46:03.151496Z	  offset: 0,
2025-09-16T23:46:03.151607Z	  targetMarket: undefined,
2025-09-16T23:46:03.151722Z	  brand: 'semikron',
2025-09-16T23:46:03.151829Z	  featured: undefined
2025-09-16T23:46:03.151912Z	}
2025-09-16T23:46:03.15207Z	✅ [getBrandData] Found brand: Semikron
2025-09-16T23:46:03.152174Z	Products fetch result: {
2025-09-16T23:46:03.152267Z	  totalProducts: 1,
2025-09-16T23:46:03.152371Z	  fetchedProducts: 1,
2025-09-16T23:46:03.152491Z	  firstProduct: {
2025-09-16T23:46:03.152591Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-16T23:46:03.152701Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-16T23:46:03.152812Z	    _type: 'product',
2025-09-16T23:46:03.152927Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-16T23:46:03.153023Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-16T23:46:03.153126Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:03.153233Z	    image: null,
2025-09-16T23:46:03.153338Z	    inventory: {
2025-09-16T23:46:03.153436Z	      inStock: true,
2025-09-16T23:46:03.153563Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-16T23:46:03.153662Z	      quantity: 0,
2025-09-16T23:46:03.153769Z	      status: 'in_stock',
2025-09-16T23:46:03.153839Z	      warehouse: null
2025-09-16T23:46:03.153949Z	    },
2025-09-16T23:46:03.154008Z	    isActive: true,
2025-09-16T23:46:03.154061Z	    isFeatured: false,
2025-09-16T23:46:03.154116Z	    isNew: false,
2025-09-16T23:46:03.15417Z	    partNumber: 'SKKT106/16E',
2025-09-16T23:46:03.154223Z	    pricing: {
2025-09-16T23:46:03.154278Z	      currency: 'CNY',
2025-09-16T23:46:03.154331Z	      leadTime: null,
2025-09-16T23:46:03.154384Z	      moq: null,
2025-09-16T23:46:03.154438Z	      price: null,
2025-09-16T23:46:03.154499Z	      tiers: null
2025-09-16T23:46:03.154566Z	    },
2025-09-16T23:46:03.154645Z	    shortDescription: 'SKKT106/16E',
2025-09-16T23:46:03.154729Z	    slug: 'SKKT106/16E',
2025-09-16T23:46:03.154789Z	    title: 'SKKT106/16E'
2025-09-16T23:46:03.154859Z	  }
2025-09-16T23:46:03.154916Z	}
2025-09-16T23:46:03.15497Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.155035Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-16T23:46:03.155094Z	Fetching products with query: 
2025-09-16T23:46:03.155156Z	    {
2025-09-16T23:46:03.155216Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.155272Z	        
2025-09-16T23:46:03.155325Z	    _id,
2025-09-16T23:46:03.155384Z	    _type,
2025-09-16T23:46:03.155437Z	    partNumber,
2025-09-16T23:46:03.155498Z	    "slug": slug.current,
2025-09-16T23:46:03.155551Z	    title,
2025-09-16T23:46:03.155604Z	    shortDescription,
2025-09-16T23:46:03.155656Z	    image,
2025-09-16T23:46:03.155739Z	    brand->{
2025-09-16T23:46:03.156011Z	      name,
2025-09-16T23:46:03.156151Z	      "slug": slug.current,
2025-09-16T23:46:03.156335Z	      logo
2025-09-16T23:46:03.156441Z	    },
2025-09-16T23:46:03.156519Z	    category->{
2025-09-16T23:46:03.156599Z	      name,
2025-09-16T23:46:03.15672Z	      "slug": slug.current
2025-09-16T23:46:03.156838Z	    },
2025-09-16T23:46:03.15694Z	    pricing{
2025-09-16T23:46:03.157034Z	      currency,
2025-09-16T23:46:03.157142Z	      tiers[]{
2025-09-16T23:46:03.157249Z	        quantity,
2025-09-16T23:46:03.157346Z	        price,
2025-09-16T23:46:03.15744Z	        unit
2025-09-16T23:46:03.157544Z	      },
2025-09-16T23:46:03.157638Z	      moq,
2025-09-16T23:46:03.15774Z	      leadTime,
2025-09-16T23:46:03.157814Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.157881Z	      "price": tiers[0].price,
2025-09-16T23:46:03.157979Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.158085Z	    },
2025-09-16T23:46:03.158181Z	    inventory{
2025-09-16T23:46:03.158274Z	      quantity,
2025-09-16T23:46:03.158375Z	      status,
2025-09-16T23:46:03.158471Z	      warehouse,
2025-09-16T23:46:03.158575Z	      lastUpdated,
2025-09-16T23:46:03.158718Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.158799Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.158892Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.159006Z	    },
2025-09-16T23:46:03.159114Z	    isActive,
2025-09-16T23:46:03.159256Z	    isFeatured,
2025-09-16T23:46:03.15934Z	    isNew,
2025-09-16T23:46:03.159419Z	    _createdAt,
2025-09-16T23:46:03.159545Z	    _updatedAt
2025-09-16T23:46:03.159652Z	  
2025-09-16T23:46:03.159785Z	      },
2025-09-16T23:46:03.159864Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-16T23:46:03.159985Z	    }
2025-09-16T23:46:03.160099Z	  
2025-09-16T23:46:03.1602Z	Query parameters: {
2025-09-16T23:46:03.160344Z	  limit: 8,
2025-09-16T23:46:03.160463Z	  offset: 0,
2025-09-16T23:46:03.160634Z	  category: undefined,
2025-09-16T23:46:03.160752Z	  brand: 'semikron',
2025-09-16T23:46:03.160856Z	  featured: undefined
2025-09-16T23:46:03.160963Z	}
2025-09-16T23:46:03.161075Z	Fetching solutions with query: 
2025-09-16T23:46:03.161171Z	    {
2025-09-16T23:46:03.161297Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.161429Z	        
2025-09-16T23:46:03.161584Z	    _id,
2025-09-16T23:46:03.161724Z	    title,
2025-09-16T23:46:03.161837Z	    "slug": slug.current,
2025-09-16T23:46:03.161963Z	    summary,
2025-09-16T23:46:03.162096Z	    description,
2025-09-16T23:46:03.162216Z	    coverImage,
2025-09-16T23:46:03.16233Z	    primaryBrand->{
2025-09-16T23:46:03.162455Z	      _id,
2025-09-16T23:46:03.162565Z	      name,
2025-09-16T23:46:03.162694Z	      "slug": slug.current,
2025-09-16T23:46:03.162799Z	      logo
2025-09-16T23:46:03.162904Z	    },
2025-09-16T23:46:03.162999Z	    relatedBrands[]->{
2025-09-16T23:46:03.163103Z	      _id,
2025-09-16T23:46:03.163208Z	      name,
2025-09-16T23:46:03.163307Z	      "slug": slug.current,
2025-09-16T23:46:03.163402Z	      logo
2025-09-16T23:46:03.163508Z	    },
2025-09-16T23:46:03.163624Z	    targetMarket,
2025-09-16T23:46:03.163742Z	    complexity,
2025-09-16T23:46:03.163846Z	    publishedAt,
2025-09-16T23:46:03.163979Z	    isPublished,
2025-09-16T23:46:03.164081Z	    isFeatured,
2025-09-16T23:46:03.164171Z	    viewCount,
2025-09-16T23:46:03.164245Z	    _createdAt,
2025-09-16T23:46:03.164303Z	    _updatedAt
2025-09-16T23:46:03.16443Z	  
2025-09-16T23:46:03.164511Z	      },
2025-09-16T23:46:03.164602Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-16T23:46:03.164815Z	    }
2025-09-16T23:46:03.164901Z	  
2025-09-16T23:46:03.164986Z	Query parameters: {
2025-09-16T23:46:03.165109Z	  limit: 4,
2025-09-16T23:46:03.165223Z	  offset: 0,
2025-09-16T23:46:03.165348Z	  targetMarket: undefined,
2025-09-16T23:46:03.165449Z	  brand: 'semikron',
2025-09-16T23:46:03.165595Z	  featured: undefined
2025-09-16T23:46:03.165715Z	}
2025-09-16T23:46:03.165833Z	✅ [getBrandData] Found brand: Semikron
2025-09-16T23:46:03.165949Z	Products fetch result: {
2025-09-16T23:46:03.16605Z	  totalProducts: 1,
2025-09-16T23:46:03.166142Z	  fetchedProducts: 1,
2025-09-16T23:46:03.166234Z	  firstProduct: {
2025-09-16T23:46:03.166292Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-16T23:46:03.166364Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-16T23:46:03.166464Z	    _type: 'product',
2025-09-16T23:46:03.166657Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-16T23:46:03.166781Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-16T23:46:03.166883Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:03.16697Z	    image: null,
2025-09-16T23:46:03.167055Z	    inventory: {
2025-09-16T23:46:03.167151Z	      inStock: true,
2025-09-16T23:46:03.16726Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-16T23:46:03.167362Z	      quantity: 0,
2025-09-16T23:46:03.16747Z	      status: 'in_stock',
2025-09-16T23:46:03.167574Z	      warehouse: null
2025-09-16T23:46:03.167667Z	    },
2025-09-16T23:46:03.167783Z	    isActive: true,
2025-09-16T23:46:03.167891Z	    isFeatured: false,
2025-09-16T23:46:03.168007Z	    isNew: false,
2025-09-16T23:46:03.16807Z	    partNumber: 'SKKT106/16E',
2025-09-16T23:46:03.168125Z	    pricing: {
2025-09-16T23:46:03.168181Z	      currency: 'CNY',
2025-09-16T23:46:03.168233Z	      leadTime: null,
2025-09-16T23:46:03.168287Z	      moq: null,
2025-09-16T23:46:03.168339Z	      price: null,
2025-09-16T23:46:03.168391Z	      tiers: null
2025-09-16T23:46:03.168444Z	    },
2025-09-16T23:46:03.168509Z	    shortDescription: 'SKKT106/16E',
2025-09-16T23:46:03.1686Z	    slug: 'SKKT106/16E',
2025-09-16T23:46:03.168718Z	    title: 'SKKT106/16E'
2025-09-16T23:46:03.168781Z	  }
2025-09-16T23:46:03.168837Z	}
2025-09-16T23:46:03.16889Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.168953Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-16T23:46:03.169011Z	Fetching products with query: 
2025-09-16T23:46:03.169064Z	    {
2025-09-16T23:46:03.169117Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.169177Z	        
2025-09-16T23:46:03.169231Z	    _id,
2025-09-16T23:46:03.169285Z	    _type,
2025-09-16T23:46:03.169337Z	    partNumber,
2025-09-16T23:46:03.169389Z	    "slug": slug.current,
2025-09-16T23:46:03.169442Z	    title,
2025-09-16T23:46:03.169502Z	    shortDescription,
2025-09-16T23:46:03.169556Z	    image,
2025-09-16T23:46:03.169611Z	    brand->{
2025-09-16T23:46:03.169888Z	      name,
2025-09-16T23:46:03.169966Z	      "slug": slug.current,
2025-09-16T23:46:03.170022Z	      logo
2025-09-16T23:46:03.170079Z	    },
2025-09-16T23:46:03.170132Z	    category->{
2025-09-16T23:46:03.170188Z	      name,
2025-09-16T23:46:03.170242Z	      "slug": slug.current
2025-09-16T23:46:03.170295Z	    },
2025-09-16T23:46:03.170348Z	    pricing{
2025-09-16T23:46:03.1704Z	      currency,
2025-09-16T23:46:03.170461Z	      tiers[]{
2025-09-16T23:46:03.170524Z	        quantity,
2025-09-16T23:46:03.170594Z	        price,
2025-09-16T23:46:03.170652Z	        unit
2025-09-16T23:46:03.17074Z	      },
2025-09-16T23:46:03.170799Z	      moq,
2025-09-16T23:46:03.170852Z	      leadTime,
2025-09-16T23:46:03.170909Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.170964Z	      "price": tiers[0].price,
2025-09-16T23:46:03.171017Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.17107Z	    },
2025-09-16T23:46:03.171123Z	    inventory{
2025-09-16T23:46:03.171175Z	      quantity,
2025-09-16T23:46:03.171229Z	      status,
2025-09-16T23:46:03.171281Z	      warehouse,
2025-09-16T23:46:03.171334Z	      lastUpdated,
2025-09-16T23:46:03.171387Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.17144Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.171501Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.171557Z	    },
2025-09-16T23:46:03.17161Z	    isActive,
2025-09-16T23:46:03.171668Z	    isFeatured,
2025-09-16T23:46:03.171736Z	    isNew,
2025-09-16T23:46:03.171795Z	    _createdAt,
2025-09-16T23:46:03.172269Z	    _updatedAt
2025-09-16T23:46:03.172497Z	  
2025-09-16T23:46:03.172667Z	      },
2025-09-16T23:46:03.172931Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-16T23:46:03.173021Z	    }
2025-09-16T23:46:03.173078Z	  
2025-09-16T23:46:03.173132Z	Query parameters: {
2025-09-16T23:46:03.173188Z	  limit: 8,
2025-09-16T23:46:03.17324Z	  offset: 0,
2025-09-16T23:46:03.173293Z	  category: undefined,
2025-09-16T23:46:03.173346Z	  brand: 'ixys',
2025-09-16T23:46:03.173399Z	  featured: undefined
2025-09-16T23:46:03.173477Z	}
2025-09-16T23:46:03.173533Z	Fetching solutions with query: 
2025-09-16T23:46:03.173585Z	    {
2025-09-16T23:46:03.173638Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.17372Z	        
2025-09-16T23:46:03.17378Z	    _id,
2025-09-16T23:46:03.173833Z	    title,
2025-09-16T23:46:03.173887Z	    "slug": slug.current,
2025-09-16T23:46:03.173951Z	    summary,
2025-09-16T23:46:03.174003Z	    description,
2025-09-16T23:46:03.174062Z	    coverImage,
2025-09-16T23:46:03.174115Z	    primaryBrand->{
2025-09-16T23:46:03.174171Z	      _id,
2025-09-16T23:46:03.174226Z	      name,
2025-09-16T23:46:03.174277Z	      "slug": slug.current,
2025-09-16T23:46:03.174329Z	      logo
2025-09-16T23:46:03.174381Z	    },
2025-09-16T23:46:03.174433Z	    relatedBrands[]->{
2025-09-16T23:46:03.174492Z	      _id,
2025-09-16T23:46:03.174547Z	      name,
2025-09-16T23:46:03.1746Z	      "slug": slug.current,
2025-09-16T23:46:03.174669Z	      logo
2025-09-16T23:46:03.174756Z	    },
2025-09-16T23:46:03.174811Z	    targetMarket,
2025-09-16T23:46:03.174863Z	    complexity,
2025-09-16T23:46:03.174933Z	    publishedAt,
2025-09-16T23:46:03.174985Z	    isPublished,
2025-09-16T23:46:03.175038Z	    isFeatured,
2025-09-16T23:46:03.17509Z	    viewCount,
2025-09-16T23:46:03.175142Z	    _createdAt,
2025-09-16T23:46:03.175194Z	    _updatedAt
2025-09-16T23:46:03.175247Z	  
2025-09-16T23:46:03.175298Z	      },
2025-09-16T23:46:03.175356Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-16T23:46:03.175417Z	    }
2025-09-16T23:46:03.175477Z	  
2025-09-16T23:46:03.175531Z	Query parameters: {
2025-09-16T23:46:03.175587Z	  limit: 4,
2025-09-16T23:46:03.175639Z	  offset: 0,
2025-09-16T23:46:03.175704Z	  targetMarket: undefined,
2025-09-16T23:46:03.175758Z	  brand: 'ixys',
2025-09-16T23:46:03.175811Z	  featured: undefined
2025-09-16T23:46:03.175863Z	}
2025-09-16T23:46:03.175919Z	✅ [getBrandData] Found brand: IXYS
2025-09-16T23:46:03.175974Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.176028Z	Solutions fetch result: {
2025-09-16T23:46:03.176082Z	  totalSolutions: 1,
2025-09-16T23:46:03.176134Z	  fetchedSolutions: 1,
2025-09-16T23:46:03.17619Z	  firstSolution: {
2025-09-16T23:46:03.176244Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-16T23:46:03.176297Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-16T23:46:03.17635Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-16T23:46:03.176403Z	    complexity: 'medium',
2025-09-16T23:46:03.17647Z	    co❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:03.176537Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:03.176597Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:03.176651Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:03.176777Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424)
2025-09-16T23:46:03.176839Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:03.176893Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:03.176946Z	}
2025-09-16T23:46:03.177001Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:03.177055Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:03.177107Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:03.177163Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:03.177233Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424)
2025-09-16T23:46:03.177288Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:03.177343Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:03.177395Z	}
2025-09-16T23:46:03.177466Z	verImage: null,
2025-09-16T23:46:03.177523Z	    description: [ [Object] ],
2025-09-16T23:46:03.177577Z	    isFeatured: false,
2025-09-16T23:46:03.17763Z	    isPublished: true,
2025-09-16T23:46:03.177704Z	    primaryBrand: {
2025-09-16T23:46:03.177769Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:46:03.177829Z	      logo: null,
2025-09-16T23:46:03.177882Z	      name: 'IXYS',
2025-09-16T23:46:03.177941Z	      slug: 'ixys'
2025-09-16T23:46:03.177993Z	    },
2025-09-16T23:46:03.178051Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-16T23:46:03.178105Z	    relatedBrands: null,
2025-09-16T23:46:03.178157Z	    slug: '99999',
2025-09-16T23:46:03.17821Z	    summary: '99999',
2025-09-16T23:46:03.178262Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:03.178314Z	    title: '99999',
2025-09-16T23:46:03.178368Z	    viewCount: 0
2025-09-16T23:46:03.17842Z	  }
2025-09-16T23:46:03.178479Z	}
2025-09-16T23:46:03.178533Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-16T23:46:03.178588Z	Fetching products with query: 
2025-09-16T23:46:03.178642Z	    {
2025-09-16T23:46:03.178725Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.178788Z	        
2025-09-16T23:46:03.178842Z	    _id,
2025-09-16T23:46:03.178895Z	    _type,
2025-09-16T23:46:03.178948Z	    partNumber,
2025-09-16T23:46:03.179Z	    "slug": slug.current,
2025-09-16T23:46:03.179106Z	    title,
2025-09-16T23:46:03.179164Z	    shortDescription,
2025-09-16T23:46:03.179232Z	    image,
2025-09-16T23:46:03.179288Z	    brand->{
2025-09-16T23:46:03.179341Z	      name,
2025-09-16T23:46:03.179399Z	      "slug": slug.current,
2025-09-16T23:46:03.179459Z	      logo
2025-09-16T23:46:03.179513Z	    },
2025-09-16T23:46:03.179643Z	    category->{
2025-09-16T23:46:03.179796Z	      name,
2025-09-16T23:46:03.179895Z	      "slug": slug.current
2025-09-16T23:46:03.180005Z	    },
2025-09-16T23:46:03.18011Z	    pricing{
2025-09-16T23:46:03.180209Z	      currency,
2025-09-16T23:46:03.180307Z	      tiers[]{
2025-09-16T23:46:03.180405Z	        quantity,
2025-09-16T23:46:03.180518Z	        price,
2025-09-16T23:46:03.180619Z	        unit
2025-09-16T23:46:03.180735Z	      },
2025-09-16T23:46:03.18084Z	      moq,
2025-09-16T23:46:03.180939Z	      leadTime,
2025-09-16T23:46:03.181039Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.181142Z	      "price": tiers[0].price,
2025-09-16T23:46:03.181251Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.181352Z	    },
2025-09-16T23:46:03.181456Z	    inventory{
2025-09-16T23:46:03.181552Z	      quantity,
2025-09-16T23:46:03.18166Z	      status,
2025-09-16T23:46:03.181784Z	      warehouse,
2025-09-16T23:46:03.181897Z	      lastUpdated,
2025-09-16T23:46:03.182003Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.182096Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.182193Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.182284Z	    },
2025-09-16T23:46:03.182383Z	    isActive,
2025-09-16T23:46:03.182488Z	    isFeatured,
2025-09-16T23:46:03.182596Z	    isNew,
2025-09-16T23:46:03.18271Z	    _createdAt,
2025-09-16T23:46:03.182815Z	    _updatedAt
2025-09-16T23:46:03.182915Z	  
2025-09-16T23:46:03.183014Z	      },
2025-09-16T23:46:03.183113Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-16T23:46:03.183231Z	    }
2025-09-16T23:46:03.183329Z	  
2025-09-16T23:46:03.18343Z	Query parameters: {
2025-09-16T23:46:03.183536Z	  limit: 8,
2025-09-16T23:46:03.183642Z	  offset: 0,
2025-09-16T23:46:03.183758Z	  category: undefined,
2025-09-16T23:46:03.183863Z	  brand: 'ixys',
2025-09-16T23:46:03.18394Z	  featured: undefined
2025-09-16T23:46:03.184025Z	}
2025-09-16T23:46:03.184139Z	Fetching solutions with query: 
2025-09-16T23:46:03.184245Z	    {
2025-09-16T23:46:03.184346Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.184458Z	        
2025-09-16T23:46:03.18456Z	    _id,
2025-09-16T23:46:03.184661Z	    title,
2025-09-16T23:46:03.184768Z	    "slug": slug.current,
2025-09-16T23:46:03.184908Z	    summary,
2025-09-16T23:46:03.185077Z	    description,
2025-09-16T23:46:03.185157Z	    coverImage,
2025-09-16T23:46:03.185289Z	    primaryBrand->{
2025-09-16T23:46:03.185399Z	      _id,
2025-09-16T23:46:03.185508Z	      name,
2025-09-16T23:46:03.185641Z	      "slug": slug.current,
2025-09-16T23:46:03.185767Z	      logo
2025-09-16T23:46:03.185879Z	    },
2025-09-16T23:46:03.185973Z	    relatedBrands[]->{
2025-09-16T23:46:03.186093Z	      _id,
2025-09-16T23:46:03.186203Z	      name,
2025-09-16T23:46:03.186323Z	      "slug": slug.current,
2025-09-16T23:46:03.186445Z	      logo
2025-09-16T23:46:03.186563Z	    },
2025-09-16T23:46:03.18671Z	    targetMarket,
2025-09-16T23:46:03.18684Z	    complexity,
2025-09-16T23:46:03.186948Z	    publishedAt,
2025-09-16T23:46:03.187141Z	    isPublished,
2025-09-16T23:46:03.187217Z	    isFeatured,
2025-09-16T23:46:03.18739Z	    viewCount,
2025-09-16T23:46:03.187534Z	    _createdAt,
2025-09-16T23:46:03.187701Z	    _updatedAt
2025-09-16T23:46:03.187815Z	  
2025-09-16T23:46:03.187911Z	      },
2025-09-16T23:46:03.187999Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-16T23:46:03.188183Z	    }
2025-09-16T23:46:03.188282Z	  
2025-09-16T23:46:03.188396Z	Query parameters: {
2025-09-16T23:46:03.188505Z	  limit: 4,
2025-09-16T23:46:03.188619Z	  offset: 0,
2025-09-16T23:46:03.188753Z	  targetMarket: undefined,
2025-09-16T23:46:03.18892Z	  brand: 'ixys',
2025-09-16T23:46:03.189041Z	  featured: undefined
2025-09-16T23:46:03.189157Z	}
2025-09-16T23:46:03.189318Z	✅ [getBrandData] Found brand: IXYS
2025-09-16T23:46:03.189422Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.189582Z	Solutions fetch result: {
2025-09-16T23:46:03.189712Z	  totalSolutions: 1,
2025-09-16T23:46:03.189793Z	  fetchedSolutions: 1,
2025-09-16T23:46:03.189881Z	  firstSolution: {
2025-09-16T23:46:03.190047Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-16T23:46:03.190119Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-16T23:46:03.190207Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-16T23:46:03.190305Z	    complexity: 'medium',
2025-09-16T23:46:03.1904Z	    coverImage: null,
2025-09-16T23:46:03.190531Z	    description: [ [Object] ],
2025-09-16T23:46:03.190632Z	    isFeatured: false,
2025-09-16T23:46:03.190747Z	    isPublished: true,
2025-09-16T23:46:03.190845Z	    primaryBrand: {
2025-09-16T23:46:03.190997Z	      _id:❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:03.191086Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:03.191201Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:03.191334Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:03.191524Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424)
2025-09-16T23:46:03.191661Z	    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-09-16T23:46:03.191801Z	    at runNextTicks (node:internal/process/task_queues:64:3)
2025-09-16T23:46:03.191906Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:46:03.19201Z	    at process.processTimers (node:internal/timers:512:7) {
2025-09-16T23:46:03.192132Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:03.192262Z	}
2025-09-16T23:46:03.192404Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:03.192564Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:03.192717Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:03.192847Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:03.192997Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424)
2025-09-16T23:46:03.193116Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:03.193284Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:03.193402Z	}
2025-09-16T23:46:03.193519Z	 '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:46:03.193595Z	      logo: null,
2025-09-16T23:46:03.193705Z	      name: 'IXYS',
2025-09-16T23:46:03.19381Z	      slug: 'ixys'
2025-09-16T23:46:03.193943Z	    },
2025-09-16T23:46:03.194049Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-16T23:46:03.19416Z	    relatedBrands: null,
2025-09-16T23:46:03.194231Z	    slug: '99999',
2025-09-16T23:46:03.194334Z	    summary: '99999',
2025-09-16T23:46:03.194432Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:03.194549Z	    title: '99999',
2025-09-16T23:46:03.194624Z	    viewCount: 0
2025-09-16T23:46:03.194743Z	  }
2025-09-16T23:46:03.194847Z	}
2025-09-16T23:46:03.194954Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:46:03.195068Z	Fetching products with query: 
2025-09-16T23:46:03.195175Z	    {
2025-09-16T23:46:03.195278Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.195392Z	        
2025-09-16T23:46:03.195501Z	    _id,
2025-09-16T23:46:03.195668Z	    _type,
2025-09-16T23:46:03.195848Z	    partNumber,
2025-09-16T23:46:03.19598Z	    "slug": slug.current,
2025-09-16T23:46:03.196124Z	    title,
2025-09-16T23:46:03.196228Z	    shortDescription,
2025-09-16T23:46:03.196376Z	    image,
2025-09-16T23:46:03.196494Z	    brand->{
2025-09-16T23:46:03.19669Z	      name,
2025-09-16T23:46:03.19678Z	      "slug": slug.current,
2025-09-16T23:46:03.19691Z	      logo
2025-09-16T23:46:03.196986Z	    },
2025-09-16T23:46:03.197125Z	    category->{
2025-09-16T23:46:03.197268Z	      name,
2025-09-16T23:46:03.197411Z	      "slug": slug.current
2025-09-16T23:46:03.19761Z	    },
2025-09-16T23:46:03.197756Z	    pricing{
2025-09-16T23:46:03.197836Z	      currency,
2025-09-16T23:46:03.197962Z	      tiers[]{
2025-09-16T23:46:03.198109Z	        quantity,
2025-09-16T23:46:03.198277Z	        price,
2025-09-16T23:46:03.198422Z	        unit
2025-09-16T23:46:03.198625Z	      },
2025-09-16T23:46:03.198779Z	      moq,
2025-09-16T23:46:03.198915Z	      leadTime,
2025-09-16T23:46:03.198989Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.199102Z	      "price": tiers[0].price,
2025-09-16T23:46:03.199282Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.199427Z	    },
2025-09-16T23:46:03.199553Z	    inventory{
2025-09-16T23:46:03.199707Z	      quantity,
2025-09-16T23:46:03.199848Z	      status,
2025-09-16T23:46:03.199986Z	      warehouse,
2025-09-16T23:46:03.200121Z	      lastUpdated,
2025-09-16T23:46:03.200276Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.200378Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.200491Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.200663Z	    },
2025-09-16T23:46:03.200811Z	    isActive,
2025-09-16T23:46:03.200917Z	    isFeatured,
2025-09-16T23:46:03.201026Z	    isNew,
2025-09-16T23:46:03.201152Z	    _createdAt,
2025-09-16T23:46:03.201254Z	    _updatedAt
2025-09-16T23:46:03.201363Z	  
2025-09-16T23:46:03.201477Z	      },
2025-09-16T23:46:03.201605Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:46:03.201719Z	    }
2025-09-16T23:46:03.201832Z	  
2025-09-16T23:46:03.201931Z	Query parameters: {
2025-09-16T23:46:03.202008Z	  limit: 8,
2025-09-16T23:46:03.202104Z	  offset: 0,
2025-09-16T23:46:03.202232Z	  category: undefined,
2025-09-16T23:46:03.202392Z	  brand: 'qualcomm',
2025-09-16T23:46:03.202539Z	  featured: undefined
2025-09-16T23:46:03.202651Z	}
2025-09-16T23:46:03.202819Z	Fetching solutions with query: 
2025-09-16T23:46:03.202901Z	    {
2025-09-16T23:46:03.202999Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.203119Z	        
2025-09-16T23:46:03.203222Z	    _id,
2025-09-16T23:46:03.203317Z	    title,
2025-09-16T23:46:03.203408Z	    "slug": slug.current,
2025-09-16T23:46:03.20353Z	    summary,
2025-09-16T23:46:03.203646Z	    description,
2025-09-16T23:46:03.203779Z	    coverImage,
2025-09-16T23:46:03.20394Z	    primaryBrand->{
2025-09-16T23:46:03.204025Z	      _id,
2025-09-16T23:46:03.204108Z	      name,
2025-09-16T23:46:03.204218Z	      "slug": slug.current,
2025-09-16T23:46:03.204312Z	      logo
2025-09-16T23:46:03.204401Z	    },
2025-09-16T23:46:03.204504Z	    relatedBrands[]->{
2025-09-16T23:46:03.204663Z	      _id,
2025-09-16T23:46:03.204777Z	      name,
2025-09-16T23:46:03.204888Z	      "slug": slug.current,
2025-09-16T23:46:03.205006Z	      logo
2025-09-16T23:46:03.205106Z	    },
2025-09-16T23:46:03.205204Z	    targetMarket,
2025-09-16T23:46:03.205295Z	    complexity,
2025-09-16T23:46:03.205392Z	    publishedAt,
2025-09-16T23:46:03.205492Z	    isPublished,
2025-09-16T23:46:03.205594Z	    isFeatured,
2025-09-16T23:46:03.205706Z	    viewCount,
2025-09-16T23:46:03.205806Z	    _createdAt,
2025-09-16T23:46:03.2059Z	    _updatedAt
2025-09-16T23:46:03.206002Z	  
2025-09-16T23:46:03.206097Z	      },
2025-09-16T23:46:03.206423Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:46:03.20654Z	    }
2025-09-16T23:46:03.206656Z	  
2025-09-16T23:46:03.206767Z	Query parameters: {
2025-09-16T23:46:03.20687Z	  limit: 4,
2025-09-16T23:46:03.207023Z	  offset: 0,
2025-09-16T23:46:03.207129Z	  targetMarket: undefined,
2025-09-16T23:46:03.207302Z	  brand: 'qualcomm',
2025-09-16T23:46:03.207386Z	  featured: undefined
2025-09-16T23:46:03.207443Z	}
2025-09-16T23:46:03.207701Z	Fetching products with query: 
2025-09-16T23:46:03.207847Z	    {
2025-09-16T23:46:03.207951Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.208046Z	        
2025-09-16T23:46:03.20813Z	    _id,
2025-09-16T23:46:03.208217Z	    _type,
2025-09-16T23:46:03.208317Z	    partNumber,
2025-09-16T23:46:03.208405Z	    "slug": slug.current,
2025-09-16T23:46:03.20851Z	    title,
2025-09-16T23:46:03.208605Z	    shortDescription,
2025-09-16T23:46:03.208715Z	    image,
2025-09-16T23:46:03.208804Z	    brand->{
2025-09-16T23:46:03.208893Z	      name,
2025-09-16T23:46:03.208981Z	      "slug": slug.current,
2025-09-16T23:46:03.209081Z	      logo
2025-09-16T23:46:03.209177Z	    },
2025-09-16T23:46:03.20927Z	    category->{
2025-09-16T23:46:03.209363Z	      name,
2025-09-16T23:46:03.209486Z	      "slug": slug.current
2025-09-16T23:46:03.209591Z	    },
2025-09-16T23:46:03.209696Z	    pricing{
2025-09-16T23:46:03.209799Z	      currency,
2025-09-16T23:46:03.209897Z	      tiers[]{
2025-09-16T23:46:03.21Z	        quantity,
2025-09-16T23:46:03.210091Z	        price,
2025-09-16T23:46:03.21019Z	        unit
2025-09-16T23:46:03.210287Z	      },
2025-09-16T23:46:03.210388Z	      moq,
2025-09-16T23:46:03.210497Z	      leadTime,
2025-09-16T23:46:03.210601Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.210721Z	      "price": tiers[0].price,
2025-09-16T23:46:03.210821Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.210917Z	    },
2025-09-16T23:46:03.211004Z	    inventory{
2025-09-16T23:46:03.211101Z	      quantity,
2025-09-16T23:46:03.2112Z	      status,
2025-09-16T23:46:03.211286Z	      warehouse,
2025-09-16T23:46:03.211387Z	      lastUpdated,
2025-09-16T23:46:03.211498Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.211602Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.211716Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.211821Z	    },
2025-09-16T23:46:03.211918Z	    isActive,
2025-09-16T23:46:03.212013Z	    isFeatured,
2025-09-16T23:46:03.212108Z	    isNew,
2025-09-16T23:46:03.212202Z	    _createdAt,
2025-09-16T23:46:03.212297Z	    _updatedAt
2025-09-16T23:46:03.212388Z	  
2025-09-16T23:46:03.212487Z	      },
2025-09-16T23:46:03.212586Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-16T23:46:03.212697Z	    }
2025-09-16T23:46:03.212795Z	  
2025-09-16T23:46:03.212887Z	Query parameters: {
2025-09-16T23:46:03.212979Z	  limit: 8,
2025-09-16T23:46:03.21308Z	  offset: 0,
2025-09-16T23:46:03.213171Z	  category: undefined,
2025-09-16T23:46:03.213272Z	  brand: 'ixys',
2025-09-16T23:46:03.213376Z	  featured: undefined
2025-09-16T23:46:03.213476Z	}
2025-09-16T23:46:03.213571Z	Fetching solutions with query: 
2025-09-16T23:46:03.213669Z	    {
2025-09-16T23:46:03.213781Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.213897Z	        
2025-09-16T23:46:03.21399Z	    _id,
2025-09-16T23:46:03.214082Z	    title,
2025-09-16T23:46:03.214177Z	    "slug": slug.current,
2025-09-16T23:46:03.214264Z	    summary,
2025-09-16T23:46:03.214383Z	    description,
2025-09-16T23:46:03.214485Z	    coverImage,
2025-09-16T23:46:03.214578Z	    primaryBrand->{
2025-09-16T23:46:03.21467Z	      _id,
2025-09-16T23:46:03.214777Z	      name,
2025-09-16T23:46:03.214896Z	      "slug": slug.current,
2025-09-16T23:46:03.214987Z	      logo
2025-09-16T23:46:03.215078Z	    },
2025-09-16T23:46:03.215171Z	    relatedBrands[]->{
2025-09-16T23:46:03.21526Z	      _id,
2025-09-16T23:46:03.215349Z	      name,
2025-09-16T23:46:03.215452Z	      "slug": slug.current,
2025-09-16T23:46:03.215552Z	      logo
2025-09-16T23:46:03.215647Z	    },
2025-09-16T23:46:03.215753Z	    targetMarket,
2025-09-16T23:46:03.215855Z	    complexity,
2025-09-16T23:46:03.215938Z	    publishedAt,
2025-09-16T23:46:03.216027Z	    isPublished,
2025-09-16T23:46:03.216124Z	    isFeatured,
2025-09-16T23:46:03.216254Z	    viewCount,
2025-09-16T23:46:03.216356Z	    _createdAt,
2025-09-16T23:46:03.216448Z	    _updatedAt
2025-09-16T23:46:03.216546Z	  
2025-09-16T23:46:03.216646Z	      },
2025-09-16T23:46:03.216773Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-16T23:46:03.216888Z	    }
2025-09-16T23:46:03.217163Z	  
2025-09-16T23:46:03.21731Z	Query parameters: {
2025-09-16T23:46:03.217632Z	  limit: 4,
2025-09-16T23:46:03.217817Z	  offset: 0,
2025-09-16T23:46:03.217944Z	  targetMarket: undefined,
2025-09-16T23:46:03.218064Z	  brand: 'ixys',
2025-09-16T23:46:03.218176Z	  featured: undefined
2025-09-16T23:46:03.218347Z	}
2025-09-16T23:46:03.218488Z	✅ [getBrandData] Found brand: IXYS
2025-09-16T23:46:03.218648Z	✅ [getBrandData] Found brand: IXYS
2025-09-16T23:46:03.218779Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.218916Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.219053Z	Solutions fetch result: {
2025-09-16T23:46:03.219188Z	  totalSolutions: 1,
2025-09-16T23:46:03.219298Z	  fetchedSolutions: 1,
2025-09-16T23:46:03.219378Z	  firstSolution: {
2025-09-16T23:46:03.219471Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-16T23:46:03.21956Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-16T23:46:03.21984Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-16T23:46:03.219933Z	    complexity: 'medium',
2025-09-16T23:46:03.22003Z	    coverImage: null,
2025-09-16T23:46:03.22013Z	    description: [ [Object] ],
2025-09-16T23:46:03.220214Z	    isFeatured: false,
2025-09-16T23:46:03.220297Z	    isPublished: true,
2025-09-16T23:46:03.220393Z	    primaryBrand: {
2025-09-16T23:46:03.2205Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:46:03.220591Z	      logo: null,
2025-09-16T23:46:03.220695Z	      name: 'IXYS',
2025-09-16T23:46:03.220864Z	      slug: 'ixys'
2025-09-16T23:46:03.220962Z	    },
2025-09-16T23:46:03.221052Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-16T23:46:03.221142Z	    relatedBrands: null,
2025-09-16T23:46:03.221242Z	    slug: '99999',
2025-09-16T23:46:03.221341Z	    summary: '99999',
2025-09-16T23:46:03.221447Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:03.221578Z	    title: '99999',
2025-09-16T23:46:03.221701Z	    viewCount: 0
2025-09-16T23:46:03.221809Z	  }
2025-09-16T23:46:03.221902Z	}
2025-09-16T23:46:03.22199Z	Solutions fetch result: {
2025-09-16T23:46:03.22208Z	  totalSolutions: 1,
2025-09-16T23:46:03.222168Z	  fetchedSolutions: 1,
2025-09-16T23:46:03.222267Z	  firstSolution: {
2025-09-16T23:46:03.22236Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-16T23:46:03.222448Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-16T23:46:03.222556Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-16T23:46:03.222655Z	    complexity: 'medium',
2025-09-16T23:46:03.222778Z	    coverImage: null,
2025-09-16T23:46:03.222879Z	    description: [ [Object] ],
2025-09-16T23:46:03.222976Z	    isFeatured: false,
2025-09-16T23:46:03.223092Z	    isPublished: true,
2025-09-16T23:46:03.223193Z	    primaryBrand: {
2025-09-16T23:46:03.223296Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:46:03.223447Z	      logo: null,
2025-09-16T23:46:03.223586Z	      name: 'IXYS',
2025-09-16T23:46:03.224105Z	      slug: 'ixys'
2025-09-16T23:46:03.224403Z	    },
2025-09-16T23:46:03.225192Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-16T23:46:03.225385Z	    relatedBrands: null,
2025-09-16T23:46:03.225562Z	    slug: '99999',
2025-09-16T23:46:03.225743Z	    summary: '99999',
2025-09-16T23:46:03.225892Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:03.22601Z	    title: '99999',
2025-09-16T23:46:03.226109Z	    viewCount: 0
2025-09-16T23:46:03.226209Z	  }
2025-09-16T23:46:03.226312Z	}
2025-09-16T23:46:03.226566Z	Fetching products with query: 
2025-09-16T23:46:03.226818Z	    {
2025-09-16T23:46:03.22711Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.227395Z	        
2025-09-16T23:46:03.227546Z	    _id,
2025-09-16T23:46:03.227662Z	    _type,
2025-09-16T23:46:03.227797Z	    partNumber,
2025-09-16T23:46:03.227925Z	    "slug": slug.current,
2025-09-16T23:46:03.228027Z	    title,
2025-09-16T23:46:03.228125Z	    shortDescription,
2025-09-16T23:46:03.228225Z	    image,
2025-09-16T23:46:03.228324Z	    brand->{
2025-09-16T23:46:03.228426Z	      name,
2025-09-16T23:46:03.228519Z	      "slug": slug.current,
2025-09-16T23:46:03.228617Z	      logo
2025-09-16T23:46:03.228846Z	    },
2025-09-16T23:46:03.22897Z	    category->{
2025-09-16T23:46:03.22916Z	      name,
2025-09-16T23:46:03.229354Z	      "slug": slug.current
2025-09-16T23:46:03.229458Z	    },
2025-09-16T23:46:03.229571Z	    pricing{
2025-09-16T23:46:03.229665Z	      currency,
2025-09-16T23:46:03.229778Z	      tiers[]{
2025-09-16T23:46:03.229866Z	        quantity,
2025-09-16T23:46:03.229949Z	        price,
2025-09-16T23:46:03.230031Z	        unit
2025-09-16T23:46:03.230115Z	      },
2025-09-16T23:46:03.230204Z	      moq,
2025-09-16T23:46:03.230289Z	      leadTime,
2025-09-16T23:46:03.230375Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.230464Z	      "price": tiers[0].price,
2025-09-16T23:46:03.230559Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.230654Z	    },
2025-09-16T23:46:03.230772Z	    inventory{
2025-09-16T23:46:03.230876Z	      quantity,
2025-09-16T23:46:03.23098Z	      status,
2025-09-16T23:46:03.231163Z	      warehouse,
2025-09-16T23:46:03.231481Z	      lastUpdated,
2025-09-16T23:46:03.231865Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.232038Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.232204Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.232373Z	    },
2025-09-16T23:46:03.232531Z	    isActive,
2025-09-16T23:46:03.232756Z	    isFeatured,
2025-09-16T23:46:03.232916Z	    isNew,
2025-09-16T23:46:03.233026Z	    _createdAt,
2025-09-16T23:46:03.233136Z	    _updatedAt
2025-09-16T23:46:03.23324Z	  
2025-09-16T23:46:03.233339Z	      },
2025-09-16T23:46:03.233445Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-16T23:46:03.233562Z	    }
2025-09-16T23:46:03.233753Z	  
2025-09-16T23:46:03.233903Z	Query parameters: {
2025-09-16T23:46:03.234014Z	  limit: 8,
2025-09-16T23:46:03.234123Z	  offset: 0,
2025-09-16T23:46:03.243547Z	  category: undefined,
2025-09-16T23:46:03.243787Z	  brand: 'lem',
2025-09-16T23:46:03.243946Z	  featured: undefined
2025-09-16T23:46:03.244092Z	}
2025-09-16T23:46:03.244219Z	Fetching solutions with query: 
2025-09-16T23:46:03.244353Z	    {
2025-09-16T23:46:03.244454Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.244569Z	        
2025-09-16T23:46:03.244663Z	    _id,
2025-09-16T23:46:03.244802Z	    title,
2025-09-16T23:46:03.244929Z	    "slug": slug.current,
2025-09-16T23:46:03.245073Z	    summary,
2025-09-16T23:46:03.245171Z	    description,
2025-09-16T23:46:03.245306Z	    coverImage,
2025-09-16T23:46:03.245415Z	    primaryBrand->{
2025-09-16T23:46:03.245499Z	      _id,
2025-09-16T23:46:03.245579Z	      name,
2025-09-16T23:46:03.245695Z	      "slug": slug.current,
2025-09-16T23:46:03.245889Z	      logo
2025-09-16T23:46:03.246008Z	    },
2025-09-16T23:46:03.246127Z	    relatedBrands[]->{
2025-09-16T23:46:03.246269Z	      _id,
2025-09-16T23:46:03.24641Z	      name,
2025-09-16T23:46:03.246568Z	      "slug": slug.current,
2025-09-16T23:46:03.246725Z	      logo
2025-09-16T23:46:03.246846Z	    },
2025-09-16T23:46:03.246978Z	    targetMarket,
2025-09-16T23:46:03.247113Z	    complexity,
2025-09-16T23:46:03.247312Z	    publishedAt,
2025-09-16T23:46:03.247532Z	    isPublished,
2025-09-16T23:46:03.24773Z	    isFeatured,
2025-09-16T23:46:03.247865Z	    viewCount,
2025-09-16T23:46:03.247993Z	    _createdAt,
2025-09-16T23:46:03.24815Z	    _updatedAt
2025-09-16T23:46:03.248277Z	  
2025-09-16T23:46:03.248438Z	      },
2025-09-16T23:46:03.248579Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-16T23:46:03.248747Z	    }
2025-09-16T23:46:03.248864Z	  
2025-09-16T23:46:03.249008Z	Query parameters: {
2025-09-16T23:46:03.249141Z	  limit: 4,
2025-09-16T23:46:03.249277Z	  offset: 0,
2025-09-16T23:46:03.249411Z	  targetMarket: undefined,
2025-09-16T23:46:03.249527Z	  brand: 'lem',
2025-09-16T23:46:03.249697Z	  featured: undefined
2025-09-16T23:46:03.249827Z	}
2025-09-16T23:46:03.249974Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-16T23:46:03.250108Z	Fetching products with query: 
2025-09-16T23:46:03.250237Z	    {
2025-09-16T23:46:03.250376Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.250508Z	        
2025-09-16T23:46:03.250659Z	    _id,
2025-09-16T23:46:03.25081Z	    _type,
2025-09-16T23:46:03.250926Z	    partNumber,
2025-09-16T23:46:03.251033Z	    "slug": slug.current,
2025-09-16T23:46:03.251134Z	    title,
2025-09-16T23:46:03.251243Z	    shortDescription,
2025-09-16T23:46:03.251357Z	    image,
2025-09-16T23:46:03.251466Z	    brand->{
2025-09-16T23:46:03.251571Z	      name,
2025-09-16T23:46:03.251691Z	      "slug": slug.current,
2025-09-16T23:46:03.251814Z	      logo
2025-09-16T23:46:03.251955Z	    },
2025-09-16T23:46:03.25207Z	    category->{
2025-09-16T23:46:03.252204Z	      name,
2025-09-16T23:46:03.252335Z	      "slug": slug.current
2025-09-16T23:46:03.252458Z	    },
2025-09-16T23:46:03.252582Z	    pricing{
2025-09-16T23:46:03.25274Z	      currency,
2025-09-16T23:46:03.252848Z	      tiers[]{
2025-09-16T23:46:03.252987Z	        quantity,
2025-09-16T23:46:03.253106Z	        price,
2025-09-16T23:46:03.253226Z	        unit
2025-09-16T23:46:03.253325Z	      },
2025-09-16T23:46:03.253451Z	      moq,
2025-09-16T23:46:03.253552Z	      leadTime,
2025-09-16T23:46:03.253656Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.253805Z	      "price": tiers[0].price,
2025-09-16T23:46:03.25393Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.254041Z	    },
2025-09-16T23:46:03.254147Z	    inventory{
2025-09-16T23:46:03.254255Z	      quantity,
2025-09-16T23:46:03.2544Z	      status,
2025-09-16T23:46:03.254798Z	      warehouse,
2025-09-16T23:46:03.25512Z	      lastUpdated,
2025-09-16T23:46:03.255314Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.255562Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.255841Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.255991Z	    },
2025-09-16T23:46:03.25613Z	    isActive,
2025-09-16T23:46:03.256256Z	    isFeatured,
2025-09-16T23:46:03.256358Z	    isNew,
2025-09-16T23:46:03.256491Z	    _createdAt,
2025-09-16T23:46:03.256627Z	    _updatedAt
2025-09-16T23:46:03.256795Z	  
2025-09-16T23:46:03.25688Z	      },
2025-09-16T23:46:03.256993Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-16T23:46:03.257124Z	    }
2025-09-16T23:46:03.257236Z	  
2025-09-16T23:46:03.257341Z	Query parameters: {
2025-09-16T23:46:03.257463Z	  limit: 8,
2025-09-16T23:46:03.257563Z	  offset: 0,
2025-09-16T23:46:03.257721Z	  category: undefined,
2025-09-16T23:46:03.257918Z	  brand: 'epcos',
2025-09-16T23:46:03.258057Z	  featured: undefined
2025-09-16T23:46:03.258203Z	}
2025-09-16T23:46:03.258338Z	Fetching solutions with query: 
2025-09-16T23:46:03.258461Z	    {
2025-09-16T23:46:03.258574Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.258716Z	        
2025-09-16T23:46:03.25883Z	    _id,
2025-09-16T23:46:03.258934Z	    title,
2025-09-16T23:46:03.259061Z	    "slug": slug.current,
2025-09-16T23:46:03.259166Z	    summary,
2025-09-16T23:46:03.2593Z	    description,
2025-09-16T23:46:03.259427Z	    coverImage,
2025-09-16T23:46:03.259569Z	    primaryBrand->{
2025-09-16T23:46:03.25971Z	      _id,
2025-09-16T23:46:03.259846Z	      name,
2025-09-16T23:46:03.259974Z	      "slug": slug.current,
2025-09-16T23:46:03.260131Z	      logo
2025-09-16T23:46:03.260247Z	    },
2025-09-16T23:46:03.260354Z	    relatedBrands[]->{
2025-09-16T23:46:03.260468Z	      _id,
2025-09-16T23:46:03.260581Z	      name,
2025-09-16T23:46:03.260718Z	      "slug": slug.current,
2025-09-16T23:46:03.26085Z	      logo
2025-09-16T23:46:03.260975Z	    },
2025-09-16T23:46:03.261111Z	    targetMarket,
2025-09-16T23:46:03.261234Z	    complexity,
2025-09-16T23:46:03.261357Z	    publishedAt,
2025-09-16T23:46:03.261492Z	    isPublished,
2025-09-16T23:46:03.261608Z	    isFeatured,
2025-09-16T23:46:03.261755Z	    viewCount,
2025-09-16T23:46:03.261893Z	    _createdAt,
2025-09-16T23:46:03.262022Z	    _updatedAt
2025-09-16T23:46:03.262139Z	  
2025-09-16T23:46:03.262271Z	      },
2025-09-16T23:46:03.262408Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-16T23:46:03.262518Z	    }
2025-09-16T23:46:03.262668Z	  
2025-09-16T23:46:03.262857Z	Query parameters: {
2025-09-16T23:46:03.262973Z	  limit: 4,
2025-09-16T23:46:03.263211Z	  offset: 0,
2025-09-16T23:46:03.263442Z	  targetMarket: undefined,
2025-09-16T23:46:03.263664Z	  brand: 'epcos',
2025-09-16T23:46:03.263856Z	  featured: undefined
2025-09-16T23:46:03.264034Z	}
2025-09-16T23:46:03.264205Z	✅ [getBrandData] Found brand: Epcos
2025-09-16T23:46:03.264363Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.26473Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.264871Z	🔍 [getBrandData] Searching for br❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:03.264996Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:03.265103Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:03.265219Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:03.265341Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424)
2025-09-16T23:46:03.26548Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:03.265601Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:03.265764Z	}
2025-09-16T23:46:03.26603Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:03.266238Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:03.266382Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:03.266479Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:03.266566Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424)
2025-09-16T23:46:03.26666Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:03.266795Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:03.266929Z	}
2025-09-16T23:46:03.267052Z	and with slug: sanrex
2025-09-16T23:46:03.267209Z	Fetching products with query: 
2025-09-16T23:46:03.267334Z	    {
2025-09-16T23:46:03.267476Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.267618Z	        
2025-09-16T23:46:03.267758Z	    _id,
2025-09-16T23:46:03.267857Z	    _type,
2025-09-16T23:46:03.267968Z	    partNumber,
2025-09-16T23:46:03.268095Z	    "slug": slug.current,
2025-09-16T23:46:03.268234Z	    title,
2025-09-16T23:46:03.268342Z	    shortDescription,
2025-09-16T23:46:03.268463Z	    image,
2025-09-16T23:46:03.268596Z	    brand->{
2025-09-16T23:46:03.268718Z	      name,
2025-09-16T23:46:03.268821Z	      "slug": slug.current,
2025-09-16T23:46:03.268929Z	      logo
2025-09-16T23:46:03.269026Z	    },
2025-09-16T23:46:03.269125Z	    category->{
2025-09-16T23:46:03.269233Z	      name,
2025-09-16T23:46:03.269334Z	      "slug": slug.current
2025-09-16T23:46:03.269428Z	    },
2025-09-16T23:46:03.269517Z	    pricing{
2025-09-16T23:46:03.269613Z	      currency,
2025-09-16T23:46:03.269741Z	      tiers[]{
2025-09-16T23:46:03.270058Z	        quantity,
2025-09-16T23:46:03.270183Z	        price,
2025-09-16T23:46:03.270269Z	        unit
2025-09-16T23:46:03.270379Z	      },
2025-09-16T23:46:03.270502Z	      moq,
2025-09-16T23:46:03.2706Z	      leadTime,
2025-09-16T23:46:03.270715Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.270821Z	      "price": tiers[0].price,
2025-09-16T23:46:03.270923Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.271032Z	    },
2025-09-16T23:46:03.271152Z	    inventory{
2025-09-16T23:46:03.271268Z	      quantity,
2025-09-16T23:46:03.271382Z	      status,
2025-09-16T23:46:03.271478Z	      warehouse,
2025-09-16T23:46:03.271574Z	      lastUpdated,
2025-09-16T23:46:03.271694Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.271803Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.271908Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.272018Z	    },
2025-09-16T23:46:03.272118Z	    isActive,
2025-09-16T23:46:03.272216Z	    isFeatured,
2025-09-16T23:46:03.272316Z	    isNew,
2025-09-16T23:46:03.272427Z	    _createdAt,
2025-09-16T23:46:03.272525Z	    _updatedAt
2025-09-16T23:46:03.272624Z	  
2025-09-16T23:46:03.272733Z	      },
2025-09-16T23:46:03.272838Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-16T23:46:03.272962Z	    }
2025-09-16T23:46:03.273062Z	  
2025-09-16T23:46:03.273155Z	Query parameters: {
2025-09-16T23:46:03.273246Z	  limit: 8,
2025-09-16T23:46:03.27334Z	  offset: 0,
2025-09-16T23:46:03.273447Z	  category: undefined,
2025-09-16T23:46:03.273559Z	  brand: 'sanrex',
2025-09-16T23:46:03.273639Z	  featured: undefined
2025-09-16T23:46:03.273731Z	}
2025-09-16T23:46:03.273813Z	Fetching solutions with query: 
2025-09-16T23:46:03.273868Z	    {
2025-09-16T23:46:03.273993Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.274071Z	        
2025-09-16T23:46:03.274127Z	    _id,
2025-09-16T23:46:03.274189Z	    title,
2025-09-16T23:46:03.274417Z	    "slug": slug.current,
2025-09-16T23:46:03.274574Z	    summary,
2025-09-16T23:46:03.274735Z	    description,
2025-09-16T23:46:03.274816Z	    coverImage,
2025-09-16T23:46:03.275011Z	    primaryBrand->{
2025-09-16T23:46:03.275089Z	      _id,
2025-09-16T23:46:03.275235Z	      name,
2025-09-16T23:46:03.275389Z	      "slug": slug.current,
2025-09-16T23:46:03.275583Z	      logo
2025-09-16T23:46:03.275822Z	    },
2025-09-16T23:46:03.27603Z	    relatedBrands[]->{
2025-09-16T23:46:03.276267Z	      _id,
2025-09-16T23:46:03.276476Z	      name,
2025-09-16T23:46:03.276638Z	      "slug": slug.current,
2025-09-16T23:46:03.276752Z	      logo
2025-09-16T23:46:03.276897Z	    },
2025-09-16T23:46:03.277035Z	    targetMarket,
2025-09-16T23:46:03.277151Z	    complexity,
2025-09-16T23:46:03.277287Z	    publishedAt,
2025-09-16T23:46:03.277432Z	    isPublished,
2025-09-16T23:46:03.277564Z	    isFeatured,
2025-09-16T23:46:03.277715Z	    viewCount,
2025-09-16T23:46:03.27786Z	    _createdAt,
2025-09-16T23:46:03.277981Z	    _updatedAt
2025-09-16T23:46:03.278087Z	  
2025-09-16T23:46:03.278232Z	      },
2025-09-16T23:46:03.278351Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-16T23:46:03.278475Z	    }
2025-09-16T23:46:03.2786Z	  
2025-09-16T23:46:03.278751Z	Query parameters: {
2025-09-16T23:46:03.278861Z	  limit: 4,
2025-09-16T23:46:03.278944Z	  offset: 0,
2025-09-16T23:46:03.279066Z	  targetMarket: undefined,
2025-09-16T23:46:03.279193Z	  brand: 'sanrex',
2025-09-16T23:46:03.279317Z	  featured: undefined
2025-09-16T23:46:03.279446Z	}
2025-09-16T23:46:03.279607Z	✅ [getBrandData] Found brand: Sanrex
2025-09-16T23:46:03.279738Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.279839Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.279958Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-16T23:46:03.280062Z	Fetching products with query: 
2025-09-16T23:46:03.280149Z	    {
2025-09-16T23:46:03.280247Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.280382Z	        
2025-09-16T23:46:03.280472Z	    _id,
2025-09-16T23:46:03.280532Z	    _type,
2025-09-16T23:46:03.28061Z	    partNumber,
2025-09-16T23:46:03.280725Z	    "slug": slug.current,
2025-09-16T23:46:03.280833Z	    title,
2025-09-16T23:46:03.280926Z	    shortDescription,
2025-09-16T23:46:03.281033Z	    image,
2025-09-16T23:46:03.281135Z	    brand->{
2025-09-16T23:46:03.281233Z	      name,
2025-09-16T23:46:03.28133Z	      "slug": slug.current,
2025-09-16T23:46:03.281437Z	      logo
2025-09-16T23:46:03.281539Z	    },
2025-09-16T23:46:03.281648Z	    category->{
2025-09-16T23:46:03.281749Z	      name,
2025-09-16T23:46:03.281839Z	      "slug": slug.current
2025-09-16T23:46:03.281928Z	    },
2025-09-16T23:46:03.282022Z	    pricing{
2025-09-16T23:46:03.282114Z	      currency,
2025-09-16T23:46:03.282218Z	      tiers[]{
2025-09-16T23:46:03.282318Z	        quantity,
2025-09-16T23:46:03.282426Z	        price,
2025-09-16T23:46:03.28252Z	        unit
2025-09-16T23:46:03.282625Z	      },
2025-09-16T23:46:03.282735Z	      moq,
2025-09-16T23:46:03.282832Z	      leadTime,
2025-09-16T23:46:03.282937Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.283049Z	      "price": tiers[0].price,
2025-09-16T23:46:03.283162Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.283277Z	    },
2025-09-16T23:46:03.283394Z	    inventory{
2025-09-16T23:46:03.283492Z	      quantity,
2025-09-16T23:46:03.283577Z	      status,
2025-09-16T23:46:03.283669Z	      warehouse,
2025-09-16T23:46:03.283802Z	      lastUpdated,
2025-09-16T23:46:03.283925Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.284033Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.284146Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.28425Z	    },
2025-09-16T23:46:03.284347Z	    isActive,
2025-09-16T23:46:03.284465Z	    isFeatured,
2025-09-16T23:46:03.284576Z	    isNew,
2025-09-16T23:46:03.284694Z	    _createdAt,
2025-09-16T23:46:03.284797Z	    _updatedAt
2025-09-16T23:46:03.284903Z	  
2025-09-16T23:46:03.285005Z	      },
2025-09-16T23:46:03.285105Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-16T23:46:03.285209Z	    }
2025-09-16T23:46:03.285322Z	  
2025-09-16T23:46:03.285436Z	Query parameters: {
2025-09-16T23:46:03.285538Z	  limit: 8,
2025-09-16T23:46:03.285664Z	  offset: 0,
2025-09-16T23:46:03.285772Z	  category: undefined,
2025-09-16T23:46:03.285891Z	  brand: 'sanrex',
2025-09-16T23:46:03.286001Z	  featured: undefined
2025-09-16T23:46:03.286092Z	}
2025-09-16T23:46:03.286216Z	Fetching solutions with query: 
2025-09-16T23:46:03.286299Z	    {
2025-09-16T23:46:03.286451Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.286542Z	        
2025-09-16T23:46:03.286879Z	    _id,
2025-09-16T23:46:03.286953Z	    title,
2025-09-16T23:46:03.287061Z	    "slug": slug.current,
2025-09-16T23:46:03.287119Z	    summary,
2025-09-16T23:46:03.287174Z	    description,
2025-09-16T23:46:03.287294Z	    coverImage,
2025-09-16T23:46:03.287643Z	    primaryBrand->{
2025-09-16T23:46:03.287834Z	      _id,
2025-09-16T23:46:03.287905Z	      name,
2025-09-16T23:46:03.287964Z	      "slug": slug.current,
2025-09-16T23:46:03.28809Z	      logo
2025-09-16T23:46:03.288186Z	    },
2025-09-16T23:46:03.288343Z	    relatedBrands[]->{
2025-09-16T23:46:03.288682Z	      _id,
2025-09-16T23:46:03.289001Z	      name,
2025-09-16T23:46:03.289089Z	      "slug": slug.current,
2025-09-16T23:46:03.289148Z	      logo
2025-09-16T23:46:03.289207Z	    },
2025-09-16T23:46:03.289262Z	    targetMarket,
2025-09-16T23:46:03.289316Z	    complexity,
2025-09-16T23:46:03.28937Z	    publishedAt,
2025-09-16T23:46:03.289424Z	    isPublished,
2025-09-16T23:46:03.289484Z	    isFeatured,
2025-09-16T23:46:03.28954Z	    viewCount,
2025-09-16T23:46:03.289593Z	    _createdAt,
2025-09-16T23:46:03.289646Z	    _updatedAt
2025-09-16T23:46:03.289737Z	  
2025-09-16T23:46:03.289801Z	      },
2025-09-16T23:46:03.289861Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-16T23:46:03.289923Z	    }
2025-09-16T23:46:03.289978Z	  
2025-09-16T23:46:03.290037Z	Query parameters: {
2025-09-16T23:46:03.29009Z	  limit: 4,
2025-09-16T23:46:03.290152Z	  offset: 0,
2025-09-16T23:46:03.290579Z	  targetMarket: undefined,
2025-09-16T23:46:03.290717Z	  brand: 'sanrex',
2025-09-16T23:46:03.290944Z	  featured: undefined
2025-09-16T23:46:03.291034Z	}
2025-09-16T23:46:03.291136Z	✅ [getBrandData] Found brand: Sanrex
2025-09-16T23:46:03.29126Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.291338Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.291438Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-16T23:46:03.291548Z	Fetching products with query: 
2025-09-16T23:46:03.29165Z	    {
2025-09-16T23:46:03.291824Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.291984Z	        
2025-09-16T23:46:03.292085Z	    _id,
2025-09-16T23:46:03.292221Z	    _type,
2025-09-16T23:46:03.292319Z	    partNumber,
2025-09-16T23:46:03.292411Z	    "slug": slug.current,
2025-09-16T23:46:03.292529Z	    title,
2025-09-16T23:46:03.292659Z	    shortDescription,
2025-09-16T23:46:03.292867Z	    image,
2025-09-16T23:46:03.292967Z	    brand->{
2025-09-16T23:46:03.293065Z	      name,
2025-09-16T23:46:03.293172Z	      "slug": slug.current,
2025-09-16T23:46:03.293251Z	      logo
2025-09-16T23:46:03.293348Z	    },
2025-09-16T23:46:03.293447Z	    category->{
2025-09-16T23:46:03.293547Z	      name,
2025-09-16T23:46:03.293652Z	      "slug": slug.current
2025-09-16T23:46:03.293821Z	    },
2025-09-16T23:46:03.294025Z	    pricing{
2025-09-16T23:46:03.294258Z	      currency,
2025-09-16T23:46:03.294353Z	      tiers[]{
2025-09-16T23:46:03.294517Z	        quantity,
2025-09-16T23:46:03.294583Z	        price,
2025-09-16T23:46:03.294638Z	        unit
2025-09-16T23:46:03.29484Z	      },
2025-09-16T23:46:03.294937Z	      moq,
2025-09-16T23:46:03.323944Z	      leadTime,
2025-09-16T23:46:03.324088Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.324232Z	      "price": tiers[0].price,
2025-09-16T23:46:03.324512Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.324642Z	    },
2025-09-16T23:46:03.324824Z	    inventory{
2025-09-16T23:46:03.324989Z	      quantity,
2025-09-16T23:46:03.325139Z	      status,
2025-09-16T23:46:03.325217Z	      warehouse,
2025-09-16T23:46:03.325334Z	      lastUpdated,
2025-09-16T23:46:03.325517Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.325725Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.32581Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.325869Z	    },
2025-09-16T23:46:03.325985Z	    isActive,
2025-09-16T23:46:03.326115Z	    isFeatured,
2025-09-16T23:46:03.326285Z	    isNew,
2025-09-16T23:46:03.326355Z	    _createdAt,
2025-09-16T23:46:03.326576Z	    _updatedAt
2025-09-16T23:46:03.326771Z	  
2025-09-16T23:46:03.326878Z	      },
2025-09-16T23:46:03.326948Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-16T23:46:03.327166Z	    }
2025-09-16T23:46:03.327246Z	  
2025-09-16T23:46:03.327464Z	Query parameters: {
2025-09-16T23:46:03.327596Z	  limit: 8,
2025-09-16T23:46:03.32773Z	  offset: 0,
2025-09-16T23:46:03.327892Z	  category: undefined,
2025-09-16T23:46:03.328039Z	  brand: 'semikron',
2025-09-16T23:46:03.328116Z	  featured: undefined
2025-09-16T23:46:03.328178Z	}
2025-09-16T23:46:03.328303Z	Fetching solutions with query: 
2025-09-16T23:46:03.32838Z	    {
2025-09-16T23:46:03.328477Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.328598Z	        
2025-09-16T23:46:03.328765Z	    _id,
2025-09-16T23:46:03.328884Z	    title,
2025-09-16T23:46:03.329003Z	    "slug": slug.current,
2025-09-16T23:46:03.329079Z	    summary,
2025-09-16T23:46:03.329137Z	    description,
2025-09-16T23:46:03.329192Z	    coverImage,
2025-09-16T23:46:03.329246Z	    primaryBrand->{
2025-09-16T23:46:03.329299Z	      _id,
2025-09-16T23:46:03.329352Z	      name,
2025-09-16T23:46:03.329405Z	      "slug": slug.current,
2025-09-16T23:46:03.329463Z	      logo
2025-09-16T23:46:03.32952Z	    },
2025-09-16T23:46:03.329573Z	    relatedBrands[]->{
2025-09-16T23:46:03.329625Z	      _id,
2025-09-16T23:46:03.329732Z	      name,
2025-09-16T23:46:03.329845Z	      "slug": slug.current,
2025-09-16T23:46:03.329951Z	      logo
2025-09-16T23:46:03.330054Z	    },
2025-09-16T23:46:03.330152Z	    targetMarket,
2025-09-16T23:46:03.330253Z	    complexity,
2025-09-16T23:46:03.330376Z	    publishedAt,
2025-09-16T23:46:03.330464Z	    isPublished,
2025-09-16T23:46:03.330574Z	    isFeatured,
2025-09-16T23:46:03.330719Z	    viewCount,
2025-09-16T23:46:03.330841Z	    _createdAt,
2025-09-16T23:46:03.330952Z	    _updatedAt
2025-09-16T23:46:03.33104Z	  
2025-09-16T23:46:03.331133Z	      },
2025-09-16T23:46:03.331225Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-16T23:46:03.331317Z	    }
2025-09-16T23:46:03.331441Z	  
2025-09-16T23:46:03.331561Z	Query parameters: {
2025-09-16T23:46:03.331657Z	  limit: 4,
2025-09-16T23:46:03.331757Z	  offset: 0,
2025-09-16T23:46:03.331869Z	  targetMarket: undefined,
2025-09-16T23:46:03.332003Z	  brand: 'semikron',
2025-09-16T23:46:03.332127Z	  featured: undefined
2025-09-16T23:46:03.332246Z	}
2025-09-16T23:46:03.332399Z	✅ [getBrandData] Found brand: Semikron
2025-09-16T23:46:03.332521Z	Products fetch result: {
2025-09-16T23:46:03.332655Z	  totalProducts: 1,
2025-09-16T23:46:03.332791Z	  fetchedProducts: 1,
2025-09-16T23:46:03.332907Z	  firstProduct: {
2025-09-16T23:46:03.333035Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-16T23:46:03.333155Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-16T23:46:03.333264Z	    _type: 'product',
2025-09-16T23:46:03.333355Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-16T23:46:03.33355Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-16T23:46:03.333671Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:03.333826Z	    image: null,
2025-09-16T23:46:03.333919Z	    inventory: {
2025-09-16T23:46:03.334026Z	      inStock: true,
2025-09-16T23:46:03.334145Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-16T23:46:03.33426Z	      quantity: 0,
2025-09-16T23:46:03.334354Z	      status: 'in_stock',
2025-09-16T23:46:03.334576Z	      warehouse: null
2025-09-16T23:46:03.334705Z	    },
2025-09-16T23:46:03.334913Z	    isActive: true,
2025-09-16T23:46:03.335059Z	    isFeatured: false,
2025-09-16T23:46:03.335183Z	    isNew: false,
2025-09-16T23:46:03.335367Z	    partNumber: 'SKKT106/16E',
2025-09-16T23:46:03.335442Z	    pricing: {
2025-09-16T23:46:03.335563Z	      currency: 'CNY',
2025-09-16T23:46:03.335647Z	      leadTime: null,
2025-09-16T23:46:03.335781Z	      moq: null,
2025-09-16T23:46:03.33585Z	      price: null,
2025-09-16T23:46:03.335906Z	      tiers: null
2025-09-16T23:46:03.336034Z	    },
2025-09-16T23:46:03.336175Z	    shortDescription: 'SKKT106/16E',
2025-09-16T23:46:03.33626Z	    slug: 'SKKT106/16E',
2025-09-16T23:46:03.336408Z	    title: 'SKKT106/16E'
2025-09-16T23:46:03.336495Z	  }
2025-09-16T23:46:03.33661Z	}
2025-09-16T23:46:03.336797Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.336933Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-16T23:46:03.337083Z	Fetching products with query: 
2025-09-16T23:46:03.337194Z	    {
2025-09-16T23:46:03.33732Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.33742Z	        
2025-09-16T23:46:03.337563Z	    _id,
2025-09-16T23:46:03.337661Z	    _type,
2025-09-16T23:46:03.33778Z	    partNumber,
2025-09-16T23:46:03.33788Z	    "slug": slug.current,
2025-09-16T23:46:03.337974Z	    title,
2025-09-16T23:46:03.338071Z	    shortDescription,
2025-09-16T23:46:03.338166Z	    image,
2025-09-16T23:46:03.338238Z	    brand->{
2025-09-16T23:46:03.338319Z	      name,
2025-09-16T23:46:03.338414Z	      "slug": slug.current,
2025-09-16T23:46:03.338503Z	      logo
2025-09-16T23:46:03.338599Z	    },
2025-09-16T23:46:03.338707Z	    category->{
2025-09-16T23:46:03.338804Z	      name,
2025-09-16T23:46:03.338911Z	      "slug": slug.current
2025-09-16T23:46:03.339085Z	    },
2025-09-16T23:46:03.339286Z	    pricing{
2025-09-16T23:46:03.339426Z	      currency,
2025-09-16T23:46:03.339536Z	      tiers[]{
2025-09-16T23:46:03.339639Z	        quantity,
2025-09-16T23:46:03.33985Z	        price,
2025-09-16T23:46:03.339966Z	        unit
2025-09-16T23:46:03.340059Z	      },
2025-09-16T23:46:03.340134Z	      moq,
2025-09-16T23:46:03.340223Z	      leadTime,
2025-09-16T23:46:03.34029Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.340367Z	      "price": tiers[0].price,
2025-09-16T23:46:03.340498Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.340583Z	    },
2025-09-16T23:46:03.340704Z	    inventory{
2025-09-16T23:46:03.340843Z	      quantity,
2025-09-16T23:46:03.340967Z	      status,
2025-09-16T23:46:03.341082Z	      warehouse,
2025-09-16T23:46:03.341202Z	      lastUpdated,
2025-09-16T23:46:03.341327Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.341434Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.341566Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.341637Z	    },
2025-09-16T23:46:03.341745Z	    isActive,
2025-09-16T23:46:03.341846Z	    isFeatured,
2025-09-16T23:46:03.341963Z	    isNew,
2025-09-16T23:46:03.342057Z	    _createdAt,
2025-09-16T23:46:03.342149Z	    _updatedAt
2025-09-16T23:46:03.342324Z	  
2025-09-16T23:46:03.342406Z	      },
2025-09-16T23:46:03.342473Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-16T23:46:03.342832Z	    }
2025-09-16T23:46:03.342964Z	  
2025-09-16T23:46:03.343077Z	Query parameters: {
2025-09-16T23:46:03.34324Z	  limit: 8,
2025-09-16T23:46:03.343364Z	  offset: 0,
2025-09-16T23:46:03.343483Z	  category: undefined,
2025-09-16T23:46:03.343619Z	  brand: 'semikron',
2025-09-16T23:46:03.343748Z	  featured: undefined
2025-09-16T23:46:03.343926Z	}
2025-09-16T23:46:03.344088Z	Fetching solutions with query: 
2025-09-16T23:46:03.344283Z	    {
2025-09-16T23:46:03.344364Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.344496Z	        
2025-09-16T23:46:03.344571Z	    _id,
2025-09-16T23:46:03.344647Z	    title,
2025-09-16T23:46:03.344845Z	    "slug": slug.current,
2025-09-16T23:46:03.34499Z	    summary,
2025-09-16T23:46:03.345127Z	    description,
2025-09-16T23:46:03.345258Z	    coverImage,
2025-09-16T23:46:03.345374Z	    primaryBrand->{
2025-09-16T23:46:03.34549Z	      _id,
2025-09-16T23:46:03.345616Z	      name,
2025-09-16T23:46:03.345738Z	      "slug": slug.current,
2025-09-16T23:46:03.345837Z	      logo
2025-09-16T23:46:03.345934Z	    },
2025-09-16T23:46:03.346113Z	    relatedBrands[]->{
2025-09-16T23:46:03.346188Z	      _id,
2025-09-16T23:46:03.346314Z	      name,
2025-09-16T23:46:03.346482Z	      "slug": slug.current,
2025-09-16T23:46:03.346591Z	      logo
2025-09-16T23:46:03.346731Z	    },
2025-09-16T23:46:03.346901Z	    targetMarket,
2025-09-16T23:46:03.347101Z	    complexity,
2025-09-16T23:46:03.347191Z	    publishedAt,
2025-09-16T23:46:03.347308Z	    isPublished,
2025-09-16T23:46:03.347435Z	    isFeatured,
2025-09-16T23:46:03.347536Z	    viewCount,
2025-09-16T23:46:03.347681Z	    _createdAt,
2025-09-16T23:46:03.347858Z	    _updatedAt
2025-09-16T23:46:03.347967Z	  
2025-09-16T23:46:03.348138Z	      },
2025-09-16T23:46:03.348305Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-16T23:46:03.348414Z	    }
2025-09-16T23:46:03.34859Z	  
2025-09-16T23:46:03.348754Z	Query parameters: {
2025-09-16T23:46:03.348827Z	  limit: 4,
2025-09-16T23:46:03.348955Z	  offset: 0,
2025-09-16T23:46:03.349086Z	  targetMarket: undefined,
2025-09-16T23:46:03.349186Z	  brand: 'semikron',
2025-09-16T23:46:03.349281Z	  featured: undefined
2025-09-16T23:46:03.349377Z	}
2025-09-16T23:46:03.349488Z	✅ [getBrandData] Found brand: Semikron
2025-09-16T23:46:03.349614Z	Products fetch result: {
2025-09-16T23:46:03.349735Z	  totalProducts: 1,
2025-09-16T23:46:03.34984Z	  fetchedProducts: 1,
2025-09-16T23:46:03.34997Z	  firstProduct: {
2025-09-16T23:46:03.350057Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-16T23:46:03.350174Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-16T23:46:03.350295Z	    _type: 'product',
2025-09-16T23:46:03.350386Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-16T23:46:03.350488Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-16T23:46:03.350609Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:03.350742Z	    image: null,
2025-09-16T23:46:03.350859Z	    inventory: {
2025-09-16T23:46:03.35122Z	      inStock: true,
2025-09-16T23:46:03.351385Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-16T23:46:03.351514Z	      quantity: 0,
2025-09-16T23:46:03.351623Z	      status: 'in_stock',
2025-09-16T23:46:03.351745Z	      warehouse: null
2025-09-16T23:46:03.351841Z	    },
2025-09-16T23:46:03.351943Z	    isActive: true,
2025-09-16T23:46:03.352044Z	    isFeatured: false,
2025-09-16T23:46:03.352154Z	    isNew: false,
2025-09-16T23:46:03.352231Z	    partNumber: 'SKKT106/16E',
2025-09-16T23:46:03.35235Z	    pricing: {
2025-09-16T23:46:03.352502Z	      currency: 'CNY',
2025-09-16T23:46:03.352584Z	      leadTime: null,
2025-09-16T23:46:03.352757Z	      moq: null,
2025-09-16T23:46:03.35286Z	      price: null,
2025-09-16T23:46:03.352964Z	      tiers: null
2025-09-16T23:46:03.353069Z	    },
2025-09-16T23:46:03.353181Z	    shortDescription: 'SKKT106/16E',
2025-09-16T23:46:03.353284Z	    slug: 'SKKT106/16E',
2025-09-16T23:46:03.35341Z	    title: 'SKKT106/16E'
2025-09-16T23:46:03.353549Z	  }
2025-09-16T23:46:03.353667Z	}
2025-09-16T23:46:03.353795Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.353899Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:46:03.354012Z	Fetching products with query: 
2025-09-16T23:46:03.35411Z	    {
2025-09-16T23:46:03.354215Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.354317Z	        
2025-09-16T23:46:03.35442Z	    _id,
2025-09-16T23:46:03.354519Z	    _type,
2025-09-16T23:46:03.354627Z	    partNumber,
2025-09-16T23:46:03.354765Z	    "slug": slug.current,
2025-09-16T23:46:03.354887Z	    title,
2025-09-16T23:46:03.354989Z	    shortDescription,
2025-09-16T23:46:03.35509Z	    image,
2025-09-16T23:46:03.355182Z	    brand->{
2025-09-16T23:46:03.355359Z	      name,
2025-09-16T23:46:03.355438Z	      "slug": slug.current,
2025-09-16T23:46:03.355503Z	      logo
2025-09-16T23:46:03.355632Z	    },
2025-09-16T23:46:03.355758Z	    category->{
2025-09-16T23:46:03.355864Z	      name,
2025-09-16T23:46:03.355968Z	      "slug": slug.current
2025-09-16T23:46:03.356102Z	    },
2025-09-16T23:46:03.356241Z	    pricing{
2025-09-16T23:46:03.356326Z	      currency,
2025-09-16T23:46:03.356564Z	      tiers[]{
2025-09-16T23:46:03.356734Z	        quantity,
2025-09-16T23:46:03.35681Z	        price,
2025-09-16T23:46:03.356932Z	        unit
2025-09-16T23:46:03.357042Z	      },
2025-09-16T23:46:03.357142Z	      moq,
2025-09-16T23:46:03.35724Z	      leadTime,
2025-09-16T23:46:03.357372Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.357504Z	      "price": tiers[0].price,
2025-09-16T23:46:03.357651Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.357782Z	    },
2025-09-16T23:46:03.357897Z	    inventory{
2025-09-16T23:46:03.358013Z	      quantity,
2025-09-16T23:46:03.35812Z	      status,
2025-09-16T23:46:03.358234Z	      warehouse,
2025-09-16T23:46:03.358348Z	      lastUpdated,
2025-09-16T23:46:03.358462Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.358576Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.3587Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.358808Z	    },
2025-09-16T23:46:03.358934Z	    isActive,
2025-09-16T23:46:03.359043Z	    isFeatured,
2025-09-16T23:46:03.359144Z	    isNew,
2025-09-16T23:46:03.359256Z	    _createdAt,
2025-09-16T23:46:03.359361Z	    _updatedAt
2025-09-16T23:46:03.359469Z	  
2025-09-16T23:46:03.359564Z	      },
2025-09-16T23:46:03.359667Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:46:03.359808Z	    }
2025-09-16T23:46:03.359923Z	  
2025-09-16T23:46:03.360064Z	Query parameters: {
2025-09-16T23:46:03.360189Z	  limit: 8,
2025-09-16T23:46:03.360333Z	  offset: 0,
2025-09-16T23:46:03.36042Z	  category: undefined,
2025-09-16T23:46:03.360546Z	  brand: 'qualcomm',
2025-09-16T23:46:03.360705Z	  featured: undefined
2025-09-16T23:46:03.360814Z	}
2025-09-16T23:46:03.360925Z	Fetching solutions with query: 
2025-09-16T23:46:03.361014Z	    {
2025-09-16T23:46:03.3611Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.361238Z	        
2025-09-16T23:46:03.361338Z	    _id,
2025-09-16T23:46:03.361471Z	    title,
2025-09-16T23:46:03.361573Z	    "slug": slug.current,
2025-09-16T23:46:03.361708Z	    summary,
2025-09-16T23:46:03.361835Z	    description,
2025-09-16T23:46:03.361945Z	    coverImage,
2025-09-16T23:46:03.362047Z	    primaryBrand->{
2025-09-16T23:46:03.362144Z	      _id,
2025-09-16T23:46:03.362252Z	      name,
2025-09-16T23:46:03.362357Z	      "slug": slug.current,
2025-09-16T23:46:03.362459Z	      logo
2025-09-16T23:46:03.36257Z	    },
2025-09-16T23:46:03.362672Z	    relatedBrands[]->{
2025-09-16T23:46:03.362783Z	      _id,
2025-09-16T23:46:03.362891Z	      name,
2025-09-16T23:46:03.362994Z	      "slug": slug.current,
2025-09-16T23:46:03.363092Z	      logo
2025-09-16T23:46:03.363197Z	    },
2025-09-16T23:46:03.363297Z	    targetMarket,
2025-09-16T23:46:03.36345Z	    complexity,
2025-09-16T23:46:03.363569Z	    publishedAt,
2025-09-16T23:46:03.363711Z	    isPublished,
2025-09-16T23:46:03.363829Z	    isFeatured,
2025-09-16T23:46:03.363946Z	    viewCount,
2025-09-16T23:46:03.36408Z	    _createdAt,
2025-09-16T23:46:03.364188Z	    _updatedAt
2025-09-16T23:46:03.364281Z	  
2025-09-16T23:46:03.364422Z	      },
2025-09-16T23:46:03.364531Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:46:03.364651Z	    }
2025-09-16T23:46:03.364846Z	  
2025-09-16T23:46:03.364927Z	Query parameters: {
2025-09-16T23:46:03.365066Z	  limit: 4,
2025-09-16T23:46:03.365197Z	  offset: 0,
2025-09-16T23:46:03.365393Z	  targetMarket: undefined,
2025-09-16T23:46:03.365546Z	  brand: 'qualcomm',
2025-09-16T23:46:03.365623Z	  featured: undefined
2025-09-16T23:46:03.365741Z	}
2025-09-16T23:46:03.365859Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:03.365998Z	Fetching products with query: 
2025-09-16T23:46:03.36614Z	    {
2025-09-16T23:46:03.366252Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.366477Z	        
2025-09-16T23:46:03.366632Z	    _id,
2025-09-16T23:46:03.36679Z	    _type,
2025-09-16T23:46:03.366866Z	    partNumber,
2025-09-16T23:46:03.366994Z	    "slug": slug.current,
2025-09-16T23:46:03.367144Z	    title,
2025-09-16T23:46:03.36736Z	    shortDescription,
2025-09-16T23:46:03.367621Z	    image,
2025-09-16T23:46:03.367782Z	    brand->{
2025-09-16T23:46:03.367956Z	      name,
2025-09-16T23:46:03.368109Z	      "slug": slug.current,
2025-09-16T23:46:03.368268Z	      logo
2025-09-16T23:46:03.368442Z	    },
2025-09-16T23:46:03.368547Z	    category->{
2025-09-16T23:46:03.368661Z	      name,
2025-09-16T23:46:03.36879Z	      "slug": slug.current
2025-09-16T23:46:03.369015Z	    },
2025-09-16T23:46:03.369098Z	    pricing{
2025-09-16T23:46:03.369195Z	      currency,
2025-09-16T23:46:03.369308Z	      tiers[]{
2025-09-16T23:46:03.36939Z	        quantity,
2025-09-16T23:46:03.369572Z	        price,
2025-09-16T23:46:03.369755Z	        unit
2025-09-16T23:46:03.369904Z	      },
2025-09-16T23:46:03.370032Z	      moq,
2025-09-16T23:46:03.37015Z	      leadTime,
2025-09-16T23:46:03.37057Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.370746Z	      "price": tiers[0].price,
2025-09-16T23:46:03.370873Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.370981Z	    },
2025-09-16T23:46:03.371076Z	    inventory{
2025-09-16T23:46:03.371187Z	      quantity,
2025-09-16T23:46:03.371294Z	      status,
2025-09-16T23:46:03.371401Z	      warehouse,
2025-09-16T23:46:03.371506Z	      lastUpdated,
2025-09-16T23:46:03.371649Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.371872Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.37204Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.372145Z	    },
2025-09-16T23:46:03.372329Z	    isActive,
2025-09-16T23:46:03.372486Z	    isFeatured,
2025-09-16T23:46:03.37259Z	    isNew,
2025-09-16T23:46:03.372755Z	    _createdAt,
2025-09-16T23:46:03.372833Z	    _updatedAt
2025-09-16T23:46:03.372978Z	  
2025-09-16T23:46:03.373138Z	      },
2025-09-16T23:46:03.373306Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-16T23:46:03.373468Z	    }
2025-09-16T23:46:03.373597Z	  
2025-09-16T23:46:03.37376Z	Query parameters: {
2025-09-16T23:46:03.37389Z	  limit: 8,
2025-09-16T23:46:03.374008Z	  offset: 0,
2025-09-16T23:46:03.374171Z	  category: undefined,
2025-09-16T23:46:03.37429Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:03.374416Z	  featured: undefined
2025-09-16T23:46:03.37452Z	}
2025-09-16T23:46:03.374684Z	Fetching solutions with query: 
2025-09-16T23:46:03.374814Z	    {
2025-09-16T23:46:03.374963Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.375143Z	        
2025-09-16T23:46:03.375246Z	    _id,
2025-09-16T23:46:03.37539Z	    title,
2025-09-16T23:46:03.375492Z	    "slug": slug.current,
2025-09-16T23:46:03.375705Z	    summary,
2025-09-16T23:46:03.375863Z	    description,
2025-09-16T23:46:03.375961Z	    coverImage,
2025-09-16T23:46:03.37605Z	    primaryBrand->{
2025-09-16T23:46:03.376152Z	      _id,
2025-09-16T23:46:03.376261Z	      name,
2025-09-16T23:46:03.376381Z	      "slug": slug.current,
2025-09-16T23:46:03.376486Z	      logo
2025-09-16T23:46:03.376578Z	    },
2025-09-16T23:46:03.37665Z	    relatedBrands[]->{
2025-09-16T23:46:03.376746Z	      _id,
2025-09-16T23:46:03.37687Z	      name,
2025-09-16T23:46:03.376991Z	      "slug": slug.current,
2025-09-16T23:46:03.377223Z	      logo
2025-09-16T23:46:03.377344Z	    },
2025-09-16T23:46:03.37746Z	    targetMarket,
2025-09-16T23:46:03.377576Z	    complexity,
2025-09-16T23:46:03.377656Z	    publishedAt,
2025-09-16T23:46:03.377778Z	    isPublished,
2025-09-16T23:46:03.377883Z	    isFeatured,
2025-09-16T23:46:03.377995Z	    viewCount,
2025-09-16T23:46:03.378103Z	    _createdAt,
2025-09-16T23:46:03.378217Z	    _updatedAt
2025-09-16T23:46:03.378315Z	  
2025-09-16T23:46:03.378416Z	      },
2025-09-16T23:46:03.378522Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-16T23:46:03.37864Z	    }
2025-09-16T23:46:03.378766Z	  
2025-09-16T23:46:03.378866Z	Query parameters: {
2025-09-16T23:46:03.378966Z	  limit: 4,
2025-09-16T23:46:03.379059Z	  offset: 0,
2025-09-16T23:46:03.379164Z	  targetMarket: undefined,
2025-09-16T23:46:03.379291Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:03.379393Z	  featured: undefined
2025-09-16T23:46:03.379498Z	}
2025-09-16T23:46:03.379598Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:03.379802Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.379922Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.380035Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:03.380185Z	Fetching products with query: 
2025-09-16T23:46:03.380264Z	    {
2025-09-16T23:46:03.380352Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.38047Z	        
2025-09-16T23:46:03.380581Z	    _id,
2025-09-16T23:46:03.380688Z	    _type,
2025-09-16T23:46:03.380792Z	    partNumber,
2025-09-16T23:46:03.380891Z	    "slug": slug.current,
2025-09-16T23:46:03.380978Z	    title,
2025-09-16T23:46:03.381072Z	    shortDescription,
2025-09-16T23:46:03.381191Z	    image,
2025-09-16T23:46:03.381314Z	    brand->{
2025-09-16T23:46:03.38143Z	      name,
2025-09-16T23:46:03.381558Z	      "slug": slug.current,
2025-09-16T23:46:03.381671Z	      logo
2025-09-16T23:46:03.381837Z	    },
2025-09-16T23:46:03.381992Z	    category->{
2025-09-16T23:46:03.382103Z	      name,
2025-09-16T23:46:03.382211Z	      "slug": slug.current
2025-09-16T23:46:03.382281Z	    },
2025-09-16T23:46:03.382375Z	    pricing{
2025-09-16T23:46:03.382475Z	      currency,
2025-09-16T23:46:03.382592Z	      tiers[]{
2025-09-16T23:46:03.382706Z	        quantity,
2025-09-16T23:46:03.382807Z	        price,
2025-09-16T23:46:03.382906Z	        unit
2025-09-16T23:46:03.383002Z	      },
2025-09-16T23:46:03.383105Z	      moq,
2025-09-16T23:46:03.383201Z	      leadTime,
2025-09-16T23:46:03.383304Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.383405Z	      "price": tiers[0].price,
2025-09-16T23:46:03.383516Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.383615Z	    },
2025-09-16T23:46:03.383727Z	    inventory{
2025-09-16T23:46:03.383831Z	      quantity,
2025-09-16T23:46:03.383929Z	      status,
2025-09-16T23:46:03.384024Z	      warehouse,
2025-09-16T23:46:03.384134Z	      lastUpdated,
2025-09-16T23:46:03.384235Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.384339Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.384449Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.384544Z	    },
2025-09-16T23:46:03.384619Z	    isActive,
2025-09-16T23:46:03.384691Z	    isFeatured,
2025-09-16T23:46:03.384792Z	    isNew,
2025-09-16T23:46:03.38485Z	    _createdAt,
2025-09-16T23:46:03.384931Z	    _updatedAt
2025-09-16T23:46:03.385039Z	  
2025-09-16T23:46:03.385136Z	      },
2025-09-16T23:46:03.385251Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-16T23:46:03.385392Z	    }
2025-09-16T23:46:03.385536Z	  
2025-09-16T23:46:03.385634Z	Query parameters: {
2025-09-16T23:46:03.385778Z	  limit: 8,
2025-09-16T23:46:03.385884Z	  offset: 0,
2025-09-16T23:46:03.386041Z	  category: undefined,
2025-09-16T23:46:03.386115Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:03.386328Z	  featured: undefined
2025-09-16T23:46:03.38643Z	}
2025-09-16T23:46:03.386534Z	Fetching solutions with query: 
2025-09-16T23:46:03.38665Z	    {
2025-09-16T23:46:03.386804Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.386932Z	        
2025-09-16T23:46:03.387034Z	    _id,
2025-09-16T23:46:03.387273Z	    title,
2025-09-16T23:46:03.387361Z	    "slug": slug.current,
2025-09-16T23:46:03.387539Z	    summary,
2025-09-16T23:46:03.387628Z	    description,
2025-09-16T23:46:03.38773Z	    coverImage,
2025-09-16T23:46:03.387836Z	    primaryBrand->{
2025-09-16T23:46:03.387932Z	      _id,
2025-09-16T23:46:03.388002Z	      name,
2025-09-16T23:46:03.38806Z	      "slug": slug.current,
2025-09-16T23:46:03.388122Z	      logo
2025-09-16T23:46:03.388244Z	    },
2025-09-16T23:46:03.388322Z	    relatedBrands[]->{
2025-09-16T23:46:03.388473Z	      _id,
2025-09-16T23:46:03.388584Z	      name,
2025-09-16T23:46:03.388708Z	      "slug": slug.current,
2025-09-16T23:46:03.388821Z	      logo
2025-09-16T23:46:03.388928Z	    },
2025-09-16T23:46:03.389037Z	    targetMarket,
2025-09-16T23:46:03.389148Z	    complexity,
2025-09-16T23:46:03.389246Z	    publishedAt,
2025-09-16T23:46:03.389341Z	    isPublished,
2025-09-16T23:46:03.389455Z	    isFeatured,
2025-09-16T23:46:03.389572Z	    viewCount,
2025-09-16T23:46:03.38976Z	    _createdAt,
2025-09-16T23:46:03.389845Z	    _updatedAt
2025-09-16T23:46:03.389908Z	  
2025-09-16T23:46:03.390081Z	      },
2025-09-16T23:46:03.390206Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-16T23:46:03.390361Z	    }
2025-09-16T23:46:03.390479Z	  
2025-09-16T23:46:03.390586Z	Query parameters: {
2025-09-16T23:46:03.390698Z	  limit: 4,
2025-09-16T23:46:03.390795Z	  offset: 0,
2025-09-16T23:46:03.390897Z	  targetMarket: undefined,
2025-09-16T23:46:03.390988Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:03.39106Z	  featured: undefined
2025-09-16T23:46:03.391121Z	}
2025-09-16T23:46:03.391179Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:03.391251Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.391328Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.391431Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-16T23:46:03.391539Z	Fetching products with query: 
2025-09-16T23:46:03.391667Z	    {
2025-09-16T23:46:03.391786Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.391954Z	        
2025-09-16T23:46:03.39211Z	    _id,
2025-09-16T23:46:03.392246Z	    _type,
2025-09-16T23:46:03.392381Z	    partNumber,
2025-09-16T23:46:03.392472Z	    "slug": slug.current,
2025-09-16T23:46:03.392595Z	    title,
2025-09-16T23:46:03.392692Z	    shortDescription,
2025-09-16T23:46:03.392788Z	    image,
2025-09-16T23:46:03.392899Z	    brand->{
2025-09-16T23:46:03.393087Z	      name,
2025-09-16T23:46:03.393252Z	      "slug": slug.current,
2025-09-16T23:46:03.393408Z	      logo
2025-09-16T23:46:03.393544Z	    },
2025-09-16T23:46:03.393685Z	    category->{
2025-09-16T23:46:03.393786Z	      name,
2025-09-16T23:46:03.393874Z	      "slug": slug.current
2025-09-16T23:46:03.393985Z	    },
2025-09-16T23:46:03.394102Z	    pricing{
2025-09-16T23:46:03.394243Z	      currency,
2025-09-16T23:46:03.394355Z	      tiers[]{
2025-09-16T23:46:03.394504Z	        quantity,
2025-09-16T23:46:03.394577Z	        price,
2025-09-16T23:46:03.39466Z	        unit
2025-09-16T23:46:03.394792Z	      },
2025-09-16T23:46:03.394916Z	      moq,
2025-09-16T23:46:03.395038Z	      leadTime,
2025-09-16T23:46:03.395205Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.395321Z	      "price": tiers[0].price,
2025-09-16T23:46:03.395437Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.395583Z	    },
2025-09-16T23:46:03.395765Z	    inventory{
2025-09-16T23:46:03.395876Z	      quantity,
2025-09-16T23:46:03.39598Z	      status,
2025-09-16T23:46:03.396058Z	      warehouse,
2025-09-16T23:46:03.396166Z	      lastUpdated,
2025-09-16T23:46:03.396263Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.396457Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.39654Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.396642Z	    },
2025-09-16T23:46:03.396922Z	    isActive,
2025-09-16T23:46:03.397018Z	    isFeatured,
2025-09-16T23:46:03.39724Z	    isNew,
2025-09-16T23:46:03.397339Z	    _createdAt,
2025-09-16T23:46:03.397569Z	    _updatedAt
2025-09-16T23:46:03.397802Z	  
2025-09-16T23:46:03.397898Z	      },
2025-09-16T23:46:03.398131Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-16T23:46:03.39823Z	    }
2025-09-16T23:46:03.398471Z	  
2025-09-16T23:46:03.398555Z	Query parameters: {
2025-09-16T23:46:03.398787Z	  limit: 8,
2025-09-16T23:46:03.398878Z	  offset: 0,
2025-09-16T23:46:03.399002Z	  category: undefined,
2025-09-16T23:46:03.399103Z	  brand: 'ncc',
2025-09-16T23:46:03.399196Z	  featured: undefined
2025-09-16T23:46:03.39932Z	}
2025-09-16T23:46:03.399457Z	Fetching solutions with query: 
2025-09-16T23:46:03.399593Z	    {
2025-09-16T23:46:03.399767Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.399857Z	        
2025-09-16T23:46:03.399968Z	    _id,
2025-09-16T23:46:03.400066Z	    title,
2025-09-16T23:46:03.400174Z	    "slug": slug.current,
2025-09-16T23:46:03.400323Z	    summary,
2025-09-16T23:46:03.400427Z	    description,
2025-09-16T23:46:03.400669Z	    coverImage,
2025-09-16T23:46:03.400894Z	    primaryBrand->{
2025-09-16T23:46:03.400996Z	      _id,
2025-09-16T23:46:03.401056Z	      name,
2025-09-16T23:46:03.401312Z	      "slug": slug.current,
2025-09-16T23:46:03.40139Z	      logo
2025-09-16T23:46:03.401455Z	    },
2025-09-16T23:46:03.401667Z	    relatedBrands[]->{
2025-09-16T23:46:03.401842Z	      _id,
2025-09-16T23:46:03.40192Z	      name,
2025-09-16T23:46:03.402053Z	      "slug": slug.current,
2025-09-16T23:46:03.402163Z	      logo
2025-09-16T23:46:03.4026Z	    },
2025-09-16T23:46:03.402878Z	    targetMarket,
2025-09-16T23:46:03.403123Z	    complexity,
2025-09-16T23:46:03.403241Z	    publishedAt,
2025-09-16T23:46:03.403361Z	    isPublished,
2025-09-16T23:46:03.403472Z	    isFeatured,
2025-09-16T23:46:03.403571Z	    viewCount,
2025-09-16T23:46:03.403668Z	    _createdAt,
2025-09-16T23:46:03.40397Z	    _updatedAt
2025-09-16T23:46:03.404044Z	  
2025-09-16T23:46:03.404101Z	      },
2025-09-16T23:46:03.404193Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-16T23:46:03.404259Z	    }
2025-09-16T23:46:03.404385Z	  
2025-09-16T23:46:03.404453Z	Query parameters: {
2025-09-16T23:46:03.40453Z	  limit: 4,
2025-09-16T23:46:03.40464Z	  offset: 0,
2025-09-16T23:46:03.404775Z	  targetMarket: undefined,
2025-09-16T23:46:03.404876Z	  brand: 'ncc',
2025-09-16T23:46:03.404979Z	  featured: undefined
2025-09-16T23:46:03.405084Z	}
2025-09-16T23:46:03.405187Z	✅ [getBrandData] Found brand: ncc
2025-09-16T23:46:03.405291Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.405421Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.405566Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-16T23:46:03.405705Z	Fetching products with query: 
2025-09-16T23:46:03.405831Z	    {
2025-09-16T23:46:03.405927Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.406047Z	        
2025-09-16T23:46:03.406146Z	    _id,
2025-09-16T23:46:03.406237Z	    _type,
2025-09-16T23:46:03.406335Z	    partNumber,
2025-09-16T23:46:03.40644Z	    "slug": slug.current,
2025-09-16T23:46:03.406537Z	    title,
2025-09-16T23:46:03.40663Z	    shortDescription,
2025-09-16T23:46:03.406754Z	    image,
2025-09-16T23:46:03.406856Z	    brand->{
2025-09-16T23:46:03.406944Z	      name,
2025-09-16T23:46:03.407044Z	      "slug": slug.current,
2025-09-16T23:46:03.407167Z	      logo
2025-09-16T23:46:03.407265Z	    },
2025-09-16T23:46:03.407371Z	    category->{
2025-09-16T23:46:03.407471Z	      name,
2025-09-16T23:46:03.407574Z	      "slug": slug.current
2025-09-16T23:46:03.407695Z	    },
2025-09-16T23:46:03.407808Z	    pricing{
2025-09-16T23:46:03.407909Z	      currency,
2025-09-16T23:46:03.408046Z	      tiers[]{
2025-09-16T23:46:03.40812Z	        quantity,
2025-09-16T23:46:03.408187Z	        price,
2025-09-16T23:46:03.408245Z	        unit
2025-09-16T23:46:03.40832Z	      },
2025-09-16T23:46:03.408498Z	      moq,
2025-09-16T23:46:03.408613Z	      leadTime,
2025-09-16T23:46:03.408781Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.408899Z	      "price": tiers[0].price,
2025-09-16T23:46:03.408975Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.409075Z	    },
2025-09-16T23:46:03.409201Z	    inventory{
2025-09-16T23:46:03.409302Z	      quantity,
2025-09-16T23:46:03.409442Z	      status,
2025-09-16T23:46:03.409519Z	      warehouse,
2025-09-16T23:46:03.409694Z	      lastUpdated,
2025-09-16T23:46:03.409783Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.409863Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.409984Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.41009Z	    },
2025-09-16T23:46:03.41019Z	    isActive,
2025-09-16T23:46:03.410282Z	    isFeatured,
2025-09-16T23:46:03.410403Z	    isNew,
2025-09-16T23:46:03.41051Z	    _createdAt,
2025-09-16T23:46:03.410601Z	    _updatedAt
2025-09-16T23:46:03.410713Z	  
2025-09-16T23:46:03.410815Z	      },
2025-09-16T23:46:03.410907Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-16T23:46:03.411022Z	    }
2025-09-16T23:46:03.411125Z	  
2025-09-16T23:46:03.411228Z	Query parameters: {
2025-09-16T23:46:03.411324Z	  limit: 8,
2025-09-16T23:46:03.411437Z	  offset: 0,
2025-09-16T23:46:03.411533Z	  category: undefined,
2025-09-16T23:46:03.411624Z	  brand: 'ncc',
2025-09-16T23:46:03.411752Z	  featured: undefined
2025-09-16T23:46:03.411852Z	}
2025-09-16T23:46:03.411959Z	Fetching solutions with query: 
2025-09-16T23:46:03.412058Z	    {
2025-09-16T23:46:03.412129Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.412225Z	        
2025-09-16T23:46:03.412323Z	    _id,
2025-09-16T23:46:03.412441Z	    title,
2025-09-16T23:46:03.412551Z	    "slug": slug.current,
2025-09-16T23:46:03.412653Z	    summary,
2025-09-16T23:46:03.412765Z	    description,
2025-09-16T23:46:03.412863Z	    coverImage,
2025-09-16T23:46:03.412956Z	    primaryBrand->{
2025-09-16T23:46:03.413057Z	      _id,
2025-09-16T23:46:03.413159Z	      name,
2025-09-16T23:46:03.413303Z	      "slug": slug.current,
2025-09-16T23:46:03.413416Z	      logo
2025-09-16T23:46:03.413538Z	    },
2025-09-16T23:46:03.413658Z	    relatedBrands[]->{
2025-09-16T23:46:03.413791Z	      _id,
2025-09-16T23:46:03.413917Z	      name,
2025-09-16T23:46:03.414077Z	      "slug": slug.current,
2025-09-16T23:46:03.414381Z	      logo
2025-09-16T23:46:03.414512Z	    },
2025-09-16T23:46:03.414883Z	    targetMarket,
2025-09-16T23:46:03.414974Z	    complexity,
2025-09-16T23:46:03.415217Z	    publishedAt,
2025-09-16T23:46:03.415313Z	    isPublished,
2025-09-16T23:46:03.41556Z	    isFeatured,
2025-09-16T23:46:03.415644Z	    viewCount,
2025-09-16T23:46:03.415897Z	    _createdAt,
2025-09-16T23:46:03.416146Z	    _updatedAt
2025-09-16T23:46:03.416318Z	  
2025-09-16T23:46:03.416406Z	      },
2025-09-16T23:46:03.416748Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-16T23:46:03.416857Z	    }
2025-09-16T23:46:03.416965Z	  
2025-09-16T23:46:03.41709Z	Query parameters: {
2025-09-16T23:46:03.417164Z	  limit: 4,
2025-09-16T23:46:03.417323Z	  offset: 0,
2025-09-16T23:46:03.417402Z	  targetMarket: undefined,
2025-09-16T23:46:03.417508Z	  brand: 'ncc',
2025-09-16T23:46:03.417636Z	  featured: undefined
2025-09-16T23:46:03.417748Z	}
2025-09-16T23:46:03.417849Z	✅ [getBrandData] Found brand: ncc
2025-09-16T23:46:03.417964Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.418062Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.418136Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:03.418332Z	Fetching products with query: 
2025-09-16T23:46:03.418465Z	    {
2025-09-16T23:46:03.418608Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.418766Z	        
2025-09-16T23:46:03.418893Z	    _id,
2025-09-16T23:46:03.419027Z	    _type,
2025-09-16T23:46:03.419143Z	    partNumber,
2025-09-16T23:46:03.419283Z	    "slug": slug.current,
2025-09-16T23:46:03.419418Z	    title,
2025-09-16T23:46:03.419542Z	    shortDescription,
2025-09-16T23:46:03.41966Z	    image,
2025-09-16T23:46:03.41995Z	    brand->{
2025-09-16T23:46:03.420103Z	      name,
2025-09-16T23:46:03.420234Z	      "slug": slug.current,
2025-09-16T23:46:03.420369Z	      logo
2025-09-16T23:46:03.42051Z	    },
2025-09-16T23:46:03.420645Z	    category->{
2025-09-16T23:46:03.42078Z	      name,
2025-09-16T23:46:03.42089Z	      "slug": slug.current
2025-09-16T23:46:03.420992Z	    },
2025-09-16T23:46:03.421111Z	    pricing{
2025-09-16T23:46:03.421238Z	      currency,
2025-09-16T23:46:03.421368Z	      tiers[]{
2025-09-16T23:46:03.421498Z	        quantity,
2025-09-16T23:46:03.42159Z	        price,
2025-09-16T23:46:03.421688Z	        unit
2025-09-16T23:46:03.421796Z	      },
2025-09-16T23:46:03.421901Z	      moq,
2025-09-16T23:46:03.422009Z	      leadTime,
2025-09-16T23:46:03.422125Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.422234Z	      "price": tiers[0].price,
2025-09-16T23:46:03.422338Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.422477Z	    },
2025-09-16T23:46:03.42259Z	    inventory{
2025-09-16T23:46:03.422721Z	      quantity,
2025-09-16T23:46:03.422838Z	      status,
2025-09-16T23:46:03.422958Z	      warehouse,
2025-09-16T23:46:03.423064Z	      lastUpdated,
2025-09-16T23:46:03.423187Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.423305Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.42342Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.423545Z	    },
2025-09-16T23:46:03.42366Z	    isActive,
2025-09-16T23:46:03.423791Z	    isFeatured,
2025-09-16T23:46:03.423902Z	    isNew,
2025-09-16T23:46:03.42401Z	    _createdAt,
2025-09-16T23:46:03.42413Z	    _updatedAt
2025-09-16T23:46:03.424254Z	  
2025-09-16T23:46:03.424362Z	      },
2025-09-16T23:46:03.424474Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-16T23:46:03.424588Z	    }
2025-09-16T23:46:03.424712Z	  
2025-09-16T23:46:03.424837Z	Query parameters: {
2025-09-16T23:46:03.425646Z	  limit: 8,
2025-09-16T23:46:03.425825Z	  offset: 0,
2025-09-16T23:46:03.425945Z	  category: undefined,
2025-09-16T23:46:03.426054Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:03.426173Z	  featured: undefined
2025-09-16T23:46:03.426273Z	}
2025-09-16T23:46:03.426389Z	Fetching solutions with query: 
2025-09-16T23:46:03.426519Z	    {
2025-09-16T23:46:03.426657Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.426804Z	        
2025-09-16T23:46:03.426916Z	    _id,
2025-09-16T23:46:03.42703Z	    title,
2025-09-16T23:46:03.427127Z	    "slug": slug.current,
2025-09-16T23:46:03.427222Z	    summary,
2025-09-16T23:46:03.427315Z	    description,
2025-09-16T23:46:03.427437Z	    coverImage,
2025-09-16T23:46:03.427555Z	    primaryBrand->{
2025-09-16T23:46:03.427659Z	      _id,
2025-09-16T23:46:03.427783Z	      name,
2025-09-16T23:46:03.427885Z	      "slug": slug.current,
2025-09-16T23:46:03.427997Z	      logo
2025-09-16T23:46:03.428089Z	    },
2025-09-16T23:46:03.428182Z	    relatedBrands[]->{
2025-09-16T23:46:03.428276Z	      _id,
2025-09-16T23:46:03.428382Z	      name,
2025-09-16T23:46:03.428505Z	      "slug": slug.current,
2025-09-16T23:46:03.428622Z	      logo
2025-09-16T23:46:03.428737Z	    },
2025-09-16T23:46:03.428828Z	    targetMarket,
2025-09-16T23:46:03.428918Z	    complexity,
2025-09-16T23:46:03.428995Z	    publishedAt,
2025-09-16T23:46:03.429075Z	    isPublished,
2025-09-16T23:46:03.429159Z	    isFeatured,
2025-09-16T23:46:03.429242Z	    viewCount,
2025-09-16T23:46:03.429325Z	    _createdAt,
2025-09-16T23:46:03.429435Z	    _updatedAt
2025-09-16T23:46:03.429543Z	  
2025-09-16T23:46:03.429632Z	      },
2025-09-16T23:46:03.429745Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-16T23:46:03.42985Z	    }
2025-09-16T23:46:03.42994Z	  
2025-09-16T23:46:03.430028Z	Query parameters: {
2025-09-16T23:46:03.43011Z	  limit: 4,
2025-09-16T23:46:03.430166Z	  offset: 0,
2025-09-16T23:46:03.430224Z	  targetMarket: undefined,
2025-09-16T23:46:03.430287Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:03.430384Z	  featured: undefined
2025-09-16T23:46:03.43051Z	}
2025-09-16T23:46:03.430589Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:03.430697Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.430804Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.430893Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:03.430987Z	Fetching products with query: 
2025-09-16T23:46:03.431085Z	    {
2025-09-16T23:46:03.431163Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.431255Z	        
2025-09-16T23:46:03.431355Z	    _id,
2025-09-16T23:46:03.43146Z	    _type,
2025-09-16T23:46:03.431555Z	    partNumber,
2025-09-16T23:46:03.431651Z	    "slug": slug.current,
2025-09-16T23:46:03.431767Z	    title,
2025-09-16T23:46:03.431859Z	    shortDescription,
2025-09-16T23:46:03.431966Z	    image,
2025-09-16T23:46:03.432064Z	    brand->{
2025-09-16T23:46:03.432155Z	      name,
2025-09-16T23:46:03.432237Z	      "slug": slug.current,
2025-09-16T23:46:03.432296Z	      logo
2025-09-16T23:46:03.432374Z	    },
2025-09-16T23:46:03.432477Z	    category->{
2025-09-16T23:46:03.432578Z	      name,
2025-09-16T23:46:03.432692Z	      "slug": slug.current
2025-09-16T23:46:03.432793Z	    },
2025-09-16T23:46:03.432889Z	    pricing{
2025-09-16T23:46:03.432993Z	      currency,
2025-09-16T23:46:03.433107Z	      tiers[]{
2025-09-16T23:46:03.43318Z	        quantity,
2025-09-16T23:46:03.433236Z	        price,
2025-09-16T23:46:03.433297Z	        unit
2025-09-16T23:46:03.433423Z	      },
2025-09-16T23:46:03.433611Z	      moq,
2025-09-16T23:46:03.433749Z	      leadTime,
2025-09-16T23:46:03.43387Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.434059Z	      "price": tiers[0].price,
2025-09-16T23:46:03.43418Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.434333Z	    },
2025-09-16T23:46:03.434459Z	    inventory{
2025-09-16T23:46:03.434613Z	      quantity,
2025-09-16T23:46:03.434771Z	      status,
2025-09-16T23:46:03.434904Z	      warehouse,
2025-09-16T23:46:03.435014Z	      lastUpdated,
2025-09-16T23:46:03.435134Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.435251Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.435359Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.435485Z	    },
2025-09-16T23:46:03.435605Z	    isActive,
2025-09-16T23:46:03.435761Z	    isFeatured,
2025-09-16T23:46:03.435895Z	    isNew,
2025-09-16T23:46:03.436024Z	    _createdAt,
2025-09-16T23:46:03.436145Z	    _updatedAt
2025-09-16T23:46:03.436276Z	  
2025-09-16T23:46:03.436402Z	      },
2025-09-16T23:46:03.43655Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-16T23:46:03.436665Z	    }
2025-09-16T23:46:03.436778Z	  
2025-09-16T23:46:03.43688Z	Query parameters: {
2025-09-16T23:46:03.437036Z	  limit: 8,
2025-09-16T23:46:03.437179Z	  offset: 0,
2025-09-16T23:46:03.437251Z	  category: undefined,
2025-09-16T23:46:03.43735Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:03.437415Z	  featured: undefined
2025-09-16T23:46:03.437489Z	}
2025-09-16T23:46:03.437549Z	Fetching solutions with query: 
2025-09-16T23:46:03.437605Z	    {
2025-09-16T23:46:03.437667Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.437774Z	        
2025-09-16T23:46:03.437834Z	    _id,
2025-09-16T23:46:03.438052Z	    title,
2025-09-16T23:46:03.438191Z	    "slug": slug.current,
2025-09-16T23:46:03.438458Z	    summary,
2025-09-16T23:46:03.438598Z	    description,
2025-09-16T23:46:03.438827Z	    coverImage,
2025-09-16T23:46:03.438964Z	    primaryBrand->{
2025-09-16T23:46:03.439097Z	      _id,
2025-09-16T23:46:03.439203Z	      name,
2025-09-16T23:46:03.439314Z	      "slug": slug.current,
2025-09-16T23:46:03.439414Z	      logo
2025-09-16T23:46:03.439521Z	    },
2025-09-16T23:46:03.439621Z	    relatedBrands[]->{
2025-09-16T23:46:03.439747Z	      _id,
2025-09-16T23:46:03.439851Z	      name,
2025-09-16T23:46:03.439958Z	      "slug": slug.current,
2025-09-16T23:46:03.440063Z	      logo
2025-09-16T23:46:03.440162Z	    },
2025-09-16T23:46:03.440286Z	    targetMarket,
2025-09-16T23:46:03.440394Z	    complexity,
2025-09-16T23:46:03.440514Z	    publishedAt,
2025-09-16T23:46:03.440598Z	    isPublished,
2025-09-16T23:46:03.440717Z	    isFeatured,
2025-09-16T23:46:03.44083Z	    viewCount,
2025-09-16T23:46:03.440933Z	    _createdAt,
2025-09-16T23:46:03.441032Z	    _updatedAt
2025-09-16T23:46:03.44113Z	  
2025-09-16T23:46:03.441249Z	      },
2025-09-16T23:46:03.441373Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-16T23:46:03.441507Z	    }
2025-09-16T23:46:03.441619Z	  
2025-09-16T23:46:03.441754Z	Query parameters: {
2025-09-16T23:46:03.441838Z	  limit: 4,
2025-09-16T23:46:03.441917Z	  offset: 0,
2025-09-16T23:46:03.442023Z	  targetMarket: undefined,
2025-09-16T23:46:03.442112Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:03.442208Z	  featured: undefined
2025-09-16T23:46:03.442308Z	}
2025-09-16T23:46:03.442404Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:03.442546Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.442878Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.443142Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-16T23:46:03.443349Z	Fetching products with query: 
2025-09-16T23:46:03.443557Z	    {
2025-09-16T23:46:03.443783Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.444043Z	        
2025-09-16T23:46:03.444147Z	    _id,
2025-09-16T23:46:03.44425Z	    _type,
2025-09-16T23:46:03.44446Z	    partNumber,
2025-09-16T23:46:03.444599Z	    "slug": slug.current,
2025-09-16T23:46:03.444747Z	    title,
2025-09-16T23:46:03.444869Z	    shortDescription,
2025-09-16T23:46:03.444979Z	    image,
2025-09-16T23:46:03.445084Z	    brand->{
2025-09-16T23:46:03.445182Z	      name,
2025-09-16T23:46:03.445285Z	      "slug": slug.current,
2025-09-16T23:46:03.445396Z	      logo
2025-09-16T23:46:03.445504Z	    },
2025-09-16T23:46:03.445605Z	    category->{
2025-09-16T23:46:03.445728Z	      name,
2025-09-16T23:46:03.445836Z	      "slug": slug.current
2025-09-16T23:46:03.445937Z	    },
2025-09-16T23:46:03.446057Z	    pricing{
2025-09-16T23:46:03.446171Z	      currency,
2025-09-16T23:46:03.44628Z	      tiers[]{
2025-09-16T23:46:03.446393Z	        quantity,
2025-09-16T23:46:03.446495Z	        price,
2025-09-16T23:46:03.446596Z	        unit
2025-09-16T23:46:03.446722Z	      },
2025-09-16T23:46:03.446832Z	      moq,
2025-09-16T23:46:03.446936Z	      leadTime,
2025-09-16T23:46:03.447039Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.447145Z	      "price": tiers[0].price,
2025-09-16T23:46:03.447249Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.447345Z	    },
2025-09-16T23:46:03.447459Z	    inventory{
2025-09-16T23:46:03.447564Z	      quantity,
2025-09-16T23:46:03.447665Z	      status,
2025-09-16T23:46:03.447818Z	      warehouse,
2025-09-16T23:46:03.447939Z	      lastUpdated,
2025-09-16T23:46:03.448069Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.448199Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.448311Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.44843Z	    },
2025-09-16T23:46:03.448544Z	    isActive,
2025-09-16T23:46:03.448655Z	    isFeatured,
2025-09-16T23:46:03.448794Z	    isNew,
2025-09-16T23:46:03.448901Z	    _createdAt,
2025-09-16T23:46:03.44901Z	    _updatedAt
2025-09-16T23:46:03.449118Z	  
2025-09-16T23:46:03.449221Z	      },
2025-09-16T23:46:03.449322Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-16T23:46:03.449457Z	    }
2025-09-16T23:46:03.449632Z	  
2025-09-16T23:46:03.449822Z	Query parameters: {
2025-09-16T23:46:03.449954Z	  limit: 8,
2025-09-16T23:46:03.450064Z	  offset: 0,
2025-09-16T23:46:03.45017Z	  category: undefined,
2025-09-16T23:46:03.450279Z	  brand: 'mediatek',
2025-09-16T23:46:03.450385Z	  featured: undefined
2025-09-16T23:46:03.450511Z	}
2025-09-16T23:46:03.450637Z	Fetching solutions with query: 
2025-09-16T23:46:03.450785Z	    {
2025-09-16T23:46:03.450916Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.451039Z	        
2025-09-16T23:46:03.451159Z	    _id,
2025-09-16T23:46:03.451274Z	    title,
2025-09-16T23:46:03.45138Z	    "slug": slug.current,
2025-09-16T23:46:03.451522Z	    summary,
2025-09-16T23:46:03.451639Z	    description,
2025-09-16T23:46:03.451776Z	    coverImage,
2025-09-16T23:46:03.451898Z	    primaryBrand->{
2025-09-16T23:46:03.452017Z	      _id,
2025-09-16T23:46:03.452123Z	      name,
2025-09-16T23:46:03.452231Z	      "slug": slug.current,
2025-09-16T23:46:03.452338Z	      logo
2025-09-16T23:46:03.452463Z	    },
2025-09-16T23:46:03.452589Z	    relatedBrands[]->{
2025-09-16T23:46:03.452728Z	      _id,
2025-09-16T23:46:03.452839Z	      name,
2025-09-16T23:46:03.452959Z	      "slug": slug.current,
2025-09-16T23:46:03.453088Z	      logo
2025-09-16T23:46:03.4532Z	    },
2025-09-16T23:46:03.453314Z	    targetMarket,
2025-09-16T23:46:03.453448Z	    complexity,
2025-09-16T23:46:03.45357Z	    publishedAt,
2025-09-16T23:46:03.453724Z	    isPublished,
2025-09-16T23:46:03.453848Z	    isFeatured,
2025-09-16T23:46:03.453951Z	    viewCount,
2025-09-16T23:46:03.454053Z	    _createdAt,
2025-09-16T23:46:03.454154Z	    _updatedAt
2025-09-16T23:46:03.454258Z	  
2025-09-16T23:46:03.454489Z	      },
2025-09-16T23:46:03.454775Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-16T23:46:03.454924Z	    }
2025-09-16T23:46:03.455045Z	  
2025-09-16T23:46:03.455183Z	Query parameters: {
2025-09-16T23:46:03.455322Z	  limit: 4,
2025-09-16T23:46:03.455478Z	  offset: 0,
2025-09-16T23:46:03.455616Z	  targetMarket: undefined,
2025-09-16T23:46:03.455766Z	  brand: 'mediatek',
2025-09-16T23:46:03.455881Z	  featured: undefined
2025-09-16T23:46:03.456012Z	}
2025-09-16T23:46:03.456146Z	✅ [getBrandData] Found brand: MediaTek
2025-09-16T23:46:03.456287Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.456421Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.456539Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-16T23:46:03.456732Z	Fetching products with query: 
2025-09-16T23:46:03.456888Z	    {
2025-09-16T23:46:03.457003Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.457109Z	        
2025-09-16T23:46:03.457282Z	    _id,
2025-09-16T23:46:03.45738Z	    _type,
2025-09-16T23:46:03.457567Z	    partNumber,
2025-09-16T23:46:03.457719Z	    "slug": slug.current,
2025-09-16T23:46:03.457851Z	    title,
2025-09-16T23:46:03.457973Z	    shortDescription,
2025-09-16T23:46:03.458135Z	    image,
2025-09-16T23:46:03.458274Z	    brand->{
2025-09-16T23:46:03.458421Z	      name,
2025-09-16T23:46:03.458577Z	      "slug": slug.current,
2025-09-16T23:46:03.45874Z	      logo
2025-09-16T23:46:03.458882Z	    },
2025-09-16T23:46:03.459024Z	    category->{
2025-09-16T23:46:03.459161Z	      name,
2025-09-16T23:46:03.459308Z	      "slug": slug.current
2025-09-16T23:46:03.459441Z	    },
2025-09-16T23:46:03.459595Z	    pricing{
2025-09-16T23:46:03.459895Z	      currency,
2025-09-16T23:46:03.460056Z	      tiers[]{
2025-09-16T23:46:03.460222Z	        quantity,
2025-09-16T23:46:03.460417Z	        price,
2025-09-16T23:46:03.460553Z	        unit
2025-09-16T23:46:03.460741Z	      },
2025-09-16T23:46:03.460885Z	      moq,
2025-09-16T23:46:03.461057Z	      leadTime,
2025-09-16T23:46:03.461229Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.46142Z	      "price": tiers[0].price,
2025-09-16T23:46:03.461553Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.461667Z	    },
2025-09-16T23:46:03.461822Z	    inventory{
2025-09-16T23:46:03.461922Z	      quantity,
2025-09-16T23:46:03.462027Z	      status,
2025-09-16T23:46:03.462131Z	      warehouse,
2025-09-16T23:46:03.462285Z	      lastUpdated,
2025-09-16T23:46:03.462513Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.462641Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.462814Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.462934Z	    },
2025-09-16T23:46:03.463036Z	    isActive,
2025-09-16T23:46:03.463146Z	    isFeatured,
2025-09-16T23:46:03.463251Z	    isNew,
2025-09-16T23:46:03.463347Z	    _createdAt,
2025-09-16T23:46:03.463447Z	    _updatedAt
2025-09-16T23:46:03.463555Z	  
2025-09-16T23:46:03.463656Z	      },
2025-09-16T23:46:03.463799Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-16T23:46:03.463962Z	    }
2025-09-16T23:46:03.464191Z	  
2025-09-16T23:46:03.464504Z	Query parameters: {
2025-09-16T23:46:03.464845Z	  limit: 8,
2025-09-16T23:46:03.465138Z	  offset: 0,
2025-09-16T23:46:03.465404Z	  category: undefined,
2025-09-16T23:46:03.4657Z	  brand: 'mediatek',
2025-09-16T23:46:03.465868Z	  featured: undefined
2025-09-16T23:46:03.466147Z	}
2025-09-16T23:46:03.466383Z	Fetching solutions with query: 
2025-09-16T23:46:03.466539Z	    {
2025-09-16T23:46:03.466867Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.467017Z	        
2025-09-16T23:46:03.467323Z	    _id,
2025-09-16T23:46:03.467585Z	    title,
2025-09-16T23:46:03.467765Z	    "slug": slug.current,
2025-09-16T23:46:03.468163Z	    summary,
2025-09-16T23:46:03.468316Z	    description,
2025-09-16T23:46:03.468731Z	    coverImage,
2025-09-16T23:46:03.468978Z	    primaryBrand->{
2025-09-16T23:46:03.469117Z	      _id,
2025-09-16T23:46:03.469336Z	      name,
2025-09-16T23:46:03.469498Z	      "slug": slug.current,
2025-09-16T23:46:03.469601Z	      logo
2025-09-16T23:46:03.469712Z	    },
2025-09-16T23:46:03.469807Z	    relatedBrands[]->{
2025-09-16T23:46:03.469905Z	      _id,
2025-09-16T23:46:03.469997Z	      name,
2025-09-16T23:46:03.470086Z	      "slug": slug.current,
2025-09-16T23:46:03.470324Z	      logo
2025-09-16T23:46:03.470559Z	    },
2025-09-16T23:46:03.470727Z	    targetMarket,
2025-09-16T23:46:03.470901Z	    complexity,
2025-09-16T23:46:03.47108Z	    publishedAt,
2025-09-16T23:46:03.472802Z	    isPublished,
2025-09-16T23:46:03.472972Z	    isFeatured,
2025-09-16T23:46:03.473612Z	    viewCount,
2025-09-16T23:46:03.475232Z	    _createdAt,
2025-09-16T23:46:03.475367Z	    _updatedAt
2025-09-16T23:46:03.475616Z	  
2025-09-16T23:46:03.475838Z	      },
2025-09-16T23:46:03.476975Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-16T23:46:03.477136Z	    }
2025-09-16T23:46:03.477239Z	  
2025-09-16T23:46:03.477327Z	Query parameters: {
2025-09-16T23:46:03.477411Z	  limit: 4,
2025-09-16T23:46:03.4777Z	  offset: 0,
2025-09-16T23:46:03.477821Z	  targetMarket: undefined,
2025-09-16T23:46:03.47791Z	  brand: 'mediatek',
2025-09-16T23:46:03.478018Z	  featured: undefined
2025-09-16T23:46:03.478141Z	}
2025-09-16T23:46:03.478309Z	✅ [getBrandData] Found brand: MediaTek
2025-09-16T23:46:03.478432Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.478562Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.47872Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-16T23:46:03.478858Z	Fetching products with query: 
2025-09-16T23:46:03.478973Z	    {
2025-09-16T23:46:03.479101Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.479232Z	        
2025-09-16T23:46:03.479358Z	    _id,
2025-09-16T23:46:03.479461Z	    _type,
2025-09-16T23:46:03.479568Z	    partNumber,
2025-09-16T23:46:03.479698Z	    "slug": slug.current,
2025-09-16T23:46:03.47981Z	    title,
2025-09-16T23:46:03.47991Z	    shortDescription,
2025-09-16T23:46:03.48001Z	    image,
2025-09-16T23:46:03.480115Z	    brand->{
2025-09-16T23:46:03.480218Z	      name,
2025-09-16T23:46:03.480319Z	      "slug": slug.current,
2025-09-16T23:46:03.480421Z	      logo
2025-09-16T23:46:03.480521Z	    },
2025-09-16T23:46:03.480641Z	    category->{
2025-09-16T23:46:03.480792Z	      name,
2025-09-16T23:46:03.48091Z	      "slug": slug.current
2025-09-16T23:46:03.481018Z	    },
2025-09-16T23:46:03.481124Z	    pricing{
2025-09-16T23:46:03.481224Z	      currency,
2025-09-16T23:46:03.481323Z	      tiers[]{
2025-09-16T23:46:03.481418Z	        quantity,
2025-09-16T23:46:03.48152Z	        price,
2025-09-16T23:46:03.481631Z	        unit
2025-09-16T23:46:03.481778Z	      },
2025-09-16T23:46:03.4819Z	      moq,
2025-09-16T23:46:03.482016Z	      leadTime,
2025-09-16T23:46:03.482128Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.482235Z	      "price": tiers[0].price,
2025-09-16T23:46:03.482346Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.482451Z	    },
2025-09-16T23:46:03.482554Z	    inventory{
2025-09-16T23:46:03.482667Z	      quantity,
2025-09-16T23:46:03.482784Z	      status,
2025-09-16T23:46:03.482888Z	      warehouse,
2025-09-16T23:46:03.482989Z	      lastUpdated,
2025-09-16T23:46:03.483103Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.483217Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.483322Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.483422Z	    },
2025-09-16T23:46:03.483521Z	    isActive,
2025-09-16T23:46:03.483631Z	    isFeatured,
2025-09-16T23:46:03.483759Z	    isNew,
2025-09-16T23:46:03.48396Z	    _createdAt,
2025-09-16T23:46:03.484139Z	    _updatedAt
2025-09-16T23:46:03.484264Z	  
2025-09-16T23:46:03.484374Z	      },
2025-09-16T23:46:03.484507Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-16T23:46:03.484625Z	    }
2025-09-16T23:46:03.484785Z	  
2025-09-16T23:46:03.484921Z	Query parameters: {
2025-09-16T23:46:03.485033Z	  limit: 8,
2025-09-16T23:46:03.485133Z	  offset: 0,
2025-09-16T23:46:03.485257Z	  category: undefined,
2025-09-16T23:46:03.485357Z	  brand: 'ixys',
2025-09-16T23:46:03.485495Z	  featured: undefined
2025-09-16T23:46:03.485625Z	}
2025-09-16T23:46:03.485788Z	Fetching solutions with query: 
2025-09-16T23:46:03.485928Z	    {
2025-09-16T23:46:03.486055Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.48619Z	        
2025-09-16T23:46:03.486346Z	    _id,
2025-09-16T23:46:03.486511Z	    title,
2025-09-16T23:46:03.486643Z	    "slug": slug.current,
2025-09-16T23:46:03.486769Z	    summary,
2025-09-16T23:46:03.486874Z	    description,
2025-09-16T23:46:03.486968Z	    coverImage,
2025-09-16T23:46:03.487067Z	    primaryBrand->{
2025-09-16T23:46:03.487166Z	      _id,
2025-09-16T23:46:03.487267Z	      name,
2025-09-16T23:46:03.487419Z	      "slug": slug.current,
2025-09-16T23:46:03.487528Z	      logo
2025-09-16T23:46:03.487617Z	    },
2025-09-16T23:46:03.487904Z	    relatedBrands[]->{
2025-09-16T23:46:03.488087Z	      _id,
2025-09-16T23:46:03.488193Z	      name,
2025-09-16T23:46:03.488254Z	      "slug": slug.current,
2025-09-16T23:46:03.488313Z	      logo
2025-09-16T23:46:03.488371Z	    },
2025-09-16T23:46:03.488572Z	    targetMarket,
2025-09-16T23:46:03.488763Z	    complexity,
2025-09-16T23:46:03.488841Z	    publishedAt,
2025-09-16T23:46:03.489035Z	    isPublished,
2025-09-16T23:46:03.489136Z	    isFeatured,
2025-09-16T23:46:03.489335Z	    viewCount,
2025-09-16T23:46:03.489555Z	    _createdAt,
2025-09-16T23:46:03.489765Z	    _updatedAt
2025-09-16T23:46:03.489978Z	  
2025-09-16T23:46:03.490086Z	      },
2025-09-16T23:46:03.490386Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-16T23:46:03.490623Z	    }
2025-09-16T23:46:03.490852Z	  
2025-09-16T23:46:03.491057Z	Query parameters: {
2025-09-16T23:46:03.491275Z	  limit: 4,
2025-09-16T23:46:03.491499Z	  offset: 0,
2025-09-16T23:46:03.491862Z	  targetMarket: undefined,
2025-09-16T23:46:03.492156Z	  brand: 'ixys',
2025-09-16T23:46:03.492251Z	  featured: undefined
2025-09-16T23:46:03.492543Z	}
2025-09-16T23:46:03.493029Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:03.493458Z	✅ [getBrandData] Found brand: IXYS
2025-09-16T23:46:03.493599Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.49415Z	Solutions fetch result: {
2025-09-16T23:46:03.494464Z	  totalSolutions: 1,
2025-09-16T23:46:03.494774Z	  fetchedSolutions: 1,
2025-09-16T23:46:03.494904Z	  firstSolution: {
2025-09-16T23:46:03.49519Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-16T23:46:03.495355Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-16T23:46:03.495502Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-16T23:46:03.495622Z	    complexity: 'medium',
2025-09-16T23:46:03.495776Z	    coverImage: null,
2025-09-16T23:46:03.49594Z	    description: [ [Object] ],
2025-09-16T23:46:03.496097Z	    isFeatured: false,
2025-09-16T23:46:03.496253Z	    isPublished: true,
2025-09-16T23:46:03.496419Z	    primaryBrand: {
2025-09-16T23:46:03.496585Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:46:03.496792Z	      logo: null,
2025-09-16T23:46:03.496952Z	      name: 'IXYS',
2025-09-16T23:46:03.497186Z	      slug: 'ixys'
2025-09-16T23:46:03.497406Z	    },
2025-09-16T23:46:03.497563Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-16T23:46:03.497742Z	    relatedBrands: null,
2025-09-16T23:46:03.497873Z	    slug: '99999',
2025-09-16T23:46:03.497989Z	    summary: '99999',
2025-09-16T23:46:03.498173Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:03.498301Z	    title: '99999',
2025-09-16T23:46:03.49841Z	    viewCount: 0
2025-09-16T23:46:03.498516Z	  }
2025-09-16T23:46:03.498636Z	}
2025-09-16T23:46:03.498784Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-16T23:46:03.498894Z	Fetching products with query: 
2025-09-16T23:46:03.498989Z	    {
2025-09-16T23:46:03.49908Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.499182Z	        
2025-09-16T23:46:03.49931Z	    _id,
2025-09-16T23:46:03.499422Z	    _type,
2025-09-16T23:46:03.499524Z	    partNumber,
2025-09-16T23:46:03.499628Z	    "slug": slug.current,
2025-09-16T23:46:03.523994Z	    title,
2025-09-16T23:46:03.524182Z	    shortDescription,
2025-09-16T23:46:03.524304Z	    image,
2025-09-16T23:46:03.524378Z	    brand->{
2025-09-16T23:46:03.524459Z	      name,
2025-09-16T23:46:03.524554Z	      "slug": slug.current,
2025-09-16T23:46:03.52465Z	      logo
2025-09-16T23:46:03.524977Z	    },
2025-09-16T23:46:03.52524Z	    category->{
2025-09-16T23:46:03.525382Z	      name,
2025-09-16T23:46:03.525925Z	      "slug": slug.current
2025-09-16T23:46:03.526047Z	    },
2025-09-16T23:46:03.526398Z	    pricing{
2025-09-16T23:46:03.526473Z	      currency,
2025-09-16T23:46:03.526542Z	      tiers[]{
2025-09-16T23:46:03.526599Z	        quantity,
2025-09-16T23:46:03.527536Z	        price,
2025-09-16T23:46:03.527699Z	        unit
2025-09-16T23:46:03.527921Z	      },
2025-09-16T23:46:03.528046Z	      moq,
2025-09-16T23:46:03.528246Z	      leadTime,
2025-09-16T23:46:03.528487Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.528754Z	      "price": tiers[0].price,
2025-09-16T23:46:03.528883Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.529142Z	    },
2025-09-16T23:46:03.529538Z	    inventory{
2025-09-16T23:46:03.529852Z	      quantity,
2025-09-16T23:46:03.530173Z	      status,
2025-09-16T23:46:03.530525Z	      warehouse,
2025-09-16T23:46:03.531125Z	      lastUpdated,
2025-09-16T23:46:03.531414Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.531561Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.531935Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.532062Z	    },
2025-09-16T23:46:03.532301Z	    isActive,
2025-09-16T23:46:03.532421Z	    isFeatured,
2025-09-16T23:46:03.532899Z	    isNew,
2025-09-16T23:46:03.533031Z	    _createdAt,
2025-09-16T23:46:03.53331Z	    _updatedAt
2025-09-16T23:46:03.533592Z	  
2025-09-16T23:46:03.533897Z	      },
2025-09-16T23:46:03.534122Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-16T23:46:03.534354Z	    }
2025-09-16T23:46:03.534621Z	  
2025-09-16T23:46:03.535407Z	Query parameters: {
2025-09-16T23:46:03.535694Z	  limit: 8,
2025-09-16T23:46:03.536136Z	  offset: 0,
2025-09-16T23:46:03.536471Z	  category: undefined,
2025-09-16T23:46:03.536628Z	  brand: 'ixys',
2025-09-16T23:46:03.536897Z	  featured: undefined
2025-09-16T23:46:03.537068Z	}
2025-09-16T23:46:03.537174Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:03.537272Z	Fetching solutions with query: 
2025-09-16T23:46:03.537414Z	    {
2025-09-16T23:46:03.537539Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.537653Z	        
2025-09-16T23:46:03.537843Z	    _id,
2025-09-16T23:46:03.537971Z	    title,
2025-09-16T23:46:03.538085Z	    "slug": slug.current,
2025-09-16T23:46:03.538294Z	    summary,
2025-09-16T23:46:03.538426Z	    description,
2025-09-16T23:46:03.538583Z	    coverImage,
2025-09-16T23:46:03.538711Z	    primaryBrand->{
2025-09-16T23:46:03.538836Z	      _id,
2025-09-16T23:46:03.538968Z	      name,
2025-09-16T23:46:03.539096Z	      "slug": slug.current,
2025-09-16T23:46:03.53921Z	      logo
2025-09-16T23:46:03.539356Z	    },
2025-09-16T23:46:03.539462Z	    relatedBrands[]->{
2025-09-16T23:46:03.539565Z	      _id,
2025-09-16T23:46:03.539763Z	      name,
2025-09-16T23:46:03.540017Z	      "slug": slug.current,
2025-09-16T23:46:03.540183Z	      logo
2025-09-16T23:46:03.540339Z	    },
2025-09-16T23:46:03.540491Z	    targetMarket,
2025-09-16T23:46:03.540625Z	    complexity,
2025-09-16T23:46:03.540757Z	    publishedAt,
2025-09-16T23:46:03.540866Z	    isPublished,
2025-09-16T23:46:03.540971Z	    isFeatured,
2025-09-16T23:46:03.541074Z	    viewCount,
2025-09-16T23:46:03.541172Z	    _createdAt,
2025-09-16T23:46:03.541266Z	    _updatedAt
2025-09-16T23:46:03.541375Z	  
2025-09-16T23:46:03.541471Z	      },
2025-09-16T23:46:03.541565Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-16T23:46:03.541697Z	    }
2025-09-16T23:46:03.541821Z	  
2025-09-16T23:46:03.541931Z	Query parameters: {
2025-09-16T23:46:03.54204Z	  limit: 4,
2025-09-16T23:46:03.542147Z	  offset: 0,
2025-09-16T23:46:03.542256Z	  targetMarket: undefined,
2025-09-16T23:46:03.542367Z	  brand: 'ixys',
2025-09-16T23:46:03.542872Z	  featured: undefined
2025-09-16T23:46:03.543Z	}
2025-09-16T23:46:03.543108Z	✅ [getBrandData] Found brand: IXYS
2025-09-16T23:46:03.543224Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.54334Z	Solutions fetch result: {
2025-09-16T23:46:03.543808Z	  totalSolutions: 1,
2025-09-16T23:46:03.543966Z	  fetchedSolutions: 1,
2025-09-16T23:46:03.544096Z	  firstSolution: {
2025-09-16T23:46:03.544205Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-16T23:46:03.544355Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-16T23:46:03.544461Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-16T23:46:03.54456Z	    complexity: 'medium',
2025-09-16T23:46:03.544654Z	    coverImage: null,
2025-09-16T23:46:03.544796Z	    description: [ [Object] ],
2025-09-16T23:46:03.544909Z	    isFeatured: false,
2025-09-16T23:46:03.545016Z	    isPublished: true,
2025-09-16T23:46:03.545157Z	    primaryBrand: {
2025-09-16T23:46:03.545336Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:46:03.54564Z	      logo: null,
2025-09-16T23:46:03.54603Z	      name: 'IXYS',
2025-09-16T23:46:03.546345Z	      slug: 'ixys'
2025-09-16T23:46:03.546533Z	    },
2025-09-16T23:46:03.546812Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-16T23:46:03.547204Z	    relatedBrands: null,
2025-09-16T23:46:03.547531Z	    slug: '99999',
2025-09-16T23:46:03.547728Z	    summary: '99999',
2025-09-16T23:46:03.547847Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:03.547942Z	    title: '99999',
2025-09-16T23:46:03.548035Z	    viewCount: 0
2025-09-16T23:46:03.548128Z	  }
2025-09-16T23:46:03.548215Z	}
2025-09-16T23:46:03.548307Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:03.548395Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-16T23:46:03.548533Z	Fetching products with query: 
2025-09-16T23:46:03.548646Z	    {
2025-09-16T23:46:03.548867Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.549434Z	        
2025-09-16T23:46:03.549547Z	    _id,
2025-09-16T23:46:03.549649Z	    _type,
2025-09-16T23:46:03.549787Z	    partNumber,
2025-09-16T23:46:03.5499Z	    "slug": slug.current,
2025-09-16T23:46:03.550622Z	    title,
2025-09-16T23:46:03.550789Z	    shortDescription,
2025-09-16T23:46:03.550897Z	    image,
2025-09-16T23:46:03.551013Z	    brand->{
2025-09-16T23:46:03.551116Z	      name,
2025-09-16T23:46:03.551215Z	      "slug": slug.current,
2025-09-16T23:46:03.551332Z	      logo
2025-09-16T23:46:03.551454Z	    },
2025-09-16T23:46:03.551569Z	    category->{
2025-09-16T23:46:03.551696Z	      name,
2025-09-16T23:46:03.551824Z	      "slug": slug.current
2025-09-16T23:46:03.551931Z	    },
2025-09-16T23:46:03.552048Z	    pricing{
2025-09-16T23:46:03.552143Z	      currency,
2025-09-16T23:46:03.552248Z	      tiers[]{
2025-09-16T23:46:03.552338Z	        quantity,
2025-09-16T23:46:03.552419Z	        price,
2025-09-16T23:46:03.552517Z	        unit
2025-09-16T23:46:03.552622Z	      },
2025-09-16T23:46:03.552729Z	      moq,
2025-09-16T23:46:03.552824Z	      leadTime,
2025-09-16T23:46:03.552921Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.553044Z	      "price": tiers[0].price,
2025-09-16T23:46:03.553144Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.553246Z	    },
2025-09-16T23:46:03.553341Z	    inventory{
2025-09-16T23:46:03.553438Z	      quantity,
2025-09-16T23:46:03.553544Z	      status,
2025-09-16T23:46:03.553657Z	      warehouse,
2025-09-16T23:46:03.553796Z	      lastUpdated,
2025-09-16T23:46:03.553911Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.554024Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.554122Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.554215Z	    },
2025-09-16T23:46:03.554319Z	    isActive,
2025-09-16T23:46:03.554441Z	    isFeatured,
2025-09-16T23:46:03.554563Z	    isNew,
2025-09-16T23:46:03.55469Z	    _createdAt,
2025-09-16T23:46:03.554811Z	    _updatedAt
2025-09-16T23:46:03.554935Z	  
2025-09-16T23:46:03.555047Z	      },
2025-09-16T23:46:03.555168Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-16T23:46:03.555293Z	    }
2025-09-16T23:46:03.555401Z	  
2025-09-16T23:46:03.555629Z	Query parameters: {
2025-09-16T23:46:03.555812Z	  limit: 8,
2025-09-16T23:46:03.555981Z	  offset: 0,
2025-09-16T23:46:03.556095Z	  category: undefined,
2025-09-16T23:46:03.556213Z	  brand: 'sanrex',
2025-09-16T23:46:03.556308Z	  featured: undefined
2025-09-16T23:46:03.556398Z	}
2025-09-16T23:46:03.556582Z	Fetching solutions with query: 
2025-09-16T23:46:03.556731Z	    {
2025-09-16T23:46:03.556831Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.556929Z	        
2025-09-16T23:46:03.557024Z	    _id,
2025-09-16T23:46:03.557291Z	    title,
2025-09-16T23:46:03.557407Z	    "slug": slug.current,
2025-09-16T23:46:03.557512Z	    summary,
2025-09-16T23:46:03.557609Z	    description,
2025-09-16T23:46:03.557746Z	    coverImage,
2025-09-16T23:46:03.557841Z	    primaryBrand->{
2025-09-16T23:46:03.557933Z	      _id,
2025-09-16T23:46:03.558037Z	      name,
2025-09-16T23:46:03.558148Z	      "slug": slug.current,
2025-09-16T23:46:03.558242Z	      logo
2025-09-16T23:46:03.558329Z	    },
2025-09-16T23:46:03.55842Z	    relatedBrands[]->{
2025-09-16T23:46:03.558508Z	      _id,
2025-09-16T23:46:03.5586Z	      name,
2025-09-16T23:46:03.558726Z	      "slug": slug.current,
2025-09-16T23:46:03.558826Z	      logo
2025-09-16T23:46:03.558916Z	    },
2025-09-16T23:46:03.559005Z	    targetMarket,
2025-09-16T23:46:03.559092Z	    complexity,
2025-09-16T23:46:03.559241Z	    publishedAt,
2025-09-16T23:46:03.559408Z	    isPublished,
2025-09-16T23:46:03.559543Z	    isFeatured,
2025-09-16T23:46:03.559893Z	    viewCount,
2025-09-16T23:46:03.560052Z	    _createdAt,
2025-09-16T23:46:03.5603Z	    _updatedAt
2025-09-16T23:46:03.560523Z	  
2025-09-16T23:46:03.560729Z	      },
2025-09-16T23:46:03.560911Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-16T23:46:03.561054Z	    }
2025-09-16T23:46:03.561171Z	  
2025-09-16T23:46:03.561278Z	Query parameters: {
2025-09-16T23:46:03.561378Z	  limit: 4,
2025-09-16T23:46:03.561523Z	  offset: 0,
2025-09-16T23:46:03.56165Z	  targetMarket: undefined,
2025-09-16T23:46:03.562011Z	  brand: 'sanrex',
2025-09-16T23:46:03.562141Z	  featured: undefined
2025-09-16T23:46:03.562241Z	}
2025-09-16T23:46:03.562369Z	✅ [getBrandData] Found brand: Sanrex
2025-09-16T23:46:03.562538Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.562647Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.562802Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-16T23:46:03.562913Z	Fetching products with query: 
2025-09-16T23:46:03.563016Z	    {
2025-09-16T23:46:03.56313Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.563256Z	        
2025-09-16T23:46:03.56336Z	    _id,
2025-09-16T23:46:03.563456Z	    _type,
2025-09-16T23:46:03.563562Z	    partNumber,
2025-09-16T23:46:03.563659Z	    "slug": slug.current,
2025-09-16T23:46:03.56378Z	    title,
2025-09-16T23:46:03.563878Z	    shortDescription,
2025-09-16T23:46:03.563969Z	    image,
2025-09-16T23:46:03.564066Z	    brand->{
2025-09-16T23:46:03.564156Z	      name,
2025-09-16T23:46:03.564255Z	      "slug": slug.current,
2025-09-16T23:46:03.564349Z	      logo
2025-09-16T23:46:03.564449Z	    },
2025-09-16T23:46:03.564543Z	    category->{
2025-09-16T23:46:03.564636Z	      name,
2025-09-16T23:46:03.564783Z	      "slug": slug.current
2025-09-16T23:46:03.56488Z	    },
2025-09-16T23:46:03.564966Z	    pricing{
2025-09-16T23:46:03.565054Z	      currency,
2025-09-16T23:46:03.565142Z	      tiers[]{
2025-09-16T23:46:03.565227Z	        quantity,
2025-09-16T23:46:03.565309Z	        price,
2025-09-16T23:46:03.565388Z	        unit
2025-09-16T23:46:03.565471Z	      },
2025-09-16T23:46:03.565558Z	      moq,
2025-09-16T23:46:03.565649Z	      leadTime,
2025-09-16T23:46:03.565768Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.565879Z	      "price": tiers[0].price,
2025-09-16T23:46:03.565981Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.566079Z	    },
2025-09-16T23:46:03.566183Z	    inventory{
2025-09-16T23:46:03.566268Z	      quantity,
2025-09-16T23:46:03.566346Z	      status,
2025-09-16T23:46:03.566419Z	      warehouse,
2025-09-16T23:46:03.566562Z	      lastUpdated,
2025-09-16T23:46:03.566647Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.566806Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.566878Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.567073Z	    },
2025-09-16T23:46:03.567134Z	    isActive,
2025-09-16T23:46:03.567322Z	    isFeatured,
2025-09-16T23:46:03.567513Z	    isNew,
2025-09-16T23:46:03.567634Z	    _createdAt,
2025-09-16T23:46:03.567961Z	    _updatedAt
2025-09-16T23:46:03.568087Z	  
2025-09-16T23:46:03.56818Z	      },
2025-09-16T23:46:03.568263Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-16T23:46:03.568355Z	    }
2025-09-16T23:46:03.568442Z	  
2025-09-16T23:46:03.568528Z	Query parameters: {
2025-09-16T23:46:03.568617Z	  limit: 8,
2025-09-16T23:46:03.568755Z	  offset: 0,
2025-09-16T23:46:03.568853Z	  category: undefined,
2025-09-16T23:46:03.568942Z	  brand: 'sanrex',
2025-09-16T23:46:03.569043Z	  featured: undefined
2025-09-16T23:46:03.569145Z	}
2025-09-16T23:46:03.569294Z	Fetching solutions with query: 
2025-09-16T23:46:03.569404Z	    {
2025-09-16T23:46:03.569503Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.569635Z	        
2025-09-16T23:46:03.56976Z	    _id,
2025-09-16T23:46:03.569854Z	    title,
2025-09-16T23:46:03.569947Z	    "slug": slug.current,
2025-09-16T23:46:03.570035Z	    summary,
2025-09-16T23:46:03.570133Z	    description,
2025-09-16T23:46:03.570222Z	    coverImage,
2025-09-16T23:46:03.57035Z	    primaryBrand->{
2025-09-16T23:46:03.570452Z	      _id,
2025-09-16T23:46:03.570552Z	      name,
2025-09-16T23:46:03.570644Z	      "slug": slug.current,
2025-09-16T23:46:03.570793Z	      logo
2025-09-16T23:46:03.570899Z	    },
2025-09-16T23:46:03.570993Z	    relatedBrands[]->{
2025-09-16T23:46:03.571085Z	      _id,
2025-09-16T23:46:03.571181Z	      name,
2025-09-16T23:46:03.571276Z	      "slug": slug.current,
2025-09-16T23:46:03.571369Z	      logo
2025-09-16T23:46:03.571431Z	    },
2025-09-16T23:46:03.571492Z	    targetMarket,
2025-09-16T23:46:03.571552Z	    complexity,
2025-09-16T23:46:03.571616Z	    publishedAt,
2025-09-16T23:46:03.571722Z	    isPublished,
2025-09-16T23:46:03.571802Z	    isFeatured,
2025-09-16T23:46:03.571882Z	    viewCount,
2025-09-16T23:46:03.571974Z	    _createdAt,
2025-09-16T23:46:03.572063Z	    _updatedAt
2025-09-16T23:46:03.57213Z	  
2025-09-16T23:46:03.572216Z	      },
2025-09-16T23:46:03.572314Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-16T23:46:03.572423Z	    }
2025-09-16T23:46:03.572503Z	  
2025-09-16T23:46:03.57256Z	Query parameters: {
2025-09-16T23:46:03.572614Z	  limit: 4,
2025-09-16T23:46:03.572727Z	  offset: 0,
2025-09-16T23:46:03.572816Z	  targetMarket: undefined,
2025-09-16T23:46:03.5729Z	  brand: 'sanrex',
2025-09-16T23:46:03.572997Z	  featured: undefined
2025-09-16T23:46:03.573069Z	}
2025-09-16T23:46:03.573151Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:03.573233Z	✅ [getBrandData] Found brand: Sanrex
2025-09-16T23:46:03.573311Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.573391Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.573491Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-16T23:46:03.573587Z	Fetching products with query: 
2025-09-16T23:46:03.57369Z	    {
2025-09-16T23:46:03.573783Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.573892Z	        
2025-09-16T23:46:03.573991Z	    _id,
2025-09-16T23:46:03.57408Z	    _type,
2025-09-16T23:46:03.574176Z	    partNumber,
2025-09-16T23:46:03.574266Z	    "slug": slug.current,
2025-09-16T23:46:03.574342Z	    title,
2025-09-16T23:46:03.574428Z	    shortDescription,
2025-09-16T23:46:03.574518Z	    image,
2025-09-16T23:46:03.574631Z	    brand->{
2025-09-16T23:46:03.574752Z	      name,
2025-09-16T23:46:03.574854Z	      "slug": slug.current,
2025-09-16T23:46:03.574946Z	      logo
2025-09-16T23:46:03.575034Z	    },
2025-09-16T23:46:03.575091Z	    category->{
2025-09-16T23:46:03.575149Z	      name,
2025-09-16T23:46:03.575202Z	      "slug": slug.current
2025-09-16T23:46:03.575264Z	    },
2025-09-16T23:46:03.575343Z	    pricing{
2025-09-16T23:46:03.575443Z	      currency,
2025-09-16T23:46:03.57555Z	      tiers[]{
2025-09-16T23:46:03.57565Z	        quantity,
2025-09-16T23:46:03.575783Z	        price,
2025-09-16T23:46:03.575875Z	        unit
2025-09-16T23:46:03.575935Z	      },
2025-09-16T23:46:03.57599Z	      moq,
2025-09-16T23:46:03.576045Z	      leadTime,
2025-09-16T23:46:03.576103Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.576161Z	      "price": tiers[0].price,
2025-09-16T23:46:03.576215Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.576292Z	    },
2025-09-16T23:46:03.576389Z	    inventory{
2025-09-16T23:46:03.576472Z	      quantity,
2025-09-16T23:46:03.576572Z	      status,
2025-09-16T23:46:03.576666Z	      warehouse,
2025-09-16T23:46:03.576782Z	      lastUpdated,
2025-09-16T23:46:03.576867Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.576965Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.577055Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.577141Z	    },
2025-09-16T23:46:03.577223Z	    isActive,
2025-09-16T23:46:03.577305Z	    isFeatured,
2025-09-16T23:46:03.577388Z	    isNew,
2025-09-16T23:46:03.577474Z	    _createdAt,
2025-09-16T23:46:03.577556Z	    _updatedAt
2025-09-16T23:46:03.577641Z	  
2025-09-16T23:46:03.577769Z	      },
2025-09-16T23:46:03.577867Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-16T23:46:03.577972Z	    }
2025-09-16T23:46:03.578071Z	  
2025-09-16T23:46:03.578172Z	Query parameters: {
2025-09-16T23:46:03.57828Z	  limit: 8,
2025-09-16T23:46:03.578382Z	  offset: 0,
2025-09-16T23:46:03.578482Z	  category: undefined,
2025-09-16T23:46:03.578602Z	  brand: 'lem',
2025-09-16T23:46:03.578723Z	  featured: undefined
2025-09-16T23:46:03.57882Z	}
2025-09-16T23:46:03.578911Z	Fetching solutions with query: 
2025-09-16T23:46:03.579Z	    {
2025-09-16T23:46:03.579097Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.579195Z	        
2025-09-16T23:46:03.579354Z	    _id,
2025-09-16T23:46:03.579462Z	    title,
2025-09-16T23:46:03.579558Z	    "slug": slug.current,
2025-09-16T23:46:03.579665Z	    summary,
2025-09-16T23:46:03.579833Z	    description,
2025-09-16T23:46:03.579945Z	    coverImage,
2025-09-16T23:46:03.58006Z	    primaryBrand->{
2025-09-16T23:46:03.580158Z	      _id,
2025-09-16T23:46:03.580267Z	      name,
2025-09-16T23:46:03.580364Z	      "slug": slug.current,
2025-09-16T23:46:03.580463Z	      logo
2025-09-16T23:46:03.580556Z	    },
2025-09-16T23:46:03.58065Z	    relatedBrands[]->{
2025-09-16T23:46:03.580774Z	      _id,
2025-09-16T23:46:03.580882Z	      name,
2025-09-16T23:46:03.580983Z	      "slug": slug.current,
2025-09-16T23:46:03.581081Z	      logo
2025-09-16T23:46:03.581172Z	    },
2025-09-16T23:46:03.581282Z	    targetMarket,
2025-09-16T23:46:03.581505Z	    complexity,
2025-09-16T23:46:03.581666Z	    publishedAt,
2025-09-16T23:46:03.581789Z	    isPublished,
2025-09-16T23:46:03.581963Z	    isFeatured,
2025-09-16T23:46:03.58208Z	    viewCount,
2025-09-16T23:46:03.582231Z	    _createdAt,
2025-09-16T23:46:03.582375Z	    _updatedAt
2025-09-16T23:46:03.582478Z	  
2025-09-16T23:46:03.582606Z	      },
2025-09-16T23:46:03.582769Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-16T23:46:03.582912Z	    }
2025-09-16T23:46:03.583028Z	  
2025-09-16T23:46:03.583141Z	Query parameters: {
2025-09-16T23:46:03.583275Z	  limit: 4,
2025-09-16T23:46:03.583419Z	  offset: 0,
2025-09-16T23:46:03.583666Z	  targetMarket: undefined,
2025-09-16T23:46:03.583928Z	  brand: 'lem',
2025-09-16T23:46:03.584108Z	  featured: undefined
2025-09-16T23:46:03.584394Z	}
2025-09-16T23:46:03.584591Z	✅ [getBrandData] Found brand: LEM
2025-09-16T23:46:03.584738Z	Products fetch result: {
2025-09-16T23:46:03.584867Z	  totalProducts: 3,
2025-09-16T23:46:03.58496Z	  fetchedProducts: 3,
2025-09-16T23:46:03.585062Z	  firstProduct: {
2025-09-16T23:46:03.585135Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-16T23:46:03.585194Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-16T23:46:03.585258Z	    _type: 'product',
2025-09-16T23:46:03.585336Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-16T23:46:03.585416Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-16T23:46:03.585501Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-16T23:46:03.585663Z	    image: null,
2025-09-16T23:46:03.585869Z	    inventory: {
2025-09-16T23:46:03.586016Z	      inStock: true,
2025-09-16T23:46:03.586126Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-16T23:46:03.586225Z	      quantity: 0,
2025-09-16T23:46:03.58634Z	      status: 'in_stock',
2025-09-16T23:46:03.586443Z	      warehouse: null
2025-09-16T23:46:03.58656Z	    },
2025-09-16T23:46:03.586705Z	    isActive: true,
2025-09-16T23:46:03.586823Z	    isFeatured: false,
2025-09-16T23:46:03.586936Z	    isNew: false,
2025-09-16T23:46:03.587044Z	    partNumber: 'la55-p',
2025-09-16T23:46:03.587147Z	    pricing: {
2025-09-16T23:46:03.587245Z	      currency: 'CNY',
2025-09-16T23:46:03.587335Z	      leadTime: null,
2025-09-16T23:46:03.587428Z	      moq: null,
2025-09-16T23:46:03.587521Z	      price: null,
2025-09-16T23:46:03.58761Z	      tiers: null
2025-09-16T23:46:03.587751Z	    },
2025-09-16T23:46:03.587872Z	    shortDescription: '电流传感器la55-p',
2025-09-16T23:46:03.588002Z	    slug: 'la55-p',
2025-09-16T23:46:03.588109Z	    title: '电流传感器la55-p'
2025-09-16T23:46:03.58823Z	  }
2025-09-16T23:46:03.588339Z	}
2025-09-16T23:46:03.588458Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.588568Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-16T23:46:03.588752Z	Fetching products with query: 
2025-09-16T23:46:03.588889Z	    {
2025-09-16T23:46:03.589019Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.589169Z	        
2025-09-16T23:46:03.589274Z	    _id,
2025-09-16T23:46:03.589369Z	    _type,
2025-09-16T23:46:03.589461Z	    partNumber,
2025-09-16T23:46:03.589549Z	    "slug": slug.current,
2025-09-16T23:46:03.589611Z	    title,
2025-09-16T23:46:03.589699Z	    shortDescription,
2025-09-16T23:46:03.589817Z	    image,
2025-09-16T23:46:03.589929Z	    brand->{
2025-09-16T23:46:03.590038Z	      name,
2025-09-16T23:46:03.590155Z	      "slug": slug.current,
2025-09-16T23:46:03.590262Z	      logo
2025-09-16T23:46:03.590368Z	    },
2025-09-16T23:46:03.590471Z	    category->{
2025-09-16T23:46:03.590568Z	      name,
2025-09-16T23:46:03.59067Z	      "slug": slug.current
2025-09-16T23:46:03.591044Z	    },
2025-09-16T23:46:03.591378Z	    pricing{
2025-09-16T23:46:03.591668Z	      currency,
2025-09-16T23:46:03.591888Z	      tiers[]{
2025-09-16T23:46:03.592267Z	        quantity,
2025-09-16T23:46:03.592405Z	        price,
2025-09-16T23:46:03.59271Z	        unit
2025-09-16T23:46:03.592842Z	      },
2025-09-16T23:46:03.592939Z	      moq,
2025-09-16T23:46:03.59303Z	      leadTime,
2025-09-16T23:46:03.593117Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.593209Z	      "price": tiers[0].price,
2025-09-16T23:46:03.593312Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.593411Z	    },
2025-09-16T23:46:03.593513Z	    inventory{
2025-09-16T23:46:03.593605Z	      quantity,
2025-09-16T23:46:03.593735Z	      status,
2025-09-16T23:46:03.593839Z	      warehouse,
2025-09-16T23:46:03.593941Z	      lastUpdated,
2025-09-16T23:46:03.594101Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.594276Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.5944Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.594515Z	    },
2025-09-16T23:46:03.594631Z	    isActive,
2025-09-16T23:46:03.624276Z	    isFeatured,
2025-09-16T23:46:03.624647Z	    isNew,
2025-09-16T23:46:03.624815Z	    _createdAt,
2025-09-16T23:46:03.624938Z	    _updatedAt
2025-09-16T23:46:03.625057Z	  
2025-09-16T23:46:03.62516Z	      },
2025-09-16T23:46:03.625264Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-16T23:46:03.625384Z	    }
2025-09-16T23:46:03.625504Z	  
2025-09-16T23:46:03.62561Z	Query parameters: {
2025-09-16T23:46:03.62574Z	  limit: 8,
2025-09-16T23:46:03.62585Z	  offset: 0,
2025-09-16T23:46:03.625951Z	  category: undefined,
2025-09-16T23:46:03.626094Z	  brand: 'lem',
2025-09-16T23:46:03.626193Z	  featured: undefined
2025-09-16T23:46:03.626292Z	}
2025-09-16T23:46:03.626399Z	Fetching solutions with query: 
2025-09-16T23:46:03.626511Z	    {
2025-09-16T23:46:03.626616Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.626761Z	        
2025-09-16T23:46:03.626879Z	    _id,
2025-09-16T23:46:03.62698Z	    title,
2025-09-16T23:46:03.627088Z	    "slug": slug.current,
2025-09-16T23:46:03.627186Z	    summary,
2025-09-16T23:46:03.627329Z	    description,
2025-09-16T23:46:03.627535Z	    coverImage,
2025-09-16T23:46:03.627696Z	    primaryBrand->{
2025-09-16T23:46:03.627817Z	      _id,
2025-09-16T23:46:03.627918Z	      name,
2025-09-16T23:46:03.628338Z	      "slug": slug.current,
2025-09-16T23:46:03.628454Z	      logo
2025-09-16T23:46:03.628553Z	    },
2025-09-16T23:46:03.628661Z	    relatedBrands[]->{
2025-09-16T23:46:03.628936Z	      _id,
2025-09-16T23:46:03.62911Z	      name,
2025-09-16T23:46:03.629429Z	      "slug": slug.current,
2025-09-16T23:46:03.629546Z	      logo
2025-09-16T23:46:03.629653Z	    },
2025-09-16T23:46:03.629988Z	    targetMarket,
2025-09-16T23:46:03.630115Z	    complexity,
2025-09-16T23:46:03.630718Z	    publishedAt,
2025-09-16T23:46:03.630866Z	    isPublished,
2025-09-16T23:46:03.630983Z	    isFeatured,
2025-09-16T23:46:03.63109Z	    viewCount,
2025-09-16T23:46:03.631203Z	    _createdAt,
2025-09-16T23:46:03.631325Z	    _updatedAt
2025-09-16T23:46:03.631536Z	  
2025-09-16T23:46:03.632158Z	      },
2025-09-16T23:46:03.632325Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-16T23:46:03.632582Z	    }
2025-09-16T23:46:03.632739Z	  
2025-09-16T23:46:03.632853Z	Query parameters: {
2025-09-16T23:46:03.632958Z	  limit: 4,
2025-09-16T23:46:03.633062Z	  offset: 0,
2025-09-16T23:46:03.633164Z	  targetMarket: undefined,
2025-09-16T23:46:03.633255Z	  brand: 'lem',
2025-09-16T23:46:03.633347Z	  featured: undefined
2025-09-16T23:46:03.633445Z	}
2025-09-16T23:46:03.633547Z	✅ [getBrandData] Found brand: LEM
2025-09-16T23:46:03.633651Z	Products fetch result: {
2025-09-16T23:46:03.633785Z	  totalProducts: 3,
2025-09-16T23:46:03.633886Z	  fetchedProducts: 3,
2025-09-16T23:46:03.633986Z	  firstProduct: {
2025-09-16T23:46:03.634087Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-16T23:46:03.634182Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-16T23:46:03.634281Z	    _type: 'product',
2025-09-16T23:46:03.634394Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-16T23:46:03.634498Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-16T23:46:03.634721Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-16T23:46:03.634854Z	    image: null,
2025-09-16T23:46:03.634958Z	    inventory: {
2025-09-16T23:46:03.63506Z	      inStock: true,
2025-09-16T23:46:03.636389Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-16T23:46:03.636595Z	      quantity: 0,
2025-09-16T23:46:03.636739Z	      status: 'in_stock',
2025-09-16T23:46:03.636845Z	      warehouse: null
2025-09-16T23:46:03.63694Z	    },
2025-09-16T23:46:03.637035Z	    isActive: true,
2025-09-16T23:46:03.637135Z	    isFeatured: false,
2025-09-16T23:46:03.637232Z	    isNew: false,
2025-09-16T23:46:03.637321Z	    partNumber: 'la55-p',
2025-09-16T23:46:03.637423Z	    pricing: {
2025-09-16T23:46:03.637522Z	      currency: 'CNY',
2025-09-16T23:46:03.637609Z	      leadTime: null,
2025-09-16T23:46:03.637729Z	      moq: null,
2025-09-16T23:46:03.637839Z	      price: null,
2025-09-16T23:46:03.637949Z	      tiers: null
2025-09-16T23:46:03.638044Z	    },
2025-09-16T23:46:03.638138Z	    shortDescription: '电流传感器la55-p',
2025-09-16T23:46:03.638238Z	    slug: 'la55-p',
2025-09-16T23:46:03.638371Z	    title: '电流传感器la55-p'
2025-09-16T23:46:03.638516Z	  }
2025-09-16T23:46:03.638619Z	}
2025-09-16T23:46:03.638734Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.638832Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424)
2025-09-16T23:46:03.638955Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-16T23:46:03.639092Z	Fetching products with query: 
2025-09-16T23:46:03.639238Z	    {
2025-09-16T23:46:03.639361Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.63948Z	        
2025-09-16T23:46:03.63958Z	    _id,
2025-09-16T23:46:03.639687Z	    _type,
2025-09-16T23:46:03.639803Z	    partNumber,
2025-09-16T23:46:03.639922Z	    "slug": slug.current,
2025-09-16T23:46:03.640019Z	    title,
2025-09-16T23:46:03.640116Z	    shortDescription,
2025-09-16T23:46:03.640208Z	    image,
2025-09-16T23:46:03.640303Z	    brand->{
2025-09-16T23:46:03.640412Z	      name,
2025-09-16T23:46:03.640512Z	      "slug": slug.current,
2025-09-16T23:46:03.640612Z	      logo
2025-09-16T23:46:03.640733Z	    },
2025-09-16T23:46:03.640861Z	    category->{
2025-09-16T23:46:03.640966Z	      name,
2025-09-16T23:46:03.641055Z	      "slug": slug.current
2025-09-16T23:46:03.641163Z	    },
2025-09-16T23:46:03.641357Z	    pricing{
2025-09-16T23:46:03.64147Z	      currency,
2025-09-16T23:46:03.641557Z	      tiers[]{
2025-09-16T23:46:03.641647Z	        quantity,
2025-09-16T23:46:03.641863Z	        price,
2025-09-16T23:46:03.641962Z	        unit
2025-09-16T23:46:03.642046Z	      },
2025-09-16T23:46:03.642126Z	      moq,
2025-09-16T23:46:03.64221Z	      leadTime,
2025-09-16T23:46:03.642293Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.642547Z	      "price": tiers[0].price,
2025-09-16T23:46:03.642692Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.642809Z	    },
2025-09-16T23:46:03.642911Z	    inventory{
2025-09-16T23:46:03.643006Z	      quantity,
2025-09-16T23:46:03.643351Z	      status,
2025-09-16T23:46:03.643543Z	      warehouse,
2025-09-16T23:46:03.643712Z	      lastUpdated,
2025-09-16T23:46:03.643834Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.643945Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.644059Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.64416Z	    },
2025-09-16T23:46:03.644432Z	    isActive,
2025-09-16T23:46:03.644606Z	    isFeatured,
2025-09-16T23:46:03.645382Z	    isNew,
2025-09-16T23:46:03.645472Z	    _createdAt,
2025-09-16T23:46:03.645537Z	    _updatedAt
2025-09-16T23:46:03.645834Z	  
2025-09-16T23:46:03.645953Z	      },
2025-09-16T23:46:03.646311Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-16T23:46:03.646426Z	    }
2025-09-16T23:46:03.646599Z	  
2025-09-16T23:46:03.64673Z	Query parameters: {
2025-09-16T23:46:03.646943Z	  limit: 8,
2025-09-16T23:46:03.647239Z	  offset: 0,
2025-09-16T23:46:03.647344Z	  category: undefined,
2025-09-16T23:46:03.647559Z	  brand: 'sanrex',
2025-09-16T23:46:03.647771Z	  featured: undefined
2025-09-16T23:46:03.648062Z	}
2025-09-16T23:46:03.648248Z	Fetching solutions with query: 
2025-09-16T23:46:03.64845Z	    {
2025-09-16T23:46:03.648583Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.648752Z	        
2025-09-16T23:46:03.648882Z	    _id,
2025-09-16T23:46:03.649149Z	    title,
2025-09-16T23:46:03.649287Z	    "slug": slug.current,
2025-09-16T23:46:03.649401Z	    summary,
2025-09-16T23:46:03.649508Z	    description,
2025-09-16T23:46:03.649614Z	    coverImage,
2025-09-16T23:46:03.649759Z	    primaryBrand->{
2025-09-16T23:46:03.649868Z	      _id,
2025-09-16T23:46:03.649971Z	      name,
2025-09-16T23:46:03.650077Z	      "slug": slug.current,
2025-09-16T23:46:03.650189Z	      logo
2025-09-16T23:46:03.650303Z	    },
2025-09-16T23:46:03.650421Z	    relatedBrands[]->{
2025-09-16T23:46:03.650536Z	      _id,
2025-09-16T23:46:03.650662Z	      name,
2025-09-16T23:46:03.650793Z	      "slug": slug.current,
2025-09-16T23:46:03.650928Z	      logo
2025-09-16T23:46:03.65105Z	    },
2025-09-16T23:46:03.651158Z	    targetMarket,
2025-09-16T23:46:03.651268Z	    complexity,
2025-09-16T23:46:03.65139Z	    publishedAt,
2025-09-16T23:46:03.6515Z	    isPublished,
2025-09-16T23:46:03.651605Z	    isFeatured,
2025-09-16T23:46:03.651756Z	    viewCount,
2025-09-16T23:46:03.651868Z	    _createdAt,
2025-09-16T23:46:03.651975Z	    _updatedAt
2025-09-16T23:46:03.652081Z	  
2025-09-16T23:46:03.652185Z	      },
2025-09-16T23:46:03.652294Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-16T23:46:03.652417Z	    }
2025-09-16T23:46:03.652526Z	  
2025-09-16T23:46:03.65262Z	Query parameters: {
2025-09-16T23:46:03.652743Z	  limit: 4,
2025-09-16T23:46:03.652837Z	  offset: 0,
2025-09-16T23:46:03.652942Z	  targetMarket: undefined,
2025-09-16T23:46:03.653049Z	  brand: 'sanrex',
2025-09-16T23:46:03.653139Z	  featured: undefined
2025-09-16T23:46:03.653251Z	}
2025-09-16T23:46:03.653364Z	✅ [getBrandData] Found brand: Sanrex
2025-09-16T23:46:03.653491Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.653619Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.653773Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-16T23:46:03.6539Z	Fetching products with query: 
2025-09-16T23:46:03.654009Z	    {
2025-09-16T23:46:03.654143Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.654256Z	        
2025-09-16T23:46:03.654366Z	    _id,
2025-09-16T23:46:03.654483Z	    _type,
2025-09-16T23:46:03.654602Z	    partNumber,
2025-09-16T23:46:03.654756Z	    "slug": slug.current,
2025-09-16T23:46:03.654878Z	    title,
2025-09-16T23:46:03.655003Z	    shortDescription,
2025-09-16T23:46:03.655134Z	    image,
2025-09-16T23:46:03.655262Z	    brand->{
2025-09-16T23:46:03.655402Z	      name,
2025-09-16T23:46:03.65552Z	      "slug": slug.current,
2025-09-16T23:46:03.655625Z	      logo
2025-09-16T23:46:03.655757Z	    },
2025-09-16T23:46:03.655855Z	    category->{
2025-09-16T23:46:03.65595Z	      name,
2025-09-16T23:46:03.656055Z	      "slug": slug.current
2025-09-16T23:46:03.656174Z	    },
2025-09-16T23:46:03.656298Z	    pricing{
2025-09-16T23:46:03.656428Z	      currency,
2025-09-16T23:46:03.656539Z	      tiers[]{
2025-09-16T23:46:03.656656Z	        quantity,
2025-09-16T23:46:03.656806Z	        price,
2025-09-16T23:46:03.656928Z	        unit
2025-09-16T23:46:03.657038Z	      },
2025-09-16T23:46:03.657161Z	      moq,
2025-09-16T23:46:03.657268Z	      leadTime,
2025-09-16T23:46:03.657387Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.657516Z	      "price": tiers[0].price,
2025-09-16T23:46:03.657662Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.65781Z	    },
2025-09-16T23:46:03.657924Z	    inventory{
2025-09-16T23:46:03.658025Z	      quantity,
2025-09-16T23:46:03.658131Z	      status,
2025-09-16T23:46:03.658251Z	      warehouse,
2025-09-16T23:46:03.658352Z	      lastUpdated,
2025-09-16T23:46:03.658486Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.658608Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.658733Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.658847Z	    },
2025-09-16T23:46:03.658947Z	    isActive,
2025-09-16T23:46:03.659039Z	    isFeatured,
2025-09-16T23:46:03.659151Z	    isNew,
2025-09-16T23:46:03.659286Z	    _createdAt,
2025-09-16T23:46:03.659394Z	    _updatedAt
2025-09-16T23:46:03.659497Z	  
2025-09-16T23:46:03.659609Z	      },
2025-09-16T23:46:03.659736Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-16T23:46:03.659845Z	    }
2025-09-16T23:46:03.659955Z	  
2025-09-16T23:46:03.660058Z	Query parameters: {
2025-09-16T23:46:03.660158Z	  limit: 8,
2025-09-16T23:46:03.660272Z	  offset: 0,
2025-09-16T23:46:03.660389Z	  category: undefined,
2025-09-16T23:46:03.660488Z	  brand: 'sanrex',
2025-09-16T23:46:03.660587Z	  featured: undefined
2025-09-16T23:46:03.660788Z	}
2025-09-16T23:46:03.660912Z	Fetching solutions with query: 
2025-09-16T23:46:03.661017Z	    {
2025-09-16T23:46:03.661109Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.661208Z	        
2025-09-16T23:46:03.661311Z	    _id,
2025-09-16T23:46:03.661412Z	    title,
2025-09-16T23:46:03.661512Z	    "slug": slug.current,
2025-09-16T23:46:03.661611Z	    summary,
2025-09-16T23:46:03.66176Z	    description,
2025-09-16T23:46:03.661867Z	    coverImage,
2025-09-16T23:46:03.661965Z	    primaryBrand->{
2025-09-16T23:46:03.662066Z	      _id,
2025-09-16T23:46:03.662162Z	      name,
2025-09-16T23:46:03.662262Z	      "slug": slug.current,
2025-09-16T23:46:03.662374Z	      logo
2025-09-16T23:46:03.662477Z	    },
2025-09-16T23:46:03.662582Z	    relatedBrands[]->{
2025-09-16T23:46:03.662727Z	      _id,
2025-09-16T23:46:03.662845Z	      name,
2025-09-16T23:46:03.662958Z	      "slug": slug.current,
2025-09-16T23:46:03.663074Z	      logo
2025-09-16T23:46:03.663188Z	    },
2025-09-16T23:46:03.663304Z	    targetMarket,
2025-09-16T23:46:03.663418Z	    complexity,
2025-09-16T23:46:03.663535Z	    publishedAt,
2025-09-16T23:46:03.663668Z	    isPublished,
2025-09-16T23:46:03.663798Z	    isFeatured,
2025-09-16T23:46:03.663906Z	    viewCount,
2025-09-16T23:46:03.664009Z	    _createdAt,
2025-09-16T23:46:03.664117Z	    _updatedAt
2025-09-16T23:46:03.664215Z	  
2025-09-16T23:46:03.664313Z	      },
2025-09-16T23:46:03.66441Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-16T23:46:03.664517Z	    }
2025-09-16T23:46:03.664619Z	  
2025-09-16T23:46:03.6648Z	Query parameters: {
2025-09-16T23:46:03.664916Z	  limit: 4,
2025-09-16T23:46:03.665029Z	  offset: 0,
2025-09-16T23:46:03.66513Z	  targetMarket: undefined,
2025-09-16T23:46:03.665228Z	  brand: 'sanrex',
2025-09-16T23:46:03.665332Z	  featured: undefined
2025-09-16T23:46:03.665442Z	}
2025-09-16T23:46:03.665549Z	✅ [getBrandData] Found brand: Sanrex
2025-09-16T23:46:03.665671Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.665815Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.665939Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:46:03.666055Z	Fetching products with query: 
2025-09-16T23:46:03.666177Z	    {
2025-09-16T23:46:03.666289Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.666399Z	        
2025-09-16T23:46:03.666502Z	    _id,
2025-09-16T23:46:03.66661Z	    _type,
2025-09-16T23:46:03.666755Z	    partNumber,
2025-09-16T23:46:03.666891Z	    "slug": slug.current,
2025-09-16T23:46:03.66701Z	    title,
2025-09-16T23:46:03.667121Z	    shortDescription,
2025-09-16T23:46:03.667237Z	    image,
2025-09-16T23:46:03.66734Z	    brand->{
2025-09-16T23:46:03.667442Z	      name,
2025-09-16T23:46:03.667536Z	      "slug": slug.current,
2025-09-16T23:46:03.66766Z	      logo
2025-09-16T23:46:03.667801Z	    },
2025-09-16T23:46:03.667907Z	    category->{
2025-09-16T23:46:03.668012Z	      name,
2025-09-16T23:46:03.668143Z	      "slug": slug.current
2025-09-16T23:46:03.668269Z	    },
2025-09-16T23:46:03.668383Z	    pricing{
2025-09-16T23:46:03.668492Z	      currency,
2025-09-16T23:46:03.668615Z	      tiers[]{
2025-09-16T23:46:03.668906Z	        quantity,
2025-09-16T23:46:03.669016Z	        price,
2025-09-16T23:46:03.669161Z	        unit
2025-09-16T23:46:03.669329Z	      },
2025-09-16T23:46:03.669432Z	      moq,
2025-09-16T23:46:03.669597Z	      leadTime,
2025-09-16T23:46:03.669715Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.669813Z	      "price": tiers[0].price,
2025-09-16T23:46:03.669873Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.669932Z	    },
2025-09-16T23:46:03.669988Z	    inventory{
2025-09-16T23:46:03.670042Z	      quantity,
2025-09-16T23:46:03.670097Z	      status,
2025-09-16T23:46:03.670151Z	      warehouse,
2025-09-16T23:46:03.670213Z	      lastUpdated,
2025-09-16T23:46:03.670273Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.67041Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.67053Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.670703Z	    },
2025-09-16T23:46:03.670807Z	    isActive,
2025-09-16T23:46:03.671041Z	    isFeatured,
2025-09-16T23:46:03.671197Z	    isNew,
2025-09-16T23:46:03.671286Z	    _createdAt,
2025-09-16T23:46:03.671409Z	    _updatedAt
2025-09-16T23:46:03.671517Z	  
2025-09-16T23:46:03.671849Z	      },
2025-09-16T23:46:03.672156Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:46:03.672391Z	    }
2025-09-16T23:46:03.672574Z	  
2025-09-16T23:46:03.672689Z	Query parameters: {
2025-09-16T23:46:03.672819Z	  limit: 8,
2025-09-16T23:46:03.672919Z	  offset: 0,
2025-09-16T23:46:03.673017Z	  category: undefined,
2025-09-16T23:46:03.673121Z	  brand: 'qualcomm',
2025-09-16T23:46:03.673218Z	  featured: undefined
2025-09-16T23:46:03.673338Z	}
2025-09-16T23:46:03.673435Z	Fetching solutions with query: 
2025-09-16T23:46:03.673574Z	    {
2025-09-16T23:46:03.673649Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.673765Z	        
2025-09-16T23:46:03.673863Z	    _id,
2025-09-16T23:46:03.673956Z	    title,
2025-09-16T23:46:03.674052Z	    "slug": slug.current,
2025-09-16T23:46:03.674156Z	    summary,
2025-09-16T23:46:03.67426Z	    description,
2025-09-16T23:46:03.674388Z	    coverImage,
2025-09-16T23:46:03.674493Z	    primaryBrand->{
2025-09-16T23:46:03.674604Z	      _id,
2025-09-16T23:46:03.674723Z	      name,
2025-09-16T23:46:03.674888Z	      "slug": slug.current,
2025-09-16T23:46:03.67521Z	      logo
2025-09-16T23:46:03.675507Z	    },
2025-09-16T23:46:03.67584Z	    relatedBrands[]->{
2025-09-16T23:46:03.675923Z	      _id,
2025-09-16T23:46:03.676278Z	      name,
2025-09-16T23:46:03.67638Z	      "slug": slug.current,
2025-09-16T23:46:03.67647Z	      logo
2025-09-16T23:46:03.676585Z	    },
2025-09-16T23:46:03.676733Z	    targetMarket,
2025-09-16T23:46:03.676844Z	    complexity,
2025-09-16T23:46:03.676961Z	    publishedAt,
2025-09-16T23:46:03.677025Z	    isPublished,
2025-09-16T23:46:03.677084Z	    isFeatured,
2025-09-16T23:46:03.677187Z	    viewCount,
2025-09-16T23:46:03.677244Z	    _createdAt,
2025-09-16T23:46:03.677323Z	    _updatedAt
2025-09-16T23:46:03.677424Z	  
2025-09-16T23:46:03.67753Z	      },
2025-09-16T23:46:03.67764Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:46:03.677765Z	    }
2025-09-16T23:46:03.677868Z	  
2025-09-16T23:46:03.677961Z	Query parameters: {
2025-09-16T23:46:03.678055Z	  limit: 4,
2025-09-16T23:46:03.678121Z	  offset: 0,
2025-09-16T23:46:03.678176Z	  targetMarket: undefined,
2025-09-16T23:46:03.678262Z	  brand: 'qualcomm',
2025-09-16T23:46:03.678364Z	  featured: undefined
2025-09-16T23:46:03.678461Z	}
2025-09-16T23:46:03.67857Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:03.678707Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:03.678812Z	}
2025-09-16T23:46:03.678913Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:03.679005Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:03.679103Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:03.679172Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:03.679265Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424)
2025-09-16T23:46:03.67937Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:03.67947Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:03.67957Z	}
2025-09-16T23:46:03.679825Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:46:03.67995Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:46:03.680041Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.680143Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.680256Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.680336Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.680407Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-16T23:46:03.680526Z	Fetching products with query: 
2025-09-16T23:46:03.680638Z	    {
2025-09-16T23:46:03.680758Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.68088Z	        
2025-09-16T23:46:03.680988Z	    _id,
2025-09-16T23:46:03.681098Z	    _type,
2025-09-16T23:46:03.681205Z	    partNumber,
2025-09-16T23:46:03.681307Z	    "slug": slug.current,
2025-09-16T23:46:03.681405Z	    title,
2025-09-16T23:46:03.681503Z	    shortDescription,
2025-09-16T23:46:03.681595Z	    image,
2025-09-16T23:46:03.681764Z	    brand->{
2025-09-16T23:46:03.681894Z	      name,
2025-09-16T23:46:03.682003Z	      "slug": slug.current,
2025-09-16T23:46:03.682108Z	      logo
2025-09-16T23:46:03.682202Z	    },
2025-09-16T23:46:03.682312Z	    category->{
2025-09-16T23:46:03.682542Z	      name,
2025-09-16T23:46:03.682738Z	      "slug": slug.current
2025-09-16T23:46:03.682891Z	    },
2025-09-16T23:46:03.683021Z	    pricing{
2025-09-16T23:46:03.683104Z	      currency,
2025-09-16T23:46:03.683457Z	      tiers[]{
2025-09-16T23:46:03.683609Z	        quantity,
2025-09-16T23:46:03.683756Z	        price,
2025-09-16T23:46:03.68387Z	        unit
2025-09-16T23:46:03.683988Z	      },
2025-09-16T23:46:03.684107Z	      moq,
2025-09-16T23:46:03.684214Z	      leadTime,
2025-09-16T23:46:03.684338Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.684443Z	      "price": tiers[0].price,
2025-09-16T23:46:03.684544Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.684738Z	    },
2025-09-16T23:46:03.684885Z	    inventory{
2025-09-16T23:46:03.684993Z	      quantity,
2025-09-16T23:46:03.685203Z	      status,
2025-09-16T23:46:03.685402Z	      warehouse,
2025-09-16T23:46:03.685528Z	      lastUpdated,
2025-09-16T23:46:03.685697Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.685872Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.68609Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.686289Z	    },
2025-09-16T23:46:03.686471Z	    isActive,
2025-09-16T23:46:03.686604Z	    isFeatured,
2025-09-16T23:46:03.686752Z	    isNew,
2025-09-16T23:46:03.68687Z	    _createdAt,
2025-09-16T23:46:03.686971Z	    _updatedAt
2025-09-16T23:46:03.687081Z	  
2025-09-16T23:46:03.687205Z	      },
2025-09-16T23:46:03.68732Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-16T23:46:03.687463Z	    }
2025-09-16T23:46:03.687581Z	  
2025-09-16T23:46:03.687711Z	Query parameters: {
2025-09-16T23:46:03.687831Z	  limit: 8,
2025-09-16T23:46:03.687951Z	  offset: 0,
2025-09-16T23:46:03.688073Z	  category: undefined,
2025-09-16T23:46:03.688192Z	  brand: 'lem',
2025-09-16T23:46:03.688302Z	  featured: undefined
2025-09-16T23:46:03.688444Z	}
2025-09-16T23:46:03.688587Z	Fetching solutions with query: 
2025-09-16T23:46:03.688727Z	    {
2025-09-16T23:46:03.688843Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.688968Z	        
2025-09-16T23:46:03.68909Z	    _id,
2025-09-16T23:46:03.68921Z	    title,
2025-09-16T23:46:03.689332Z	    "slug": slug.current,
2025-09-16T23:46:03.689462Z	    summary,
2025-09-16T23:46:03.689579Z	    description,
2025-09-16T23:46:03.689747Z	    coverImage,
2025-09-16T23:46:03.689871Z	    primaryBrand->{
2025-09-16T23:46:03.689994Z	      _id,
2025-09-16T23:46:03.690126Z	      name,
2025-09-16T23:46:03.690254Z	      "slug": slug.current,
2025-09-16T23:46:03.690372Z	      logo
2025-09-16T23:46:03.690497Z	    },
2025-09-16T23:46:03.690602Z	    relatedBrands[]->{
2025-09-16T23:46:03.690738Z	      _id,
2025-09-16T23:46:03.69086Z	      name,
2025-09-16T23:46:03.690998Z	      "slug": slug.current,
2025-09-16T23:46:03.691123Z	      logo
2025-09-16T23:46:03.69124Z	    },
2025-09-16T23:46:03.691354Z	    targetMarket,
2025-09-16T23:46:03.691476Z	    complexity,
2025-09-16T23:46:03.691595Z	    publishedAt,
2025-09-16T23:46:03.691726Z	    isPublished,
2025-09-16T23:46:03.691838Z	    isFeatured,
2025-09-16T23:46:03.691945Z	    viewCount,
2025-09-16T23:46:03.692051Z	    _createdAt,
2025-09-16T23:46:03.692161Z	    _updatedAt
2025-09-16T23:46:03.692262Z	  
2025-09-16T23:46:03.692367Z	      },
2025-09-16T23:46:03.692491Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-16T23:46:03.692604Z	    }
2025-09-16T23:46:03.692728Z	  
2025-09-16T23:46:03.692844Z	Query parameters: {
2025-09-16T23:46:03.692945Z	  limit: 4,
2025-09-16T23:46:03.693064Z	  offset: 0,
2025-09-16T23:46:03.693173Z	  targetMarket: undefined,
2025-09-16T23:46:03.693291Z	  brand: 'lem',
2025-09-16T23:46:03.693405Z	  featured: undefined
2025-09-16T23:46:03.693531Z	}
2025-09-16T23:46:03.693644Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:46:03.693786Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.693892Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.693988Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-16T23:46:03.694099Z	Fetching products with query: 
2025-09-16T23:46:03.694205Z	    {
2025-09-16T23:46:03.694344Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.694479Z	        
2025-09-16T23:46:03.694589Z	    _id,
2025-09-16T23:46:03.694723Z	    _type,
2025-09-16T23:46:03.694853Z	    partNumber,
2025-09-16T23:46:03.694984Z	    "slug": slug.current,
2025-09-16T23:46:03.695103Z	    title,
2025-09-16T23:46:03.695198Z	    shortDescription,
2025-09-16T23:46:03.695299Z	    image,
2025-09-16T23:46:03.695401Z	    brand->{
2025-09-16T23:46:03.695504Z	      name,
2025-09-16T23:46:03.695618Z	      "slug": slug.current,
2025-09-16T23:46:03.695738Z	      logo
2025-09-16T23:46:03.695832Z	    },
2025-09-16T23:46:03.695934Z	    category->{
2025-09-16T23:46:03.696027Z	      name,
2025-09-16T23:46:03.696115Z	      "slug": slug.current
2025-09-16T23:46:03.696213Z	    },
2025-09-16T23:46:03.696311Z	    pricing{
2025-09-16T23:46:03.696405Z	      currency,
2025-09-16T23:46:03.696518Z	      tiers[]{
2025-09-16T23:46:03.696637Z	        quantity,
2025-09-16T23:46:03.696765Z	        price,
2025-09-16T23:46:03.696882Z	        unit
2025-09-16T23:46:03.696978Z	      },
2025-09-16T23:46:03.69709Z	      moq,
2025-09-16T23:46:03.697216Z	      leadTime,
2025-09-16T23:46:03.697326Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.69746Z	      "price": tiers[0].price,
2025-09-16T23:46:03.697573Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.697688Z	    },
2025-09-16T23:46:03.697805Z	    inventory{
2025-09-16T23:46:03.697914Z	      quantity,
2025-09-16T23:46:03.698027Z	      status,
2025-09-16T23:46:03.69815Z	      warehouse,
2025-09-16T23:46:03.69827Z	      lastUpdated,
2025-09-16T23:46:03.698389Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.698522Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.698624Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.69874Z	    },
2025-09-16T23:46:03.698837Z	    isActive,
2025-09-16T23:46:03.698937Z	    isFeatured,
2025-09-16T23:46:03.699042Z	    isNew,
2025-09-16T23:46:03.699173Z	    _createdAt,
2025-09-16T23:46:03.69932Z	    _updatedAt
2025-09-16T23:46:03.699575Z	  
2025-09-16T23:46:03.699734Z	      },
2025-09-16T23:46:03.699859Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-16T23:46:03.700055Z	    }
2025-09-16T23:46:03.700343Z	  
2025-09-16T23:46:03.700457Z	Query parameters: {
2025-09-16T23:46:03.700698Z	  limit: 8,
2025-09-16T23:46:03.700893Z	  offset: 0,
2025-09-16T23:46:03.700984Z	  category: undefined,
2025-09-16T23:46:03.7012Z	  brand: '英飞凌',
2025-09-16T23:46:03.701283Z	  featured: undefined
2025-09-16T23:46:03.701572Z	}
2025-09-16T23:46:03.701894Z	Fetching solutions with query: 
2025-09-16T23:46:03.701995Z	    {
2025-09-16T23:46:03.702288Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.702472Z	        
2025-09-16T23:46:03.702566Z	    _id,
2025-09-16T23:46:03.702709Z	    title,
2025-09-16T23:46:03.702839Z	    "slug": slug.current,
2025-09-16T23:46:03.702947Z	    summary,
2025-09-16T23:46:03.703052Z	    description,
2025-09-16T23:46:03.703191Z	    coverImage,
2025-09-16T23:46:03.703289Z	    primaryBrand->{
2025-09-16T23:46:03.703447Z	      _id,
2025-09-16T23:46:03.703609Z	      name,
2025-09-16T23:46:03.703869Z	      "slug": slug.current,
2025-09-16T23:46:03.703993Z	      logo
2025-09-16T23:46:03.704129Z	    },
2025-09-16T23:46:03.704245Z	    relatedBrands[]->{
2025-09-16T23:46:03.704358Z	      _id,
2025-09-16T23:46:03.704458Z	      name,
2025-09-16T23:46:03.704563Z	      "slug": slug.current,
2025-09-16T23:46:03.704643Z	      logo
2025-09-16T23:46:03.704759Z	    },
2025-09-16T23:46:03.704841Z	    targetMarket,
2025-09-16T23:46:03.704941Z	    complexity,
2025-09-16T23:46:03.705463Z	    publishedAt,
2025-09-16T23:46:03.705643Z	    isPublished,
2025-09-16T23:46:03.70577Z	    isFeatured,
2025-09-16T23:46:03.705884Z	    viewCount,
2025-09-16T23:46:03.706002Z	    _createdAt,
2025-09-16T23:46:03.706416Z	    _updatedAt
2025-09-16T23:46:03.706522Z	  
2025-09-16T23:46:03.706922Z	      },
2025-09-16T23:46:03.70701Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-16T23:46:03.707213Z	    }
2025-09-16T23:46:03.707372Z	  
2025-09-16T23:46:03.707501Z	Query parameters: {
2025-09-16T23:46:03.70764Z	  limit: 4,
2025-09-16T23:46:03.707812Z	  offset: 0,
2025-09-16T23:46:03.707923Z	  targetMarket: undefined,
2025-09-16T23:46:03.708033Z	  brand: '英飞凌',
2025-09-16T23:46:03.708107Z	  featured: undefined
2025-09-16T23:46:03.708167Z	}
2025-09-16T23:46:03.708303Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-16T23:46:03.708451Z	Fetching products with query: 
2025-09-16T23:46:03.708551Z	    {
2025-09-16T23:46:03.708617Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.708699Z	        
2025-09-16T23:46:03.708772Z	    _id,
2025-09-16T23:46:03.708828Z	    _type,
2025-09-16T23:46:03.708881Z	    partNumber,
2025-09-16T23:46:03.708934Z	    "slug": slug.current,
2025-09-16T23:46:03.708989Z	    title,
2025-09-16T23:46:03.709125Z	    shortDescription,
2025-09-16T23:46:03.70921Z	    image,
2025-09-16T23:46:03.709268Z	    brand->{
2025-09-16T23:46:03.709323Z	      name,
2025-09-16T23:46:03.709377Z	      "slug": slug.current,
2025-09-16T23:46:03.709435Z	      logo
2025-09-16T23:46:03.709505Z	    },
2025-09-16T23:46:03.709561Z	    category->{
2025-09-16T23:46:03.709614Z	      name,
2025-09-16T23:46:03.709667Z	      "slug": slug.current
2025-09-16T23:46:03.709756Z	    },
2025-09-16T23:46:03.709812Z	    pricing{
2025-09-16T23:46:03.709866Z	      currency,
2025-09-16T23:46:03.709921Z	      tiers[]{
2025-09-16T23:46:03.709974Z	        quantity,
2025-09-16T23:46:03.710027Z	        price,
2025-09-16T23:46:03.710079Z	        unit
2025-09-16T23:46:03.710134Z	      },
2025-09-16T23:46:03.710221Z	      moq,
2025-09-16T23:46:03.710277Z	      leadTime,
2025-09-16T23:46:03.710331Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.710387Z	      "price": tiers[0].price,
2025-09-16T23:46:03.710444Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.710506Z	    },
2025-09-16T23:46:03.710567Z	    inventory{
2025-09-16T23:46:03.710621Z	      quantity,
2025-09-16T23:46:03.710689Z	      status,
2025-09-16T23:46:03.710762Z	      warehouse,
2025-09-16T23:46:03.710822Z	      lastUpdated,
2025-09-16T23:46:03.710876Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.710934Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.710988Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.711041Z	    },
2025-09-16T23:46:03.711095Z	    isActive,
2025-09-16T23:46:03.711147Z	    isFeatured,
2025-09-16T23:46:03.711199Z	    isNew,
2025-09-16T23:46:03.723882Z	    _createdAt,
2025-09-16T23:46:03.724014Z	    _updatedAt
2025-09-16T23:46:03.72415Z	  
2025-09-16T23:46:03.724261Z	      },
2025-09-16T23:46:03.724417Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-16T23:46:03.724567Z	    }
2025-09-16T23:46:03.724665Z	  
2025-09-16T23:46:03.724813Z	Query parameters: {
2025-09-16T23:46:03.724913Z	  limit: 8,
2025-09-16T23:46:03.725132Z	  offset: 0,
2025-09-16T23:46:03.725261Z	  category: undefined,
2025-09-16T23:46:03.725387Z	  brand: '英飞凌',
2025-09-16T23:46:03.725475Z	  featured: undefined
2025-09-16T23:46:03.725598Z	}
2025-09-16T23:46:03.72578Z	Fetching solutions with query: 
2025-09-16T23:46:03.725858Z	    {
2025-09-16T23:46:03.726017Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.726193Z	        
2025-09-16T23:46:03.726314Z	    _id,
2025-09-16T23:46:03.726508Z	    title,
2025-09-16T23:46:03.72666Z	    "slug": slug.current,
2025-09-16T23:46:03.726843Z	    summary,
2025-09-16T23:46:03.726909Z	    description,
2025-09-16T23:46:03.726999Z	    coverImage,
2025-09-16T23:46:03.727191Z	    primaryBrand->{
2025-09-16T23:46:03.727372Z	      _id,
2025-09-16T23:46:03.727536Z	      name,
2025-09-16T23:46:03.727633Z	      "slug": slug.current,
2025-09-16T23:46:03.727789Z	      logo
2025-09-16T23:46:03.727945Z	    },
2025-09-16T23:46:03.728081Z	    relatedBrands[]->{
2025-09-16T23:46:03.72823Z	      _id,
2025-09-16T23:46:03.728387Z	      name,
2025-09-16T23:46:03.728492Z	      "slug": slug.current,
2025-09-16T23:46:03.728645Z	      logo
2025-09-16T23:46:03.728763Z	    },
2025-09-16T23:46:03.72886Z	    targetMarket,
2025-09-16T23:46:03.728964Z	    complexity,
2025-09-16T23:46:03.729053Z	    publishedAt,
2025-09-16T23:46:03.729173Z	    isPublished,
2025-09-16T23:46:03.729271Z	    isFeatured,
2025-09-16T23:46:03.72936Z	    viewCount,
2025-09-16T23:46:03.72942Z	    _createdAt,
2025-09-16T23:46:03.729495Z	    _updatedAt
2025-09-16T23:46:03.72957Z	  
2025-09-16T23:46:03.729625Z	      },
2025-09-16T23:46:03.72993Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-16T23:46:03.730018Z	    }
2025-09-16T23:46:03.730244Z	  
2025-09-16T23:46:03.730335Z	Query parameters: {
2025-09-16T23:46:03.730435Z	  limit: 4,
2025-09-16T23:46:03.7308Z	  offset: 0,
2025-09-16T23:46:03.730903Z	  targetMarket: undefined,
2025-09-16T23:46:03.731131Z	  brand: '英飞凌',
2025-09-16T23:46:03.731233Z	  featured: undefined
2025-09-16T23:46:03.731305Z	}
2025-09-16T23:46:03.731541Z	Products fetch result: {
2025-09-16T23:46:03.731774Z	  totalProducts: 3,
2025-09-16T23:46:03.731877Z	  fetchedProducts: 3,
2025-09-16T23:46:03.732034Z	  firstProduct: {
2025-09-16T23:46:03.732169Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-16T23:46:03.7323Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-16T23:46:03.732431Z	    _type: 'product',
2025-09-16T23:46:03.732588Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-16T23:46:03.732726Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-16T23:46:03.732858Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-16T23:46:03.732978Z	    image: null,
2025-09-16T23:46:03.733085Z	    inventory: {
2025-09-16T23:46:03.733343Z	      inStock: true,
2025-09-16T23:46:03.733418Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-16T23:46:03.733646Z	      quantity: 0,
2025-09-16T23:46:03.73376Z	      status: 'in_stock',
2025-09-16T23:46:03.733962Z	      warehouse: null
2025-09-16T23:46:03.734173Z	    },
2025-09-16T23:46:03.734245Z	    isActive: true,
2025-09-16T23:46:03.734579Z	    isFeatured: false,
2025-09-16T23:46:03.73471Z	    isNew: false,
2025-09-16T23:46:03.734816Z	    partNumber: 'la55-p',
2025-09-16T23:46:03.734926Z	    pricing: {
2025-09-16T23:46:03.735034Z	      currency: 'CNY',
2025-09-16T23:46:03.735132Z	      leadTime: null,
2025-09-16T23:46:03.735369Z	      moq: null,
2025-09-16T23:46:03.735463Z	      price: null,
2025-09-16T23:46:03.735522Z	      tiers: null
2025-09-16T23:46:03.735788Z	    },
2025-09-16T23:46:03.735869Z	    shortDescription: '电流传感器la55-p',
2025-09-16T23:46:03.736Z	    slug: 'la55-p',
2025-09-16T23:46:03.736112Z	    title: '电流传感器la55-p'
2025-09-16T23:46:03.736258Z	  }
2025-09-16T23:46:03.736381Z	}
2025-09-16T23:46:03.736482Z	Products fetch result: {
2025-09-16T23:46:03.736581Z	  totalProducts: 3,
2025-09-16T23:46:03.736758Z	  fetchedProducts: 3,
2025-09-16T23:46:03.736835Z	  firstProduct: {
2025-09-16T23:46:03.736894Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-16T23:46:03.736976Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-16T23:46:03.737058Z	    _type: 'product',
2025-09-16T23:46:03.737154Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-16T23:46:03.737264Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-16T23:46:03.737324Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-16T23:46:03.73755Z	    image: null,
2025-09-16T23:46:03.737667Z	    inventory: {
2025-09-16T23:46:03.737852Z	      inStock: true,
2025-09-16T23:46:03.737969Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-16T23:46:03.738149Z	      quantity: 0,
2025-09-16T23:46:03.738263Z	      status: 'in_stock',
2025-09-16T23:46:03.738396Z	      warehouse: null
2025-09-16T23:46:03.738547Z	    },
2025-09-16T23:46:03.738649Z	    isActive: true,
2025-09-16T23:46:03.738807Z	    isFeatured: false,
2025-09-16T23:46:03.73905Z	    isNew: false,
2025-09-16T23:46:03.739179Z	    partNumber: 'la55-p',
2025-09-16T23:46:03.739366Z	    pricing: {
2025-09-16T23:46:03.739492Z	      currency: 'CNY',
2025-09-16T23:46:03.739756Z	      leadTime: null,
2025-09-16T23:46:03.739838Z	      moq: null,
2025-09-16T23:46:03.739927Z	      price: null,
2025-09-16T23:46:03.740026Z	      tiers: null
2025-09-16T23:46:03.74012Z	    },
2025-09-16T23:46:03.740218Z	    shortDescription: '电流传感器la55-p',
2025-09-16T23:46:03.740319Z	    slug: 'la55-p',
2025-09-16T23:46:03.740421Z	    title: '电流传感器la55-p'
2025-09-16T23:46:03.740515Z	  }
2025-09-16T23:46:03.740627Z	}
2025-09-16T23:46:03.740754Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.740863Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.740975Z	✅ [getBrandData] Found brand: LEM
2025-09-16T23:46:03.741047Z	✅ [getBrandData] Found brand: LEM
2025-09-16T23:46:03.741147Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-16T23:46:03.741262Z	Fetching products with query: 
2025-09-16T23:46:03.741354Z	    {
2025-09-16T23:46:03.741449Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.741566Z	        
2025-09-16T23:46:03.741687Z	    _id,
2025-09-16T23:46:03.741787Z	    _type,
2025-09-16T23:46:03.741894Z	    partNumber,
2025-09-16T23:46:03.742004Z	    "slug": slug.current,
2025-09-16T23:46:03.742136Z	    title,
2025-09-16T23:46:03.742332Z	    shortDescription,
2025-09-16T23:46:03.742447Z	    image,
2025-09-16T23:46:03.742534Z	    brand->{
2025-09-16T23:46:03.742616Z	      name,
2025-09-16T23:46:03.742729Z	      "slug": slug.current,
2025-09-16T23:46:03.742836Z	      logo
2025-09-16T23:46:03.742929Z	    },
2025-09-16T23:46:03.743039Z	    category->{
2025-09-16T23:46:03.743254Z	      name,
2025-09-16T23:46:03.743446Z	      "slug": slug.current
2025-09-16T23:46:03.743571Z	    },
2025-09-16T23:46:03.743715Z	    pricing{
2025-09-16T23:46:03.7438Z	      currency,
2025-09-16T23:46:03.743977Z	      tiers[]{
2025-09-16T23:46:03.744067Z	        quantity,
2025-09-16T23:46:03.744129Z	        price,
2025-09-16T23:46:03.744339Z	        unit
2025-09-16T23:46:03.744461Z	      },
2025-09-16T23:46:03.744621Z	      moq,
2025-09-16T23:46:03.744792Z	      leadTime,
2025-09-16T23:46:03.744896Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.745033Z	      "price": tiers[0].price,
2025-09-16T23:46:03.74517Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.745277Z	    },
2025-09-16T23:46:03.745429Z	    inventory{
2025-09-16T23:46:03.745529Z	      quantity,
2025-09-16T23:46:03.74565Z	      status,
2025-09-16T23:46:03.745779Z	      warehouse,
2025-09-16T23:46:03.745883Z	      lastUpdated,
2025-09-16T23:46:03.74597Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.746068Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.746178Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.746292Z	    },
2025-09-16T23:46:03.74646Z	    isActive,
2025-09-16T23:46:03.746589Z	    isFeatured,
2025-09-16T23:46:03.746732Z	    isNew,
2025-09-16T23:46:03.746925Z	    _createdAt,
2025-09-16T23:46:03.747078Z	    _updatedAt
2025-09-16T23:46:03.747198Z	  
2025-09-16T23:46:03.747309Z	      },
2025-09-16T23:46:03.747413Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-16T23:46:03.747527Z	    }
2025-09-16T23:46:03.74764Z	  
2025-09-16T23:46:03.747765Z	Query parameters: {
2025-09-16T23:46:03.747871Z	  limit: 8,
2025-09-16T23:46:03.747971Z	  offset: 0,
2025-09-16T23:46:03.748063Z	  category: undefined,
2025-09-16T23:46:03.74817Z	  brand: 'epcos',
2025-09-16T23:46:03.748266Z	  featured: undefined
2025-09-16T23:46:03.748358Z	}
2025-09-16T23:46:03.748451Z	Fetching solutions with query: 
2025-09-16T23:46:03.748543Z	    {
2025-09-16T23:46:03.748663Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.748821Z	        
2025-09-16T23:46:03.748951Z	    _id,
2025-09-16T23:46:03.749062Z	    title,
2025-09-16T23:46:03.749157Z	    "slug": slug.current,
2025-09-16T23:46:03.74926Z	    summary,
2025-09-16T23:46:03.749369Z	    description,
2025-09-16T23:46:03.749483Z	    coverImage,
2025-09-16T23:46:03.749606Z	    primaryBrand->{
2025-09-16T23:46:03.749784Z	      _id,
2025-09-16T23:46:03.749862Z	      name,
2025-09-16T23:46:03.749941Z	      "slug": slug.current,
2025-09-16T23:46:03.750057Z	      logo
2025-09-16T23:46:03.750158Z	    },
2025-09-16T23:46:03.750394Z	    relatedBrands[]->{
2025-09-16T23:46:03.750607Z	      _id,
2025-09-16T23:46:03.75074Z	      name,
2025-09-16T23:46:03.750858Z	      "slug": slug.current,
2025-09-16T23:46:03.750975Z	      logo
2025-09-16T23:46:03.751085Z	    },
2025-09-16T23:46:03.751199Z	    targetMarket,
2025-09-16T23:46:03.751316Z	    complexity,
2025-09-16T23:46:03.75143Z	    publishedAt,
2025-09-16T23:46:03.751527Z	    isPublished,
2025-09-16T23:46:03.751623Z	    isFeatured,
2025-09-16T23:46:03.751765Z	    viewCount,
2025-09-16T23:46:03.751871Z	    _createdAt,
2025-09-16T23:46:03.751975Z	    _updatedAt
2025-09-16T23:46:03.752072Z	  
2025-09-16T23:46:03.752162Z	      },
2025-09-16T23:46:03.752249Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-16T23:46:03.752354Z	    }
2025-09-16T23:46:03.752458Z	  
2025-09-16T23:46:03.75255Z	Query parameters: {
2025-09-16T23:46:03.752662Z	  limit: 4,
2025-09-16T23:46:03.752784Z	  offset: 0,
2025-09-16T23:46:03.752886Z	  targetMarket: undefined,
2025-09-16T23:46:03.75297Z	  brand: 'epcos',
2025-09-16T23:46:03.753059Z	  featured: undefined
2025-09-16T23:46:03.753165Z	}
2025-09-16T23:46:03.753265Z	✅ [getBrandData] Found brand: Epcos
2025-09-16T23:46:03.753365Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.753454Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.753518Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-16T23:46:03.753578Z	Fetching products with query: 
2025-09-16T23:46:03.753638Z	    {
2025-09-16T23:46:03.753757Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.753828Z	        
2025-09-16T23:46:03.753941Z	    _id,
2025-09-16T23:46:03.754078Z	    _type,
2025-09-16T23:46:03.754169Z	    partNumber,
2025-09-16T23:46:03.75427Z	    "slug": slug.current,
2025-09-16T23:46:03.754367Z	    title,
2025-09-16T23:46:03.754501Z	    shortDescription,
2025-09-16T23:46:03.754572Z	    image,
2025-09-16T23:46:03.754668Z	    brand->{
2025-09-16T23:46:03.75478Z	      name,
2025-09-16T23:46:03.754845Z	      "slug": slug.current,
2025-09-16T23:46:03.754903Z	      logo
2025-09-16T23:46:03.754961Z	    },
2025-09-16T23:46:03.755016Z	    category->{
2025-09-16T23:46:03.755074Z	      name,
2025-09-16T23:46:03.75513Z	      "slug": slug.current
2025-09-16T23:46:03.755381Z	    },
2025-09-16T23:46:03.755719Z	    pricing{
2025-09-16T23:46:03.75582Z	      currency,
2025-09-16T23:46:03.756074Z	      tiers[]{
2025-09-16T23:46:03.756163Z	        quantity,
2025-09-16T23:46:03.756467Z	        price,
2025-09-16T23:46:03.75667Z	        unit
2025-09-16T23:46:03.756939Z	      },
2025-09-16T23:46:03.757044Z	      moq,
2025-09-16T23:46:03.75731Z	      leadTime,
2025-09-16T23:46:03.757401Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.75767Z	      "price": tiers[0].price,
2025-09-16T23:46:03.757953Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.758045Z	    },
2025-09-16T23:46:03.758302Z	    inventory{
2025-09-16T23:46:03.758403Z	      quantity,
2025-09-16T23:46:03.758561Z	      status,
2025-09-16T23:46:03.758702Z	      warehouse,
2025-09-16T23:46:03.759079Z	      lastUpdated,
2025-09-16T23:46:03.759317Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.759428Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.759686Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.759967Z	    },
2025-09-16T23:46:03.760052Z	    isActive,
2025-09-16T23:46:03.760185Z	    isFeatured,
2025-09-16T23:46:03.760364Z	    isNew,
2025-09-16T23:46:03.760446Z	    _createdAt,
2025-09-16T23:46:03.760736Z	    _updatedAt
2025-09-16T23:46:03.760827Z	  
2025-09-16T23:46:03.760965Z	      },
2025-09-16T23:46:03.761084Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-16T23:46:03.76136Z	    }
2025-09-16T23:46:03.761559Z	  
2025-09-16T23:46:03.761766Z	Query parameters: {
2025-09-16T23:46:03.761981Z	  limit: 8,
2025-09-16T23:46:03.762188Z	  offset: 0,
2025-09-16T23:46:03.762405Z	  category: undefined,
2025-09-16T23:46:03.762606Z	  brand: 'epcos',
2025-09-16T23:46:03.762898Z	  featured: undefined
2025-09-16T23:46:03.762982Z	}
2025-09-16T23:46:03.763225Z	Fetching solutions with query: 
2025-09-16T23:46:03.763329Z	    {
2025-09-16T23:46:03.763605Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.763897Z	        
2025-09-16T23:46:03.763994Z	    _id,
2025-09-16T23:46:03.764177Z	    title,
2025-09-16T23:46:03.764253Z	    "slug": slug.current,
2025-09-16T23:46:03.764391Z	    summary,
2025-09-16T23:46:03.764475Z	    description,
2025-09-16T23:46:03.76464Z	    coverImage,
2025-09-16T23:46:03.764825Z	    primaryBrand->{
2025-09-16T23:46:03.764926Z	      _id,
2025-09-16T23:46:03.765011Z	      name,
2025-09-16T23:46:03.76511Z	      "slug": slug.current,
2025-09-16T23:46:03.765336Z	      logo
2025-09-16T23:46:03.765424Z	    },
2025-09-16T23:46:03.765575Z	    relatedBrands[]->{
2025-09-16T23:46:03.765669Z	      _id,
2025-09-16T23:46:03.766114Z	      name,
2025-09-16T23:46:03.766291Z	      "slug": slug.current,
2025-09-16T23:46:03.766483Z	      logo
2025-09-16T23:46:03.766639Z	    },
2025-09-16T23:46:03.766789Z	    targetMarket,
2025-09-16T23:46:03.766923Z	    complexity,
2025-09-16T23:46:03.767037Z	    publishedAt,
2025-09-16T23:46:03.767183Z	    isPublished,
2025-09-16T23:46:03.767294Z	    isFeatured,
2025-09-16T23:46:03.767431Z	    viewCount,
2025-09-16T23:46:03.767561Z	    _createdAt,
2025-09-16T23:46:03.767713Z	    _updatedAt
2025-09-16T23:46:03.767815Z	  
2025-09-16T23:46:03.767947Z	      },
2025-09-16T23:46:03.768073Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-16T23:46:03.768216Z	    }
2025-09-16T23:46:03.768343Z	  
2025-09-16T23:46:03.768471Z	Query parameters: {
2025-09-16T23:46:03.76872Z	  limit: 4,
2025-09-16T23:46:03.768953Z	  offset: 0,
2025-09-16T23:46:03.769142Z	  targetMarket: undefined,
2025-09-16T23:46:03.76923Z	  brand: 'epcos',
2025-09-16T23:46:03.769416Z	  featured: undefined
2025-09-16T23:46:03.769581Z	}
2025-09-16T23:46:03.769739Z	✅ [getBrandData] Found brand: Epcos
2025-09-16T23:46:03.769911Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.769997Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.770164Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-16T23:46:03.770251Z	Fetching products with query: 
2025-09-16T23:46:03.770416Z	    {
2025-09-16T23:46:03.770585Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.77078Z	        
2025-09-16T23:46:03.770903Z	    _id,
2025-09-16T23:46:03.771202Z	    _type,
2025-09-16T23:46:03.771312Z	    partNumber,
2025-09-16T23:46:03.771505Z	    "slug": slug.current,
2025-09-16T23:46:03.771607Z	    title,
2025-09-16T23:46:03.771789Z	    shortDescription,
2025-09-16T23:46:03.772025Z	    image,
2025-09-16T23:46:03.772122Z	    brand->{
2025-09-16T23:46:03.772363Z	      name,
2025-09-16T23:46:03.772458Z	      "slug": slug.current,
2025-09-16T23:46:03.772574Z	      logo
2025-09-16T23:46:03.772888Z	    },
2025-09-16T23:46:03.773017Z	    category->{
2025-09-16T23:46:03.773124Z	      name,
2025-09-16T23:46:03.773231Z	      "slug": slug.current
2025-09-16T23:46:03.77337Z	    },
2025-09-16T23:46:03.773497Z	    pricing{
2025-09-16T23:46:03.773614Z	      currency,
2025-09-16T23:46:03.773932Z	      tiers[]{
2025-09-16T23:46:03.774163Z	        quantity,
2025-09-16T23:46:03.774329Z	        price,
2025-09-16T23:46:03.774531Z	        unit
2025-09-16T23:46:03.774769Z	      },
2025-09-16T23:46:03.774929Z	      moq,
2025-09-16T23:46:03.775207Z	      leadTime,
2025-09-16T23:46:03.775301Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.77569Z	      "price": tiers[0].price,
2025-09-16T23:46:03.775877Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.775995Z	    },
2025-09-16T23:46:03.776197Z	    inventory{
2025-09-16T23:46:03.776314Z	      quantity,
2025-09-16T23:46:03.776424Z	      status,
2025-09-16T23:46:03.776528Z	      warehouse,
2025-09-16T23:46:03.776683Z	      lastUpdated,
2025-09-16T23:46:03.776798Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.776901Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.777081Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.777249Z	    },
2025-09-16T23:46:03.777502Z	    isActive,
2025-09-16T23:46:03.777634Z	    isFeatured,
2025-09-16T23:46:03.777777Z	    isNew,
2025-09-16T23:46:03.777868Z	    _createdAt,
2025-09-16T23:46:03.777958Z	    _updatedAt
2025-09-16T23:46:03.778042Z	  
2025-09-16T23:46:03.778126Z	      },
2025-09-16T23:46:03.778214Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-16T23:46:03.778316Z	    }
2025-09-16T23:46:03.77841Z	  
2025-09-16T23:46:03.778509Z	Query parameters: {
2025-09-16T23:46:03.778593Z	  limit: 8,
2025-09-16T23:46:03.778695Z	  offset: 0,
2025-09-16T23:46:03.778788Z	  category: undefined,
2025-09-16T23:46:03.778886Z	  brand: 'epcos',
2025-09-16T23:46:03.778986Z	  featured: undefined
2025-09-16T23:46:03.77908Z	}
2025-09-16T23:46:03.779151Z	Fetching solutions with query: 
2025-09-16T23:46:03.779371Z	    {
2025-09-16T23:46:03.779525Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.779627Z	        
2025-09-16T23:46:03.779742Z	    _id,
2025-09-16T23:46:03.779844Z	    title,
2025-09-16T23:46:03.779927Z	    "slug": slug.current,
2025-09-16T23:46:03.779983Z	    summary,
2025-09-16T23:46:03.780099Z	    description,
2025-09-16T23:46:03.78026Z	    coverImage,
2025-09-16T23:46:03.780333Z	    primaryBrand->{
2025-09-16T23:46:03.780433Z	      _id,
2025-09-16T23:46:03.780555Z	      name,
2025-09-16T23:46:03.780641Z	      "slug": slug.current,
2025-09-16T23:46:03.780798Z	      logo
2025-09-16T23:46:03.780905Z	    },
2025-09-16T23:46:03.781014Z	    relatedBrands[]->{
2025-09-16T23:46:03.78112Z	      _id,
2025-09-16T23:46:03.781213Z	      name,
2025-09-16T23:46:03.781306Z	      "slug": slug.current,
2025-09-16T23:46:03.78141Z	      logo
2025-09-16T23:46:03.781516Z	    },
2025-09-16T23:46:03.781617Z	    targetMarket,
2025-09-16T23:46:03.781757Z	    complexity,
2025-09-16T23:46:03.781873Z	    publishedAt,
2025-09-16T23:46:03.781978Z	    isPublished,
2025-09-16T23:46:03.78209Z	    isFeatured,
2025-09-16T23:46:03.782196Z	    viewCount,
2025-09-16T23:46:03.782358Z	    _createdAt,
2025-09-16T23:46:03.782438Z	    _updatedAt
2025-09-16T23:46:03.782521Z	  
2025-09-16T23:46:03.782635Z	      },
2025-09-16T23:46:03.782748Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-16T23:46:03.782856Z	    }
2025-09-16T23:46:03.782939Z	  
2025-09-16T23:46:03.78302Z	Query parameters: {
2025-09-16T23:46:03.783135Z	  limit: 4,
2025-09-16T23:46:03.78323Z	  offset: 0,
2025-09-16T23:46:03.783334Z	  targetMarket: undefined,
2025-09-16T23:46:03.783528Z	  brand: 'epcos',
2025-09-16T23:46:03.783602Z	  featured: undefined
2025-09-16T23:46:03.783669Z	}
2025-09-16T23:46:03.783824Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-16T23:46:03.783912Z	Fetching products with query: 
2025-09-16T23:46:03.783993Z	    {
2025-09-16T23:46:03.784051Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.784109Z	        
2025-09-16T23:46:03.78417Z	    _id,
2025-09-16T23:46:03.784297Z	    _type,
2025-09-16T23:46:03.784352Z	    partNumber,
2025-09-16T23:46:03.78441Z	    "slug": slug.current,
2025-09-16T23:46:03.784469Z	    title,
2025-09-16T23:46:03.784632Z	    shortDescription,
2025-09-16T23:46:03.784966Z	    image,
2025-09-16T23:46:03.785033Z	    brand->{
2025-09-16T23:46:03.785088Z	      name,
2025-09-16T23:46:03.785146Z	      "slug": slug.current,
2025-09-16T23:46:03.785344Z	      logo
2025-09-16T23:46:03.785463Z	    },
2025-09-16T23:46:03.785571Z	    category->{
2025-09-16T23:46:03.785709Z	      name,
2025-09-16T23:46:03.785828Z	      "slug": slug.current
2025-09-16T23:46:03.785938Z	    },
2025-09-16T23:46:03.786036Z	    pricing{
2025-09-16T23:46:03.786127Z	      currency,
2025-09-16T23:46:03.786234Z	      tiers[]{
2025-09-16T23:46:03.786321Z	        quantity,
2025-09-16T23:46:03.78642Z	        price,
2025-09-16T23:46:03.786607Z	        unit
2025-09-16T23:46:03.786762Z	      },
2025-09-16T23:46:03.786852Z	      moq,
2025-09-16T23:46:03.787204Z	      leadTime,
2025-09-16T23:46:03.787299Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.787368Z	      "price": tiers[0].price,
2025-09-16T23:46:03.787806Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.787892Z	    },
2025-09-16T23:46:03.787969Z	    inventory{
2025-09-16T23:46:03.788349Z	      quantity,
2025-09-16T23:46:03.788433Z	      status,
2025-09-16T23:46:03.788612Z	      warehouse,
2025-09-16T23:46:03.788782Z	      lastUpdated,
2025-09-16T23:46:03.788917Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.789149Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.789259Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.789362Z	    },
2025-09-16T23:46:03.789479Z	    isActive,
2025-09-16T23:46:03.789603Z	    isFeatured,
2025-09-16T23:46:03.789752Z	    isNew,
2025-09-16T23:46:03.789863Z	    _createdAt,
2025-09-16T23:46:03.789958Z	    _updatedAt
2025-09-16T23:46:03.790025Z	  
2025-09-16T23:46:03.790081Z	      },
2025-09-16T23:46:03.790141Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-16T23:46:03.790272Z	    }
2025-09-16T23:46:03.790335Z	  
2025-09-16T23:46:03.790434Z	Query parameters: {
2025-09-16T23:46:03.790552Z	  limit: 8,
2025-09-16T23:46:03.79066Z	  offset: 0,
2025-09-16T23:46:03.790868Z	  category: undefined,
2025-09-16T23:46:03.790991Z	  brand: 'ixys',
2025-09-16T23:46:03.791107Z	  featured: undefined
2025-09-16T23:46:03.791212Z	}
2025-09-16T23:46:03.791319Z	✅ [getBrandData] Found brand: Epcos
2025-09-16T23:46:03.791425Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.791542Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.791655Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:46:03.791782Z	Fetching products with query: 
2025-09-16T23:46:03.791882Z	    {
2025-09-16T23:46:03.791975Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.792083Z	        
2025-09-16T23:46:03.79218Z	    _id,
2025-09-16T23:46:03.792279Z	    _type,
2025-09-16T23:46:03.792383Z	    partNumber,
2025-09-16T23:46:03.792496Z	    "slug": slug.current,
2025-09-16T23:46:03.792612Z	    title,
2025-09-16T23:46:03.792766Z	    shortDescription,
2025-09-16T23:46:03.7929Z	    image,
2025-09-16T23:46:03.79317Z	    brand->{
2025-09-16T23:46:03.793286Z	      name,
2025-09-16T23:46:03.79337Z	      "slug": slug.current,
2025-09-16T23:46:03.793466Z	      logo
2025-09-16T23:46:03.793568Z	    },
2025-09-16T23:46:03.793728Z	    category->{
2025-09-16T23:46:03.793873Z	      name,
2025-09-16T23:46:03.793986Z	      "slug": slug.current
2025-09-16T23:46:03.794092Z	    },
2025-09-16T23:46:03.794182Z	    pricing{
2025-09-16T23:46:03.794286Z	      currency,
2025-09-16T23:46:03.794373Z	      tiers[]{
2025-09-16T23:46:03.794475Z	        quantity,
2025-09-16T23:46:03.794561Z	        price,
2025-09-16T23:46:03.794661Z	        unit
2025-09-16T23:46:03.794802Z	      },
2025-09-16T23:46:03.794927Z	      moq,
2025-09-16T23:46:03.795056Z	      leadTime,
2025-09-16T23:46:03.795138Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.7952Z	      "price": tiers[0].price,
2025-09-16T23:46:03.795297Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.795424Z	    },
2025-09-16T23:46:03.79553Z	    inventory{
2025-09-16T23:46:03.795708Z	      quantity,
2025-09-16T23:46:03.795796Z	      status,
2025-09-16T23:46:03.795917Z	      warehouse,
2025-09-16T23:46:03.796013Z	      lastUpdated,
2025-09-16T23:46:03.796095Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.796344Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.796588Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.79676Z	    },
2025-09-16T23:46:03.796837Z	    isActive,
2025-09-16T23:46:03.797032Z	    isFeatured,
2025-09-16T23:46:03.797112Z	    isNew,
2025-09-16T23:46:03.797237Z	    _createdAt,
2025-09-16T23:46:03.797337Z	    _updatedAt
2025-09-16T23:46:03.797499Z	  
2025-09-16T23:46:03.797575Z	      },
2025-09-16T23:46:03.797636Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:46:03.797818Z	    }
2025-09-16T23:46:03.797929Z	  
2025-09-16T23:46:03.798221Z	Query parameters: {
2025-09-16T23:46:03.798343Z	  limit: 8,
2025-09-16T23:46:03.798728Z	  offset: 0,
2025-09-16T23:46:03.798829Z	  category: undefined,
2025-09-16T23:46:03.79889Z	  brand: 'littelfuse',
2025-09-16T23:46:03.799235Z	  featured: undefined
2025-09-16T23:46:03.79932Z	}
2025-09-16T23:46:03.799574Z	Fetching solutions with query: 
2025-09-16T23:46:03.799657Z	    {
2025-09-16T23:46:03.799835Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.799942Z	        
2025-09-16T23:46:03.800136Z	    _id,
2025-09-16T23:46:03.800219Z	    title,
2025-09-16T23:46:03.800276Z	    "slug": slug.current,
2025-09-16T23:46:03.800597Z	    summary,
2025-09-16T23:46:03.800766Z	    description,
2025-09-16T23:46:03.800942Z	    coverImage,
2025-09-16T23:46:03.801076Z	    primaryBrand->{
2025-09-16T23:46:03.80119Z	      _id,
2025-09-16T23:46:03.80131Z	      name,
2025-09-16T23:46:03.801412Z	      "slug": slug.current,
2025-09-16T23:46:03.80153Z	      logo
2025-09-16T23:46:03.801635Z	    },
2025-09-16T23:46:03.801773Z	    relatedBrands[]->{
2025-09-16T23:46:03.80188Z	      _id,
2025-09-16T23:46:03.802157Z	      name,
2025-09-16T23:46:03.802248Z	      "slug": slug.current,
2025-09-16T23:46:03.802531Z	      logo
2025-09-16T23:46:03.802616Z	    },
2025-09-16T23:46:03.80274Z	    targetMarket,
2025-09-16T23:46:03.802806Z	    complexity,
2025-09-16T23:46:03.802864Z	    publishedAt,
2025-09-16T23:46:03.803016Z	    isPublished,
2025-09-16T23:46:03.803298Z	    isFeatured,
2025-09-16T23:46:03.803381Z	    viewCount,
2025-09-16T23:46:03.80345Z	    _createdAt,
2025-09-16T23:46:03.803747Z	    _updatedAt
2025-09-16T23:46:03.803893Z	  
2025-09-16T23:46:03.804014Z	      },
2025-09-16T23:46:03.804125Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:46:03.804247Z	    }
2025-09-16T23:46:03.804379Z	  
2025-09-16T23:46:03.804516Z	Query parameters: {
2025-09-16T23:46:03.804665Z	  limit: 4,
2025-09-16T23:46:03.804817Z	  offset: 0,
2025-09-16T23:46:03.804941Z	  targetMarket: undefined,
2025-09-16T23:46:03.805071Z	  brand: 'littelfuse',
2025-09-16T23:46:03.805195Z	  featured: undefined
2025-09-16T23:46:03.805317Z	}
2025-09-16T23:46:03.805484Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:46:03.805612Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.805752Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.805876Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:46:03.805995Z	Fetching products with query: 
2025-09-16T23:46:03.806113Z	    {
2025-09-16T23:46:03.806236Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.806362Z	        
2025-09-16T23:46:03.806496Z	    _id,
2025-09-16T23:46:03.806619Z	    _type,
2025-09-16T23:46:03.806758Z	    partNumber,
2025-09-16T23:46:03.806873Z	    "slug": slug.current,
2025-09-16T23:46:03.806991Z	    title,
2025-09-16T23:46:03.807105Z	    shortDescription,
2025-09-16T23:46:03.807265Z	    image,
2025-09-16T23:46:03.807399Z	    brand->{
2025-09-16T23:46:03.807534Z	      name,
2025-09-16T23:46:03.807658Z	      "slug": slug.current,
2025-09-16T23:46:03.807797Z	      logo
2025-09-16T23:46:03.807909Z	    },
2025-09-16T23:46:03.808019Z	    category->{
2025-09-16T23:46:03.808131Z	      name,
2025-09-16T23:46:03.80823Z	      "slug": slug.current
2025-09-16T23:46:03.808378Z	    },
2025-09-16T23:46:03.808504Z	    pricing{
2025-09-16T23:46:03.808656Z	      currency,
2025-09-16T23:46:03.808801Z	      tiers[]{
2025-09-16T23:46:03.808918Z	        quantity,
2025-09-16T23:46:03.80904Z	        price,
2025-09-16T23:46:03.809167Z	        unit
2025-09-16T23:46:03.80929Z	      },
2025-09-16T23:46:03.809433Z	      moq,
2025-09-16T23:46:03.809567Z	      leadTime,
2025-09-16T23:46:03.8097Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.809822Z	      "price": tiers[0].price,
2025-09-16T23:46:03.809931Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.810043Z	    },
2025-09-16T23:46:03.810151Z	    inventory{
2025-09-16T23:46:03.810264Z	      quantity,
2025-09-16T23:46:03.810381Z	      status,
2025-09-16T23:46:03.810486Z	      warehouse,
2025-09-16T23:46:03.810624Z	      lastUpdated,
2025-09-16T23:46:03.810764Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.810882Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.811009Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.811145Z	    },
2025-09-16T23:46:03.811274Z	    isActive,
2025-09-16T23:46:03.811398Z	    isFeatured,
2025-09-16T23:46:03.81152Z	    isNew,
2025-09-16T23:46:03.811631Z	    _createdAt,
2025-09-16T23:46:03.811781Z	    _updatedAt
2025-09-16T23:46:03.811904Z	  
2025-09-16T23:46:03.812016Z	      },
2025-09-16T23:46:03.812126Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:46:03.812233Z	    }
2025-09-16T23:46:03.812336Z	  
2025-09-16T23:46:03.812459Z	Query parameters: {
2025-09-16T23:46:03.812574Z	  limit: 8,
2025-09-16T23:46:03.812706Z	  offset: 0,
2025-09-16T23:46:03.812837Z	  category: undefined,
2025-09-16T23:46:03.812954Z	  brand: 'littelfuse',
2025-09-16T23:46:03.813088Z	  featured: undefined
2025-09-16T23:46:03.813197Z	}
2025-09-16T23:46:03.813318Z	Fetching solutions with query: 
2025-09-16T23:46:03.813448Z	    {
2025-09-16T23:46:03.813562Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.813695Z	        
2025-09-16T23:46:03.813804Z	    _id,
2025-09-16T23:46:03.813921Z	    title,
2025-09-16T23:46:03.814041Z	    "slug": slug.current,
2025-09-16T23:46:03.81416Z	    summary,
2025-09-16T23:46:03.814282Z	    description,
2025-09-16T23:46:03.814423Z	    coverImage,
2025-09-16T23:46:03.814545Z	    primaryBrand->{
2025-09-16T23:46:03.814668Z	      _id,
2025-09-16T23:46:03.814799Z	      name,
2025-09-16T23:46:03.814914Z	      "slug": slug.current,
2025-09-16T23:46:03.815028Z	      logo
2025-09-16T23:46:03.815142Z	    },
2025-09-16T23:46:03.81527Z	    relatedBrands[]->{
2025-09-16T23:46:03.815422Z	      _id,
2025-09-16T23:46:03.815536Z	      name,
2025-09-16T23:46:03.815648Z	      "slug": slug.current,
2025-09-16T23:46:03.815788Z	      logo
2025-09-16T23:46:03.815899Z	    },
2025-09-16T23:46:03.816036Z	    targetMarket,
2025-09-16T23:46:03.816158Z	    complexity,
2025-09-16T23:46:03.816276Z	    publishedAt,
2025-09-16T23:46:03.816398Z	    isPublished,
2025-09-16T23:46:03.81651Z	    isFeatured,
2025-09-16T23:46:03.816622Z	    viewCount,
2025-09-16T23:46:03.816751Z	    _createdAt,
2025-09-16T23:46:03.816881Z	    _updatedAt
2025-09-16T23:46:03.816998Z	  
2025-09-16T23:46:03.817108Z	      },
2025-09-16T23:46:03.817234Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:46:03.817357Z	    }
2025-09-16T23:46:03.817476Z	  
2025-09-16T23:46:03.817584Z	Query parameters: {
2025-09-16T23:46:03.817712Z	  limit: 4,
2025-09-16T23:46:03.817826Z	  offset: 0,
2025-09-16T23:46:03.817927Z	  targetMarket: undefined,
2025-09-16T23:46:03.818031Z	  brand: 'littelfuse',
2025-09-16T23:46:03.818144Z	  featured: undefined
2025-09-16T23:46:03.818256Z	}
2025-09-16T23:46:03.818362Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:46:03.818492Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.818599Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.818725Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:46:03.818835Z	Fetching products with query: 
2025-09-16T23:46:03.818933Z	    {
2025-09-16T23:46:03.819024Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.819126Z	        
2025-09-16T23:46:03.819269Z	    _id,
2025-09-16T23:46:03.819398Z	    _type,
2025-09-16T23:46:03.81953Z	    partNumber,
2025-09-16T23:46:03.819635Z	    "slug": slug.current,
2025-09-16T23:46:03.819767Z	    title,
2025-09-16T23:46:03.819885Z	    shortDescription,
2025-09-16T23:46:03.820015Z	    image,
2025-09-16T23:46:03.820118Z	    brand->{
2025-09-16T23:46:03.820336Z	      name,
2025-09-16T23:46:03.820464Z	      "slug": slug.current,
2025-09-16T23:46:03.820578Z	      logo
2025-09-16T23:46:03.820699Z	    },
2025-09-16T23:46:03.820807Z	    category->{
2025-09-16T23:46:03.820923Z	      name,
2025-09-16T23:46:03.821034Z	      "slug": slug.current
2025-09-16T23:46:03.821131Z	    },
2025-09-16T23:46:03.821246Z	    pricing{
2025-09-16T23:46:03.82135Z	      currency,
2025-09-16T23:46:03.821482Z	      tiers[]{
2025-09-16T23:46:03.821601Z	        quantity,
2025-09-16T23:46:03.821735Z	        price,
2025-09-16T23:46:03.821856Z	        unit
2025-09-16T23:46:03.821988Z	      },
2025-09-16T23:46:03.822101Z	      moq,
2025-09-16T23:46:03.822196Z	      leadTime,
2025-09-16T23:46:03.822296Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.822407Z	      "price": tiers[0].price,
2025-09-16T23:46:03.822511Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.822626Z	    },
2025-09-16T23:46:03.82276Z	    inventory{
2025-09-16T23:46:03.822873Z	      quantity,
2025-09-16T23:46:03.82298Z	      status,
2025-09-16T23:46:03.823084Z	      warehouse,
2025-09-16T23:46:03.823202Z	      lastUpdated,
2025-09-16T23:46:03.823317Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.823439Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.82356Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.823688Z	    },
2025-09-16T23:46:03.823835Z	    isActive,
2025-09-16T23:46:03.823953Z	    isFeatured,
2025-09-16T23:46:03.824059Z	    isNew,
2025-09-16T23:46:03.824152Z	    _createdAt,
2025-09-16T23:46:03.824247Z	    _updatedAt
2025-09-16T23:46:03.824391Z	  
2025-09-16T23:46:03.824475Z	      },
2025-09-16T23:46:03.824569Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:46:03.824667Z	    }
2025-09-16T23:46:03.824861Z	  
2025-09-16T23:46:03.824948Z	Query parameters: {
2025-09-16T23:46:03.825056Z	  limit: 8,
2025-09-16T23:46:03.825166Z	  offset: 0,
2025-09-16T23:46:03.825283Z	  category: undefined,
2025-09-16T23:46:03.825398Z	  brand: 'Electronicon',
2025-09-16T23:46:03.825522Z	  featured: undefined
2025-09-16T23:46:03.825657Z	}
2025-09-16T23:46:03.825833Z	Fetching solutions with query: 
2025-09-16T23:46:03.825995Z	    {
2025-09-16T23:46:03.826123Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.826298Z	        
2025-09-16T23:46:03.826437Z	    _id,
2025-09-16T23:46:03.826554Z	    title,
2025-09-16T23:46:03.826658Z	    "slug": slug.current,
2025-09-16T23:46:03.826795Z	    summary,
2025-09-16T23:46:03.826924Z	    description,
2025-09-16T23:46:03.82711Z	    coverImage,
2025-09-16T23:46:03.827198Z	    primaryBrand->{
2025-09-16T23:46:03.827296Z	      _id,
2025-09-16T23:46:03.827419Z	      name,
2025-09-16T23:46:03.827522Z	      "slug": slug.current,
2025-09-16T23:46:03.827619Z	      logo
2025-09-16T23:46:03.827748Z	    },
2025-09-16T23:46:03.827874Z	    relatedBrands[]->{
2025-09-16T23:46:03.827971Z	      _id,
2025-09-16T23:46:03.828054Z	      name,
2025-09-16T23:46:03.828168Z	      "slug": slug.current,
2025-09-16T23:46:03.828273Z	      logo
2025-09-16T23:46:03.828403Z	    },
2025-09-16T23:46:03.828476Z	    targetMarket,
2025-09-16T23:46:03.82855Z	    complexity,
2025-09-16T23:46:03.828642Z	    publishedAt,
2025-09-16T23:46:03.828777Z	    isPublished,
2025-09-16T23:46:03.828886Z	    isFeatured,
2025-09-16T23:46:03.828997Z	    viewCount,
2025-09-16T23:46:03.829095Z	    _createdAt,
2025-09-16T23:46:03.829203Z	    _updatedAt
2025-09-16T23:46:03.829311Z	  
2025-09-16T23:46:03.829427Z	      },
2025-09-16T23:46:03.829528Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:46:03.829643Z	    }
2025-09-16T23:46:03.829772Z	  
2025-09-16T23:46:03.829886Z	Query parameters: {
2025-09-16T23:46:03.830067Z	  limit: 4,
2025-09-16T23:46:03.830198Z	  offset: 0,
2025-09-16T23:46:03.830322Z	  targetMarket: undefined,
2025-09-16T23:46:03.830457Z	  brand: 'Electronicon',
2025-09-16T23:46:03.830592Z	  featured: undefined
2025-09-16T23:46:03.830739Z	}
2025-09-16T23:46:03.830863Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:46:03.830937Z	Products fetch result: {
2025-09-16T23:46:03.831019Z	  totalProducts: 2,
2025-09-16T23:46:03.831141Z	  fetchedProducts: 2,
2025-09-16T23:46:03.831253Z	  firstProduct: {
2025-09-16T23:46:03.831352Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:46:03.831452Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:46:03.831545Z	    _type: 'product',
2025-09-16T23:46:03.831635Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:46:03.83176Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:46:03.831871Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:46:03.831981Z	    image: null,
2025-09-16T23:46:03.832105Z	    inventory: {
2025-09-16T23:46:03.832251Z	      inStock: true,
2025-09-16T23:46:03.832383Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:46:03.832505Z	      quantity: 0,
2025-09-16T23:46:03.832608Z	      status: 'in_stock',
2025-09-16T23:46:03.832761Z	      warehouse: null
2025-09-16T23:46:03.832858Z	    },
2025-09-16T23:46:03.832969Z	    isActive: true,
2025-09-16T23:46:03.833094Z	    isFeatured: false,
2025-09-16T23:46:03.833221Z	    isNew: false,
2025-09-16T23:46:03.83333Z	    partNumber: '99999',
2025-09-16T23:46:03.833472Z	    pricing: {
2025-09-16T23:46:03.83359Z	      currency: 'CNY',
2025-09-16T23:46:03.833724Z	      leadTime: null,
2025-09-16T23:46:03.833826Z	      moq: null,
2025-09-16T23:46:03.833926Z	      price: null,
2025-09-16T23:46:03.834026Z	      tiers: null
2025-09-16T23:46:03.834125Z	    },
2025-09-16T23:46:03.834226Z	    shortDescription: null,
2025-09-16T23:46:03.834322Z	    slug: '99999',
2025-09-16T23:46:03.83445Z	    title: '99999'
2025-09-16T23:46:03.834573Z	  }
2025-09-16T23:46:03.834696Z	}
2025-09-16T23:46:03.83484Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.834967Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:46:03.835083Z	Fetching products with query: 
2025-09-16T23:46:03.835233Z	    {
2025-09-16T23:46:03.835356Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.835492Z	        
2025-09-16T23:46:03.835614Z	    _id,
2025-09-16T23:46:03.835759Z	    _type,
2025-09-16T23:46:03.83588Z	    partNumber,
2025-09-16T23:46:03.836002Z	    "slug": slug.current,
2025-09-16T23:46:03.836107Z	    title,
2025-09-16T23:46:03.836209Z	    shortDescription,
2025-09-16T23:46:03.836313Z	    image,
2025-09-16T23:46:03.836446Z	    brand->{
2025-09-16T23:46:03.836557Z	      name,
2025-09-16T23:46:03.836687Z	      "slug": slug.current,
2025-09-16T23:46:03.836811Z	      logo
2025-09-16T23:46:03.836933Z	    },
2025-09-16T23:46:03.837049Z	    category->{
2025-09-16T23:46:03.837159Z	      name,
2025-09-16T23:46:03.837262Z	      "slug": slug.current
2025-09-16T23:46:03.837379Z	    },
2025-09-16T23:46:03.837496Z	    pricing{
2025-09-16T23:46:03.837614Z	      currency,
2025-09-16T23:46:03.83776Z	      tiers[]{
2025-09-16T23:46:03.837883Z	        quantity,
2025-09-16T23:46:03.837993Z	        price,
2025-09-16T23:46:03.838114Z	        unit
2025-09-16T23:46:03.838229Z	      },
2025-09-16T23:46:03.838338Z	      moq,
2025-09-16T23:46:03.838475Z	      leadTime,
2025-09-16T23:46:03.838603Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.838745Z	      "price": tiers[0].price,
2025-09-16T23:46:03.838866Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.838986Z	    },
2025-09-16T23:46:03.839092Z	    inventory{
2025-09-16T23:46:03.839197Z	      quantity,
2025-09-16T23:46:03.839331Z	      status,
2025-09-16T23:46:03.839459Z	      warehouse,
2025-09-16T23:46:03.839573Z	      lastUpdated,
2025-09-16T23:46:03.839698Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.839827Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.839929Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.840044Z	    },
2025-09-16T23:46:03.840149Z	    isActive,
2025-09-16T23:46:03.840251Z	    isFeatured,
2025-09-16T23:46:03.840351Z	    isNew,
2025-09-16T23:46:03.840466Z	    _createdAt,
2025-09-16T23:46:03.840573Z	    _updatedAt
2025-09-16T23:46:03.840699Z	  
2025-09-16T23:46:03.840818Z	      },
2025-09-16T23:46:03.840934Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:46:03.841048Z	    }
2025-09-16T23:46:03.841164Z	  
2025-09-16T23:46:03.841304Z	Query parameters: {
2025-09-16T23:46:03.84144Z	  limit: 8,
2025-09-16T23:46:03.841547Z	  offset: 0,
2025-09-16T23:46:03.841695Z	  category: undefined,
2025-09-16T23:46:03.841805Z	  brand: 'Electronicon',
2025-09-16T23:46:03.841912Z	  featured: undefined
2025-09-16T23:46:03.842018Z	}
2025-09-16T23:46:03.842118Z	Fetching solutions with query: 
2025-09-16T23:46:03.842219Z	    {
2025-09-16T23:46:03.842425Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.842635Z	        
2025-09-16T23:46:03.842777Z	    _id,
2025-09-16T23:46:03.842963Z	    title,
2025-09-16T23:46:03.84303Z	    "slug": slug.current,
2025-09-16T23:46:03.843109Z	    summary,
2025-09-16T23:46:03.843239Z	    description,
2025-09-16T23:46:03.843369Z	    coverImage,
2025-09-16T23:46:03.843499Z	    primaryBrand->{
2025-09-16T23:46:03.843618Z	      _id,
2025-09-16T23:46:03.843733Z	      name,
2025-09-16T23:46:03.843852Z	      "slug": slug.current,
2025-09-16T23:46:03.843983Z	      logo
2025-09-16T23:46:03.844105Z	    },
2025-09-16T23:46:03.844255Z	    relatedBrands[]->{
2025-09-16T23:46:03.844357Z	      _id,
2025-09-16T23:46:03.844468Z	      name,
2025-09-16T23:46:03.844606Z	      "slug": slug.current,
2025-09-16T23:46:03.844747Z	      logo
2025-09-16T23:46:03.844813Z	    },
2025-09-16T23:46:03.844873Z	    targetMarket,
2025-09-16T23:46:03.845032Z	    complexity,
2025-09-16T23:46:03.845162Z	    publishedAt,
2025-09-16T23:46:03.845305Z	    isPublished,
2025-09-16T23:46:03.845412Z	    isFeatured,
2025-09-16T23:46:03.845514Z	    viewCount,
2025-09-16T23:46:03.845621Z	    _createdAt,
2025-09-16T23:46:03.845754Z	    _updatedAt
2025-09-16T23:46:03.845915Z	  
2025-09-16T23:46:03.846022Z	      },
2025-09-16T23:46:03.846151Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:46:03.846231Z	    }
2025-09-16T23:46:03.846293Z	  
2025-09-16T23:46:03.846393Z	Query parameters: {
2025-09-16T23:46:03.846652Z	  limit: 4,
2025-09-16T23:46:03.846788Z	  offset: 0,
2025-09-16T23:46:03.846904Z	  targetMarket: undefined,
2025-09-16T23:46:03.847004Z	  brand: 'Electronicon',
2025-09-16T23:46:03.847098Z	  featured: undefined
2025-09-16T23:46:03.847203Z	}
2025-09-16T23:46:03.847304Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:46:03.847405Z	Products fetch result: {
2025-09-16T23:46:03.847519Z	  totalProducts: 2,
2025-09-16T23:46:03.847614Z	  fetchedProducts: 2,
2025-09-16T23:46:03.847718Z	  firstProduct: {
2025-09-16T23:46:03.847794Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:46:03.847858Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:46:03.847929Z	    _type: 'product',
2025-09-16T23:46:03.847993Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:46:03.848052Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:46:03.848128Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:46:03.848201Z	    image: null,
2025-09-16T23:46:03.848285Z	    inventory: {
2025-09-16T23:46:03.848395Z	      inStock: true,
2025-09-16T23:46:03.84851Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:46:03.848617Z	      quantity: 0,
2025-09-16T23:46:03.848738Z	      status: 'in_stock',
2025-09-16T23:46:03.848814Z	      warehouse: null
2025-09-16T23:46:03.848877Z	    },
2025-09-16T23:46:03.848952Z	    isActive: true,
2025-09-16T23:46:03.849037Z	    isFeatured: false,
2025-09-16T23:46:03.849127Z	    isNew: false,
2025-09-16T23:46:03.849217Z	    partNumber: '99999',
2025-09-16T23:46:03.849325Z	    pricing: {
2025-09-16T23:46:03.849433Z	      currency: 'CNY',
2025-09-16T23:46:03.849528Z	      leadTime: null,
2025-09-16T23:46:03.849594Z	      moq: null,
2025-09-16T23:46:03.849684Z	      price: null,
2025-09-16T23:46:03.849793Z	      tiers: null
2025-09-16T23:46:03.849891Z	    },
2025-09-16T23:46:03.849988Z	    shortDescription: null,
2025-09-16T23:46:03.850096Z	    slug: '99999',
2025-09-16T23:46:03.850192Z	    title: '99999'
2025-09-16T23:46:03.850287Z	  }
2025-09-16T23:46:03.850384Z	}
2025-09-16T23:46:03.850491Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.85078Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:46:03.850865Z	Fetching products with query: 
2025-09-16T23:46:03.850992Z	    {
2025-09-16T23:46:03.851128Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.851278Z	        
2025-09-16T23:46:03.851361Z	    _id,
2025-09-16T23:46:03.851425Z	    _type,
2025-09-16T23:46:03.85153Z	    partNumber,
2025-09-16T23:46:03.851734Z	    "slug": slug.current,
2025-09-16T23:46:03.851814Z	    title,
2025-09-16T23:46:03.851939Z	    shortDescription,
2025-09-16T23:46:03.852041Z	    image,
2025-09-16T23:46:03.852144Z	    brand->{
2025-09-16T23:46:03.852267Z	      name,
2025-09-16T23:46:03.852381Z	      "slug": slug.current,
2025-09-16T23:46:03.852465Z	      logo
2025-09-16T23:46:03.852565Z	    },
2025-09-16T23:46:03.852663Z	    category->{
2025-09-16T23:46:03.852791Z	      name,
2025-09-16T23:46:03.852888Z	      "slug": slug.current
2025-09-16T23:46:03.852984Z	    },
2025-09-16T23:46:03.853088Z	    pricing{
2025-09-16T23:46:03.853205Z	      currency,
2025-09-16T23:46:03.853316Z	      tiers[]{
2025-09-16T23:46:03.853413Z	        quantity,
2025-09-16T23:46:03.853515Z	        price,
2025-09-16T23:46:03.853609Z	        unit
2025-09-16T23:46:03.853782Z	      },
2025-09-16T23:46:03.853897Z	      moq,
2025-09-16T23:46:03.854014Z	      leadTime,
2025-09-16T23:46:03.85409Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.854156Z	      "price": tiers[0].price,
2025-09-16T23:46:03.854224Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.85428Z	    },
2025-09-16T23:46:03.854336Z	    inventory{
2025-09-16T23:46:03.854398Z	      quantity,
2025-09-16T23:46:03.854477Z	      status,
2025-09-16T23:46:03.854541Z	      warehouse,
2025-09-16T23:46:03.854597Z	      lastUpdated,
2025-09-16T23:46:03.854652Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.854749Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.85482Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.854875Z	    },
2025-09-16T23:46:03.85493Z	    isActive,
2025-09-16T23:46:03.855019Z	    isFeatured,
2025-09-16T23:46:03.855109Z	    isNew,
2025-09-16T23:46:03.85522Z	    _createdAt,
2025-09-16T23:46:03.85534Z	    _updatedAt
2025-09-16T23:46:03.855463Z	  
2025-09-16T23:46:03.855588Z	      },
2025-09-16T23:46:03.855818Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:46:03.855892Z	    }
2025-09-16T23:46:03.855971Z	  
2025-09-16T23:46:03.856039Z	Query parameters: {
2025-09-16T23:46:03.856263Z	  limit: 8,
2025-09-16T23:46:03.856379Z	  offset: 0,
2025-09-16T23:46:03.856464Z	  category: undefined,
2025-09-16T23:46:03.856525Z	  brand: 'littelfuse',
2025-09-16T23:46:03.856589Z	  featured: undefined
2025-09-16T23:46:03.856654Z	}
2025-09-16T23:46:03.856768Z	Fetching solutions with query: 
2025-09-16T23:46:03.856843Z	    {
2025-09-16T23:46:03.856917Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.856999Z	        
2025-09-16T23:46:03.857069Z	    _id,
2025-09-16T23:46:03.857133Z	    title,
2025-09-16T23:46:03.857193Z	    "slug": slug.current,
2025-09-16T23:46:03.857251Z	    summary,
2025-09-16T23:46:03.857313Z	    description,
2025-09-16T23:46:03.857375Z	    coverImage,
2025-09-16T23:46:03.857447Z	    primaryBrand->{
2025-09-16T23:46:03.857508Z	      _id,
2025-09-16T23:46:03.857566Z	      name,
2025-09-16T23:46:03.857628Z	      "slug": slug.current,
2025-09-16T23:46:03.857723Z	      logo
2025-09-16T23:46:03.857788Z	    },
2025-09-16T23:46:03.857844Z	    relatedBrands[]->{
2025-09-16T23:46:03.857901Z	      _id,
2025-09-16T23:46:03.85796Z	      name,
2025-09-16T23:46:03.858015Z	      "slug": slug.current,
2025-09-16T23:46:03.858071Z	      logo
2025-09-16T23:46:03.858134Z	    },
2025-09-16T23:46:03.85821Z	    targetMarket,
2025-09-16T23:46:03.85827Z	    complexity,
2025-09-16T23:46:03.858331Z	    publishedAt,
2025-09-16T23:46:03.85839Z	    isPublished,
2025-09-16T23:46:03.858455Z	    isFeatured,
2025-09-16T23:46:03.858511Z	    viewCount,
2025-09-16T23:46:03.858573Z	    _createdAt,
2025-09-16T23:46:03.858634Z	    _updatedAt
2025-09-16T23:46:03.858862Z	  
2025-09-16T23:46:03.858962Z	      },
2025-09-16T23:46:03.859051Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:46:03.859159Z	    }
2025-09-16T23:46:03.859242Z	  
2025-09-16T23:46:03.859304Z	Query parameters: {
2025-09-16T23:46:03.859365Z	  limit: 4,
2025-09-16T23:46:03.859481Z	  offset: 0,
2025-09-16T23:46:03.859586Z	  targetMarket: undefined,
2025-09-16T23:46:03.859703Z	  brand: 'littelfuse',
2025-09-16T23:46:03.859807Z	  featured: undefined
2025-09-16T23:46:03.860584Z	}
2025-09-16T23:46:03.860698Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:46:03.861109Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.861254Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.861331Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:46:03.861405Z	Fetching products with query: 
2025-09-16T23:46:03.861713Z	    {
2025-09-16T23:46:03.861891Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.861987Z	        
2025-09-16T23:46:03.862136Z	    _id,
2025-09-16T23:46:03.862213Z	    _type,
2025-09-16T23:46:03.862273Z	    partNumber,
2025-09-16T23:46:03.862427Z	    "slug": slug.current,
2025-09-16T23:46:03.862566Z	    title,
2025-09-16T23:46:03.862842Z	    shortDescription,
2025-09-16T23:46:03.862936Z	    image,
2025-09-16T23:46:03.863045Z	    brand->{
2025-09-16T23:46:03.863209Z	      name,
2025-09-16T23:46:03.863294Z	      "slug": slug.current,
2025-09-16T23:46:03.863443Z	      logo
2025-09-16T23:46:03.863798Z	    },
2025-09-16T23:46:03.863886Z	    category->{
2025-09-16T23:46:03.864001Z	      name,
2025-09-16T23:46:03.864224Z	      "slug": slug.current
2025-09-16T23:46:03.864331Z	    },
2025-09-16T23:46:03.864583Z	    pricing{
2025-09-16T23:46:03.864663Z	      currency,
2025-09-16T23:46:03.864837Z	      tiers[]{
2025-09-16T23:46:03.864917Z	        quantity,
2025-09-16T23:46:03.865046Z	        price,
2025-09-16T23:46:03.865189Z	        unit
2025-09-16T23:46:03.865291Z	      },
2025-09-16T23:46:03.865417Z	      moq,
2025-09-16T23:46:03.865552Z	      leadTime,
2025-09-16T23:46:03.865654Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.865781Z	      "price": tiers[0].price,
2025-09-16T23:46:03.865882Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.865958Z	    },
2025-09-16T23:46:03.866099Z	    inventory{
2025-09-16T23:46:03.866173Z	      quantity,
2025-09-16T23:46:03.866269Z	      status,
2025-09-16T23:46:03.866374Z	      warehouse,
2025-09-16T23:46:03.866473Z	      lastUpdated,
2025-09-16T23:46:03.866569Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.866696Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.866832Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.866911Z	    },
2025-09-16T23:46:03.867006Z	    isActive,
2025-09-16T23:46:03.867124Z	    isFeatured,
2025-09-16T23:46:03.867254Z	    isNew,
2025-09-16T23:46:03.867344Z	    _createdAt,
2025-09-16T23:46:03.867419Z	    _updatedAt
2025-09-16T23:46:03.867553Z	  
2025-09-16T23:46:03.867619Z	      },
2025-09-16T23:46:03.86779Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:46:03.867946Z	    }
2025-09-16T23:46:03.868026Z	  
2025-09-16T23:46:03.868106Z	Query parameters: {
2025-09-16T23:46:03.868223Z	  limit: 8,
2025-09-16T23:46:03.868328Z	  offset: 0,
2025-09-16T23:46:03.868436Z	  category: undefined,
2025-09-16T23:46:03.868537Z	  brand: 'littelfuse',
2025-09-16T23:46:03.868604Z	  featured: undefined
2025-09-16T23:46:03.868663Z	}
2025-09-16T23:46:03.868749Z	Fetching solutions with query: 
2025-09-16T23:46:03.86882Z	    {
2025-09-16T23:46:03.868896Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.868973Z	        
2025-09-16T23:46:03.869035Z	    _id,
2025-09-16T23:46:03.869091Z	    title,
2025-09-16T23:46:03.869148Z	    "slug": slug.current,
2025-09-16T23:46:03.869203Z	    summary,
2025-09-16T23:46:03.869261Z	    description,
2025-09-16T23:46:03.869437Z	    coverImage,
2025-09-16T23:46:03.869597Z	    primaryBrand->{
2025-09-16T23:46:03.869712Z	      _id,
2025-09-16T23:46:03.869825Z	      name,
2025-09-16T23:46:03.869935Z	      "slug": slug.current,
2025-09-16T23:46:03.87006Z	      logo
2025-09-16T23:46:03.870185Z	    },
2025-09-16T23:46:03.870311Z	    relatedBrands[]->{
2025-09-16T23:46:03.870421Z	      _id,
2025-09-16T23:46:03.870523Z	      name,
2025-09-16T23:46:03.870615Z	      "slug": slug.current,
2025-09-16T23:46:03.870732Z	      logo
2025-09-16T23:46:03.870848Z	    },
2025-09-16T23:46:03.87095Z	    targetMarket,
2025-09-16T23:46:03.87104Z	    complexity,
2025-09-16T23:46:03.871141Z	    publishedAt,
2025-09-16T23:46:03.871248Z	    isPublished,
2025-09-16T23:46:03.871352Z	    isFeatured,
2025-09-16T23:46:03.87148Z	    viewCount,
2025-09-16T23:46:03.871593Z	    _createdAt,
2025-09-16T23:46:03.871722Z	    _updatedAt
2025-09-16T23:46:03.871834Z	  
2025-09-16T23:46:03.871924Z	      },
2025-09-16T23:46:03.872024Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:46:03.872105Z	    }
2025-09-16T23:46:03.872191Z	  
2025-09-16T23:46:03.872289Z	Query parameters: {
2025-09-16T23:46:03.872379Z	  limit: 4,
2025-09-16T23:46:03.872498Z	  offset: 0,
2025-09-16T23:46:03.872656Z	  targetMarket: undefined,
2025-09-16T23:46:03.872766Z	  brand: 'littelfuse',
2025-09-16T23:46:03.872893Z	  featured: undefined
2025-09-16T23:46:03.873023Z	}
2025-09-16T23:46:03.873124Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:46:03.873366Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.873475Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.873689Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-16T23:46:03.87383Z	Fetching products with query: 
2025-09-16T23:46:03.873989Z	    {
2025-09-16T23:46:03.874243Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.87449Z	        
2025-09-16T23:46:03.874664Z	    _id,
2025-09-16T23:46:03.874778Z	    _type,
2025-09-16T23:46:03.875012Z	    partNumber,
2025-09-16T23:46:03.875104Z	    "slug": slug.current,
2025-09-16T23:46:03.875326Z	    title,
2025-09-16T23:46:03.87543Z	    shortDescription,
2025-09-16T23:46:03.875709Z	    image,
2025-09-16T23:46:03.875804Z	    brand->{
2025-09-16T23:46:03.875864Z	      name,
2025-09-16T23:46:03.876113Z	      "slug": slug.current,
2025-09-16T23:46:03.876191Z	      logo
2025-09-16T23:46:03.876318Z	    },
2025-09-16T23:46:03.876412Z	    category->{
2025-09-16T23:46:03.876522Z	      name,
2025-09-16T23:46:03.876581Z	      "slug": slug.current
2025-09-16T23:46:03.876746Z	    },
2025-09-16T23:46:03.876873Z	    pricing{
2025-09-16T23:46:03.877029Z	      currency,
2025-09-16T23:46:03.87716Z	      tiers[]{
2025-09-16T23:46:03.877246Z	        quantity,
2025-09-16T23:46:03.87738Z	        price,
2025-09-16T23:46:03.877527Z	        unit
2025-09-16T23:46:03.877689Z	      },
2025-09-16T23:46:03.877838Z	      moq,
2025-09-16T23:46:03.877984Z	      leadTime,
2025-09-16T23:46:03.87814Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.87822Z	      "price": tiers[0].price,
2025-09-16T23:46:03.878379Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.878517Z	    },
2025-09-16T23:46:03.878601Z	    inventory{
2025-09-16T23:46:03.878847Z	      quantity,
2025-09-16T23:46:03.878963Z	      status,
2025-09-16T23:46:03.879112Z	      warehouse,
2025-09-16T23:46:03.879183Z	      lastUpdated,
2025-09-16T23:46:03.87932Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.879407Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.879559Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.879768Z	    },
2025-09-16T23:46:03.879913Z	    isActive,
2025-09-16T23:46:03.880076Z	    isFeatured,
2025-09-16T23:46:03.880265Z	    isNew,
2025-09-16T23:46:03.880423Z	    _createdAt,
2025-09-16T23:46:03.880578Z	    _updatedAt
2025-09-16T23:46:03.881039Z	  
2025-09-16T23:46:03.881182Z	      },
2025-09-16T23:46:03.881303Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-16T23:46:03.881385Z	    }
2025-09-16T23:46:03.881462Z	  
2025-09-16T23:46:03.881739Z	Query parameters: {
2025-09-16T23:46:03.881837Z	  limit: 8,
2025-09-16T23:46:03.881908Z	  offset: 0,
2025-09-16T23:46:03.882009Z	  category: undefined,
2025-09-16T23:46:03.882086Z	  brand: '英飞凌',
2025-09-16T23:46:03.882172Z	  featured: undefined
2025-09-16T23:46:03.882284Z	}
2025-09-16T23:46:03.882381Z	Fetching solutions with query: 
2025-09-16T23:46:03.882494Z	    {
2025-09-16T23:46:03.882596Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.882759Z	        
2025-09-16T23:46:03.882891Z	    _id,
2025-09-16T23:46:03.883Z	    title,
2025-09-16T23:46:03.883082Z	    "slug": slug.current,
2025-09-16T23:46:03.883171Z	    summary,
2025-09-16T23:46:03.883277Z	    description,
2025-09-16T23:46:03.883373Z	    coverImage,
2025-09-16T23:46:03.883446Z	    primaryBrand->{
2025-09-16T23:46:03.883536Z	      _id,
2025-09-16T23:46:03.883643Z	      name,
2025-09-16T23:46:03.883761Z	      "slug": slug.current,
2025-09-16T23:46:03.883872Z	      logo
2025-09-16T23:46:03.884Z	    },
2025-09-16T23:46:03.884132Z	    relatedBrands[]->{
2025-09-16T23:46:03.884269Z	      _id,
2025-09-16T23:46:03.884395Z	      name,
2025-09-16T23:46:03.884523Z	      "slug": slug.current,
2025-09-16T23:46:03.884692Z	      logo
2025-09-16T23:46:03.884806Z	    },
2025-09-16T23:46:03.884904Z	    targetMarket,
2025-09-16T23:46:03.885009Z	    complexity,
2025-09-16T23:46:03.885108Z	    publishedAt,
2025-09-16T23:46:03.8852Z	    isPublished,
2025-09-16T23:46:03.885295Z	    isFeatured,
2025-09-16T23:46:03.885389Z	    viewCount,
2025-09-16T23:46:03.885497Z	    _createdAt,
2025-09-16T23:46:03.885581Z	    _updatedAt
2025-09-16T23:46:03.885788Z	  
2025-09-16T23:46:03.885885Z	      },
2025-09-16T23:46:03.885994Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-16T23:46:03.886082Z	    }
2025-09-16T23:46:03.886229Z	  
2025-09-16T23:46:03.88634Z	Query parameters: {
2025-09-16T23:46:03.886463Z	  limit: 4,
2025-09-16T23:46:03.88659Z	  offset: 0,
2025-09-16T23:46:03.886745Z	  targetMarket: undefined,
2025-09-16T23:46:03.886849Z	  brand: '英飞凌',
2025-09-16T23:46:03.886973Z	  featured: undefined
2025-09-16T23:46:03.887093Z	}
2025-09-16T23:46:03.887214Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-16T23:46:03.887338Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.887463Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.887571Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-16T23:46:03.887741Z	Fetching products with query: 
2025-09-16T23:46:03.887853Z	    {
2025-09-16T23:46:03.887988Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.888071Z	        
2025-09-16T23:46:03.888158Z	    _id,
2025-09-16T23:46:03.888294Z	    _type,
2025-09-16T23:46:03.888371Z	    partNumber,
2025-09-16T23:46:03.888506Z	    "slug": slug.current,
2025-09-16T23:46:03.888645Z	    title,
2025-09-16T23:46:03.888811Z	    shortDescription,
2025-09-16T23:46:03.888891Z	    image,
2025-09-16T23:46:03.888951Z	    brand->{
2025-09-16T23:46:03.889069Z	      name,
2025-09-16T23:46:03.889216Z	      "slug": slug.current,
2025-09-16T23:46:03.889302Z	      logo
2025-09-16T23:46:03.889359Z	    },
2025-09-16T23:46:03.88949Z	    category->{
2025-09-16T23:46:03.88964Z	      name,
2025-09-16T23:46:03.88981Z	      "slug": slug.current
2025-09-16T23:46:03.889922Z	    },
2025-09-16T23:46:03.890074Z	    pricing{
2025-09-16T23:46:03.89015Z	      currency,
2025-09-16T23:46:03.890277Z	      tiers[]{
2025-09-16T23:46:03.890347Z	        quantity,
2025-09-16T23:46:03.89048Z	        price,
2025-09-16T23:46:03.890563Z	        unit
2025-09-16T23:46:03.890844Z	      },
2025-09-16T23:46:03.890949Z	      moq,
2025-09-16T23:46:03.891018Z	      leadTime,
2025-09-16T23:46:03.891077Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.89114Z	      "price": tiers[0].price,
2025-09-16T23:46:03.891204Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.891269Z	    },
2025-09-16T23:46:03.891331Z	    inventory{
2025-09-16T23:46:03.891399Z	      quantity,
2025-09-16T23:46:03.891477Z	      status,
2025-09-16T23:46:03.89154Z	      warehouse,
2025-09-16T23:46:03.891611Z	      lastUpdated,
2025-09-16T23:46:03.891689Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.89177Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.891831Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.891886Z	    },
2025-09-16T23:46:03.89195Z	    isActive,
2025-09-16T23:46:03.892006Z	    isFeatured,
2025-09-16T23:46:03.892064Z	    isNew,
2025-09-16T23:46:03.892119Z	    _createdAt,
2025-09-16T23:46:03.892175Z	    _updatedAt
2025-09-16T23:46:03.892238Z	  
2025-09-16T23:46:03.8923Z	      },
2025-09-16T23:46:03.892358Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-16T23:46:03.892425Z	    }
2025-09-16T23:46:03.89249Z	  
2025-09-16T23:46:03.892555Z	Query parameters: {
2025-09-16T23:46:03.892627Z	  limit: 8,
2025-09-16T23:46:03.892707Z	  offset: 0,
2025-09-16T23:46:03.892783Z	  category: undefined,
2025-09-16T23:46:03.892849Z	  brand: '英飞凌',
2025-09-16T23:46:03.892922Z	  featured: undefined
2025-09-16T23:46:03.892983Z	}
2025-09-16T23:46:03.893046Z	   Generating static pages (446/894) 
2025-09-16T23:46:03.893108Z	Fetching solutions with query: 
2025-09-16T23:46:03.893168Z	    {
2025-09-16T23:46:03.893227Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.893295Z	        
2025-09-16T23:46:03.893357Z	    _id,
2025-09-16T23:46:03.893415Z	    title,
2025-09-16T23:46:03.893478Z	    "slug": slug.current,
2025-09-16T23:46:03.89354Z	    summary,
2025-09-16T23:46:03.893597Z	    description,
2025-09-16T23:46:03.893653Z	    coverImage,
2025-09-16T23:46:03.89374Z	    primaryBrand->{
2025-09-16T23:46:03.893802Z	      _id,
2025-09-16T23:46:03.893856Z	      name,
2025-09-16T23:46:03.893911Z	      "slug": slug.current,
2025-09-16T23:46:03.893968Z	      logo
2025-09-16T23:46:03.894023Z	    },
2025-09-16T23:46:03.894084Z	    relatedBrands[]->{
2025-09-16T23:46:03.894139Z	      _id,
2025-09-16T23:46:03.894744Z	      name,
2025-09-16T23:46:03.89485Z	      "slug": slug.current,
2025-09-16T23:46:03.895098Z	      logo
2025-09-16T23:46:03.895175Z	    },
2025-09-16T23:46:03.895231Z	    targetMarket,
2025-09-16T23:46:03.895439Z	    complexity,
2025-09-16T23:46:03.895528Z	    publishedAt,
2025-09-16T23:46:03.895639Z	    isPublished,
2025-09-16T23:46:03.895957Z	    isFeatured,
2025-09-16T23:46:03.896053Z	    viewCount,
2025-09-16T23:46:03.896261Z	    _createdAt,
2025-09-16T23:46:03.89634Z	    _updatedAt
2025-09-16T23:46:03.896399Z	  
2025-09-16T23:46:03.896462Z	      },
2025-09-16T23:46:03.896523Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-16T23:46:03.896604Z	    }
2025-09-16T23:46:03.896671Z	  
2025-09-16T23:46:03.896763Z	Query parameters: {
2025-09-16T23:46:03.896824Z	  limit: 4,
2025-09-16T23:46:03.896889Z	  offset: 0,
2025-09-16T23:46:03.896947Z	  targetMarket: undefined,
2025-09-16T23:46:03.89701Z	  brand: '英飞凌',
2025-09-16T23:46:03.897074Z	  featured: undefined
2025-09-16T23:46:03.897143Z	}
2025-09-16T23:46:03.897202Z	Error fetching article data: l [SanityError]: Article not found
2025-09-16T23:46:03.897261Z	    at l (/opt/buildhome/repo/.next/server/chunks/439.js:210:70)
2025-09-16T23:46:03.897324Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-16T23:46:03.897394Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.897458Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.897521Z	    at async v (/opt/buildhome/repo/.next/server/app/[locale]/articles/[slug]/page.js:1:4853) {
2025-09-16T23:46:03.897577Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-16T23:46:03.897639Z	Fetching products with query: 
2025-09-16T23:46:03.897712Z	    {
2025-09-16T23:46:03.897776Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.897833Z	        
2025-09-16T23:46:03.897898Z	    _id,
2025-09-16T23:46:03.89796Z	    _type,
2025-09-16T23:46:03.898019Z	    partNumber,
2025-09-16T23:46:03.898075Z	    "slug": slug.current,
2025-09-16T23:46:03.89813Z	    title,
2025-09-16T23:46:03.898188Z	    shortDescription,
2025-09-16T23:46:03.898248Z	    image,
2025-09-16T23:46:03.898308Z	    brand->{
2025-09-16T23:46:03.898369Z	      name,
2025-09-16T23:46:03.898827Z	      "slug": slug.current,
2025-09-16T23:46:03.898925Z	      logo
2025-09-16T23:46:03.899205Z	    },
2025-09-16T23:46:03.899306Z	    category->{
2025-09-16T23:46:03.899372Z	      name,
2025-09-16T23:46:03.899604Z	      "slug": slug.current
2025-09-16T23:46:03.899701Z	    },
2025-09-16T23:46:03.899925Z	    pricing{
2025-09-16T23:46:03.90001Z	      currency,
2025-09-16T23:46:03.900071Z	      tiers[]{
2025-09-16T23:46:03.900198Z	        quantity,
2025-09-16T23:46:03.900293Z	        price,
2025-09-16T23:46:03.900356Z	        unit
2025-09-16T23:46:03.900413Z	      },
2025-09-16T23:46:03.900597Z	      moq,
2025-09-16T23:46:03.900697Z	      leadTime,
2025-09-16T23:46:03.900812Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.900903Z	      "price": tiers[0].price,
2025-09-16T23:46:03.900993Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.901089Z	    },
2025-09-16T23:46:03.9012Z	    inventory{
2025-09-16T23:46:03.90131Z	      quantity,
2025-09-16T23:46:03.901436Z	      status,
2025-09-16T23:46:03.901539Z	      warehouse,
2025-09-16T23:46:03.901632Z	      lastUpdated,
2025-09-16T23:46:03.901741Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.901859Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.901966Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.902066Z	    },
2025-09-16T23:46:03.902163Z	    isActive,
2025-09-16T23:46:03.902255Z	    isFeatured,
2025-09-16T23:46:03.902328Z	    isNew,
2025-09-16T23:46:03.902449Z	    _createdAt,
2025-09-16T23:46:03.902553Z	    _updatedAt
2025-09-16T23:46:03.902648Z	  
2025-09-16T23:46:03.90275Z	      },
2025-09-16T23:46:03.902847Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-16T23:46:03.902918Z	    }
2025-09-16T23:46:03.902974Z	  
2025-09-16T23:46:03.903217Z	Query parameters: {
2025-09-16T23:46:03.903304Z	  limit: 8,
2025-09-16T23:46:03.903363Z	  offset: 0,
2025-09-16T23:46:03.903581Z	  category: undefined,
2025-09-16T23:46:03.903783Z	  brand: 'epcos',
2025-09-16T23:46:03.903977Z	  featured: undefined
2025-09-16T23:46:03.904198Z	}
2025-09-16T23:46:03.904283Z	Fetching solutions with query: 
2025-09-16T23:46:03.904378Z	    {
2025-09-16T23:46:03.904502Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.904613Z	        
2025-09-16T23:46:03.904756Z	    _id,
2025-09-16T23:46:03.904845Z	    title,
2025-09-16T23:46:03.904935Z	    "slug": slug.current,
2025-09-16T23:46:03.905038Z	    summary,
2025-09-16T23:46:03.905169Z	    description,
2025-09-16T23:46:03.905268Z	    coverImage,
2025-09-16T23:46:03.905408Z	    primaryBrand->{
2025-09-16T23:46:03.905508Z	      _id,
2025-09-16T23:46:03.905603Z	      name,
2025-09-16T23:46:03.905723Z	      "slug": slug.current,
2025-09-16T23:46:03.905824Z	      logo
2025-09-16T23:46:03.905924Z	    },
2025-09-16T23:46:03.906017Z	    relatedBrands[]->{
2025-09-16T23:46:03.906106Z	      _id,
2025-09-16T23:46:03.906195Z	      name,
2025-09-16T23:46:03.90629Z	      "slug": slug.current,
2025-09-16T23:46:03.906383Z	      logo
2025-09-16T23:46:03.906489Z	    },
2025-09-16T23:46:03.906568Z	    targetMarket,
2025-09-16T23:46:03.906632Z	    complexity,
2025-09-16T23:46:03.906815Z	    publishedAt,
2025-09-16T23:46:03.906942Z	    isPublished,
2025-09-16T23:46:03.907105Z	    isFeatured,
2025-09-16T23:46:03.907205Z	    viewCount,
2025-09-16T23:46:03.907265Z	    _createdAt,
2025-09-16T23:46:03.90742Z	    _updatedAt
2025-09-16T23:46:03.90755Z	  
2025-09-16T23:46:03.907684Z	      },
2025-09-16T23:46:03.907784Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-16T23:46:03.9079Z	    }
2025-09-16T23:46:03.908046Z	  
2025-09-16T23:46:03.908127Z	Query parameters: {
2025-09-16T23:46:03.908201Z	  limit: 4,
2025-09-16T23:46:03.908305Z	  offset: 0,
2025-09-16T23:46:03.908411Z	  targetMarket: undefined,
2025-09-16T23:46:03.908511Z	  brand: 'epcos',
2025-09-16T23:46:03.908608Z	  featured: undefined
2025-09-16T23:46:03.908802Z	}
2025-09-16T23:46:03.908971Z	✅ [getBrandData] Found brand: Epcos
2025-09-16T23:46:03.909133Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.909263Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.909409Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-16T23:46:03.90955Z	Fetching products with query: 
2025-09-16T23:46:03.909649Z	    {
2025-09-16T23:46:03.909757Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.909908Z	        
2025-09-16T23:46:03.910029Z	    _id,
2025-09-16T23:46:03.910177Z	    _type,
2025-09-16T23:46:03.910334Z	    partNumber,
2025-09-16T23:46:03.910515Z	    "slug": slug.current,
2025-09-16T23:46:03.910625Z	    title,
2025-09-16T23:46:03.910789Z	    shortDescription,
2025-09-16T23:46:03.910887Z	    image,
2025-09-16T23:46:03.910986Z	    brand->{
2025-09-16T23:46:03.911159Z	      name,
2025-09-16T23:46:03.911236Z	      "slug": slug.current,
2025-09-16T23:46:03.911321Z	      logo
2025-09-16T23:46:03.911467Z	    },
2025-09-16T23:46:03.911544Z	    category->{
2025-09-16T23:46:03.911601Z	      name,
2025-09-16T23:46:03.911749Z	      "slug": slug.current
2025-09-16T23:46:03.912083Z	    },
2025-09-16T23:46:03.912239Z	    pricing{
2025-09-16T23:46:03.912348Z	      currency,
2025-09-16T23:46:03.912682Z	      tiers[]{
2025-09-16T23:46:03.9129Z	        quantity,
2025-09-16T23:46:03.913008Z	        price,
2025-09-16T23:46:03.913305Z	        unit
2025-09-16T23:46:03.913515Z	      },
2025-09-16T23:46:03.913624Z	      moq,
2025-09-16T23:46:03.913888Z	      leadTime,
2025-09-16T23:46:03.913988Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.914293Z	      "price": tiers[0].price,
2025-09-16T23:46:03.914502Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.914599Z	    },
2025-09-16T23:46:03.914842Z	    inventory{
2025-09-16T23:46:03.914931Z	      quantity,
2025-09-16T23:46:03.915003Z	      status,
2025-09-16T23:46:03.915063Z	      warehouse,
2025-09-16T23:46:03.915119Z	      lastUpdated,
2025-09-16T23:46:03.915185Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.91526Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.915322Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.915394Z	    },
2025-09-16T23:46:03.915449Z	    isActive,
2025-09-16T23:46:03.915506Z	    isFeatured,
2025-09-16T23:46:03.915573Z	    isNew,
2025-09-16T23:46:03.915638Z	    _createdAt,
2025-09-16T23:46:03.915768Z	    _updatedAt
2025-09-16T23:46:03.916096Z	  
2025-09-16T23:46:03.916293Z	      },
2025-09-16T23:46:03.916719Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-16T23:46:03.917028Z	    }
2025-09-16T23:46:03.917119Z	  
2025-09-16T23:46:03.917197Z	Query parameters: {
2025-09-16T23:46:03.917282Z	  limit: 8,
2025-09-16T23:46:03.917344Z	  offset: 0,
2025-09-16T23:46:03.917435Z	  category: undefined,
2025-09-16T23:46:03.917575Z	  brand: 'epcos',
2025-09-16T23:46:03.917654Z	  featured: undefined
2025-09-16T23:46:03.917765Z	}
2025-09-16T23:46:03.917957Z	Fetching solutions with query:   code: 'ARTICLE_NOT_FOUND'
2025-09-16T23:46:03.91803Z	}
2025-09-16T23:46:03.918151Z	Error fetching article data: l [SanityError]: Article not found
2025-09-16T23:46:03.918247Z	    at l (/opt/buildhome/repo/.next/server/chunks/439.js:210:70)
2025-09-16T23:46:03.918348Z	    at async v (/opt/buildhome/repo/.next/server/app/[locale]/articles/[slug]/page.js:1:4853) {
2025-09-16T23:46:03.918477Z	  code: 'ARTICLE_NOT_FOUND'
2025-09-16T23:46:03.918576Z	}
2025-09-16T23:46:03.918666Z	
2025-09-16T23:46:03.918812Z	    {
2025-09-16T23:46:03.918899Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.919048Z	        
2025-09-16T23:46:03.919141Z	    _id,
2025-09-16T23:46:03.919201Z	    title,
2025-09-16T23:46:03.919348Z	    "slug": slug.current,
2025-09-16T23:46:03.919431Z	    summary,
2025-09-16T23:46:03.919569Z	    description,
2025-09-16T23:46:03.919645Z	    coverImage,
2025-09-16T23:46:03.919779Z	    primaryBrand->{
2025-09-16T23:46:03.919855Z	      _id,
2025-09-16T23:46:03.919971Z	      name,
2025-09-16T23:46:03.920081Z	      "slug": slug.current,
2025-09-16T23:46:03.920185Z	      logo
2025-09-16T23:46:03.920288Z	    },
2025-09-16T23:46:03.920436Z	    relatedBrands[]->{
2025-09-16T23:46:03.920575Z	      _id,
2025-09-16T23:46:03.920723Z	      name,
2025-09-16T23:46:03.920819Z	      "slug": slug.current,
2025-09-16T23:46:03.920943Z	      logo
2025-09-16T23:46:03.921044Z	    },
2025-09-16T23:46:03.921188Z	    targetMarket,
2025-09-16T23:46:03.921272Z	    complexity,
2025-09-16T23:46:03.921332Z	    publishedAt,
2025-09-16T23:46:03.921541Z	    isPublished,
2025-09-16T23:46:03.921642Z	    isFeatured,
2025-09-16T23:46:03.921798Z	    viewCount,
2025-09-16T23:46:03.921889Z	    _createdAt,
2025-09-16T23:46:03.921949Z	    _updatedAt
2025-09-16T23:46:03.92204Z	  
2025-09-16T23:46:03.922141Z	      },
2025-09-16T23:46:03.92221Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-16T23:46:03.92237Z	    }
2025-09-16T23:46:03.922486Z	  
2025-09-16T23:46:03.922577Z	Query parameters: {
2025-09-16T23:46:03.922743Z	  limit: 4,
2025-09-16T23:46:03.922823Z	  offset: 0,
2025-09-16T23:46:03.922972Z	  targetMarket: undefined,
2025-09-16T23:46:03.923044Z	  brand: 'epcos',
2025-09-16T23:46:03.923151Z	  featured: undefined
2025-09-16T23:46:03.923238Z	}
2025-09-16T23:46:03.923338Z	✅ [getBrandData] Found brand: Epcos
2025-09-16T23:46:03.923451Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.923528Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.923639Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-16T23:46:03.923782Z	Fetching products with query: 
2025-09-16T23:46:03.923903Z	    {
2025-09-16T23:46:03.924096Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.924205Z	        
2025-09-16T23:46:03.924278Z	    _id,
2025-09-16T23:46:03.924342Z	    _type,
2025-09-16T23:46:03.924409Z	    partNumber,
2025-09-16T23:46:03.92447Z	    "slug": slug.current,
2025-09-16T23:46:03.924529Z	    title,
2025-09-16T23:46:03.924585Z	    shortDescription,
2025-09-16T23:46:03.924703Z	    image,
2025-09-16T23:46:03.924785Z	    brand->{
2025-09-16T23:46:03.924849Z	      name,
2025-09-16T23:46:03.924906Z	      "slug": slug.current,
2025-09-16T23:46:03.924962Z	      logo
2025-09-16T23:46:03.925019Z	    },
2025-09-16T23:46:03.925081Z	    category->{
2025-09-16T23:46:03.925137Z	      name,
2025-09-16T23:46:03.925195Z	      "slug": slug.current
2025-09-16T23:46:03.925251Z	    },
2025-09-16T23:46:03.925306Z	    pricing{
2025-09-16T23:46:03.92537Z	      currency,
2025-09-16T23:46:03.925431Z	      tiers[]{
2025-09-16T23:46:03.925494Z	        quantity,
2025-09-16T23:46:03.925553Z	        price,
2025-09-16T23:46:03.925615Z	        unit
2025-09-16T23:46:03.925699Z	      },
2025-09-16T23:46:03.925775Z	      moq,
2025-09-16T23:46:03.925835Z	      leadTime,
2025-09-16T23:46:03.925893Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.92596Z	      "price": tiers[0].price,
2025-09-16T23:46:03.92603Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.926098Z	    },
2025-09-16T23:46:03.926152Z	    inventory{
2025-09-16T23:46:03.926208Z	      quantity,
2025-09-16T23:46:03.926264Z	      status,
2025-09-16T23:46:03.926335Z	      warehouse,
2025-09-16T23:46:03.926394Z	      lastUpdated,
2025-09-16T23:46:03.926454Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.926534Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.926599Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.926655Z	    },
2025-09-16T23:46:03.926731Z	    isActive,
2025-09-16T23:46:03.926789Z	    isFeatured,
2025-09-16T23:46:03.927416Z	    isNew,
2025-09-16T23:46:03.927512Z	    _createdAt,
2025-09-16T23:46:03.927574Z	    _updatedAt
2025-09-16T23:46:03.927846Z	  
2025-09-16T23:46:03.927931Z	      },
2025-09-16T23:46:03.92799Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-16T23:46:03.928259Z	    }
2025-09-16T23:46:03.928359Z	  
2025-09-16T23:46:03.928537Z	Query parameters: {
2025-09-16T23:46:03.928643Z	  limit: 8,
2025-09-16T23:46:03.928906Z	  offset: 0,
2025-09-16T23:46:03.928981Z	  category: undefined,
2025-09-16T23:46:03.929038Z	  brand: 'semikron',
2025-09-16T23:46:03.929279Z	  featured: undefined
2025-09-16T23:46:03.929361Z	}
2025-09-16T23:46:03.929422Z	Fetching solutions with query: 
2025-09-16T23:46:03.929666Z	    {
2025-09-16T23:46:03.929779Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.929879Z	        
2025-09-16T23:46:03.929957Z	    _id,
2025-09-16T23:46:03.930016Z	    title,
2025-09-16T23:46:03.930153Z	    "slug": slug.current,
2025-09-16T23:46:03.930223Z	    summary,
2025-09-16T23:46:03.930335Z	    description,
2025-09-16T23:46:03.930547Z	    coverImage,
2025-09-16T23:46:03.930651Z	    primaryBrand->{
2025-09-16T23:46:03.930842Z	      _id,
2025-09-16T23:46:03.930927Z	      name,
2025-09-16T23:46:03.931062Z	      "slug": slug.current,
2025-09-16T23:46:03.931136Z	      logo
2025-09-16T23:46:03.931225Z	    },
2025-09-16T23:46:03.93136Z	    relatedBrands[]->{
2025-09-16T23:46:03.931452Z	      _id,
2025-09-16T23:46:03.931587Z	      name,
2025-09-16T23:46:03.931731Z	      "slug": slug.current,
2025-09-16T23:46:03.931872Z	      logo
2025-09-16T23:46:03.931942Z	    },
2025-09-16T23:46:03.932Z	    targetMarket,
2025-09-16T23:46:03.932062Z	    complexity,
2025-09-16T23:46:03.932156Z	    publishedAt,
2025-09-16T23:46:03.932269Z	    isPublished,
2025-09-16T23:46:03.932388Z	    isFeatured,
2025-09-16T23:46:03.932491Z	    viewCount,
2025-09-16T23:46:03.932566Z	    _createdAt,
2025-09-16T23:46:03.932658Z	    _updatedAt
2025-09-16T23:46:03.932785Z	  
2025-09-16T23:46:03.932883Z	      },
2025-09-16T23:46:03.932974Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-16T23:46:03.933065Z	    }
2025-09-16T23:46:03.93316Z	  
2025-09-16T23:46:03.933318Z	Query parameters: {
2025-09-16T23:46:03.933395Z	  limit: 4,
2025-09-16T23:46:03.933502Z	  offset: 0,
2025-09-16T23:46:03.933564Z	  targetMarket: undefined,
2025-09-16T23:46:03.933731Z	  brand: 'semikron',
2025-09-16T23:46:03.933868Z	  featured: undefined
2025-09-16T23:46:03.933955Z	}
2025-09-16T23:46:03.934014Z	✅ [getBrandData] Found brand: Semikron
2025-09-16T23:46:03.93433Z	Products fetch result: {
2025-09-16T23:46:03.934433Z	  totalProducts: 1,
2025-09-16T23:46:03.934579Z	  fetchedProducts: 1,
2025-09-16T23:46:03.934727Z	  firstProduct: {
2025-09-16T23:46:03.93482Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-16T23:46:03.934974Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-16T23:46:03.935119Z	    _type: 'product',
2025-09-16T23:46:03.935252Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-16T23:46:03.935365Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-16T23:46:03.935516Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:03.935601Z	    image: null,
2025-09-16T23:46:03.935759Z	    inventory: {
2025-09-16T23:46:03.935893Z	      inStock: true,
2025-09-16T23:46:03.936046Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-16T23:46:03.936159Z	      quantity: 0,
2025-09-16T23:46:03.936266Z	      status: 'in_stock',
2025-09-16T23:46:03.93639Z	      warehouse: null
2025-09-16T23:46:03.936559Z	    },
2025-09-16T23:46:03.936641Z	    isActive: true,
2025-09-16T23:46:03.93677Z	    isFeatured: false,
2025-09-16T23:46:03.936917Z	    isNew: false,
2025-09-16T23:46:03.937047Z	    partNumber: 'SKKT106/16E',
2025-09-16T23:46:03.937179Z	    pricing: {
2025-09-16T23:46:03.937276Z	      currency: 'CNY',
2025-09-16T23:46:03.937359Z	      leadTime: null,
2025-09-16T23:46:03.937467Z	      moq: null,
2025-09-16T23:46:03.937616Z	      price: null,
2025-09-16T23:46:03.93777Z	      tiers: null
2025-09-16T23:46:03.937899Z	    },
2025-09-16T23:46:03.937972Z	    shortDescription: 'SKKT106/16E',
2025-09-16T23:46:03.938077Z	    slug: 'SKKT106/16E',
2025-09-16T23:46:03.93815Z	    title: 'SKKT106/16E'
2025-09-16T23:46:03.93826Z	  }
2025-09-16T23:46:03.938376Z	}
2025-09-16T23:46:03.938488Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.938697Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-16T23:46:03.93882Z	Fetching products with query: 
2025-09-16T23:46:03.938892Z	    {
2025-09-16T23:46:03.938962Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.939029Z	        
2025-09-16T23:46:03.939093Z	    _id,
2025-09-16T23:46:03.939155Z	    _type,
2025-09-16T23:46:03.939242Z	    partNumber,
2025-09-16T23:46:03.939316Z	    "slug": slug.current,
2025-09-16T23:46:03.939378Z	    title,
2025-09-16T23:46:03.939441Z	    shortDescription,
2025-09-16T23:46:03.939502Z	    image,
2025-09-16T23:46:03.939558Z	    brand->{
2025-09-16T23:46:03.939613Z	      name,
2025-09-16T23:46:03.93967Z	      "slug": slug.current,
2025-09-16T23:46:03.939765Z	      logo
2025-09-16T23:46:03.939828Z	    },
2025-09-16T23:46:03.93989Z	    category->{
2025-09-16T23:46:03.939951Z	      name,
2025-09-16T23:46:03.940007Z	      "slug": slug.current
2025-09-16T23:46:03.940062Z	    },
2025-09-16T23:46:03.940125Z	    pricing{
2025-09-16T23:46:03.940179Z	      currency,
2025-09-16T23:46:03.940232Z	      tiers[]{
2025-09-16T23:46:03.940287Z	        quantity,
2025-09-16T23:46:03.940349Z	        price,
2025-09-16T23:46:03.940415Z	        unit
2025-09-16T23:46:03.940473Z	      },
2025-09-16T23:46:03.940529Z	      moq,
2025-09-16T23:46:03.940584Z	      leadTime,
2025-09-16T23:46:03.94064Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.940728Z	      "price": tiers[0].price,
2025-09-16T23:46:03.940787Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.940857Z	    },
2025-09-16T23:46:03.940916Z	    inventory{
2025-09-16T23:46:03.940975Z	      quantity,
2025-09-16T23:46:03.941036Z	      status,
2025-09-16T23:46:03.941094Z	      warehouse,
2025-09-16T23:46:03.941156Z	      lastUpdated,
2025-09-16T23:46:03.941218Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.941282Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.941345Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.941408Z	    },
2025-09-16T23:46:03.94147Z	    isActive,
2025-09-16T23:46:03.941527Z	    isFeatured,
2025-09-16T23:46:03.941592Z	    isNew,
2025-09-16T23:46:03.941658Z	    _createdAt,
2025-09-16T23:46:03.94173Z	    _updatedAt
2025-09-16T23:46:03.941793Z	  
2025-09-16T23:46:03.941849Z	      },
2025-09-16T23:46:03.94191Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-16T23:46:03.941975Z	    }
2025-09-16T23:46:03.942029Z	  
2025-09-16T23:46:03.942626Z	Query parameters: {
2025-09-16T23:46:03.942748Z	  limit: 8,
2025-09-16T23:46:03.942995Z	  offset: 0,
2025-09-16T23:46:03.943077Z	  category: undefined,
2025-09-16T23:46:03.943369Z	  brand: 'semikron',
2025-09-16T23:46:03.943467Z	  featured: undefined
2025-09-16T23:46:03.94353Z	}
2025-09-16T23:46:03.94383Z	Fetching solutions with query: 
2025-09-16T23:46:03.943913Z	    {
2025-09-16T23:46:03.943978Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.944235Z	        
2025-09-16T23:46:03.944301Z	    _id,
2025-09-16T23:46:03.944549Z	    title,
2025-09-16T23:46:03.94463Z	    "slug": slug.current,
2025-09-16T23:46:03.944713Z	    summary,
2025-09-16T23:46:03.944978Z	    description,
2025-09-16T23:46:03.945066Z	    coverImage,
2025-09-16T23:46:03.945195Z	    primaryBrand->{
2025-09-16T23:46:03.945315Z	      _id,
2025-09-16T23:46:03.945406Z	      name,
2025-09-16T23:46:03.94559Z	      "slug": slug.current,
2025-09-16T23:46:03.945671Z	      logo
2025-09-16T23:46:03.945796Z	    },
2025-09-16T23:46:03.946139Z	    relatedBrands[]->{
2025-09-16T23:46:03.946284Z	      _id,
2025-09-16T23:46:03.946394Z	      name,
2025-09-16T23:46:03.946505Z	      "slug": slug.current,
2025-09-16T23:46:03.946658Z	      logo
2025-09-16T23:46:03.946786Z	    },
2025-09-16T23:46:03.946859Z	    targetMarket,
2025-09-16T23:46:03.946918Z	    complexity,
2025-09-16T23:46:03.946985Z	    publishedAt,
2025-09-16T23:46:03.947239Z	    isPublished,
2025-09-16T23:46:03.947316Z	    isFeatured,
2025-09-16T23:46:03.947411Z	    viewCount,
2025-09-16T23:46:03.947479Z	    _createdAt,
2025-09-16T23:46:03.947537Z	    _updatedAt
2025-09-16T23:46:03.947614Z	  
2025-09-16T23:46:03.947873Z	      },
2025-09-16T23:46:03.948003Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-16T23:46:03.948139Z	    }
2025-09-16T23:46:03.948211Z	  
2025-09-16T23:46:03.948439Z	Query parameters: {
2025-09-16T23:46:03.948606Z	  limit: 4,
2025-09-16T23:46:03.948713Z	  offset: 0,
2025-09-16T23:46:03.948778Z	  targetMarket: undefined,
2025-09-16T23:46:03.948845Z	  brand: 'semikron',
2025-09-16T23:46:03.948916Z	  featured: undefined
2025-09-16T23:46:03.948984Z	}
2025-09-16T23:46:03.949043Z	✅ [getBrandData] Found brand: Semikron
2025-09-16T23:46:03.949103Z	Products fetch result: {
2025-09-16T23:46:03.949166Z	  totalProducts: 1,
2025-09-16T23:46:03.949226Z	  fetchedProducts: 1,
2025-09-16T23:46:03.949284Z	  firstProduct: {
2025-09-16T23:46:03.949344Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-16T23:46:03.949406Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-16T23:46:03.949472Z	    _type: 'product',
2025-09-16T23:46:03.949527Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-16T23:46:03.94958Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-16T23:46:03.949636Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:03.949718Z	    image: null,
2025-09-16T23:46:03.949778Z	    inventory: {
2025-09-16T23:46:03.949839Z	      inStock: true,
2025-09-16T23:46:03.949899Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-16T23:46:03.949959Z	      quantity: 0,
2025-09-16T23:46:03.950018Z	      status: 'in_stock',
2025-09-16T23:46:03.95017Z	      warehouse: null
2025-09-16T23:46:03.950288Z	    },
2025-09-16T23:46:03.950353Z	    isActive: true,
2025-09-16T23:46:03.950418Z	    isFeatured: false,
2025-09-16T23:46:03.95059Z	    isNew: false,
2025-09-16T23:46:03.950665Z	    partNumber: 'SKKT106/16E',
2025-09-16T23:46:03.950819Z	    pricing: {
2025-09-16T23:46:03.950889Z	      currency: 'CNY',
2025-09-16T23:46:03.950946Z	      leadTime: null,
2025-09-16T23:46:03.951074Z	      moq: null,
2025-09-16T23:46:03.951212Z	      price: null,
2025-09-16T23:46:03.951384Z	      tiers: null
2025-09-16T23:46:03.951477Z	    },
2025-09-16T23:46:03.951539Z	    shortDescription: 'SKKT106/16E',
2025-09-16T23:46:03.951595Z	    slug: 'SKKT106/16E',
2025-09-16T23:46:03.951661Z	    title: 'SKKT106/16E'
2025-09-16T23:46:03.95174Z	  }
2025-09-16T23:46:03.951796Z	}
2025-09-16T23:46:03.951852Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.95192Z	Fetching solutions with query: 
2025-09-16T23:46:03.951976Z	    {
2025-09-16T23:46:03.952046Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPubError fetching article data: l [SanityError]: Article not found
2025-09-16T23:46:03.952105Z	    at l (/opt/buildhome/repo/.next/server/chunks/439.js:210:70)
2025-09-16T23:46:03.952163Z	    at async v (/opt/buildhome/repo/.next/server/app/[locale]/articles/[slug]/page.js:1:4853) {
2025-09-16T23:46:03.952219Z	  code: 'ARTICLE_NOT_FOUND'
2025-09-16T23:46:03.952277Z	}
2025-09-16T23:46:03.952338Z	Error fetching article data: l [SanityError]: Article not found
2025-09-16T23:46:03.952417Z	    at l (/opt/buildhome/repo/.next/server/chunks/439.js:210:70)
2025-09-16T23:46:03.95248Z	    at async v (/opt/buildhome/repo/.next/server/app/[locale]/articles/[slug]/page.js:1:4853) {
2025-09-16T23:46:03.952537Z	  code: 'ARTICLE_NOT_FOUND'
2025-09-16T23:46:03.952593Z	}
2025-09-16T23:46:03.952649Z	lished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.952724Z	        
2025-09-16T23:46:03.952791Z	    _id,
2025-09-16T23:46:03.952853Z	    title,
2025-09-16T23:46:03.952912Z	    "slug": slug.current,
2025-09-16T23:46:03.952967Z	    summary,
2025-09-16T23:46:03.953027Z	    description,
2025-09-16T23:46:03.953084Z	    coverImage,
2025-09-16T23:46:03.95314Z	    primaryBrand->{
2025-09-16T23:46:03.953206Z	      _id,
2025-09-16T23:46:03.953265Z	      name,
2025-09-16T23:46:03.953321Z	      "slug": slug.current,
2025-09-16T23:46:03.953379Z	      logo
2025-09-16T23:46:03.953442Z	    },
2025-09-16T23:46:03.953662Z	    relatedBrands[]->{
2025-09-16T23:46:03.953805Z	      _id,
2025-09-16T23:46:03.953991Z	      name,
2025-09-16T23:46:03.954143Z	      "slug": slug.current,
2025-09-16T23:46:03.954245Z	      logo
2025-09-16T23:46:03.954355Z	    },
2025-09-16T23:46:03.954489Z	    targetMarket,
2025-09-16T23:46:03.954703Z	    complexity,
2025-09-16T23:46:03.954799Z	    publishedAt,
2025-09-16T23:46:03.954971Z	    isPublished,
2025-09-16T23:46:03.955051Z	    isFeatured,
2025-09-16T23:46:03.955172Z	    viewCount,
2025-09-16T23:46:03.955265Z	    _createdAt,
2025-09-16T23:46:03.955394Z	    _updatedAt
2025-09-16T23:46:03.955484Z	  
2025-09-16T23:46:03.955612Z	      },
2025-09-16T23:46:03.95573Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-16T23:46:03.955864Z	    }
2025-09-16T23:46:03.955978Z	  
2025-09-16T23:46:03.956078Z	Query parameters: {
2025-09-16T23:46:03.956219Z	  limit: 4,
2025-09-16T23:46:03.956344Z	  offset: 0,
2025-09-16T23:46:03.956485Z	  targetMarket: undefined,
2025-09-16T23:46:03.956616Z	  brand: 'ixys',
2025-09-16T23:46:03.956793Z	  featured: undefined
2025-09-16T23:46:03.956946Z	}
2025-09-16T23:46:03.957071Z	✅ [getBrandData] Found brand: IXYS
2025-09-16T23:46:03.957206Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.957311Z	Solutions fetch result: {
2025-09-16T23:46:03.95741Z	  totalSolutions: 1,
2025-09-16T23:46:03.957537Z	  fetchedSolutions: 1,
2025-09-16T23:46:03.957657Z	  firstSolution: {
2025-09-16T23:46:03.957814Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-16T23:46:03.957937Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-16T23:46:03.958022Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-16T23:46:03.958111Z	    complexity: 'medium',
2025-09-16T23:46:03.958221Z	    coverImage: null,
2025-09-16T23:46:03.958346Z	    description: [ [Object] ],
2025-09-16T23:46:03.95849Z	    isFeatured: false,
2025-09-16T23:46:03.958626Z	    isPublished: true,
2025-09-16T23:46:03.95878Z	    primaryBrand: {
2025-09-16T23:46:03.958908Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:46:03.959069Z	      logo: null,
2025-09-16T23:46:03.959193Z	      name: 'IXYS',
2025-09-16T23:46:03.959312Z	      slug: 'ixys'
2025-09-16T23:46:03.959495Z	    },
2025-09-16T23:46:03.959704Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-16T23:46:03.95979Z	    relatedBrands: null,
2025-09-16T23:46:03.959923Z	    slug: '99999',
2025-09-16T23:46:03.960013Z	    summary: '99999',
2025-09-16T23:46:03.960104Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:03.960231Z	    title: '99999',
2025-09-16T23:46:03.960381Z	    viewCount: 0
2025-09-16T23:46:03.960473Z	  }
2025-09-16T23:46:03.960594Z	}
2025-09-16T23:46:03.960746Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-16T23:46:03.960912Z	Fetching products with query: 
2025-09-16T23:46:03.961075Z	    {
2025-09-16T23:46:03.961159Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.961292Z	        
2025-09-16T23:46:03.961384Z	    _id,
2025-09-16T23:46:03.961538Z	    _type,
2025-09-16T23:46:03.961699Z	    partNumber,
2025-09-16T23:46:03.961844Z	    "slug": slug.current,
2025-09-16T23:46:03.961982Z	    title,
2025-09-16T23:46:03.962067Z	    shortDescription,
2025-09-16T23:46:03.962186Z	    image,
2025-09-16T23:46:03.962258Z	    brand->{
2025-09-16T23:46:03.962395Z	      name,
2025-09-16T23:46:03.962481Z	      "slug": slug.current,
2025-09-16T23:46:03.962636Z	      logo
2025-09-16T23:46:03.962805Z	    },
2025-09-16T23:46:03.962949Z	    category->{
2025-09-16T23:46:03.963098Z	      name,
2025-09-16T23:46:03.963245Z	      "slug": slug.current
2025-09-16T23:46:03.963422Z	    },
2025-09-16T23:46:03.963579Z	    pricing{
2025-09-16T23:46:03.963659Z	      currency,
2025-09-16T23:46:03.963804Z	      tiers[]{
2025-09-16T23:46:03.963943Z	        quantity,
2025-09-16T23:46:03.964081Z	        price,
2025-09-16T23:46:03.964253Z	        unit
2025-09-16T23:46:03.964393Z	      },
2025-09-16T23:46:03.964487Z	      moq,
2025-09-16T23:46:03.964611Z	      leadTime,
2025-09-16T23:46:03.964761Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.964845Z	      "price": tiers[0].price,
2025-09-16T23:46:03.964946Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.965114Z	    },
2025-09-16T23:46:03.965227Z	    inventory{
2025-09-16T23:46:03.965396Z	      quantity,
2025-09-16T23:46:03.965486Z	      status,
2025-09-16T23:46:03.965602Z	      warehouse,
2025-09-16T23:46:03.965765Z	      lastUpdated,
2025-09-16T23:46:03.965888Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.965989Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.966144Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.966328Z	    },
2025-09-16T23:46:03.966461Z	    isActive,
2025-09-16T23:46:03.966572Z	    isFeatured,
2025-09-16T23:46:03.966743Z	    isNew,
2025-09-16T23:46:03.966863Z	    _createdAt,
2025-09-16T23:46:03.967134Z	    _updatedAt
2025-09-16T23:46:03.967295Z	  
2025-09-16T23:46:03.967444Z	      },
2025-09-16T23:46:03.967586Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-16T23:46:03.967769Z	    }
2025-09-16T23:46:03.967887Z	  
2025-09-16T23:46:03.967993Z	Query parameters: {
2025-09-16T23:46:03.968105Z	  limit: 8,
2025-09-16T23:46:03.96821Z	  offset: 0,
2025-09-16T23:46:03.968325Z	  category: undefined,
2025-09-16T23:46:03.968435Z	  brand: 'ixys',
2025-09-16T23:46:03.96853Z	  featured: undefined
2025-09-16T23:46:03.968644Z	}
2025-09-16T23:46:03.968764Z	Fetching solutions with query: 
2025-09-16T23:46:03.968865Z	    {
2025-09-16T23:46:03.968958Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.969078Z	        
2025-09-16T23:46:03.969219Z	    _id,
2025-09-16T23:46:03.969317Z	    title,
2025-09-16T23:46:03.969525Z	    "slug": slug.current,
2025-09-16T23:46:03.969716Z	    summary,
2025-09-16T23:46:03.969828Z	    description,
2025-09-16T23:46:03.969952Z	    coverImage,
2025-09-16T23:46:03.970076Z	    primaryBrand->{
2025-09-16T23:46:03.970178Z	      _id,
2025-09-16T23:46:03.970261Z	      name,
2025-09-16T23:46:03.97041Z	      "slug": slug.current,
2025-09-16T23:46:03.97051Z	      logo
2025-09-16T23:46:03.970616Z	    },
2025-09-16T23:46:03.970735Z	    relatedBrands[]->{
2025-09-16T23:46:03.970836Z	      _id,
2025-09-16T23:46:03.97093Z	      name,
2025-09-16T23:46:03.971026Z	      "slug": slug.current,
2025-09-16T23:46:03.971138Z	      logo
2025-09-16T23:46:03.971259Z	    },
2025-09-16T23:46:03.971377Z	    targetMarket,
2025-09-16T23:46:03.971479Z	    complexity,
2025-09-16T23:46:03.971574Z	    publishedAt,
2025-09-16T23:46:03.971681Z	    isPublished,
2025-09-16T23:46:03.97179Z	    isFeatured,
2025-09-16T23:46:03.971896Z	    viewCount,
2025-09-16T23:46:03.972204Z	    _createdAt,
2025-09-16T23:46:03.972286Z	    _updatedAt
2025-09-16T23:46:03.972592Z	  
2025-09-16T23:46:03.9727Z	      },
2025-09-16T23:46:03.973029Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-16T23:46:03.973125Z	    }
2025-09-16T23:46:03.973227Z	  
2025-09-16T23:46:03.973412Z	Query parameters: {
2025-09-16T23:46:03.973485Z	  limit: 4,
2025-09-16T23:46:03.973544Z	  offset: 0,
2025-09-16T23:46:03.973628Z	  targetMarket: undefined,
2025-09-16T23:46:03.973778Z	  brand: 'ixys',
2025-09-16T23:46:03.974043Z	  featured: undefined
2025-09-16T23:46:03.974118Z	}
2025-09-16T23:46:03.974176Z	✅ [getBrandData] Found brand: IXYS
2025-09-16T23:46:03.974236Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.97437Z	Solutions fetch result: {
2025-09-16T23:46:03.974501Z	  totalSolutions: 1,
2025-09-16T23:46:03.974626Z	  fetchedSolutions: 1,
2025-09-16T23:46:03.97475Z	  firstSolution: {
2025-09-16T23:46:03.974856Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-16T23:46:03.974975Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-16T23:46:03.975084Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-16T23:46:03.975204Z	    complexity: 'medium',
2025-09-16T23:46:03.975306Z	    coverImage: null,
2025-09-16T23:46:03.97542Z	    description: [ [Object] ],
2025-09-16T23:46:03.975516Z	    isFeatured: false,
2025-09-16T23:46:03.975608Z	    isPublished: true,
2025-09-16T23:46:03.975725Z	    primaryBrand: {
2025-09-16T23:46:03.975815Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:46:03.975946Z	      logo: null,
2025-09-16T23:46:03.976052Z	      name: 'IXYS',
2025-09-16T23:46:03.976152Z	      slug: 'ixys'
2025-09-16T23:46:03.976246Z	    },
2025-09-16T23:46:03.976314Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-16T23:46:03.976381Z	    relatedBrands: null,
2025-09-16T23:46:03.976697Z	    slug: '99999',
2025-09-16T23:46:03.976796Z	    summary: '99999',
2025-09-16T23:46:03.97705Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:03.977125Z	    title: '99999',
2025-09-16T23:46:03.977183Z	    viewCount: 0
2025-09-16T23:46:03.977437Z	  }
2025-09-16T23:46:03.977515Z	}
2025-09-16T23:46:03.977572Z	Error fetching article data: l [SanityError]: Article not found
2025-09-16T23:46:03.977682Z	    at l (/opt/buildhome/repo/.next/server/chunks/439.js:210:70)
2025-09-16T23:46:03.977787Z	    at async v (/opt/buildhome/repo/.next/server/app/[locale]/articles/[slug]/page.js:1:4853) {
2025-09-16T23:46:03.978047Z	  code: 'ARTICLE_NOT_FOUND'
2025-09-16T23:46:03.978127Z	}
2025-09-16T23:46:03.978189Z	Error fetching article data: l [SanityError]: Article not found
2025-09-16T23:46:03.978406Z	    at l (/opt/buildhome/repo/.next/server/chunks/439.js:210:70)
2025-09-16T23:46:03.978483Z	    at async v (/opt/buildhome/repo/.next/server/app/[locale]/articles/[slug]/page.js:1:4853) {
2025-09-16T23:46:03.978543Z	  code: 'ARTICLE_NOT_FOUND'
2025-09-16T23:46:03.978829Z	}
2025-09-16T23:46:03.978909Z	Error fetching article data: l [SanityError]: Article not found
2025-09-16T23:46:03.979141Z	    at l (/opt/buildhome/repo/.next/server/chunks/439.js:210:70)
2025-09-16T23:46:03.979227Z	    at runNextTicks (node:internal/process/task_queues:60:5)
2025-09-16T23:46:03.979306Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:46:03.979542Z	    at process.processTimers (node:internal/timers:512:7)
2025-09-16T23:46:03.979646Z	    at async v (/opt/buildhome/repo/.next/server/app/[locale]/articles/[slug]/page.js:1:4853) {
2025-09-16T23:46:03.979785Z	  code: 'ARTICLE_NOT_FOUND'
2025-09-16T23:46:03.979882Z	}
2025-09-16T23:46:03.979976Z	Error fetching article data: l [SanityError]: Article not found
2025-09-16T23:46:03.98008Z	    at l (/opt/buildhome/repo/.next/server/chunks/439.js:210:70)
2025-09-16T23:46:03.980176Z	    at async v (/opt/buildhome/repo/.next/server/app/[locale]/articles/[slug]/page.js:1:4853) {
2025-09-16T23:46:03.980268Z	  code: 'ARTICLE_NOT_FOUND'
2025-09-16T23:46:03.980379Z	}
2025-09-16T23:46:03.980491Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:46:03.980601Z	Fetching products with query: 
2025-09-16T23:46:03.98089Z	    {
2025-09-16T23:46:03.980979Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.981229Z	        
2025-09-16T23:46:03.981307Z	    _id,
2025-09-16T23:46:03.981556Z	    _type,
2025-09-16T23:46:03.981638Z	    partNumber,
2025-09-16T23:46:03.98185Z	    "slug": slug.current,
2025-09-16T23:46:03.98195Z	    title,
2025-09-16T23:46:03.982145Z	    shortDescription,
2025-09-16T23:46:03.982242Z	    image,
2025-09-16T23:46:03.982426Z	    brand->{
2025-09-16T23:46:03.982548Z	      name,
2025-09-16T23:46:03.982878Z	      "slug": slug.current,
2025-09-16T23:46:03.982971Z	      logo
2025-09-16T23:46:03.983271Z	    },
2025-09-16T23:46:03.983474Z	    category->{
2025-09-16T23:46:03.983688Z	      name,
2025-09-16T23:46:03.98379Z	      "slug": slug.current
2025-09-16T23:46:03.984086Z	    },
2025-09-16T23:46:03.984315Z	    pricing{
2025-09-16T23:46:03.984411Z	      currency,
2025-09-16T23:46:03.984474Z	      tiers[]{
2025-09-16T23:46:03.984764Z	        quantity,
2025-09-16T23:46:03.98485Z	        price,
2025-09-16T23:46:03.98491Z	        unit
2025-09-16T23:46:03.985019Z	      },
2025-09-16T23:46:03.985086Z	      moq,
2025-09-16T23:46:03.985222Z	      leadTime,
2025-09-16T23:46:03.985361Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.985507Z	      "price": tiers[0].price,
2025-09-16T23:46:03.985584Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.985717Z	    },
2025-09-16T23:46:03.985878Z	    inventory{
2025-09-16T23:46:03.986004Z	      quantity,
2025-09-16T23:46:03.98609Z	      status,
2025-09-16T23:46:03.986179Z	      warehouse,
2025-09-16T23:46:03.986299Z	      lastUpdated,
2025-09-16T23:46:03.986448Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:03.986581Z	      "inStock": status == "in_stock",
2025-09-16T23:46:03.986683Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:03.986806Z	    },
2025-09-16T23:46:03.986895Z	    isActive,
2025-09-16T23:46:03.987003Z	    isFeatured,
2025-09-16T23:46:03.987092Z	    isNew,
2025-09-16T23:46:03.987182Z	    _createdAt,
2025-09-16T23:46:03.98724Z	    _updatedAt
2025-09-16T23:46:03.987404Z	  
2025-09-16T23:46:03.987544Z	      },
2025-09-16T23:46:03.9877Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:46:03.98786Z	    }
2025-09-16T23:46:03.987984Z	  
2025-09-16T23:46:03.988087Z	Query parameters: {
2025-09-16T23:46:03.988192Z	  limit: 8,
2025-09-16T23:46:03.988312Z	  offset: 0,
2025-09-16T23:46:03.988451Z	  category: undefined,
2025-09-16T23:46:03.988569Z	  brand: 'qualcomm',
2025-09-16T23:46:03.988703Z	  featured: undefined
2025-09-16T23:46:03.988802Z	}
2025-09-16T23:46:03.988916Z	Fetching solutions with query: 
2025-09-16T23:46:03.98902Z	    {
2025-09-16T23:46:03.989138Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:03.989262Z	        
2025-09-16T23:46:03.989391Z	    _id,
2025-09-16T23:46:03.989512Z	    title,
2025-09-16T23:46:03.989645Z	    "slug": slug.current,
2025-09-16T23:46:03.989782Z	    summary,
2025-09-16T23:46:03.990022Z	    description,
2025-09-16T23:46:03.990121Z	    coverImage,
2025-09-16T23:46:03.990372Z	    primaryBrand->{
2025-09-16T23:46:03.990459Z	      _id,
2025-09-16T23:46:03.990713Z	      name,
2025-09-16T23:46:03.990984Z	      "slug": slug.current,
2025-09-16T23:46:03.991221Z	      logo
2025-09-16T23:46:03.991308Z	    },
2025-09-16T23:46:03.991546Z	    relatedBrands[]->{
2025-09-16T23:46:03.991819Z	      _id,
2025-09-16T23:46:03.991951Z	      name,
2025-09-16T23:46:03.992132Z	      "slug": slug.current,
2025-09-16T23:46:03.992215Z	      logo
2025-09-16T23:46:03.992315Z	    },
2025-09-16T23:46:03.992433Z	    targetMarket,
2025-09-16T23:46:03.992554Z	    complexity,
2025-09-16T23:46:03.992659Z	    publishedAt,
2025-09-16T23:46:03.993097Z	    isPublished,
2025-09-16T23:46:03.993208Z	    isFeatured,
2025-09-16T23:46:03.993477Z	    viewCount,
2025-09-16T23:46:03.993561Z	    _createdAt,
2025-09-16T23:46:03.993723Z	    _updatedAt
2025-09-16T23:46:03.9938Z	  
2025-09-16T23:46:03.993914Z	      },
2025-09-16T23:46:03.994197Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:46:03.994288Z	    }
2025-09-16T23:46:03.994448Z	  
2025-09-16T23:46:03.994558Z	Query parameters: {
2025-09-16T23:46:03.994711Z	  limit: 4,
2025-09-16T23:46:03.994872Z	  offset: 0,
2025-09-16T23:46:03.994949Z	  targetMarket: undefined,
2025-09-16T23:46:03.995055Z	  brand: 'qualcomm',
2025-09-16T23:46:03.995154Z	  featured: undefined
2025-09-16T23:46:03.995256Z	}
2025-09-16T23:46:03.995361Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:46:03.995487Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:03.995588Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:03.995713Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:46:03.995822Z	Fetching products with query: 
2025-09-16T23:46:03.995972Z	    {
2025-09-16T23:46:03.996061Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:03.996208Z	        
2025-09-16T23:46:03.99632Z	    _id,
2025-09-16T23:46:03.996434Z	    _type,
2025-09-16T23:46:03.996554Z	    partNumber,
2025-09-16T23:46:03.996671Z	    "slug": slug.current,
2025-09-16T23:46:03.996787Z	    title,
2025-09-16T23:46:03.996886Z	    shortDescription,
2025-09-16T23:46:03.997027Z	    image,
2025-09-16T23:46:03.997264Z	    brand->{
2025-09-16T23:46:03.997422Z	      name,
2025-09-16T23:46:03.9975Z	      "slug": slug.current,
2025-09-16T23:46:03.997853Z	      logo
2025-09-16T23:46:03.997989Z	    },
2025-09-16T23:46:03.998101Z	    category->{
2025-09-16T23:46:03.998199Z	      name,
2025-09-16T23:46:03.99829Z	      "slug": slug.current
2025-09-16T23:46:03.998358Z	    },
2025-09-16T23:46:03.998414Z	    pricing{
2025-09-16T23:46:03.998475Z	      currency,
2025-09-16T23:46:03.998529Z	      tiers[]{
2025-09-16T23:46:03.998585Z	        quantity,
2025-09-16T23:46:03.998653Z	        price,
2025-09-16T23:46:03.998797Z	        unit
2025-09-16T23:46:03.998868Z	      },
2025-09-16T23:46:03.998959Z	      moq,
2025-09-16T23:46:03.99908Z	      leadTime,
2025-09-16T23:46:03.999233Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:03.999317Z	      "price": tiers[0].price,
2025-09-16T23:46:03.999417Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:03.999574Z	    },
2025-09-16T23:46:03.999665Z	    inventory{
2025-09-16T23:46:03.99981Z	      quantity,
2025-09-16T23:46:03.999949Z	      status,
2025-09-16T23:46:04.000032Z	      warehouse,
2025-09-16T23:46:04.000089Z	      lastUpdated,
2025-09-16T23:46:04.000265Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.000355Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.000492Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.000599Z	    },
2025-09-16T23:46:04.000758Z	    isActive,
2025-09-16T23:46:04.000835Z	    isFeatured,
2025-09-16T23:46:04.000895Z	    isNew,
2025-09-16T23:46:04.001105Z	    _createdAt,
2025-09-16T23:46:04.001243Z	    _updatedAt
2025-09-16T23:46:04.001341Z	  
2025-09-16T23:46:04.00147Z	      },
2025-09-16T23:46:04.001589Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:46:04.001739Z	    }
2025-09-16T23:46:04.001896Z	  
2025-09-16T23:46:04.002029Z	Query parameters: {
2025-09-16T23:46:04.002166Z	  limit: 8,
2025-09-16T23:46:04.002302Z	  offset: 0,
2025-09-16T23:46:04.002442Z	  category: undefined,
2025-09-16T23:46:04.002539Z	  brand: 'qualcomm',
2025-09-16T23:46:04.002643Z	  featured: undefined
2025-09-16T23:46:04.00281Z	}
2025-09-16T23:46:04.002933Z	Fetching solutions with query: 
2025-09-16T23:46:04.003097Z	    {
2025-09-16T23:46:04.003269Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.003422Z	        
2025-09-16T23:46:04.003553Z	    _id,
2025-09-16T23:46:04.003714Z	    title,
2025-09-16T23:46:04.003853Z	    "slug": slug.current,
2025-09-16T23:46:04.00395Z	    summary,
2025-09-16T23:46:04.004056Z	    description,
2025-09-16T23:46:04.004154Z	    coverImage,
2025-09-16T23:46:04.004321Z	    primaryBrand->{
2025-09-16T23:46:04.004487Z	      _id,
2025-09-16T23:46:04.004596Z	      name,
2025-09-16T23:46:04.004731Z	      "slug": slug.current,
2025-09-16T23:46:04.004852Z	      logo
2025-09-16T23:46:04.004959Z	    },
2025-09-16T23:46:04.005079Z	    relatedBrands[]->{
2025-09-16T23:46:04.00519Z	      _id,
2025-09-16T23:46:04.005293Z	      name,
2025-09-16T23:46:04.005466Z	      "slug": slug.current,
2025-09-16T23:46:04.005569Z	      logo
2025-09-16T23:46:04.005725Z	    },
2025-09-16T23:46:04.005849Z	    targetMarket,
2025-09-16T23:46:04.005996Z	    complexity,
2025-09-16T23:46:04.006095Z	    publishedAt,
2025-09-16T23:46:04.006227Z	    isPublished,
2025-09-16T23:46:04.006401Z	    isFeatured,
2025-09-16T23:46:04.006534Z	    viewCount,
2025-09-16T23:46:04.006638Z	    _createdAt,
2025-09-16T23:46:04.006781Z	    _updatedAt
2025-09-16T23:46:04.006892Z	  
2025-09-16T23:46:04.007001Z	      },
2025-09-16T23:46:04.007099Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:46:04.007207Z	    }
2025-09-16T23:46:04.007313Z	  
2025-09-16T23:46:04.007406Z	Query parameters: {
2025-09-16T23:46:04.007506Z	  limit: 4,
2025-09-16T23:46:04.007654Z	  offset: 0,
2025-09-16T23:46:04.007785Z	  targetMarket: undefined,
2025-09-16T23:46:04.007912Z	  brand: 'qualcomm',
2025-09-16T23:46:04.008019Z	  featured: undefined
2025-09-16T23:46:04.008119Z	}
2025-09-16T23:46:04.008225Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:46:04.008345Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.008451Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.008586Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:04.008744Z	Fetching products with query: 
2025-09-16T23:46:04.008854Z	    {
2025-09-16T23:46:04.00895Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.009076Z	        
2025-09-16T23:46:04.009171Z	    _id,
2025-09-16T23:46:04.009293Z	    _type,
2025-09-16T23:46:04.009424Z	    partNumber,
2025-09-16T23:46:04.009511Z	    "slug": slug.current,
2025-09-16T23:46:04.009694Z	    title,
2025-09-16T23:46:04.009853Z	    shortDescription,
2025-09-16T23:46:04.009928Z	    image,
2025-09-16T23:46:04.010053Z	    brand->{
2025-09-16T23:46:04.010194Z	      name,
2025-09-16T23:46:04.010272Z	      "slug": slug.current,
2025-09-16T23:46:04.010403Z	      logo
2025-09-16T23:46:04.010542Z	    },
2025-09-16T23:46:04.01062Z	    category->{
2025-09-16T23:46:04.010959Z	      name,
2025-09-16T23:46:04.011116Z	      "slug": slug.current
2025-09-16T23:46:04.011282Z	    },
2025-09-16T23:46:04.011444Z	    pricing{
2025-09-16T23:46:04.011563Z	      currency,
2025-09-16T23:46:04.011892Z	      tiers[]{
2025-09-16T23:46:04.012028Z	        quantity,
2025-09-16T23:46:04.012152Z	        price,
2025-09-16T23:46:04.012334Z	        unit
2025-09-16T23:46:04.012481Z	      },
2025-09-16T23:46:04.012622Z	      moq,
2025-09-16T23:46:04.012746Z	      leadTime,
2025-09-16T23:46:04.012894Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.012992Z	      "price": tiers[0].price,
2025-09-16T23:46:04.013092Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.01318Z	    },
2025-09-16T23:46:04.013322Z	    inventory{
2025-09-16T23:46:04.013454Z	      quantity,
2025-09-16T23:46:04.013609Z	      status,
2025-09-16T23:46:04.013764Z	      warehouse,
2025-09-16T23:46:04.013845Z	      lastUpdated,
2025-09-16T23:46:04.01398Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.014059Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.01422Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.01438Z	    },
2025-09-16T23:46:04.014532Z	    isActive,
2025-09-16T23:46:04.01464Z	    isFeatured,
2025-09-16T23:46:04.015027Z	    isNew,
2025-09-16T23:46:04.015195Z	    _createdAt,
2025-09-16T23:46:04.015337Z	    _updatedAt
2025-09-16T23:46:04.015539Z	  
2025-09-16T23:46:04.015709Z	      },
2025-09-16T23:46:04.015792Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-16T23:46:04.015884Z	    }
2025-09-16T23:46:04.015992Z	  
2025-09-16T23:46:04.016095Z	Query parameters: {
2025-09-16T23:46:04.016189Z	  limit: 8,
2025-09-16T23:46:04.016295Z	  offset: 0,
2025-09-16T23:46:04.016402Z	  category: undefined,
2025-09-16T23:46:04.016504Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:04.016597Z	  featured: undefined
2025-09-16T23:46:04.016691Z	}
2025-09-16T23:46:04.016793Z	Fetching solutions with query: 
2025-09-16T23:46:04.016889Z	    {
2025-09-16T23:46:04.017008Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.017131Z	        
2025-09-16T23:46:04.017229Z	    _id,
2025-09-16T23:46:04.017323Z	    title,
2025-09-16T23:46:04.017425Z	    "slug": slug.current,
2025-09-16T23:46:04.017556Z	    summary,
2025-09-16T23:46:04.017682Z	    description,
2025-09-16T23:46:04.01796Z	    coverImage,
2025-09-16T23:46:04.018071Z	    primaryBrand->{
2025-09-16T23:46:04.018244Z	      _id,
2025-09-16T23:46:04.018321Z	      name,
2025-09-16T23:46:04.018384Z	      "slug": slug.current,
2025-09-16T23:46:04.018572Z	      logo
2025-09-16T23:46:04.018742Z	    },
2025-09-16T23:46:04.018829Z	    relatedBrands[]->{
2025-09-16T23:46:04.018896Z	      _id,
2025-09-16T23:46:04.019025Z	      name,
2025-09-16T23:46:04.019111Z	      "slug": slug.current,
2025-09-16T23:46:04.019291Z	      logo
2025-09-16T23:46:04.019376Z	    },
2025-09-16T23:46:04.019502Z	    targetMarket,
2025-09-16T23:46:04.019589Z	    complexity,
2025-09-16T23:46:04.01972Z	    publishedAt,
2025-09-16T23:46:04.019862Z	    isPublished,
2025-09-16T23:46:04.019949Z	    isFeatured,
2025-09-16T23:46:04.020056Z	    viewCount,
2025-09-16T23:46:04.020152Z	    _createdAt,
2025-09-16T23:46:04.020247Z	    _updatedAt
2025-09-16T23:46:04.020347Z	  
2025-09-16T23:46:04.020468Z	      },
2025-09-16T23:46:04.020539Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-16T23:46:04.020664Z	    }
2025-09-16T23:46:04.020774Z	  
2025-09-16T23:46:04.020874Z	Query parameters: {
2025-09-16T23:46:04.021Z	  limit: 4,
2025-09-16T23:46:04.02109Z	  offset: 0,
2025-09-16T23:46:04.021187Z	  targetMarket: undefined,
2025-09-16T23:46:04.021314Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:04.021421Z	  featured: undefined
2025-09-16T23:46:04.021517Z	}
2025-09-16T23:46:04.021622Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:04.021748Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.022014Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.022129Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:04.022293Z	Fetching products with query: 
2025-09-16T23:46:04.022376Z	    {
2025-09-16T23:46:04.022491Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.022806Z	        
2025-09-16T23:46:04.022951Z	    _id,
2025-09-16T23:46:04.023174Z	    _type,
2025-09-16T23:46:04.023267Z	    partNumber,
2025-09-16T23:46:04.023396Z	    "slug": slug.current,
2025-09-16T23:46:04.023542Z	    title,
2025-09-16T23:46:04.02366Z	    shortDescription,
2025-09-16T23:46:04.023841Z	    image,
2025-09-16T23:46:04.023993Z	    brand->{
2025-09-16T23:46:04.024074Z	      name,
2025-09-16T23:46:04.024215Z	      "slug": slug.current,
2025-09-16T23:46:04.024359Z	      logo
2025-09-16T23:46:04.024545Z	    },
2025-09-16T23:46:04.024625Z	    category->{
2025-09-16T23:46:04.02479Z	      name,
2025-09-16T23:46:04.024864Z	      "slug": slug.current
2025-09-16T23:46:04.024922Z	    },
2025-09-16T23:46:04.025108Z	    pricing{
2025-09-16T23:46:04.025192Z	      currency,
2025-09-16T23:46:04.025253Z	      tiers[]{
2025-09-16T23:46:04.025337Z	        quantity,
2025-09-16T23:46:04.025457Z	        price,
2025-09-16T23:46:04.025522Z	        unit
2025-09-16T23:46:04.025631Z	      },
2025-09-16T23:46:04.025789Z	      moq,
2025-09-16T23:46:04.025866Z	      leadTime,
2025-09-16T23:46:04.025972Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.026061Z	      "price": tiers[0].price,
2025-09-16T23:46:04.026179Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.026301Z	    },
2025-09-16T23:46:04.026435Z	    inventory{
2025-09-16T23:46:04.026551Z	      quantity,
2025-09-16T23:46:04.026666Z	      status,
2025-09-16T23:46:04.02677Z	      warehouse,
2025-09-16T23:46:04.027012Z	      lastUpdated,
2025-09-16T23:46:04.02719Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.027352Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.027475Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.027615Z	    },
2025-09-16T23:46:04.027713Z	    isActive,
2025-09-16T23:46:04.027935Z	    isFeatured,
2025-09-16T23:46:04.028068Z	    isNew,
2025-09-16T23:46:04.028146Z	    _createdAt,
2025-09-16T23:46:04.028209Z	    _updatedAt
2025-09-16T23:46:04.028267Z	  
2025-09-16T23:46:04.028324Z	      },
2025-09-16T23:46:04.028383Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-16T23:46:04.028461Z	    }
2025-09-16T23:46:04.028522Z	  
2025-09-16T23:46:04.028587Z	Query parameters: {
2025-09-16T23:46:04.028647Z	  limit: 8,
2025-09-16T23:46:04.028756Z	  offset: 0,
2025-09-16T23:46:04.028832Z	  category: undefined,
2025-09-16T23:46:04.0289Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:04.028968Z	  featured: undefined
2025-09-16T23:46:04.029029Z	}
2025-09-16T23:46:04.029095Z	Fetching solutions with query: 
2025-09-16T23:46:04.029157Z	    {
2025-09-16T23:46:04.029228Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.0293Z	        
2025-09-16T23:46:04.029369Z	    _id,
2025-09-16T23:46:04.029441Z	    title,
2025-09-16T23:46:04.029502Z	    "slug": slug.current,
2025-09-16T23:46:04.029562Z	    summary,
2025-09-16T23:46:04.029621Z	    description,
2025-09-16T23:46:04.02969Z	    coverImage,
2025-09-16T23:46:04.029765Z	    primaryBrand->{
2025-09-16T23:46:04.02983Z	      _id,
2025-09-16T23:46:04.029895Z	      name,
2025-09-16T23:46:04.029957Z	      "slug": slug.current,
2025-09-16T23:46:04.030021Z	      logo
2025-09-16T23:46:04.030104Z	    },
2025-09-16T23:46:04.030171Z	    relatedBrands[]->{
2025-09-16T23:46:04.030228Z	      _id,
2025-09-16T23:46:04.030288Z	      name,
2025-09-16T23:46:04.030347Z	      "slug": slug.current,
2025-09-16T23:46:04.030403Z	      logo
2025-09-16T23:46:04.030471Z	    },
2025-09-16T23:46:04.03053Z	    targetMarket,
2025-09-16T23:46:04.030598Z	    complexity,
2025-09-16T23:46:04.030657Z	    publishedAt,
2025-09-16T23:46:04.030738Z	    isPublished,
2025-09-16T23:46:04.0308Z	    isFeatured,
2025-09-16T23:46:04.030871Z	    viewCount,
2025-09-16T23:46:04.030934Z	    _createdAt,
2025-09-16T23:46:04.030991Z	    _updatedAt
2025-09-16T23:46:04.031056Z	  
2025-09-16T23:46:04.03112Z	      },
2025-09-16T23:46:04.031179Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-16T23:46:04.03125Z	    }
2025-09-16T23:46:04.031315Z	  
2025-09-16T23:46:04.03138Z	Query parameters: {
2025-09-16T23:46:04.031445Z	  limit: 4,
2025-09-16T23:46:04.031507Z	  offset: 0,
2025-09-16T23:46:04.031571Z	  targetMarket: undefined,
2025-09-16T23:46:04.031634Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:04.031719Z	  featured: undefined
2025-09-16T23:46:04.031783Z	}
2025-09-16T23:46:04.031855Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:04.031927Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.031993Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.032053Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:46:04.032127Z	Fetching products with query: 
2025-09-16T23:46:04.032186Z	    {
2025-09-16T23:46:04.032244Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.03231Z	        
2025-09-16T23:46:04.032376Z	    _id,
2025-09-16T23:46:04.032465Z	    _type,
2025-09-16T23:46:04.032529Z	    partNumber,
2025-09-16T23:46:04.032593Z	    "slug": slug.current,
2025-09-16T23:46:04.03265Z	    title,
2025-09-16T23:46:04.032721Z	    shortDescription,
2025-09-16T23:46:04.032781Z	    image,
2025-09-16T23:46:04.032846Z	    brand->{
2025-09-16T23:46:04.032915Z	      name,
2025-09-16T23:46:04.03298Z	      "slug": slug.current,
2025-09-16T23:46:04.033039Z	      logo
2025-09-16T23:46:04.033097Z	    },
2025-09-16T23:46:04.033155Z	    category->{
2025-09-16T23:46:04.033211Z	      name,
2025-09-16T23:46:04.033274Z	      "slug": slug.current
2025-09-16T23:46:04.033338Z	    },
2025-09-16T23:46:04.033403Z	    pricing{
2025-09-16T23:46:04.033472Z	      currency,
2025-09-16T23:46:04.033536Z	      tiers[]{
2025-09-16T23:46:04.033614Z	        quantity,
2025-09-16T23:46:04.03369Z	        price,
2025-09-16T23:46:04.033754Z	        unit
2025-09-16T23:46:04.033811Z	      },
2025-09-16T23:46:04.033869Z	      moq,
2025-09-16T23:46:04.03394Z	      leadTime,
2025-09-16T23:46:04.034004Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.034066Z	      "price": tiers[0].price,
2025-09-16T23:46:04.034125Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.034186Z	    },
2025-09-16T23:46:04.034244Z	    inventory{
2025-09-16T23:46:04.034306Z	      quantity,
2025-09-16T23:46:04.034362Z	      status,
2025-09-16T23:46:04.034427Z	      warehouse,
2025-09-16T23:46:04.034486Z	      lastUpdated,
2025-09-16T23:46:04.034544Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.034608Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.034685Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.034746Z	    },
2025-09-16T23:46:04.034804Z	    isActive,
2025-09-16T23:46:04.034859Z	    isFeatured,
2025-09-16T23:46:04.034919Z	    isNew,
2025-09-16T23:46:04.034975Z	    _createdAt,
2025-09-16T23:46:04.035041Z	    _updatedAt
2025-09-16T23:46:04.035104Z	  
2025-09-16T23:46:04.035161Z	      },
2025-09-16T23:46:04.035216Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:46:04.035277Z	    }
2025-09-16T23:46:04.035333Z	  
2025-09-16T23:46:04.035388Z	Query parameters: {
2025-09-16T23:46:04.035453Z	  limit: 8,
2025-09-16T23:46:04.03551Z	  offset: 0,
2025-09-16T23:46:04.035566Z	  category: undefined,
2025-09-16T23:46:04.035621Z	  brand: 'qualcomm',
2025-09-16T23:46:04.035684Z	  featured: undefined
2025-09-16T23:46:04.035743Z	}
2025-09-16T23:46:04.035807Z	Fetching solutions with query: 
2025-09-16T23:46:04.035866Z	    {
2025-09-16T23:46:04.035922Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.035985Z	        
2025-09-16T23:46:04.03604Z	    _id,
2025-09-16T23:46:04.036101Z	    title,
2025-09-16T23:46:04.036161Z	    "slug": slug.current,
2025-09-16T23:46:04.036226Z	    summary,
2025-09-16T23:46:04.036282Z	    description,
2025-09-16T23:46:04.037533Z	    coverImage,
2025-09-16T23:46:04.03773Z	    primaryBrand->{
2025-09-16T23:46:04.037834Z	      _id,
2025-09-16T23:46:04.037898Z	      name,
2025-09-16T23:46:04.037964Z	      "slug": slug.current,
2025-09-16T23:46:04.03819Z	      logo
2025-09-16T23:46:04.038342Z	    },
2025-09-16T23:46:04.038437Z	    relatedBrands[]->{
2025-09-16T23:46:04.038529Z	      _id,
2025-09-16T23:46:04.038624Z	      name,
2025-09-16T23:46:04.038756Z	      "slug": slug.current,
2025-09-16T23:46:04.038857Z	      logo
2025-09-16T23:46:04.038952Z	    },
2025-09-16T23:46:04.039048Z	    targetMarket,
2025-09-16T23:46:04.039136Z	    complexity,
2025-09-16T23:46:04.039247Z	    publishedAt,
2025-09-16T23:46:04.039351Z	    isPublished,
2025-09-16T23:46:04.039442Z	    isFeatured,
2025-09-16T23:46:04.039539Z	    viewCount,
2025-09-16T23:46:04.039645Z	    _createdAt,
2025-09-16T23:46:04.03977Z	    _updatedAt
2025-09-16T23:46:04.039862Z	  
2025-09-16T23:46:04.039955Z	      },
2025-09-16T23:46:04.040145Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:46:04.040262Z	    }
2025-09-16T23:46:04.040356Z	  
2025-09-16T23:46:04.040443Z	Query parameters: {
2025-09-16T23:46:04.040543Z	  limit: 4,
2025-09-16T23:46:04.040639Z	  offset: 0,
2025-09-16T23:46:04.040769Z	  targetMarket: undefined,
2025-09-16T23:46:04.040871Z	  brand: 'qualcomm',
2025-09-16T23:46:04.04097Z	  featured: undefined
2025-09-16T23:46:04.04107Z	}
2025-09-16T23:46:04.041165Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:46:04.041257Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.041357Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.041453Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:46:04.041546Z	Fetching products with query: 
2025-09-16T23:46:04.041637Z	    {
2025-09-16T23:46:04.041752Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.041845Z	        
2025-09-16T23:46:04.041938Z	    _id,
2025-09-16T23:46:04.042043Z	    _type,
2025-09-16T23:46:04.042141Z	    partNumber,
2025-09-16T23:46:04.042237Z	    "slug": slug.current,
2025-09-16T23:46:04.042331Z	    title,
2025-09-16T23:46:04.042419Z	    shortDescription,
2025-09-16T23:46:04.042514Z	    image,
2025-09-16T23:46:04.042607Z	    brand->{
2025-09-16T23:46:04.042723Z	      name,
2025-09-16T23:46:04.042819Z	      "slug": slug.current,
2025-09-16T23:46:04.042911Z	      logo
2025-09-16T23:46:04.043005Z	    },
2025-09-16T23:46:04.043098Z	    category->{
2025-09-16T23:46:04.043193Z	      name,
2025-09-16T23:46:04.043281Z	      "slug": slug.current
2025-09-16T23:46:04.043367Z	    },
2025-09-16T23:46:04.043458Z	    pricing{
2025-09-16T23:46:04.043547Z	      currency,
2025-09-16T23:46:04.043637Z	      tiers[]{
2025-09-16T23:46:04.04376Z	        quantity,
2025-09-16T23:46:04.043858Z	        price,
2025-09-16T23:46:04.04395Z	        unit
2025-09-16T23:46:04.044035Z	      },
2025-09-16T23:46:04.044124Z	      moq,
2025-09-16T23:46:04.044241Z	      leadTime,
2025-09-16T23:46:04.044342Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.044438Z	      "price": tiers[0].price,
2025-09-16T23:46:04.044532Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.044618Z	    },
2025-09-16T23:46:04.044735Z	    inventory{
2025-09-16T23:46:04.044826Z	      quantity,
2025-09-16T23:46:04.044923Z	      status,
2025-09-16T23:46:04.045016Z	      warehouse,
2025-09-16T23:46:04.0451Z	      lastUpdated,
2025-09-16T23:46:04.045203Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.045298Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.045398Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.045473Z	    },
2025-09-16T23:46:04.045562Z	    isActive,
2025-09-16T23:46:04.045689Z	    isFeatured,
2025-09-16T23:46:04.045812Z	    isNew,
2025-09-16T23:46:04.045907Z	    _createdAt,
2025-09-16T23:46:04.046039Z	    _updatedAt
2025-09-16T23:46:04.04613Z	  
2025-09-16T23:46:04.046261Z	      },
2025-09-16T23:46:04.046333Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:46:04.046397Z	    }
2025-09-16T23:46:04.046554Z	  
2025-09-16T23:46:04.046639Z	Query parameters: {
2025-09-16T23:46:04.046759Z	  limit: 8,
2025-09-16T23:46:04.046827Z	  offset: 0,
2025-09-16T23:46:04.046935Z	  category: undefined,
2025-09-16T23:46:04.047143Z	  brand: 'qualcomm',
2025-09-16T23:46:04.047281Z	  featured: undefined
2025-09-16T23:46:04.047393Z	}
2025-09-16T23:46:04.047503Z	Fetching solutions with query: 
2025-09-16T23:46:04.04758Z	    {
2025-09-16T23:46:04.047712Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.047841Z	        
2025-09-16T23:46:04.047957Z	    _id,
2025-09-16T23:46:04.048067Z	    title,
2025-09-16T23:46:04.048188Z	    "slug": slug.current,
2025-09-16T23:46:04.048301Z	    summary,
2025-09-16T23:46:04.048424Z	    description,
2025-09-16T23:46:04.048496Z	    coverImage,
2025-09-16T23:46:04.048604Z	    primaryBrand->{
2025-09-16T23:46:04.048683Z	      _id,
2025-09-16T23:46:04.048838Z	      name,
2025-09-16T23:46:04.049052Z	      "slug": slug.current,
2025-09-16T23:46:04.049175Z	      logo
2025-09-16T23:46:04.049258Z	    },
2025-09-16T23:46:04.049323Z	    relatedBrands[]->{
2025-09-16T23:46:04.049383Z	      _id,
2025-09-16T23:46:04.049441Z	      name,
2025-09-16T23:46:04.049497Z	      "slug": slug.current,
2025-09-16T23:46:04.049553Z	      logo
2025-09-16T23:46:04.049622Z	    },
2025-09-16T23:46:04.049725Z	    targetMarket,
2025-09-16T23:46:04.0498Z	    complexity,
2025-09-16T23:46:04.049885Z	    publishedAt,
2025-09-16T23:46:04.049947Z	    isPublished,
2025-09-16T23:46:04.050006Z	    isFeatured,
2025-09-16T23:46:04.050069Z	    viewCount,
2025-09-16T23:46:04.050128Z	    _createdAt,
2025-09-16T23:46:04.050185Z	    _updatedAt
2025-09-16T23:46:04.050241Z	  
2025-09-16T23:46:04.050303Z	      },
2025-09-16T23:46:04.050367Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:46:04.050446Z	    }
2025-09-16T23:46:04.050513Z	  
2025-09-16T23:46:04.050576Z	Query parameters: {
2025-09-16T23:46:04.050639Z	  limit: 4,
2025-09-16T23:46:04.050727Z	  offset: 0,
2025-09-16T23:46:04.050795Z	  targetMarket: undefined,
2025-09-16T23:46:04.050855Z	  brand: 'qualcomm',
2025-09-16T23:46:04.050943Z	  featured: undefined
2025-09-16T23:46:04.051014Z	}
2025-09-16T23:46:04.051072Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:46:04.051133Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.051198Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.051258Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:04.05132Z	Fetching products with query: 
2025-09-16T23:46:04.051378Z	    {
2025-09-16T23:46:04.051441Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.0515Z	        
2025-09-16T23:46:04.051556Z	    _id,
2025-09-16T23:46:04.051624Z	    _type,
2025-09-16T23:46:04.051714Z	    partNumber,
2025-09-16T23:46:04.051781Z	    "slug": slug.current,
2025-09-16T23:46:04.051844Z	    title,
2025-09-16T23:46:04.051903Z	    shortDescription,
2025-09-16T23:46:04.051961Z	    image,
2025-09-16T23:46:04.052018Z	    brand->{
2025-09-16T23:46:04.05216Z	      name,
2025-09-16T23:46:04.052328Z	      "slug": slug.current,
2025-09-16T23:46:04.052472Z	      logo
2025-09-16T23:46:04.052554Z	    },
2025-09-16T23:46:04.05262Z	    category->{
2025-09-16T23:46:04.0527Z	      name,
2025-09-16T23:46:04.052762Z	      "slug": slug.current
2025-09-16T23:46:04.052819Z	    },
2025-09-16T23:46:04.052882Z	    pricing{
2025-09-16T23:46:04.052938Z	      currency,
2025-09-16T23:46:04.052994Z	      tiers[]{
2025-09-16T23:46:04.05305Z	        quantity,
2025-09-16T23:46:04.053107Z	        price,
2025-09-16T23:46:04.053169Z	        unit
2025-09-16T23:46:04.05323Z	      },
2025-09-16T23:46:04.053288Z	      moq,
2025-09-16T23:46:04.053342Z	      leadTime,
2025-09-16T23:46:04.053403Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.053465Z	      "price": tiers[0].price,
2025-09-16T23:46:04.054357Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.054456Z	    },
2025-09-16T23:46:04.054761Z	    inventory{
2025-09-16T23:46:04.054879Z	      quantity,
2025-09-16T23:46:04.055095Z	      status,
2025-09-16T23:46:04.055421Z	      warehouse,
2025-09-16T23:46:04.055508Z	      lastUpdated,
2025-09-16T23:46:04.05564Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.055769Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.055902Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.056069Z	    },
2025-09-16T23:46:04.056179Z	    isActive,
2025-09-16T23:46:04.056315Z	    isFeatured,
2025-09-16T23:46:04.056388Z	    isNew,
2025-09-16T23:46:04.05652Z	    _createdAt,
2025-09-16T23:46:04.056602Z	    _updatedAt
2025-09-16T23:46:04.056712Z	  
2025-09-16T23:46:04.056839Z	      },
2025-09-16T23:46:04.056987Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-16T23:46:04.057112Z	    }
2025-09-16T23:46:04.057261Z	  
2025-09-16T23:46:04.057369Z	Query parameters: {
2025-09-16T23:46:04.057501Z	  limit: 8,
2025-09-16T23:46:04.057696Z	  offset: 0,
2025-09-16T23:46:04.057809Z	  category: undefined,
2025-09-16T23:46:04.05792Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:04.058039Z	  featured: undefined
2025-09-16T23:46:04.058315Z	}
2025-09-16T23:46:04.058403Z	Fetching solutions with query: 
2025-09-16T23:46:04.058477Z	    {
2025-09-16T23:46:04.058771Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.059037Z	        
2025-09-16T23:46:04.05913Z	    _id,
2025-09-16T23:46:04.059364Z	    title,
2025-09-16T23:46:04.059453Z	    "slug": slug.current,
2025-09-16T23:46:04.059695Z	    summary,
2025-09-16T23:46:04.059942Z	    description,
2025-09-16T23:46:04.06003Z	    coverImage,
2025-09-16T23:46:04.060131Z	    primaryBrand->{
2025-09-16T23:46:04.060245Z	      _id,
2025-09-16T23:46:04.060532Z	      name,
2025-09-16T23:46:04.060611Z	      "slug": slug.current,
2025-09-16T23:46:04.060691Z	      logo
2025-09-16T23:46:04.061001Z	    },
2025-09-16T23:46:04.061082Z	    relatedBrands[]->{
2025-09-16T23:46:04.061139Z	      _id,
2025-09-16T23:46:04.061411Z	      name,
2025-09-16T23:46:04.061507Z	      "slug": slug.current,
2025-09-16T23:46:04.061643Z	      logo
2025-09-16T23:46:04.061799Z	    },
2025-09-16T23:46:04.061936Z	    targetMarket,
2025-09-16T23:46:04.062006Z	    complexity,
2025-09-16T23:46:04.06211Z	    publishedAt,
2025-09-16T23:46:04.062268Z	    isPublished,
2025-09-16T23:46:04.0624Z	    isFeatured,
2025-09-16T23:46:04.062489Z	    viewCount,
2025-09-16T23:46:04.062624Z	    _createdAt,
2025-09-16T23:46:04.062769Z	    _updatedAt
2025-09-16T23:46:04.062841Z	  
2025-09-16T23:46:04.062954Z	      },
2025-09-16T23:46:04.063024Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-16T23:46:04.06314Z	    }
2025-09-16T23:46:04.063258Z	  
2025-09-16T23:46:04.063369Z	Query parameters: {
2025-09-16T23:46:04.063483Z	  limit: 4,
2025-09-16T23:46:04.063556Z	  offset: 0,
2025-09-16T23:46:04.063698Z	  targetMarket: undefined,
2025-09-16T23:46:04.063831Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:04.063898Z	  featured: undefined
2025-09-16T23:46:04.063993Z	}
2025-09-16T23:46:04.064135Z	Error fetching article data: l [SanityError]: Article not found
2025-09-16T23:46:04.064213Z	✅ [getBrandData] Found brand: LEM
2025-09-16T23:46:04.064306Z	Products fetch result: {
2025-09-16T23:46:04.064418Z	  totalProducts: 3,
2025-09-16T23:46:04.064534Z	  fetchedProducts: 3,
2025-09-16T23:46:04.064664Z	  firstProduct: {
2025-09-16T23:46:04.06485Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-16T23:46:04.064922Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-16T23:46:04.065046Z	    _type: 'product',
2025-09-16T23:46:04.065123Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-16T23:46:04.065222Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-16T23:46:04.065306Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-16T23:46:04.065421Z	    image: null,
2025-09-16T23:46:04.065485Z	    inventory: {
2025-09-16T23:46:04.065597Z	      inStock: true,
2025-09-16T23:46:04.065683Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-16T23:46:04.065812Z	      quantity: 0,
2025-09-16T23:46:04.065878Z	      status: 'in_stock',
2025-09-16T23:46:04.065968Z	      warehouse: null
2025-09-16T23:46:04.066089Z	    },
2025-09-16T23:46:04.066196Z	    isActive: true,
2025-09-16T23:46:04.066299Z	    isFeatured: false,
2025-09-16T23:46:04.066403Z	    isNew: false,
2025-09-16T23:46:04.066501Z	    partNumber: 'la55-p',
2025-09-16T23:46:04.066578Z	    pricing: {
2025-09-16T23:46:04.066762Z	      currency: 'CNY',
2025-09-16T23:46:04.066827Z	      leadTime: null,
2025-09-16T23:46:04.066957Z	      moq: null,
2025-09-16T23:46:04.06708Z	      price: null,
2025-09-16T23:46:04.067183Z	      tiers: null
2025-09-16T23:46:04.067299Z	    },
2025-09-16T23:46:04.067419Z	    shortDescription: '电流传感器la55-p',
2025-09-16T23:46:04.067524Z	    slug: 'la55-p',
2025-09-16T23:46:04.067615Z	    title: '电流传感器la55-p'
2025-09-16T23:46:04.067742Z	  }
2025-09-16T23:46:04.067841Z	}
2025-09-16T23:46:04.067951Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.06806Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-16T23:46:04.068192Z	Fetching products with query: 
2025-09-16T23:46:04.068345Z	    {
2025-09-16T23:46:04.068427Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.068566Z	        
2025-09-16T23:46:04.068733Z	    _id,
2025-09-16T23:46:04.068924Z	    _type,
2025-09-16T23:46:04.069073Z	    partNumber,
2025-09-16T23:46:04.069239Z	    "slug": slug.current,
2025-09-16T23:46:04.069381Z	    title,
2025-09-16T23:46:04.069515Z	    shortDescription,
2025-09-16T23:46:04.069641Z	    image,
2025-09-16T23:46:04.069791Z	    brand->{
2025-09-16T23:46:04.069911Z	      name,
2025-09-16T23:46:04.070018Z	      "slug": slug.current,
2025-09-16T23:46:04.070276Z	      logo
2025-09-16T23:46:04.070419Z	    },
2025-09-16T23:46:04.070532Z	    category->{
2025-09-16T23:46:04.070635Z	      name,
2025-09-16T23:46:04.070749Z	      "slug": slug.current
2025-09-16T23:46:04.070872Z	    },
2025-09-16T23:46:04.070988Z	    pricing{
2025-09-16T23:46:04.071118Z	      currency,
2025-09-16T23:46:04.07124Z	      tiers[]{
2025-09-16T23:46:04.071406Z	        quantity,
2025-09-16T23:46:04.071537Z	        price,
2025-09-16T23:46:04.071635Z	        unit
2025-09-16T23:46:04.071781Z	      },
2025-09-16T23:46:04.071917Z	      moq,
2025-09-16T23:46:04.072048Z	      leadTime,
2025-09-16T23:46:04.072164Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.07228Z	      "price": tiers[0].price,
2025-09-16T23:46:04.072417Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.072528Z	    },
2025-09-16T23:46:04.072626Z	    inventory{
2025-09-16T23:46:04.072764Z	      quantity,
2025-09-16T23:46:04.072891Z	      status,
2025-09-16T23:46:04.073018Z	      warehouse,
2025-09-16T23:46:04.073156Z	      lastUpdated,
2025-09-16T23:46:04.073385Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.073497Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.073595Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.073709Z	    },
2025-09-16T23:46:04.073829Z	    isActive,
2025-09-16T23:46:04.073934Z	    isFeatured,
2025-09-16T23:46:04.074064Z	    isNew,
2025-09-16T23:46:04.074162Z	    _createdAt,
2025-09-16T23:46:04.0743Z	    _updatedAt
2025-09-16T23:46:04.074416Z	  
2025-09-16T23:46:04.074594Z	      },
2025-09-16T23:46:04.074721Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-16T23:46:04.074863Z	    }
2025-09-16T23:46:04.074923Z	  
2025-09-16T23:46:04.075043Z	Query parameters: {
2025-09-16T23:46:04.075174Z	  limit: 8,
2025-09-16T23:46:04.075276Z	  offset: 0,
2025-09-16T23:46:04.075392Z	  category: undefined,
2025-09-16T23:46:04.075593Z	  brand: 'lem',
2025-09-16T23:46:04.075757Z	  featured: undefined
2025-09-16T23:46:04.075891Z	}
2025-09-16T23:46:04.07598Z	Fetching solutions with query: 
2025-09-16T23:46:04.076045Z	    {
2025-09-16T23:46:04.076136Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.076313Z	        
2025-09-16T23:46:04.076471Z	    _id,
2025-09-16T23:46:04.076558Z	    title,
2025-09-16T23:46:04.07666Z	    "slug": slug.current,
2025-09-16T23:46:04.076791Z	    summary,
2025-09-16T23:46:04.076895Z	    description,
2025-09-16T23:46:04.076987Z	    coverImage,
2025-09-16T23:46:04.077118Z	    primaryBrand->{
2025-09-16T23:46:04.077241Z	      _id,
2025-09-16T23:46:04.077301Z	      name,
2025-09-16T23:46:04.077385Z	      "slug": slug.current,
2025-09-16T23:46:04.077486Z	      logo
2025-09-16T23:46:04.077616Z	    },
2025-09-16T23:46:04.077774Z	    relatedBrands[]->{
2025-09-16T23:46:04.077895Z	      _id,
2025-09-16T23:46:04.078019Z	      name,
2025-09-16T23:46:04.078166Z	      "slug": slug.current,
2025-09-16T23:46:04.078288Z	      logo
2025-09-16T23:46:04.078398Z	    },
2025-09-16T23:46:04.07855Z	    targetMarket,
2025-09-16T23:46:04.078649Z	    complexity,
2025-09-16T23:46:04.078776Z	    publishedAt,
2025-09-16T23:46:04.078913Z	    isPublished,
2025-09-16T23:46:04.079039Z	    isFeatured,
2025-09-16T23:46:04.079168Z	    viewCount,
2025-09-16T23:46:04.079276Z	    _createdAt,
2025-09-16T23:46:04.079387Z	    _updatedAt
2025-09-16T23:46:04.079525Z	  
2025-09-16T23:46:04.079652Z	      },
2025-09-16T23:46:04.079876Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-16T23:46:04.080016Z	    }
2025-09-16T23:46:04.080091Z	  
2025-09-16T23:46:04.080173Z	Query parameters: {
2025-09-16T23:46:04.080237Z	  limit: 4,
2025-09-16T23:46:04.080303Z	  offset: 0,
2025-09-16T23:46:04.080369Z	  targetMarket: undefined,
2025-09-16T23:46:04.080443Z	  brand: 'lem',
2025-09-16T23:46:04.080511Z	  featured: undefined
2025-09-16T23:46:04.080572Z	}
2025-09-16T23:46:04.080639Z	    at l (/opt/buildhome/repo/.next/server/chunks/439.js:210:70)
2025-09-16T23:46:04.080774Z	    at runNextTicks (node:internal/process/task_queues:60:5)
2025-09-16T23:46:04.080856Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:46:04.080926Z	    at process.processTimers (node:internal/timers:512:7)
2025-09-16T23:46:04.080994Z	    at async v (/opt/buildhome/repo/.next/server/app/[locale]/articles/[slug]/page.js:1:4853) {
2025-09-16T23:46:04.081054Z	  code: 'ARTICLE_NOT_FOUND'
2025-09-16T23:46:04.081119Z	}
2025-09-16T23:46:04.081186Z	Error fetching article data: l [SanityError]: Article not found
2025-09-16T23:46:04.081275Z	    at l (/opt/buildhome/repo/.next/server/chunks/439.js:210:70)
2025-09-16T23:46:04.081345Z	    at async v (/opt/buildhome/repo/.next/server/app/[locale]/articles/[slug]/page.js:1:4853) {
2025-09-16T23:46:04.081418Z	  code: 'ARTICLE_NOT_FOUND'
2025-09-16T23:46:04.081486Z	}
2025-09-16T23:46:04.081552Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:46:04.081633Z	Fetching products with query: 
2025-09-16T23:46:04.081723Z	    {
2025-09-16T23:46:04.081796Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.081865Z	        
2025-09-16T23:46:04.081929Z	    _id,
2025-09-16T23:46:04.081999Z	    _type,
2025-09-16T23:46:04.082057Z	    partNumber,
2025-09-16T23:46:04.082113Z	    "slug": slug.current,
2025-09-16T23:46:04.082174Z	    title,
2025-09-16T23:46:04.082234Z	    shortDescription,
2025-09-16T23:46:04.082295Z	    image,
2025-09-16T23:46:04.082359Z	    brand->{
2025-09-16T23:46:04.082424Z	      name,
2025-09-16T23:46:04.082495Z	      "slug": slug.current,
2025-09-16T23:46:04.082558Z	      logo
2025-09-16T23:46:04.082615Z	    },
2025-09-16T23:46:04.082682Z	    category->{
2025-09-16T23:46:04.082765Z	      name,
2025-09-16T23:46:04.082823Z	      "slug": slug.current
2025-09-16T23:46:04.082881Z	    },
2025-09-16T23:46:04.082938Z	    pricing{
2025-09-16T23:46:04.083006Z	      currency,
2025-09-16T23:46:04.08307Z	      tiers[]{
2025-09-16T23:46:04.083129Z	        quantity,
2025-09-16T23:46:04.083185Z	        price,
2025-09-16T23:46:04.083247Z	        unit
2025-09-16T23:46:04.083304Z	      },
2025-09-16T23:46:04.08336Z	      moq,
2025-09-16T23:46:04.083428Z	      leadTime,
2025-09-16T23:46:04.083497Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.083557Z	      "price": tiers[0].price,
2025-09-16T23:46:04.083623Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.083699Z	    },
2025-09-16T23:46:04.084391Z	    inventory{
2025-09-16T23:46:04.084487Z	      quantity,
2025-09-16T23:46:04.084552Z	      status,
2025-09-16T23:46:04.084616Z	      warehouse,
2025-09-16T23:46:04.084685Z	      lastUpdated,
2025-09-16T23:46:04.084745Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.08481Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.084866Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.084923Z	    },
2025-09-16T23:46:04.084983Z	    isActive,
2025-09-16T23:46:04.085044Z	    isFeatured,
2025-09-16T23:46:04.085106Z	    isNew,
2025-09-16T23:46:04.085175Z	    _createdAt,
2025-09-16T23:46:04.085236Z	    _updatedAt
2025-09-16T23:46:04.085292Z	  
2025-09-16T23:46:04.085348Z	      },
2025-09-16T23:46:04.085406Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:46:04.085494Z	    }
2025-09-16T23:46:04.085561Z	  
2025-09-16T23:46:04.085617Z	Query parameters: {
2025-09-16T23:46:04.085682Z	  limit: 8,
2025-09-16T23:46:04.085743Z	  offset: 0,
2025-09-16T23:46:04.085799Z	  category: undefined,
2025-09-16T23:46:04.085854Z	  brand: 'qualcomm',
2025-09-16T23:46:04.085909Z	  featured: undefined
2025-09-16T23:46:04.085963Z	}
2025-09-16T23:46:04.086027Z	Fetching solutions with query: 
2025-09-16T23:46:04.086083Z	    {
2025-09-16T23:46:04.086138Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.086195Z	        
2025-09-16T23:46:04.086251Z	    _id,
2025-09-16T23:46:04.086315Z	    title,
2025-09-16T23:46:04.086378Z	    "slug": slug.current,
2025-09-16T23:46:04.086444Z	    summary,
2025-09-16T23:46:04.086513Z	    description,
2025-09-16T23:46:04.08657Z	    coverImage,
2025-09-16T23:46:04.086734Z	    primaryBrand->{
2025-09-16T23:46:04.086904Z	      _id,
2025-09-16T23:46:04.087086Z	      name,
2025-09-16T23:46:04.087172Z	      "slug": slug.current,
2025-09-16T23:46:04.087257Z	      logo
2025-09-16T23:46:04.087368Z	    },
2025-09-16T23:46:04.08745Z	    relatedBrands[]->{
2025-09-16T23:46:04.087541Z	      _id,
2025-09-16T23:46:04.087664Z	      name,
2025-09-16T23:46:04.087909Z	      "slug": slug.current,
2025-09-16T23:46:04.088001Z	      logo
2025-09-16T23:46:04.088099Z	    },
2025-09-16T23:46:04.088191Z	    targetMarket,
2025-09-16T23:46:04.088325Z	    complexity,
2025-09-16T23:46:04.088428Z	    publishedAt,
2025-09-16T23:46:04.08849Z	    isPublished,
2025-09-16T23:46:04.088624Z	    isFeatured,
2025-09-16T23:46:04.088748Z	    viewCount,
2025-09-16T23:46:04.088836Z	    _createdAt,
2025-09-16T23:46:04.088896Z	    _updatedAt
2025-09-16T23:46:04.089002Z	  
2025-09-16T23:46:04.089108Z	      },
2025-09-16T23:46:04.089182Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:46:04.089314Z	    }
2025-09-16T23:46:04.089436Z	  
2025-09-16T23:46:04.089549Z	Query parameters: {
2025-09-16T23:46:04.08971Z	  limit: 4,
2025-09-16T23:46:04.089796Z	  offset: 0,
2025-09-16T23:46:04.089918Z	  targetMarket: undefined,
2025-09-16T23:46:04.090021Z	  brand: 'qualcomm',
2025-09-16T23:46:04.090127Z	  featured: undefined
2025-09-16T23:46:04.090244Z	}
2025-09-16T23:46:04.090366Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:46:04.090481Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.090566Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.090752Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-16T23:46:04.090857Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-16T23:46:04.090975Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.091093Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.091214Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.091331Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.091461Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-16T23:46:04.091779Z	Fetching products with query: 
2025-09-16T23:46:04.091909Z	    {
2025-09-16T23:46:04.092009Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.092101Z	        
2025-09-16T23:46:04.092183Z	    _id,
2025-09-16T23:46:04.092256Z	    _type,
2025-09-16T23:46:04.092401Z	    partNumber,
2025-09-16T23:46:04.092501Z	    "slug": slug.current,
2025-09-16T23:46:04.092601Z	    title,
2025-09-16T23:46:04.092776Z	    shortDescription,
2025-09-16T23:46:04.092901Z	    image,
2025-09-16T23:46:04.093001Z	    brand->{
2025-09-16T23:46:04.093115Z	      name,
2025-09-16T23:46:04.093239Z	      "slug": slug.current,
2025-09-16T23:46:04.093347Z	      logo
2025-09-16T23:46:04.093459Z	    },
2025-09-16T23:46:04.093553Z	    category->{
2025-09-16T23:46:04.09364Z	      name,
2025-09-16T23:46:04.093798Z	      "slug": slug.current
2025-09-16T23:46:04.093906Z	    },
2025-09-16T23:46:04.094005Z	    pricing{
2025-09-16T23:46:04.094112Z	      currency,
2025-09-16T23:46:04.094255Z	      tiers[]{
2025-09-16T23:46:04.094339Z	        quantity,
2025-09-16T23:46:04.094465Z	        price,
2025-09-16T23:46:04.094686Z	        unit
2025-09-16T23:46:04.094776Z	      },
2025-09-16T23:46:04.094909Z	      moq,
2025-09-16T23:46:04.094986Z	      leadTime,
2025-09-16T23:46:04.095086Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.095212Z	      "price": tiers[0].price,
2025-09-16T23:46:04.095373Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.095453Z	    },
2025-09-16T23:46:04.095516Z	    inventory{
2025-09-16T23:46:04.095734Z	      quantity,
2025-09-16T23:46:04.095864Z	      status,
2025-09-16T23:46:04.096019Z	      warehouse,
2025-09-16T23:46:04.096144Z	      lastUpdated,
2025-09-16T23:46:04.096274Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.09641Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.096543Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.096733Z	    },
2025-09-16T23:46:04.096851Z	    isActive,
2025-09-16T23:46:04.097023Z	    isFeatured,
2025-09-16T23:46:04.097205Z	    isNew,
2025-09-16T23:46:04.097348Z	    _createdAt,
2025-09-16T23:46:04.097483Z	    _updatedAt
2025-09-16T23:46:04.097652Z	  
2025-09-16T23:46:04.097816Z	      },
2025-09-16T23:46:04.097924Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-16T23:46:04.098021Z	    }
2025-09-16T23:46:04.098113Z	  
2025-09-16T23:46:04.098275Z	Query parameters: {
2025-09-16T23:46:04.098418Z	  limit: 8,
2025-09-16T23:46:04.09857Z	  offset: 0,
2025-09-16T23:46:04.098748Z	  category: undefined,
2025-09-16T23:46:04.098907Z	  brand: 'semikron',
2025-09-16T23:46:04.099031Z	  featured: undefined
2025-09-16T23:46:04.099115Z	}
2025-09-16T23:46:04.099281Z	Fetching solutions with query: 
2025-09-16T23:46:04.099357Z	    {
2025-09-16T23:46:04.099459Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.099575Z	        
2025-09-16T23:46:04.099694Z	    _id,
2025-09-16T23:46:04.099797Z	    title,
2025-09-16T23:46:04.099899Z	    "slug": slug.current,
2025-09-16T23:46:04.100023Z	    summary,
2025-09-16T23:46:04.100146Z	    description,
2025-09-16T23:46:04.100296Z	    coverImage,
2025-09-16T23:46:04.100378Z	    primaryBrand->{
2025-09-16T23:46:04.100517Z	      _id,
2025-09-16T23:46:04.10061Z	      name,
2025-09-16T23:46:04.100767Z	      "slug": slug.current,
2025-09-16T23:46:04.100843Z	      logo
2025-09-16T23:46:04.100902Z	    },
2025-09-16T23:46:04.101013Z	    relatedBrands[]->{
2025-09-16T23:46:04.101123Z	      _id,
2025-09-16T23:46:04.10126Z	      name,
2025-09-16T23:46:04.101412Z	      "slug": slug.current,
2025-09-16T23:46:04.101532Z	      logo
2025-09-16T23:46:04.101737Z	    },
2025-09-16T23:46:04.101878Z	    targetMarket,
2025-09-16T23:46:04.102022Z	    complexity,
2025-09-16T23:46:04.102126Z	    publishedAt,
2025-09-16T23:46:04.102262Z	    isPublished,
2025-09-16T23:46:04.102413Z	    isFeatured,
2025-09-16T23:46:04.102514Z	    viewCount,
2025-09-16T23:46:04.102665Z	    _createdAt,
2025-09-16T23:46:04.102841Z	    _updatedAt
2025-09-16T23:46:04.103004Z	  
2025-09-16T23:46:04.103079Z	      },
2025-09-16T23:46:04.103145Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-16T23:46:04.103306Z	    }
2025-09-16T23:46:04.103443Z	  
2025-09-16T23:46:04.103572Z	Query parameters: {
2025-09-16T23:46:04.103737Z	  limit: 4,
2025-09-16T23:46:04.103815Z	  offset: 0,
2025-09-16T23:46:04.103889Z	  targetMarket: undefined,
2025-09-16T23:46:04.103993Z	  brand: 'semikron',
2025-09-16T23:46:04.104181Z	  featured: undefined
2025-09-16T23:46:04.10427Z	}
2025-09-16T23:46:04.104378Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-16T23:46:04.104512Z	Fetching products with query: 
2025-09-16T23:46:04.104697Z	    {
2025-09-16T23:46:04.104829Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.104947Z	        
2025-09-16T23:46:04.105074Z	    _id,
2025-09-16T23:46:04.105205Z	    _type,
2025-09-16T23:46:04.105344Z	    partNumber,
2025-09-16T23:46:04.105481Z	    "slug": slug.current,
2025-09-16T23:46:04.105629Z	    title,
2025-09-16T23:46:04.105793Z	    shortDescription,
2025-09-16T23:46:04.105951Z	    image,
2025-09-16T23:46:04.106027Z	    brand->{
2025-09-16T23:46:04.10616Z	      name,
2025-09-16T23:46:04.106297Z	      "slug": slug.current,
2025-09-16T23:46:04.106441Z	      logo
2025-09-16T23:46:04.106587Z	    },
2025-09-16T23:46:04.106703Z	    category->{
2025-09-16T23:46:04.106838Z	      name,
2025-09-16T23:46:04.107003Z	      "slug": slug.current
2025-09-16T23:46:04.107074Z	    },
2025-09-16T23:46:04.107165Z	    pricing{
2025-09-16T23:46:04.107286Z	      currency,
2025-09-16T23:46:04.107406Z	      tiers[]{
2025-09-16T23:46:04.107612Z	        quantity,
2025-09-16T23:46:04.107757Z	        price,
2025-09-16T23:46:04.107867Z	        unit
2025-09-16T23:46:04.107989Z	      },
2025-09-16T23:46:04.108096Z	      moq,
2025-09-16T23:46:04.108196Z	      leadTime,
2025-09-16T23:46:04.108293Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.108404Z	      "price": tiers[0].price,
2025-09-16T23:46:04.108571Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.108689Z	    },
2025-09-16T23:46:04.108792Z	    inventory{
2025-09-16T23:46:04.108888Z	      quantity,
2025-09-16T23:46:04.108991Z	      status,
2025-09-16T23:46:04.109156Z	      warehouse,
2025-09-16T23:46:04.10926Z	      lastUpdated,
2025-09-16T23:46:04.109388Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.109507Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.109615Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.109753Z	    },
2025-09-16T23:46:04.109894Z	    isActive,
2025-09-16T23:46:04.110057Z	    isFeatured,
2025-09-16T23:46:04.110197Z	    isNew,
2025-09-16T23:46:04.110298Z	    _createdAt,
2025-09-16T23:46:04.110439Z	    _updatedAt
2025-09-16T23:46:04.110557Z	  
2025-09-16T23:46:04.110651Z	      },
2025-09-16T23:46:04.110801Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-16T23:46:04.110888Z	    }
2025-09-16T23:46:04.110961Z	  
2025-09-16T23:46:04.111058Z	Query parameters: {
2025-09-16T23:46:04.111237Z	  limit: 8,
2025-09-16T23:46:04.11138Z	  offset: 0,
2025-09-16T23:46:04.111545Z	  category: undefined,
2025-09-16T23:46:04.111706Z	  brand: 'semikron',
2025-09-16T23:46:04.111817Z	  featured: undefined
2025-09-16T23:46:04.111952Z	}
2025-09-16T23:46:04.112068Z	Fetching solutions with query: 
2025-09-16T23:46:04.112209Z	    {
2025-09-16T23:46:04.112367Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.112485Z	        
2025-09-16T23:46:04.112583Z	    _id,
2025-09-16T23:46:04.112704Z	    title,
2025-09-16T23:46:04.112784Z	    "slug": slug.current,
2025-09-16T23:46:04.112912Z	    summary,
2025-09-16T23:46:04.113035Z	    description,
2025-09-16T23:46:04.113204Z	    coverImage,
2025-09-16T23:46:04.113362Z	    primaryBrand->{
2025-09-16T23:46:04.113477Z	      _id,
2025-09-16T23:46:04.113579Z	      name,
2025-09-16T23:46:04.113711Z	      "slug": slug.current,
2025-09-16T23:46:04.113814Z	      logo
2025-09-16T23:46:04.113904Z	    },
2025-09-16T23:46:04.114012Z	    relatedBrands[]->{
2025-09-16T23:46:04.114109Z	      _id,
2025-09-16T23:46:04.114209Z	      name,
2025-09-16T23:46:04.114392Z	      "slug": slug.current,
2025-09-16T23:46:04.114516Z	      logo
2025-09-16T23:46:04.114624Z	    },
2025-09-16T23:46:04.114786Z	    targetMarket,
2025-09-16T23:46:04.114975Z	    complexity,
2025-09-16T23:46:04.115047Z	    publishedAt,
2025-09-16T23:46:04.115169Z	    isPublished,
2025-09-16T23:46:04.115254Z	    isFeatured,
2025-09-16T23:46:04.115425Z	    viewCount,
2025-09-16T23:46:04.115499Z	    _createdAt,
2025-09-16T23:46:04.115611Z	    _updatedAt
2025-09-16T23:46:04.115784Z	  
2025-09-16T23:46:04.115907Z	      },
2025-09-16T23:46:04.116019Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-16T23:46:04.11612Z	    }
2025-09-16T23:46:04.116248Z	  
2025-09-16T23:46:04.116355Z	Query parameters: {
2025-09-16T23:46:04.116519Z	  limit: 4,
2025-09-16T23:46:04.116627Z	  offset: 0,
2025-09-16T23:46:04.116809Z	  targetMarket: undefined,
2025-09-16T23:46:04.116926Z	  brand: 'semikron',
2025-09-16T23:46:04.117009Z	  featured: undefined
2025-09-16T23:46:04.117102Z	}
2025-09-16T23:46:04.117215Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-16T23:46:04.11732Z	Fetching products with query: 
2025-09-16T23:46:04.11743Z	    {
2025-09-16T23:46:04.117534Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.11762Z	        
2025-09-16T23:46:04.117763Z	    _id,
2025-09-16T23:46:04.117906Z	    _type,
2025-09-16T23:46:04.118081Z	    partNumber,
2025-09-16T23:46:04.118154Z	    "slug": slug.current,
2025-09-16T23:46:04.118217Z	    title,
2025-09-16T23:46:04.118419Z	    shortDescription,
2025-09-16T23:46:04.118498Z	    image,
2025-09-16T23:46:04.118612Z	    brand->{
2025-09-16T23:46:04.118762Z	      name,
2025-09-16T23:46:04.118877Z	      "slug": slug.current,
2025-09-16T23:46:04.119004Z	      logo
2025-09-16T23:46:04.119121Z	    },
2025-09-16T23:46:04.119264Z	    category->{
2025-09-16T23:46:04.119382Z	      name,
2025-09-16T23:46:04.119503Z	      "slug": slug.current
2025-09-16T23:46:04.119621Z	    },
2025-09-16T23:46:04.119796Z	    pricing{
2025-09-16T23:46:04.119933Z	      currency,
2025-09-16T23:46:04.120084Z	      tiers[]{
2025-09-16T23:46:04.120239Z	        quantity,
2025-09-16T23:46:04.120344Z	        price,
2025-09-16T23:46:04.120453Z	        unit
2025-09-16T23:46:04.120565Z	      },
2025-09-16T23:46:04.120687Z	      moq,
2025-09-16T23:46:04.120789Z	      leadTime,
2025-09-16T23:46:04.120903Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.121007Z	      "price": tiers[0].price,
2025-09-16T23:46:04.121131Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.121259Z	    },
2025-09-16T23:46:04.121382Z	    inventory{
2025-09-16T23:46:04.121515Z	      quantity,
2025-09-16T23:46:04.121683Z	      status,
2025-09-16T23:46:04.12181Z	      warehouse,
2025-09-16T23:46:04.121939Z	      lastUpdated,
2025-09-16T23:46:04.122058Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.122159Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.122271Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.122383Z	    },
2025-09-16T23:46:04.122482Z	    isActive,
2025-09-16T23:46:04.122585Z	    isFeatured,
2025-09-16T23:46:04.122705Z	    isNew,
2025-09-16T23:46:04.122813Z	    _createdAt,
2025-09-16T23:46:04.122908Z	    _updatedAt
2025-09-16T23:46:04.123002Z	  
2025-09-16T23:46:04.123071Z	      },
2025-09-16T23:46:04.123128Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-16T23:46:04.123195Z	    }
2025-09-16T23:46:04.123256Z	  
2025-09-16T23:46:04.123315Z	Query parameters: {
2025-09-16T23:46:04.123368Z	  limit: 8,
2025-09-16T23:46:04.123428Z	  offset: 0,
2025-09-16T23:46:04.123503Z	  category: undefined,
2025-09-16T23:46:04.123603Z	  brand: 'pi',
2025-09-16T23:46:04.123734Z	  featured: undefined
2025-09-16T23:46:04.123826Z	}
2025-09-16T23:46:04.123925Z	Fetching solutions with query: 
2025-09-16T23:46:04.124034Z	    {
2025-09-16T23:46:04.124131Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.124355Z	        
2025-09-16T23:46:04.124538Z	    _id,
2025-09-16T23:46:04.124767Z	    title,
2025-09-16T23:46:04.124979Z	    "slug": slug.current,
2025-09-16T23:46:04.125093Z	    summary,
2025-09-16T23:46:04.125186Z	    description,
2025-09-16T23:46:04.12526Z	    coverImage,
2025-09-16T23:46:04.125333Z	    primaryBrand->{
2025-09-16T23:46:04.125428Z	      _id,
2025-09-16T23:46:04.125529Z	      name,
2025-09-16T23:46:04.125636Z	      "slug": slug.current,
2025-09-16T23:46:04.125762Z	      logo
2025-09-16T23:46:04.125862Z	    },
2025-09-16T23:46:04.125958Z	    relatedBrands[]->{
2025-09-16T23:46:04.126056Z	      _id,
2025-09-16T23:46:04.126176Z	      name,
2025-09-16T23:46:04.126287Z	      "slug": slug.current,
2025-09-16T23:46:04.126409Z	      logo
2025-09-16T23:46:04.126482Z	    },
2025-09-16T23:46:04.126538Z	    targetMarket,
2025-09-16T23:46:04.126647Z	    complexity,
2025-09-16T23:46:04.126773Z	    publishedAt,
2025-09-16T23:46:04.126893Z	    isPublished,
2025-09-16T23:46:04.12697Z	    isFeatured,
2025-09-16T23:46:04.12705Z	    viewCount,
2025-09-16T23:46:04.127144Z	    _createdAt,
2025-09-16T23:46:04.12724Z	    _updatedAt
2025-09-16T23:46:04.127372Z	  
2025-09-16T23:46:04.127458Z	      },
2025-09-16T23:46:04.127562Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-16T23:46:04.127697Z	    }
2025-09-16T23:46:04.127785Z	  
2025-09-16T23:46:04.127844Z	Query parameters: {
2025-09-16T23:46:04.12791Z	  limit: 4,
2025-09-16T23:46:04.128024Z	  offset: 0,
2025-09-16T23:46:04.128127Z	  targetMarket: undefined,
2025-09-16T23:46:04.128229Z	  brand: 'pi',
2025-09-16T23:46:04.128342Z	  featured: undefined
2025-09-16T23:46:04.128453Z	}
2025-09-16T23:46:04.128562Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-16T23:46:04.128712Z	Fetching products with query: 
2025-09-16T23:46:04.128816Z	    {
2025-09-16T23:46:04.128944Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.129101Z	        
2025-09-16T23:46:04.129191Z	    _id,
2025-09-16T23:46:04.129291Z	    _type,
2025-09-16T23:46:04.129432Z	    partNumber,
2025-09-16T23:46:04.129556Z	    "slug": slug.current,
2025-09-16T23:46:04.129717Z	    title,
2025-09-16T23:46:04.12984Z	    shortDescription,
2025-09-16T23:46:04.129947Z	    image,
2025-09-16T23:46:04.130109Z	    brand->{
2025-09-16T23:46:04.130193Z	      name,
2025-09-16T23:46:04.130442Z	      "slug": slug.current,
2025-09-16T23:46:04.130535Z	      logo
2025-09-16T23:46:04.130644Z	    },
2025-09-16T23:46:04.130815Z	    category->{
2025-09-16T23:46:04.130937Z	      name,
2025-09-16T23:46:04.131054Z	      "slug": slug.current
2025-09-16T23:46:04.131198Z	    },
2025-09-16T23:46:04.131297Z	    pricing{
2025-09-16T23:46:04.131414Z	      currency,
2025-09-16T23:46:04.131548Z	      tiers[]{
2025-09-16T23:46:04.131718Z	        quantity,
2025-09-16T23:46:04.13185Z	        price,
2025-09-16T23:46:04.131986Z	        unit
2025-09-16T23:46:04.13208Z	      },
2025-09-16T23:46:04.132185Z	      moq,
2025-09-16T23:46:04.132559Z	      leadTime,
2025-09-16T23:46:04.132717Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.132827Z	      "price": tiers[0].price,
2025-09-16T23:46:04.13318Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.133517Z	    },
2025-09-16T23:46:04.133829Z	    inventory{
2025-09-16T23:46:04.133928Z	      quantity,
2025-09-16T23:46:04.134031Z	      status,
2025-09-16T23:46:04.134139Z	      warehouse,
2025-09-16T23:46:04.134388Z	      lastUpdated,
2025-09-16T23:46:04.134503Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.1346Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.134814Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.134888Z	    },
2025-09-16T23:46:04.134965Z	    isActive,
2025-09-16T23:46:04.13508Z	    isFeatured,
2025-09-16T23:46:04.135178Z	    isNew,
2025-09-16T23:46:04.13529Z	    _createdAt,
2025-09-16T23:46:04.135399Z	    _updatedAt
2025-09-16T23:46:04.135503Z	  
2025-09-16T23:46:04.135599Z	      },
2025-09-16T23:46:04.135737Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-16T23:46:04.135851Z	    }
2025-09-16T23:46:04.135962Z	  
2025-09-16T23:46:04.136059Z	Query parameters: {
2025-09-16T23:46:04.136163Z	  limit: 8,
2025-09-16T23:46:04.136283Z	  offset: 0,
2025-09-16T23:46:04.136392Z	  category: undefined,
2025-09-16T23:46:04.136486Z	  brand: 'pi',
2025-09-16T23:46:04.136578Z	  featured: undefined
2025-09-16T23:46:04.136719Z	}
2025-09-16T23:46:04.136826Z	Fetching solutions with query: 
2025-09-16T23:46:04.136912Z	    {
2025-09-16T23:46:04.137051Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.137127Z	        
2025-09-16T23:46:04.137197Z	    _id,
2025-09-16T23:46:04.137346Z	    title,
2025-09-16T23:46:04.137479Z	    "slug": slug.current,
2025-09-16T23:46:04.137575Z	    summary,
2025-09-16T23:46:04.13773Z	    description,
2025-09-16T23:46:04.137845Z	    coverImage,
2025-09-16T23:46:04.137955Z	    primaryBrand->{
2025-09-16T23:46:04.138054Z	      _id,
2025-09-16T23:46:04.138184Z	      name,
2025-09-16T23:46:04.138288Z	      "slug": slug.current,
2025-09-16T23:46:04.138422Z	      logo
2025-09-16T23:46:04.138597Z	    },
2025-09-16T23:46:04.13873Z	    relatedBrands[]->{
2025-09-16T23:46:04.138857Z	      _id,
2025-09-16T23:46:04.138985Z	      name,
2025-09-16T23:46:04.139085Z	      "slug": slug.current,
2025-09-16T23:46:04.139183Z	      logo
2025-09-16T23:46:04.139347Z	    },
2025-09-16T23:46:04.139474Z	    targetMarket,
2025-09-16T23:46:04.13963Z	    complexity,
2025-09-16T23:46:04.139767Z	    publishedAt,
2025-09-16T23:46:04.13987Z	    isPublished,
2025-09-16T23:46:04.13995Z	    isFeatured,
2025-09-16T23:46:04.140094Z	    viewCount,
2025-09-16T23:46:04.14023Z	    _createdAt,
2025-09-16T23:46:04.140327Z	    _updatedAt
2025-09-16T23:46:04.140414Z	  
2025-09-16T23:46:04.140532Z	      },
2025-09-16T23:46:04.140697Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-16T23:46:04.140829Z	    }
2025-09-16T23:46:04.140991Z	  
2025-09-16T23:46:04.141106Z	Query parameters: {
2025-09-16T23:46:04.141216Z	  limit: 4,
2025-09-16T23:46:04.141317Z	  offset: 0,
2025-09-16T23:46:04.141424Z	  targetMarket: undefined,
2025-09-16T23:46:04.141526Z	  brand: 'pi',
2025-09-16T23:46:04.141791Z	  featured: undefined
2025-09-16T23:46:04.14191Z	}
2025-09-16T23:46:04.142034Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:04.142156Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.142235Z	SolutError fetching article data: l [SanityError]: Article not found
2025-09-16T23:46:04.142318Z	    at l (/opt/buildhome/repo/.next/server/chunks/439.js:210:70)
2025-09-16T23:46:04.142434Z	    at async v (/opt/buildhome/repo/.next/server/app/[locale]/articles/[slug]/page.js:1:4853) {
2025-09-16T23:46:04.142535Z	  code: 'ARTICLE_NOT_FOUND'
2025-09-16T23:46:04.142637Z	}
2025-09-16T23:46:04.142755Z	Error fetching article data: l [SanityError]: Article not found
2025-09-16T23:46:04.142857Z	    at l (/opt/buildhome/repo/.next/server/chunks/439.js:210:70)
2025-09-16T23:46:04.142964Z	    at async v (/opt/buildhome/repo/.next/server/app/[locale]/articles/[slug]/page.js:1:4853) {
2025-09-16T23:46:04.143078Z	  code: 'ARTICLE_NOT_FOUND'
2025-09-16T23:46:04.143177Z	}
2025-09-16T23:46:04.143284Z	ions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.143418Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:04.143537Z	Fetching products with query: 
2025-09-16T23:46:04.143637Z	    {
2025-09-16T23:46:04.143748Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.143851Z	        
2025-09-16T23:46:04.143943Z	    _id,
2025-09-16T23:46:04.144035Z	    _type,
2025-09-16T23:46:04.144125Z	    partNumber,
2025-09-16T23:46:04.14423Z	    "slug": slug.current,
2025-09-16T23:46:04.144347Z	    title,
2025-09-16T23:46:04.144427Z	    shortDescription,
2025-09-16T23:46:04.144527Z	    image,
2025-09-16T23:46:04.144631Z	    brand->{
2025-09-16T23:46:04.144746Z	      name,
2025-09-16T23:46:04.144841Z	      "slug": slug.current,
2025-09-16T23:46:04.14494Z	      logo
2025-09-16T23:46:04.145041Z	    },
2025-09-16T23:46:04.145171Z	    category->{
2025-09-16T23:46:04.14527Z	      name,
2025-09-16T23:46:04.145401Z	      "slug": slug.current
2025-09-16T23:46:04.145499Z	    },
2025-09-16T23:46:04.145595Z	    pricing{
2025-09-16T23:46:04.145717Z	      currency,
2025-09-16T23:46:04.145833Z	      tiers[]{
2025-09-16T23:46:04.145935Z	        quantity,
2025-09-16T23:46:04.146028Z	        price,
2025-09-16T23:46:04.146135Z	        unit
2025-09-16T23:46:04.146239Z	      },
2025-09-16T23:46:04.14634Z	      moq,
2025-09-16T23:46:04.146438Z	      leadTime,
2025-09-16T23:46:04.146532Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.14663Z	      "price": tiers[0].price,
2025-09-16T23:46:04.146741Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.146825Z	    },
2025-09-16T23:46:04.146883Z	    inventory{
2025-09-16T23:46:04.146982Z	      quantity,
2025-09-16T23:46:04.147277Z	      status,
2025-09-16T23:46:04.147421Z	      warehouse,
2025-09-16T23:46:04.147502Z	      lastUpdated,
2025-09-16T23:46:04.147586Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.147746Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.147821Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.147881Z	    },
2025-09-16T23:46:04.147936Z	    isActive,
2025-09-16T23:46:04.148045Z	    isFeatured,
2025-09-16T23:46:04.148138Z	    isNew,
2025-09-16T23:46:04.148315Z	    _createdAt,
2025-09-16T23:46:04.148404Z	    _updatedAt
2025-09-16T23:46:04.148556Z	  
2025-09-16T23:46:04.148719Z	      },
2025-09-16T23:46:04.148803Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-16T23:46:04.148889Z	    }
2025-09-16T23:46:04.149032Z	  
2025-09-16T23:46:04.149127Z	Query parameters: {
2025-09-16T23:46:04.149251Z	  limit: 8,
2025-09-16T23:46:04.149385Z	  offset: 0,
2025-09-16T23:46:04.149485Z	  category: undefined,
2025-09-16T23:46:04.149619Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:04.149766Z	  featured: undefined
2025-09-16T23:46:04.149841Z	}
2025-09-16T23:46:04.149914Z	Fetching solutions with query: 
2025-09-16T23:46:04.150021Z	    {
2025-09-16T23:46:04.150117Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.150241Z	        
2025-09-16T23:46:04.150347Z	    _id,
2025-09-16T23:46:04.150419Z	    title,
2025-09-16T23:46:04.150509Z	    "slug": slug.current,
2025-09-16T23:46:04.150612Z	    summary,
2025-09-16T23:46:04.150724Z	    description,
2025-09-16T23:46:04.150853Z	    coverImage,
2025-09-16T23:46:04.150952Z	    primaryBrand->{
2025-09-16T23:46:04.151044Z	      _id,
2025-09-16T23:46:04.151148Z	      name,
2025-09-16T23:46:04.151245Z	      "slug": slug.current,
2025-09-16T23:46:04.151341Z	      logo
2025-09-16T23:46:04.151452Z	    },
2025-09-16T23:46:04.151556Z	    relatedBrands[]->{
2025-09-16T23:46:04.15166Z	      _id,
2025-09-16T23:46:04.151784Z	      name,
2025-09-16T23:46:04.151881Z	      "slug": slug.current,
2025-09-16T23:46:04.151987Z	      logo
2025-09-16T23:46:04.15209Z	    },
2025-09-16T23:46:04.152188Z	    targetMarket,
2025-09-16T23:46:04.15229Z	    complexity,
2025-09-16T23:46:04.152383Z	    publishedAt,
2025-09-16T23:46:04.152485Z	    isPublished,
2025-09-16T23:46:04.1526Z	    isFeatured,
2025-09-16T23:46:04.152728Z	    viewCount,
2025-09-16T23:46:04.152829Z	    _createdAt,
2025-09-16T23:46:04.152928Z	    _updatedAt
2025-09-16T23:46:04.153052Z	  
2025-09-16T23:46:04.153155Z	      },
2025-09-16T23:46:04.153254Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-16T23:46:04.153367Z	    }
2025-09-16T23:46:04.153478Z	  
2025-09-16T23:46:04.153583Z	Query parameters: {
2025-09-16T23:46:04.153708Z	  limit: 4,
2025-09-16T23:46:04.153811Z	  offset: 0,
2025-09-16T23:46:04.153909Z	  targetMarket: undefined,
2025-09-16T23:46:04.154003Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:04.154109Z	  featured: undefined
2025-09-16T23:46:04.154375Z	}
2025-09-16T23:46:04.15447Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:04.154558Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.154749Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.15489Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:46:04.154979Z	Fetching products with query: 
2025-09-16T23:46:04.1551Z	    {
2025-09-16T23:46:04.15521Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.155313Z	        
2025-09-16T23:46:04.155421Z	    _id,
2025-09-16T23:46:04.155528Z	    _type,
2025-09-16T23:46:04.155638Z	    partNumber,
2025-09-16T23:46:04.155765Z	    "slug": slug.current,
2025-09-16T23:46:04.155872Z	    title,
2025-09-16T23:46:04.155976Z	    shortDescription,
2025-09-16T23:46:04.156075Z	    image,
2025-09-16T23:46:04.156186Z	    brand->{
2025-09-16T23:46:04.156287Z	      name,
2025-09-16T23:46:04.156381Z	      "slug": slug.current,
2025-09-16T23:46:04.156524Z	      logo
2025-09-16T23:46:04.15662Z	    },
2025-09-16T23:46:04.156749Z	    category->{
2025-09-16T23:46:04.156849Z	      name,
2025-09-16T23:46:04.156956Z	      "slug": slug.current
2025-09-16T23:46:04.157069Z	    },
2025-09-16T23:46:04.15717Z	    pricing{
2025-09-16T23:46:04.157264Z	      currency,
2025-09-16T23:46:04.157367Z	      tiers[]{
2025-09-16T23:46:04.157473Z	        quantity,
2025-09-16T23:46:04.157575Z	        price,
2025-09-16T23:46:04.15769Z	        unit
2025-09-16T23:46:04.157791Z	      },
2025-09-16T23:46:04.157889Z	      moq,
2025-09-16T23:46:04.157989Z	      leadTime,
2025-09-16T23:46:04.158109Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.158239Z	      "price": tiers[0].price,
2025-09-16T23:46:04.158335Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.158435Z	    },
2025-09-16T23:46:04.158561Z	    inventory{
2025-09-16T23:46:04.158686Z	      quantity,
2025-09-16T23:46:04.158792Z	      status,
2025-09-16T23:46:04.158881Z	      warehouse,
2025-09-16T23:46:04.158982Z	      lastUpdated,
2025-09-16T23:46:04.159089Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.159198Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.159329Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.159427Z	    },
2025-09-16T23:46:04.159494Z	    isActive,
2025-09-16T23:46:04.159651Z	    isFeatured,
2025-09-16T23:46:04.159758Z	    isNew,
2025-09-16T23:46:04.159865Z	    _createdAt,
2025-09-16T23:46:04.159947Z	    _updatedAt
2025-09-16T23:46:04.160125Z	  
2025-09-16T23:46:04.160254Z	      },
2025-09-16T23:46:04.160345Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:46:04.160493Z	    }
2025-09-16T23:46:04.160573Z	  
2025-09-16T23:46:04.160686Z	Query parameters: {
2025-09-16T23:46:04.161045Z	  limit: 8,
2025-09-16T23:46:04.161188Z	  offset: 0,
2025-09-16T23:46:04.161301Z	  category: undefined,
2025-09-16T23:46:04.161418Z	  brand: 'littelfuse',
2025-09-16T23:46:04.161519Z	  featured: undefined
2025-09-16T23:46:04.161641Z	}
2025-09-16T23:46:04.161777Z	Fetching solutions with query: 
2025-09-16T23:46:04.16186Z	    {
2025-09-16T23:46:04.161966Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.162074Z	        
2025-09-16T23:46:04.162176Z	    _id,
2025-09-16T23:46:04.162295Z	    title,
2025-09-16T23:46:04.162394Z	    "slug": slug.current,
2025-09-16T23:46:04.162488Z	    summary,
2025-09-16T23:46:04.162589Z	    description,
2025-09-16T23:46:04.162706Z	    coverImage,
2025-09-16T23:46:04.162808Z	    primaryBrand->{
2025-09-16T23:46:04.16292Z	      _id,
2025-09-16T23:46:04.163022Z	      name,
2025-09-16T23:46:04.163113Z	      "slug": slug.current,
2025-09-16T23:46:04.16319Z	      logo
2025-09-16T23:46:04.163294Z	    },
2025-09-16T23:46:04.163418Z	    relatedBrands[]->{
2025-09-16T23:46:04.163491Z	      _id,
2025-09-16T23:46:04.163576Z	      name,
2025-09-16T23:46:04.163667Z	      "slug": slug.current,
2025-09-16T23:46:04.163857Z	      logo
2025-09-16T23:46:04.163979Z	    },
2025-09-16T23:46:04.16414Z	    targetMarket,
2025-09-16T23:46:04.164243Z	    complexity,
2025-09-16T23:46:04.164332Z	    publishedAt,
2025-09-16T23:46:04.164517Z	    isPublished,
2025-09-16T23:46:04.164668Z	    isFeatured,
2025-09-16T23:46:04.164781Z	    viewCount,
2025-09-16T23:46:04.164878Z	    _createdAt,
2025-09-16T23:46:04.165027Z	    _updatedAt
2025-09-16T23:46:04.165182Z	  
2025-09-16T23:46:04.165264Z	      },
2025-09-16T23:46:04.165488Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:46:04.165595Z	    }
2025-09-16T23:46:04.165687Z	  
2025-09-16T23:46:04.165772Z	Query parameters: {
2025-09-16T23:46:04.165853Z	  limit: 4,
2025-09-16T23:46:04.165923Z	  offset: 0,
2025-09-16T23:46:04.16598Z	  targetMarket: undefined,
2025-09-16T23:46:04.16604Z	  brand: 'littelfuse',
2025-09-16T23:46:04.166098Z	  featured: undefined
2025-09-16T23:46:04.166155Z	}
2025-09-16T23:46:04.166212Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:46:04.166283Z	Fetching products with query: 
2025-09-16T23:46:04.166354Z	    {
2025-09-16T23:46:04.166413Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.166482Z	        
2025-09-16T23:46:04.166545Z	    _id,
2025-09-16T23:46:04.166616Z	    _type,
2025-09-16T23:46:04.166701Z	    partNumber,
2025-09-16T23:46:04.166773Z	    "slug": slug.current,
2025-09-16T23:46:04.166844Z	    title,
2025-09-16T23:46:04.166904Z	    shortDescription,
2025-09-16T23:46:04.166962Z	    image,
2025-09-16T23:46:04.167016Z	    brand->{
2025-09-16T23:46:04.167071Z	      name,
2025-09-16T23:46:04.167135Z	      "slug": slug.current,
2025-09-16T23:46:04.167197Z	      logo
2025-09-16T23:46:04.167261Z	    },
2025-09-16T23:46:04.167319Z	    category->{
2025-09-16T23:46:04.167377Z	      name,
2025-09-16T23:46:04.167439Z	      "slug": slug.current
2025-09-16T23:46:04.167924Z	    },
2025-09-16T23:46:04.168035Z	    pricing{
2025-09-16T23:46:04.1681Z	      currency,
2025-09-16T23:46:04.168449Z	      tiers[]{
2025-09-16T23:46:04.168561Z	        quantity,
2025-09-16T23:46:04.168633Z	        price,
2025-09-16T23:46:04.168737Z	        unit
2025-09-16T23:46:04.168836Z	      },
2025-09-16T23:46:04.168934Z	      moq,
2025-09-16T23:46:04.169027Z	      leadTime,
2025-09-16T23:46:04.169124Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.169262Z	      "price": tiers[0].price,
2025-09-16T23:46:04.169386Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.169497Z	    },
2025-09-16T23:46:04.169595Z	    inventory{
2025-09-16T23:46:04.169735Z	      quantity,
2025-09-16T23:46:04.169844Z	      status,
2025-09-16T23:46:04.169945Z	      warehouse,
2025-09-16T23:46:04.170035Z	      lastUpdated,
2025-09-16T23:46:04.170118Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.17029Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.170359Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.170489Z	    },
2025-09-16T23:46:04.170619Z	    isActive,
2025-09-16T23:46:04.170757Z	    isFeatured,
2025-09-16T23:46:04.170829Z	    isNew,
2025-09-16T23:46:04.170938Z	    _createdAt,
2025-09-16T23:46:04.171011Z	    _updatedAt
2025-09-16T23:46:04.17111Z	  
2025-09-16T23:46:04.171229Z	      },
2025-09-16T23:46:04.171302Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:46:04.171403Z	    }
2025-09-16T23:46:04.17172Z	  
2025-09-16T23:46:04.171937Z	Query parameters: {
2025-09-16T23:46:04.172044Z	  limit: 8,
2025-09-16T23:46:04.172394Z	  offset: 0,
2025-09-16T23:46:04.172488Z	  category: undefined,
2025-09-16T23:46:04.172622Z	  brand: 'littelfuse',
2025-09-16T23:46:04.172795Z	  featured: undefined
2025-09-16T23:46:04.172917Z	}
2025-09-16T23:46:04.173019Z	Fetching solutions with query: 
2025-09-16T23:46:04.173384Z	    {
2025-09-16T23:46:04.173494Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.173594Z	        
2025-09-16T23:46:04.173713Z	    _id,
2025-09-16T23:46:04.173838Z	    title,
2025-09-16T23:46:04.173983Z	    "slug": slug.current,
2025-09-16T23:46:04.174107Z	    summary,
2025-09-16T23:46:04.174257Z	    description,
2025-09-16T23:46:04.174439Z	    coverImage,
2025-09-16T23:46:04.174553Z	    primaryBrand->{
2025-09-16T23:46:04.174664Z	      _id,
2025-09-16T23:46:04.174797Z	      name,
2025-09-16T23:46:04.174917Z	      "slug": slug.current,
2025-09-16T23:46:04.17502Z	      logo
2025-09-16T23:46:04.175155Z	    },
2025-09-16T23:46:04.175266Z	    relatedBrands[]->{
2025-09-16T23:46:04.175367Z	      _id,
2025-09-16T23:46:04.175447Z	      name,
2025-09-16T23:46:04.175551Z	      "slug": slug.current,
2025-09-16T23:46:04.17565Z	      logo
2025-09-16T23:46:04.17578Z	    },
2025-09-16T23:46:04.175873Z	    targetMarket,
2025-09-16T23:46:04.176098Z	    complexity,
2025-09-16T23:46:04.176304Z	    publishedAt,
2025-09-16T23:46:04.176531Z	    isPublished,
2025-09-16T23:46:04.176624Z	    isFeatured,
2025-09-16T23:46:04.176876Z	    viewCount,
2025-09-16T23:46:04.177002Z	    _createdAt,
2025-09-16T23:46:04.177115Z	    _updatedAt
2025-09-16T23:46:04.177202Z	  
2025-09-16T23:46:04.177367Z	      },
2025-09-16T23:46:04.177464Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:46:04.177598Z	    }
2025-09-16T23:46:04.177746Z	  
2025-09-16T23:46:04.177813Z	Query parameters: {
2025-09-16T23:46:04.17805Z	  limit: 4,
2025-09-16T23:46:04.178143Z	  offset: 0,
2025-09-16T23:46:04.178231Z	  targetMarket: undefined,
2025-09-16T23:46:04.178599Z	  brand: 'littelfuse',
2025-09-16T23:46:04.178707Z	  featured: undefined
2025-09-16T23:46:04.179057Z	}
2025-09-16T23:46:04.179157Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:46:04.179369Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:46:04.1796Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.179724Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.180024Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.180103Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.180164Z	✅ [getBrandData] Found brand: LEM
2025-09-16T23:46:04.180385Z	Products fetch result: {
2025-09-16T23:46:04.18049Z	  totalProducts: 3,
2025-09-16T23:46:04.1807Z	  fetchedProducts: 3,
2025-09-16T23:46:04.1809Z	  firstProduct: {
2025-09-16T23:46:04.181001Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-16T23:46:04.181212Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-16T23:46:04.181509Z	    _type: 'product',
2025-09-16T23:46:04.181608Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-16T23:46:04.181924Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-16T23:46:04.18203Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-16T23:46:04.182142Z	    image: null,
2025-09-16T23:46:04.182245Z	    inventory: {
2025-09-16T23:46:04.182359Z	      inStock: true,
2025-09-16T23:46:04.182472Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-16T23:46:04.182659Z	      quantity: 0,
2025-09-16T23:46:04.182828Z	      status: 'in_stock',
2025-09-16T23:46:04.182953Z	      warehouse: null
2025-09-16T23:46:04.183083Z	    },
2025-09-16T23:46:04.183224Z	    isActive: true,
2025-09-16T23:46:04.183342Z	    isFeatured: false,
2025-09-16T23:46:04.183459Z	    isNew: false,
2025-09-16T23:46:04.183574Z	    partNumber: 'la55-p',
2025-09-16T23:46:04.183717Z	    pricing: {
2025-09-16T23:46:04.18385Z	      currency: 'CNY',
2025-09-16T23:46:04.183951Z	      leadTime: null,
2025-09-16T23:46:04.184027Z	      moq: null,
2025-09-16T23:46:04.184122Z	      price: null,
2025-09-16T23:46:04.18424Z	      tiers: null
2025-09-16T23:46:04.184339Z	    },
2025-09-16T23:46:04.184451Z	    shortDescription: '电流传感器la55-p',
2025-09-16T23:46:04.184608Z	    slug: 'la55-p',
2025-09-16T23:46:04.184757Z	    title: '电流传感器la55-p'
2025-09-16T23:46:04.184875Z	  }
2025-09-16T23:46:04.184983Z	}
2025-09-16T23:46:04.185088Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.185201Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-16T23:46:04.185312Z	Fetching products with query: 
2025-09-16T23:46:04.185444Z	    {
2025-09-16T23:46:04.185562Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.185687Z	        
2025-09-16T23:46:04.185813Z	    _id,
2025-09-16T23:46:04.185893Z	    _type,
2025-09-16T23:46:04.185984Z	    partNumber,
2025-09-16T23:46:04.186081Z	    "slug": slug.current,
2025-09-16T23:46:04.186191Z	    title,
2025-09-16T23:46:04.186285Z	    shortDescription,
2025-09-16T23:46:04.186378Z	    image,
2025-09-16T23:46:04.186484Z	    brand->{
2025-09-16T23:46:04.186576Z	      name,
2025-09-16T23:46:04.186692Z	      "slug": slug.current,
2025-09-16T23:46:04.186791Z	      logo
2025-09-16T23:46:04.186891Z	    },
2025-09-16T23:46:04.18702Z	    category->{
2025-09-16T23:46:04.187093Z	      name,
2025-09-16T23:46:04.187187Z	      "slug": slug.current
2025-09-16T23:46:04.187329Z	    },
2025-09-16T23:46:04.18748Z	    pricing{
2025-09-16T23:46:04.187588Z	      currency,
2025-09-16T23:46:04.187729Z	      tiers[]{
2025-09-16T23:46:04.187836Z	        quantity,
2025-09-16T23:46:04.187936Z	        price,
2025-09-16T23:46:04.188028Z	        unit
2025-09-16T23:46:04.188118Z	      },
2025-09-16T23:46:04.188217Z	      moq,
2025-09-16T23:46:04.188324Z	      leadTime,
2025-09-16T23:46:04.188463Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.188542Z	      "price": tiers[0].price,
2025-09-16T23:46:04.18867Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.188832Z	    },
2025-09-16T23:46:04.188944Z	    inventory{
2025-09-16T23:46:04.189083Z	      quantity,
2025-09-16T23:46:04.189208Z	      status,
2025-09-16T23:46:04.189315Z	      warehouse,
2025-09-16T23:46:04.189386Z	      lastUpdated,
2025-09-16T23:46:04.189531Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.189686Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.18978Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.189908Z	    },
2025-09-16T23:46:04.19006Z	    isActive,
2025-09-16T23:46:04.190134Z	    isFeatured,
2025-09-16T23:46:04.190231Z	    isNew,
2025-09-16T23:46:04.190403Z	    _createdAt,
2025-09-16T23:46:04.190508Z	    _updatedAt
2025-09-16T23:46:04.19067Z	  
2025-09-16T23:46:04.190829Z	      },
2025-09-16T23:46:04.190969Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-16T23:46:04.191055Z	    }
2025-09-16T23:46:04.191172Z	  
2025-09-16T23:46:04.191404Z	Query parameters: {
2025-09-16T23:46:04.19152Z	  limit: 8,
2025-09-16T23:46:04.191588Z	  offset: 0,
2025-09-16T23:46:04.19165Z	  category: undefined,
2025-09-16T23:46:04.191753Z	  brand: 'semikron',
2025-09-16T23:46:04.191824Z	  featured: undefined
2025-09-16T23:46:04.191896Z	}
2025-09-16T23:46:04.191958Z	Fetching solutions with query: 
2025-09-16T23:46:04.192017Z	    {
2025-09-16T23:46:04.192077Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.192149Z	        
2025-09-16T23:46:04.192247Z	    _id,
2025-09-16T23:46:04.192462Z	    title,
2025-09-16T23:46:04.19254Z	    "slug": slug.current,
2025-09-16T23:46:04.192672Z	    summary,
2025-09-16T23:46:04.192801Z	    description,
2025-09-16T23:46:04.19288Z	    coverImage,
2025-09-16T23:46:04.192943Z	    primaryBrand->{
2025-09-16T23:46:04.193079Z	      _id,
2025-09-16T23:46:04.193188Z	      name,
2025-09-16T23:46:04.193285Z	      "slug": slug.current,
2025-09-16T23:46:04.193415Z	      logo
2025-09-16T23:46:04.193489Z	    },
2025-09-16T23:46:04.193547Z	    relatedBrands[]->{
2025-09-16T23:46:04.193753Z	      _id,
2025-09-16T23:46:04.19385Z	      name,
2025-09-16T23:46:04.193953Z	      "slug": slug.current,
2025-09-16T23:46:04.194061Z	      logo
2025-09-16T23:46:04.194163Z	    },
2025-09-16T23:46:04.194282Z	    targetMarket,
2025-09-16T23:46:04.194396Z	    complexity,
2025-09-16T23:46:04.194498Z	    publishedAt,
2025-09-16T23:46:04.194589Z	    isPublished,
2025-09-16T23:46:04.194714Z	    isFeatured,
2025-09-16T23:46:04.194818Z	    viewCount,
2025-09-16T23:46:04.19503Z	    _createdAt,
2025-09-16T23:46:04.195192Z	    _updatedAt
2025-09-16T23:46:04.195332Z	  
2025-09-16T23:46:04.195475Z	      },
2025-09-16T23:46:04.195547Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-16T23:46:04.195705Z	    }
2025-09-16T23:46:04.195801Z	  
2025-09-16T23:46:04.195887Z	Query parameters: {
2025-09-16T23:46:04.196015Z	  limit: 4,
2025-09-16T23:46:04.196152Z	  offset: 0,
2025-09-16T23:46:04.196263Z	  targetMarket: undefined,
2025-09-16T23:46:04.196361Z	  brand: 'semikron',
2025-09-16T23:46:04.196463Z	  featured: undefined
2025-09-16T23:46:04.196582Z	}
2025-09-16T23:46:04.196662Z	✅ [getBrandData] Found brand: Semikron
2025-09-16T23:46:04.196768Z	Products fetch result: {
2025-09-16T23:46:04.196853Z	  totalProducts: 1,
2025-09-16T23:46:04.19696Z	  fetchedProducts: 1,
2025-09-16T23:46:04.197059Z	  firstProduct: {
2025-09-16T23:46:04.197167Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-16T23:46:04.197273Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-16T23:46:04.197376Z	    _type: 'product',
2025-09-16T23:46:04.197499Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-16T23:46:04.197597Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-16T23:46:04.197725Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:04.197816Z	    image: null,
2025-09-16T23:46:04.197919Z	    inventory: {
2025-09-16T23:46:04.198022Z	      inStock: true,
2025-09-16T23:46:04.198142Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-16T23:46:04.198249Z	      quantity: 0,
2025-09-16T23:46:04.198357Z	      status: 'in_stock',
2025-09-16T23:46:04.198464Z	      warehouse: null
2025-09-16T23:46:04.198564Z	    },
2025-09-16T23:46:04.198838Z	    isActive: true,
2025-09-16T23:46:04.198968Z	    isFeatured: false,
2025-09-16T23:46:04.199074Z	    isNew: false,
2025-09-16T23:46:04.199195Z	    partNumber: 'SKKT106/16E',
2025-09-16T23:46:04.19934Z	    pricing: {
2025-09-16T23:46:04.199499Z	      currency: 'CNY',
2025-09-16T23:46:04.199574Z	      leadTime: null,
2025-09-16T23:46:04.199667Z	      moq: null,
2025-09-16T23:46:04.199802Z	      price: null,
2025-09-16T23:46:04.199922Z	      tiers: null
2025-09-16T23:46:04.200038Z	    },
2025-09-16T23:46:04.200137Z	    shortDescription: 'SKKT106/16E',
2025-09-16T23:46:04.200254Z	    slug: 'SKKT106/16E',
2025-09-16T23:46:04.200414Z	    title: 'SKKT106/16E'
2025-09-16T23:46:04.200531Z	  }
2025-09-16T23:46:04.200654Z	}
2025-09-16T23:46:04.20081Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.200882Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-16T23:46:04.200988Z	Fetching products with query: 
2025-09-16T23:46:04.201094Z	    {
2025-09-16T23:46:04.201185Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.201279Z	        
2025-09-16T23:46:04.201374Z	    _id,
2025-09-16T23:46:04.201478Z	    _type,
2025-09-16T23:46:04.20158Z	    partNumber,
2025-09-16T23:46:04.201707Z	    "slug": slug.current,
2025-09-16T23:46:04.201826Z	    title,
2025-09-16T23:46:04.201926Z	    shortDescription,
2025-09-16T23:46:04.202023Z	    image,
2025-09-16T23:46:04.202126Z	    brand->{
2025-09-16T23:46:04.202227Z	      name,
2025-09-16T23:46:04.20232Z	      "slug": slug.current,
2025-09-16T23:46:04.202394Z	      logo
2025-09-16T23:46:04.202458Z	    },
2025-09-16T23:46:04.202515Z	    category->{
2025-09-16T23:46:04.20257Z	      name,
2025-09-16T23:46:04.202639Z	      "slug": slug.current
2025-09-16T23:46:04.202733Z	    },
2025-09-16T23:46:04.202855Z	    pricing{
2025-09-16T23:46:04.202977Z	      currency,
2025-09-16T23:46:04.203086Z	      tiers[]{
2025-09-16T23:46:04.203345Z	        quantity,
2025-09-16T23:46:04.203476Z	        price,
2025-09-16T23:46:04.203585Z	        unit
2025-09-16T23:46:04.203655Z	      },
2025-09-16T23:46:04.20375Z	      moq,
2025-09-16T23:46:04.203811Z	      leadTime,
2025-09-16T23:46:04.203873Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.203945Z	      "price": tiers[0].price,
2025-09-16T23:46:04.204009Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.204073Z	    },
2025-09-16T23:46:04.204138Z	    inventory{
2025-09-16T23:46:04.204197Z	      quantity,
2025-09-16T23:46:04.204254Z	      status,
2025-09-16T23:46:04.204311Z	      warehouse,
2025-09-16T23:46:04.204368Z	      lastUpdated,
2025-09-16T23:46:04.204432Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.204498Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.204555Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.204612Z	    },
2025-09-16T23:46:04.204671Z	    isActive,
2025-09-16T23:46:04.204751Z	    isFeatured,
2025-09-16T23:46:04.204815Z	    isNew,
2025-09-16T23:46:04.204872Z	    _createdAt,
2025-09-16T23:46:04.204927Z	    _updatedAt
2025-09-16T23:46:04.204989Z	  
2025-09-16T23:46:04.205053Z	      },
2025-09-16T23:46:04.205117Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-16T23:46:04.205194Z	    }
2025-09-16T23:46:04.205281Z	  
2025-09-16T23:46:04.20535Z	Query parameters: {
2025-09-16T23:46:04.205407Z	  limit: 8,
2025-09-16T23:46:04.205479Z	  offset: 0,
2025-09-16T23:46:04.205542Z	  category: undefined,
2025-09-16T23:46:04.205605Z	  brand: 'semikron',
2025-09-16T23:46:04.205662Z	  featured: undefined
2025-09-16T23:46:04.205736Z	}
2025-09-16T23:46:04.205792Z	Fetching solutions with query: 
2025-09-16T23:46:04.205853Z	    {
2025-09-16T23:46:04.205923Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.205989Z	        
2025-09-16T23:46:04.206069Z	    _id,
2025-09-16T23:46:04.206135Z	    title,
2025-09-16T23:46:04.206197Z	    "slug": slug.current,
2025-09-16T23:46:04.20628Z	    summary,
2025-09-16T23:46:04.206385Z	    description,
2025-09-16T23:46:04.206532Z	    coverImage,
2025-09-16T23:46:04.206623Z	    primaryBrand->{
2025-09-16T23:46:04.206763Z	      _id,
2025-09-16T23:46:04.206835Z	      name,
2025-09-16T23:46:04.2069Z	      "slug": slug.current,
2025-09-16T23:46:04.20704Z	      logo
2025-09-16T23:46:04.207154Z	    },
2025-09-16T23:46:04.20728Z	    relatedBrands[]->{
2025-09-16T23:46:04.207359Z	      _id,
2025-09-16T23:46:04.207462Z	      name,
2025-09-16T23:46:04.207659Z	      "slug": slug.current,
2025-09-16T23:46:04.207779Z	      logo
2025-09-16T23:46:04.207912Z	    },
2025-09-16T23:46:04.20806Z	    targetMarket,
2025-09-16T23:46:04.208217Z	    complexity,
2025-09-16T23:46:04.208291Z	    publishedAt,
2025-09-16T23:46:04.208397Z	    isPublished,
2025-09-16T23:46:04.208512Z	    isFeatured,
2025-09-16T23:46:04.208613Z	    viewCount,
2025-09-16T23:46:04.208768Z	    _createdAt,
2025-09-16T23:46:04.208898Z	    _updatedAt
2025-09-16T23:46:04.209002Z	  
2025-09-16T23:46:04.209064Z	      },
2025-09-16T23:46:04.209167Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-16T23:46:04.209307Z	    }
2025-09-16T23:46:04.209392Z	  
2025-09-16T23:46:04.209729Z	Query parameters: {
2025-09-16T23:46:04.209969Z	  limit: 4,
2025-09-16T23:46:04.21006Z	  offset: 0,
2025-09-16T23:46:04.210157Z	  targetMarket: undefined,
2025-09-16T23:46:04.210305Z	  brand: 'semikron',
2025-09-16T23:46:04.210436Z	  featured: undefined
2025-09-16T23:46:04.210645Z	}
2025-09-16T23:46:04.210808Z	✅ [getBrandData] Found brand: Semikron
2025-09-16T23:46:04.210889Z	Products fetch result: {
2025-09-16T23:46:04.21095Z	  totalProducts: 1,
2025-09-16T23:46:04.211008Z	  fetchedProducts: 1,
2025-09-16T23:46:04.21108Z	  firstProduct: {
2025-09-16T23:46:04.211169Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-16T23:46:04.211365Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-16T23:46:04.211487Z	    _type: 'product',
2025-09-16T23:46:04.211657Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-16T23:46:04.211825Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-16T23:46:04.211954Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:04.21204Z	    image: null,
2025-09-16T23:46:04.212099Z	    inventory: {
2025-09-16T23:46:04.212158Z	      inStock: true,
2025-09-16T23:46:04.21227Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-16T23:46:04.212373Z	      quantity: 0,
2025-09-16T23:46:04.212498Z	      status: 'in_stock',
2025-09-16T23:46:04.212627Z	      warehouse: null
2025-09-16T23:46:04.212789Z	    },
2025-09-16T23:46:04.212895Z	    isActive: true,
2025-09-16T23:46:04.212961Z	    isFeatured: false,
2025-09-16T23:46:04.21308Z	    isNew: false,
2025-09-16T23:46:04.21318Z	    partNumber: 'SKKT106/16E',
2025-09-16T23:46:04.213279Z	    pricing: {
2025-09-16T23:46:04.213372Z	      currency: 'CNY',
2025-09-16T23:46:04.213479Z	      leadTime: null,
2025-09-16T23:46:04.213611Z	      moq: null,
2025-09-16T23:46:04.213699Z	      price: null,
2025-09-16T23:46:04.213859Z	      tiers: null
2025-09-16T23:46:04.213935Z	    },
2025-09-16T23:46:04.214063Z	    shortDescription: 'SKKT106/16E',
2025-09-16T23:46:04.214141Z	    slug: 'SKKT106/16E',
2025-09-16T23:46:04.214299Z	    title: 'SKKT106/16E'
2025-09-16T23:46:04.214368Z	  }
2025-09-16T23:46:04.214497Z	}
2025-09-16T23:46:04.214599Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.21472Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:46:04.214846Z	Fetching products with query: 
2025-09-16T23:46:04.214948Z	    {
2025-09-16T23:46:04.215035Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.215393Z	        
2025-09-16T23:46:04.215483Z	    _id,
2025-09-16T23:46:04.215541Z	    _type,
2025-09-16T23:46:04.215853Z	    partNumber,
2025-09-16T23:46:04.215937Z	    "slug": slug.current,
2025-09-16T23:46:04.216027Z	    title,
2025-09-16T23:46:04.216119Z	    shortDescription,
2025-09-16T23:46:04.216389Z	    image,
2025-09-16T23:46:04.216468Z	    brand->{
2025-09-16T23:46:04.216668Z	      name,
2025-09-16T23:46:04.216782Z	      "slug": slug.current,
2025-09-16T23:46:04.216844Z	      logo
2025-09-16T23:46:04.217105Z	    },
2025-09-16T23:46:04.217183Z	    category->{
2025-09-16T23:46:04.217239Z	      name,
2025-09-16T23:46:04.217332Z	      "slug": slug.current
2025-09-16T23:46:04.217441Z	    },
2025-09-16T23:46:04.217573Z	    pricing{
2025-09-16T23:46:04.217703Z	      currency,
2025-09-16T23:46:04.217875Z	      tiers[]{
2025-09-16T23:46:04.218026Z	        quantity,
2025-09-16T23:46:04.218115Z	        price,
2025-09-16T23:46:04.218215Z	        unit
2025-09-16T23:46:04.218347Z	      },
2025-09-16T23:46:04.218452Z	      moq,
2025-09-16T23:46:04.21856Z	      leadTime,
2025-09-16T23:46:04.21871Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.218833Z	      "price": tiers[0].price,
2025-09-16T23:46:04.21894Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.21904Z	    },
2025-09-16T23:46:04.219164Z	    inventory{
2025-09-16T23:46:04.21931Z	      quantity,
2025-09-16T23:46:04.21939Z	      status,
2025-09-16T23:46:04.219451Z	      warehouse,
2025-09-16T23:46:04.219557Z	      lastUpdated,
2025-09-16T23:46:04.219711Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.219823Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.219918Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.220094Z	    },
2025-09-16T23:46:04.220169Z	    isActive,
2025-09-16T23:46:04.220282Z	    isFeatured,
2025-09-16T23:46:04.22038Z	    isNew,
2025-09-16T23:46:04.220514Z	    _createdAt,
2025-09-16T23:46:04.220641Z	    _updatedAt
2025-09-16T23:46:04.220832Z	  
2025-09-16T23:46:04.220908Z	      },
2025-09-16T23:46:04.221056Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:46:04.221133Z	    }
2025-09-16T23:46:04.22133Z	  
2025-09-16T23:46:04.221482Z	Query parameters: {
2025-09-16T23:46:04.221602Z	  limit: 8,
2025-09-16T23:46:04.221773Z	  offset: 0,
2025-09-16T23:46:04.22185Z	  category: undefined,
2025-09-16T23:46:04.221907Z	  brand: 'littelfuse',
2025-09-16T23:46:04.22204Z	  featured: undefined
2025-09-16T23:46:04.222142Z	}
2025-09-16T23:46:04.222244Z	Fetching solutions with query: 
2025-09-16T23:46:04.222415Z	    {
2025-09-16T23:46:04.222514Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.222623Z	        
2025-09-16T23:46:04.222749Z	    _id,
2025-09-16T23:46:04.222867Z	    title,
2025-09-16T23:46:04.222965Z	    "slug": slug.current,
2025-09-16T23:46:04.223068Z	    summary,
2025-09-16T23:46:04.223175Z	    description,
2025-09-16T23:46:04.223277Z	    coverImage,
2025-09-16T23:46:04.223377Z	    primaryBrand->{
2025-09-16T23:46:04.223487Z	      _id,
2025-09-16T23:46:04.223594Z	      name,
2025-09-16T23:46:04.223719Z	      "slug": slug.current,
2025-09-16T23:46:04.223843Z	      logo
2025-09-16T23:46:04.223936Z	    },
2025-09-16T23:46:04.224036Z	    relatedBrands[]->{
2025-09-16T23:46:04.224131Z	      _id,
2025-09-16T23:46:04.22423Z	      name,
2025-09-16T23:46:04.224329Z	      "slug": slug.current,
2025-09-16T23:46:04.224432Z	      logo
2025-09-16T23:46:04.224528Z	    },
2025-09-16T23:46:04.224627Z	    targetMarket,
2025-09-16T23:46:04.224759Z	    complexity,
2025-09-16T23:46:04.224876Z	    publishedAt,
2025-09-16T23:46:04.224987Z	    isPublished,
2025-09-16T23:46:04.227041Z	    isFeatured,
2025-09-16T23:46:04.227365Z	    viewCount,
2025-09-16T23:46:04.228111Z	    _createdAt,
2025-09-16T23:46:04.228798Z	    _updatedAt
2025-09-16T23:46:04.229093Z	  
2025-09-16T23:46:04.22921Z	      },
2025-09-16T23:46:04.229317Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:46:04.229444Z	    }
2025-09-16T23:46:04.229566Z	  
2025-09-16T23:46:04.229694Z	Query parameters: {
2025-09-16T23:46:04.229814Z	  limit: 4,
2025-09-16T23:46:04.229923Z	  offset: 0,
2025-09-16T23:46:04.230031Z	  targetMarket: undefined,
2025-09-16T23:46:04.230135Z	  brand: 'littelfuse',
2025-09-16T23:46:04.230272Z	  featured: undefined
2025-09-16T23:46:04.230406Z	}
2025-09-16T23:46:04.230507Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:46:04.230604Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.230734Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.230837Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:46:04.230945Z	Fetching products with query: 
2025-09-16T23:46:04.231049Z	    {
2025-09-16T23:46:04.231148Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.231254Z	        
2025-09-16T23:46:04.231353Z	    _id,
2025-09-16T23:46:04.231459Z	    _type,
2025-09-16T23:46:04.231552Z	    partNumber,
2025-09-16T23:46:04.231637Z	    "slug": slug.current,
2025-09-16T23:46:04.231765Z	    title,
2025-09-16T23:46:04.231864Z	    shortDescription,
2025-09-16T23:46:04.231963Z	    image,
2025-09-16T23:46:04.232074Z	    brand->{
2025-09-16T23:46:04.232178Z	      name,
2025-09-16T23:46:04.232277Z	      "slug": slug.current,
2025-09-16T23:46:04.232373Z	      logo
2025-09-16T23:46:04.232468Z	    },
2025-09-16T23:46:04.23256Z	    category->{
2025-09-16T23:46:04.232667Z	      name,
2025-09-16T23:46:04.232818Z	      "slug": slug.current
2025-09-16T23:46:04.232949Z	    },
2025-09-16T23:46:04.233076Z	    pricing{
2025-09-16T23:46:04.233177Z	      currency,
2025-09-16T23:46:04.233275Z	      tiers[]{
2025-09-16T23:46:04.233371Z	        quantity,
2025-09-16T23:46:04.23352Z	        price,
2025-09-16T23:46:04.233645Z	        unit
2025-09-16T23:46:04.233821Z	      },
2025-09-16T23:46:04.233964Z	      moq,
2025-09-16T23:46:04.234121Z	      leadTime,
2025-09-16T23:46:04.234259Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.234403Z	      "price": tiers[0].price,
2025-09-16T23:46:04.234546Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.234721Z	    },
2025-09-16T23:46:04.234853Z	    inventory{
2025-09-16T23:46:04.235016Z	      quantity,
2025-09-16T23:46:04.235149Z	      status,
2025-09-16T23:46:04.235287Z	      warehouse,
2025-09-16T23:46:04.235399Z	      lastUpdated,
2025-09-16T23:46:04.235503Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.235605Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.235763Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.235883Z	    },
2025-09-16T23:46:04.235981Z	    isActive,
2025-09-16T23:46:04.236069Z	    isFeatured,
2025-09-16T23:46:04.236159Z	    isNew,
2025-09-16T23:46:04.236246Z	    _createdAt,
2025-09-16T23:46:04.236334Z	    _updatedAt
2025-09-16T23:46:04.23642Z	  
2025-09-16T23:46:04.236513Z	      },
2025-09-16T23:46:04.236602Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:46:04.236741Z	    }
2025-09-16T23:46:04.236856Z	  
2025-09-16T23:46:04.237008Z	Query parameters: {
2025-09-16T23:46:04.237363Z	  limit: 8,
2025-09-16T23:46:04.237579Z	  offset: 0,
2025-09-16T23:46:04.237776Z	  category: undefined,
2025-09-16T23:46:04.237923Z	  brand: 'littelfuse',
2025-09-16T23:46:04.238047Z	  featured: undefined
2025-09-16T23:46:04.238146Z	}
2025-09-16T23:46:04.238239Z	Fetching solutions with query: 
2025-09-16T23:46:04.238363Z	    {
2025-09-16T23:46:04.238526Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.238631Z	        
2025-09-16T23:46:04.238788Z	    _id,
2025-09-16T23:46:04.238914Z	    title,
2025-09-16T23:46:04.239039Z	    "slug": slug.current,
2025-09-16T23:46:04.239141Z	    summary,
2025-09-16T23:46:04.239321Z	    description,
2025-09-16T23:46:04.239576Z	    coverImage,
2025-09-16T23:46:04.239814Z	    primaryBrand->{
2025-09-16T23:46:04.252886Z	      _id,
2025-09-16T23:46:04.253105Z	      name,
2025-09-16T23:46:04.25339Z	      "slug": slug.current,
2025-09-16T23:46:04.253545Z	      logo
2025-09-16T23:46:04.253652Z	    },
2025-09-16T23:46:04.253781Z	    relatedBrands[]->{
2025-09-16T23:46:04.253887Z	      _id,
2025-09-16T23:46:04.253997Z	      name,
2025-09-16T23:46:04.254204Z	      "slug": slug.current,
2025-09-16T23:46:04.254322Z	      logo
2025-09-16T23:46:04.254497Z	    },
2025-09-16T23:46:04.254617Z	    targetMarket,
2025-09-16T23:46:04.254735Z	    complexity,
2025-09-16T23:46:04.254833Z	    publishedAt,
2025-09-16T23:46:04.254924Z	    isPublished,
2025-09-16T23:46:04.25501Z	    isFeatured,
2025-09-16T23:46:04.255105Z	    viewCount,
2025-09-16T23:46:04.255216Z	    _createdAt,
2025-09-16T23:46:04.255322Z	    _updatedAt
2025-09-16T23:46:04.255433Z	  
2025-09-16T23:46:04.255534Z	      },
2025-09-16T23:46:04.256761Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:46:04.256947Z	    }
2025-09-16T23:46:04.257368Z	  
2025-09-16T23:46:04.257526Z	Query parameters: {
2025-09-16T23:46:04.25765Z	  limit: 4,
2025-09-16T23:46:04.258061Z	  offset: 0,
2025-09-16T23:46:04.258857Z	  targetMarket: undefined,
2025-09-16T23:46:04.259023Z	  brand: 'littelfuse',
2025-09-16T23:46:04.259274Z	  featured: undefined
2025-09-16T23:46:04.259409Z	}
2025-09-16T23:46:04.259539Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:46:04.259718Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.259832Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.259936Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-16T23:46:04.260047Z	Fetching products with query: 
2025-09-16T23:46:04.260144Z	    {
2025-09-16T23:46:04.260242Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.262256Z	        
2025-09-16T23:46:04.26623Z	    _id,
2025-09-16T23:46:04.266361Z	    _type,
2025-09-16T23:46:04.266703Z	    partNumber,
2025-09-16T23:46:04.266834Z	    "slug": slug.current,
2025-09-16T23:46:04.26694Z	    title,
2025-09-16T23:46:04.267189Z	    shortDescription,
2025-09-16T23:46:04.267427Z	    image,
2025-09-16T23:46:04.267654Z	    brand->{
2025-09-16T23:46:04.267904Z	      name,
2025-09-16T23:46:04.26802Z	      "slug": slug.current,
2025-09-16T23:46:04.268119Z	      logo
2025-09-16T23:46:04.26821Z	    },
2025-09-16T23:46:04.268303Z	    category->{
2025-09-16T23:46:04.268394Z	      name,
2025-09-16T23:46:04.268507Z	      "slug": slug.current
2025-09-16T23:46:04.268661Z	    },
2025-09-16T23:46:04.2692Z	    pricing{
2025-09-16T23:46:04.269568Z	      currency,
2025-09-16T23:46:04.269956Z	      tiers[]{
2025-09-16T23:46:04.270263Z	        quantity,
2025-09-16T23:46:04.270397Z	        price,
2025-09-16T23:46:04.270511Z	        unit
2025-09-16T23:46:04.270608Z	      },
2025-09-16T23:46:04.270735Z	      moq,
2025-09-16T23:46:04.270877Z	      leadTime,
2025-09-16T23:46:04.27106Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.271266Z	      "price": tiers[0].price,
2025-09-16T23:46:04.271482Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.271658Z	    },
2025-09-16T23:46:04.271903Z	    inventory{
2025-09-16T23:46:04.272057Z	      quantity,
2025-09-16T23:46:04.272268Z	      status,
2025-09-16T23:46:04.272386Z	      warehouse,
2025-09-16T23:46:04.272494Z	      lastUpdated,
2025-09-16T23:46:04.272605Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.272862Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.272982Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.273084Z	    },
2025-09-16T23:46:04.273188Z	    isActive,
2025-09-16T23:46:04.273298Z	    isFeatured,
2025-09-16T23:46:04.273411Z	    isNew,
2025-09-16T23:46:04.273532Z	    _createdAt,
2025-09-16T23:46:04.273692Z	    _updatedAt
2025-09-16T23:46:04.273815Z	  
2025-09-16T23:46:04.273919Z	      },
2025-09-16T23:46:04.274018Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-16T23:46:04.274122Z	    }
2025-09-16T23:46:04.2743Z	  
2025-09-16T23:46:04.274447Z	Query parameters: {
2025-09-16T23:46:04.274641Z	  limit: 8,
2025-09-16T23:46:04.274802Z	  offset: 0,
2025-09-16T23:46:04.274909Z	  category: undefined,
2025-09-16T23:46:04.275118Z	  brand: 'ncc',
2025-09-16T23:46:04.275328Z	  featured: undefined
2025-09-16T23:46:04.275535Z	}
2025-09-16T23:46:04.275697Z	Fetching solutions with query: 
2025-09-16T23:46:04.275813Z	    {
2025-09-16T23:46:04.275921Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.276034Z	        
2025-09-16T23:46:04.276142Z	    _id,
2025-09-16T23:46:04.276246Z	    title,
2025-09-16T23:46:04.276354Z	    "slug": slug.current,
2025-09-16T23:46:04.276478Z	    summary,
2025-09-16T23:46:04.276599Z	    description,
2025-09-16T23:46:04.276782Z	    coverImage,
2025-09-16T23:46:04.276889Z	    primaryBrand->{
2025-09-16T23:46:04.27699Z	      _id,
2025-09-16T23:46:04.277086Z	      name,
2025-09-16T23:46:04.277183Z	      "slug": slug.current,
2025-09-16T23:46:04.277281Z	      logo
2025-09-16T23:46:04.277379Z	    },
2025-09-16T23:46:04.277489Z	    relatedBrands[]->{
2025-09-16T23:46:04.277587Z	      _id,
2025-09-16T23:46:04.324076Z	      name,
2025-09-16T23:46:04.324498Z	      "slug": slug.current,
2025-09-16T23:46:04.324643Z	      logo
2025-09-16T23:46:04.324798Z	    },
2025-09-16T23:46:04.324922Z	    targetMarket,
2025-09-16T23:46:04.325025Z	    complexity,
2025-09-16T23:46:04.325123Z	    publishedAt,
2025-09-16T23:46:04.325219Z	    isPublished,
2025-09-16T23:46:04.325311Z	    isFeatured,
2025-09-16T23:46:04.325411Z	    viewCount,
2025-09-16T23:46:04.3256Z	    _createdAt,
2025-09-16T23:46:04.325873Z	    _updatedAt
2025-09-16T23:46:04.326051Z	  
2025-09-16T23:46:04.326169Z	      },
2025-09-16T23:46:04.326327Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-16T23:46:04.326489Z	    }
2025-09-16T23:46:04.327245Z	  
2025-09-16T23:46:04.32747Z	Query parameters: {
2025-09-16T23:46:04.32777Z	  limit: 4,
2025-09-16T23:46:04.328233Z	  offset: 0,
2025-09-16T23:46:04.328507Z	  targetMarket: undefined,
2025-09-16T23:46:04.328647Z	  brand: 'ncc',
2025-09-16T23:46:04.328817Z	  featured: undefined
2025-09-16T23:46:04.328995Z	}
2025-09-16T23:46:04.32916Z	✅ [getBrandData] Found brand: ncc
2025-09-16T23:46:04.329345Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.329731Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.329896Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-16T23:46:04.330053Z	Fetching products with query: 
2025-09-16T23:46:04.33021Z	    {
2025-09-16T23:46:04.331006Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.331148Z	        
2025-09-16T23:46:04.331269Z	    _id,
2025-09-16T23:46:04.331375Z	    _type,
2025-09-16T23:46:04.331489Z	    partNumber,
2025-09-16T23:46:04.331598Z	    "slug": slug.current,
2025-09-16T23:46:04.331723Z	    title,
2025-09-16T23:46:04.331832Z	    shortDescription,
2025-09-16T23:46:04.331977Z	    image,
2025-09-16T23:46:04.332499Z	    brand->{
2025-09-16T23:46:04.332628Z	      name,
2025-09-16T23:46:04.332784Z	      "slug": slug.current,
2025-09-16T23:46:04.332911Z	      logo
2025-09-16T23:46:04.333035Z	    },
2025-09-16T23:46:04.333145Z	    category->{
2025-09-16T23:46:04.333265Z	      name,
2025-09-16T23:46:04.333547Z	      "slug": slug.current
2025-09-16T23:46:04.333737Z	    },
2025-09-16T23:46:04.334072Z	    pricing{
2025-09-16T23:46:04.334203Z	      currency,
2025-09-16T23:46:04.334729Z	      tiers[]{
2025-09-16T23:46:04.335022Z	        quantity,
2025-09-16T23:46:04.335301Z	        price,
2025-09-16T23:46:04.335497Z	        unit
2025-09-16T23:46:04.337158Z	      },
2025-09-16T23:46:04.337293Z	      moq,
2025-09-16T23:46:04.337553Z	      leadTime,
2025-09-16T23:46:04.337744Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.337882Z	      "price": tiers[0].price,
2025-09-16T23:46:04.337999Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.338105Z	    },
2025-09-16T23:46:04.338216Z	    inventory{
2025-09-16T23:46:04.338395Z	      quantity,
2025-09-16T23:46:04.338783Z	      status,
2025-09-16T23:46:04.338934Z	      warehouse,
2025-09-16T23:46:04.339104Z	      lastUpdated,
2025-09-16T23:46:04.339409Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.339568Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.339733Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.339856Z	    },
2025-09-16T23:46:04.340244Z	    isActive,
2025-09-16T23:46:04.340868Z	    isFeatured,
2025-09-16T23:46:04.341023Z	    isNew,
2025-09-16T23:46:04.341134Z	    _createdAt,
2025-09-16T23:46:04.341237Z	    _updatedAt
2025-09-16T23:46:04.341368Z	  
2025-09-16T23:46:04.34148Z	      },
2025-09-16T23:46:04.341576Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-16T23:46:04.341758Z	    }
2025-09-16T23:46:04.341907Z	  
2025-09-16T23:46:04.34229Z	Query parameters: {
2025-09-16T23:46:04.342467Z	  limit: 8,
2025-09-16T23:46:04.342597Z	  offset: 0,
2025-09-16T23:46:04.342735Z	  category: undefined,
2025-09-16T23:46:04.342861Z	  brand: 'ncc',
2025-09-16T23:46:04.342968Z	  featured: undefined
2025-09-16T23:46:04.343069Z	}
2025-09-16T23:46:04.343171Z	Fetching solutions with query: 
2025-09-16T23:46:04.343305Z	    {
2025-09-16T23:46:04.343422Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.343617Z	        
2025-09-16T23:46:04.343814Z	    _id,
2025-09-16T23:46:04.343955Z	    title,
2025-09-16T23:46:04.344142Z	    "slug": slug.current,
2025-09-16T23:46:04.34427Z	    summary,
2025-09-16T23:46:04.344373Z	    description,
2025-09-16T23:46:04.344495Z	    coverImage,
2025-09-16T23:46:04.344607Z	    primaryBrand->{
2025-09-16T23:46:04.3448Z	      _id,
2025-09-16T23:46:04.344927Z	      name,
2025-09-16T23:46:04.345037Z	      "slug": slug.current,
2025-09-16T23:46:04.345144Z	      logo
2025-09-16T23:46:04.34525Z	    },
2025-09-16T23:46:04.345398Z	    relatedBrands[]->{
2025-09-16T23:46:04.345526Z	      _id,
2025-09-16T23:46:04.345629Z	      name,
2025-09-16T23:46:04.345739Z	      "slug": slug.current,
2025-09-16T23:46:04.346182Z	      logo
2025-09-16T23:46:04.346455Z	    },
2025-09-16T23:46:04.346773Z	    targetMarket,
2025-09-16T23:46:04.346994Z	    complexity,
2025-09-16T23:46:04.347127Z	    publishedAt,
2025-09-16T23:46:04.347299Z	    isPublished,
2025-09-16T23:46:04.347416Z	    isFeatured,
2025-09-16T23:46:04.34754Z	    viewCount,
2025-09-16T23:46:04.347649Z	    _createdAt,
2025-09-16T23:46:04.347778Z	    _updatedAt
2025-09-16T23:46:04.347886Z	  
2025-09-16T23:46:04.347985Z	      },
2025-09-16T23:46:04.348087Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-16T23:46:04.3482Z	    }
2025-09-16T23:46:04.348312Z	  
2025-09-16T23:46:04.348434Z	Query parameters: {
2025-09-16T23:46:04.348548Z	  limit: 4,
2025-09-16T23:46:04.34865Z	  offset: 0,
2025-09-16T23:46:04.348828Z	  targetMarket: undefined,
2025-09-16T23:46:04.348957Z	  brand: 'ncc',
2025-09-16T23:46:04.349069Z	  featured: undefined
2025-09-16T23:46:04.34918Z	}
2025-09-16T23:46:04.349284Z	✅ [getBrandData] Found brand: ncc
2025-09-16T23:46:04.349388Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.349491Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.349589Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:04.349727Z	Fetching products with query: 
2025-09-16T23:46:04.350096Z	    {
2025-09-16T23:46:04.350248Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.350354Z	        
2025-09-16T23:46:04.350463Z	    _id,
2025-09-16T23:46:04.350563Z	    _type,
2025-09-16T23:46:04.350692Z	    partNumber,
2025-09-16T23:46:04.350814Z	    "slug": slug.current,
2025-09-16T23:46:04.350924Z	    title,
2025-09-16T23:46:04.351024Z	    shortDescription,
2025-09-16T23:46:04.351123Z	    image,
2025-09-16T23:46:04.351222Z	    brand->{
2025-09-16T23:46:04.351318Z	      name,
2025-09-16T23:46:04.351404Z	      "slug": slug.current,
2025-09-16T23:46:04.351502Z	      logo
2025-09-16T23:46:04.351599Z	    },
2025-09-16T23:46:04.351774Z	    category->{
2025-09-16T23:46:04.351876Z	      name,
2025-09-16T23:46:04.351966Z	      "slug": slug.current
2025-09-16T23:46:04.352055Z	    },
2025-09-16T23:46:04.352145Z	    pricing{
2025-09-16T23:46:04.352234Z	      currency,
2025-09-16T23:46:04.352336Z	      tiers[]{
2025-09-16T23:46:04.352437Z	        quantity,
2025-09-16T23:46:04.352539Z	        price,
2025-09-16T23:46:04.35264Z	        unit
2025-09-16T23:46:04.352785Z	      },
2025-09-16T23:46:04.352899Z	      moq,
2025-09-16T23:46:04.353008Z	      leadTime,
2025-09-16T23:46:04.353118Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.353227Z	      "price": tiers[0].price,
2025-09-16T23:46:04.353331Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.353439Z	    },
2025-09-16T23:46:04.353545Z	    inventory{
2025-09-16T23:46:04.353651Z	      quantity,
2025-09-16T23:46:04.353791Z	      status,
2025-09-16T23:46:04.353896Z	      warehouse,
2025-09-16T23:46:04.353994Z	      lastUpdated,
2025-09-16T23:46:04.354096Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.354197Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.354285Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.354371Z	    },
2025-09-16T23:46:04.354458Z	    isActive,
2025-09-16T23:46:04.354557Z	    isFeatured,
2025-09-16T23:46:04.354687Z	    isNew,
2025-09-16T23:46:04.356525Z	    _createdAt,
2025-09-16T23:46:04.35673Z	    _updatedAt
2025-09-16T23:46:04.356865Z	  
2025-09-16T23:46:04.356964Z	      },
2025-09-16T23:46:04.35706Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-16T23:46:04.357156Z	    }
2025-09-16T23:46:04.357261Z	  
2025-09-16T23:46:04.357362Z	Query parameters: {
2025-09-16T23:46:04.357468Z	  limit: 8,
2025-09-16T23:46:04.357595Z	  offset: 0,
2025-09-16T23:46:04.357756Z	  category: undefined,
2025-09-16T23:46:04.357877Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:04.357983Z	  featured: undefined
2025-09-16T23:46:04.358092Z	}
2025-09-16T23:46:04.358203Z	Fetching solutions with query: 
2025-09-16T23:46:04.358317Z	    {
2025-09-16T23:46:04.358413Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.358524Z	        
2025-09-16T23:46:04.358621Z	    _id,
2025-09-16T23:46:04.358741Z	    title,
2025-09-16T23:46:04.358835Z	    "slug": slug.current,
2025-09-16T23:46:04.358923Z	    summary,
2025-09-16T23:46:04.359018Z	    description,
2025-09-16T23:46:04.35912Z	    coverImage,
2025-09-16T23:46:04.359256Z	    primaryBrand->{
2025-09-16T23:46:04.359361Z	      _id,
2025-09-16T23:46:04.359452Z	      name,
2025-09-16T23:46:04.359549Z	      "slug": slug.current,
2025-09-16T23:46:04.359648Z	      logo
2025-09-16T23:46:04.359783Z	    },
2025-09-16T23:46:04.359889Z	    relatedBrands[]->{
2025-09-16T23:46:04.35999Z	      _id,
2025-09-16T23:46:04.360087Z	      name,
2025-09-16T23:46:04.360176Z	      "slug": slug.current,
2025-09-16T23:46:04.360274Z	      logo
2025-09-16T23:46:04.360402Z	    },
2025-09-16T23:46:04.360514Z	    targetMarket,
2025-09-16T23:46:04.360622Z	    complexity,
2025-09-16T23:46:04.360764Z	    publishedAt,
2025-09-16T23:46:04.360867Z	    isPublished,
2025-09-16T23:46:04.360983Z	    isFeatured,
2025-09-16T23:46:04.361089Z	    viewCount,
2025-09-16T23:46:04.361198Z	    _createdAt,
2025-09-16T23:46:04.361306Z	    _updatedAt
2025-09-16T23:46:04.361494Z	  
2025-09-16T23:46:04.361738Z	      },
2025-09-16T23:46:04.361893Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-16T23:46:04.362029Z	    }
2025-09-16T23:46:04.362148Z	  
2025-09-16T23:46:04.362299Z	Query parameters: {
2025-09-16T23:46:04.362436Z	  limit: 4,
2025-09-16T23:46:04.36255Z	  offset: 0,
2025-09-16T23:46:04.362661Z	  targetMarket: undefined,
2025-09-16T23:46:04.362812Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:04.362934Z	  featured: undefined
2025-09-16T23:46:04.363201Z	}
2025-09-16T23:46:04.363317Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:04.363568Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.363802Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.363976Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:04.364114Z	Fetching products with query: 
2025-09-16T23:46:04.364279Z	    {
2025-09-16T23:46:04.364436Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.364601Z	        
2025-09-16T23:46:04.364776Z	    _id,
2025-09-16T23:46:04.364939Z	    _type,
2025-09-16T23:46:04.365081Z	    partNumber,
2025-09-16T23:46:04.365195Z	    "slug": slug.current,
2025-09-16T23:46:04.36532Z	    title,
2025-09-16T23:46:04.365429Z	    shortDescription,
2025-09-16T23:46:04.365526Z	    image,
2025-09-16T23:46:04.36563Z	    brand->{
2025-09-16T23:46:04.372745Z	      name,
2025-09-16T23:46:04.373045Z	      "slug": slug.current,
2025-09-16T23:46:04.375225Z	      logo
2025-09-16T23:46:04.37537Z	    },
2025-09-16T23:46:04.423958Z	    category->{
2025-09-16T23:46:04.424336Z	      name,
2025-09-16T23:46:04.424482Z	      "slug": slug.current
2025-09-16T23:46:04.424579Z	    },
2025-09-16T23:46:04.4247Z	    pricing{
2025-09-16T23:46:04.424825Z	      currency,
2025-09-16T23:46:04.424934Z	      tiers[]{
2025-09-16T23:46:04.42504Z	        quantity,
2025-09-16T23:46:04.425134Z	        price,
2025-09-16T23:46:04.425223Z	        unit
2025-09-16T23:46:04.425332Z	      },
2025-09-16T23:46:04.425435Z	      moq,
2025-09-16T23:46:04.425523Z	      leadTime,
2025-09-16T23:46:04.425608Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.426706Z	      "price": tiers[0].price,
2025-09-16T23:46:04.426904Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.427017Z	    },
2025-09-16T23:46:04.427334Z	    inventory{
2025-09-16T23:46:04.42746Z	      quantity,
2025-09-16T23:46:04.427556Z	      status,
2025-09-16T23:46:04.427649Z	      warehouse,
2025-09-16T23:46:04.427768Z	      lastUpdated,
2025-09-16T23:46:04.427957Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.428237Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.428397Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.428625Z	    },
2025-09-16T23:46:04.428851Z	    isActive,
2025-09-16T23:46:04.428979Z	    isFeatured,
2025-09-16T23:46:04.429118Z	    isNew,
2025-09-16T23:46:04.429256Z	    _createdAt,
2025-09-16T23:46:04.429376Z	    _updatedAt
2025-09-16T23:46:04.429512Z	  
2025-09-16T23:46:04.429632Z	      },
2025-09-16T23:46:04.429824Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-16T23:46:04.429983Z	    }
2025-09-16T23:46:04.430162Z	  
2025-09-16T23:46:04.430342Z	Query parameters: {
2025-09-16T23:46:04.430475Z	  limit: 8,
2025-09-16T23:46:04.430613Z	  offset: 0,
2025-09-16T23:46:04.430767Z	  category: undefined,
2025-09-16T23:46:04.43088Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:04.431012Z	  featured: undefined
2025-09-16T23:46:04.431124Z	}
2025-09-16T23:46:04.431225Z	Fetching solutions with query: 
2025-09-16T23:46:04.431361Z	    {
2025-09-16T23:46:04.431531Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.431694Z	        
2025-09-16T23:46:04.431827Z	    _id,
2025-09-16T23:46:04.43194Z	    title,
2025-09-16T23:46:04.43204Z	    "slug": slug.current,
2025-09-16T23:46:04.432131Z	    summary,
2025-09-16T23:46:04.432231Z	    description,
2025-09-16T23:46:04.432332Z	    coverImage,
2025-09-16T23:46:04.432425Z	    primaryBrand->{
2025-09-16T23:46:04.432515Z	      _id,
2025-09-16T23:46:04.432616Z	      name,
2025-09-16T23:46:04.432763Z	      "slug": slug.current,
2025-09-16T23:46:04.432873Z	      logo
2025-09-16T23:46:04.432976Z	    },
2025-09-16T23:46:04.433074Z	    relatedBrands[]->{
2025-09-16T23:46:04.433187Z	      _id,
2025-09-16T23:46:04.433298Z	      name,
2025-09-16T23:46:04.433407Z	      "slug": slug.current,
2025-09-16T23:46:04.433516Z	      logo
2025-09-16T23:46:04.433628Z	    },
2025-09-16T23:46:04.433766Z	    targetMarket,
2025-09-16T23:46:04.433917Z	    complexity,
2025-09-16T23:46:04.434044Z	    publishedAt,
2025-09-16T23:46:04.434225Z	    isPublished,
2025-09-16T23:46:04.434473Z	    isFeatured,
2025-09-16T23:46:04.434691Z	    viewCount,
2025-09-16T23:46:04.434829Z	    _createdAt,
2025-09-16T23:46:04.434941Z	    _updatedAt
2025-09-16T23:46:04.435048Z	  
2025-09-16T23:46:04.435157Z	      },
2025-09-16T23:46:04.435265Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-16T23:46:04.435417Z	    }
2025-09-16T23:46:04.435563Z	  
2025-09-16T23:46:04.435668Z	Query parameters: {
2025-09-16T23:46:04.435805Z	  limit: 4,
2025-09-16T23:46:04.435915Z	  offset: 0,
2025-09-16T23:46:04.436021Z	  targetMarket: undefined,
2025-09-16T23:46:04.436139Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:04.436321Z	  featured: undefined
2025-09-16T23:46:04.436483Z	}
2025-09-16T23:46:04.43676Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:04.436918Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.437099Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.437411Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-16T23:46:04.437541Z	Fetching products with query: 
2025-09-16T23:46:04.437662Z	    {
2025-09-16T23:46:04.437809Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.438054Z	        
2025-09-16T23:46:04.438169Z	    _id,
2025-09-16T23:46:04.438323Z	    _type,
2025-09-16T23:46:04.438434Z	    partNumber,
2025-09-16T23:46:04.438547Z	    "slug": slug.current,
2025-09-16T23:46:04.438649Z	    title,
2025-09-16T23:46:04.438782Z	    shortDescription,
2025-09-16T23:46:04.438889Z	    image,
2025-09-16T23:46:04.438989Z	    brand->{
2025-09-16T23:46:04.439087Z	      name,
2025-09-16T23:46:04.43952Z	      "slug": slug.current,
2025-09-16T23:46:04.440056Z	      logo
2025-09-16T23:46:04.440205Z	    },
2025-09-16T23:46:04.440323Z	    category->{
2025-09-16T23:46:04.440448Z	      name,
2025-09-16T23:46:04.440569Z	      "slug": slug.current
2025-09-16T23:46:04.440689Z	    },
2025-09-16T23:46:04.440822Z	    pricing{
2025-09-16T23:46:04.440937Z	      currency,
2025-09-16T23:46:04.441046Z	      tiers[]{
2025-09-16T23:46:04.441154Z	        quantity,
2025-09-16T23:46:04.441296Z	        price,
2025-09-16T23:46:04.444564Z	        unit
2025-09-16T23:46:04.444838Z	      },
2025-09-16T23:46:04.445221Z	      moq,
2025-09-16T23:46:04.445326Z	      leadTime,
2025-09-16T23:46:04.445454Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.445769Z	      "price": tiers[0].price,
2025-09-16T23:46:04.44587Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.445961Z	    },
2025-09-16T23:46:04.446059Z	    inventory{
2025-09-16T23:46:04.44615Z	      quantity,
2025-09-16T23:46:04.448753Z	      status,
2025-09-16T23:46:04.448946Z	      warehouse,
2025-09-16T23:46:04.449065Z	      lastUpdated,
2025-09-16T23:46:04.449183Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.449292Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.449405Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.449542Z	    },
2025-09-16T23:46:04.449646Z	    isActive,
2025-09-16T23:46:04.44978Z	    isFeatured,
2025-09-16T23:46:04.449876Z	    isNew,
2025-09-16T23:46:04.449974Z	    _createdAt,
2025-09-16T23:46:04.450056Z	    _updatedAt
2025-09-16T23:46:04.450144Z	  
2025-09-16T23:46:04.450235Z	      },
2025-09-16T23:46:04.450322Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-16T23:46:04.45043Z	    }
2025-09-16T23:46:04.450523Z	  
2025-09-16T23:46:04.45062Z	Query parameters: {
2025-09-16T23:46:04.450753Z	  limit: 8,
2025-09-16T23:46:04.450859Z	  offset: 0,
2025-09-16T23:46:04.450965Z	  category: undefined,
2025-09-16T23:46:04.451071Z	  brand: 'ncc',
2025-09-16T23:46:04.451205Z	  featured: undefined
2025-09-16T23:46:04.45334Z	}
2025-09-16T23:46:04.453545Z	Fetching solutions with query: 
2025-09-16T23:46:04.453734Z	    {
2025-09-16T23:46:04.453865Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.453969Z	        
2025-09-16T23:46:04.454063Z	    _id,
2025-09-16T23:46:04.454623Z	    title,
2025-09-16T23:46:04.454809Z	    "slug": slug.current,
2025-09-16T23:46:04.454915Z	    summary,
2025-09-16T23:46:04.455013Z	    description,
2025-09-16T23:46:04.455105Z	    coverImage,
2025-09-16T23:46:04.455194Z	    primaryBrand->{
2025-09-16T23:46:04.455284Z	      _id,
2025-09-16T23:46:04.455373Z	      name,
2025-09-16T23:46:04.455468Z	      "slug": slug.current,
2025-09-16T23:46:04.455558Z	      logo
2025-09-16T23:46:04.455652Z	    },
2025-09-16T23:46:04.455786Z	    relatedBrands[]->{
2025-09-16T23:46:04.455889Z	      _id,
2025-09-16T23:46:04.455987Z	      name,
2025-09-16T23:46:04.456091Z	      "slug": slug.current,
2025-09-16T23:46:04.456199Z	      logo
2025-09-16T23:46:04.45631Z	    },
2025-09-16T23:46:04.45642Z	    targetMarket,
2025-09-16T23:46:04.456522Z	    complexity,
2025-09-16T23:46:04.456627Z	    publishedAt,
2025-09-16T23:46:04.456761Z	    isPublished,
2025-09-16T23:46:04.45689Z	    isFeatured,
2025-09-16T23:46:04.457Z	    viewCount,
2025-09-16T23:46:04.457108Z	    _createdAt,
2025-09-16T23:46:04.457217Z	    _updatedAt
2025-09-16T23:46:04.45733Z	  
2025-09-16T23:46:04.457439Z	      },
2025-09-16T23:46:04.457546Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-16T23:46:04.457661Z	    }
2025-09-16T23:46:04.457801Z	  
2025-09-16T23:46:04.457916Z	Query parameters: {
2025-09-16T23:46:04.45803Z	  limit: 4,
2025-09-16T23:46:04.458139Z	  offset: 0,
2025-09-16T23:46:04.45824Z	  targetMarket: undefined,
2025-09-16T23:46:04.458338Z	  brand: 'ncc',
2025-09-16T23:46:04.458433Z	  featured: undefined
2025-09-16T23:46:04.458527Z	}
2025-09-16T23:46:04.458618Z	✅ [getBrandData] Found brand: ncc
2025-09-16T23:46:04.458749Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.458878Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-16T23:46:04.459007Z	Fetching products with query: 
2025-09-16T23:46:04.459125Z	    {
2025-09-16T23:46:04.459244Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.45934Z	        
2025-09-16T23:46:04.459425Z	    _id,
2025-09-16T23:46:04.459508Z	    _type,
2025-09-16T23:46:04.459597Z	    partNumber,
2025-09-16T23:46:04.464568Z	    "slug": slug.current,
2025-09-16T23:46:04.465033Z	    title,
2025-09-16T23:46:04.465742Z	    shortDescription,
2025-09-16T23:46:04.466152Z	    image,
2025-09-16T23:46:04.466309Z	    brand->{
2025-09-16T23:46:04.466519Z	      name,
2025-09-16T23:46:04.4667Z	      "slug": slug.current,
2025-09-16T23:46:04.466839Z	      logo
2025-09-16T23:46:04.466953Z	    },
2025-09-16T23:46:04.467108Z	    category->{
2025-09-16T23:46:04.467263Z	      name,
2025-09-16T23:46:04.46738Z	      "slug": slug.current
2025-09-16T23:46:04.467501Z	    },
2025-09-16T23:46:04.467612Z	    pricing{
2025-09-16T23:46:04.467735Z	      currency,
2025-09-16T23:46:04.467904Z	      tiers[]{
2025-09-16T23:46:04.46803Z	        quantity,
2025-09-16T23:46:04.468182Z	        price,
2025-09-16T23:46:04.468294Z	        unit
2025-09-16T23:46:04.468455Z	      },
2025-09-16T23:46:04.468568Z	      moq,
2025-09-16T23:46:04.468687Z	      leadTime,
2025-09-16T23:46:04.46881Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.468916Z	      "price": tiers[0].price,
2025-09-16T23:46:04.469028Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.469147Z	    },
2025-09-16T23:46:04.469255Z	    inventory{
2025-09-16T23:46:04.469383Z	      quantity,
2025-09-16T23:46:04.46952Z	      status,
2025-09-16T23:46:04.469632Z	      warehouse,
2025-09-16T23:46:04.4698Z	      lastUpdated,
2025-09-16T23:46:04.469921Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.470034Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.470137Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.470249Z	    },
2025-09-16T23:46:04.470353Z	    isActive,
2025-09-16T23:46:04.473017Z	    isFeatured,
2025-09-16T23:46:04.473434Z	    isNew,
2025-09-16T23:46:04.473532Z	    _createdAt,
2025-09-16T23:46:04.473789Z	    _updatedAt
2025-09-16T23:46:04.474235Z	  
2025-09-16T23:46:04.474367Z	      },
2025-09-16T23:46:04.474482Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-16T23:46:04.474597Z	    }
2025-09-16T23:46:04.474953Z	  
2025-09-16T23:46:04.475029Z	Query parameters: {
2025-09-16T23:46:04.475091Z	  limit: 8,
2025-09-16T23:46:04.475356Z	  offset: 0,
2025-09-16T23:46:04.475572Z	  category: undefined,
2025-09-16T23:46:04.475731Z	  brand: 'epcos',
2025-09-16T23:46:04.475849Z	  featured: undefined
2025-09-16T23:46:04.475943Z	}
2025-09-16T23:46:04.476032Z	Fetching solutions with query: 
2025-09-16T23:46:04.476381Z	    {
2025-09-16T23:46:04.476472Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.476615Z	        
2025-09-16T23:46:04.47675Z	    _id,
2025-09-16T23:46:04.477064Z	    title,
2025-09-16T23:46:04.477193Z	    "slug": slug.current,
2025-09-16T23:46:04.477852Z	    summary,
2025-09-16T23:46:04.478014Z	    description,
2025-09-16T23:46:04.478124Z	    coverImage,
2025-09-16T23:46:04.478261Z	    primaryBrand->{
2025-09-16T23:46:04.478325Z	      _id,
2025-09-16T23:46:04.478381Z	      name,
2025-09-16T23:46:04.478442Z	      "slug": slug.current,
2025-09-16T23:46:04.478498Z	      logo
2025-09-16T23:46:04.478552Z	    },
2025-09-16T23:46:04.524576Z	    relatedBrands[]->{
2025-09-16T23:46:04.525903Z	      _id,
2025-09-16T23:46:04.540369Z	      name,
2025-09-16T23:46:04.540578Z	      "slug": slug.current,
2025-09-16T23:46:04.541044Z	      logo
2025-09-16T23:46:04.541232Z	    },
2025-09-16T23:46:04.541403Z	    targetMarket,
2025-09-16T23:46:04.541523Z	    complexity,
2025-09-16T23:46:04.541624Z	    publishedAt,
2025-09-16T23:46:04.541776Z	    isPublished,
2025-09-16T23:46:04.541897Z	    isFeatured,
2025-09-16T23:46:04.542005Z	    viewCount,
2025-09-16T23:46:04.542107Z	    _createdAt,
2025-09-16T23:46:04.542216Z	    _updatedAt
2025-09-16T23:46:04.542336Z	  
2025-09-16T23:46:04.542464Z	      },
2025-09-16T23:46:04.542594Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-16T23:46:04.542758Z	    }
2025-09-16T23:46:04.542913Z	  
2025-09-16T23:46:04.543034Z	Query parameters: {
2025-09-16T23:46:04.543159Z	  limit: 4,
2025-09-16T23:46:04.543284Z	  offset: 0,
2025-09-16T23:46:04.543415Z	  targetMarket: undefined,
2025-09-16T23:46:04.54353Z	  brand: 'epcos',
2025-09-16T23:46:04.543698Z	  featured: undefined
2025-09-16T23:46:04.543847Z	}
2025-09-16T23:46:04.543971Z	✅ [getBrandData] Found brand: Epcos
2025-09-16T23:46:04.544093Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.544197Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.544298Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-16T23:46:04.544419Z	Fetching products with query: 
2025-09-16T23:46:04.544536Z	    {
2025-09-16T23:46:04.544685Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.544823Z	        
2025-09-16T23:46:04.544932Z	    _id,
2025-09-16T23:46:04.545046Z	    _type,
2025-09-16T23:46:04.54517Z	    partNumber,
2025-09-16T23:46:04.545304Z	    "slug": slug.current,
2025-09-16T23:46:04.545434Z	    title,
2025-09-16T23:46:04.545548Z	    shortDescription,
2025-09-16T23:46:04.545685Z	    image,
2025-09-16T23:46:04.545808Z	    brand->{
2025-09-16T23:46:04.54592Z	      name,
2025-09-16T23:46:04.546029Z	      "slug": slug.current,
2025-09-16T23:46:04.546126Z	      logo
2025-09-16T23:46:04.546251Z	    },
2025-09-16T23:46:04.546391Z	    category->{
2025-09-16T23:46:04.546517Z	      name,
2025-09-16T23:46:04.546631Z	      "slug": slug.current
2025-09-16T23:46:04.54676Z	    },
2025-09-16T23:46:04.546863Z	    pricing{
2025-09-16T23:46:04.546971Z	      currency,
2025-09-16T23:46:04.54707Z	      tiers[]{
2025-09-16T23:46:04.547176Z	        quantity,
2025-09-16T23:46:04.547278Z	        price,
2025-09-16T23:46:04.547418Z	        unit
2025-09-16T23:46:04.547543Z	      },
2025-09-16T23:46:04.547812Z	      moq,
2025-09-16T23:46:04.548051Z	      leadTime,
2025-09-16T23:46:04.548292Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.548488Z	      "price": tiers[0].price,
2025-09-16T23:46:04.54872Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.548866Z	    },
2025-09-16T23:46:04.549182Z	    inventory{
2025-09-16T23:46:04.549286Z	      quantity,
2025-09-16T23:46:04.549565Z	      status,
2025-09-16T23:46:04.549766Z	      warehouse,
2025-09-16T23:46:04.549977Z	      lastUpdated,
2025-09-16T23:46:04.550201Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.550324Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.550446Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.550609Z	    },
2025-09-16T23:46:04.550748Z	    isActive,
2025-09-16T23:46:04.551019Z	    isFeatured,
2025-09-16T23:46:04.551135Z	    isNew,
2025-09-16T23:46:04.55126Z	    _createdAt,
2025-09-16T23:46:04.551395Z	    _updatedAt
2025-09-16T23:46:04.551517Z	  
2025-09-16T23:46:04.551623Z	      },
2025-09-16T23:46:04.55175Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-16T23:46:04.55192Z	    }
2025-09-16T23:46:04.552035Z	  
2025-09-16T23:46:04.55213Z	Query parameters: {
2025-09-16T23:46:04.552302Z	  limit: 8,
2025-09-16T23:46:04.552449Z	  offset: 0,
2025-09-16T23:46:04.552632Z	  category: undefined,
2025-09-16T23:46:04.552776Z	  brand: 'epcos',
2025-09-16T23:46:04.552911Z	  featured: undefined
2025-09-16T23:46:04.553192Z	}
2025-09-16T23:46:04.553312Z	Fetching solutions with query: 
2025-09-16T23:46:04.553432Z	    {
2025-09-16T23:46:04.55359Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.553798Z	        
2025-09-16T23:46:04.553913Z	    _id,
2025-09-16T23:46:04.554021Z	    title,
2025-09-16T23:46:04.554176Z	    "slug": slug.current,
2025-09-16T23:46:04.55429Z	    summary,
2025-09-16T23:46:04.554469Z	    description,
2025-09-16T23:46:04.554615Z	    coverImage,
2025-09-16T23:46:04.554783Z	    primaryBrand->{
2025-09-16T23:46:04.554962Z	      _id,
2025-09-16T23:46:04.555106Z	      name,
2025-09-16T23:46:04.555225Z	      "slug": slug.current,
2025-09-16T23:46:04.555358Z	      logo
2025-09-16T23:46:04.555475Z	    },
2025-09-16T23:46:04.55569Z	    relatedBrands[]->{
2025-09-16T23:46:04.555832Z	      _id,
2025-09-16T23:46:04.556027Z	      name,
2025-09-16T23:46:04.556104Z	      "slug": slug.current,
2025-09-16T23:46:04.556173Z	      logo
2025-09-16T23:46:04.55631Z	    },
2025-09-16T23:46:04.556385Z	    targetMarket,
2025-09-16T23:46:04.55653Z	    complexity,
2025-09-16T23:46:04.556659Z	    publishedAt,
2025-09-16T23:46:04.556859Z	    isPublished,
2025-09-16T23:46:04.557019Z	    isFeatured,
2025-09-16T23:46:04.557132Z	    viewCount,
2025-09-16T23:46:04.557253Z	    _createdAt,
2025-09-16T23:46:04.557361Z	    _updatedAt
2025-09-16T23:46:04.557467Z	  
2025-09-16T23:46:04.557689Z	      },
2025-09-16T23:46:04.557836Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-16T23:46:04.557963Z	    }
2025-09-16T23:46:04.558133Z	  
2025-09-16T23:46:04.558249Z	Query parameters: {
2025-09-16T23:46:04.558352Z	  limit: 4,
2025-09-16T23:46:04.558446Z	  offset: 0,
2025-09-16T23:46:04.55857Z	  targetMarket: undefined,
2025-09-16T23:46:04.558737Z	  brand: 'epcos',
2025-09-16T23:46:04.55881Z	  featured: undefined
2025-09-16T23:46:04.558969Z	}
2025-09-16T23:46:04.559116Z	✅ [getBrandData] Found brand: Epcos
2025-09-16T23:46:04.559209Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.559538Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.559718Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-16T23:46:04.559871Z	Fetching products with query: 
2025-09-16T23:46:04.559992Z	    {
2025-09-16T23:46:04.560224Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.560396Z	        
2025-09-16T23:46:04.56048Z	    _id,
2025-09-16T23:46:04.560539Z	    _type,
2025-09-16T23:46:04.560598Z	    partNumber,
2025-09-16T23:46:04.560904Z	    "slug": slug.current,
2025-09-16T23:46:04.560992Z	    title,
2025-09-16T23:46:04.561154Z	    shortDescription,
2025-09-16T23:46:04.561371Z	    image,
2025-09-16T23:46:04.561507Z	    brand->{
2025-09-16T23:46:04.561643Z	      name,
2025-09-16T23:46:04.561959Z	      "slug": slug.current,
2025-09-16T23:46:04.562134Z	      logo
2025-09-16T23:46:04.562219Z	    },
2025-09-16T23:46:04.562325Z	    category->{
2025-09-16T23:46:04.562428Z	      name,
2025-09-16T23:46:04.562622Z	      "slug": slug.current
2025-09-16T23:46:04.562792Z	    },
2025-09-16T23:46:04.562901Z	    pricing{
2025-09-16T23:46:04.563047Z	      currency,
2025-09-16T23:46:04.563164Z	      tiers[]{
2025-09-16T23:46:04.563316Z	        quantity,
2025-09-16T23:46:04.563422Z	        price,
2025-09-16T23:46:04.563531Z	        unit
2025-09-16T23:46:04.563659Z	      },
2025-09-16T23:46:04.56379Z	      moq,
2025-09-16T23:46:04.563904Z	      leadTime,
2025-09-16T23:46:04.564023Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.564227Z	      "price": tiers[0].price,
2025-09-16T23:46:04.564364Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.564466Z	    },
2025-09-16T23:46:04.564666Z	    inventory{
2025-09-16T23:46:04.564885Z	      quantity,
2025-09-16T23:46:04.564992Z	      status,
2025-09-16T23:46:04.565107Z	      warehouse,
2025-09-16T23:46:04.565206Z	      lastUpdated,
2025-09-16T23:46:04.565295Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.565408Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.565515Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.565808Z	    },
2025-09-16T23:46:04.565893Z	    isActive,
2025-09-16T23:46:04.565972Z	    isFeatured,
2025-09-16T23:46:04.566155Z	    isNew,
2025-09-16T23:46:04.56627Z	    _createdAt,
2025-09-16T23:46:04.566469Z	    _updatedAt
2025-09-16T23:46:04.566622Z	  
2025-09-16T23:46:04.566874Z	      },
2025-09-16T23:46:04.566962Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-16T23:46:04.56715Z	    }
2025-09-16T23:46:04.567306Z	  
2025-09-16T23:46:04.567415Z	Query parameters: {
2025-09-16T23:46:04.567627Z	  limit: 8,
2025-09-16T23:46:04.56781Z	  offset: 0,
2025-09-16T23:46:04.567976Z	  category: undefined,
2025-09-16T23:46:04.5681Z	  brand: 'pi',
2025-09-16T23:46:04.568218Z	  featured: undefined
2025-09-16T23:46:04.568503Z	}
2025-09-16T23:46:04.568587Z	Fetching solutions with query: 
2025-09-16T23:46:04.568827Z	    {
2025-09-16T23:46:04.569011Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.569187Z	        
2025-09-16T23:46:04.569354Z	    _id,
2025-09-16T23:46:04.569488Z	    title,
2025-09-16T23:46:04.569609Z	    "slug": slug.current,
2025-09-16T23:46:04.569734Z	    summary,
2025-09-16T23:46:04.569802Z	    description,
2025-09-16T23:46:04.56988Z	    coverImage,
2025-09-16T23:46:04.56995Z	    primaryBrand->{
2025-09-16T23:46:04.570006Z	      _id,
2025-09-16T23:46:04.570061Z	      name,
2025-09-16T23:46:04.570114Z	      "slug": slug.current,
2025-09-16T23:46:04.570334Z	      logo
2025-09-16T23:46:04.57058Z	    },
2025-09-16T23:46:04.570773Z	    relatedBrands[]->{
2025-09-16T23:46:04.570909Z	      _id,
2025-09-16T23:46:04.57111Z	      name,
2025-09-16T23:46:04.571224Z	      "slug": slug.current,
2025-09-16T23:46:04.571406Z	      logo
2025-09-16T23:46:04.571525Z	    },
2025-09-16T23:46:04.571623Z	    targetMarket,
2025-09-16T23:46:04.571739Z	    complexity,
2025-09-16T23:46:04.57184Z	    publishedAt,
2025-09-16T23:46:04.571942Z	    isPublished,
2025-09-16T23:46:04.572045Z	    isFeatured,
2025-09-16T23:46:04.572174Z	    viewCount,
2025-09-16T23:46:04.572293Z	    _createdAt,
2025-09-16T23:46:04.572416Z	    _updatedAt
2025-09-16T23:46:04.572537Z	  
2025-09-16T23:46:04.572665Z	      },
2025-09-16T23:46:04.572801Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-16T23:46:04.572925Z	    }
2025-09-16T23:46:04.573049Z	  
2025-09-16T23:46:04.573168Z	Query parameters: {
2025-09-16T23:46:04.573427Z	  limit: 4,
2025-09-16T23:46:04.573668Z	  offset: 0,
2025-09-16T23:46:04.573853Z	  targetMarket: undefined,
2025-09-16T23:46:04.574074Z	  brand: 'pi',
2025-09-16T23:46:04.574315Z	  featured: undefined
2025-09-16T23:46:04.574566Z	}
2025-09-16T23:46:04.57473Z	✅ [getBrandData] Found brand: PI
2025-09-16T23:46:04.574813Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.575147Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.57523Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-16T23:46:04.575446Z	Fetching products with query: 
2025-09-16T23:46:04.575543Z	    {
2025-09-16T23:46:04.575794Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.575966Z	        
2025-09-16T23:46:04.576114Z	    _id,
2025-09-16T23:46:04.57631Z	    _type,
2025-09-16T23:46:04.576403Z	    partNumber,
2025-09-16T23:46:04.576484Z	    "slug": slug.current,
2025-09-16T23:46:04.576624Z	    title,
2025-09-16T23:46:04.576753Z	    shortDescription,
2025-09-16T23:46:04.576859Z	    image,
2025-09-16T23:46:04.577142Z	    brand->{
2025-09-16T23:46:04.577254Z	      name,
2025-09-16T23:46:04.577348Z	      "slug": slug.current,
2025-09-16T23:46:04.577458Z	      logo
2025-09-16T23:46:04.57761Z	    },
2025-09-16T23:46:04.577775Z	    category->{
2025-09-16T23:46:04.577861Z	      name,
2025-09-16T23:46:04.578018Z	      "slug": slug.current
2025-09-16T23:46:04.578203Z	    },
2025-09-16T23:46:04.578294Z	    pricing{
2025-09-16T23:46:04.578594Z	      currency,
2025-09-16T23:46:04.578722Z	      tiers[]{
2025-09-16T23:46:04.578882Z	        quantity,
2025-09-16T23:46:04.578956Z	        price,
2025-09-16T23:46:04.579087Z	        unit
2025-09-16T23:46:04.579274Z	      },
2025-09-16T23:46:04.57938Z	      moq,
2025-09-16T23:46:04.579497Z	      leadTime,
2025-09-16T23:46:04.579637Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.579776Z	      "price": tiers[0].price,
2025-09-16T23:46:04.579903Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.580056Z	    },
2025-09-16T23:46:04.580148Z	    inventory{
2025-09-16T23:46:04.580451Z	      quantity,
2025-09-16T23:46:04.580617Z	      status,
2025-09-16T23:46:04.580764Z	      warehouse,
2025-09-16T23:46:04.580918Z	      lastUpdated,
2025-09-16T23:46:04.581033Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.581142Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.58127Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.581417Z	    },
2025-09-16T23:46:04.581561Z	    isActive,
2025-09-16T23:46:04.581755Z	    isFeatured,
2025-09-16T23:46:04.581866Z	    isNew,
2025-09-16T23:46:04.581985Z	    _createdAt,
2025-09-16T23:46:04.5821Z	    _updatedAt
2025-09-16T23:46:04.58221Z	  
2025-09-16T23:46:04.582321Z	      },
2025-09-16T23:46:04.582445Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-16T23:46:04.582574Z	    }
2025-09-16T23:46:04.582722Z	  
2025-09-16T23:46:04.582841Z	Query parameters: {
2025-09-16T23:46:04.582944Z	  limit: 8,
2025-09-16T23:46:04.583095Z	  offset: 0,
2025-09-16T23:46:04.583228Z	  category: undefined,
2025-09-16T23:46:04.583407Z	  brand: 'pi',
2025-09-16T23:46:04.583549Z	  featured: undefined
2025-09-16T23:46:04.583743Z	}
2025-09-16T23:46:04.583822Z	Fetching solutions with query: 
2025-09-16T23:46:04.58394Z	    {
2025-09-16T23:46:04.584099Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.584244Z	        
2025-09-16T23:46:04.584332Z	    _id,
2025-09-16T23:46:04.584398Z	    title,
2025-09-16T23:46:04.58453Z	    "slug": slug.current,
2025-09-16T23:46:04.584753Z	    summary,
2025-09-16T23:46:04.584897Z	    description,
2025-09-16T23:46:04.585016Z	    coverImage,
2025-09-16T23:46:04.585206Z	    primaryBrand->{
2025-09-16T23:46:04.58536Z	      _id,
2025-09-16T23:46:04.585515Z	      name,
2025-09-16T23:46:04.585654Z	      "slug": slug.current,
2025-09-16T23:46:04.585812Z	      logo
2025-09-16T23:46:04.586013Z	    },
2025-09-16T23:46:04.586157Z	    relatedBrands[]->{
2025-09-16T23:46:04.586351Z	      _id,
2025-09-16T23:46:04.586431Z	      name,
2025-09-16T23:46:04.586621Z	      "slug": slug.current,
2025-09-16T23:46:04.586829Z	      logo
2025-09-16T23:46:04.586989Z	    },
2025-09-16T23:46:04.587092Z	    targetMarket,
2025-09-16T23:46:04.587433Z	    complexity,
2025-09-16T23:46:04.587574Z	    publishedAt,
2025-09-16T23:46:04.587711Z	    isPublished,
2025-09-16T23:46:04.587819Z	    isFeatured,
2025-09-16T23:46:04.588076Z	    viewCount,
2025-09-16T23:46:04.58816Z	    _createdAt,
2025-09-16T23:46:04.588262Z	    _updatedAt
2025-09-16T23:46:04.588369Z	  
2025-09-16T23:46:04.588496Z	      },
2025-09-16T23:46:04.588707Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-16T23:46:04.588829Z	    }
2025-09-16T23:46:04.588994Z	  
2025-09-16T23:46:04.589238Z	Query parameters: {
2025-09-16T23:46:04.589326Z	  limit: 4,
2025-09-16T23:46:04.589465Z	  offset: 0,
2025-09-16T23:46:04.589629Z	  targetMarket: undefined,
2025-09-16T23:46:04.589801Z	  brand: 'pi',
2025-09-16T23:46:04.589944Z	  featured: undefined
2025-09-16T23:46:04.590093Z	}
2025-09-16T23:46:04.590207Z	✅ [getBrandData] Found brand: PI
2025-09-16T23:46:04.590313Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.590428Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.590573Z	Products fetch result: {
2025-09-16T23:46:04.590638Z	  totalProducts: 1,
2025-09-16T23:46:04.590768Z	  fetchedProducts: 1,
2025-09-16T23:46:04.590883Z	  firstProduct: {
2025-09-16T23:46:04.591103Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-16T23:46:04.591288Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-16T23:46:04.591451Z	    _type: 'product',
2025-09-16T23:46:04.591591Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-16T23:46:04.591945Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-16T23:46:04.592024Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:04.592097Z	    image: null,
2025-09-16T23:46:04.592263Z	    inventory: {
2025-09-16T23:46:04.592502Z	      inStock: true,
2025-09-16T23:46:04.5927Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-16T23:46:04.592796Z	      quantity: 0,
2025-09-16T23:46:04.593063Z	      status: 'in_stock',
2025-09-16T23:46:04.593226Z	      warehouse: null
2025-09-16T23:46:04.593391Z	    },
2025-09-16T23:46:04.593544Z	    isActive: true,
2025-09-16T23:46:04.593647Z	    isFeatured: false,
2025-09-16T23:46:04.593746Z	    isNew: false,
2025-09-16T23:46:04.594053Z	    partNumber: 'SKKT106/16E',
2025-09-16T23:46:04.594136Z	    pricing: {
2025-09-16T23:46:04.594377Z	      currency: 'CNY',
2025-09-16T23:46:04.594664Z	      leadTime: null,
2025-09-16T23:46:04.594969Z	      moq: null,
2025-09-16T23:46:04.595122Z	      price: null,
2025-09-16T23:46:04.595506Z	      tiers: null
2025-09-16T23:46:04.595593Z	    },
2025-09-16T23:46:04.595856Z	    shortDescription: 'SKKT106/16E',
2025-09-16T23:46:04.596141Z	    slug: 'SKKT106/16E',
2025-09-16T23:46:04.596386Z	    title: 'SKKT106/16E'
2025-09-16T23:46:04.596653Z	  }
2025-09-16T23:46:04.596776Z	}
2025-09-16T23:46:04.597136Z	Products fetch result: {
2025-09-16T23:46:04.597223Z	  totalProducts: 1,
2025-09-16T23:46:04.597466Z	  fetchedProducts: 1,
2025-09-16T23:46:04.597638Z	  firstProduct: {
2025-09-16T23:46:04.597755Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-16T23:46:04.598047Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-16T23:46:04.598179Z	    _type: 'product',
2025-09-16T23:46:04.598285Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-16T23:46:04.59839Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-16T23:46:04.598504Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:04.598665Z	    image: null,
2025-09-16T23:46:04.598787Z	    inventory: {
2025-09-16T23:46:04.598899Z	      inStock: true,
2025-09-16T23:46:04.599041Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-16T23:46:04.599145Z	      quantity: 0,
2025-09-16T23:46:04.599269Z	      status: 'in_stock',
2025-09-16T23:46:04.599371Z	      warehouse: null
2025-09-16T23:46:04.599468Z	    },
2025-09-16T23:46:04.599585Z	    isActive: true,
2025-09-16T23:46:04.599794Z	    isFeatured: false,
2025-09-16T23:46:04.600092Z	    isNew: false,
2025-09-16T23:46:04.60021Z	    partNumber: 'SKKT106/16E',
2025-09-16T23:46:04.600562Z	    pricing: {
2025-09-16T23:46:04.600796Z	      currency: 'CNY',
2025-09-16T23:46:04.600896Z	      leadTime: null,
2025-09-16T23:46:04.601005Z	      moq: null,
2025-09-16T23:46:04.601263Z	      price: null,
2025-09-16T23:46:04.601381Z	      tiers: null
2025-09-16T23:46:04.60151Z	    },
2025-09-16T23:46:04.601627Z	    shortDescription: 'SKKT106/16E',
2025-09-16T23:46:04.601754Z	    slug: 'SKKT106/16E',
2025-09-16T23:46:04.601838Z	    title: 'SKKT106/16E'
2025-09-16T23:46:04.601933Z	  }
2025-09-16T23:46:04.60204Z	}
2025-09-16T23:46:04.602141Z	✅ [getBrandData] Found brand: Semikron
2025-09-16T23:46:04.602265Z	✅ [getBrandData] Found brand: Semikron
2025-09-16T23:46:04.602418Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.60258Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.602657Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.602804Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.602893Z	✅ [getBrandData] Found brand: PI
2025-09-16T23:46:04.603001Z	✅ [getBrandData] Found brand: PI
2025-09-16T23:46:04.603137Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.603269Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.603369Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.603517Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-16T23:46:04.603605Z	Fetching products with query: 
2025-09-16T23:46:04.603715Z	    {
2025-09-16T23:46:04.603896Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.604028Z	        
2025-09-16T23:46:04.604136Z	    _id,
2025-09-16T23:46:04.6043Z	    _type,
2025-09-16T23:46:04.604392Z	    partNumber,
2025-09-16T23:46:04.604598Z	    "slug": slug.current,
2025-09-16T23:46:04.604703Z	    title,
2025-09-16T23:46:04.60485Z	    shortDescription,
2025-09-16T23:46:04.605011Z	    image,
2025-09-16T23:46:04.605197Z	    brand->{
2025-09-16T23:46:04.605328Z	      name,
2025-09-16T23:46:04.605406Z	      "slug": slug.current,
2025-09-16T23:46:04.605507Z	      logo
2025-09-16T23:46:04.605626Z	    },
2025-09-16T23:46:04.60575Z	    category->{
2025-09-16T23:46:04.605859Z	      name,
2025-09-16T23:46:04.605973Z	      "slug": slug.current
2025-09-16T23:46:04.6061Z	    },
2025-09-16T23:46:04.606247Z	    pricing{
2025-09-16T23:46:04.606343Z	      currency,
2025-09-16T23:46:04.60644Z	      tiers[]{
2025-09-16T23:46:04.606537Z	        quantity,
2025-09-16T23:46:04.606657Z	        price,
2025-09-16T23:46:04.606782Z	        unit
2025-09-16T23:46:04.606932Z	      },
2025-09-16T23:46:04.607005Z	      moq,
2025-09-16T23:46:04.607112Z	      leadTime,
2025-09-16T23:46:04.607236Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.607374Z	      "price": tiers[0].price,
2025-09-16T23:46:04.60746Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.607567Z	    },
2025-09-16T23:46:04.607683Z	    inventory{
2025-09-16T23:46:04.607785Z	      quantity,
2025-09-16T23:46:04.607876Z	      status,
2025-09-16T23:46:04.608147Z	      warehouse,
2025-09-16T23:46:04.608441Z	      lastUpdated,
2025-09-16T23:46:04.608575Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.60872Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.60883Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.608997Z	    },
2025-09-16T23:46:04.609098Z	    isActive,
2025-09-16T23:46:04.609194Z	    isFeatured,
2025-09-16T23:46:04.609286Z	    isNew,
2025-09-16T23:46:04.609386Z	    _createdAt,
2025-09-16T23:46:04.609487Z	    _updatedAt
2025-09-16T23:46:04.609562Z	  
2025-09-16T23:46:04.609664Z	      },
2025-09-16T23:46:04.60977Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-16T23:46:04.60984Z	    }
2025-09-16T23:46:04.609896Z	  
2025-09-16T23:46:04.609951Z	Query parameters: {
2025-09-16T23:46:04.610005Z	  limit: 8,
2025-09-16T23:46:04.610065Z	  offset: 0,
2025-09-16T23:46:04.610118Z	  category: undefined,
2025-09-16T23:46:04.610172Z	  brand: 'ncc',
2025-09-16T23:46:04.610248Z	  featured: undefined
2025-09-16T23:46:04.610338Z	}
2025-09-16T23:46:04.610446Z	Fetching solutions with query: 
2025-09-16T23:46:04.610556Z	    {
2025-09-16T23:46:04.610663Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.610856Z	        
2025-09-16T23:46:04.61093Z	    _id,
2025-09-16T23:46:04.611008Z	    title,
2025-09-16T23:46:04.619877Z	    "slug": slug.current,
2025-09-16T23:46:04.620034Z	    summary,
2025-09-16T23:46:04.620104Z	    description,
2025-09-16T23:46:04.620246Z	    coverImage,
2025-09-16T23:46:04.620367Z	    primaryBrand->{
2025-09-16T23:46:04.632938Z	      _id,
2025-09-16T23:46:04.633029Z	      name,
2025-09-16T23:46:04.63309Z	      "slug": slug.current,
2025-09-16T23:46:04.633157Z	      logo
2025-09-16T23:46:04.633214Z	    },
2025-09-16T23:46:04.633477Z	    relatedBrands[]->{
2025-09-16T23:46:04.633655Z	      _id,
2025-09-16T23:46:04.633797Z	      name,
2025-09-16T23:46:04.633953Z	      "slug": slug.current,
2025-09-16T23:46:04.634081Z	      logo
2025-09-16T23:46:04.634191Z	    },
2025-09-16T23:46:04.634308Z	    targetMarket,
2025-09-16T23:46:04.634443Z	    complexity,
2025-09-16T23:46:04.634551Z	    publishedAt,
2025-09-16T23:46:04.634703Z	    isPublished,
2025-09-16T23:46:04.63483Z	    isFeatured,
2025-09-16T23:46:04.634958Z	    viewCount,
2025-09-16T23:46:04.635087Z	    _createdAt,
2025-09-16T23:46:04.6352Z	    _updatedAt
2025-09-16T23:46:04.635301Z	  
2025-09-16T23:46:04.63542Z	      },
2025-09-16T23:46:04.635531Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-16T23:46:04.635654Z	    }
2025-09-16T23:46:04.635809Z	  
2025-09-16T23:46:04.635921Z	Query parameters: {
2025-09-16T23:46:04.636023Z	  limit: 4,
2025-09-16T23:46:04.636138Z	  offset: 0,
2025-09-16T23:46:04.636249Z	  targetMarket: undefined,
2025-09-16T23:46:04.636358Z	  brand: 'ncc',
2025-09-16T23:46:04.636478Z	  featured: undefined
2025-09-16T23:46:04.63658Z	}
2025-09-16T23:46:04.636693Z	✅ [getBrandData] Found brand: ncc
2025-09-16T23:46:04.636812Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.636923Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.637026Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-16T23:46:04.637144Z	Fetching products with query: 
2025-09-16T23:46:04.637585Z	    {
2025-09-16T23:46:04.637741Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.637818Z	        
2025-09-16T23:46:04.6379Z	    _id,
2025-09-16T23:46:04.637959Z	    _type,
2025-09-16T23:46:04.638013Z	    partNumber,
2025-09-16T23:46:04.638069Z	    "slug": slug.current,
2025-09-16T23:46:04.638122Z	    title,
2025-09-16T23:46:04.638176Z	    shortDescription,
2025-09-16T23:46:04.638229Z	    image,
2025-09-16T23:46:04.638283Z	    brand->{
2025-09-16T23:46:04.638336Z	      name,
2025-09-16T23:46:04.638391Z	      "slug": slug.current,
2025-09-16T23:46:04.63846Z	      logo
2025-09-16T23:46:04.638515Z	    },
2025-09-16T23:46:04.638568Z	    category->{
2025-09-16T23:46:04.638621Z	      name,
2025-09-16T23:46:04.638693Z	      "slug": slug.current
2025-09-16T23:46:04.638766Z	    },
2025-09-16T23:46:04.638822Z	    pricing{
2025-09-16T23:46:04.638876Z	      currency,
2025-09-16T23:46:04.638929Z	      tiers[]{
2025-09-16T23:46:04.638982Z	        quantity,
2025-09-16T23:46:04.639034Z	        price,
2025-09-16T23:46:04.639087Z	        unit
2025-09-16T23:46:04.639139Z	      },
2025-09-16T23:46:04.639191Z	      moq,
2025-09-16T23:46:04.639259Z	      leadTime,
2025-09-16T23:46:04.639315Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.639379Z	      "price": tiers[0].price,
2025-09-16T23:46:04.639437Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.639493Z	    },
2025-09-16T23:46:04.639546Z	    inventory{
2025-09-16T23:46:04.639599Z	      quantity,
2025-09-16T23:46:04.639656Z	      status,
2025-09-16T23:46:04.639747Z	      warehouse,
2025-09-16T23:46:04.639813Z	      lastUpdated,
2025-09-16T23:46:04.639871Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.639929Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.639984Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.640039Z	    },
2025-09-16T23:46:04.640094Z	    isActive,
2025-09-16T23:46:04.640152Z	    isFeatured,
2025-09-16T23:46:04.640207Z	    isNew,
2025-09-16T23:46:04.640262Z	    _createdAt,
2025-09-16T23:46:04.640316Z	    _updatedAt
2025-09-16T23:46:04.64037Z	  
2025-09-16T23:46:04.640428Z	      },
2025-09-16T23:46:04.640638Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-16T23:46:04.640761Z	    }
2025-09-16T23:46:04.640825Z	  
2025-09-16T23:46:04.640883Z	Query parameters: {
2025-09-16T23:46:04.640938Z	  limit: 8,
2025-09-16T23:46:04.640991Z	  offset: 0,
2025-09-16T23:46:04.641047Z	  category: undefined,
2025-09-16T23:46:04.6411Z	  brand: 'lem',
2025-09-16T23:46:04.641153Z	  featured: undefined
2025-09-16T23:46:04.641208Z	}
2025-09-16T23:46:04.641262Z	Fetching solutions with query: 
2025-09-16T23:46:04.641315Z	    {
2025-09-16T23:46:04.641369Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.641439Z	        
2025-09-16T23:46:04.641496Z	    _id,
2025-09-16T23:46:04.64155Z	    title,
2025-09-16T23:46:04.641603Z	    "slug": slug.current,
2025-09-16T23:46:04.641657Z	    summary,
2025-09-16T23:46:04.64175Z	    description,
2025-09-16T23:46:04.641809Z	    coverImage,
2025-09-16T23:46:04.641864Z	    primaryBrand->{
2025-09-16T23:46:04.641917Z	      _id,
2025-09-16T23:46:04.64197Z	      name,
2025-09-16T23:46:04.642023Z	      "slug": slug.current,
2025-09-16T23:46:04.642078Z	      logo
2025-09-16T23:46:04.642132Z	    },
2025-09-16T23:46:04.642186Z	    relatedBrands[]->{
2025-09-16T23:46:04.642246Z	      _id,
2025-09-16T23:46:04.642302Z	      name,
2025-09-16T23:46:04.642357Z	      "slug": slug.current,
2025-09-16T23:46:04.642414Z	      logo
2025-09-16T23:46:04.642473Z	    },
2025-09-16T23:46:04.642526Z	    targetMarket,
2025-09-16T23:46:04.642584Z	    complexity,
2025-09-16T23:46:04.642639Z	    publishedAt,
2025-09-16T23:46:04.642721Z	    isPublished,
2025-09-16T23:46:04.642783Z	    isFeatured,
2025-09-16T23:46:04.642837Z	    viewCount,
2025-09-16T23:46:04.64289Z	    _createdAt,
2025-09-16T23:46:04.642944Z	    _updatedAt
2025-09-16T23:46:04.642997Z	  
2025-09-16T23:46:04.64305Z	      },
2025-09-16T23:46:04.643105Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-16T23:46:04.643166Z	    }
2025-09-16T23:46:04.643222Z	  
2025-09-16T23:46:04.643276Z	Query parameters: {
2025-09-16T23:46:04.643329Z	  limit: 4,
2025-09-16T23:46:04.643381Z	  offset: 0,
2025-09-16T23:46:04.643437Z	  targetMarket: undefined,
2025-09-16T23:46:04.64349Z	  brand: 'lem',
2025-09-16T23:46:04.643543Z	  featured: undefined
2025-09-16T23:46:04.643596Z	}
2025-09-16T23:46:04.643649Z	✅ [getBrandData] Found brand: LEM
2025-09-16T23:46:04.64374Z	Products fetch result: {
2025-09-16T23:46:04.643802Z	  totalProducts: 3,
2025-09-16T23:46:04.643856Z	  fetchedProducts: 3,
2025-09-16T23:46:04.64391Z	  firstProduct: {
2025-09-16T23:46:04.643964Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-16T23:46:04.644017Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-16T23:46:04.64407Z	    _type: 'product',
2025-09-16T23:46:04.644124Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-16T23:46:04.644176Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-16T23:46:04.64423Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-16T23:46:04.644293Z	    image: null,
2025-09-16T23:46:04.644348Z	    inventory: {
2025-09-16T23:46:04.644403Z	      inStock: true,
2025-09-16T23:46:04.644461Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-16T23:46:04.644516Z	      quantity: 0,
2025-09-16T23:46:04.644577Z	      status: 'in_stock',
2025-09-16T23:46:04.644633Z	      warehouse: null
2025-09-16T23:46:04.644715Z	    },
2025-09-16T23:46:04.644778Z	    isActive: true,
2025-09-16T23:46:04.644834Z	    isFeatured: false,
2025-09-16T23:46:04.644888Z	    isNew: false,
2025-09-16T23:46:04.644941Z	    partNumber: 'la55-p',
2025-09-16T23:46:04.644995Z	    pricing: {
2025-09-16T23:46:04.64505Z	      currency: 'CNY',
2025-09-16T23:46:04.645231Z	      leadTime: null,
2025-09-16T23:46:04.645392Z	      moq: null,
2025-09-16T23:46:04.645508Z	      price: null,
2025-09-16T23:46:04.645629Z	      tiers: null
2025-09-16T23:46:04.646001Z	    },
2025-09-16T23:46:04.646189Z	    shortDescription: '电流传感器la55-p',
2025-09-16T23:46:04.646398Z	    slug: 'la55-p',
2025-09-16T23:46:04.646546Z	    title: '电流传感器la55-p'
2025-09-16T23:46:04.646666Z	  }
2025-09-16T23:46:04.646789Z	}
2025-09-16T23:46:04.646888Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.646986Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-16T23:46:04.647105Z	Fetching products with query: 
2025-09-16T23:46:04.647209Z	    {
2025-09-16T23:46:04.647307Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.647412Z	        
2025-09-16T23:46:04.64751Z	    _id,
2025-09-16T23:46:04.647612Z	    _type,
2025-09-16T23:46:04.647723Z	    partNumber,
2025-09-16T23:46:04.647825Z	    "slug": slug.current,
2025-09-16T23:46:04.64793Z	    title,
2025-09-16T23:46:04.648039Z	    shortDescription,
2025-09-16T23:46:04.648143Z	    image,
2025-09-16T23:46:04.64825Z	    brand->{
2025-09-16T23:46:04.648358Z	      name,
2025-09-16T23:46:04.648465Z	      "slug": slug.current,
2025-09-16T23:46:04.648558Z	      logo
2025-09-16T23:46:04.648682Z	    },
2025-09-16T23:46:04.648808Z	    category->{
2025-09-16T23:46:04.648915Z	      name,
2025-09-16T23:46:04.649182Z	      "slug": slug.current
2025-09-16T23:46:04.649295Z	    },
2025-09-16T23:46:04.649383Z	    pricing{
2025-09-16T23:46:04.64965Z	      currency,
2025-09-16T23:46:04.64978Z	      tiers[]{
2025-09-16T23:46:04.649888Z	        quantity,
2025-09-16T23:46:04.649986Z	        price,
2025-09-16T23:46:04.650094Z	        unit
2025-09-16T23:46:04.650216Z	      },
2025-09-16T23:46:04.650331Z	      moq,
2025-09-16T23:46:04.650437Z	      leadTime,
2025-09-16T23:46:04.650549Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.650706Z	      "price": tiers[0].price,
2025-09-16T23:46:04.650843Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.65097Z	    },
2025-09-16T23:46:04.651099Z	    inventory{
2025-09-16T23:46:04.651225Z	      quantity,
2025-09-16T23:46:04.651358Z	      status,
2025-09-16T23:46:04.651469Z	      warehouse,
2025-09-16T23:46:04.65157Z	      lastUpdated,
2025-09-16T23:46:04.65171Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.651863Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.651979Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.652085Z	    },
2025-09-16T23:46:04.652187Z	    isActive,
2025-09-16T23:46:04.652308Z	    isFeatured,
2025-09-16T23:46:04.652427Z	    isNew,
2025-09-16T23:46:04.652546Z	    _createdAt,
2025-09-16T23:46:04.652687Z	    _updatedAt
2025-09-16T23:46:04.652811Z	  
2025-09-16T23:46:04.652929Z	      },
2025-09-16T23:46:04.653062Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-16T23:46:04.653192Z	    }
2025-09-16T23:46:04.653391Z	  
2025-09-16T23:46:04.653649Z	Query parameters: {
2025-09-16T23:46:04.653914Z	  limit: 8,
2025-09-16T23:46:04.654008Z	  offset: 0,
2025-09-16T23:46:04.654205Z	  category: undefined,
2025-09-16T23:46:04.654322Z	  brand: 'lem',
2025-09-16T23:46:04.654543Z	  featured: undefined
2025-09-16T23:46:04.654727Z	}
2025-09-16T23:46:04.654825Z	Fetching solutions with query: 
2025-09-16T23:46:04.655013Z	    {
2025-09-16T23:46:04.655368Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.655566Z	        
2025-09-16T23:46:04.65573Z	    _id,
2025-09-16T23:46:04.655904Z	    title,
2025-09-16T23:46:04.656066Z	    "slug": slug.current,
2025-09-16T23:46:04.656161Z	    summary,
2025-09-16T23:46:04.65642Z	    description,
2025-09-16T23:46:04.656601Z	    coverImage,
2025-09-16T23:46:04.656756Z	    primaryBrand->{
2025-09-16T23:46:04.656905Z	      _id,
2025-09-16T23:46:04.657008Z	      name,
2025-09-16T23:46:04.657109Z	      "slug": slug.current,
2025-09-16T23:46:04.657205Z	      logo
2025-09-16T23:46:04.657311Z	    },
2025-09-16T23:46:04.657425Z	    relatedBrands[]->{
2025-09-16T23:46:04.657521Z	      _id,
2025-09-16T23:46:04.657616Z	      name,
2025-09-16T23:46:04.657735Z	      "slug": slug.current,
2025-09-16T23:46:04.657838Z	      logo
2025-09-16T23:46:04.65795Z	    },
2025-09-16T23:46:04.658063Z	    targetMarket,
2025-09-16T23:46:04.658186Z	    complexity,
2025-09-16T23:46:04.658343Z	    publishedAt,
2025-09-16T23:46:04.658503Z	    isPublished,
2025-09-16T23:46:04.658655Z	    isFeatured,
2025-09-16T23:46:04.658821Z	    viewCount,
2025-09-16T23:46:04.658972Z	    _createdAt,
2025-09-16T23:46:04.659124Z	    _updatedAt
2025-09-16T23:46:04.659282Z	  
2025-09-16T23:46:04.659431Z	      },
2025-09-16T23:46:04.659568Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-16T23:46:04.659758Z	    }
2025-09-16T23:46:04.65991Z	  
2025-09-16T23:46:04.660013Z	Query parameters: {
2025-09-16T23:46:04.660128Z	  limit: 4,
2025-09-16T23:46:04.66026Z	  offset: 0,
2025-09-16T23:46:04.66038Z	  targetMarket: undefined,
2025-09-16T23:46:04.660494Z	  brand: 'lem',
2025-09-16T23:46:04.660738Z	  featured: undefined
2025-09-16T23:46:04.660821Z	}
2025-09-16T23:46:04.661003Z	✅ [getBrandData] Found brand: LEM
2025-09-16T23:46:04.661139Z	Products fetch result: {
2025-09-16T23:46:04.661355Z	  totalProducts: 3,
2025-09-16T23:46:04.66148Z	  fetchedProducts: 3,
2025-09-16T23:46:04.661584Z	  firstProduct: {
2025-09-16T23:46:04.661757Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-16T23:46:04.661871Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-16T23:46:04.66202Z	    _type: 'product',
2025-09-16T23:46:04.662183Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-16T23:46:04.662287Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-16T23:46:04.662387Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-16T23:46:04.662487Z	    image: null,
2025-09-16T23:46:04.662609Z	    inventory: {
2025-09-16T23:46:04.662728Z	      inStock: true,
2025-09-16T23:46:04.662879Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-16T23:46:04.663015Z	      quantity: 0,
2025-09-16T23:46:04.663121Z	      status: 'in_stock',
2025-09-16T23:46:04.663243Z	      warehouse: null
2025-09-16T23:46:04.663343Z	    },
2025-09-16T23:46:04.663447Z	    isActive: true,
2025-09-16T23:46:04.663585Z	    isFeatured: false,
2025-09-16T23:46:04.663743Z	    isNew: false,
2025-09-16T23:46:04.663847Z	    partNumber: 'la55-p',
2025-09-16T23:46:04.663941Z	    pricing: {
2025-09-16T23:46:04.664048Z	      currency: 'CNY',
2025-09-16T23:46:04.664167Z	      leadTime: null,
2025-09-16T23:46:04.664311Z	      moq: null,
2025-09-16T23:46:04.664427Z	      price: null,
2025-09-16T23:46:04.664598Z	      tiers: null
2025-09-16T23:46:04.664747Z	    },
2025-09-16T23:46:04.664853Z	    shortDescription: '电流传感器la55-p',
2025-09-16T23:46:04.664951Z	    slug: 'la55-p',
2025-09-16T23:46:04.665071Z	    title: '电流传感器la55-p'
2025-09-16T23:46:04.665233Z	  }
2025-09-16T23:46:04.665413Z	}
2025-09-16T23:46:04.665575Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.665698Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:46:04.66584Z	Fetching products with query: 
2025-09-16T23:46:04.665941Z	    {
2025-09-16T23:46:04.666133Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.666238Z	        
2025-09-16T23:46:04.666346Z	    _id,
2025-09-16T23:46:04.666451Z	    _type,
2025-09-16T23:46:04.66662Z	    partNumber,
2025-09-16T23:46:04.666722Z	    "slug": slug.current,
2025-09-16T23:46:04.666805Z	    title,
2025-09-16T23:46:04.666864Z	    shortDescription,
2025-09-16T23:46:04.666921Z	    image,
2025-09-16T23:46:04.666979Z	    brand->{
2025-09-16T23:46:04.667041Z	      name,
2025-09-16T23:46:04.667099Z	      "slug": slug.current,
2025-09-16T23:46:04.667157Z	      logo
2025-09-16T23:46:04.667213Z	    },
2025-09-16T23:46:04.667268Z	    category->{
2025-09-16T23:46:04.667441Z	      name,
2025-09-16T23:46:04.66757Z	      "slug": slug.current
2025-09-16T23:46:04.667664Z	    },
2025-09-16T23:46:04.667833Z	    pricing{
2025-09-16T23:46:04.667976Z	      currency,
2025-09-16T23:46:04.668072Z	      tiers[]{
2025-09-16T23:46:04.668187Z	        quantity,
2025-09-16T23:46:04.668337Z	        price,
2025-09-16T23:46:04.668501Z	        unit
2025-09-16T23:46:04.66864Z	      },
2025-09-16T23:46:04.668821Z	      moq,
2025-09-16T23:46:04.668959Z	      leadTime,
2025-09-16T23:46:04.669104Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.669275Z	      "price": tiers[0].price,
2025-09-16T23:46:04.669426Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.669573Z	    },
2025-09-16T23:46:04.669726Z	    inventory{
2025-09-16T23:46:04.669882Z	      quantity,
2025-09-16T23:46:04.670004Z	      status,
2025-09-16T23:46:04.670159Z	      warehouse,
2025-09-16T23:46:04.670248Z	      lastUpdated,
2025-09-16T23:46:04.670377Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.670519Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.67063Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.67077Z	    },
2025-09-16T23:46:04.670918Z	    isActive,
2025-09-16T23:46:04.671019Z	    isFeatured,
2025-09-16T23:46:04.671146Z	    isNew,
2025-09-16T23:46:04.671224Z	    _createdAt,
2025-09-16T23:46:04.671344Z	    _updatedAt
2025-09-16T23:46:04.671467Z	  
2025-09-16T23:46:04.671581Z	      },
2025-09-16T23:46:04.671702Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:46:04.671856Z	    }
2025-09-16T23:46:04.671935Z	  
2025-09-16T23:46:04.672039Z	Query parameters: {
2025-09-16T23:46:04.672329Z	  limit: 8,
2025-09-16T23:46:04.672463Z	  offset: 0,
2025-09-16T23:46:04.672729Z	  category: undefined,
2025-09-16T23:46:04.672878Z	  brand: 'cree',
2025-09-16T23:46:04.673069Z	  featured: undefined
2025-09-16T23:46:04.673204Z	}
2025-09-16T23:46:04.673346Z	Fetching solutions with query: 
2025-09-16T23:46:04.673495Z	    {
2025-09-16T23:46:04.673728Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.673833Z	        
2025-09-16T23:46:04.673996Z	    _id,
2025-09-16T23:46:04.674146Z	    title,
2025-09-16T23:46:04.674269Z	    "slug": slug.current,
2025-09-16T23:46:04.674556Z	    summary,
2025-09-16T23:46:04.674752Z	    description,
2025-09-16T23:46:04.674921Z	    coverImage,
2025-09-16T23:46:04.675012Z	    primaryBrand->{
2025-09-16T23:46:04.67512Z	      _id,
2025-09-16T23:46:04.675246Z	      name,
2025-09-16T23:46:04.675369Z	      "slug": slug.current,
2025-09-16T23:46:04.675487Z	      logo
2025-09-16T23:46:04.675617Z	    },
2025-09-16T23:46:04.675777Z	    relatedBrands[]->{
2025-09-16T23:46:04.675897Z	      _id,
2025-09-16T23:46:04.676007Z	      name,
2025-09-16T23:46:04.676131Z	      "slug": slug.current,
2025-09-16T23:46:04.67632Z	      logo
2025-09-16T23:46:04.676462Z	    },
2025-09-16T23:46:04.676564Z	    targetMarket,
2025-09-16T23:46:04.67676Z	    complexity,
2025-09-16T23:46:04.676874Z	    publishedAt,
2025-09-16T23:46:04.676984Z	    isPublished,
2025-09-16T23:46:04.677104Z	    isFeatured,
2025-09-16T23:46:04.677278Z	    viewCount,
2025-09-16T23:46:04.677395Z	    _createdAt,
2025-09-16T23:46:04.677503Z	    _updatedAt
2025-09-16T23:46:04.677854Z	  
2025-09-16T23:46:04.677937Z	      },
2025-09-16T23:46:04.678132Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:46:04.678271Z	    }
2025-09-16T23:46:04.678408Z	  
2025-09-16T23:46:04.678542Z	Query parameters: {
2025-09-16T23:46:04.678692Z	  limit: 4,
2025-09-16T23:46:04.678792Z	  offset: 0,
2025-09-16T23:46:04.679031Z	  targetMarket: undefined,
2025-09-16T23:46:04.67931Z	  brand: 'cree',
2025-09-16T23:46:04.679403Z	  featured: undefined
2025-09-16T23:46:04.67966Z	}
2025-09-16T23:46:04.679785Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:46:04.680071Z	Products fetch result: {
2025-09-16T23:46:04.680177Z	  totalProducts: 4,
2025-09-16T23:46:04.680322Z	  fetchedProducts: 4,
2025-09-16T23:46:04.680409Z	  firstProduct: {
2025-09-16T23:46:04.680498Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:46:04.680629Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:46:04.68079Z	    _type: 'product',
2025-09-16T23:46:04.681017Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:46:04.681124Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:46:04.681373Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:04.681465Z	    image: null,
2025-09-16T23:46:04.681524Z	    inventory: {
2025-09-16T23:46:04.681828Z	      inStock: true,
2025-09-16T23:46:04.681911Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:46:04.68197Z	      quantity: 0,
2025-09-16T23:46:04.682268Z	      status: 'in_stock',
2025-09-16T23:46:04.682459Z	      warehouse: null
2025-09-16T23:46:04.682614Z	    },
2025-09-16T23:46:04.682776Z	    isActive: true,
2025-09-16T23:46:04.682864Z	    isFeatured: false,
2025-09-16T23:46:04.682922Z	    isNew: false,
2025-09-16T23:46:04.683071Z	    partNumber: '11111',
2025-09-16T23:46:04.68319Z	    pricing: {
2025-09-16T23:46:04.683328Z	      currency: 'CNY',
2025-09-16T23:46:04.68349Z	      leadTime: null,
2025-09-16T23:46:04.683608Z	      moq: null,
2025-09-16T23:46:04.683739Z	      price: null,
2025-09-16T23:46:04.683875Z	      tiers: null
2025-09-16T23:46:04.684002Z	    },
2025-09-16T23:46:04.684123Z	    shortDescription: '11111',
2025-09-16T23:46:04.684234Z	    slug: 'sic mosfet',
2025-09-16T23:46:04.684335Z	    title: '111111'
2025-09-16T23:46:04.684456Z	  }
2025-09-16T23:46:04.684555Z	}
2025-09-16T23:46:04.684651Z	Solutions fetch result: {
2025-09-16T23:46:04.684772Z	  totalSolutions: 6,
2025-09-16T23:46:04.684896Z	  fetchedSolutions: 4,
2025-09-16T23:46:04.684995Z	  firstSolution: {
2025-09-16T23:46:04.685103Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:46:04.685217Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:46:04.685294Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:46:04.685377Z	    complexity: 'medium',
2025-09-16T23:46:04.685644Z	    coverImage: null,
2025-09-16T23:46:04.685824Z	    description: [ [Object] ],
2025-09-16T23:46:04.686077Z	    isFeatured: false,
2025-09-16T23:46:04.686165Z	    isPublished: true,
2025-09-16T23:46:04.686226Z	    primaryBrand: {
2025-09-16T23:46:04.686511Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:46:04.686584Z	      logo: null,
2025-09-16T23:46:04.686652Z	      name: 'CREE',
2025-09-16T23:46:04.686872Z	      slug: 'cree'
2025-09-16T23:46:04.686945Z	    },
2025-09-16T23:46:04.687003Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:46:04.687064Z	    relatedBrands: null,
2025-09-16T23:46:04.687123Z	    slug: '11111',
2025-09-16T23:46:04.687198Z	    summary: '11111',
2025-09-16T23:46:04.687262Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:04.687317Z	    title: '11111',
2025-09-16T23:46:04.687377Z	    viewCount: 0
2025-09-16T23:46:04.687437Z	  }
2025-09-16T23:46:04.687496Z	}
2025-09-16T23:46:04.687559Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:46:04.687634Z	Fetching products with query: 
2025-09-16T23:46:04.687706Z	    {
2025-09-16T23:46:04.687767Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.68783Z	        
2025-09-16T23:46:04.687889Z	    _id,
2025-09-16T23:46:04.687951Z	    _type,
2025-09-16T23:46:04.688015Z	    partNumber,
2025-09-16T23:46:04.68807Z	    "slug": slug.current,
2025-09-16T23:46:04.688123Z	    title,
2025-09-16T23:46:04.688192Z	    shortDescription,
2025-09-16T23:46:04.688255Z	    image,
2025-09-16T23:46:04.688315Z	    brand->{
2025-09-16T23:46:04.688372Z	      name,
2025-09-16T23:46:04.688429Z	      "slug": slug.current,
2025-09-16T23:46:04.688488Z	      logo
2025-09-16T23:46:04.688546Z	    },
2025-09-16T23:46:04.68862Z	    category->{
2025-09-16T23:46:04.68869Z	      name,
2025-09-16T23:46:04.688751Z	      "slug": slug.current
2025-09-16T23:46:04.688811Z	    },
2025-09-16T23:46:04.688867Z	    pricing{
2025-09-16T23:46:04.688927Z	      currency,
2025-09-16T23:46:04.68898Z	      tiers[]{
2025-09-16T23:46:04.689035Z	        quantity,
2025-09-16T23:46:04.689088Z	        price,
2025-09-16T23:46:04.689139Z	        unit
2025-09-16T23:46:04.689192Z	      },
2025-09-16T23:46:04.689244Z	      moq,
2025-09-16T23:46:04.689296Z	      leadTime,
2025-09-16T23:46:04.689358Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.689414Z	      "price": tiers[0].price,
2025-09-16T23:46:04.689467Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.68952Z	    },
2025-09-16T23:46:04.689573Z	    inventory{
2025-09-16T23:46:04.689637Z	      quantity,
2025-09-16T23:46:04.689707Z	      status,
2025-09-16T23:46:04.689764Z	      warehouse,
2025-09-16T23:46:04.689824Z	      lastUpdated,
2025-09-16T23:46:04.689881Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.689937Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.689991Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.690046Z	    },
2025-09-16T23:46:04.6901Z	    isActive,
2025-09-16T23:46:04.690153Z	    isFeatured,
2025-09-16T23:46:04.690207Z	    isNew,
2025-09-16T23:46:04.69026Z	    _createdAt,
2025-09-16T23:46:04.690313Z	    _updatedAt
2025-09-16T23:46:04.690369Z	  
2025-09-16T23:46:04.690423Z	      },
2025-09-16T23:46:04.690476Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:46:04.690541Z	    }
2025-09-16T23:46:04.6906Z	  
2025-09-16T23:46:04.690663Z	Query parameters: {
2025-09-16T23:46:04.690732Z	  limit: 8,
2025-09-16T23:46:04.690787Z	  offset: 0,
2025-09-16T23:46:04.703937Z	  category: undefined,
2025-09-16T23:46:04.704032Z	  brand: 'cree',
2025-09-16T23:46:04.704093Z	  featured: undefined
2025-09-16T23:46:04.70415Z	}
2025-09-16T23:46:04.704219Z	Fetching solutions with query: 
2025-09-16T23:46:04.704275Z	    {
2025-09-16T23:46:04.70433Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.704389Z	        
2025-09-16T23:46:04.704443Z	    _id,
2025-09-16T23:46:04.704498Z	    title,
2025-09-16T23:46:04.704568Z	    "slug": slug.current,
2025-09-16T23:46:04.704646Z	    summary,
2025-09-16T23:46:04.704721Z	    description,
2025-09-16T23:46:04.704787Z	    coverImage,
2025-09-16T23:46:04.704847Z	    primaryBrand->{
2025-09-16T23:46:04.704908Z	      _id,
2025-09-16T23:46:04.704969Z	      name,
2025-09-16T23:46:04.705028Z	      "slug": slug.current,
2025-09-16T23:46:04.705082Z	      logo
2025-09-16T23:46:04.705141Z	    },
2025-09-16T23:46:04.705202Z	    relatedBrands[]->{
2025-09-16T23:46:04.705658Z	      _id,
2025-09-16T23:46:04.705886Z	      name,
2025-09-16T23:46:04.706002Z	      "slug": slug.current,
2025-09-16T23:46:04.706131Z	      logo
2025-09-16T23:46:04.706254Z	    },
2025-09-16T23:46:04.706437Z	    targetMarket,
2025-09-16T23:46:04.706522Z	    complexity,
2025-09-16T23:46:04.706585Z	    publishedAt,
2025-09-16T23:46:04.706779Z	    isPublished,
2025-09-16T23:46:04.706907Z	    isFeatured,
2025-09-16T23:46:04.707052Z	    viewCount,
2025-09-16T23:46:04.707151Z	    _createdAt,
2025-09-16T23:46:04.707318Z	    _updatedAt
2025-09-16T23:46:04.707433Z	  
2025-09-16T23:46:04.70759Z	      },
2025-09-16T23:46:04.707855Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:46:04.707948Z	    }
2025-09-16T23:46:04.708052Z	  
2025-09-16T23:46:04.708153Z	Query parameters: {
2025-09-16T23:46:04.708256Z	  limit: 4,
2025-09-16T23:46:04.708337Z	  offset: 0,
2025-09-16T23:46:04.708402Z	  targetMarket: undefined,
2025-09-16T23:46:04.708467Z	  brand: 'cree',
2025-09-16T23:46:04.708522Z	  featured: undefined
2025-09-16T23:46:04.708577Z	}
2025-09-16T23:46:04.708632Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:46:04.708739Z	Products fetch result: {
2025-09-16T23:46:04.708806Z	  totalProducts: 4,
2025-09-16T23:46:04.70886Z	  fetchedProducts: 4,
2025-09-16T23:46:04.708913Z	  firstProduct: {
2025-09-16T23:46:04.708967Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:46:04.70902Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:46:04.709075Z	    _type: 'product',
2025-09-16T23:46:04.709127Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:46:04.70918Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:46:04.709234Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:04.709289Z	    image: null,
2025-09-16T23:46:04.709342Z	    inventory: {
2025-09-16T23:46:04.709396Z	      inStock: true,
2025-09-16T23:46:04.709457Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:46:04.709514Z	      quantity: 0,
2025-09-16T23:46:04.709567Z	      status: 'in_stock',
2025-09-16T23:46:04.709619Z	      warehouse: null
2025-09-16T23:46:04.709695Z	    },
2025-09-16T23:46:04.709777Z	    isActive: true,
2025-09-16T23:46:04.709855Z	    isFeatured: false,
2025-09-16T23:46:04.709915Z	    isNew: false,
2025-09-16T23:46:04.709969Z	    partNumber: '11111',
2025-09-16T23:46:04.710023Z	    pricing: {
2025-09-16T23:46:04.710076Z	      currency: 'CNY',
2025-09-16T23:46:04.710129Z	      leadTime: null,
2025-09-16T23:46:04.710182Z	      moq: null,
2025-09-16T23:46:04.710235Z	      price: null,
2025-09-16T23:46:04.710287Z	      tiers: null
2025-09-16T23:46:04.710339Z	    },
2025-09-16T23:46:04.710392Z	    shortDescription: '11111',
2025-09-16T23:46:04.710457Z	    slug: 'sic mosfet',
2025-09-16T23:46:04.710511Z	    title: '111111'
2025-09-16T23:46:04.710564Z	  }
2025-09-16T23:46:04.710617Z	}
2025-09-16T23:46:04.71067Z	Solutions fetch result: {
2025-09-16T23:46:04.710738Z	  totalSolutions: 6,
2025-09-16T23:46:04.710794Z	  fetchedSolutions: 4,
2025-09-16T23:46:04.710852Z	  firstSolution: {
2025-09-16T23:46:04.710906Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:46:04.710961Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:46:04.711018Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:46:04.711072Z	    complexity: 'medium',
2025-09-16T23:46:04.711128Z	    coverImage: null,
2025-09-16T23:46:04.71118Z	    description: [ [Object] ],
2025-09-16T23:46:04.711234Z	    isFeatured: false,
2025-09-16T23:46:04.711286Z	    isPublished: true,
2025-09-16T23:46:04.71134Z	    primaryBrand: {
2025-09-16T23:46:04.711394Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:46:04.711456Z	      logo: null,
2025-09-16T23:46:04.71151Z	      name: 'CREE',
2025-09-16T23:46:04.711564Z	      slug: 'cree'
2025-09-16T23:46:04.711618Z	    },
2025-09-16T23:46:04.711687Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:46:04.711747Z	    relatedBrands: null,
2025-09-16T23:46:04.711803Z	    slug: '11111',
2025-09-16T23:46:04.711861Z	    summary: '11111',
2025-09-16T23:46:04.711915Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:04.711969Z	    title: '11111',
2025-09-16T23:46:04.712023Z	    viewCount: 0
2025-09-16T23:46:04.712076Z	  }
2025-09-16T23:46:04.712135Z	}
2025-09-16T23:46:04.712193Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-16T23:46:04.712252Z	Fetching products with query: 
2025-09-16T23:46:04.712306Z	    {
2025-09-16T23:46:04.712363Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.712431Z	        
2025-09-16T23:46:04.712489Z	    _id,
2025-09-16T23:46:04.712543Z	    _type,
2025-09-16T23:46:04.712597Z	    partNumber,
2025-09-16T23:46:04.71265Z	    "slug": slug.current,
2025-09-16T23:46:04.712717Z	    title,
2025-09-16T23:46:04.712772Z	    shortDescription,
2025-09-16T23:46:04.712827Z	    image,
2025-09-16T23:46:04.712883Z	    brand->{
2025-09-16T23:46:04.712936Z	      name,
2025-09-16T23:46:04.713004Z	      "slug": slug.current,
2025-09-16T23:46:04.713061Z	      logo
2025-09-16T23:46:04.713119Z	    },
2025-09-16T23:46:04.713176Z	    category->{
2025-09-16T23:46:04.71323Z	      name,
2025-09-16T23:46:04.713282Z	      "slug": slug.current
2025-09-16T23:46:04.713335Z	    },
2025-09-16T23:46:04.713388Z	    pricing{
2025-09-16T23:46:04.713453Z	      currency,
2025-09-16T23:46:04.713529Z	      tiers[]{
2025-09-16T23:46:04.713583Z	        quantity,
2025-09-16T23:46:04.713635Z	        price,
2025-09-16T23:46:04.713706Z	        unit
2025-09-16T23:46:04.713762Z	      },
2025-09-16T23:46:04.713815Z	      moq,
2025-09-16T23:46:04.713881Z	      leadTime,
2025-09-16T23:46:04.713935Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.71399Z	      "price": tiers[0].price,
2025-09-16T23:46:04.714043Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.714097Z	    },
2025-09-16T23:46:04.714151Z	    inventory{
2025-09-16T23:46:04.714206Z	      quantity,
2025-09-16T23:46:04.71426Z	      status,
2025-09-16T23:46:04.714312Z	      warehouse,
2025-09-16T23:46:04.714366Z	      lastUpdated,
2025-09-16T23:46:04.714431Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.714488Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.714544Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.714597Z	    },
2025-09-16T23:46:04.714651Z	    isActive,
2025-09-16T23:46:04.714718Z	    isFeatured,
2025-09-16T23:46:04.714778Z	    isNew,
2025-09-16T23:46:04.714832Z	    _createdAt,
2025-09-16T23:46:04.714887Z	    _updatedAt
2025-09-16T23:46:04.714939Z	  
2025-09-16T23:46:04.714993Z	      },
2025-09-16T23:46:04.715047Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-16T23:46:04.715106Z	    }
2025-09-16T23:46:04.715159Z	  
2025-09-16T23:46:04.715214Z	Query parameters: {
2025-09-16T23:46:04.715273Z	  limit: 8,
2025-09-16T23:46:04.715326Z	  offset: 0,
2025-09-16T23:46:04.715379Z	  category: undefined,
2025-09-16T23:46:04.715442Z	  brand: 'sanrex',
2025-09-16T23:46:04.715497Z	  featured: undefined
2025-09-16T23:46:04.715552Z	}
2025-09-16T23:46:04.715606Z	Fetching solutions with query: 
2025-09-16T23:46:04.715659Z	    {
2025-09-16T23:46:04.715726Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.715783Z	        
2025-09-16T23:46:04.715837Z	    _id,
2025-09-16T23:46:04.715895Z	    title,
2025-09-16T23:46:04.716005Z	    "slug": slug.current,
2025-09-16T23:46:04.716119Z	    summary,
2025-09-16T23:46:04.716218Z	    description,
2025-09-16T23:46:04.71633Z	    coverImage,
2025-09-16T23:46:04.716435Z	    primaryBrand->{
2025-09-16T23:46:04.716535Z	      _id,
2025-09-16T23:46:04.716629Z	      name,
2025-09-16T23:46:04.716739Z	      "slug": slug.current,
2025-09-16T23:46:04.716846Z	      logo
2025-09-16T23:46:04.716946Z	    },
2025-09-16T23:46:04.717037Z	    relatedBrands[]->{
2025-09-16T23:46:04.717127Z	      _id,
2025-09-16T23:46:04.717223Z	      name,
2025-09-16T23:46:04.717314Z	      "slug": slug.current,
2025-09-16T23:46:04.717409Z	      logo
2025-09-16T23:46:04.717514Z	    },
2025-09-16T23:46:04.717604Z	    targetMarket,
2025-09-16T23:46:04.717716Z	    complexity,
2025-09-16T23:46:04.717815Z	    publishedAt,
2025-09-16T23:46:04.717908Z	    isPublished,
2025-09-16T23:46:04.718003Z	    isFeatured,
2025-09-16T23:46:04.718096Z	    viewCount,
2025-09-16T23:46:04.718186Z	    _createdAt,
2025-09-16T23:46:04.718277Z	    _updatedAt
2025-09-16T23:46:04.718368Z	  
2025-09-16T23:46:04.71847Z	      },
2025-09-16T23:46:04.718579Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-16T23:46:04.718684Z	    }
2025-09-16T23:46:04.718782Z	  
2025-09-16T23:46:04.718873Z	Query parameters: {
2025-09-16T23:46:04.718975Z	  limit: 4,
2025-09-16T23:46:04.719069Z	  offset: 0,
2025-09-16T23:46:04.719158Z	  targetMarket: undefined,
2025-09-16T23:46:04.719241Z	  brand: 'sanrex',
2025-09-16T23:46:04.719301Z	  featured: undefined
2025-09-16T23:46:04.719357Z	}
2025-09-16T23:46:04.71942Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-16T23:46:04.719479Z	Fetching products with query: 
2025-09-16T23:46:04.719543Z	    {
2025-09-16T23:46:04.719599Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.719656Z	        
2025-09-16T23:46:04.719728Z	    _id,
2025-09-16T23:46:04.719784Z	    _type,
2025-09-16T23:46:04.719838Z	    partNumber,
2025-09-16T23:46:04.719898Z	    "slug": slug.current,
2025-09-16T23:46:04.719952Z	    title,
2025-09-16T23:46:04.720006Z	    shortDescription,
2025-09-16T23:46:04.720059Z	    image,
2025-09-16T23:46:04.720112Z	    brand->{
2025-09-16T23:46:04.720222Z	      name,
2025-09-16T23:46:04.720283Z	      "slug": slug.current,
2025-09-16T23:46:04.720337Z	      logo
2025-09-16T23:46:04.720402Z	    },
2025-09-16T23:46:04.720502Z	    category->{
2025-09-16T23:46:04.720607Z	      name,
2025-09-16T23:46:04.720747Z	      "slug": slug.current
2025-09-16T23:46:04.720847Z	    },
2025-09-16T23:46:04.720942Z	    pricing{
2025-09-16T23:46:04.721034Z	      currency,
2025-09-16T23:46:04.721107Z	      tiers[]{
2025-09-16T23:46:04.721162Z	        quantity,
2025-09-16T23:46:04.721238Z	        price,
2025-09-16T23:46:04.721296Z	        unit
2025-09-16T23:46:04.72135Z	      },
2025-09-16T23:46:04.721404Z	      moq,
2025-09-16T23:46:04.721467Z	      leadTime,
2025-09-16T23:46:04.721522Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.721584Z	      "price": tiers[0].price,
2025-09-16T23:46:04.721638Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.721733Z	    },
2025-09-16T23:46:04.721796Z	    inventory{
2025-09-16T23:46:04.72185Z	      quantity,
2025-09-16T23:46:04.721903Z	      status,
2025-09-16T23:46:04.721957Z	      warehouse,
2025-09-16T23:46:04.722008Z	      lastUpdated,
2025-09-16T23:46:04.722068Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.722124Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.722177Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.72223Z	    },
2025-09-16T23:46:04.722308Z	    isActive,
2025-09-16T23:46:04.722382Z	    isFeatured,
2025-09-16T23:46:04.722447Z	    isNew,
2025-09-16T23:46:04.722502Z	    _createdAt,
2025-09-16T23:46:04.722555Z	    _updatedAt
2025-09-16T23:46:04.722615Z	  
2025-09-16T23:46:04.722686Z	      },
2025-09-16T23:46:04.722756Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-16T23:46:04.722818Z	    }
2025-09-16T23:46:04.722871Z	  
2025-09-16T23:46:04.722923Z	Query parameters: {
2025-09-16T23:46:04.722975Z	  limit: 8,
2025-09-16T23:46:04.723029Z	  offset: 0,
2025-09-16T23:46:04.723081Z	  category: undefined,
2025-09-16T23:46:04.723134Z	  brand: 'sanrex',
2025-09-16T23:46:04.723185Z	  featured: undefined
2025-09-16T23:46:04.723237Z	}
2025-09-16T23:46:04.723288Z	Fetching solutions with query: 
2025-09-16T23:46:04.723343Z	    {
2025-09-16T23:46:04.723401Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.723468Z	        
2025-09-16T23:46:04.723558Z	    _id,
2025-09-16T23:46:04.723617Z	    title,
2025-09-16T23:46:04.723684Z	    "slug": slug.current,
2025-09-16T23:46:04.723761Z	    summary,
2025-09-16T23:46:04.723815Z	    description,
2025-09-16T23:46:04.723875Z	    coverImage,
2025-09-16T23:46:04.723928Z	    primaryBrand->{
2025-09-16T23:46:04.723981Z	      _id,
2025-09-16T23:46:04.724035Z	      name,
2025-09-16T23:46:04.724089Z	      "slug": slug.current,
2025-09-16T23:46:04.724141Z	      logo
2025-09-16T23:46:04.724193Z	    },
2025-09-16T23:46:04.724245Z	    relatedBrands[]->{
2025-09-16T23:46:04.724299Z	      _id,
2025-09-16T23:46:04.72435Z	      name,
2025-09-16T23:46:04.724403Z	      "slug": slug.current,
2025-09-16T23:46:04.724475Z	      logo
2025-09-16T23:46:04.724588Z	    },
2025-09-16T23:46:04.724821Z	    targetMarket,
2025-09-16T23:46:04.724936Z	    complexity,
2025-09-16T23:46:04.725004Z	    publishedAt,
2025-09-16T23:46:04.725099Z	    isPublished,
2025-09-16T23:46:04.725161Z	    isFeatured,
2025-09-16T23:46:04.725218Z	    viewCount,
2025-09-16T23:46:04.725288Z	    _createdAt,
2025-09-16T23:46:04.725347Z	    _updatedAt
2025-09-16T23:46:04.725414Z	  
2025-09-16T23:46:04.725477Z	      },
2025-09-16T23:46:04.725532Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-16T23:46:04.72559Z	    }
2025-09-16T23:46:04.725652Z	  
2025-09-16T23:46:04.725749Z	Query parameters: {
2025-09-16T23:46:04.725808Z	  limit: 4,
2025-09-16T23:46:04.725861Z	  offset: 0,
2025-09-16T23:46:04.725922Z	  targetMarket: undefined,
2025-09-16T23:46:04.72598Z	  brand: 'sanrex',
2025-09-16T23:46:04.726034Z	  featured: undefined
2025-09-16T23:46:04.726087Z	}
2025-09-16T23:46:04.726142Z	✅ [getBrandData] Found brand: Sanrex
2025-09-16T23:46:04.7262Z	✅ [getBrandData] Found brand: Sanrex
2025-09-16T23:46:04.726255Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.726312Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.726384Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.726474Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.726532Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-16T23:46:04.72659Z	Fetching products with query: 
2025-09-16T23:46:04.726646Z	    {
2025-09-16T23:46:04.726734Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.726796Z	        
2025-09-16T23:46:04.72685Z	    _id,
2025-09-16T23:46:04.726908Z	    _type,
2025-09-16T23:46:04.726963Z	    partNumber,
2025-09-16T23:46:04.727036Z	    "slug": slug.current,
2025-09-16T23:46:04.727091Z	    title,
2025-09-16T23:46:04.727149Z	    shortDescription,
2025-09-16T23:46:04.727301Z	    image,
2025-09-16T23:46:04.72736Z	    brand->{
2025-09-16T23:46:04.727422Z	      name,
2025-09-16T23:46:04.727482Z	      "slug": slug.current,
2025-09-16T23:46:04.727538Z	      logo
2025-09-16T23:46:04.727593Z	    },
2025-09-16T23:46:04.727651Z	    category->{
2025-09-16T23:46:04.727736Z	      name,
2025-09-16T23:46:04.727797Z	      "slug": slug.current
2025-09-16T23:46:04.727851Z	    },
2025-09-16T23:46:04.727906Z	    pricing{
2025-09-16T23:46:04.72796Z	      currency,
2025-09-16T23:46:04.728019Z	      tiers[]{
2025-09-16T23:46:04.728074Z	        quantity,
2025-09-16T23:46:04.72814Z	        price,
2025-09-16T23:46:04.728195Z	        unit
2025-09-16T23:46:04.728259Z	      },
2025-09-16T23:46:04.728317Z	      moq,
2025-09-16T23:46:04.728371Z	      leadTime,
2025-09-16T23:46:04.728437Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.728493Z	      "price": tiers[0].price,
2025-09-16T23:46:04.728548Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.728604Z	    },
2025-09-16T23:46:04.72866Z	    inventory{
2025-09-16T23:46:04.728741Z	      quantity,
2025-09-16T23:46:04.7288Z	      status,
2025-09-16T23:46:04.728854Z	      warehouse,
2025-09-16T23:46:04.728909Z	      lastUpdated,
2025-09-16T23:46:04.728975Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.729035Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.729088Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.729142Z	    },
2025-09-16T23:46:04.729194Z	    isActive,
2025-09-16T23:46:04.729248Z	    isFeatured,
2025-09-16T23:46:04.729302Z	    isNew,
2025-09-16T23:46:04.729362Z	    _createdAt,
2025-09-16T23:46:04.729423Z	    _updatedAt
2025-09-16T23:46:04.729479Z	  
2025-09-16T23:46:04.729533Z	      },
2025-09-16T23:46:04.729586Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-16T23:46:04.72965Z	    }
2025-09-16T23:46:04.729743Z	  
2025-09-16T23:46:04.729805Z	Query parameters: {
2025-09-16T23:46:04.729862Z	  limit: 8,
2025-09-16T23:46:04.729916Z	  offset: 0,
2025-09-16T23:46:04.72997Z	  category: undefined,
2025-09-16T23:46:04.730026Z	  brand: 'mediatek',
2025-09-16T23:46:04.730084Z	  featured: undefined
2025-09-16T23:46:04.730153Z	}
2025-09-16T23:46:04.730213Z	Fetching solutions with query: 
2025-09-16T23:46:04.730267Z	    {
2025-09-16T23:46:04.730329Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.730408Z	        
2025-09-16T23:46:04.730465Z	    _id,
2025-09-16T23:46:04.73052Z	    title,
2025-09-16T23:46:04.730574Z	    "slug": slug.current,
2025-09-16T23:46:04.73063Z	    summary,
2025-09-16T23:46:04.7307Z	    description,
2025-09-16T23:46:04.730763Z	    coverImage,
2025-09-16T23:46:04.730818Z	    primaryBrand->{
2025-09-16T23:46:04.730873Z	      _id,
2025-09-16T23:46:04.730927Z	      name,
2025-09-16T23:46:04.730983Z	      "slug": slug.current,
2025-09-16T23:46:04.731037Z	      logo
2025-09-16T23:46:04.731092Z	    },
2025-09-16T23:46:04.731144Z	    relatedBrands[]->{
2025-09-16T23:46:04.731197Z	      _id,
2025-09-16T23:46:04.73125Z	      name,
2025-09-16T23:46:04.731303Z	      "slug": slug.current,
2025-09-16T23:46:04.731366Z	      logo
2025-09-16T23:46:04.73143Z	    },
2025-09-16T23:46:04.731485Z	    targetMarket,
2025-09-16T23:46:04.731537Z	    complexity,
2025-09-16T23:46:04.73159Z	    publishedAt,
2025-09-16T23:46:04.731647Z	    isPublished,
2025-09-16T23:46:04.731718Z	    isFeatured,
2025-09-16T23:46:04.731776Z	    viewCount,
2025-09-16T23:46:04.73183Z	    _createdAt,
2025-09-16T23:46:04.731888Z	    _updatedAt
2025-09-16T23:46:04.731943Z	  
2025-09-16T23:46:04.731997Z	      },
2025-09-16T23:46:04.732059Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-16T23:46:04.732118Z	    }
2025-09-16T23:46:04.732175Z	  
2025-09-16T23:46:04.732237Z	Query parameters: {
2025-09-16T23:46:04.732292Z	  limit: 4,
2025-09-16T23:46:04.732345Z	  offset: 0,
2025-09-16T23:46:04.73241Z	  targetMarket: undefined,
2025-09-16T23:46:04.732468Z	  brand: 'mediatek',
2025-09-16T23:46:04.732523Z	  featured: undefined
2025-09-16T23:46:04.732577Z	}
2025-09-16T23:46:04.732631Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-16T23:46:04.7327Z	Fetching products with query: 
2025-09-16T23:46:04.732756Z	    {
2025-09-16T23:46:04.73281Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.732872Z	        
2025-09-16T23:46:04.732927Z	    _id,
2025-09-16T23:46:04.732981Z	    _type,
2025-09-16T23:46:04.733035Z	    partNumber,
2025-09-16T23:46:04.733091Z	    "slug": slug.current,
2025-09-16T23:46:04.733146Z	    title,
2025-09-16T23:46:04.7332Z	    shortDescription,
2025-09-16T23:46:04.733253Z	    image,
2025-09-16T23:46:04.733306Z	    brand->{
2025-09-16T23:46:04.733365Z	      name,
2025-09-16T23:46:04.73343Z	      "slug": slug.current,
2025-09-16T23:46:04.733486Z	      logo
2025-09-16T23:46:04.733539Z	    },
2025-09-16T23:46:04.733592Z	    category->{
2025-09-16T23:46:04.733645Z	      name,
2025-09-16T23:46:04.733731Z	      "slug": slug.current
2025-09-16T23:46:04.733796Z	    },
2025-09-16T23:46:04.734686Z	    pricing{
2025-09-16T23:46:04.734787Z	      currency,
2025-09-16T23:46:04.734925Z	      tiers[]{
2025-09-16T23:46:04.735092Z	        quantity,
2025-09-16T23:46:04.735248Z	        price,
2025-09-16T23:46:04.735416Z	        unit
2025-09-16T23:46:04.735576Z	      },
2025-09-16T23:46:04.735755Z	      moq,
2025-09-16T23:46:04.735885Z	      leadTime,
2025-09-16T23:46:04.736048Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.736185Z	      "price": tiers[0].price,
2025-09-16T23:46:04.736327Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.736485Z	    },
2025-09-16T23:46:04.736653Z	    inventory{
2025-09-16T23:46:04.736806Z	      quantity,
2025-09-16T23:46:04.737Z	      status,
2025-09-16T23:46:04.737146Z	      warehouse,
2025-09-16T23:46:04.7373Z	      lastUpdated,
2025-09-16T23:46:04.737418Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.737526Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.737718Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.737843Z	    },
2025-09-16T23:46:04.738021Z	    isActive,
2025-09-16T23:46:04.738149Z	    isFeatured,
2025-09-16T23:46:04.738252Z	    isNew,
2025-09-16T23:46:04.738349Z	    _createdAt,
2025-09-16T23:46:04.738469Z	    _updatedAt
2025-09-16T23:46:04.738598Z	  
2025-09-16T23:46:04.738729Z	      },
2025-09-16T23:46:04.738846Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-16T23:46:04.738997Z	    }
2025-09-16T23:46:04.739127Z	  
2025-09-16T23:46:04.739236Z	Query parameters: {
2025-09-16T23:46:04.739326Z	  limit: 8,
2025-09-16T23:46:04.739456Z	  offset: 0,
2025-09-16T23:46:04.739578Z	  category: undefined,
2025-09-16T23:46:04.739716Z	  brand: 'mediatek',
2025-09-16T23:46:04.739832Z	  featured: undefined
2025-09-16T23:46:04.739956Z	}
2025-09-16T23:46:04.740075Z	Fetching solutions with query: 
2025-09-16T23:46:04.740177Z	    {
2025-09-16T23:46:04.740278Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.740351Z	        
2025-09-16T23:46:04.740418Z	    _id,
2025-09-16T23:46:04.740511Z	    title,
2025-09-16T23:46:04.740609Z	    "slug": slug.current,
2025-09-16T23:46:04.740728Z	    summary,
2025-09-16T23:46:04.740836Z	    description,
2025-09-16T23:46:04.74094Z	    coverImage,
2025-09-16T23:46:04.741032Z	    primaryBrand->{
2025-09-16T23:46:04.741134Z	      _id,
2025-09-16T23:46:04.741232Z	      name,
2025-09-16T23:46:04.741321Z	      "slug": slug.current,
2025-09-16T23:46:04.741389Z	      logo
2025-09-16T23:46:04.741454Z	    },
2025-09-16T23:46:04.741624Z	    relatedBrands[]->{
2025-09-16T23:46:04.741807Z	      _id,
2025-09-16T23:46:04.741922Z	      name,
2025-09-16T23:46:04.742029Z	      "slug": slug.current,
2025-09-16T23:46:04.742176Z	      logo
2025-09-16T23:46:04.742258Z	    },
2025-09-16T23:46:04.742411Z	    targetMarket,
2025-09-16T23:46:04.742562Z	    complexity,
2025-09-16T23:46:04.742704Z	    publishedAt,
2025-09-16T23:46:04.742792Z	    isPublished,
2025-09-16T23:46:04.743037Z	    isFeatured,
2025-09-16T23:46:04.743328Z	    viewCount,
2025-09-16T23:46:04.74358Z	    _createdAt,
2025-09-16T23:46:04.743768Z	    _updatedAt
2025-09-16T23:46:04.743957Z	  
2025-09-16T23:46:04.744119Z	      },
2025-09-16T23:46:04.744242Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-16T23:46:04.74439Z	    }
2025-09-16T23:46:04.744497Z	  
2025-09-16T23:46:04.744595Z	Query parameters: {
2025-09-16T23:46:04.744729Z	  limit: 4,
2025-09-16T23:46:04.744834Z	  offset: 0,
2025-09-16T23:46:04.744947Z	  targetMarket: undefined,
2025-09-16T23:46:04.745047Z	  brand: 'mediatek',
2025-09-16T23:46:04.74514Z	  featured: undefined
2025-09-16T23:46:04.745233Z	}
2025-09-16T23:46:04.745333Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.74543Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.745525Z	✅ [getBrandData] Found brand: MediaTek
2025-09-16T23:46:04.745643Z	✅ [getBrandData] Found brand: MediaTek
2025-09-16T23:46:04.745767Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.745871Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.745974Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:04.746091Z	Fetching products with query: 
2025-09-16T23:46:04.746191Z	    {
2025-09-16T23:46:04.746307Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.746415Z	        
2025-09-16T23:46:04.746531Z	    _id,
2025-09-16T23:46:04.746667Z	    _type,
2025-09-16T23:46:04.746826Z	    partNumber,
2025-09-16T23:46:04.746945Z	    "slug": slug.current,
2025-09-16T23:46:04.747056Z	    title,
2025-09-16T23:46:04.747186Z	    shortDescription,
2025-09-16T23:46:04.747311Z	    image,
2025-09-16T23:46:04.747418Z	    brand->{
2025-09-16T23:46:04.747539Z	      name,
2025-09-16T23:46:04.747669Z	      "slug": slug.current,
2025-09-16T23:46:04.747811Z	      logo
2025-09-16T23:46:04.747927Z	    },
2025-09-16T23:46:04.748042Z	    category->{
2025-09-16T23:46:04.748149Z	      name,
2025-09-16T23:46:04.748249Z	      "slug": slug.current
2025-09-16T23:46:04.748361Z	    },
2025-09-16T23:46:04.748465Z	    pricing{
2025-09-16T23:46:04.748563Z	      currency,
2025-09-16T23:46:04.748695Z	      tiers[]{
2025-09-16T23:46:04.748809Z	        quantity,
2025-09-16T23:46:04.748915Z	        price,
2025-09-16T23:46:04.749015Z	        unit
2025-09-16T23:46:04.74912Z	      },
2025-09-16T23:46:04.749218Z	      moq,
2025-09-16T23:46:04.749317Z	      leadTime,
2025-09-16T23:46:04.749512Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.74975Z	      "price": tiers[0].price,
2025-09-16T23:46:04.749892Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.750096Z	    },
2025-09-16T23:46:04.750252Z	    inventory{
2025-09-16T23:46:04.750428Z	      quantity,
2025-09-16T23:46:04.750554Z	      status,
2025-09-16T23:46:04.750749Z	      warehouse,
2025-09-16T23:46:04.750878Z	      lastUpdated,
2025-09-16T23:46:04.751036Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.751181Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.751294Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.751427Z	    },
2025-09-16T23:46:04.751554Z	    isActive,
2025-09-16T23:46:04.751686Z	    isFeatured,
2025-09-16T23:46:04.751796Z	    isNew,
2025-09-16T23:46:04.751918Z	    _createdAt,
2025-09-16T23:46:04.751999Z	    _updatedAt
2025-09-16T23:46:04.75211Z	  
2025-09-16T23:46:04.75223Z	      },
2025-09-16T23:46:04.752361Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-16T23:46:04.752503Z	    }
2025-09-16T23:46:04.752637Z	  
2025-09-16T23:46:04.752785Z	Query parameters: {
2025-09-16T23:46:04.752904Z	  limit: 8,
2025-09-16T23:46:04.75303Z	  offset: 0,
2025-09-16T23:46:04.753182Z	  category: undefined,
2025-09-16T23:46:04.753357Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:04.753492Z	  featured: undefined
2025-09-16T23:46:04.753612Z	}
2025-09-16T23:46:04.753798Z	Fetching solutions with query: 
2025-09-16T23:46:04.753933Z	    {
2025-09-16T23:46:04.754044Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.754179Z	        
2025-09-16T23:46:04.754312Z	    _id,
2025-09-16T23:46:04.754421Z	    title,
2025-09-16T23:46:04.754538Z	    "slug": slug.current,
2025-09-16T23:46:04.754654Z	    summary,
2025-09-16T23:46:04.7548Z	    description,
2025-09-16T23:46:04.754924Z	    coverImage,
2025-09-16T23:46:04.755039Z	    primaryBrand->{
2025-09-16T23:46:04.75515Z	      _id,
2025-09-16T23:46:04.755259Z	      name,
2025-09-16T23:46:04.755368Z	      "slug": slug.current,
2025-09-16T23:46:04.755473Z	      logo
2025-09-16T23:46:04.755577Z	    },
2025-09-16T23:46:04.7557Z	    relatedBrands[]->{
2025-09-16T23:46:04.755817Z	      _id,
2025-09-16T23:46:04.755914Z	      name,
2025-09-16T23:46:04.756Z	      "slug": slug.current,
2025-09-16T23:46:04.75611Z	      logo
2025-09-16T23:46:04.756211Z	    },
2025-09-16T23:46:04.756308Z	    targetMarket,
2025-09-16T23:46:04.756409Z	    complexity,
2025-09-16T23:46:04.756521Z	    publishedAt,
2025-09-16T23:46:04.756622Z	    isPublished,
2025-09-16T23:46:04.756717Z	    isFeatured,
2025-09-16T23:46:04.75684Z	    viewCount,
2025-09-16T23:46:04.756965Z	    _createdAt,
2025-09-16T23:46:04.757188Z	    _updatedAt
2025-09-16T23:46:04.757277Z	  
2025-09-16T23:46:04.757515Z	      },
2025-09-16T23:46:04.757598Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-16T23:46:04.757718Z	    }
2025-09-16T23:46:04.757879Z	  
2025-09-16T23:46:04.758069Z	Query parameters: {
2025-09-16T23:46:04.758203Z	  limit: 4,
2025-09-16T23:46:04.758307Z	  offset: 0,
2025-09-16T23:46:04.758472Z	  targetMarket: undefined,
2025-09-16T23:46:04.758609Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:04.758764Z	  featured: undefined
2025-09-16T23:46:04.758911Z	}
2025-09-16T23:46:04.759109Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:04.759276Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.75943Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.759577Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:04.759724Z	Fetching products with query: 
2025-09-16T23:46:04.759808Z	    {
2025-09-16T23:46:04.759952Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.760117Z	        
2025-09-16T23:46:04.760249Z	    _id,
2025-09-16T23:46:04.760353Z	    _type,
2025-09-16T23:46:04.760457Z	    partNumber,
2025-09-16T23:46:04.760575Z	    "slug": slug.current,
2025-09-16T23:46:04.760808Z	    title,
2025-09-16T23:46:04.76097Z	    shortDescription,
2025-09-16T23:46:04.761126Z	    image,
2025-09-16T23:46:04.76128Z	    brand->{
2025-09-16T23:46:04.76139Z	      name,
2025-09-16T23:46:04.761544Z	      "slug": slug.current,
2025-09-16T23:46:04.76169Z	      logo
2025-09-16T23:46:04.761856Z	    },
2025-09-16T23:46:04.762168Z	    category->{
2025-09-16T23:46:04.762247Z	      name,
2025-09-16T23:46:04.762374Z	      "slug": slug.current
2025-09-16T23:46:04.762767Z	    },
2025-09-16T23:46:04.762853Z	    pricing{
2025-09-16T23:46:04.762977Z	      currency,
2025-09-16T23:46:04.763102Z	      tiers[]{
2025-09-16T23:46:04.763202Z	        quantity,
2025-09-16T23:46:04.763277Z	        price,
2025-09-16T23:46:04.763478Z	        unit
2025-09-16T23:46:04.763584Z	      },
2025-09-16T23:46:04.76372Z	      moq,
2025-09-16T23:46:04.763838Z	      leadTime,
2025-09-16T23:46:04.763952Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.764076Z	      "price": tiers[0].price,
2025-09-16T23:46:04.76419Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.764302Z	    },
2025-09-16T23:46:04.764409Z	    inventory{
2025-09-16T23:46:04.764528Z	      quantity,
2025-09-16T23:46:04.764637Z	      status,
2025-09-16T23:46:04.764794Z	      warehouse,
2025-09-16T23:46:04.764985Z	      lastUpdated,
2025-09-16T23:46:04.765336Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.765435Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.765625Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.765749Z	    },
2025-09-16T23:46:04.766105Z	    isActive,
2025-09-16T23:46:04.766259Z	    isFeatured,
2025-09-16T23:46:04.766438Z	    isNew,
2025-09-16T23:46:04.766707Z	    _createdAt,
2025-09-16T23:46:04.766905Z	    _updatedAt
2025-09-16T23:46:04.767059Z	  
2025-09-16T23:46:04.767199Z	      },
2025-09-16T23:46:04.767326Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-16T23:46:04.767454Z	    }
2025-09-16T23:46:04.767584Z	  
2025-09-16T23:46:04.767709Z	Query parameters: {
2025-09-16T23:46:04.767886Z	  limit: 8,
2025-09-16T23:46:04.767993Z	  offset: 0,
2025-09-16T23:46:04.768083Z	  category: undefined,
2025-09-16T23:46:04.768142Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:04.768233Z	  featured: undefined
2025-09-16T23:46:04.768331Z	}
2025-09-16T23:46:04.768488Z	Fetching solutions with query: 
2025-09-16T23:46:04.768608Z	    {
2025-09-16T23:46:04.768759Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.76904Z	        
2025-09-16T23:46:04.769123Z	    _id,
2025-09-16T23:46:04.769358Z	    title,
2025-09-16T23:46:04.769463Z	    "slug": slug.current,
2025-09-16T23:46:04.769734Z	    summary,
2025-09-16T23:46:04.769818Z	    description,
2025-09-16T23:46:04.769966Z	    coverImage,
2025-09-16T23:46:04.770073Z	    primaryBrand->{
2025-09-16T23:46:04.770349Z	      _id,
2025-09-16T23:46:04.770429Z	      name,
2025-09-16T23:46:04.770694Z	      "slug": slug.current,
2025-09-16T23:46:04.770857Z	      logo
2025-09-16T23:46:04.770964Z	    },
2025-09-16T23:46:04.771182Z	    relatedBrands[]->{
2025-09-16T23:46:04.771271Z	      _id,
2025-09-16T23:46:04.771495Z	      name,
2025-09-16T23:46:04.771644Z	      "slug": slug.current,
2025-09-16T23:46:04.771824Z	      logo
2025-09-16T23:46:04.771986Z	    },
2025-09-16T23:46:04.772126Z	    targetMarket,
2025-09-16T23:46:04.772272Z	    complexity,
2025-09-16T23:46:04.772457Z	    publishedAt,
2025-09-16T23:46:04.77254Z	    isPublished,
2025-09-16T23:46:04.772659Z	    isFeatured,
2025-09-16T23:46:04.772765Z	    viewCount,
2025-09-16T23:46:04.772918Z	    _createdAt,
2025-09-16T23:46:04.773063Z	    _updatedAt
2025-09-16T23:46:04.773235Z	  
2025-09-16T23:46:04.773398Z	      },
2025-09-16T23:46:04.773507Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-16T23:46:04.773611Z	    }
2025-09-16T23:46:04.773734Z	  
2025-09-16T23:46:04.773857Z	Query parameters: {
2025-09-16T23:46:04.774017Z	  limit: 4,
2025-09-16T23:46:04.774164Z	  offset: 0,
2025-09-16T23:46:04.774257Z	  targetMarket: undefined,
2025-09-16T23:46:04.774401Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:04.774762Z	  featured: undefined
2025-09-16T23:46:04.774899Z	}
2025-09-16T23:46:04.775027Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:04.775228Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.77533Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.775472Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-16T23:46:04.775635Z	Fetching products with query: 
2025-09-16T23:46:04.77579Z	    {
2025-09-16T23:46:04.775949Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.776203Z	        
2025-09-16T23:46:04.776295Z	    _id,
2025-09-16T23:46:04.776436Z	    _type,
2025-09-16T23:46:04.776521Z	    partNumber,
2025-09-16T23:46:04.776587Z	    "slug": slug.current,
2025-09-16T23:46:04.776754Z	    title,
2025-09-16T23:46:04.776917Z	    shortDescription,
2025-09-16T23:46:04.777066Z	    image,
2025-09-16T23:46:04.777243Z	    brand->{
2025-09-16T23:46:04.777325Z	      name,
2025-09-16T23:46:04.777414Z	      "slug": slug.current,
2025-09-16T23:46:04.777541Z	      logo
2025-09-16T23:46:04.777661Z	    },
2025-09-16T23:46:04.777804Z	    category->{
2025-09-16T23:46:04.778026Z	      name,
2025-09-16T23:46:04.778179Z	      "slug": slug.current
2025-09-16T23:46:04.778407Z	    },
2025-09-16T23:46:04.778501Z	    pricing{
2025-09-16T23:46:04.778662Z	      currency,
2025-09-16T23:46:04.778808Z	      tiers[]{
2025-09-16T23:46:04.779074Z	        quantity,
2025-09-16T23:46:04.779325Z	        price,
2025-09-16T23:46:04.779572Z	        unit
2025-09-16T23:46:04.791941Z	      },
2025-09-16T23:46:04.792067Z	      moq,
2025-09-16T23:46:04.792129Z	      leadTime,
2025-09-16T23:46:04.792187Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.792266Z	      "price": tiers[0].price,
2025-09-16T23:46:04.792326Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.792392Z	    },
2025-09-16T23:46:04.792451Z	    inventory{
2025-09-16T23:46:04.792506Z	      quantity,
2025-09-16T23:46:04.79256Z	      status,
2025-09-16T23:46:04.792631Z	      warehouse,
2025-09-16T23:46:04.792733Z	      lastUpdated,
2025-09-16T23:46:04.792807Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.792876Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.792937Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.792999Z	    },
2025-09-16T23:46:04.793055Z	    isActive,
2025-09-16T23:46:04.793116Z	    isFeatured,
2025-09-16T23:46:04.793171Z	    isNew,
2025-09-16T23:46:04.793224Z	    _createdAt,
2025-09-16T23:46:04.793278Z	    _updatedAt
2025-09-16T23:46:04.79333Z	  
2025-09-16T23:46:04.793383Z	      },
2025-09-16T23:46:04.793436Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-16T23:46:04.793497Z	    }
2025-09-16T23:46:04.79355Z	  
2025-09-16T23:46:04.793602Z	Query parameters: {
2025-09-16T23:46:04.793659Z	  limit: 8,
2025-09-16T23:46:04.793735Z	  offset: 0,
2025-09-16T23:46:04.79379Z	  category: undefined,
2025-09-16T23:46:04.793846Z	  brand: 'mediatek',
2025-09-16T23:46:04.7939Z	  featured: undefined
2025-09-16T23:46:04.793956Z	}
2025-09-16T23:46:04.79401Z	Fetching solutions with query: 
2025-09-16T23:46:04.794063Z	    {
2025-09-16T23:46:04.794115Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.794177Z	        
2025-09-16T23:46:04.794231Z	    _id,
2025-09-16T23:46:04.794282Z	    title,
2025-09-16T23:46:04.794334Z	    "slug": slug.current,
2025-09-16T23:46:04.794387Z	    summary,
2025-09-16T23:46:04.794439Z	    description,
2025-09-16T23:46:04.794493Z	    coverImage,
2025-09-16T23:46:04.794546Z	    primaryBrand->{
2025-09-16T23:46:04.794598Z	      _id,
2025-09-16T23:46:04.794852Z	      name,
2025-09-16T23:46:04.794953Z	      "slug": slug.current,
2025-09-16T23:46:04.795014Z	      logo
2025-09-16T23:46:04.795083Z	    },
2025-09-16T23:46:04.795141Z	    relatedBrands[]->{
2025-09-16T23:46:04.795203Z	      _id,
2025-09-16T23:46:04.795261Z	      name,
2025-09-16T23:46:04.795314Z	      "slug": slug.current,
2025-09-16T23:46:04.795368Z	      logo
2025-09-16T23:46:04.795424Z	    },
2025-09-16T23:46:04.79548Z	    targetMarket,
2025-09-16T23:46:04.79574Z	    complexity,
2025-09-16T23:46:04.795834Z	    publishedAt,
2025-09-16T23:46:04.795895Z	    isPublished,
2025-09-16T23:46:04.795958Z	    isFeatured,
2025-09-16T23:46:04.796024Z	    viewCount,
2025-09-16T23:46:04.796081Z	    _createdAt,
2025-09-16T23:46:04.796137Z	    _updatedAt
2025-09-16T23:46:04.796199Z	  
2025-09-16T23:46:04.796253Z	      },
2025-09-16T23:46:04.796309Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-16T23:46:04.796379Z	    }
2025-09-16T23:46:04.796436Z	  
2025-09-16T23:46:04.796491Z	Query parameters: {
2025-09-16T23:46:04.796546Z	  limit: 4,
2025-09-16T23:46:04.796605Z	  offset: 0,
2025-09-16T23:46:04.796707Z	  targetMarket: undefined,
2025-09-16T23:46:04.796772Z	  brand: 'mediatek',
2025-09-16T23:46:04.796829Z	  featured: undefined
2025-09-16T23:46:04.79689Z	}
2025-09-16T23:46:04.796946Z	✅ [getBrandData] Found brand: MediaTek
2025-09-16T23:46:04.797004Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.797061Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.797125Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-16T23:46:04.797189Z	Fetching products with query: 
2025-09-16T23:46:04.797243Z	    {
2025-09-16T23:46:04.797298Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.797357Z	        
2025-09-16T23:46:04.797413Z	    _id,
2025-09-16T23:46:04.797475Z	    _type,
2025-09-16T23:46:04.797537Z	    partNumber,
2025-09-16T23:46:04.797597Z	    "slug": slug.current,
2025-09-16T23:46:04.797653Z	    title,
2025-09-16T23:46:04.797736Z	    shortDescription,
2025-09-16T23:46:04.797802Z	    image,
2025-09-16T23:46:04.797862Z	    brand->{
2025-09-16T23:46:04.797916Z	      name,
2025-09-16T23:46:04.797976Z	      "slug": slug.current,
2025-09-16T23:46:04.798032Z	      logo
2025-09-16T23:46:04.798084Z	    },
2025-09-16T23:46:04.798146Z	    category->{
2025-09-16T23:46:04.798203Z	      name,
2025-09-16T23:46:04.798265Z	      "slug": slug.current
2025-09-16T23:46:04.798326Z	    },
2025-09-16T23:46:04.798385Z	    pricing{
2025-09-16T23:46:04.798446Z	      currency,
2025-09-16T23:46:04.798506Z	      tiers[]{
2025-09-16T23:46:04.798561Z	        quantity,
2025-09-16T23:46:04.798615Z	        price,
2025-09-16T23:46:04.798686Z	        unit
2025-09-16T23:46:04.798752Z	      },
2025-09-16T23:46:04.798816Z	      moq,
2025-09-16T23:46:04.798871Z	      leadTime,
2025-09-16T23:46:04.798927Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.798989Z	      "price": tiers[0].price,
2025-09-16T23:46:04.799271Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.799368Z	    },
2025-09-16T23:46:04.799431Z	    inventory{
2025-09-16T23:46:04.799488Z	      quantity,
2025-09-16T23:46:04.799544Z	      status,
2025-09-16T23:46:04.799606Z	      warehouse,
2025-09-16T23:46:04.79966Z	      lastUpdated,
2025-09-16T23:46:04.799738Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.799797Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.79994Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.800021Z	    },
2025-09-16T23:46:04.800084Z	    isActive,
2025-09-16T23:46:04.800139Z	    isFeatured,
2025-09-16T23:46:04.800194Z	    isNew,
2025-09-16T23:46:04.800248Z	    _createdAt,
2025-09-16T23:46:04.800303Z	    _updatedAt
2025-09-16T23:46:04.800365Z	  
2025-09-16T23:46:04.800426Z	      },
2025-09-16T23:46:04.800491Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-16T23:46:04.80057Z	    }
2025-09-16T23:46:04.800632Z	  
2025-09-16T23:46:04.800727Z	Query parameters: {
2025-09-16T23:46:04.800787Z	  limit: 8,
2025-09-16T23:46:04.800842Z	  offset: 0,
2025-09-16T23:46:04.800897Z	  category: undefined,
2025-09-16T23:46:04.80095Z	  brand: 'mediatek',
2025-09-16T23:46:04.801007Z	  featured: undefined
2025-09-16T23:46:04.801072Z	}
2025-09-16T23:46:04.801128Z	Fetching solutions with query: 
2025-09-16T23:46:04.801183Z	    {
2025-09-16T23:46:04.801245Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.801303Z	        
2025-09-16T23:46:04.801364Z	    _id,
2025-09-16T23:46:04.801419Z	    title,
2025-09-16T23:46:04.801476Z	    "slug": slug.current,
2025-09-16T23:46:04.80153Z	    summary,
2025-09-16T23:46:04.801582Z	    description,
2025-09-16T23:46:04.801635Z	    coverImage,
2025-09-16T23:46:04.801709Z	    primaryBrand->{
2025-09-16T23:46:04.801767Z	      _id,
2025-09-16T23:46:04.801831Z	      name,
2025-09-16T23:46:04.801898Z	      "slug": slug.current,
2025-09-16T23:46:04.801964Z	      logo
2025-09-16T23:46:04.802019Z	    },
2025-09-16T23:46:04.802074Z	    relatedBrands[]->{
2025-09-16T23:46:04.802128Z	      _id,
2025-09-16T23:46:04.802184Z	      name,
2025-09-16T23:46:04.802237Z	      "slug": slug.current,
2025-09-16T23:46:04.802295Z	      logo
2025-09-16T23:46:04.802356Z	    },
2025-09-16T23:46:04.802418Z	    targetMarket,
2025-09-16T23:46:04.802473Z	    complexity,
2025-09-16T23:46:04.802528Z	    publishedAt,
2025-09-16T23:46:04.802584Z	    isPublished,
2025-09-16T23:46:04.802639Z	    isFeatured,
2025-09-16T23:46:04.802724Z	    viewCount,
2025-09-16T23:46:04.80278Z	    _createdAt,
2025-09-16T23:46:04.802834Z	    _updatedAt
2025-09-16T23:46:04.80289Z	  
2025-09-16T23:46:04.802951Z	      },
2025-09-16T23:46:04.803012Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-16T23:46:04.803074Z	    }
2025-09-16T23:46:04.80313Z	  
2025-09-16T23:46:04.803184Z	Query parameters: {
2025-09-16T23:46:04.803243Z	  limit: 4,
2025-09-16T23:46:04.803308Z	  offset: 0,
2025-09-16T23:46:04.803372Z	  targetMarket: undefined,
2025-09-16T23:46:04.803427Z	  brand: 'mediatek',
2025-09-16T23:46:04.803481Z	  featured: undefined
2025-09-16T23:46:04.803542Z	}
2025-09-16T23:46:04.803602Z	✅ [getBrandData] Found brand: MediaTek
2025-09-16T23:46:04.803658Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.80373Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.803788Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-16T23:46:04.803853Z	Fetching products with query: 
2025-09-16T23:46:04.803907Z	    {
2025-09-16T23:46:04.803961Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.804015Z	        
2025-09-16T23:46:04.804068Z	    _id,
2025-09-16T23:46:04.804126Z	    _type,
2025-09-16T23:46:04.804179Z	    partNumber,
2025-09-16T23:46:04.804232Z	    "slug": slug.current,
2025-09-16T23:46:04.804286Z	    title,
2025-09-16T23:46:04.80434Z	    shortDescription,
2025-09-16T23:46:04.804394Z	    image,
2025-09-16T23:46:04.804449Z	    brand->{
2025-09-16T23:46:04.804503Z	      name,
2025-09-16T23:46:04.804561Z	      "slug": slug.current,
2025-09-16T23:46:04.804618Z	      logo
2025-09-16T23:46:04.804691Z	    },
2025-09-16T23:46:04.804749Z	    category->{
2025-09-16T23:46:04.804803Z	      name,
2025-09-16T23:46:04.804856Z	      "slug": slug.current
2025-09-16T23:46:04.804914Z	    },
2025-09-16T23:46:04.804971Z	    pricing{
2025-09-16T23:46:04.805026Z	      currency,
2025-09-16T23:46:04.805086Z	      tiers[]{
2025-09-16T23:46:04.805142Z	        quantity,
2025-09-16T23:46:04.805202Z	        price,
2025-09-16T23:46:04.805259Z	        unit
2025-09-16T23:46:04.805313Z	      },
2025-09-16T23:46:04.805366Z	      moq,
2025-09-16T23:46:04.805419Z	      leadTime,
2025-09-16T23:46:04.805475Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.80553Z	      "price": tiers[0].price,
2025-09-16T23:46:04.805583Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.805638Z	    },
2025-09-16T23:46:04.805708Z	    inventory{
2025-09-16T23:46:04.805764Z	      quantity,
2025-09-16T23:46:04.80582Z	      status,
2025-09-16T23:46:04.80588Z	      warehouse,
2025-09-16T23:46:04.805935Z	      lastUpdated,
2025-09-16T23:46:04.80599Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.806048Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.806103Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.806448Z	    },
2025-09-16T23:46:04.806598Z	    isActive,
2025-09-16T23:46:04.806752Z	    isFeatured,
2025-09-16T23:46:04.806855Z	    isNew,
2025-09-16T23:46:04.806987Z	    _createdAt,
2025-09-16T23:46:04.807077Z	    _updatedAt
2025-09-16T23:46:04.807169Z	  
2025-09-16T23:46:04.807256Z	      },
2025-09-16T23:46:04.807356Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-16T23:46:04.807482Z	    }
2025-09-16T23:46:04.807589Z	  
2025-09-16T23:46:04.80778Z	Query parameters: {
2025-09-16T23:46:04.807889Z	  limit: 8,
2025-09-16T23:46:04.807979Z	  offset: 0,
2025-09-16T23:46:04.808101Z	  category: undefined,
2025-09-16T23:46:04.808192Z	  brand: 'semikron',
2025-09-16T23:46:04.808322Z	  featured: undefined
2025-09-16T23:46:04.808497Z	}
2025-09-16T23:46:04.808624Z	Fetching solutions with query: 
2025-09-16T23:46:04.808817Z	    {
2025-09-16T23:46:04.808933Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.80908Z	        
2025-09-16T23:46:04.809168Z	    _id,
2025-09-16T23:46:04.809275Z	    title,
2025-09-16T23:46:04.809355Z	    "slug": slug.current,
2025-09-16T23:46:04.809487Z	    summary,
2025-09-16T23:46:04.809572Z	    description,
2025-09-16T23:46:04.809722Z	    coverImage,
2025-09-16T23:46:04.80984Z	    primaryBrand->{
2025-09-16T23:46:04.809921Z	      _id,
2025-09-16T23:46:04.810014Z	      name,
2025-09-16T23:46:04.810127Z	      "slug": slug.current,
2025-09-16T23:46:04.810246Z	      logo
2025-09-16T23:46:04.810409Z	    },
2025-09-16T23:46:04.81052Z	    relatedBrands[]->{
2025-09-16T23:46:04.810635Z	      _id,
2025-09-16T23:46:04.810768Z	      name,
2025-09-16T23:46:04.810866Z	      "slug": slug.current,
2025-09-16T23:46:04.810959Z	      logo
2025-09-16T23:46:04.811049Z	    },
2025-09-16T23:46:04.811134Z	    targetMarket,
2025-09-16T23:46:04.811232Z	    complexity,
2025-09-16T23:46:04.811324Z	    publishedAt,
2025-09-16T23:46:04.811416Z	    isPublished,
2025-09-16T23:46:04.811514Z	    isFeatured,
2025-09-16T23:46:04.811613Z	    viewCount,
2025-09-16T23:46:04.81173Z	    _createdAt,
2025-09-16T23:46:04.811849Z	    _updatedAt
2025-09-16T23:46:04.811944Z	  
2025-09-16T23:46:04.812043Z	      },
2025-09-16T23:46:04.812137Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-16T23:46:04.812232Z	    }
2025-09-16T23:46:04.812329Z	  
2025-09-16T23:46:04.812423Z	Query parameters: {
2025-09-16T23:46:04.812509Z	  limit: 4,
2025-09-16T23:46:04.812591Z	  offset: 0,
2025-09-16T23:46:04.812716Z	  targetMarket: undefined,
2025-09-16T23:46:04.812816Z	  brand: 'semikron',
2025-09-16T23:46:04.812916Z	  featured: undefined
2025-09-16T23:46:04.813014Z	}
2025-09-16T23:46:04.813142Z	✅ [getBrandData] Found brand: Semikron
2025-09-16T23:46:04.813256Z	Products fetch result: {
2025-09-16T23:46:04.813353Z	  totalProducts: 1,
2025-09-16T23:46:04.813457Z	  fetchedProducts: 1,
2025-09-16T23:46:04.813558Z	  firstProduct: {
2025-09-16T23:46:04.813726Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-16T23:46:04.81383Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-16T23:46:04.813975Z	    _type: 'product',
2025-09-16T23:46:04.81408Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-16T23:46:04.814174Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-16T23:46:04.814278Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:04.814382Z	    image: null,
2025-09-16T23:46:04.814487Z	    inventory: {
2025-09-16T23:46:04.814591Z	      inStock: true,
2025-09-16T23:46:04.814715Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-16T23:46:04.814819Z	      quantity: 0,
2025-09-16T23:46:04.814928Z	      status: 'in_stock',
2025-09-16T23:46:04.81503Z	      warehouse: null
2025-09-16T23:46:04.815133Z	    },
2025-09-16T23:46:04.81524Z	    isActive: true,
2025-09-16T23:46:04.815398Z	    isFeatured: false,
2025-09-16T23:46:04.815576Z	    isNew: false,
2025-09-16T23:46:04.815721Z	    partNumber: 'SKKT106/16E',
2025-09-16T23:46:04.815923Z	    pricing: {
2025-09-16T23:46:04.816221Z	      currency: 'CNY',
2025-09-16T23:46:04.816399Z	      leadTime: null,
2025-09-16T23:46:04.816523Z	      moq: null,
2025-09-16T23:46:04.81666Z	      price: null,
2025-09-16T23:46:04.816777Z	      tiers: null
2025-09-16T23:46:04.816901Z	    },
2025-09-16T23:46:04.817014Z	    shortDescription: 'SKKT106/16E',
2025-09-16T23:46:04.817119Z	    slug: 'SKKT106/16E',
2025-09-16T23:46:04.817182Z	    title: 'SKKT106/16E'
2025-09-16T23:46:04.817239Z	  }
2025-09-16T23:46:04.817317Z	}
2025-09-16T23:46:04.817425Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.817522Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-16T23:46:04.817624Z	Fetching products with query: 
2025-09-16T23:46:04.817749Z	    {
2025-09-16T23:46:04.81786Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.817956Z	        
2025-09-16T23:46:04.818063Z	    _id,
2025-09-16T23:46:04.818156Z	    _type,
2025-09-16T23:46:04.818259Z	    partNumber,
2025-09-16T23:46:04.818355Z	    "slug": slug.current,
2025-09-16T23:46:04.818506Z	    title,
2025-09-16T23:46:04.818626Z	    shortDescription,
2025-09-16T23:46:04.818757Z	    image,
2025-09-16T23:46:04.818873Z	    brand->{
2025-09-16T23:46:04.818987Z	      name,
2025-09-16T23:46:04.81912Z	      "slug": slug.current,
2025-09-16T23:46:04.819264Z	      logo
2025-09-16T23:46:04.819384Z	    },
2025-09-16T23:46:04.819502Z	    category->{
2025-09-16T23:46:04.819648Z	      name,
2025-09-16T23:46:04.819788Z	      "slug": slug.current
2025-09-16T23:46:04.819895Z	    },
2025-09-16T23:46:04.820008Z	    pricing{
2025-09-16T23:46:04.820112Z	      currency,
2025-09-16T23:46:04.820214Z	      tiers[]{
2025-09-16T23:46:04.820309Z	        quantity,
2025-09-16T23:46:04.820407Z	        price,
2025-09-16T23:46:04.820514Z	        unit
2025-09-16T23:46:04.82061Z	      },
2025-09-16T23:46:04.820748Z	      moq,
2025-09-16T23:46:04.820824Z	      leadTime,
2025-09-16T23:46:04.820884Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.820944Z	      "price": tiers[0].price,
2025-09-16T23:46:04.821024Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.821133Z	    },
2025-09-16T23:46:04.821242Z	    inventory{
2025-09-16T23:46:04.821343Z	      quantity,
2025-09-16T23:46:04.821433Z	      status,
2025-09-16T23:46:04.821544Z	      warehouse,
2025-09-16T23:46:04.821658Z	      lastUpdated,
2025-09-16T23:46:04.821816Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.821919Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.822018Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.822108Z	    },
2025-09-16T23:46:04.822203Z	    isActive,
2025-09-16T23:46:04.822314Z	    isFeatured,
2025-09-16T23:46:04.822407Z	    isNew,
2025-09-16T23:46:04.822508Z	    _createdAt,
2025-09-16T23:46:04.822608Z	    _updatedAt
2025-09-16T23:46:04.822763Z	  
2025-09-16T23:46:04.822894Z	      },
2025-09-16T23:46:04.822992Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-16T23:46:04.823103Z	    }
2025-09-16T23:46:04.823197Z	  
2025-09-16T23:46:04.823287Z	Query parameters: {
2025-09-16T23:46:04.823355Z	  limit: 8,
2025-09-16T23:46:04.823414Z	  offset: 0,
2025-09-16T23:46:04.823469Z	  category: undefined,
2025-09-16T23:46:04.823524Z	  brand: 'semikron',
2025-09-16T23:46:04.823577Z	  featured: undefined
2025-09-16T23:46:04.823633Z	}
2025-09-16T23:46:04.823727Z	Fetching solutions with query: 
2025-09-16T23:46:04.823788Z	    {
2025-09-16T23:46:04.823913Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.823978Z	        
2025-09-16T23:46:04.824032Z	    _id,
2025-09-16T23:46:04.824088Z	    title,
2025-09-16T23:46:04.824141Z	    "slug": slug.current,
2025-09-16T23:46:04.824195Z	    summary,
2025-09-16T23:46:04.824248Z	    description,
2025-09-16T23:46:04.824303Z	    coverImage,
2025-09-16T23:46:04.824359Z	    primaryBrand->{
2025-09-16T23:46:04.824421Z	      _id,
2025-09-16T23:46:04.82448Z	      name,
2025-09-16T23:46:04.82457Z	      "slug": slug.current,
2025-09-16T23:46:04.824688Z	      logo
2025-09-16T23:46:04.82479Z	    },
2025-09-16T23:46:04.824894Z	    relatedBrands[]->{
2025-09-16T23:46:04.824999Z	      _id,
2025-09-16T23:46:04.825094Z	      name,
2025-09-16T23:46:04.825192Z	      "slug": slug.current,
2025-09-16T23:46:04.825289Z	      logo
2025-09-16T23:46:04.825391Z	    },
2025-09-16T23:46:04.825483Z	    targetMarket,
2025-09-16T23:46:04.825588Z	    complexity,
2025-09-16T23:46:04.825711Z	    publishedAt,
2025-09-16T23:46:04.825791Z	    isPublished,
2025-09-16T23:46:04.825882Z	    isFeatured,
2025-09-16T23:46:04.825983Z	    viewCount,
2025-09-16T23:46:04.826072Z	    _createdAt,
2025-09-16T23:46:04.826163Z	    _updatedAt
2025-09-16T23:46:04.826264Z	  
2025-09-16T23:46:04.826372Z	      },
2025-09-16T23:46:04.826477Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-16T23:46:04.82658Z	    }
2025-09-16T23:46:04.826715Z	  
2025-09-16T23:46:04.826899Z	Query parameters: {
2025-09-16T23:46:04.826973Z	  limit: 4,
2025-09-16T23:46:04.827093Z	  offset: 0,
2025-09-16T23:46:04.827219Z	  targetMarket: undefined,
2025-09-16T23:46:04.827322Z	  brand: 'semikron',
2025-09-16T23:46:04.827423Z	  featured: undefined
2025-09-16T23:46:04.827526Z	}
2025-09-16T23:46:04.827626Z	✅ [getBrandData] Found brand: Semikron
2025-09-16T23:46:04.827779Z	Products fetch result: {
2025-09-16T23:46:04.827853Z	  totalProducts: 1,
2025-09-16T23:46:04.827909Z	  fetchedProducts: 1,
2025-09-16T23:46:04.827998Z	  firstProduct: {
2025-09-16T23:46:04.828088Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-16T23:46:04.828187Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-16T23:46:04.828288Z	    _type: 'product',
2025-09-16T23:46:04.828396Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-16T23:46:04.828491Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-16T23:46:04.828594Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:04.828713Z	    image: null,
2025-09-16T23:46:04.828816Z	    inventory: {
2025-09-16T23:46:04.828927Z	      inStock: true,
2025-09-16T23:46:04.829031Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-16T23:46:04.829153Z	      quantity: 0,
2025-09-16T23:46:04.829282Z	      status: 'in_stock',
2025-09-16T23:46:04.829396Z	      warehouse: null
2025-09-16T23:46:04.829503Z	    },
2025-09-16T23:46:04.829617Z	    isActive: true,
2025-09-16T23:46:04.829773Z	    isFeatured: false,
2025-09-16T23:46:04.829889Z	    isNew: false,
2025-09-16T23:46:04.830002Z	    partNumber: 'SKKT106/16E',
2025-09-16T23:46:04.830109Z	    pricing: {
2025-09-16T23:46:04.830213Z	      currency: 'CNY',
2025-09-16T23:46:04.830317Z	      leadTime: null,
2025-09-16T23:46:04.830414Z	      moq: null,
2025-09-16T23:46:04.830536Z	      price: null,
2025-09-16T23:46:04.830768Z	      tiers: null
2025-09-16T23:46:04.830881Z	    },
2025-09-16T23:46:04.830941Z	    shortDescription: 'SKKT106/16E',
2025-09-16T23:46:04.830998Z	    slug: 'SKKT106/16E',
2025-09-16T23:46:04.831051Z	    title: 'SKKT106/16E'
2025-09-16T23:46:04.831111Z	  }
2025-09-16T23:46:04.831166Z	}
2025-09-16T23:46:04.831221Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.831276Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:46:04.831332Z	Fetching products with query: 
2025-09-16T23:46:04.831385Z	    {
2025-09-16T23:46:04.831488Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.83186Z	        
2025-09-16T23:46:04.831927Z	    _id,
2025-09-16T23:46:04.831983Z	    _type,
2025-09-16T23:46:04.832037Z	    partNumber,
2025-09-16T23:46:04.832164Z	    "slug": slug.current,
2025-09-16T23:46:04.832265Z	    title,
2025-09-16T23:46:04.832338Z	    shortDescription,
2025-09-16T23:46:04.832422Z	    image,
2025-09-16T23:46:04.832506Z	    brand->{
2025-09-16T23:46:04.83259Z	      name,
2025-09-16T23:46:04.832705Z	      "slug": slug.current,
2025-09-16T23:46:04.832794Z	      logo
2025-09-16T23:46:04.832879Z	    },
2025-09-16T23:46:04.832963Z	    category->{
2025-09-16T23:46:04.833311Z	      name,
2025-09-16T23:46:04.833474Z	      "slug": slug.current
2025-09-16T23:46:04.833584Z	    },
2025-09-16T23:46:04.833692Z	    pricing{
2025-09-16T23:46:04.833786Z	      currency,
2025-09-16T23:46:04.833871Z	      tiers[]{
2025-09-16T23:46:04.833955Z	        quantity,
2025-09-16T23:46:04.834013Z	        price,
2025-09-16T23:46:04.834109Z	        unit
2025-09-16T23:46:04.83417Z	      },
2025-09-16T23:46:04.834226Z	      moq,
2025-09-16T23:46:04.834298Z	      leadTime,
2025-09-16T23:46:04.834365Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.834426Z	      "price": tiers[0].price,
2025-09-16T23:46:04.834482Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.834537Z	    },
2025-09-16T23:46:04.834599Z	    inventory{
2025-09-16T23:46:04.834666Z	      quantity,
2025-09-16T23:46:04.834757Z	      status,
2025-09-16T23:46:04.83483Z	      warehouse,
2025-09-16T23:46:04.834886Z	      lastUpdated,
2025-09-16T23:46:04.834941Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.834997Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.835052Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.835106Z	    },
2025-09-16T23:46:04.835172Z	    isActive,
2025-09-16T23:46:04.835409Z	    isFeatured,
2025-09-16T23:46:04.835481Z	    isNew,
2025-09-16T23:46:04.835556Z	    _createdAt,
2025-09-16T23:46:04.835621Z	    _updatedAt
2025-09-16T23:46:04.835743Z	  
2025-09-16T23:46:04.835855Z	      },
2025-09-16T23:46:04.835913Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:46:04.835977Z	    }
2025-09-16T23:46:04.836033Z	  
2025-09-16T23:46:04.836092Z	Query parameters: {
2025-09-16T23:46:04.836146Z	  limit: 8,
2025-09-16T23:46:04.836199Z	  offset: 0,
2025-09-16T23:46:04.836252Z	  category: undefined,
2025-09-16T23:46:04.836306Z	  brand: 'Electronicon',
2025-09-16T23:46:04.836413Z	  featured: undefined
2025-09-16T23:46:04.836515Z	}
2025-09-16T23:46:04.836575Z	Fetching solutions with query: 
2025-09-16T23:46:04.836954Z	    {
2025-09-16T23:46:04.837017Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.837081Z	        
2025-09-16T23:46:04.837135Z	    _id,
2025-09-16T23:46:04.837191Z	    title,
2025-09-16T23:46:04.837244Z	    "slug": slug.current,
2025-09-16T23:46:04.837297Z	    summary,
2025-09-16T23:46:04.83736Z	    description,
2025-09-16T23:46:04.837416Z	    coverImage,
2025-09-16T23:46:04.837471Z	    primaryBrand->{
2025-09-16T23:46:04.837532Z	      _id,
2025-09-16T23:46:04.837853Z	      name,
2025-09-16T23:46:04.837926Z	      "slug": slug.current,
2025-09-16T23:46:04.837983Z	      logo
2025-09-16T23:46:04.83804Z	    },
2025-09-16T23:46:04.838093Z	    relatedBrands[]->{
2025-09-16T23:46:04.838148Z	      _id,
2025-09-16T23:46:04.8382Z	      name,
2025-09-16T23:46:04.838253Z	      "slug": slug.current,
2025-09-16T23:46:04.838305Z	      logo
2025-09-16T23:46:04.838362Z	    },
2025-09-16T23:46:04.838421Z	    targetMarket,
2025-09-16T23:46:04.838477Z	    complexity,
2025-09-16T23:46:04.838532Z	    publishedAt,
2025-09-16T23:46:04.838584Z	    isPublished,
2025-09-16T23:46:04.838657Z	    isFeatured,
2025-09-16T23:46:04.838731Z	    viewCount,
2025-09-16T23:46:04.838786Z	    _createdAt,
2025-09-16T23:46:04.838855Z	    _updatedAt
2025-09-16T23:46:04.838911Z	  
2025-09-16T23:46:04.838969Z	      },
2025-09-16T23:46:04.839024Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:46:04.839085Z	    }
2025-09-16T23:46:04.83914Z	  
2025-09-16T23:46:04.839197Z	Query parameters: {
2025-09-16T23:46:04.839272Z	  limit: 4,
2025-09-16T23:46:04.839326Z	  offset: 0,
2025-09-16T23:46:04.840151Z	  targetMarket: undefined,
2025-09-16T23:46:04.840227Z	  brand: 'Electronicon',
2025-09-16T23:46:04.840283Z	  featured: undefined
2025-09-16T23:46:04.840362Z	}
2025-09-16T23:46:04.840427Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:04.840484Z	Fetching products with query: 
2025-09-16T23:46:04.840539Z	    {
2025-09-16T23:46:04.840593Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.840655Z	        
2025-09-16T23:46:04.840742Z	    _id,
2025-09-16T23:46:04.840807Z	    _type,
2025-09-16T23:46:04.840861Z	    partNumber,
2025-09-16T23:46:04.840913Z	    "slug": slug.current,
2025-09-16T23:46:04.840966Z	    title,
2025-09-16T23:46:04.841018Z	    shortDescription,
2025-09-16T23:46:04.841071Z	    image,
2025-09-16T23:46:04.841123Z	    brand->{
2025-09-16T23:46:04.841175Z	      name,
2025-09-16T23:46:04.841227Z	      "slug": slug.current,
2025-09-16T23:46:04.841279Z	      logo
2025-09-16T23:46:04.841332Z	    },
2025-09-16T23:46:04.841389Z	    category->{
2025-09-16T23:46:04.841441Z	      name,
2025-09-16T23:46:04.841493Z	      "slug": slug.current
2025-09-16T23:46:04.841545Z	    },
2025-09-16T23:46:04.841598Z	    pricing{
2025-09-16T23:46:04.841661Z	      currency,
2025-09-16T23:46:04.841751Z	      tiers[]{
2025-09-16T23:46:04.841807Z	        quantity,
2025-09-16T23:46:04.84186Z	        price,
2025-09-16T23:46:04.841912Z	        unit
2025-09-16T23:46:04.84197Z	      },
2025-09-16T23:46:04.842023Z	      moq,
2025-09-16T23:46:04.842081Z	      leadTime,
2025-09-16T23:46:04.842135Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.84219Z	      "price": tiers[0].price,
2025-09-16T23:46:04.842243Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.842296Z	    },
2025-09-16T23:46:04.842349Z	    inventory{
2025-09-16T23:46:04.842403Z	      quantity,
2025-09-16T23:46:04.842456Z	      status,
2025-09-16T23:46:04.84251Z	      warehouse,
2025-09-16T23:46:04.842564Z	      lastUpdated,
2025-09-16T23:46:04.842624Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.842693Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.84277Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.842857Z	    },
2025-09-16T23:46:04.842952Z	    isActive,
2025-09-16T23:46:04.843045Z	    isFeatured,
2025-09-16T23:46:04.843138Z	    isNew,
2025-09-16T23:46:04.843267Z	    _createdAt,
2025-09-16T23:46:04.843474Z	    _updatedAt
2025-09-16T23:46:04.843639Z	  
2025-09-16T23:46:04.843793Z	      },
2025-09-16T23:46:04.843883Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-16T23:46:04.843951Z	    }
2025-09-16T23:46:04.844009Z	  
2025-09-16T23:46:04.844065Z	Query parameters: {
2025-09-16T23:46:04.844133Z	  limit: 8,
2025-09-16T23:46:04.844193Z	  offset: 0,
2025-09-16T23:46:04.844249Z	  category: undefined,
2025-09-16T23:46:04.844304Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:04.844358Z	  featured: undefined
2025-09-16T23:46:04.844413Z	}
2025-09-16T23:46:04.844479Z	Fetching solutions with query: 
2025-09-16T23:46:04.844655Z	    {
2025-09-16T23:46:04.844805Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.844886Z	        
2025-09-16T23:46:04.844943Z	    _id,
2025-09-16T23:46:04.844998Z	    title,
2025-09-16T23:46:04.845052Z	    "slug": slug.current,
2025-09-16T23:46:04.84511Z	    summary,
2025-09-16T23:46:04.84517Z	    description,
2025-09-16T23:46:04.845233Z	    coverImage,
2025-09-16T23:46:04.84529Z	    primaryBrand->{
2025-09-16T23:46:04.845343Z	      _id,
2025-09-16T23:46:04.845398Z	      name,
2025-09-16T23:46:04.845462Z	      "slug": slug.current,
2025-09-16T23:46:04.845525Z	      logo
2025-09-16T23:46:04.84558Z	    },
2025-09-16T23:46:04.845634Z	    relatedBrands[]->{
2025-09-16T23:46:04.845706Z	      _id,
2025-09-16T23:46:04.845888Z	      name,
2025-09-16T23:46:04.845977Z	      "slug": slug.current,
2025-09-16T23:46:04.846037Z	      logo
2025-09-16T23:46:04.846094Z	    },
2025-09-16T23:46:04.846155Z	    targetMarket,
2025-09-16T23:46:04.846213Z	    complexity,
2025-09-16T23:46:04.846277Z	    publishedAt,
2025-09-16T23:46:04.846334Z	    isPublished,
2025-09-16T23:46:04.846388Z	    isFeatured,
2025-09-16T23:46:04.846448Z	    viewCount,
2025-09-16T23:46:04.846505Z	    _createdAt,
2025-09-16T23:46:04.846572Z	    _updatedAt
2025-09-16T23:46:04.846628Z	  
2025-09-16T23:46:04.846705Z	      },
2025-09-16T23:46:04.846773Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-16T23:46:04.846837Z	    }
2025-09-16T23:46:04.846895Z	  
2025-09-16T23:46:04.846959Z	Query parameters: {
2025-09-16T23:46:04.847024Z	  limit: 4,
2025-09-16T23:46:04.847081Z	  offset: 0,
2025-09-16T23:46:04.847137Z	  targetMarket: undefined,
2025-09-16T23:46:04.847191Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:04.847247Z	  featured: undefined
2025-09-16T23:46:04.847301Z	}
2025-09-16T23:46:04.847356Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:04.847416Z	Fetching products with query: 
2025-09-16T23:46:04.847477Z	    {
2025-09-16T23:46:04.847532Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.847598Z	        
2025-09-16T23:46:04.847653Z	    _id,
2025-09-16T23:46:04.84772Z	    _type,
2025-09-16T23:46:04.847778Z	    partNumber,
2025-09-16T23:46:04.847831Z	    "slug": slug.current,
2025-09-16T23:46:04.84806Z	    title,
2025-09-16T23:46:04.84819Z	    shortDescription,
2025-09-16T23:46:04.848331Z	    image,
2025-09-16T23:46:04.848464Z	    brand->{
2025-09-16T23:46:04.848597Z	      name,
2025-09-16T23:46:04.848766Z	      "slug": slug.current,
2025-09-16T23:46:04.848898Z	      logo
2025-09-16T23:46:04.848989Z	    },
2025-09-16T23:46:04.849122Z	    category->{
2025-09-16T23:46:04.849222Z	      name,
2025-09-16T23:46:04.849312Z	      "slug": slug.current
2025-09-16T23:46:04.849383Z	    },
2025-09-16T23:46:04.849484Z	    pricing{
2025-09-16T23:46:04.849585Z	      currency,
2025-09-16T23:46:04.849666Z	      tiers[]{
2025-09-16T23:46:04.849782Z	        quantity,
2025-09-16T23:46:04.849884Z	        price,
2025-09-16T23:46:04.849979Z	        unit
2025-09-16T23:46:04.850146Z	      },
2025-09-16T23:46:04.850266Z	      moq,
2025-09-16T23:46:04.850534Z	      leadTime,
2025-09-16T23:46:04.850621Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.850709Z	      "price": tiers[0].price,
2025-09-16T23:46:04.850831Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.850941Z	    },
2025-09-16T23:46:04.851061Z	    inventory{
2025-09-16T23:46:04.851163Z	      quantity,
2025-09-16T23:46:04.851276Z	      status,
2025-09-16T23:46:04.851392Z	      warehouse,
2025-09-16T23:46:04.851506Z	      lastUpdated,
2025-09-16T23:46:04.851618Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.851805Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.851885Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.851943Z	    },
2025-09-16T23:46:04.852089Z	    isActive,
2025-09-16T23:46:04.852203Z	    isFeatured,
2025-09-16T23:46:04.852345Z	    isNew,
2025-09-16T23:46:04.852456Z	    _createdAt,
2025-09-16T23:46:04.852648Z	    _updatedAt
2025-09-16T23:46:04.85278Z	  
2025-09-16T23:46:04.852889Z	      },
2025-09-16T23:46:04.853021Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-16T23:46:04.85312Z	    }
2025-09-16T23:46:04.853226Z	  
2025-09-16T23:46:04.85332Z	Query parameters: {
2025-09-16T23:46:04.85338Z	  limit: 8,
2025-09-16T23:46:04.853479Z	  offset: 0,
2025-09-16T23:46:04.853582Z	  category: undefined,
2025-09-16T23:46:04.853706Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:04.853819Z	  featured: undefined
2025-09-16T23:46:04.853928Z	}
2025-09-16T23:46:04.85403Z	Fetching solutions with query: 
2025-09-16T23:46:04.854136Z	    {
2025-09-16T23:46:04.854265Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.854387Z	        
2025-09-16T23:46:04.854496Z	    _id,
2025-09-16T23:46:04.85475Z	    title,
2025-09-16T23:46:04.854913Z	    "slug": slug.current,
2025-09-16T23:46:04.855021Z	    summary,
2025-09-16T23:46:04.855134Z	    description,
2025-09-16T23:46:04.855239Z	    coverImage,
2025-09-16T23:46:04.855332Z	    primaryBrand->{
2025-09-16T23:46:04.855442Z	      _id,
2025-09-16T23:46:04.8556Z	      name,
2025-09-16T23:46:04.855774Z	      "slug": slug.current,
2025-09-16T23:46:04.85592Z	      logo
2025-09-16T23:46:04.855995Z	    },
2025-09-16T23:46:04.856053Z	    relatedBrands[]->{
2025-09-16T23:46:04.856111Z	      _id,
2025-09-16T23:46:04.8562Z	      name,
2025-09-16T23:46:04.856311Z	      "slug": slug.current,
2025-09-16T23:46:04.856432Z	      logo
2025-09-16T23:46:04.856538Z	    },
2025-09-16T23:46:04.85666Z	    targetMarket,
2025-09-16T23:46:04.856807Z	    complexity,
2025-09-16T23:46:04.856941Z	    publishedAt,
2025-09-16T23:46:04.857033Z	    isPublished,
2025-09-16T23:46:04.857102Z	    isFeatured,
2025-09-16T23:46:04.857255Z	    viewCount,
2025-09-16T23:46:04.857375Z	    _createdAt,
2025-09-16T23:46:04.857477Z	    _updatedAt
2025-09-16T23:46:04.857622Z	  
2025-09-16T23:46:04.857754Z	      },
2025-09-16T23:46:04.85786Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-16T23:46:04.858004Z	    }
2025-09-16T23:46:04.858118Z	  
2025-09-16T23:46:04.858239Z	Query parameters: {
2025-09-16T23:46:04.858348Z	  limit: 4,
2025-09-16T23:46:04.85848Z	  offset: 0,
2025-09-16T23:46:04.858635Z	  targetMarket: undefined,
2025-09-16T23:46:04.858772Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:04.858891Z	  featured: undefined
2025-09-16T23:46:04.859005Z	}
2025-09-16T23:46:04.859115Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:04.859249Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:04.859371Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.859514Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:46:04.85962Z	Fetching products with query: 
2025-09-16T23:46:04.859728Z	    {
2025-09-16T23:46:04.859828Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.859951Z	        
2025-09-16T23:46:04.86005Z	    _id,
2025-09-16T23:46:04.860165Z	    _type,
2025-09-16T23:46:04.860262Z	    partNumber,
2025-09-16T23:46:04.86035Z	    "slug": slug.current,
2025-09-16T23:46:04.86043Z	    title,
2025-09-16T23:46:04.860515Z	    shortDescription,
2025-09-16T23:46:04.860572Z	    image,
2025-09-16T23:46:04.860629Z	    brand->{
2025-09-16T23:46:04.860732Z	      name,
2025-09-16T23:46:04.860897Z	      "slug": slug.current,
2025-09-16T23:46:04.860975Z	      logo
2025-09-16T23:46:04.861168Z	    },
2025-09-16T23:46:04.861239Z	    category->{
2025-09-16T23:46:04.861294Z	      name,
2025-09-16T23:46:04.861503Z	      "slug": slug.current
2025-09-16T23:46:04.861632Z	    },
2025-09-16T23:46:04.86181Z	    pricing{
2025-09-16T23:46:04.861913Z	      currency,
2025-09-16T23:46:04.862028Z	      tiers[]{
2025-09-16T23:46:04.862178Z	        quantity,
2025-09-16T23:46:04.862416Z	        price,
2025-09-16T23:46:04.86259Z	        unit
2025-09-16T23:46:04.862768Z	      },
2025-09-16T23:46:04.862855Z	      moq,
2025-09-16T23:46:04.862936Z	      leadTime,
2025-09-16T23:46:04.863228Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.863501Z	      "price": tiers[0].price,
2025-09-16T23:46:04.86361Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.863863Z	    },
2025-09-16T23:46:04.864097Z	    inventory{
2025-09-16T23:46:04.864196Z	      quantity,
2025-09-16T23:46:04.864479Z	      status,
2025-09-16T23:46:04.86462Z	      warehouse,
2025-09-16T23:46:04.864878Z	      lastUpdated,
2025-09-16T23:46:04.86501Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.865115Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.865208Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.865281Z	    },
2025-09-16T23:46:04.865352Z	    isActive,
2025-09-16T23:46:04.865483Z	    isFeatured,
2025-09-16T23:46:04.865625Z	    isNew,
2025-09-16T23:46:04.865752Z	    _createdAt,
2025-09-16T23:46:04.86586Z	    _updatedAt
2025-09-16T23:46:04.865963Z	  
2025-09-16T23:46:04.866062Z	      },
2025-09-16T23:46:04.866164Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:46:04.866281Z	    }
2025-09-16T23:46:04.866375Z	  
2025-09-16T23:46:04.866487Z	Query parameters: {
2025-09-16T23:46:04.866586Z	  limit: 8,
2025-09-16T23:46:04.866699Z	  offset: 0,
2025-09-16T23:46:04.866806Z	  category: undefined,
2025-09-16T23:46:04.866908Z	  brand: 'cree',
2025-09-16T23:46:04.867009Z	  featured: undefined
2025-09-16T23:46:04.867113Z	}
2025-09-16T23:46:04.867249Z	Fetching solutions with query: 
2025-09-16T23:46:04.867345Z	    {
2025-09-16T23:46:04.867453Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.867605Z	        
2025-09-16T23:46:04.867728Z	    _id,
2025-09-16T23:46:04.867833Z	    title,
2025-09-16T23:46:04.867931Z	    "slug": slug.current,
2025-09-16T23:46:04.868001Z	    summary,
2025-09-16T23:46:04.868062Z	    description,
2025-09-16T23:46:04.868134Z	    coverImage,
2025-09-16T23:46:04.868203Z	    primaryBrand->{
2025-09-16T23:46:04.868282Z	      _id,
2025-09-16T23:46:04.8684Z	      name,
2025-09-16T23:46:04.868496Z	      "slug": slug.current,
2025-09-16T23:46:04.868588Z	      logo
2025-09-16T23:46:04.868702Z	    },
2025-09-16T23:46:04.868809Z	    relatedBrands[]->{
2025-09-16T23:46:04.868907Z	      _id,
2025-09-16T23:46:04.868985Z	      name,
2025-09-16T23:46:04.869064Z	      "slug": slug.current,
2025-09-16T23:46:04.869159Z	      logo
2025-09-16T23:46:04.869264Z	    },
2025-09-16T23:46:04.869367Z	    targetMarket,
2025-09-16T23:46:04.869469Z	    complexity,
2025-09-16T23:46:04.869582Z	    publishedAt,
2025-09-16T23:46:04.8697Z	    isPublished,
2025-09-16T23:46:04.86981Z	    isFeatured,
2025-09-16T23:46:04.869903Z	    viewCount,
2025-09-16T23:46:04.870095Z	    _createdAt,
2025-09-16T23:46:04.870176Z	    _updatedAt
2025-09-16T23:46:04.87028Z	  
2025-09-16T23:46:04.870411Z	      },
2025-09-16T23:46:04.870502Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:46:04.870626Z	    }
2025-09-16T23:46:04.870773Z	  
2025-09-16T23:46:04.870883Z	Query parameters: {
2025-09-16T23:46:04.871007Z	  limit: 4,
2025-09-16T23:46:04.871134Z	  offset: 0,
2025-09-16T23:46:04.87125Z	  targetMarket: undefined,
2025-09-16T23:46:04.871355Z	  brand: 'cree',
2025-09-16T23:46:04.87146Z	  featured: undefined
2025-09-16T23:46:04.871568Z	}
2025-09-16T23:46:04.871713Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:46:04.87184Z	Products fetch result: {
2025-09-16T23:46:04.871956Z	  totalProducts: 4,
2025-09-16T23:46:04.872066Z	  fetchedProducts: 4,
2025-09-16T23:46:04.872176Z	  firstProduct: {
2025-09-16T23:46:04.872277Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:46:04.872387Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:46:04.87254Z	    _type: 'product',
2025-09-16T23:46:04.872664Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:46:04.872813Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:46:04.872924Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:04.873031Z	    image: null,
2025-09-16T23:46:04.873133Z	    inventory: {
2025-09-16T23:46:04.873234Z	      inStock: true,
2025-09-16T23:46:04.873335Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:46:04.873436Z	      quantity: 0,
2025-09-16T23:46:04.873552Z	      status: 'in_stock',
2025-09-16T23:46:04.873646Z	      warehouse: null
2025-09-16T23:46:04.873766Z	    },
2025-09-16T23:46:04.873859Z	    isActive: true,
2025-09-16T23:46:04.873956Z	    isFeatured: false,
2025-09-16T23:46:04.874054Z	    isNew: false,
2025-09-16T23:46:04.874153Z	    partNumber: '11111',
2025-09-16T23:46:04.874249Z	    pricing: {
2025-09-16T23:46:04.874348Z	      currency: 'CNY',
2025-09-16T23:46:04.874444Z	      leadTime: null,
2025-09-16T23:46:04.874563Z	      moq: null,
2025-09-16T23:46:04.874667Z	      price: null,
2025-09-16T23:46:04.874798Z	      tiers: null
2025-09-16T23:46:04.874885Z	    },
2025-09-16T23:46:04.874983Z	    shortDescription: '11111',
2025-09-16T23:46:04.875047Z	    slug: 'sic mosfet',
2025-09-16T23:46:04.875105Z	    title: '111111'
2025-09-16T23:46:04.875159Z	  }
2025-09-16T23:46:04.875224Z	}
2025-09-16T23:46:04.875302Z	Solutions fetch result: {
2025-09-16T23:46:04.875357Z	  totalSolutions: 6,
2025-09-16T23:46:04.875436Z	  fetchedSolutions: 4,
2025-09-16T23:46:04.875526Z	  firstSolution: {
2025-09-16T23:46:04.875629Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:46:04.875821Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:46:04.875964Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:46:04.87607Z	    complexity: 'medium',
2025-09-16T23:46:04.876166Z	    coverImage: null,
2025-09-16T23:46:04.876272Z	    description: [ [Object] ],
2025-09-16T23:46:04.876383Z	    isFeatured: false,
2025-09-16T23:46:04.876489Z	    isPublished: true,
2025-09-16T23:46:04.876587Z	    primaryBrand: {
2025-09-16T23:46:04.8767Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:46:04.876811Z	      logo: null,
2025-09-16T23:46:04.876918Z	      name: 'CREE',
2025-09-16T23:46:04.877014Z	      slug: 'cree'
2025-09-16T23:46:04.877117Z	    },
2025-09-16T23:46:04.877202Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:46:04.877301Z	    relatedBrands: null,
2025-09-16T23:46:04.877404Z	    slug: '11111',
2025-09-16T23:46:04.877503Z	    summary: '11111',
2025-09-16T23:46:04.877608Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:04.877739Z	    title: '11111',
2025-09-16T23:46:04.877846Z	    viewCount: 0
2025-09-16T23:46:04.877943Z	  }
2025-09-16T23:46:04.878044Z	}
2025-09-16T23:46:04.878157Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:46:04.878272Z	Fetching products with query: 
2025-09-16T23:46:04.878372Z	    {
2025-09-16T23:46:04.878462Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.878522Z	        
2025-09-16T23:46:04.878577Z	    _id,
2025-09-16T23:46:04.878645Z	    _type,
2025-09-16T23:46:04.87874Z	    partNumber,
2025-09-16T23:46:04.878839Z	    "slug": slug.current,
2025-09-16T23:46:04.87898Z	    title,
2025-09-16T23:46:04.8791Z	    shortDescription,
2025-09-16T23:46:04.87919Z	    image,
2025-09-16T23:46:04.879311Z	    brand->{
2025-09-16T23:46:04.879418Z	      name,
2025-09-16T23:46:04.87951Z	      "slug": slug.current,
2025-09-16T23:46:04.879567Z	      logo
2025-09-16T23:46:04.879641Z	    },
2025-09-16T23:46:04.87976Z	    category->{
2025-09-16T23:46:04.879882Z	      name,
2025-09-16T23:46:04.879986Z	      "slug": slug.current
2025-09-16T23:46:04.880079Z	    },
2025-09-16T23:46:04.880165Z	    pricing{
2025-09-16T23:46:04.880258Z	      currency,
2025-09-16T23:46:04.880372Z	      tiers[]{
2025-09-16T23:46:04.880494Z	        quantity,
2025-09-16T23:46:04.880599Z	        price,
2025-09-16T23:46:04.880728Z	        unit
2025-09-16T23:46:04.880856Z	      },
2025-09-16T23:46:04.880969Z	      moq,
2025-09-16T23:46:04.881082Z	      leadTime,
2025-09-16T23:46:04.8812Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.88132Z	      "price": tiers[0].price,
2025-09-16T23:46:04.88144Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.881568Z	    },
2025-09-16T23:46:04.881716Z	    inventory{
2025-09-16T23:46:04.881836Z	      quantity,
2025-09-16T23:46:04.881956Z	      status,
2025-09-16T23:46:04.882062Z	      warehouse,
2025-09-16T23:46:04.882178Z	      lastUpdated,
2025-09-16T23:46:04.882279Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.882494Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.882576Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.882698Z	    },
2025-09-16T23:46:04.882804Z	    isActive,
2025-09-16T23:46:04.882895Z	    isFeatured,
2025-09-16T23:46:04.883009Z	    isNew,
2025-09-16T23:46:04.883193Z	    _createdAt,
2025-09-16T23:46:04.883302Z	    _updatedAt
2025-09-16T23:46:04.883394Z	  
2025-09-16T23:46:04.883524Z	      },
2025-09-16T23:46:04.883726Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:46:04.883883Z	    }
2025-09-16T23:46:04.884035Z	  
2025-09-16T23:46:04.884144Z	Query parameters: {
2025-09-16T23:46:04.884272Z	  limit: 8,
2025-09-16T23:46:04.884405Z	  offset: 0,
2025-09-16T23:46:04.884524Z	  category: undefined,
2025-09-16T23:46:04.884638Z	  brand: 'cree',
2025-09-16T23:46:04.884787Z	  featured: undefined
2025-09-16T23:46:04.884934Z	}
2025-09-16T23:46:04.885062Z	Fetching solutions with query: 
2025-09-16T23:46:04.885159Z	    {
2025-09-16T23:46:04.885269Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.885409Z	        
2025-09-16T23:46:04.885519Z	    _id,
2025-09-16T23:46:04.885598Z	    title,
2025-09-16T23:46:04.885903Z	    "slug": slug.current,
2025-09-16T23:46:04.885972Z	    summary,
2025-09-16T23:46:04.886028Z	    description,
2025-09-16T23:46:04.886088Z	    coverImage,
2025-09-16T23:46:04.886143Z	    primaryBrand->{
2025-09-16T23:46:04.886196Z	      _id,
2025-09-16T23:46:04.886251Z	      name,
2025-09-16T23:46:04.886303Z	      "slug": slug.current,
2025-09-16T23:46:04.886355Z	      logo
2025-09-16T23:46:04.886407Z	    },
2025-09-16T23:46:04.886462Z	    relatedBrands[]->{
2025-09-16T23:46:04.88652Z	      _id,
2025-09-16T23:46:04.886579Z	      name,
2025-09-16T23:46:04.886633Z	      "slug": slug.current,
2025-09-16T23:46:04.886724Z	      logo
2025-09-16T23:46:04.886792Z	    },
2025-09-16T23:46:04.886847Z	    targetMarket,
2025-09-16T23:46:04.8869Z	    complexity,
2025-09-16T23:46:04.886966Z	    publishedAt,
2025-09-16T23:46:04.887019Z	    isPublished,
2025-09-16T23:46:04.887071Z	    isFeatured,
2025-09-16T23:46:04.887123Z	    viewCount,
2025-09-16T23:46:04.887177Z	    _createdAt,
2025-09-16T23:46:04.88723Z	    _updatedAt
2025-09-16T23:46:04.887288Z	  
2025-09-16T23:46:04.887345Z	      },
2025-09-16T23:46:04.887399Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:46:04.887455Z	    }
2025-09-16T23:46:04.887508Z	  
2025-09-16T23:46:04.887559Z	Query parameters: {
2025-09-16T23:46:04.887613Z	  limit: 4,
2025-09-16T23:46:04.887664Z	  offset: 0,
2025-09-16T23:46:04.887758Z	  targetMarket: undefined,
2025-09-16T23:46:04.887851Z	  brand: 'cree',
2025-09-16T23:46:04.887957Z	  featured: undefined
2025-09-16T23:46:04.888064Z	}
2025-09-16T23:46:04.888173Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:46:04.888276Z	Products fetch result: {
2025-09-16T23:46:04.888371Z	  totalProducts: 4,
2025-09-16T23:46:04.888466Z	  fetchedProducts: 4,
2025-09-16T23:46:04.888562Z	  firstProduct: {
2025-09-16T23:46:04.888656Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:46:04.888794Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:46:04.888897Z	    _type: 'product',
2025-09-16T23:46:04.889008Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:46:04.889112Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:46:04.889225Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:04.889356Z	    image: null,
2025-09-16T23:46:04.889485Z	    inventory: {
2025-09-16T23:46:04.889569Z	      inStock: true,
2025-09-16T23:46:04.88967Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:46:04.8898Z	      quantity: 0,
2025-09-16T23:46:04.889901Z	      status: 'in_stock',
2025-09-16T23:46:04.890006Z	      warehouse: null
2025-09-16T23:46:04.890271Z	    },
2025-09-16T23:46:04.890407Z	    isActive: true,
2025-09-16T23:46:04.890556Z	    isFeatured: false,
2025-09-16T23:46:04.890665Z	    isNew: false,
2025-09-16T23:46:04.890798Z	    partNumber: '11111',
2025-09-16T23:46:04.890914Z	    pricing: {
2025-09-16T23:46:04.89102Z	      currency: 'CNY',
2025-09-16T23:46:04.891127Z	      leadTime: null,
2025-09-16T23:46:04.891229Z	      moq: null,
2025-09-16T23:46:04.891347Z	      price: null,
2025-09-16T23:46:04.891479Z	      tiers: null
2025-09-16T23:46:04.891606Z	    },
2025-09-16T23:46:04.891737Z	    shortDescription: '11111',
2025-09-16T23:46:04.891803Z	    slug: 'sic mosfet',
2025-09-16T23:46:04.89187Z	    title: '111111'
2025-09-16T23:46:04.89193Z	  }
2025-09-16T23:46:04.891985Z	}
2025-09-16T23:46:04.892048Z	Solutions fetch result: {
2025-09-16T23:46:04.892102Z	  totalSolutions: 6,
2025-09-16T23:46:04.892156Z	  fetchedSolutions: 4,
2025-09-16T23:46:04.892209Z	  firstSolution: {
2025-09-16T23:46:04.892265Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:46:04.892319Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:46:04.892374Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:46:04.892428Z	    complexity: 'medium',
2025-09-16T23:46:04.892488Z	    coverImage: null,
2025-09-16T23:46:04.892543Z	    description: [ [Object] ],
2025-09-16T23:46:04.892596Z	    isFeatured: false,
2025-09-16T23:46:04.892655Z	    isPublished: true,
2025-09-16T23:46:04.892737Z	    primaryBrand: {
2025-09-16T23:46:04.892815Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:46:04.892877Z	      logo: null,
2025-09-16T23:46:04.892936Z	      name: 'CREE',
2025-09-16T23:46:04.892988Z	      slug: 'cree'
2025-09-16T23:46:04.893042Z	    },
2025-09-16T23:46:04.893097Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:46:04.89315Z	    relatedBrands: null,
2025-09-16T23:46:04.893204Z	    slug: '11111',
2025-09-16T23:46:04.893257Z	    summary: '11111',
2025-09-16T23:46:04.89331Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:04.893369Z	    title: '11111',
2025-09-16T23:46:04.893424Z	    viewCount: 0
2025-09-16T23:46:04.893485Z	  }
2025-09-16T23:46:04.893539Z	}
2025-09-16T23:46:04.893593Z	Error fetching article data: l [SanityError]: Article not found
2025-09-16T23:46:04.893655Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-16T23:46:04.893748Z	Fetching products with query: 
2025-09-16T23:46:04.893821Z	    {
2025-09-16T23:46:04.893905Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.894041Z	        
2025-09-16T23:46:04.894223Z	    _id,
2025-09-16T23:46:04.894342Z	    _type,
2025-09-16T23:46:04.894465Z	    partNumber,
2025-09-16T23:46:04.894579Z	    "slug": slug.current,
2025-09-16T23:46:04.894703Z	    title,
2025-09-16T23:46:04.894817Z	    shortDescription,
2025-09-16T23:46:04.894922Z	    image,
2025-09-16T23:46:04.895055Z	    brand->{
2025-09-16T23:46:04.895173Z	      name,
2025-09-16T23:46:04.895285Z	      "slug": slug.current,
2025-09-16T23:46:04.895395Z	      logo
2025-09-16T23:46:04.895511Z	    },
2025-09-16T23:46:04.895618Z	    category->{
2025-09-16T23:46:04.895749Z	      name,
2025-09-16T23:46:04.895896Z	      "slug": slug.current
2025-09-16T23:46:04.896009Z	    },
2025-09-16T23:46:04.896117Z	    pricing{
2025-09-16T23:46:04.896216Z	      currency,
2025-09-16T23:46:04.896322Z	      tiers[]{
2025-09-16T23:46:04.896424Z	        quantity,
2025-09-16T23:46:04.896538Z	        price,
2025-09-16T23:46:04.896649Z	        unit
2025-09-16T23:46:04.896828Z	      },
2025-09-16T23:46:04.896936Z	      moq,
2025-09-16T23:46:04.896996Z	      leadTime,
2025-09-16T23:46:04.897052Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.89711Z	      "price": tiers[0].price,
2025-09-16T23:46:04.897163Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.897222Z	    },
2025-09-16T23:46:04.897278Z	    inventory{
2025-09-16T23:46:04.897331Z	      quantity,
2025-09-16T23:46:04.897384Z	      status,
2025-09-16T23:46:04.897439Z	      warehouse,
2025-09-16T23:46:04.897501Z	      lastUpdated,
2025-09-16T23:46:04.897557Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.897614Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.897667Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.897778Z	    },
2025-09-16T23:46:04.897862Z	    isActive,
2025-09-16T23:46:04.897944Z	    isFeatured,
2025-09-16T23:46:04.898Z	    isNew,
2025-09-16T23:46:04.898056Z	    _createdAt,
2025-09-16T23:46:04.898144Z	    _updatedAt
2025-09-16T23:46:04.898241Z	  
2025-09-16T23:46:04.89833Z	      },
2025-09-16T23:46:04.898387Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-16T23:46:04.898448Z	    }
2025-09-16T23:46:04.898515Z	  
2025-09-16T23:46:04.898569Z	Query parameters: {
2025-09-16T23:46:04.898622Z	  limit: 8,
2025-09-16T23:46:04.898692Z	  offset: 0,
2025-09-16T23:46:04.898996Z	  category: undefined,
2025-09-16T23:46:04.899201Z	  brand: 'lem',
2025-09-16T23:46:04.89935Z	  featured: undefined
2025-09-16T23:46:04.899537Z	}
2025-09-16T23:46:04.899792Z	Fetching solutions with query: 
2025-09-16T23:46:04.899881Z	    {
2025-09-16T23:46:04.900102Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.90028Z	        
2025-09-16T23:46:04.90044Z	    _id,
2025-09-16T23:46:04.900559Z	    title,
2025-09-16T23:46:04.90078Z	    "slug": slug.current,
2025-09-16T23:46:04.900856Z	    summary,
2025-09-16T23:46:04.901209Z	    description,
2025-09-16T23:46:04.901302Z	    coverImage,
2025-09-16T23:46:04.901556Z	    primaryBrand->{
2025-09-16T23:46:04.901626Z	      _id,
2025-09-16T23:46:04.901873Z	      name,
2025-09-16T23:46:04.901984Z	      "slug": slug.current,
2025-09-16T23:46:04.902226Z	      logo
2025-09-16T23:46:04.902311Z	    },
2025-09-16T23:46:04.902564Z	    relatedBrands[]->{
2025-09-16T23:46:04.902649Z	      _id,
2025-09-16T23:46:04.902807Z	      name,
2025-09-16T23:46:04.902936Z	      "slug": slug.current,
2025-09-16T23:46:04.903017Z	      logo
2025-09-16T23:46:04.90315Z	    },
2025-09-16T23:46:04.903237Z	    targetMarket,
2025-09-16T23:46:04.903375Z	    complexity,
2025-09-16T23:46:04.903474Z	    publishedAt,
2025-09-16T23:46:04.903616Z	    isPublished,
2025-09-16T23:46:04.903806Z	    isFeatured,
2025-09-16T23:46:04.903963Z	    viewCount,
2025-09-16T23:46:04.904104Z	    _createdAt,
2025-09-16T23:46:04.904232Z	    _updatedAt
2025-09-16T23:46:04.904385Z	  
2025-09-16T23:46:04.904597Z	      },
2025-09-16T23:46:04.904782Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-16T23:46:04.904947Z	    }
2025-09-16T23:46:04.905031Z	  
2025-09-16T23:46:04.905092Z	Query parameters: {
2025-09-16T23:46:04.905305Z	  limit: 4,
2025-09-16T23:46:04.905416Z	  offset: 0,
2025-09-16T23:46:04.905598Z	  targetMarket: undefined,
2025-09-16T23:46:04.905714Z	  brand: 'lem',
2025-09-16T23:46:04.90588Z	  featured: undefined
2025-09-16T23:46:04.90596Z	}
2025-09-16T23:46:04.90602Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:46:04.906245Z	Products fetch result: {
2025-09-16T23:46:04.906348Z	  totalProducts: 2,
2025-09-16T23:46:04.906494Z	  fetchedProducts: 2,
2025-09-16T23:46:04.90659Z	  firstProduct: {
2025-09-16T23:46:04.906793Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:46:04.906996Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:46:04.907103Z	    _type: 'product',
2025-09-16T23:46:04.90727Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:46:04.907342Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:46:04.907477Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:46:04.907614Z	    image: null,
2025-09-16T23:46:04.907785Z	    inventory: {
2025-09-16T23:46:04.907887Z	      inStock: true,
2025-09-16T23:46:04.908045Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:46:04.908152Z	      quantity: 0,
2025-09-16T23:46:04.908286Z	      status: 'in_stock',
2025-09-16T23:46:04.908387Z	      warehouse: null
2025-09-16T23:46:04.908522Z	    },
2025-09-16T23:46:04.908601Z	    isActive: true,
2025-09-16T23:46:04.908732Z	    isFeatured: false,
2025-09-16T23:46:04.908802Z	    isNew: false,
2025-09-16T23:46:04.909057Z	    partNumber: '99999',
2025-09-16T23:46:04.909271Z	    pricing: {
2025-09-16T23:46:04.909424Z	      currency: 'CNY',
2025-09-16T23:46:04.909605Z	      leadTime: null,
2025-09-16T23:46:04.90981Z	      moq: null,
2025-09-16T23:46:04.909894Z	      price: null,
2025-09-16T23:46:04.910027Z	      tiers: null
2025-09-16T23:46:04.910211Z	    },
2025-09-16T23:46:04.910501Z	    shortDescription: null,
2025-09-16T23:46:04.910775Z	    slug: '99999',
2025-09-16T23:46:04.910862Z	    title: '99999'
2025-09-16T23:46:04.911138Z	  }
2025-09-16T23:46:04.911401Z	}
2025-09-16T23:46:04.911666Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.911848Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:46:04.912031Z	Fetching products with query: 
2025-09-16T23:46:04.912185Z	    {
2025-09-16T23:46:04.912335Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.912489Z	        
2025-09-16T23:46:04.912559Z	    _id,
2025-09-16T23:46:04.912697Z	    _type,
2025-09-16T23:46:04.912793Z	    partNumber,
2025-09-16T23:46:04.912983Z	    "slug": slug.current,
2025-09-16T23:46:04.913094Z	    title,
2025-09-16T23:46:04.913193Z	    shortDescription,
2025-09-16T23:46:04.913277Z	    image,
2025-09-16T23:46:04.913379Z	    brand->{
2025-09-16T23:46:04.913547Z	      name,
2025-09-16T23:46:04.913682Z	      "slug": slug.current,
2025-09-16T23:46:04.913821Z	      logo
2025-09-16T23:46:04.913927Z	    },
2025-09-16T23:46:04.914024Z	    category->{
2025-09-16T23:46:04.914187Z	      name,
2025-09-16T23:46:04.914352Z	      "slug": slug.current
2025-09-16T23:46:04.914436Z	    },
2025-09-16T23:46:04.914567Z	    pricing{
2025-09-16T23:46:04.914686Z	      currency,
2025-09-16T23:46:04.914799Z	      tiers[]{
2025-09-16T23:46:04.914899Z	        quantity,
2025-09-16T23:46:04.914994Z	        price,
2025-09-16T23:46:04.915069Z	        unit
2025-09-16T23:46:04.915123Z	      },
2025-09-16T23:46:04.915177Z	      moq,
2025-09-16T23:46:04.91524Z	      leadTime,
2025-09-16T23:46:04.915351Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.915442Z	      "price": tiers[0].price,
2025-09-16T23:46:04.915541Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.915636Z	    },
2025-09-16T23:46:04.915752Z	    inventory{
2025-09-16T23:46:04.91585Z	      quantity,
2025-09-16T23:46:04.91596Z	      status,
2025-09-16T23:46:04.916054Z	      warehouse,
2025-09-16T23:46:04.916118Z	      lastUpdated,
2025-09-16T23:46:04.916239Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.916311Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.91643Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.916534Z	    },
2025-09-16T23:46:04.916619Z	    isActive,
2025-09-16T23:46:04.916725Z	    isFeatured,
2025-09-16T23:46:04.916803Z	    isNew,
2025-09-16T23:46:04.91689Z	    _createdAt,
2025-09-16T23:46:04.917019Z	    _updatedAt
2025-09-16T23:46:04.917241Z	  
2025-09-16T23:46:04.917329Z	      },
2025-09-16T23:46:04.917387Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:46:04.917521Z	    }
2025-09-16T23:46:04.917691Z	  
2025-09-16T23:46:04.917797Z	Query parameters: {
2025-09-16T23:46:04.917925Z	  limit: 8,
2025-09-16T23:46:04.91803Z	  offset: 0,
2025-09-16T23:46:04.918127Z	  category: undefined,
2025-09-16T23:46:04.91822Z	  brand: 'Electronicon',
2025-09-16T23:46:04.918322Z	  featured: undefined
2025-09-16T23:46:04.918509Z	}
2025-09-16T23:46:04.918591Z	Fetching solutions with query: 
2025-09-16T23:46:04.918698Z	    {
2025-09-16T23:46:04.918831Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.918959Z	        
2025-09-16T23:46:04.919079Z	    _id,
2025-09-16T23:46:04.919177Z	    title,
2025-09-16T23:46:04.919297Z	    "slug": slug.current,
2025-09-16T23:46:04.91942Z	    summary,
2025-09-16T23:46:04.919544Z	    description,
2025-09-16T23:46:04.919653Z	    coverImage,
2025-09-16T23:46:04.919775Z	    primaryBrand->{
2025-09-16T23:46:04.919881Z	      _id,
2025-09-16T23:46:04.919985Z	      name,
2025-09-16T23:46:04.920101Z	      "slug": slug.current,
2025-09-16T23:46:04.920206Z	      logo
2025-09-16T23:46:04.920301Z	    },
2025-09-16T23:46:04.920391Z	    relatedBrands[]->{
2025-09-16T23:46:04.92052Z	      _id,
2025-09-16T23:46:04.920705Z	      name,
2025-09-16T23:46:04.92083Z	      "slug": slug.current,
2025-09-16T23:46:04.920909Z	      logo
2025-09-16T23:46:04.920971Z	    },
2025-09-16T23:46:04.921029Z	    targetMarket,
2025-09-16T23:46:04.921086Z	    complexity,
2025-09-16T23:46:04.921143Z	    publishedAt,
2025-09-16T23:46:04.921202Z	    isPublished,
2025-09-16T23:46:04.921257Z	    isFeatured,
2025-09-16T23:46:04.921312Z	    viewCount,
2025-09-16T23:46:04.921366Z	    _createdAt,
2025-09-16T23:46:04.92142Z	    _updatedAt
2025-09-16T23:46:04.921485Z	  
2025-09-16T23:46:04.921542Z	      },
2025-09-16T23:46:04.921601Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:46:04.921667Z	    }
2025-09-16T23:46:04.921745Z	  
2025-09-16T23:46:04.921802Z	Query parameters: {
2025-09-16T23:46:04.921858Z	  limit: 4,
2025-09-16T23:46:04.921939Z	  offset: 0,
2025-09-16T23:46:04.921999Z	  targetMarket: undefined,
2025-09-16T23:46:04.922055Z	  brand: 'Electronicon',
2025-09-16T23:46:04.922111Z	  featured: undefined
2025-09-16T23:46:04.922166Z	}
2025-09-16T23:46:04.922227Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:46:04.922286Z	Products fetch result: {
2025-09-16T23:46:04.922341Z	  totalProducts: 2,
2025-09-16T23:46:04.922396Z	  fetchedProducts: 2,
2025-09-16T23:46:04.922458Z	  firstProduct: {
2025-09-16T23:46:04.922515Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:46:04.92258Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:46:04.922638Z	    _type: 'product',
2025-09-16T23:46:04.922713Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:46:04.922772Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:46:04.922837Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:46:04.922906Z	    image: null,
2025-09-16T23:46:04.922962Z	    inventory: {
2025-09-16T23:46:04.923019Z	      inStock: true,
2025-09-16T23:46:04.923075Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:46:04.923132Z	      quantity: 0,
2025-09-16T23:46:04.923191Z	      status: 'in_stock',
2025-09-16T23:46:04.923253Z	      warehouse: null
2025-09-16T23:46:04.923308Z	    },
2025-09-16T23:46:04.923364Z	    isActive: true,
2025-09-16T23:46:04.923426Z	    isFeatured: false,
2025-09-16T23:46:04.923493Z	    isNew: false,
2025-09-16T23:46:04.923552Z	    partNumber: '99999',
2025-09-16T23:46:04.923606Z	    pricing: {
2025-09-16T23:46:04.923659Z	      currency: 'CNY',
2025-09-16T23:46:04.923726Z	      leadTime: null,
2025-09-16T23:46:04.92379Z	      moq: null,
2025-09-16T23:46:04.923898Z	      price: null,
2025-09-16T23:46:04.924076Z	      tiers: null
2025-09-16T23:46:04.924199Z	    },
2025-09-16T23:46:04.924322Z	    shortDescription: null,
2025-09-16T23:46:04.92443Z	    slug: '99999',
2025-09-16T23:46:04.924545Z	    title: '99999'
2025-09-16T23:46:04.924648Z	  }
2025-09-16T23:46:04.924769Z	}
2025-09-16T23:46:04.92487Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.924989Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-16T23:46:04.925097Z	Fetching products with query: 
2025-09-16T23:46:04.925197Z	    {
2025-09-16T23:46:04.925288Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.925381Z	        
2025-09-16T23:46:04.925487Z	    _id,
2025-09-16T23:46:04.925594Z	    _type,
2025-09-16T23:46:04.925713Z	    partNumber,
2025-09-16T23:46:04.925831Z	    "slug": slug.current,
2025-09-16T23:46:04.925939Z	    title,
2025-09-16T23:46:04.92605Z	    shortDescription,
2025-09-16T23:46:04.92616Z	    image,
2025-09-16T23:46:04.926245Z	    brand->{
2025-09-16T23:46:04.926321Z	      name,
2025-09-16T23:46:04.926413Z	      "slug": slug.current,
2025-09-16T23:46:04.926488Z	      logo
2025-09-16T23:46:04.926545Z	    },
2025-09-16T23:46:04.9266Z	    category->{
2025-09-16T23:46:04.926653Z	      name,
2025-09-16T23:46:04.926739Z	      "slug": slug.current
2025-09-16T23:46:04.926801Z	    },
2025-09-16T23:46:04.926855Z	    pricing{
2025-09-16T23:46:04.926932Z	      currency,
2025-09-16T23:46:04.92699Z	      tiers[]{
2025-09-16T23:46:04.927045Z	        quantity,
2025-09-16T23:46:04.927105Z	        price,
2025-09-16T23:46:04.927169Z	        unit
2025-09-16T23:46:04.92725Z	      },
2025-09-16T23:46:04.927308Z	      moq,
2025-09-16T23:46:04.927361Z	      leadTime,
2025-09-16T23:46:04.927417Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.927484Z	      "price": tiers[0].price,
2025-09-16T23:46:04.927542Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.927597Z	    },
2025-09-16T23:46:04.92765Z	    inventory{
2025-09-16T23:46:04.927735Z	      quantity,
2025-09-16T23:46:04.927794Z	      status,
2025-09-16T23:46:04.927849Z	      warehouse,
2025-09-16T23:46:04.927911Z	      lastUpdated,
2025-09-16T23:46:04.927966Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.928021Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.928076Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.92813Z	    },
2025-09-16T23:46:04.928183Z	    isActive,
2025-09-16T23:46:04.928239Z	    isFeatured,
2025-09-16T23:46:04.928292Z	    isNew,
2025-09-16T23:46:04.928345Z	    _createdAt,
2025-09-16T23:46:04.928398Z	    _updatedAt
2025-09-16T23:46:04.928456Z	  
2025-09-16T23:46:04.928528Z	      },
2025-09-16T23:46:04.928588Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-16T23:46:04.928648Z	    }
2025-09-16T23:46:04.928734Z	  
2025-09-16T23:46:04.928793Z	Query parameters: {
2025-09-16T23:46:04.928848Z	  limit: 8,
2025-09-16T23:46:04.928902Z	  offset: 0,
2025-09-16T23:46:04.928958Z	  category: undefined,
2025-09-16T23:46:04.929011Z	  brand: 'semikron',
2025-09-16T23:46:04.929066Z	  featured: undefined
2025-09-16T23:46:04.92912Z	}
2025-09-16T23:46:04.929176Z	Fetching solutions with query: 
2025-09-16T23:46:04.92924Z	    {
2025-09-16T23:46:04.929297Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.929355Z	        
2025-09-16T23:46:04.929409Z	    _id,
2025-09-16T23:46:04.929468Z	    title,
2025-09-16T23:46:04.929523Z	    "slug": slug.current,
2025-09-16T23:46:04.929578Z	    summary,
2025-09-16T23:46:04.929643Z	    description,
2025-09-16T23:46:04.929734Z	    coverImage,
2025-09-16T23:46:04.929796Z	    primaryBrand->{
2025-09-16T23:46:04.92985Z	      _id,
2025-09-16T23:46:04.929912Z	      name,
2025-09-16T23:46:04.929967Z	      "slug": slug.current,
2025-09-16T23:46:04.930062Z	      logo
2025-09-16T23:46:04.930134Z	    },
2025-09-16T23:46:04.93019Z	    relatedBrands[]->{
2025-09-16T23:46:04.930291Z	      _id,
2025-09-16T23:46:04.930376Z	      name,
2025-09-16T23:46:04.930436Z	      "slug": slug.current,
2025-09-16T23:46:04.930501Z	      logo
2025-09-16T23:46:04.930557Z	    },
2025-09-16T23:46:04.930612Z	    targetMarket,
2025-09-16T23:46:04.930666Z	    complexity,
2025-09-16T23:46:04.930758Z	    publishedAt,
2025-09-16T23:46:04.930817Z	    isPublished,
2025-09-16T23:46:04.930875Z	    isFeatured,
2025-09-16T23:46:04.93093Z	    viewCount,
2025-09-16T23:46:04.930984Z	    _createdAt,
2025-09-16T23:46:04.931039Z	    _updatedAt
2025-09-16T23:46:04.931096Z	  
2025-09-16T23:46:04.931156Z	      },
2025-09-16T23:46:04.931233Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && (    at l (/opt/buildhome/repo/.next/server/chunks/439.js:210:70)
2025-09-16T23:46:04.931328Z	    at runNextTicks (node:internal/process/task_queues:60:5)
2025-09-16T23:46:04.931401Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:46:04.931464Z	    at process.processTimers (node:internal/timers:512:7)
2025-09-16T23:46:04.93152Z	    at async v (/opt/buildhome/repo/.next/server/app/[locale]/articles/[slug]/page.js:1:4853) {
2025-09-16T23:46:04.931574Z	  code: 'ARTICLE_NOT_FOUND'
2025-09-16T23:46:04.931642Z	}
2025-09-16T23:46:04.931713Z	Error fetching article data: l [SanityError]: Article not found
2025-09-16T23:46:04.931769Z	    at l (/opt/buildhome/repo/.next/server/chunks/439.js:210:70)
2025-09-16T23:46:04.931824Z	    at async v (/opt/buildhome/repo/.next/server/app/[locale]/articles/[slug]/page.js:1:4853) {
2025-09-16T23:46:04.931878Z	  code: 'ARTICLE_NOT_FOUND'
2025-09-16T23:46:04.931931Z	}
2025-09-16T23:46:04.931987Z	Error fetching article data: l [SanityError]: Article not found
2025-09-16T23:46:04.932042Z	    at l (/opt/buildhome/repo/.next/server/chunks/439.js:210:70)
2025-09-16T23:46:04.932104Z	    at async v (/opt/buildhome/repo/.next/server/app/[locale]/articles/[slug]/page.js:1:4853) {
2025-09-16T23:46:04.93216Z	  code: 'ARTICLE_NOT_FOUND'
2025-09-16T23:46:04.932214Z	}
2025-09-16T23:46:04.932267Z	Error fetching article data: l [SanityError]: Article not found
2025-09-16T23:46:04.932324Z	    at l (/opt/buildhome/repo/.next/server/chunks/439.js:210:70)
2025-09-16T23:46:04.932379Z	    at async v (/opt/buildhome/repo/.next/server/app/[locale]/articles/[slug]/page.js:1:4853) {
2025-09-16T23:46:04.932437Z	  code: 'ARTICLE_NOT_FOUND'
2025-09-16T23:46:04.932497Z	}
2025-09-16T23:46:04.932553Z	Error fetching article data: l [SanityError]: Article not found
2025-09-16T23:46:04.932613Z	    at l (/opt/buildhome/repo/.next/server/chunks/439.js:210:70)
2025-09-16T23:46:04.932669Z	    at async v (/opt/buildhome/repo/.next/server/app/[locale]/articles/[slug]/page.js:1:4853) {
2025-09-16T23:46:04.932747Z	  code: 'ARTICLE_NOT_FOUND'
2025-09-16T23:46:04.932805Z	}
2025-09-16T23:46:04.932861Z	Error fetching article data: l [SanityError]: Article not found
2025-09-16T23:46:04.932916Z	    at l (/opt/buildhome/repo/.next/server/chunks/439.js:210:70)
2025-09-16T23:46:04.932972Z	    at runNextTicks (node:internal/process/task_queues:60:5)
2025-09-16T23:46:04.933029Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:46:04.933083Z	    at process.processTimers (node:internal/timers:512:7)
2025-09-16T23:46:04.933141Z	    at async v (/opt/buildhome/repo/.next/server/app/[locale]/articles/[slug]/page.js:1:4853) {
2025-09-16T23:46:04.933196Z	  code: 'ARTICLE_NOT_FOUND'
2025-09-16T23:46:04.933249Z	}
2025-09-16T23:46:04.933304Z	Error fetching article data: l [SanityError]: Article not found
2025-09-16T23:46:04.933359Z	    at l (/opt/buildhome/repo/.next/server/chunks/439.js:210:70)
2025-09-16T23:46:04.933417Z	    at async v (/opt/buildhome/repo/.next/server/app/[locale]/articles/[slug]/page.js:1:4853) {
2025-09-16T23:46:04.933479Z	  code: 'ARTICLE_NOT_FOUND'
2025-09-16T23:46:04.933534Z	}
2025-09-16T23:46:04.933589Z	Error fetching article data: l [SanityError]: Article not found
2025-09-16T23:46:04.933642Z	    at l (/opt/buildhome/repo/.next/server/chunks/439.js:210:70)
2025-09-16T23:46:04.933723Z	    at async v (/opt/buildhome/repo/.next/server/app/[locale]/articles/[slug]/page.js:1:4853) {
2025-09-16T23:46:04.933785Z	  code: 'ARTICLE_NOT_FOUND'
2025-09-16T23:46:04.933839Z	}
2025-09-16T23:46:04.9339Z	"semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-16T23:46:04.933959Z	    }
2025-09-16T23:46:04.934013Z	  
2025-09-16T23:46:04.934068Z	Query parameters: {
2025-09-16T23:46:04.934123Z	  limit: 4,
2025-09-16T23:46:04.934177Z	  offset: 0,
2025-09-16T23:46:04.934236Z	  targetMarket: undefined,
2025-09-16T23:46:04.934304Z	  brand: 'semikron',
2025-09-16T23:46:04.934379Z	  featured: undefined
2025-09-16T23:46:04.934447Z	}
2025-09-16T23:46:04.934555Z	✅ [getBrandData] Found brand: Semikron
2025-09-16T23:46:04.934654Z	Products fetch result: {
2025-09-16T23:46:04.934766Z	  totalProducts: 1,
2025-09-16T23:46:04.934861Z	  fetchedProducts: 1,
2025-09-16T23:46:04.934949Z	  firstProduct: {
2025-09-16T23:46:04.935074Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-16T23:46:04.935205Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-16T23:46:04.935317Z	    _type: 'product',
2025-09-16T23:46:04.935451Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-16T23:46:04.935586Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-16T23:46:04.935785Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:04.935927Z	    image: null,
2025-09-16T23:46:04.936227Z	    inventory: {
2025-09-16T23:46:04.93641Z	      inStock: true,
2025-09-16T23:46:04.936523Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-16T23:46:04.936583Z	      quantity: 0,
2025-09-16T23:46:04.936765Z	      status: 'in_stock',
2025-09-16T23:46:04.936874Z	      warehouse: null
2025-09-16T23:46:04.936989Z	    },
2025-09-16T23:46:04.937152Z	    isActive: true,
2025-09-16T23:46:04.937234Z	    isFeatured: false,
2025-09-16T23:46:04.937518Z	    isNew: false,
2025-09-16T23:46:04.93762Z	    partNumber: 'SKKT106/16E',
2025-09-16T23:46:04.937816Z	    pricing: {
2025-09-16T23:46:04.937976Z	      currency: 'CNY',
2025-09-16T23:46:04.938077Z	      leadTime: null,
2025-09-16T23:46:04.938189Z	      moq: null,
2025-09-16T23:46:04.938331Z	      price: null,
2025-09-16T23:46:04.938464Z	      tiers: null
2025-09-16T23:46:04.938591Z	    },
2025-09-16T23:46:04.938751Z	    shortDescription: 'SKKT106/16E',
2025-09-16T23:46:04.938856Z	    slug: 'SKKT106/16E',
2025-09-16T23:46:04.939014Z	    title: 'SKKT106/16E'
2025-09-16T23:46:04.939111Z	  }
2025-09-16T23:46:04.939274Z	}
2025-09-16T23:46:04.93941Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.939564Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-16T23:46:04.939738Z	Fetching products with query: 
2025-09-16T23:46:04.939822Z	    {
2025-09-16T23:46:04.939954Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.94009Z	        
2025-09-16T23:46:04.940243Z	    _id,
2025-09-16T23:46:04.940364Z	    _type,
2025-09-16T23:46:04.940524Z	    partNumber,
2025-09-16T23:46:04.940713Z	    "slug": slug.current,
2025-09-16T23:46:04.940856Z	    title,
2025-09-16T23:46:04.940993Z	    shortDescription,
2025-09-16T23:46:04.941105Z	    image,
2025-09-16T23:46:04.941398Z	    brand->{
2025-09-16T23:46:04.941746Z	      name,
2025-09-16T23:46:04.941995Z	      "slug": slug.current,
2025-09-16T23:46:04.942293Z	      logo
2025-09-16T23:46:04.942592Z	    },
2025-09-16T23:46:04.942689Z	    category->{
2025-09-16T23:46:04.943002Z	      name,
2025-09-16T23:46:04.943118Z	      "slug": slug.current
2025-09-16T23:46:04.94335Z	    },
2025-09-16T23:46:04.943463Z	    pricing{
2025-09-16T23:46:04.943589Z	      currency,
2025-09-16T23:46:04.943705Z	      tiers[]{
2025-09-16T23:46:04.943824Z	        quantity,
2025-09-16T23:46:04.944066Z	        price,
2025-09-16T23:46:04.944291Z	        unit
2025-09-16T23:46:04.944388Z	      },
2025-09-16T23:46:04.944454Z	      moq,
2025-09-16T23:46:04.944588Z	      leadTime,
2025-09-16T23:46:04.944701Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.944812Z	      "price": tiers[0].price,
2025-09-16T23:46:04.944878Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.945019Z	    },
2025-09-16T23:46:04.945151Z	    inventory{
2025-09-16T23:46:04.945245Z	      quantity,
2025-09-16T23:46:04.94536Z	      status,
2025-09-16T23:46:04.94545Z	      warehouse,
2025-09-16T23:46:04.945536Z	      lastUpdated,
2025-09-16T23:46:04.945683Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.945832Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.94596Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.946048Z	    },
2025-09-16T23:46:04.946129Z	    isActive,
2025-09-16T23:46:04.946211Z	    isFeatured,
2025-09-16T23:46:04.94631Z	    isNew,
2025-09-16T23:46:04.94641Z	    _createdAt,
2025-09-16T23:46:04.946557Z	    _updatedAt
2025-09-16T23:46:04.946708Z	  
2025-09-16T23:46:04.94691Z	      },
2025-09-16T23:46:04.947069Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-16T23:46:04.947168Z	    }
2025-09-16T23:46:04.947255Z	  
2025-09-16T23:46:04.947356Z	Query parameters: {
2025-09-16T23:46:04.947473Z	  limit: 8,
2025-09-16T23:46:04.947558Z	  offset: 0,
2025-09-16T23:46:04.947648Z	  category: undefined,
2025-09-16T23:46:04.947756Z	  brand: 'semikron',
2025-09-16T23:46:04.947903Z	  featured: undefined
2025-09-16T23:46:04.948013Z	}
2025-09-16T23:46:04.948143Z	Fetching solutions with query: 
2025-09-16T23:46:04.948242Z	    {
2025-09-16T23:46:04.948381Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.9485Z	        
2025-09-16T23:46:04.94861Z	    _id,
2025-09-16T23:46:04.948737Z	    title,
2025-09-16T23:46:04.948846Z	    "slug": slug.current,
2025-09-16T23:46:04.948966Z	    summary,
2025-09-16T23:46:04.949096Z	    description,
2025-09-16T23:46:04.949206Z	    coverImage,
2025-09-16T23:46:04.949327Z	    primaryBrand->{
2025-09-16T23:46:04.949477Z	      _id,
2025-09-16T23:46:04.949587Z	      name,
2025-09-16T23:46:04.949725Z	      "slug": slug.current,
2025-09-16T23:46:04.94984Z	      logo
2025-09-16T23:46:04.949949Z	    },
2025-09-16T23:46:04.950057Z	    relatedBrands[]->{
2025-09-16T23:46:04.950155Z	      _id,
2025-09-16T23:46:04.950255Z	      name,
2025-09-16T23:46:04.950353Z	      "slug": slug.current,
2025-09-16T23:46:04.95045Z	      logo
2025-09-16T23:46:04.950568Z	    },
2025-09-16T23:46:04.950704Z	    targetMarket,
2025-09-16T23:46:04.950809Z	    complexity,
2025-09-16T23:46:04.950922Z	    publishedAt,
2025-09-16T23:46:04.951038Z	    isPublished,
2025-09-16T23:46:04.951147Z	    isFeatured,
2025-09-16T23:46:04.951244Z	    viewCount,
2025-09-16T23:46:04.951341Z	    _createdAt,
2025-09-16T23:46:04.951434Z	    _updatedAt
2025-09-16T23:46:04.951541Z	  
2025-09-16T23:46:04.95164Z	      },
2025-09-16T23:46:04.951773Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-16T23:46:04.951908Z	    }
2025-09-16T23:46:04.952007Z	  
2025-09-16T23:46:04.952101Z	Query parameters: {
2025-09-16T23:46:04.952217Z	  limit: 4,
2025-09-16T23:46:04.952324Z	  offset: 0,
2025-09-16T23:46:04.95243Z	  targetMarket: undefined,
2025-09-16T23:46:04.952546Z	  brand: 'semikron',
2025-09-16T23:46:04.952655Z	  featured: undefined
2025-09-16T23:46:04.95277Z	}
2025-09-16T23:46:04.952868Z	✅ [getBrandData] Found brand: Semikron
2025-09-16T23:46:04.952975Z	Products fetch result: {
2025-09-16T23:46:04.953072Z	  totalProducts: 1,
2025-09-16T23:46:04.953175Z	  fetchedProducts: 1,
2025-09-16T23:46:04.95329Z	  firstProduct: {
2025-09-16T23:46:04.953394Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-16T23:46:04.953513Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-16T23:46:04.953615Z	    _type: 'product',
2025-09-16T23:46:04.953731Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-16T23:46:04.953832Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-16T23:46:04.953939Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:04.954035Z	    image: null,
2025-09-16T23:46:04.954141Z	    inventory: {
2025-09-16T23:46:04.954242Z	      inStock: true,
2025-09-16T23:46:04.95434Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-16T23:46:04.954433Z	      quantity: 0,
2025-09-16T23:46:04.954531Z	      status: 'in_stock',
2025-09-16T23:46:04.954619Z	      warehouse: null
2025-09-16T23:46:04.954725Z	    },
2025-09-16T23:46:04.954875Z	    isActive: true,
2025-09-16T23:46:04.954998Z	    isFeatured: false,
2025-09-16T23:46:04.95511Z	    isNew: false,
2025-09-16T23:46:04.955208Z	    partNumber: 'SKKT106/16E',
2025-09-16T23:46:04.955308Z	    pricing: {
2025-09-16T23:46:04.955394Z	      currency: 'CNY',
2025-09-16T23:46:04.955502Z	      leadTime: null,
2025-09-16T23:46:04.955656Z	      moq: null,
2025-09-16T23:46:04.955809Z	      price: null,
2025-09-16T23:46:04.955913Z	      tiers: null
2025-09-16T23:46:04.956053Z	    },
2025-09-16T23:46:04.956203Z	    shortDescription: 'SKKT106/16E',
2025-09-16T23:46:04.956307Z	    slug: 'SKKT106/16E',
2025-09-16T23:46:04.95654Z	    title: 'SKKT106/16E'
2025-09-16T23:46:04.956895Z	  }
2025-09-16T23:46:04.957099Z	}
2025-09-16T23:46:04.95722Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:04.957383Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-16T23:46:04.957614Z	Fetching products with query: 
2025-09-16T23:46:04.957753Z	    {
2025-09-16T23:46:04.957837Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.957925Z	        
2025-09-16T23:46:04.958035Z	    _id,
2025-09-16T23:46:04.958149Z	    _type,
2025-09-16T23:46:04.958345Z	    partNumber,
2025-09-16T23:46:04.958451Z	    "slug": slug.current,
2025-09-16T23:46:04.958561Z	    title,
2025-09-16T23:46:04.958648Z	    shortDescription,
2025-09-16T23:46:04.958813Z	    image,
2025-09-16T23:46:04.95896Z	    brand->{
2025-09-16T23:46:04.95905Z	      name,
2025-09-16T23:46:04.959137Z	      "slug": slug.current,
2025-09-16T23:46:04.959259Z	      logo
2025-09-16T23:46:04.959393Z	    },
2025-09-16T23:46:04.95951Z	    category->{
2025-09-16T23:46:04.959637Z	      name,
2025-09-16T23:46:04.959764Z	      "slug": slug.current
2025-09-16T23:46:04.959874Z	    },
2025-09-16T23:46:04.959974Z	    pricing{
2025-09-16T23:46:04.960063Z	      currency,
2025-09-16T23:46:04.960141Z	      tiers[]{
2025-09-16T23:46:04.96028Z	        quantity,
2025-09-16T23:46:04.960368Z	        price,
2025-09-16T23:46:04.960464Z	        unit
2025-09-16T23:46:04.960566Z	      },
2025-09-16T23:46:04.960684Z	      moq,
2025-09-16T23:46:04.960789Z	      leadTime,
2025-09-16T23:46:04.960876Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.96094Z	      "price": tiers[0].price,
2025-09-16T23:46:04.961154Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.961224Z	    },
2025-09-16T23:46:04.961291Z	    inventory{
2025-09-16T23:46:04.961383Z	      quantity,
2025-09-16T23:46:04.961556Z	      status,
2025-09-16T23:46:04.961759Z	      warehouse,
2025-09-16T23:46:04.961835Z	      lastUpdated,
2025-09-16T23:46:04.961933Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.962041Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.96216Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.962244Z	    },
2025-09-16T23:46:04.962336Z	    isActive,
2025-09-16T23:46:04.962468Z	    isFeatured,
2025-09-16T23:46:04.962607Z	    isNew,
2025-09-16T23:46:04.962784Z	    _createdAt,
2025-09-16T23:46:04.962949Z	    _updatedAt
2025-09-16T23:46:04.963113Z	  
2025-09-16T23:46:04.963218Z	      },
2025-09-16T23:46:04.963342Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-16T23:46:04.963463Z	    }
2025-09-16T23:46:04.963564Z	  
2025-09-16T23:46:04.963735Z	Query parameters: {
2025-09-16T23:46:04.963816Z	  limit: 8,
2025-09-16T23:46:04.964019Z	  offset: 0,
2025-09-16T23:46:04.964099Z	  category: undefined,
2025-09-16T23:46:04.964218Z	  brand: 'ixys',
2025-09-16T23:46:04.964366Z	  featured: undefined
2025-09-16T23:46:04.964482Z	}
2025-09-16T23:46:04.964632Z	Fetching solutions with query: 
2025-09-16T23:46:04.964806Z	    {
2025-09-16T23:46:04.964907Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.965045Z	        
2025-09-16T23:46:04.9652Z	    _id,
2025-09-16T23:46:04.965354Z	    title,
2025-09-16T23:46:04.965429Z	    "slug": slug.current,
2025-09-16T23:46:04.965531Z	    summary,
2025-09-16T23:46:04.965713Z	    description,
2025-09-16T23:46:04.9658Z	    coverImage,
2025-09-16T23:46:04.966097Z	    primaryBrand->{
2025-09-16T23:46:04.966434Z	      _id,
2025-09-16T23:46:04.966548Z	      name,
2025-09-16T23:46:04.966824Z	      "slug": slug.current,
2025-09-16T23:46:04.96697Z	      logo
2025-09-16T23:46:04.967075Z	    },
2025-09-16T23:46:04.967182Z	    relatedBrands[]->{
2025-09-16T23:46:04.967315Z	      _id,
2025-09-16T23:46:04.967421Z	      name,
2025-09-16T23:46:04.967655Z	      "slug": slug.current,
2025-09-16T23:46:04.96793Z	      logo
2025-09-16T23:46:04.968061Z	    },
2025-09-16T23:46:04.968213Z	    targetMarket,
2025-09-16T23:46:04.968362Z	    complexity,
2025-09-16T23:46:04.968443Z	    publishedAt,
2025-09-16T23:46:04.96856Z	    isPublished,
2025-09-16T23:46:04.968663Z	    isFeatured,
2025-09-16T23:46:04.968833Z	    viewCount,
2025-09-16T23:46:04.968949Z	    _createdAt,
2025-09-16T23:46:04.969037Z	    _updatedAt
2025-09-16T23:46:04.969118Z	  
2025-09-16T23:46:04.969226Z	      },
2025-09-16T23:46:04.969404Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-16T23:46:04.969518Z	    }
2025-09-16T23:46:04.969617Z	  
2025-09-16T23:46:04.969741Z	Query parameters: {
2025-09-16T23:46:04.969845Z	  limit: 4,
2025-09-16T23:46:04.969952Z	  offset: 0,
2025-09-16T23:46:04.970052Z	  targetMarket: undefined,
2025-09-16T23:46:04.97019Z	  brand: 'ixys',
2025-09-16T23:46:04.970289Z	  featured: undefined
2025-09-16T23:46:04.97038Z	}
2025-09-16T23:46:04.970478Z	✅ [getBrandData] Found brand: IXYS
2025-09-16T23:46:04.970582Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.970696Z	Solutions fetch result: {
2025-09-16T23:46:04.970795Z	  totalSolutions: 1,
2025-09-16T23:46:04.970895Z	  fetchedSolutions: 1,
2025-09-16T23:46:04.970996Z	  firstSolution: {
2025-09-16T23:46:04.971074Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-16T23:46:04.97113Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-16T23:46:04.971184Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-16T23:46:04.971237Z	    complexity: 'medium',
2025-09-16T23:46:04.971297Z	    coverImage: null,
2025-09-16T23:46:04.971352Z	    description: [ [Object] ],
2025-09-16T23:46:04.971405Z	    isFeatured: false,
2025-09-16T23:46:04.971464Z	    isPublished: true,
2025-09-16T23:46:04.971519Z	    primaryBrand: {
2025-09-16T23:46:04.971574Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:46:04.971627Z	      logo: null,
2025-09-16T23:46:04.971738Z	      name: 'IXYS',
2025-09-16T23:46:04.971807Z	      slug: 'ixys'
2025-09-16T23:46:04.971862Z	    },
2025-09-16T23:46:04.971915Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-16T23:46:04.97197Z	    relatedBrands: null,
2025-09-16T23:46:04.972025Z	    slug: '99999',
2025-09-16T23:46:04.97208Z	    summary: '99999',
2025-09-16T23:46:04.972133Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:04.972185Z	    title: '99999',
2025-09-16T23:46:04.972238Z	    viewCount: 0
2025-09-16T23:46:04.972291Z	  }
2025-09-16T23:46:04.972353Z	}
2025-09-16T23:46:04.972414Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-16T23:46:04.972486Z	Fetching products with query: 
2025-09-16T23:46:04.972545Z	    {
2025-09-16T23:46:04.9726Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.97266Z	        
2025-09-16T23:46:04.972745Z	    _id,
2025-09-16T23:46:04.972805Z	    _type,
2025-09-16T23:46:04.972859Z	    partNumber,
2025-09-16T23:46:04.972913Z	    "slug": slug.current,
2025-09-16T23:46:04.972968Z	    title,
2025-09-16T23:46:04.973021Z	    shortDescription,
2025-09-16T23:46:04.973073Z	    image,
2025-09-16T23:46:04.973126Z	    brand->{
2025-09-16T23:46:04.973179Z	      name,
2025-09-16T23:46:04.97323Z	      "slug": slug.current,
2025-09-16T23:46:04.973283Z	      logo
2025-09-16T23:46:04.973335Z	    },
2025-09-16T23:46:04.973388Z	    category->{
2025-09-16T23:46:04.973442Z	      name,
2025-09-16T23:46:04.973501Z	      "slug": slug.current
2025-09-16T23:46:04.973557Z	    },
2025-09-16T23:46:04.973608Z	    pricing{
2025-09-16T23:46:04.973661Z	      currency,
2025-09-16T23:46:04.973748Z	      tiers[]{
2025-09-16T23:46:04.973807Z	        quantity,
2025-09-16T23:46:04.97386Z	        price,
2025-09-16T23:46:04.973912Z	        unit
2025-09-16T23:46:04.973966Z	      },
2025-09-16T23:46:04.974018Z	      moq,
2025-09-16T23:46:04.974071Z	      leadTime,
2025-09-16T23:46:04.974126Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:04.974187Z	      "price": tiers[0].price,
2025-09-16T23:46:04.974241Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:04.974971Z	    },
2025-09-16T23:46:04.975046Z	    inventory{
2025-09-16T23:46:04.975101Z	      quantity,
2025-09-16T23:46:04.975159Z	      status,
2025-09-16T23:46:04.975215Z	      warehouse,
2025-09-16T23:46:04.975267Z	      lastUpdated,
2025-09-16T23:46:04.975321Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:04.975381Z	      "inStock": status == "in_stock",
2025-09-16T23:46:04.975435Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:04.975497Z	    },
2025-09-16T23:46:04.975563Z	    isActive,
2025-09-16T23:46:04.975618Z	    isFeatured,
2025-09-16T23:46:04.975687Z	    isNew,
2025-09-16T23:46:04.97578Z	    _createdAt,
2025-09-16T23:46:04.975846Z	    _updatedAt
2025-09-16T23:46:04.975945Z	  
2025-09-16T23:46:04.976042Z	      },
2025-09-16T23:46:04.976135Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-16T23:46:04.976242Z	    }
2025-09-16T23:46:04.976338Z	  
2025-09-16T23:46:04.976493Z	Query parameters: {
2025-09-16T23:46:04.976828Z	  limit: 8,
2025-09-16T23:46:04.976905Z	  offset: 0,
2025-09-16T23:46:04.976961Z	  category: undefined,
2025-09-16T23:46:04.977015Z	  brand: 'ixys',
2025-09-16T23:46:04.977067Z	  featured: undefined
2025-09-16T23:46:04.977121Z	}
2025-09-16T23:46:04.977174Z	Fetching solutions with query: 
2025-09-16T23:46:04.977227Z	    {
2025-09-16T23:46:04.97728Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:04.977335Z	        
2025-09-16T23:46:04.977387Z	    _id,
2025-09-16T23:46:04.977442Z	    title,
2025-09-16T23:46:04.977501Z	    "slug": slug.current,
2025-09-16T23:46:04.97756Z	    summary,
2025-09-16T23:46:04.977614Z	    description,
2025-09-16T23:46:04.977666Z	    coverImage,
2025-09-16T23:46:04.977751Z	    primaryBrand->{
2025-09-16T23:46:04.977808Z	      _id,
2025-09-16T23:46:04.97786Z	      name,
2025-09-16T23:46:04.977912Z	      "slug": slug.current,
2025-09-16T23:46:04.977964Z	      logo
2025-09-16T23:46:04.978015Z	    },
2025-09-16T23:46:04.978067Z	    relatedBrands[]->{
2025-09-16T23:46:04.97812Z	      _id,
2025-09-16T23:46:04.978173Z	      name,
2025-09-16T23:46:04.978225Z	      "slug": slug.current,
2025-09-16T23:46:04.978277Z	      logo
2025-09-16T23:46:04.978329Z	    },
2025-09-16T23:46:04.978381Z	    targetMarket,
2025-09-16T23:46:04.978435Z	    complexity,
2025-09-16T23:46:04.978495Z	    publishedAt,
2025-09-16T23:46:04.978547Z	    isPublished,
2025-09-16T23:46:04.978601Z	    isFeatured,
2025-09-16T23:46:04.978653Z	    viewCount,
2025-09-16T23:46:04.978741Z	    _createdAt,
2025-09-16T23:46:04.978804Z	    _updatedAt
2025-09-16T23:46:04.978862Z	  
2025-09-16T23:46:04.978915Z	      },
2025-09-16T23:46:04.978968Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-16T23:46:04.979025Z	    }
2025-09-16T23:46:04.979083Z	  
2025-09-16T23:46:04.979166Z	Query parameters: {
2025-09-16T23:46:04.97926Z	  limit: 4,
2025-09-16T23:46:04.979317Z	  offset: 0,
2025-09-16T23:46:04.97937Z	  targetMarket: undefined,
2025-09-16T23:46:04.979422Z	  brand: 'ixys',
2025-09-16T23:46:04.979494Z	  featured: undefined
2025-09-16T23:46:04.979552Z	}
2025-09-16T23:46:04.979607Z	✅ [getBrandData] Found brand: IXYS
2025-09-16T23:46:04.979684Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:04.979782Z	Solutions fetch result: {
2025-09-16T23:46:04.97984Z	  totalSolutions: 1,
2025-09-16T23:46:04.979894Z	  fetchedSolutions: 1,
2025-09-16T23:46:04.979948Z	  firstSolution: {
2025-09-16T23:46:04.980002Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-16T23:46:04.980055Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-16T23:46:04.980108Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-16T23:46:04.980195Z	    complexity: 'medium',
2025-09-16T23:46:04.980267Z	    coverImage: null,
2025-09-16T23:46:04.980971Z	    description: [ [Object] ],
2025-09-16T23:46:04.981074Z	    isFeatured: false,
2025-09-16T23:46:04.981161Z	    isPublished: true,
2025-09-16T23:46:04.981247Z	    primaryBrand: {
2025-09-16T23:46:04.981331Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:46:04.981419Z	      logo: null,
2025-09-16T23:46:04.981517Z	      name: 'IXYS',
2025-09-16T23:46:04.981604Z	      slug: 'ixys'
2025-09-16T23:46:04.981714Z	    },
2025-09-16T23:46:04.981812Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-16T23:46:04.981904Z	    relatedBrands: null,
2025-09-16T23:46:04.981987Z	    slug: '99999',
2025-09-16T23:46:04.98217Z	    summary: '99999',
2025-09-16T23:46:04.982478Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:04.982871Z	    title: '99999',
2025-09-16T23:46:04.983054Z	    viewCount: 0
2025-09-16T23:46:04.983198Z	  }
2025-09-16T23:46:04.996094Z	}
2025-09-16T23:46:04.996338Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-16T23:46:04.996516Z	Fetching products with query: 
2025-09-16T23:46:04.996667Z	    {
2025-09-16T23:46:04.996817Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:04.996986Z	        
2025-09-16T23:46:04.997111Z	    _id,
2025-09-16T23:46:04.997217Z	    _type,
2025-09-16T23:46:04.997317Z	    partNumber,
2025-09-16T23:46:04.99742Z	    "slug": slug.current,
2025-09-16T23:46:04.997537Z	    title,
2025-09-16T23:46:04.997607Z	    shortDescription,
2025-09-16T23:46:04.997907Z	    image,
2025-09-16T23:46:04.998004Z	    brand->{
2025-09-16T23:46:04.99815Z	      name,
2025-09-16T23:46:04.998255Z	      "slug": slug.current,
2025-09-16T23:46:04.99837Z	      logo
2025-09-16T23:46:04.998448Z	    },
2025-09-16T23:46:04.998584Z	    category->{
2025-09-16T23:46:04.998671Z	      name,
2025-09-16T23:46:04.998814Z	      "slug": slug.current
2025-09-16T23:46:04.998932Z	    },
2025-09-16T23:46:04.999058Z	    pricing{
2025-09-16T23:46:04.999166Z	      currency,
2025-09-16T23:46:04.999273Z	      tiers[]{
2025-09-16T23:46:04.999522Z	        quantity,
2025-09-16T23:46:04.999657Z	        price,
2025-09-16T23:46:04.999836Z	        unit
2025-09-16T23:46:04.99999Z	      },
2025-09-16T23:46:05.000098Z	      moq,
2025-09-16T23:46:05.000256Z	      leadTime,
2025-09-16T23:46:05.000333Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:05.000422Z	      "price": tiers[0].price,
2025-09-16T23:46:05.000736Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:05.000814Z	    },
2025-09-16T23:46:05.000872Z	    inventory{
2025-09-16T23:46:05.001019Z	      quantity,
2025-09-16T23:46:05.00109Z	      status,
2025-09-16T23:46:05.00123Z	      warehouse,
2025-09-16T23:46:05.001301Z	      lastUpdated,
2025-09-16T23:46:05.001363Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:05.001468Z	      "inStock": status == "in_stock",
2025-09-16T23:46:05.00164Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:05.001801Z	    },
2025-09-16T23:46:05.0019Z	    isActive,
2025-09-16T23:46:05.002121Z	    isFeatured,
2025-09-16T23:46:05.002346Z	    isNew,
2025-09-16T23:46:05.002459Z	    _createdAt,
2025-09-16T23:46:05.002534Z	    _updatedAt
2025-09-16T23:46:05.002735Z	  
2025-09-16T23:46:05.002831Z	      },
2025-09-16T23:46:05.002906Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-16T23:46:05.002978Z	    }
2025-09-16T23:46:05.003035Z	  
2025-09-16T23:46:05.003089Z	Query parameters: {
2025-09-16T23:46:05.003144Z	  limit: 8,
2025-09-16T23:46:05.003209Z	  offset: 0,
2025-09-16T23:46:05.003331Z	  category: undefined,
2025-09-16T23:46:05.003411Z	  brand: 'ncc',
2025-09-16T23:46:05.003481Z	  featured: undefined
2025-09-16T23:46:05.003541Z	}
2025-09-16T23:46:05.003595Z	Fetching solutions with query: 
2025-09-16T23:46:05.003648Z	    {
2025-09-16T23:46:05.003721Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:05.003779Z	        
2025-09-16T23:46:05.003834Z	    _id,
2025-09-16T23:46:05.003894Z	    title,
2025-09-16T23:46:05.003958Z	    "slug": slug.current,
2025-09-16T23:46:05.004016Z	    summary,
2025-09-16T23:46:05.004082Z	    description,
2025-09-16T23:46:05.004137Z	    coverImage,
2025-09-16T23:46:05.004193Z	    primaryBrand->{
2025-09-16T23:46:05.004248Z	      _id,
2025-09-16T23:46:05.004303Z	      name,
2025-09-16T23:46:05.004364Z	      "slug": slug.current,
2025-09-16T23:46:05.004428Z	      logo
2025-09-16T23:46:05.0045Z	    },
2025-09-16T23:46:05.004562Z	    relatedBrands[]->{
2025-09-16T23:46:05.004617Z	      _id,
2025-09-16T23:46:05.004682Z	      name,
2025-09-16T23:46:05.004746Z	      "slug": slug.current,
2025-09-16T23:46:05.004825Z	      logo
2025-09-16T23:46:05.004888Z	    },
2025-09-16T23:46:05.004946Z	    targetMarket,
2025-09-16T23:46:05.005001Z	    complexity,
2025-09-16T23:46:05.005058Z	    publishedAt,
2025-09-16T23:46:05.005119Z	    isPublished,
2025-09-16T23:46:05.00518Z	    isFeatured,
2025-09-16T23:46:05.005237Z	    viewCount,
2025-09-16T23:46:05.005292Z	    _createdAt,
2025-09-16T23:46:05.005347Z	    _updatedAt
2025-09-16T23:46:05.005405Z	  
2025-09-16T23:46:05.005472Z	      },
2025-09-16T23:46:05.005542Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-16T23:46:05.005608Z	    }
2025-09-16T23:46:05.005663Z	  
2025-09-16T23:46:05.005753Z	Query parameters: {
2025-09-16T23:46:05.006482Z	  limit: 4,
2025-09-16T23:46:05.006571Z	  offset: 0,
2025-09-16T23:46:05.006633Z	  targetMarket: undefined,
2025-09-16T23:46:05.00671Z	  brand: 'ncc',
2025-09-16T23:46:05.006785Z	  featured: undefined
2025-09-16T23:46:05.006842Z	}
2025-09-16T23:46:05.006898Z	✅ [getBrandData] Found brand: ncc
2025-09-16T23:46:05.00696Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:05.007024Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:05.007096Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-16T23:46:05.007156Z	Fetching products with query: 
2025-09-16T23:46:05.007219Z	    {
2025-09-16T23:46:05.007276Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:05.007341Z	        
2025-09-16T23:46:05.007404Z	    _id,
2025-09-16T23:46:05.007471Z	    _type,
2025-09-16T23:46:05.007528Z	    partNumber,
2025-09-16T23:46:05.007583Z	    "slug": slug.current,
2025-09-16T23:46:05.007638Z	    title,
2025-09-16T23:46:05.007714Z	    shortDescription,
2025-09-16T23:46:05.007773Z	    image,
2025-09-16T23:46:05.007834Z	    brand->{
2025-09-16T23:46:05.007896Z	      name,
2025-09-16T23:46:05.007963Z	      "slug": slug.current,
2025-09-16T23:46:05.008025Z	      logo
2025-09-16T23:46:05.008084Z	    },
2025-09-16T23:46:05.008147Z	    category->{
2025-09-16T23:46:05.008202Z	      name,
2025-09-16T23:46:05.008257Z	      "slug": slug.current
2025-09-16T23:46:05.008311Z	    },
2025-09-16T23:46:05.008366Z	    pricing{
2025-09-16T23:46:05.00842Z	      currency,
2025-09-16T23:46:05.008483Z	      tiers[]{
2025-09-16T23:46:05.00854Z	        quantity,
2025-09-16T23:46:05.008595Z	        price,
2025-09-16T23:46:05.008659Z	        unit
2025-09-16T23:46:05.008731Z	      },
2025-09-16T23:46:05.008795Z	      moq,
2025-09-16T23:46:05.008852Z	      leadTime,
2025-09-16T23:46:05.008922Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:05.008989Z	      "price": tiers[0].price,
2025-09-16T23:46:05.009052Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:05.009118Z	    },
2025-09-16T23:46:05.009174Z	    inventory{
2025-09-16T23:46:05.009231Z	      quantity,
2025-09-16T23:46:05.009289Z	      status,
2025-09-16T23:46:05.009349Z	      warehouse,
2025-09-16T23:46:05.009408Z	      lastUpdated,
2025-09-16T23:46:05.00949Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:05.009554Z	      "inStock": status == "in_stock",
2025-09-16T23:46:05.009613Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:05.009683Z	    },
2025-09-16T23:46:05.009744Z	    isActive,
2025-09-16T23:46:05.0098Z	    isFeatured,
2025-09-16T23:46:05.009855Z	    isNew,
2025-09-16T23:46:05.00991Z	    _createdAt,
2025-09-16T23:46:05.009967Z	    _updatedAt
2025-09-16T23:46:05.010022Z	  
2025-09-16T23:46:05.010077Z	      },
2025-09-16T23:46:05.010132Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-16T23:46:05.010196Z	    }
2025-09-16T23:46:05.010253Z	  
2025-09-16T23:46:05.010311Z	Query parameters: {
2025-09-16T23:46:05.010368Z	  limit: 8,
2025-09-16T23:46:05.010421Z	  offset: 0,
2025-09-16T23:46:05.010484Z	  category: undefined,
2025-09-16T23:46:05.010566Z	  brand: 'ncc',
2025-09-16T23:46:05.011279Z	  featured: undefined
2025-09-16T23:46:05.01155Z	}
2025-09-16T23:46:05.011631Z	Fetching solutions with query: 
2025-09-16T23:46:05.01179Z	    {
2025-09-16T23:46:05.011927Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:05.012027Z	        
2025-09-16T23:46:05.012113Z	    _id,
2025-09-16T23:46:05.012308Z	    title,
2025-09-16T23:46:05.012473Z	    "slug": slug.current,
2025-09-16T23:46:05.012608Z	    summary,
2025-09-16T23:46:05.012733Z	    description,
2025-09-16T23:46:05.012837Z	    coverImage,
2025-09-16T23:46:05.012933Z	    primaryBrand->{
2025-09-16T23:46:05.013034Z	      _id,
2025-09-16T23:46:05.013131Z	      name,
2025-09-16T23:46:05.013233Z	      "slug": slug.current,
2025-09-16T23:46:05.013336Z	      logo
2025-09-16T23:46:05.013432Z	    },
2025-09-16T23:46:05.013497Z	    relatedBrands[]->{
2025-09-16T23:46:05.013552Z	      _id,
2025-09-16T23:46:05.013606Z	      name,
2025-09-16T23:46:05.013662Z	      "slug": slug.current,
2025-09-16T23:46:05.013751Z	      logo
2025-09-16T23:46:05.01381Z	    },
2025-09-16T23:46:05.013871Z	    targetMarket,
2025-09-16T23:46:05.013927Z	    complexity,
2025-09-16T23:46:05.013981Z	    publishedAt,
2025-09-16T23:46:05.014037Z	    isPublished,
2025-09-16T23:46:05.014109Z	    isFeatured,
2025-09-16T23:46:05.014182Z	    viewCount,
2025-09-16T23:46:05.014237Z	    _createdAt,
2025-09-16T23:46:05.014295Z	    _updatedAt
2025-09-16T23:46:05.014388Z	  
2025-09-16T23:46:05.01451Z	      },
2025-09-16T23:46:05.014611Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-16T23:46:05.01473Z	    }
2025-09-16T23:46:05.014801Z	  
2025-09-16T23:46:05.014859Z	Query parameters: {
2025-09-16T23:46:05.014915Z	  limit: 4,
2025-09-16T23:46:05.014976Z	  offset: 0,
2025-09-16T23:46:05.015038Z	  targetMarket: undefined,
2025-09-16T23:46:05.01511Z	  brand: 'ncc',
2025-09-16T23:46:05.015229Z	  featured: undefined
2025-09-16T23:46:05.015333Z	}
2025-09-16T23:46:05.015443Z	✅ [getBrandData] Found brand: ncc
2025-09-16T23:46:05.015562Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:05.015682Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:05.01592Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:46:05.016057Z	Fetching products with query: 
2025-09-16T23:46:05.016161Z	    {
2025-09-16T23:46:05.016338Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:05.016476Z	        
2025-09-16T23:46:05.016631Z	    _id,
2025-09-16T23:46:05.016838Z	    _type,
2025-09-16T23:46:05.016922Z	    partNumber,
2025-09-16T23:46:05.017014Z	    "slug": slug.current,
2025-09-16T23:46:05.017221Z	    title,
2025-09-16T23:46:05.017302Z	    shortDescription,
2025-09-16T23:46:05.017485Z	    image,
2025-09-16T23:46:05.017593Z	    brand->{
2025-09-16T23:46:05.017714Z	      name,
2025-09-16T23:46:05.017821Z	      "slug": slug.current,
2025-09-16T23:46:05.01791Z	      logo
2025-09-16T23:46:05.018005Z	    },
2025-09-16T23:46:05.018114Z	    category->{
2025-09-16T23:46:05.018194Z	      name,
2025-09-16T23:46:05.018287Z	      "slug": slug.current
2025-09-16T23:46:05.018395Z	    },
2025-09-16T23:46:05.018496Z	    pricing{
2025-09-16T23:46:05.018593Z	      currency,
2025-09-16T23:46:05.018719Z	      tiers[]{
2025-09-16T23:46:05.018826Z	        quantity,
2025-09-16T23:46:05.018891Z	        price,
2025-09-16T23:46:05.018988Z	        unit
2025-09-16T23:46:05.019088Z	      },
2025-09-16T23:46:05.019184Z	      moq,
2025-09-16T23:46:05.019285Z	      leadTime,
2025-09-16T23:46:05.019382Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:05.019495Z	      "price": tiers[0].price,
2025-09-16T23:46:05.019584Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:05.019687Z	    },
2025-09-16T23:46:05.019897Z	    inventory{
2025-09-16T23:46:05.019992Z	      quantity,
2025-09-16T23:46:05.020113Z	      status,
2025-09-16T23:46:05.020267Z	      warehouse,
2025-09-16T23:46:05.02037Z	      lastUpdated,
2025-09-16T23:46:05.020434Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:05.020601Z	      "inStock": status == "in_stock",
2025-09-16T23:46:05.020749Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:05.020852Z	    },
2025-09-16T23:46:05.020958Z	    isActive,
2025-09-16T23:46:05.021089Z	    isFeatured,
2025-09-16T23:46:05.021223Z	    isNew,
2025-09-16T23:46:05.021348Z	    _createdAt,
2025-09-16T23:46:05.02151Z	    _updatedAt
2025-09-16T23:46:05.021622Z	  
2025-09-16T23:46:05.021746Z	      },
2025-09-16T23:46:05.021875Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:46:05.021977Z	    }
2025-09-16T23:46:05.022083Z	  
2025-09-16T23:46:05.022198Z	Query parameters: {
2025-09-16T23:46:05.022315Z	  limit: 8,
2025-09-16T23:46:05.022424Z	  offset: 0,
2025-09-16T23:46:05.022555Z	  category: undefined,
2025-09-16T23:46:05.022713Z	  brand: 'littelfuse',
2025-09-16T23:46:05.022836Z	  featured: undefined
2025-09-16T23:46:05.023031Z	}
2025-09-16T23:46:05.023126Z	Fetching solutions with query: 
2025-09-16T23:46:05.023188Z	    {
2025-09-16T23:46:05.023249Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:05.023309Z	        
2025-09-16T23:46:05.023364Z	    _id,
2025-09-16T23:46:05.023458Z	    title,
2025-09-16T23:46:05.023528Z	    "slug": slug.current,
2025-09-16T23:46:05.023587Z	    summary,
2025-09-16T23:46:05.023645Z	    description,
2025-09-16T23:46:05.023743Z	    coverImage,
2025-09-16T23:46:05.023808Z	    primaryBrand->{
2025-09-16T23:46:05.023864Z	      _id,
2025-09-16T23:46:05.023919Z	      name,
2025-09-16T23:46:05.023976Z	      "slug": slug.current,
2025-09-16T23:46:05.024033Z	      logo
2025-09-16T23:46:05.024088Z	    },
2025-09-16T23:46:05.024152Z	    relatedBrands[]->{
2025-09-16T23:46:05.024219Z	      _id,
2025-09-16T23:46:05.024285Z	      name,
2025-09-16T23:46:05.024347Z	      "slug": slug.current,
2025-09-16T23:46:05.024412Z	      logo
2025-09-16T23:46:05.024476Z	    },
2025-09-16T23:46:05.024534Z	    targetMarket,
2025-09-16T23:46:05.02459Z	    complexity,
2025-09-16T23:46:05.024644Z	    publishedAt,
2025-09-16T23:46:05.02472Z	    isPublished,
2025-09-16T23:46:05.02478Z	    isFeatured,
2025-09-16T23:46:05.024842Z	    viewCount,
2025-09-16T23:46:05.024905Z	    _createdAt,
2025-09-16T23:46:05.024961Z	    _updatedAt
2025-09-16T23:46:05.025021Z	  
2025-09-16T23:46:05.025091Z	      },
2025-09-16T23:46:05.025164Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:46:05.025232Z	    }
2025-09-16T23:46:05.025291Z	  
2025-09-16T23:46:05.025347Z	Query parameters: {
2025-09-16T23:46:05.025409Z	  limit: 4,
2025-09-16T23:46:05.025472Z	  offset: 0,
2025-09-16T23:46:05.02553Z	  targetMarket: undefined,
2025-09-16T23:46:05.025593Z	  brand: 'littelfuse',
2025-09-16T23:46:05.02565Z	  featured: undefined
2025-09-16T23:46:05.025723Z	}
2025-09-16T23:46:05.02583Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:46:05.025907Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:05.025983Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:05.026045Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:46:05.026105Z	Fetching products with query: 
2025-09-16T23:46:05.026163Z	    {
2025-09-16T23:46:05.026218Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:05.026275Z	        
2025-09-16T23:46:05.026338Z	    _id,
2025-09-16T23:46:05.026399Z	    _type,
2025-09-16T23:46:05.026456Z	    partNumber,
2025-09-16T23:46:05.026519Z	    "slug": slug.current,
2025-09-16T23:46:05.026576Z	    title,
2025-09-16T23:46:05.026636Z	    shortDescription,
2025-09-16T23:46:05.026717Z	    image,
2025-09-16T23:46:05.026776Z	    brand->{
2025-09-16T23:46:05.026831Z	      name,
2025-09-16T23:46:05.026886Z	      "slug": slug.current,
2025-09-16T23:46:05.026942Z	      logo
2025-09-16T23:46:05.027002Z	    },
2025-09-16T23:46:05.027068Z	    category->{
2025-09-16T23:46:05.027131Z	      name,
2025-09-16T23:46:05.027187Z	      "slug": slug.current
2025-09-16T23:46:05.027245Z	    },
2025-09-16T23:46:05.027307Z	    pricing{
2025-09-16T23:46:05.027363Z	      currency,
2025-09-16T23:46:05.027418Z	      tiers[]{
2025-09-16T23:46:05.02748Z	        quantity,
2025-09-16T23:46:05.027557Z	        price,
2025-09-16T23:46:05.027624Z	        unit
2025-09-16T23:46:05.027703Z	      },
2025-09-16T23:46:05.027767Z	      moq,
2025-09-16T23:46:05.027826Z	      leadTime,
2025-09-16T23:46:05.027883Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:05.02794Z	      "price": tiers[0].price,
2025-09-16T23:46:05.027996Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:05.028056Z	    },
2025-09-16T23:46:05.028117Z	    inventory{
2025-09-16T23:46:05.028179Z	      quantity,
2025-09-16T23:46:05.028235Z	      status,
2025-09-16T23:46:05.02829Z	      warehouse,
2025-09-16T23:46:05.028345Z	      lastUpdated,
2025-09-16T23:46:05.02842Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:05.028485Z	      "inStock": status == "in_stock",
2025-09-16T23:46:05.028549Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:05.028607Z	    },
2025-09-16T23:46:05.028663Z	    isActive,
2025-09-16T23:46:05.028738Z	    isFeatured,
2025-09-16T23:46:05.028803Z	    isNew,
2025-09-16T23:46:05.028861Z	    _createdAt,
2025-09-16T23:46:05.02892Z	    _updatedAt
2025-09-16T23:46:05.028982Z	  
2025-09-16T23:46:05.029043Z	      },
2025-09-16T23:46:05.029104Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:46:05.029167Z	    }
2025-09-16T23:46:05.029228Z	  
2025-09-16T23:46:05.029287Z	Query parameters: {
2025-09-16T23:46:05.029343Z	  limit: 8,
2025-09-16T23:46:05.029399Z	  offset: 0,
2025-09-16T23:46:05.029461Z	  category: undefined,
2025-09-16T23:46:05.029527Z	  brand: 'littelfuse',
2025-09-16T23:46:05.029589Z	  featured: undefined
2025-09-16T23:46:05.029653Z	}
2025-09-16T23:46:05.029724Z	Fetching solutions with query: 
2025-09-16T23:46:05.029795Z	    {
2025-09-16T23:46:05.029858Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:05.029922Z	        
2025-09-16T23:46:05.029983Z	    _id,
2025-09-16T23:46:05.030041Z	    title,
2025-09-16T23:46:05.030095Z	    "slug": slug.current,
2025-09-16T23:46:05.03015Z	    summary,
2025-09-16T23:46:05.030205Z	    description,
2025-09-16T23:46:05.03026Z	    coverImage,
2025-09-16T23:46:05.030317Z	    primaryBrand->{
2025-09-16T23:46:05.030373Z	      _id,
2025-09-16T23:46:05.03043Z	      name,
2025-09-16T23:46:05.030491Z	      "slug": slug.current,
2025-09-16T23:46:05.030547Z	      logo
2025-09-16T23:46:05.030608Z	    },
2025-09-16T23:46:05.030662Z	    relatedBrands[]->{
2025-09-16T23:46:05.030739Z	      _id,
2025-09-16T23:46:05.030797Z	      name,
2025-09-16T23:46:05.030864Z	      "slug": slug.current,
2025-09-16T23:46:05.030925Z	      logo
2025-09-16T23:46:05.03098Z	    },
2025-09-16T23:46:05.031041Z	    targetMarket,
2025-09-16T23:46:05.031103Z	    complexity,
2025-09-16T23:46:05.031158Z	    publishedAt,
2025-09-16T23:46:05.031214Z	    isPublished,
2025-09-16T23:46:05.031268Z	    isFeatured,
2025-09-16T23:46:05.031329Z	    viewCount,
2025-09-16T23:46:05.031393Z	    _createdAt,
2025-09-16T23:46:05.031458Z	    _updatedAt
2025-09-16T23:46:05.03152Z	  
2025-09-16T23:46:05.031589Z	      },
2025-09-16T23:46:05.031645Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:46:05.031736Z	    }
2025-09-16T23:46:05.031804Z	  
2025-09-16T23:46:05.031869Z	Query parameters: {
2025-09-16T23:46:05.03193Z	  limit: 4,
2025-09-16T23:46:05.031989Z	  offset: 0,
2025-09-16T23:46:05.032049Z	  targetMarket: undefined,
2025-09-16T23:46:05.03211Z	  brand: 'littelfuse',
2025-09-16T23:46:05.032165Z	  featured: undefined
2025-09-16T23:46:05.032226Z	}
2025-09-16T23:46:05.032291Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:46:05.032354Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:05.032429Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:05.032488Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-16T23:46:05.03255Z	Fetching products with query: 
2025-09-16T23:46:05.032607Z	    {
2025-09-16T23:46:05.032662Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:05.032743Z	        
2025-09-16T23:46:05.032806Z	    _id,
2025-09-16T23:46:05.032867Z	    _type,
2025-09-16T23:46:05.032928Z	    partNumber,
2025-09-16T23:46:05.03299Z	    "slug": slug.current,
2025-09-16T23:46:05.033051Z	    title,
2025-09-16T23:46:05.033107Z	    shortDescription,
2025-09-16T23:46:05.033163Z	    image,
2025-09-16T23:46:05.033224Z	    brand->{
2025-09-16T23:46:05.033281Z	      name,
2025-09-16T23:46:05.033336Z	      "slug": slug.current,
2025-09-16T23:46:05.033394Z	      logo
2025-09-16T23:46:05.03345Z	    },
2025-09-16T23:46:05.033506Z	    category->{
2025-09-16T23:46:05.03356Z	      name,
2025-09-16T23:46:05.033615Z	      "slug": slug.current
2025-09-16T23:46:05.033686Z	    },
2025-09-16T23:46:05.03378Z	    pricing{
2025-09-16T23:46:05.035219Z	      currency,
2025-09-16T23:46:05.035374Z	      tiers[]{
2025-09-16T23:46:05.035443Z	        quantity,
2025-09-16T23:46:05.035509Z	        price,
2025-09-16T23:46:05.035574Z	        unit
2025-09-16T23:46:05.035631Z	      },
2025-09-16T23:46:05.035745Z	      moq,
2025-09-16T23:46:05.035853Z	      leadTime,
2025-09-16T23:46:05.035914Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:05.036044Z	      "price": tiers[0].price,
2025-09-16T23:46:05.036147Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:05.03624Z	    },
2025-09-16T23:46:05.036307Z	    inventory{
2025-09-16T23:46:05.036424Z	      quantity,
2025-09-16T23:46:05.036603Z	      status,
2025-09-16T23:46:05.036687Z	      warehouse,
2025-09-16T23:46:05.036795Z	      lastUpdated,
2025-09-16T23:46:05.036908Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:05.036997Z	      "inStock": status == "in_stock",
2025-09-16T23:46:05.037098Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:05.037275Z	    },
2025-09-16T23:46:05.03735Z	    isActive,
2025-09-16T23:46:05.037408Z	    isFeatured,
2025-09-16T23:46:05.037511Z	    isNew,
2025-09-16T23:46:05.037579Z	    _createdAt,
2025-09-16T23:46:05.037714Z	    _updatedAt
2025-09-16T23:46:05.037798Z	  
2025-09-16T23:46:05.037919Z	      },
2025-09-16T23:46:05.038002Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-16T23:46:05.038068Z	    }
2025-09-16T23:46:05.038242Z	  
2025-09-16T23:46:05.038321Z	Query parameters: {
2025-09-16T23:46:05.038407Z	  limit: 8,
2025-09-16T23:46:05.038521Z	  offset: 0,
2025-09-16T23:46:05.038627Z	  category: undefined,
2025-09-16T23:46:05.038744Z	  brand: 'ncc',
2025-09-16T23:46:05.038849Z	  featured: undefined
2025-09-16T23:46:05.038943Z	}
2025-09-16T23:46:05.03904Z	Fetching solutions with query: 
2025-09-16T23:46:05.039382Z	    {
2025-09-16T23:46:05.039558Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:05.039704Z	        
2025-09-16T23:46:05.039824Z	    _id,
2025-09-16T23:46:05.039943Z	    title,
2025-09-16T23:46:05.040056Z	    "slug": slug.current,
2025-09-16T23:46:05.040167Z	    summary,
2025-09-16T23:46:05.04027Z	    description,
2025-09-16T23:46:05.040353Z	    coverImage,
2025-09-16T23:46:05.040418Z	    primaryBrand->{
2025-09-16T23:46:05.040578Z	      _id,
2025-09-16T23:46:05.040723Z	      name,
2025-09-16T23:46:05.040846Z	      "slug": slug.current,
2025-09-16T23:46:05.040959Z	      logo
2025-09-16T23:46:05.04106Z	    },
2025-09-16T23:46:05.041188Z	    relatedBrands[]->{
2025-09-16T23:46:05.041309Z	      _id,
2025-09-16T23:46:05.04142Z	      name,
2025-09-16T23:46:05.041528Z	      "slug": slug.current,
2025-09-16T23:46:05.041656Z	      logo
2025-09-16T23:46:05.04178Z	    },
2025-09-16T23:46:05.041882Z	    targetMarket,
2025-09-16T23:46:05.041988Z	    complexity,
2025-09-16T23:46:05.042084Z	    publishedAt,
2025-09-16T23:46:05.042194Z	    isPublished,
2025-09-16T23:46:05.042326Z	    isFeatured,
2025-09-16T23:46:05.042408Z	    viewCount,
2025-09-16T23:46:05.042513Z	    _createdAt,
2025-09-16T23:46:05.042618Z	    _updatedAt
2025-09-16T23:46:05.042749Z	  
2025-09-16T23:46:05.042863Z	      },
2025-09-16T23:46:05.042975Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-16T23:46:05.043086Z	    }
2025-09-16T23:46:05.043183Z	  
2025-09-16T23:46:05.043274Z	Query parameters: {
2025-09-16T23:46:05.043374Z	  limit: 4,
2025-09-16T23:46:05.043484Z	  offset: 0,
2025-09-16T23:46:05.043583Z	  targetMarket: undefined,
2025-09-16T23:46:05.04372Z	  brand: 'ncc',
2025-09-16T23:46:05.043827Z	  featured: undefined
2025-09-16T23:46:05.043984Z	}
2025-09-16T23:46:05.044152Z	✅ [getBrandData] Found brand: ncc
2025-09-16T23:46:05.044281Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:05.044394Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:05.044496Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-16T23:46:05.044608Z	Fetching products with query: 
2025-09-16T23:46:05.044734Z	    {
2025-09-16T23:46:05.044844Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:05.044951Z	        
2025-09-16T23:46:05.045062Z	    _id,
2025-09-16T23:46:05.045173Z	    _type,
2025-09-16T23:46:05.045283Z	    partNumber,
2025-09-16T23:46:05.045357Z	    "slug": slug.current,
2025-09-16T23:46:05.045445Z	    title,
2025-09-16T23:46:05.04555Z	    shortDescription,
2025-09-16T23:46:05.045668Z	    image,
2025-09-16T23:46:05.045799Z	    brand->{
2025-09-16T23:46:05.045917Z	      name,
2025-09-16T23:46:05.046029Z	      "slug": slug.current,
2025-09-16T23:46:05.046135Z	      logo
2025-09-16T23:46:05.046233Z	    },
2025-09-16T23:46:05.046334Z	    category->{
2025-09-16T23:46:05.04644Z	      name,
2025-09-16T23:46:05.046542Z	      "slug": slug.current
2025-09-16T23:46:05.046634Z	    },
2025-09-16T23:46:05.046776Z	    pricing{
2025-09-16T23:46:05.046885Z	      currency,
2025-09-16T23:46:05.046985Z	      tiers[]{
2025-09-16T23:46:05.047095Z	        quantity,
2025-09-16T23:46:05.047197Z	        price,
2025-09-16T23:46:05.047295Z	        unit
2025-09-16T23:46:05.047391Z	      },
2025-09-16T23:46:05.0475Z	      moq,
2025-09-16T23:46:05.047611Z	      leadTime,
2025-09-16T23:46:05.047894Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:05.047979Z	      "price": tiers[0].price,
2025-09-16T23:46:05.048054Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:05.048278Z	    },
2025-09-16T23:46:05.048482Z	    inventory{
2025-09-16T23:46:05.048624Z	      quantity,
2025-09-16T23:46:05.048813Z	      status,
2025-09-16T23:46:05.048882Z	      warehouse,
2025-09-16T23:46:05.048938Z	      lastUpdated,
2025-09-16T23:46:05.049034Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:05.049132Z	      "inStock": status == "in_stock",
2025-09-16T23:46:05.049205Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:05.049278Z	    },
2025-09-16T23:46:05.049564Z	    isActive,
2025-09-16T23:46:05.049644Z	    isFeatured,
2025-09-16T23:46:05.049731Z	    isNew,
2025-09-16T23:46:05.049946Z	    _createdAt,
2025-09-16T23:46:05.050086Z	    _updatedAt
2025-09-16T23:46:05.050214Z	  
2025-09-16T23:46:05.050385Z	      },
2025-09-16T23:46:05.050466Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-16T23:46:05.050594Z	    }
2025-09-16T23:46:05.050727Z	  
2025-09-16T23:46:05.050893Z	Query parameters: {
2025-09-16T23:46:05.051053Z	  limit: 8,
2025-09-16T23:46:05.051152Z	  offset: 0,
2025-09-16T23:46:05.051291Z	  category: undefined,
2025-09-16T23:46:05.051381Z	  brand: 'ncc',
2025-09-16T23:46:05.051521Z	  featured: undefined
2025-09-16T23:46:05.051587Z	}
2025-09-16T23:46:05.05165Z	Fetching solutions with query: 
2025-09-16T23:46:05.051807Z	    {
2025-09-16T23:46:05.051945Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:05.052026Z	        
2025-09-16T23:46:05.052173Z	    _id,
2025-09-16T23:46:05.052247Z	    title,
2025-09-16T23:46:05.052308Z	    "slug": slug.current,
2025-09-16T23:46:05.05243Z	    summary,
2025-09-16T23:46:05.052582Z	    description,
2025-09-16T23:46:05.052702Z	    coverImage,
2025-09-16T23:46:05.052819Z	    primaryBrand->{
2025-09-16T23:46:05.052927Z	      _id,
2025-09-16T23:46:05.053049Z	      name,
2025-09-16T23:46:05.053121Z	      "slug": slug.current,
2025-09-16T23:46:05.05322Z	      logo
2025-09-16T23:46:05.053446Z	    },
2025-09-16T23:46:05.053647Z	    relatedBrands[]->{
2025-09-16T23:46:05.053861Z	      _id,
2025-09-16T23:46:05.053991Z	      name,
2025-09-16T23:46:05.054102Z	      "slug": slug.current,
2025-09-16T23:46:05.054212Z	      logo
2025-09-16T23:46:05.054314Z	    },
2025-09-16T23:46:05.05442Z	    targetMarket,
2025-09-16T23:46:05.054535Z	    complexity,
2025-09-16T23:46:05.054646Z	    publishedAt,
2025-09-16T23:46:05.054778Z	    isPublished,
2025-09-16T23:46:05.054891Z	    isFeatured,
2025-09-16T23:46:05.055006Z	    viewCount,
2025-09-16T23:46:05.055123Z	    _createdAt,
2025-09-16T23:46:05.055229Z	    _updatedAt
2025-09-16T23:46:05.055349Z	  
2025-09-16T23:46:05.055461Z	      },
2025-09-16T23:46:05.055576Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-16T23:46:05.055725Z	    }
2025-09-16T23:46:05.055846Z	  
2025-09-16T23:46:05.055959Z	Query parameters: {
2025-09-16T23:46:05.056082Z	  limit: 4,
2025-09-16T23:46:05.056196Z	  offset: 0,
2025-09-16T23:46:05.056303Z	  targetMarket: undefined,
2025-09-16T23:46:05.056408Z	  brand: 'ncc',
2025-09-16T23:46:05.056526Z	  featured: undefined
2025-09-16T23:46:05.056645Z	}
2025-09-16T23:46:05.056804Z	✅ [getBrandData] Found brand: ncc
2025-09-16T23:46:05.056931Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:05.05708Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:05.05721Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:05.057345Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:05.057442Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:05.057655Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:05.057842Z	}
2025-09-16T23:46:05.058002Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:05.058153Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:05.058255Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:05.0584Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:05.058614Z	}
2025-09-16T23:46:05.058787Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:46:05.058964Z	Fetching products with query: 
2025-09-16T23:46:05.059112Z	    {
2025-09-16T23:46:05.059294Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:05.059448Z	        
2025-09-16T23:46:05.059602Z	    _id,
2025-09-16T23:46:05.059776Z	    _type,
2025-09-16T23:46:05.059896Z	    partNumber,
2025-09-16T23:46:05.060009Z	    "slug": slug.current,
2025-09-16T23:46:05.060107Z	    title,
2025-09-16T23:46:05.060216Z	    shortDescription,
2025-09-16T23:46:05.060324Z	    image,
2025-09-16T23:46:05.060448Z	    brand->{
2025-09-16T23:46:05.060555Z	      name,
2025-09-16T23:46:05.060652Z	      "slug": slug.current,
2025-09-16T23:46:05.060765Z	      logo
2025-09-16T23:46:05.060929Z	    },
2025-09-16T23:46:05.061005Z	    category->{
2025-09-16T23:46:05.061063Z	      name,
2025-09-16T23:46:05.061282Z	      "slug": slug.current
2025-09-16T23:46:05.061395Z	    },
2025-09-16T23:46:05.061508Z	    pricing{
2025-09-16T23:46:05.061572Z	      currency,
2025-09-16T23:46:05.061705Z	      tiers[]{
2025-09-16T23:46:05.061876Z	        quantity,
2025-09-16T23:46:05.062034Z	        price,
2025-09-16T23:46:05.062152Z	        unit
2025-09-16T23:46:05.062291Z	      },
2025-09-16T23:46:05.062431Z	      moq,
2025-09-16T23:46:05.062551Z	      leadTime,
2025-09-16T23:46:05.062724Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:05.062809Z	      "price": tiers[0].price,
2025-09-16T23:46:05.06287Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:05.062966Z	    },
2025-09-16T23:46:05.063024Z	    inventory{
2025-09-16T23:46:05.063084Z	      quantity,
2025-09-16T23:46:05.063204Z	      status,
2025-09-16T23:46:05.063317Z	      warehouse,
2025-09-16T23:46:05.063469Z	      lastUpdated,
2025-09-16T23:46:05.063602Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:05.063776Z	      "inStock": status == "in_stock",
2025-09-16T23:46:05.063923Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:05.064001Z	    },
2025-09-16T23:46:05.064123Z	    isActive,
2025-09-16T23:46:05.064225Z	    isFeatured,
2025-09-16T23:46:05.064313Z	    isNew,
2025-09-16T23:46:05.064396Z	    _createdAt,
2025-09-16T23:46:05.064506Z	    _updatedAt
2025-09-16T23:46:05.064637Z	  
2025-09-16T23:46:05.064811Z	      },
2025-09-16T23:46:05.064887Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:46:05.064948Z	    }
2025-09-16T23:46:05.065036Z	  
2025-09-16T23:46:05.065115Z	Query parameters: {
2025-09-16T23:46:05.065189Z	  limit: 8,
2025-09-16T23:46:05.065298Z	  offset: 0,
2025-09-16T23:46:05.065396Z	  category: undefined,
2025-09-16T23:46:05.065503Z	  brand: 'littelfuse',
2025-09-16T23:46:05.065622Z	  featured: undefined
2025-09-16T23:46:05.065759Z	}
2025-09-16T23:46:05.065871Z	Fetching solutions with query: 
2025-09-16T23:46:05.065988Z	    {
2025-09-16T23:46:05.066108Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:05.066243Z	        
2025-09-16T23:46:05.066352Z	    _id,
2025-09-16T23:46:05.066459Z	    title,
2025-09-16T23:46:05.066571Z	    "slug": slug.current,
2025-09-16T23:46:05.066698Z	    summary,
2025-09-16T23:46:05.067206Z	    description,
2025-09-16T23:46:05.067352Z	    coverImage,
2025-09-16T23:46:05.06747Z	    primaryBrand->{
2025-09-16T23:46:05.067568Z	      _id,
2025-09-16T23:46:05.067662Z	      name,
2025-09-16T23:46:05.067798Z	      "slug": slug.current,
2025-09-16T23:46:05.067912Z	      logo
2025-09-16T23:46:05.068009Z	    },
2025-09-16T23:46:05.068102Z	    relatedBrands[]->{
2025-09-16T23:46:05.068194Z	      _id,
2025-09-16T23:46:05.068287Z	      name,
2025-09-16T23:46:05.068375Z	      "slug": slug.current,
2025-09-16T23:46:05.068465Z	      logo
2025-09-16T23:46:05.068569Z	    },
2025-09-16T23:46:05.068669Z	    targetMarket,
2025-09-16T23:46:05.068791Z	    complexity,
2025-09-16T23:46:05.068887Z	    publishedAt,
2025-09-16T23:46:05.06898Z	    isPublished,
2025-09-16T23:46:05.06907Z	    isFeatured,
2025-09-16T23:46:05.069158Z	    viewCount,
2025-09-16T23:46:05.069253Z	    _createdAt,
2025-09-16T23:46:05.069354Z	    _updatedAt
2025-09-16T23:46:05.06944Z	  
2025-09-16T23:46:05.069539Z	      },
2025-09-16T23:46:05.069641Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:46:05.069887Z	    }
2025-09-16T23:46:05.07008Z	  
2025-09-16T23:46:05.070262Z	Query parameters: {
2025-09-16T23:46:05.070389Z	  limit: 4,
2025-09-16T23:46:05.070495Z	  offset: 0,
2025-09-16T23:46:05.070607Z	  targetMarket: undefined,
2025-09-16T23:46:05.070719Z	  brand: 'littelfuse',
2025-09-16T23:46:05.070816Z	  featured: undefined
2025-09-16T23:46:05.070924Z	}
2025-09-16T23:46:05.071019Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:46:05.071141Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:05.071256Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:05.071352Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:46:05.071461Z	Fetching products with query: 
2025-09-16T23:46:05.071557Z	    {
2025-09-16T23:46:05.071643Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:05.071786Z	        
2025-09-16T23:46:05.071898Z	    _id,
2025-09-16T23:46:05.071968Z	    _type,
2025-09-16T23:46:05.0721Z	    partNumber,
2025-09-16T23:46:05.072214Z	    "slug": slug.current,
2025-09-16T23:46:05.072329Z	    title,
2025-09-16T23:46:05.072478Z	    shortDescription,
2025-09-16T23:46:05.072766Z	    image,
2025-09-16T23:46:05.072854Z	    brand->{
2025-09-16T23:46:05.073115Z	      name,
2025-09-16T23:46:05.073216Z	      "slug": slug.current,
2025-09-16T23:46:05.07348Z	      logo
2025-09-16T23:46:05.073568Z	    },
2025-09-16T23:46:05.073667Z	    category->{
2025-09-16T23:46:05.074073Z	      name,
2025-09-16T23:46:05.074192Z	      "slug": slug.current
2025-09-16T23:46:05.074579Z	    },
2025-09-16T23:46:05.074712Z	    pricing{
2025-09-16T23:46:05.074943Z	      currency,
2025-09-16T23:46:05.075213Z	      tiers[]{
2025-09-16T23:46:05.075466Z	        quantity,
2025-09-16T23:46:05.075588Z	        price,
2025-09-16T23:46:05.075883Z	        unit
2025-09-16T23:46:05.075958Z	      },
2025-09-16T23:46:05.076052Z	      moq,
2025-09-16T23:46:05.076142Z	      leadTime,
2025-09-16T23:46:05.076216Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:05.076279Z	      "price": tiers[0].price,
2025-09-16T23:46:05.076407Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:05.07648Z	    },
2025-09-16T23:46:05.076535Z	    inventory{
2025-09-16T23:46:05.076598Z	      quantity,
2025-09-16T23:46:05.076779Z	      status,
2025-09-16T23:46:05.076955Z	      warehouse,
2025-09-16T23:46:05.077091Z	      lastUpdated,
2025-09-16T23:46:05.077203Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:05.077297Z	      "inStock": status == "in_stock",
2025-09-16T23:46:05.077397Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:05.077517Z	    },
2025-09-16T23:46:05.077625Z	    isActive,
2025-09-16T23:46:05.077778Z	    isFeatured,
2025-09-16T23:46:05.077902Z	    isNew,
2025-09-16T23:46:05.078005Z	    _createdAt,
2025-09-16T23:46:05.078111Z	    _updatedAt
2025-09-16T23:46:05.078214Z	  
2025-09-16T23:46:05.078312Z	      },
2025-09-16T23:46:05.078444Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:46:05.078549Z	    }
2025-09-16T23:46:05.078651Z	  
2025-09-16T23:46:05.07877Z	Query parameters: {
2025-09-16T23:46:05.07888Z	  limit: 8,
2025-09-16T23:46:05.078991Z	  offset: 0,
2025-09-16T23:46:05.0791Z	  category: undefined,
2025-09-16T23:46:05.079212Z	  brand: 'littelfuse',
2025-09-16T23:46:05.079336Z	  featured: undefined
2025-09-16T23:46:05.079443Z	}
2025-09-16T23:46:05.079549Z	Fetching solutions with query: 
2025-09-16T23:46:05.079663Z	    {
2025-09-16T23:46:05.079795Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:05.079902Z	        
2025-09-16T23:46:05.079994Z	    _id,
2025-09-16T23:46:05.080087Z	    title,
2025-09-16T23:46:05.080194Z	    "slug": slug.current,
2025-09-16T23:46:05.080307Z	    summary,
2025-09-16T23:46:05.080419Z	    description,
2025-09-16T23:46:05.080522Z	    coverImage,
2025-09-16T23:46:05.080618Z	    primaryBrand->{
2025-09-16T23:46:05.080744Z	      _id,
2025-09-16T23:46:05.080847Z	      name,
2025-09-16T23:46:05.080953Z	      "slug": slug.current,
2025-09-16T23:46:05.081057Z	      logo
2025-09-16T23:46:05.081157Z	    },
2025-09-16T23:46:05.081271Z	    relatedBrands[]->{
2025-09-16T23:46:05.081403Z	      _id,
2025-09-16T23:46:05.081527Z	      name,
2025-09-16T23:46:05.081641Z	      "slug": slug.current,
2025-09-16T23:46:05.081777Z	      logo
2025-09-16T23:46:05.081885Z	    },
2025-09-16T23:46:05.081982Z	    targetMarket,
2025-09-16T23:46:05.082075Z	    complexity,
2025-09-16T23:46:05.08219Z	    publishedAt,
2025-09-16T23:46:05.082326Z	    isPublished,
2025-09-16T23:46:05.082448Z	    isFeatured,
2025-09-16T23:46:05.082538Z	    viewCount,
2025-09-16T23:46:05.082649Z	    _createdAt,
2025-09-16T23:46:05.082769Z	    _updatedAt
2025-09-16T23:46:05.082876Z	  
2025-09-16T23:46:05.082977Z	      },
2025-09-16T23:46:05.08307Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:46:05.083165Z	    }
2025-09-16T23:46:05.083263Z	  
2025-09-16T23:46:05.083355Z	Query parameters: {
2025-09-16T23:46:05.083474Z	  limit: 4,
2025-09-16T23:46:05.083574Z	  offset: 0,
2025-09-16T23:46:05.08384Z	  targetMarket: undefined,
2025-09-16T23:46:05.083968Z	  brand: 'littelfuse',
2025-09-16T23:46:05.084096Z	  featured: undefined
2025-09-16T23:46:05.084202Z	}
2025-09-16T23:46:05.084319Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:46:05.084559Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:05.084702Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:05.084813Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-16T23:46:05.08492Z	Fetching products with query: 
2025-09-16T23:46:05.085041Z	    {
2025-09-16T23:46:05.085158Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:05.085269Z	        
2025-09-16T23:46:05.08538Z	    _id,
2025-09-16T23:46:05.085487Z	    _type,
2025-09-16T23:46:05.085596Z	    partNumber,
2025-09-16T23:46:05.085719Z	    "slug": slug.current,
2025-09-16T23:46:05.085823Z	    title,
2025-09-16T23:46:05.085927Z	    shortDescription,
2025-09-16T23:46:05.086012Z	    image,
2025-09-16T23:46:05.086077Z	    brand->{
2025-09-16T23:46:05.086271Z	      name,
2025-09-16T23:46:05.086347Z	      "slug": slug.current,
2025-09-16T23:46:05.086426Z	      logo
2025-09-16T23:46:05.086632Z	    },
2025-09-16T23:46:05.086735Z	    category->{
2025-09-16T23:46:05.08685Z	      name,
2025-09-16T23:46:05.086994Z	      "slug": slug.current
2025-09-16T23:46:05.087118Z	    },
2025-09-16T23:46:05.087227Z	    pricing{
2025-09-16T23:46:05.087333Z	      currency,
2025-09-16T23:46:05.087443Z	      tiers[]{
2025-09-16T23:46:05.087544Z	        quantity,
2025-09-16T23:46:05.087649Z	        price,
2025-09-16T23:46:05.087764Z	        unit
2025-09-16T23:46:05.087834Z	      },
2025-09-16T23:46:05.087922Z	      moq,
2025-09-16T23:46:05.088012Z	      leadTime,
2025-09-16T23:46:05.088133Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:05.088239Z	      "price": tiers[0].price,
2025-09-16T23:46:05.088381Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:05.088509Z	    },
2025-09-16T23:46:05.08861Z	    inventory{
2025-09-16T23:46:05.088741Z	      quantity,
2025-09-16T23:46:05.088853Z	      status,
2025-09-16T23:46:05.088953Z	      warehouse,
2025-09-16T23:46:05.089081Z	      lastUpdated,
2025-09-16T23:46:05.089179Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:05.089294Z	      "inStock": status == "in_stock",
2025-09-16T23:46:05.089409Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:05.089501Z	    },
2025-09-16T23:46:05.089726Z	    isActive,
2025-09-16T23:46:05.089874Z	    isFeatured,
2025-09-16T23:46:05.089968Z	    isNew,
2025-09-16T23:46:05.090052Z	    _createdAt,
2025-09-16T23:46:05.090128Z	    _updatedAt
2025-09-16T23:46:05.090203Z	  
2025-09-16T23:46:05.090279Z	      },
2025-09-16T23:46:05.09034Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-16T23:46:05.090411Z	    }
2025-09-16T23:46:05.090476Z	  
2025-09-16T23:46:05.090544Z	Query parameters: {
2025-09-16T23:46:05.090611Z	  limit: 8,
2025-09-16T23:46:05.090689Z	  offset: 0,
2025-09-16T23:46:05.090773Z	  category: undefined,
2025-09-16T23:46:05.090831Z	  brand: 'ncc',
2025-09-16T23:46:05.090892Z	  featured: undefined
2025-09-16T23:46:05.090948Z	}
2025-09-16T23:46:05.091007Z	Fetching solutions with query: 
2025-09-16T23:46:05.09107Z	    {
2025-09-16T23:46:05.091127Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:05.091187Z	        
2025-09-16T23:46:05.091249Z	    _id,
2025-09-16T23:46:05.091304Z	    title,
2025-09-16T23:46:05.091833Z	    "slug": slug.current,
2025-09-16T23:46:05.091908Z	    summary,
2025-09-16T23:46:05.091966Z	    description,
2025-09-16T23:46:05.09208Z	    coverImage,
2025-09-16T23:46:05.092246Z	    primaryBrand->{
2025-09-16T23:46:05.092318Z	      _id,
2025-09-16T23:46:05.092471Z	      name,
2025-09-16T23:46:05.092577Z	      "slug": slug.current,
2025-09-16T23:46:05.092671Z	      logo
2025-09-16T23:46:05.092798Z	    },
2025-09-16T23:46:05.09299Z	    relatedBrands[]->{
2025-09-16T23:46:05.093093Z	      _id,
2025-09-16T23:46:05.093237Z	      name,
2025-09-16T23:46:05.09336Z	      "slug": slug.current,
2025-09-16T23:46:05.093489Z	      logo
2025-09-16T23:46:05.093593Z	    },
2025-09-16T23:46:05.093855Z	    targetMarket,
2025-09-16T23:46:05.093987Z	    complexity,
2025-09-16T23:46:05.094103Z	    publishedAt,
2025-09-16T23:46:05.094202Z	    isPublished,
2025-09-16T23:46:05.0943Z	    isFeatured,
2025-09-16T23:46:05.094395Z	    viewCount,
2025-09-16T23:46:05.094664Z	    _createdAt,
2025-09-16T23:46:05.094864Z	    _updatedAt
2025-09-16T23:46:05.095041Z	  
2025-09-16T23:46:05.095169Z	      },
2025-09-16T23:46:05.09528Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-16T23:46:05.095413Z	    }
2025-09-16T23:46:05.095532Z	  
2025-09-16T23:46:05.09567Z	Query parameters: {
2025-09-16T23:46:05.095814Z	  limit: 4,
2025-09-16T23:46:05.095931Z	  offset: 0,
2025-09-16T23:46:05.096047Z	  targetMarket: undefined,
2025-09-16T23:46:05.096159Z	  brand: 'ncc',
2025-09-16T23:46:05.096264Z	  featured: undefined
2025-09-16T23:46:05.096366Z	}
2025-09-16T23:46:05.09649Z	✅ [getBrandData] Found brand: ncc
2025-09-16T23:46:05.096599Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:05.096777Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:05.096985Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-16T23:46:05.097189Z	Fetching products with query: 
2025-09-16T23:46:05.097266Z	    {
2025-09-16T23:46:05.097425Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:05.097529Z	        
2025-09-16T23:46:05.097629Z	    _id,
2025-09-16T23:46:05.097759Z	    _type,
2025-09-16T23:46:05.097865Z	    partNumber,
2025-09-16T23:46:05.097936Z	    "slug": slug.current,
2025-09-16T23:46:05.098036Z	    title,
2025-09-16T23:46:05.098134Z	    shortDescription,
2025-09-16T23:46:05.098255Z	    image,
2025-09-16T23:46:05.098363Z	    brand->{
2025-09-16T23:46:05.098475Z	      name,
2025-09-16T23:46:05.098578Z	      "slug": slug.current,
2025-09-16T23:46:05.098703Z	      logo
2025-09-16T23:46:05.09881Z	    },
2025-09-16T23:46:05.098917Z	    category->{
2025-09-16T23:46:05.099019Z	      name,
2025-09-16T23:46:05.099122Z	      "slug": slug.current
2025-09-16T23:46:05.099235Z	    },
2025-09-16T23:46:05.099328Z	    pricing{
2025-09-16T23:46:05.099428Z	      currency,
2025-09-16T23:46:05.099528Z	      tiers[]{
2025-09-16T23:46:05.099632Z	        quantity,
2025-09-16T23:46:05.099766Z	        price,
2025-09-16T23:46:05.099875Z	        unit
2025-09-16T23:46:05.099981Z	      },
2025-09-16T23:46:05.100081Z	      moq,
2025-09-16T23:46:05.100211Z	    Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:05.100316Z	  leadTime,
2025-09-16T23:46:05.100415Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:05.100506Z	      "price": tiers[0].price,
2025-09-16T23:46:05.100565Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:05.100629Z	    },
2025-09-16T23:46:05.100727Z	    inventory{
2025-09-16T23:46:05.100789Z	      quantity,
2025-09-16T23:46:05.100844Z	      status,
2025-09-16T23:46:05.100897Z	      warehouse,
2025-09-16T23:46:05.100951Z	      lastUpdated,
2025-09-16T23:46:05.101005Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:05.101064Z	      "inStock": status == "in_stock",
2025-09-16T23:46:05.101118Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:05.101171Z	    },
2025-09-16T23:46:05.101229Z	    isActive,
2025-09-16T23:46:05.101292Z	    isFeatured,
2025-09-16T23:46:05.101348Z	    isNew,
2025-09-16T23:46:05.101406Z	    _createdAt,
2025-09-16T23:46:05.101465Z	    _updatedAt
2025-09-16T23:46:05.101541Z	  
2025-09-16T23:46:05.1016Z	      },
2025-09-16T23:46:05.101667Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-16T23:46:05.101805Z	    }
2025-09-16T23:46:05.101921Z	  
2025-09-16T23:46:05.102022Z	Query parameters: {
2025-09-16T23:46:05.102167Z	  limit: 8,
2025-09-16T23:46:05.102324Z	  offset: 0,
2025-09-16T23:46:05.10244Z	  category: undefined,
2025-09-16T23:46:05.102584Z	  brand: 'ncc',
2025-09-16T23:46:05.102768Z	  featured: undefined
2025-09-16T23:46:05.102898Z	}
2025-09-16T23:46:05.103015Z	Fetching solutions with query: 
2025-09-16T23:46:05.103124Z	    {
2025-09-16T23:46:05.103232Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:05.10334Z	        
2025-09-16T23:46:05.103447Z	    _id,
2025-09-16T23:46:05.103552Z	    title,
2025-09-16T23:46:05.103651Z	    "slug": slug.current,
2025-09-16T23:46:05.103774Z	    summary,
2025-09-16T23:46:05.103866Z	    description,
2025-09-16T23:46:05.10396Z	    coverImage,
2025-09-16T23:46:05.104042Z	    primaryBrand->{
2025-09-16T23:46:05.104121Z	      _id,
2025-09-16T23:46:05.104199Z	      name,
2025-09-16T23:46:05.104278Z	      "slug": slug.current,
2025-09-16T23:46:05.104355Z	      logo
2025-09-16T23:46:05.104437Z	    },
2025-09-16T23:46:05.104528Z	    relatedBrands[]->{
2025-09-16T23:46:05.104613Z	      _id,
2025-09-16T23:46:05.105362Z	      name,
2025-09-16T23:46:05.105478Z	      "slug": slug.current,
2025-09-16T23:46:05.105568Z	      logo
2025-09-16T23:46:05.105667Z	    },
2025-09-16T23:46:05.105784Z	    targetMarket,
2025-09-16T23:46:05.105874Z	    complexity,
2025-09-16T23:46:05.105933Z	    publishedAt,
2025-09-16T23:46:05.106091Z	    isPublished,
2025-09-16T23:46:05.106283Z	    isFeatured,
2025-09-16T23:46:05.106364Z	    viewCount,
2025-09-16T23:46:05.10654Z	    _createdAt,
2025-09-16T23:46:05.106609Z	    _updatedAt
2025-09-16T23:46:05.106752Z	  
2025-09-16T23:46:05.10692Z	      },
2025-09-16T23:46:05.106999Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-16T23:46:05.107163Z	    }
2025-09-16T23:46:05.107242Z	  
2025-09-16T23:46:05.107306Z	Query parameters: {
2025-09-16T23:46:05.107393Z	  limit: 4,
2025-09-16T23:46:05.107531Z	  offset: 0,
2025-09-16T23:46:05.107683Z	  targetMarket: undefined,
2025-09-16T23:46:05.107829Z	  brand: 'ncc',
2025-09-16T23:46:05.10791Z	  featured: undefined
2025-09-16T23:46:05.108044Z	}
2025-09-16T23:46:05.108227Z	✅ [getBrandData] Found brand: ncc
2025-09-16T23:46:05.108419Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:05.108565Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:05.108875Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-16T23:46:05.108977Z	Fetching products with query: 
2025-09-16T23:46:05.109038Z	    {
2025-09-16T23:46:05.109144Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:05.109283Z	        
2025-09-16T23:46:05.109418Z	    _id,
2025-09-16T23:46:05.10952Z	    _type,
2025-09-16T23:46:05.109646Z	    partNumber,
2025-09-16T23:46:05.109784Z	    "slug": slug.current,
2025-09-16T23:46:05.109869Z	    title,
2025-09-16T23:46:05.109979Z	    shortDescription,
2025-09-16T23:46:05.110067Z	    image,
2025-09-16T23:46:05.110177Z	    brand->{
2025-09-16T23:46:05.11034Z	      name,
2025-09-16T23:46:05.110434Z	      "slug": slug.current,
2025-09-16T23:46:05.110523Z	      logo
2025-09-16T23:46:05.110629Z	    },
2025-09-16T23:46:05.110737Z	    category->{
2025-09-16T23:46:05.110856Z	      name,
2025-09-16T23:46:05.111148Z	      "slug": slug.current
2025-09-16T23:46:05.111224Z	    },
2025-09-16T23:46:05.111288Z	    pricing{
2025-09-16T23:46:05.111546Z	      currency,
2025-09-16T23:46:05.111624Z	      tiers[]{
2025-09-16T23:46:05.111746Z	        quantity,
2025-09-16T23:46:05.111828Z	        price,
2025-09-16T23:46:05.111953Z	        unit
2025-09-16T23:46:05.112039Z	      },
2025-09-16T23:46:05.112169Z	      moq,
2025-09-16T23:46:05.11228Z	      leadTime,
2025-09-16T23:46:05.112471Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:05.112548Z	      "price": tiers[0].price,
2025-09-16T23:46:05.112661Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:05.11299Z	    },
2025-09-16T23:46:05.11311Z	    inventory{
2025-09-16T23:46:05.113223Z	      quantity,
2025-09-16T23:46:05.113325Z	      status,
2025-09-16T23:46:05.113425Z	      warehouse,
2025-09-16T23:46:05.113536Z	      lastUpdated,
2025-09-16T23:46:05.113629Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:05.113747Z	      "inStock": status == "in_stock",
2025-09-16T23:46:05.113854Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:05.113954Z	    },
2025-09-16T23:46:05.114049Z	    isActive,
2025-09-16T23:46:05.11415Z	    isFeatured,
2025-09-16T23:46:05.114237Z	    isNew,
2025-09-16T23:46:05.114324Z	    _createdAt,
2025-09-16T23:46:05.114422Z	    _updatedAt
2025-09-16T23:46:05.114522Z	  
2025-09-16T23:46:05.114603Z	      },
2025-09-16T23:46:05.11471Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-16T23:46:05.114833Z	    }
2025-09-16T23:46:05.114935Z	  
2025-09-16T23:46:05.115029Z	Query parameters: {
2025-09-16T23:46:05.115117Z	  limit: 8,
2025-09-16T23:46:05.11519Z	  offset: 0,
2025-09-16T23:46:05.115247Z	  category: undefined,
2025-09-16T23:46:05.11553Z	  brand: 'lem',
2025-09-16T23:46:05.115608Z	  featured: undefined
2025-09-16T23:46:05.115729Z	}
2025-09-16T23:46:05.115878Z	Fetching solutions with query: 
2025-09-16T23:46:05.116087Z	    {
2025-09-16T23:46:05.116223Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:05.116337Z	        
2025-09-16T23:46:05.116486Z	    _id,
2025-09-16T23:46:05.116596Z	    title,
2025-09-16T23:46:05.116707Z	    "slug": slug.current,
2025-09-16T23:46:05.116819Z	    summary,
2025-09-16T23:46:05.116916Z	    description,
2025-09-16T23:46:05.117023Z	    coverImage,
2025-09-16T23:46:05.117145Z	    primaryBrand->{
2025-09-16T23:46:05.117246Z	      _id,
2025-09-16T23:46:05.117572Z	      name,
2025-09-16T23:46:05.117662Z	      "slug": slug.current,
2025-09-16T23:46:05.117865Z	      logo
2025-09-16T23:46:05.117939Z	    },
2025-09-16T23:46:05.118047Z	    relatedBrands[]->{
2025-09-16T23:46:05.118152Z	      _id,
2025-09-16T23:46:05.118247Z	      name,
2025-09-16T23:46:05.118347Z	      "slug": slug.current,
2025-09-16T23:46:05.118449Z	      logo
2025-09-16T23:46:05.118557Z	    },
2025-09-16T23:46:05.11865Z	    targetMarket,
2025-09-16T23:46:05.118774Z	    complexity,
2025-09-16T23:46:05.118872Z	    publishedAt,
2025-09-16T23:46:05.118969Z	    isPublished,
2025-09-16T23:46:05.119052Z	    isFeatured,
2025-09-16T23:46:05.119116Z	    viewCount,
2025-09-16T23:46:05.119172Z	    _createdAt,
2025-09-16T23:46:05.119243Z	    _updatedAt
2025-09-16T23:46:05.119301Z	  
2025-09-16T23:46:05.119358Z	      },
2025-09-16T23:46:05.119435Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-16T23:46:05.119516Z	    }
2025-09-16T23:46:05.119604Z	  
2025-09-16T23:46:05.119726Z	Query parameters: {
2025-09-16T23:46:05.119956Z	  limit: 4,
2025-09-16T23:46:05.120118Z	  offset: 0,
2025-09-16T23:46:05.120255Z	  targetMarket: undefined,
2025-09-16T23:46:05.120383Z	  brand: 'lem',
2025-09-16T23:46:05.120504Z	  featured: undefined
2025-09-16T23:46:05.120614Z	}
2025-09-16T23:46:05.120809Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-16T23:46:05.120933Z	Fetching products with query: 
2025-09-16T23:46:05.121045Z	    {
2025-09-16T23:46:05.121147Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:05.121282Z	        
2025-09-16T23:46:05.121413Z	    _id,
2025-09-16T23:46:05.12153Z	    _type,
2025-09-16T23:46:05.121644Z	    partNumber,
2025-09-16T23:46:05.121814Z	    "slug": slug.current,
2025-09-16T23:46:05.121935Z	    title,
2025-09-16T23:46:05.122081Z	    shortDescription,
2025-09-16T23:46:05.122204Z	    image,
2025-09-16T23:46:05.122336Z	    brand->{
2025-09-16T23:46:05.122454Z	      name,
2025-09-16T23:46:05.122564Z	      "slug": slug.current,
2025-09-16T23:46:05.122703Z	      logo
2025-09-16T23:46:05.122827Z	    },
2025-09-16T23:46:05.122932Z	    category->{
2025-09-16T23:46:05.123057Z	      name,
2025-09-16T23:46:05.12318Z	      "slug": slug.current
2025-09-16T23:46:05.123291Z	    },
2025-09-16T23:46:05.123404Z	    pricing{
2025-09-16T23:46:05.123499Z	      currency,
2025-09-16T23:46:05.123608Z	      tiers[]{
2025-09-16T23:46:05.123751Z	        quantity,
2025-09-16T23:46:05.123866Z	        price,
2025-09-16T23:46:05.123977Z	        unit
2025-09-16T23:46:05.12408Z	      },
2025-09-16T23:46:05.124171Z	      moq,
2025-09-16T23:46:05.124242Z	      leadTime,
2025-09-16T23:46:05.124314Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:05.124383Z	      "price": tiers[0].price,
2025-09-16T23:46:05.124442Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:05.124502Z	    },
2025-09-16T23:46:05.124602Z	    inventory{
2025-09-16T23:46:05.124772Z	      quantity,
2025-09-16T23:46:05.124921Z	      status,
2025-09-16T23:46:05.125048Z	      warehouse,
2025-09-16T23:46:05.125188Z	      lastUpdated,
2025-09-16T23:46:05.125314Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:05.125446Z	      "inStock": status == "in_stock",
2025-09-16T23:46:05.125563Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:05.125719Z	    },
2025-09-16T23:46:05.125843Z	    isActive,
2025-09-16T23:46:05.125973Z	    isFeatured,
2025-09-16T23:46:05.126091Z	    isNew,
2025-09-16T23:46:05.126214Z	    _createdAt,
2025-09-16T23:46:05.126319Z	    _updatedAt
2025-09-16T23:46:05.126442Z	  
2025-09-16T23:46:05.126557Z	      },
2025-09-16T23:46:05.126665Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-16T23:46:05.126804Z	    }
2025-09-16T23:46:05.126911Z	  
2025-09-16T23:46:05.127048Z	Query parameters: {
2025-09-16T23:46:05.127165Z	  limit: 8,
2025-09-16T23:46:05.127295Z	  offset: 0,
2025-09-16T23:46:05.127415Z	  category: undefined,
2025-09-16T23:46:05.127546Z	  brand: 'lem',
2025-09-16T23:46:05.127729Z	  featured: undefined
2025-09-16T23:46:05.127809Z	}
2025-09-16T23:46:05.127947Z	Fetching solutions with query: 
2025-09-16T23:46:05.12806Z	    {
2025-09-16T23:46:05.12821Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:05.128296Z	        
2025-09-16T23:46:05.12841Z	    _id,
2025-09-16T23:46:05.128593Z	    title,
2025-09-16T23:46:05.128743Z	    "slug": slug.current,
2025-09-16T23:46:05.128915Z	    summary,
2025-09-16T23:46:05.129022Z	    description,
2025-09-16T23:46:05.129244Z	    coverImage,
2025-09-16T23:46:05.129601Z	    primaryBrand->{
2025-09-16T23:46:05.129777Z	      _id,
2025-09-16T23:46:05.129951Z	      name,
2025-09-16T23:46:05.130087Z	      "slug": slug.current,
2025-09-16T23:46:05.130255Z	      logo
2025-09-16T23:46:05.130518Z	    },
2025-09-16T23:46:05.130623Z	    relatedBrands[]->{
2025-09-16T23:46:05.130886Z	      _id,
2025-09-16T23:46:05.130999Z	      name,
2025-09-16T23:46:05.131267Z	      "slug": slug.current,
2025-09-16T23:46:05.131444Z	      logo
2025-09-16T23:46:05.131615Z	    },
2025-09-16T23:46:05.131834Z	    targetMarket,
2025-09-16T23:46:05.132028Z	    complexity,
2025-09-16T23:46:05.132154Z	    publishedAt,
2025-09-16T23:46:05.132253Z	    isPublished,
2025-09-16T23:46:05.132362Z	    isFeatured,
2025-09-16T23:46:05.132477Z	    viewCount,
2025-09-16T23:46:05.132581Z	    _createdAt,
2025-09-16T23:46:05.132687Z	    _updatedAt
2025-09-16T23:46:05.132792Z	  
2025-09-16T23:46:05.132879Z	      },
2025-09-16T23:46:05.132964Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-16T23:46:05.133101Z	    }
2025-09-16T23:46:05.133177Z	  
2025-09-16T23:46:05.133244Z	Query parameters: {
2025-09-16T23:46:05.13348Z	  limit: 4,
2025-09-16T23:46:05.133603Z	  offset: 0,
2025-09-16T23:46:05.133742Z	  targetMarket: undefined,
2025-09-16T23:46:05.133902Z	  brand: 'lem',
2025-09-16T23:46:05.134018Z	  featured: undefined
2025-09-16T23:46:05.13411Z	}
2025-09-16T23:46:05.13421Z	Products fetch result: {
2025-09-16T23:46:05.134315Z	  totalProducts: 3,
2025-09-16T23:46:05.13442Z	  fetchedProducts: 3,
2025-09-16T23:46:05.134526Z	  firstProduct: {
2025-09-16T23:46:05.134631Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-16T23:46:05.134752Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-16T23:46:05.134855Z	    _type: 'product',
2025-09-16T23:46:05.134951Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-16T23:46:05.135073Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-16T23:46:05.13539Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-16T23:46:05.135476Z	    image: null,
2025-09-16T23:46:05.135538Z	    inventory: {
2025-09-16T23:46:05.135854Z	      inStock: true,
2025-09-16T23:46:05.135939Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-16T23:46:05.136019Z	      quantity: 0,
2025-09-16T23:46:05.13626Z	      status: 'in_stock',
2025-09-16T23:46:05.136376Z	      warehouse: null
2025-09-16T23:46:05.136555Z	    },
2025-09-16T23:46:05.136723Z	    isActive: true,
2025-09-16T23:46:05.136861Z	    isFeatured: false,
2025-09-16T23:46:05.137002Z	    isNew: false,
2025-09-16T23:46:05.137101Z	    partNumber: 'la55-p',
2025-09-16T23:46:05.137196Z	    pricing: {
2025-09-16T23:46:05.137297Z	      currency: 'CNY',
2025-09-16T23:46:05.137386Z	      leadTime: null,
2025-09-16T23:46:05.137484Z	      moq: null,
2025-09-16T23:46:05.137586Z	      price: null,
2025-09-16T23:46:05.137713Z	      tiers: null
2025-09-16T23:46:05.137824Z	    },
2025-09-16T23:46:05.137946Z	    shortDescription: '电流传感器la55-p',
2025-09-16T23:46:05.138079Z	    slug: 'la55-p',
2025-09-16T23:46:05.138201Z	    title: '电流传感器la55-p'
2025-09-16T23:46:05.1383Z	  }
2025-09-16T23:46:05.1384Z	}
2025-09-16T23:46:05.138502Z	Products fetch result: {
2025-09-16T23:46:05.138602Z	  totalProducts: 3,
2025-09-16T23:46:05.138735Z	  fetchedProducts: 3,
2025-09-16T23:46:05.138842Z	  firstProduct: {
2025-09-16T23:46:05.138924Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-16T23:46:05.139041Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-16T23:46:05.139214Z	    _type: 'product',
2025-09-16T23:46:05.139343Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-16T23:46:05.139467Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-16T23:46:05.139585Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-16T23:46:05.139718Z	    image: null,
2025-09-16T23:46:05.13982Z	    inventory: {
2025-09-16T23:46:05.139918Z	      inStock: true,
2025-09-16T23:46:05.140014Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-16T23:46:05.140104Z	      quantity: 0,
2025-09-16T23:46:05.1402Z	      status: 'in_stock',
2025-09-16T23:46:05.14029Z	      warehouse: null
2025-09-16T23:46:05.140374Z	    },
2025-09-16T23:46:05.140455Z	    isActive: true,
2025-09-16T23:46:05.140563Z	    isFeatured: false,
2025-09-16T23:46:05.140653Z	    isNew: false,
2025-09-16T23:46:05.140765Z	    partNumber: 'la55-p',
2025-09-16T23:46:05.140863Z	    pricing: {
2025-09-16T23:46:05.140954Z	      currency: 'CNY',
2025-09-16T23:46:05.141038Z	      leadTime: null,
2025-09-16T23:46:05.141095Z	      moq: null,
2025-09-16T23:46:05.14122Z	      price: null,
2025-09-16T23:46:05.141309Z	      tiers: null
2025-09-16T23:46:05.141579Z	    },
2025-09-16T23:46:05.141722Z	    shortDescription: '电流传感器la55-p',
2025-09-16T23:46:05.141831Z	    slug: 'la55-p',
2025-09-16T23:46:05.141928Z	    title: '电流传感器la55-p'
2025-09-16T23:46:05.141993Z	  }
2025-09-16T23:46:05.142053Z	}
2025-09-16T23:46:05.14211Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:05.142164Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:05.142226Z	✅ [getBrandData] Found brand: LEM
2025-09-16T23:46:05.142323Z	✅ [getBrandData] Found brand: LEM
2025-09-16T23:46:05.142428Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:05.142567Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:05.142708Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:05.142821Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:05.142939Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:05.143054Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:05.143168Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:05.143276Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:05.143379Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:05.143486Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:05.143576Z	  digest: '1870762441'
2025-09-16T23:46:05.143691Z	}
2025-09-16T23:46:05.143793Z	
2025-09-16T23:46:05.143897Z	Error occurred prerendering page "/zh-CN/solutions/99999". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:05.144009Z	
2025-09-16T23:46:05.14411Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:05.144228Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:05.144436Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:05.144516Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:05.144621Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:05.14478Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:05.144858Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:05.144957Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:05.145052Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:05.145141Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:05.145267Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:05.145366Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:05.145465Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:05.145575Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:05.145697Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:46:05.145817Z	Fetching products with query: 
2025-09-16T23:46:05.145926Z	    {
2025-09-16T23:46:05.146021Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:05.146114Z	        
2025-09-16T23:46:05.146219Z	    _id,
2025-09-16T23:46:05.146316Z	    _type,
2025-09-16T23:46:05.146404Z	    partNumber,
2025-09-16T23:46:05.146469Z	    "slug": slug.current,
2025-09-16T23:46:05.146534Z	    title,
2025-09-16T23:46:05.146655Z	    shortDescription,
2025-09-16T23:46:05.146787Z	    image,
2025-09-16T23:46:05.146897Z	    brand->{
2025-09-16T23:46:05.147016Z	      name,
2025-09-16T23:46:05.147116Z	      "slug": slug.current,
2025-09-16T23:46:05.147275Z	      logo
2025-09-16T23:46:05.147376Z	    },
2025-09-16T23:46:05.147472Z	    category->{
2025-09-16T23:46:05.147596Z	      name,
2025-09-16T23:46:05.147691Z	      "slug": slug.current
2025-09-16T23:46:05.14784Z	    },
2025-09-16T23:46:05.148025Z	    pricing{
2025-09-16T23:46:05.148131Z	      currency,
2025-09-16T23:46:05.148316Z	      tiers[]{
2025-09-16T23:46:05.148479Z	        quantity,
2025-09-16T23:46:05.148642Z	        price,
2025-09-16T23:46:05.14884Z	        unit
2025-09-16T23:46:05.148986Z	      },
2025-09-16T23:46:05.149144Z	      moq,
2025-09-16T23:46:05.149246Z	      leadTime,
2025-09-16T23:46:05.149418Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:05.149613Z	      "price": tiers[0].price,
2025-09-16T23:46:05.149767Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:05.149879Z	    },
2025-09-16T23:46:05.149975Z	    inventory{
2025-09-16T23:46:05.150094Z	      quantity,
2025-09-16T23:46:05.150202Z	      status,
2025-09-16T23:46:05.150302Z	      warehouse,
2025-09-16T23:46:05.150405Z	      lastUpdated,
2025-09-16T23:46:05.150538Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:05.15064Z	      "inStock": status == "in_stock",
2025-09-16T23:46:05.150764Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:05.150886Z	    },
2025-09-16T23:46:05.150969Z	    isActive,
2025-09-16T23:46:05.151083Z	    isFeatured,
2025-09-16T23:46:05.151151Z	    isNew,
2025-09-16T23:46:05.151263Z	    _createdAt,
2025-09-16T23:46:05.151325Z	    _updatedAt
2025-09-16T23:46:05.151431Z	  
2025-09-16T23:46:05.151535Z	      },
2025-09-16T23:46:05.151646Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:46:05.151843Z	    }
2025-09-16T23:46:05.151977Z	  
2025-09-16T23:46:05.152108Z	Query parameters: {
2025-09-16T23:46:05.152266Z	  limit: 8,
2025-09-16T23:46:05.152406Z	  offset: 0,
2025-09-16T23:46:05.152558Z	  category: undefined,
2025-09-16T23:46:05.152652Z	  brand: 'qualcomm',
2025-09-16T23:46:05.152765Z	  featured: undefined
2025-09-16T23:46:05.152848Z	}
2025-09-16T23:46:05.152914Z	Fetching solutions with query: 
2025-09-16T23:46:05.152993Z	    {
2025-09-16T23:46:05.153093Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:05.153188Z	        
2025-09-16T23:46:05.153274Z	    _id,
2025-09-16T23:46:05.153341Z	    title,
2025-09-16T23:46:05.153435Z	    "slug": slug.current,
2025-09-16T23:46:05.153507Z	    summary,
2025-09-16T23:46:05.153582Z	    description,
2025-09-16T23:46:05.153668Z	    coverImage,
2025-09-16T23:46:05.153772Z	    primaryBrand->{
2025-09-16T23:46:05.153839Z	      _id,
2025-09-16T23:46:05.153938Z	      name,
2025-09-16T23:46:05.154034Z	      "slug": slug.current,
2025-09-16T23:46:05.154135Z	      logo
2025-09-16T23:46:05.154232Z	    },
2025-09-16T23:46:05.154325Z	    relatedBrands[]->{
2025-09-16T23:46:05.15443Z	      _id,
2025-09-16T23:46:05.154535Z	      name,
2025-09-16T23:46:05.154623Z	      "slug": slug.current,
2025-09-16T23:46:05.154752Z	      logo
2025-09-16T23:46:05.154865Z	    },
2025-09-16T23:46:05.154999Z	    targetMarket,
2025-09-16T23:46:05.155101Z	    complexity,
2025-09-16T23:46:05.155193Z	    publishedAt,
2025-09-16T23:46:05.155291Z	    isPublished,
2025-09-16T23:46:05.155376Z	    isFeatured,
2025-09-16T23:46:05.155472Z	    viewCount,
2025-09-16T23:46:05.155627Z	    _createdAt,
2025-09-16T23:46:05.155821Z	    _updatedAt
2025-09-16T23:46:05.155937Z	  
2025-09-16T23:46:05.156035Z	      },
2025-09-16T23:46:05.156132Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:46:05.156243Z	    }
2025-09-16T23:46:05.156439Z	  
2025-09-16T23:46:05.156626Z	Query parameters: {
2025-09-16T23:46:05.156825Z	  limit: 4,
2025-09-16T23:46:05.157001Z	  offset: 0,
2025-09-16T23:46:05.157161Z	  targetMarket: undefined,
2025-09-16T23:46:05.157328Z	  brand: 'qualcomm',
2025-09-16T23:46:05.157478Z	  featured: undefined
2025-09-16T23:46:05.15759Z	}
2025-09-16T23:46:05.157746Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:46:05.157859Z	Fetching products with query: 
2025-09-16T23:46:05.158072Z	    {
2025-09-16T23:46:05.15818Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:05.158283Z	        
2025-09-16T23:46:05.158504Z	    _id,
2025-09-16T23:46:05.158641Z	    _type,
2025-09-16T23:46:05.158794Z	    partNumber,
2025-09-16T23:46:05.158954Z	    "slug": slug.current,
2025-09-16T23:46:05.159047Z	    title,
2025-09-16T23:46:05.159198Z	    shortDescription,
2025-09-16T23:46:05.159285Z	    image,
2025-09-16T23:46:05.159386Z	    brand->{
2025-09-16T23:46:05.159536Z	      name,
2025-09-16T23:46:05.159661Z	      "slug": slug.current,
2025-09-16T23:46:05.159809Z	      logo
2025-09-16T23:46:05.159924Z	    },
2025-09-16T23:46:05.160024Z	    category->{
2025-09-16T23:46:05.160149Z	      name,
2025-09-16T23:46:05.160257Z	      "slug": slug.current
2025-09-16T23:46:05.16035Z	    },
2025-09-16T23:46:05.160449Z	    pricing{
2025-09-16T23:46:05.160546Z	      currency,
2025-09-16T23:46:05.160652Z	      tiers[]{
2025-09-16T23:46:05.160782Z	        quantity,
2025-09-16T23:46:05.160901Z	        price,
2025-09-16T23:46:05.161121Z	        unit
2025-09-16T23:46:05.161393Z	      },
2025-09-16T23:46:05.161504Z	      moq,
2025-09-16T23:46:05.161604Z	      leadTime,
2025-09-16T23:46:05.161709Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:05.161867Z	      "price": tiers[0].price,
2025-09-16T23:46:05.161952Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:05.162175Z	    },
2025-09-16T23:46:05.162279Z	    inventory{
2025-09-16T23:46:05.162554Z	      quantity,
2025-09-16T23:46:05.162799Z	      status,
2025-09-16T23:46:05.163044Z	      warehouse,
2025-09-16T23:46:05.163291Z	      lastUpdated,
2025-09-16T23:46:05.163389Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:05.163695Z	      "inStock": status == "in_stock",
2025-09-16T23:46:05.1641Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:05.164316Z	    },
2025-09-16T23:46:05.164743Z	    isActive,
2025-09-16T23:46:05.164911Z	    isFeatured,
2025-09-16T23:46:05.165231Z	    isNew,
2025-09-16T23:46:05.165528Z	    _createdAt,
2025-09-16T23:46:05.165813Z	    _updatedAt
2025-09-16T23:46:05.165914Z	  
2025-09-16T23:46:05.166024Z	      },
2025-09-16T23:46:05.166441Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:46:05.166531Z	    }
2025-09-16T23:46:05.166805Z	  
2025-09-16T23:46:05.167053Z	Query parameters: {
2025-09-16T23:46:05.167182Z	  limit: 8,
2025-09-16T23:46:05.167508Z	  offset: 0,
2025-09-16T23:46:05.167864Z	  category: undefined,
2025-09-16T23:46:05.167997Z	  brand: 'qualcomm',
2025-09-16T23:46:05.168113Z	  featured: undefined
2025-09-16T23:46:05.168224Z	}
2025-09-16T23:46:05.16833Z	Fetching solutions with query: 
2025-09-16T23:46:05.168439Z	    {
2025-09-16T23:46:05.168555Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:05.168934Z	        
2025-09-16T23:46:05.169031Z	    _id,
2025-09-16T23:46:05.16913Z	    title,
2025-09-16T23:46:05.169239Z	    "slug": slug.current,
2025-09-16T23:46:05.169349Z	    summary,
2025-09-16T23:46:05.169456Z	    description,
2025-09-16T23:46:05.169581Z	    coverImage,
2025-09-16T23:46:05.169729Z	    primaryBrand->{
2025-09-16T23:46:05.169847Z	      _id,
2025-09-16T23:46:05.169962Z	      name,
2025-09-16T23:46:05.170072Z	      "slug": slug.current,
2025-09-16T23:46:05.170195Z	      logo
2025-09-16T23:46:05.170305Z	    },
2025-09-16T23:46:05.170414Z	    relatedBrands[]->{
2025-09-16T23:46:05.170522Z	      _id,
2025-09-16T23:46:05.170639Z	      name,
2025-09-16T23:46:05.170778Z	      "slug": slug.current,
2025-09-16T23:46:05.170892Z	      logo
2025-09-16T23:46:05.170986Z	    },
2025-09-16T23:46:05.171085Z	    targetMarket,
2025-09-16T23:46:05.171185Z	    complexity,
2025-09-16T23:46:05.171297Z	    publishedAt,
2025-09-16T23:46:05.171397Z	    isPublished,
2025-09-16T23:46:05.171505Z	    isFeatured,
2025-09-16T23:46:05.171592Z	    viewCount,
2025-09-16T23:46:05.171709Z	    _createdAt,
2025-09-16T23:46:05.17181Z	    _updatedAt
2025-09-16T23:46:05.171912Z	  
2025-09-16T23:46:05.172112Z	      },
2025-09-16T23:46:05.172302Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:46:05.172454Z	    }
2025-09-16T23:46:05.172601Z	  
2025-09-16T23:46:05.172758Z	Query parameters: {
2025-09-16T23:46:05.172903Z	  limit: 4,
2025-09-16T23:46:05.173029Z	  offset: 0,
2025-09-16T23:46:05.173125Z	  targetMarket: undefined,
2025-09-16T23:46:05.173217Z	  brand: 'qualcomm',
2025-09-16T23:46:05.173334Z	  featured: undefined
2025-09-16T23:46:05.173459Z	}
2025-09-16T23:46:05.173578Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:46:05.173707Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:46:05.173795Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:05.173884Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:05.173961Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:05.174094Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:05.174201Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:05.17431Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:05.174405Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:05.174505Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:05.174605Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:05.174739Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:05.174846Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:05.174954Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:05.175259Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:05.175398Z	  digest: '1870762441'
2025-09-16T23:46:05.175505Z	}
2025-09-16T23:46:05.175602Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:05.175734Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:05.175836Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:05.17594Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:05.176044Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:05.176139Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:05.176281Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:05.176445Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:05.176569Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:05.176746Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:05.176881Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:05.177031Z	  digest: '1870762441'
2025-09-16T23:46:05.177144Z	}
2025-09-16T23:46:05.177259Z	
2025-09-16T23:46:05.177363Z	Error occurred prerendering page "/zh-CN/solutions/supplysolution". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:05.17746Z	
2025-09-16T23:46:05.177559Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:05.177661Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:05.17778Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:05.177893Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:05.17798Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:05.178082Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:05.178175Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:05.178261Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:05.178358Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:05.178452Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:05.178538Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:05.178626Z	
2025-09-16T23:46:05.178746Z	Error occurred prerendering page "/zh-CN/solutions/concrol". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:05.178841Z	
2025-09-16T23:46:05.178954Z	Error: Objects are not valid as a React child (fou✅ [getBrandData] Found brand: LEM
2025-09-16T23:46:05.179061Z	Products fetch result: {
2025-09-16T23:46:05.179155Z	  totalProducts: 3,
2025-09-16T23:46:05.17926Z	  fetchedProducts: 3,
2025-09-16T23:46:05.179352Z	  firstProduct: {
2025-09-16T23:46:05.17945Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-16T23:46:05.179566Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-16T23:46:05.179665Z	    _type: 'product',
2025-09-16T23:46:05.179799Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-16T23:46:05.179902Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-16T23:46:05.179996Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-16T23:46:05.18008Z	    image: null,
2025-09-16T23:46:05.180288Z	    inventory: {
2025-09-16T23:46:05.180596Z	      inStock: true,
2025-09-16T23:46:05.180893Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-16T23:46:05.181024Z	      quantity: 0,
2025-09-16T23:46:05.181259Z	      status: 'in_stock',
2025-09-16T23:46:05.181437Z	      warehouse: null
2025-09-16T23:46:05.181888Z	    },
2025-09-16T23:46:05.18205Z	    isActive: true,
2025-09-16T23:46:05.182238Z	    isFeatured: false,
2025-09-16T23:46:05.182384Z	    isNew: false,
2025-09-16T23:46:05.182725Z	    partNumber: 'la55-p',
2025-09-16T23:46:05.182857Z	    pricing: {
2025-09-16T23:46:05.182979Z	      currency: 'CNY',
2025-09-16T23:46:05.183093Z	      leadTime: null,
2025-09-16T23:46:05.183419Z	      moq: null,
2025-09-16T23:46:05.183653Z	      price: null,
2025-09-16T23:46:05.183838Z	      tiers: null
2025-09-16T23:46:05.183958Z	    },
2025-09-16T23:46:05.184085Z	    shortDescription: '电流传感器la55-p',
2025-09-16T23:46:05.184413Z	    slug: 'la55-p',
2025-09-16T23:46:05.184772Z	    title: '电流传感器la55-p'
2025-09-16T23:46:05.184899Z	  }
2025-09-16T23:46:05.18501Z	}
2025-09-16T23:46:05.185144Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:05.185533Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-16T23:46:05.185717Z	Fetching products with query: 
2025-09-16T23:46:05.185837Z	    {
2025-09-16T23:46:05.185955Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:05.186058Z	        
2025-09-16T23:46:05.186151Z	    _id,
2025-09-16T23:46:05.18625Z	    _type,
2025-09-16T23:46:05.186339Z	    partNumber,
2025-09-16T23:46:05.186438Z	    "slug": slug.current,
2025-09-16T23:46:05.186527Z	    title,
2025-09-16T23:46:05.186613Z	    shortDescription,
2025-09-16T23:46:05.186718Z	    image,
2025-09-16T23:46:05.186822Z	    brand->{
2025-09-16T23:46:05.186935Z	      name,
2025-09-16T23:46:05.18703Z	      "slug": slug.current,
2025-09-16T23:46:05.187117Z	      logo
2025-09-16T23:46:05.187207Z	    },
2025-09-16T23:46:05.187306Z	    category->{
2025-09-16T23:46:05.187414Z	      name,
2025-09-16T23:46:05.18751Z	      "slug": slug.current
2025-09-16T23:46:05.187601Z	    },
2025-09-16T23:46:05.187712Z	    pricing{
2025-09-16T23:46:05.187805Z	      currency,
2025-09-16T23:46:05.187891Z	      tiers[]{
2025-09-16T23:46:05.187977Z	        quantity,
2025-09-16T23:46:05.188071Z	        price,
2025-09-16T23:46:05.188158Z	        unit
2025-09-16T23:46:05.18825Z	      },
2025-09-16T23:46:05.188337Z	      moq,
2025-09-16T23:46:05.188435Z	      leadTime,
2025-09-16T23:46:05.188527Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:05.188616Z	      "price": tiers[0].price,
2025-09-16T23:46:05.188721Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:05.188826Z	    },
2025-09-16T23:46:05.188929Z	    inventory{
2025-09-16T23:46:05.189031Z	      quantity,
2025-09-16T23:46:05.189128Z	      status,
2025-09-16T23:46:05.189223Z	      warehouse,
2025-09-16T23:46:05.189322Z	      lastUpdated,
2025-09-16T23:46:05.189442Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:05.189548Z	      "inStock": status == "in_stock",
2025-09-16T23:46:05.189645Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:05.189766Z	    },
2025-09-16T23:46:05.189867Z	    isActive,
2025-09-16T23:46:05.189965Z	    isFeatured,
2025-09-16T23:46:05.190059Z	    isNew,
2025-09-16T23:46:05.190167Z	    _createdAt,
2025-09-16T23:46:05.190269Z	    _updatedAt
2025-09-16T23:46:05.190369Z	  
2025-09-16T23:46:05.190503Z	      },
2025-09-16T23:46:05.190609Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-16T23:46:05.190751Z	    }
2025-09-16T23:46:05.190901Z	  
2025-09-16T23:46:05.191082Z	Query parameters: {
2025-09-16T23:46:05.191193Z	  limit: 8,
2025-09-16T23:46:05.191294Z	  offset: 0,
2025-09-16T23:46:05.191396Z	  category: undefined,
2025-09-16T23:46:05.191518Z	  brand: 'lem',
2025-09-16T23:46:05.191628Z	  featured: undefined
2025-09-16T23:46:05.19177Z	}
2025-09-16T23:46:05.1919Z	Fetching solutions with query: 
2025-09-16T23:46:05.192013Z	    {
2025-09-16T23:46:05.192128Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:05.192234Z	        
2025-09-16T23:46:05.192343Z	    _id,
2025-09-16T23:46:05.192444Z	    title,
2025-09-16T23:46:05.192544Z	    "slug": slug.current,
2025-09-16T23:46:05.192649Z	    summary,
2025-09-16T23:46:05.192785Z	    description,
2025-09-16T23:46:05.192888Z	    coverImage,
2025-09-16T23:46:05.192988Z	    primaryBrand->{
2025-09-16T23:46:05.193104Z	      _id,
2025-09-16T23:46:05.193215Z	      name,
2025-09-16T23:46:05.193318Z	      "slug": slug.current,
2025-09-16T23:46:05.193433Z	      logo
2025-09-16T23:46:05.193537Z	    },
2025-09-16T23:46:05.193644Z	    relatedBrands[]->{
2025-09-16T23:46:05.193778Z	      _id,
2025-09-16T23:46:05.193882Z	      name,
2025-09-16T23:46:05.193978Z	      "slug": slug.current,
2025-09-16T23:46:05.19408Z	      logo
2025-09-16T23:46:05.194183Z	    },
2025-09-16T23:46:05.194282Z	    targetMarket,
2025-09-16T23:46:05.194386Z	    complexity,
2025-09-16T23:46:05.194489Z	    publishedAt,
2025-09-16T23:46:05.194604Z	    isPublished,
2025-09-16T23:46:05.195132Z	    isFeatured,
2025-09-16T23:46:05.19527Z	    viewCount,
2025-09-16T23:46:05.195514Z	    _createdAt,
2025-09-16T23:46:05.195904Z	    _updatedAt
2025-09-16T23:46:05.196068Z	  
2025-09-16T23:46:05.196617Z	      },
2025-09-16T23:46:05.196784Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-16T23:46:05.196937Z	    }
2025-09-16T23:46:05.197378Z	  
2025-09-16T23:46:05.197583Z	Query parameters: {
2025-09-16T23:46:05.197939Z	  limit: 4,
2025-09-16T23:46:05.198066Z	  offset: 0,
2025-09-16T23:46:05.198227Z	  targetMarket: undefined,
2025-09-16T23:46:05.19835Z	  brand: 'lem',
2025-09-16T23:46:05.198463Z	  featured: undefined
2025-09-16T23:46:05.19858Z	}
2025-09-16T23:46:05.198709Z	✅ [getBrandData] Found brand: LEM
2025-09-16T23:46:05.198849Z	Products fetch result: {
2025-09-16T23:46:05.198971Z	  totalProducts: 3,
2025-09-16T23:46:05.199301Z	  fetchedProducts: 3,
2025-09-16T23:46:05.199459Z	  firstProduct: {
2025-09-16T23:46:05.19958Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-16T23:46:05.199737Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-16T23:46:05.200097Z	    _type: 'product',
2025-09-16T23:46:05.200442Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-16T23:46:05.200553Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-16T23:46:05.200635Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-16T23:46:05.200939Z	    image: null,
2025-09-16T23:46:05.201285Z	    inventory: {
2025-09-16T23:46:05.201392Z	      inStock: true,
2025-09-16T23:46:05.201889Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-16T23:46:05.202Z	      quantity: 0,
2025-09-16T23:46:05.202437Z	      status: 'in_stock',
2025-09-16T23:46:05.202722Z	      warehouse: null
2025-09-16T23:46:05.202829Z	    },
2025-09-16T23:46:05.203153Z	    isActive: true,
2025-09-16T23:46:05.203447Z	    isFeatured: false,
2025-09-16T23:46:05.203629Z	    isNew: false,
2025-09-16T23:46:05.203834Z	    partNumber: 'la55-p',
2025-09-16T23:46:05.203993Z	    pricing: {
2025-09-16T23:46:05.204431Z	      currency: 'CNY',
2025-09-16T23:46:05.204845Z	      leadTime: null,
2025-09-16T23:46:05.205094Z	      moq: null,
2025-09-16T23:46:05.20534Z	      price: null,
2025-09-16T23:46:05.205588Z	      tiers: null
2025-09-16T23:46:05.205864Z	    },
2025-09-16T23:46:05.206053Z	    shortDescription: '电流传感器la55-p',
2025-09-16T23:46:05.206284Z	    slug: 'la55-p',
2025-09-16T23:46:05.206494Z	    title: '电流传感器la55-p'
2025-09-16T23:46:05.20672Z	  }
2025-09-16T23:46:05.206852Z	}
2025-09-16T23:46:05.207063Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:05.207198Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-16T23:46:05.207309Z	Fetching products with query: 
2025-09-16T23:46:05.207496Z	    {
2025-09-16T23:46:05.207888Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:05.208011Z	        
2025-09-16T23:46:05.208202Z	    _id,
2025-09-16T23:46:05.2084Z	    _type,
2025-09-16T23:46:05.208518Z	    partNumber,
2025-09-16T23:46:05.208625Z	    "slug": slug.current,
2025-09-16T23:46:05.208767Z	    title,
2025-09-16T23:46:05.208872Z	    shortDescription,
2025-09-16T23:46:05.208973Z	    image,
2025-09-16T23:46:05.209073Z	    brand->{
2025-09-16T23:46:05.209257Z	      name,
2025-09-16T23:46:05.223841Z	      "slug": slug.current,
2025-09-16T23:46:05.224424Z	      logo
2025-09-16T23:46:05.224561Z	    },
2025-09-16T23:46:05.22471Z	    category->{
2025-09-16T23:46:05.225402Z	      name,
2025-09-16T23:46:05.225819Z	      "slug": slug.current
2025-09-16T23:46:05.226935Z	    },
2025-09-16T23:46:05.227244Z	    pricing{
2025-09-16T23:46:05.227451Z	      currency,
2025-09-16T23:46:05.227623Z	      tiers[]{
2025-09-16T23:46:05.22782Z	        quantity,
2025-09-16T23:46:05.228211Z	        price,
2025-09-16T23:46:05.230109Z	        unit
2025-09-16T23:46:05.23024Z	      },
2025-09-16T23:46:05.230335Z	      moq,
2025-09-16T23:46:05.23044Z	      leadTime,
2025-09-16T23:46:05.230539Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:05.230703Z	      "price": tiers[0].price,
2025-09-16T23:46:05.230825Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:05.230929Z	    },
2025-09-16T23:46:05.231095Z	    inventory{
2025-09-16T23:46:05.231234Z	      quantity,
2025-09-16T23:46:05.231403Z	      status,
2025-09-16T23:46:05.231572Z	      warehouse,
2025-09-16T23:46:05.231737Z	      lastUpdated,
2025-09-16T23:46:05.231877Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:05.232Z	      "inStock": status == "in_stock",
2025-09-16T23:46:05.232098Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:05.232191Z	    },
2025-09-16T23:46:05.232291Z	    isActive,
2025-09-16T23:46:05.232391Z	    isFeatured,
2025-09-16T23:46:05.232479Z	    isNew,
2025-09-16T23:46:05.232566Z	    _createdAt,
2025-09-16T23:46:05.232652Z	    _updatedAt
2025-09-16T23:46:05.232817Z	  
2025-09-16T23:46:05.232974Z	      },
2025-09-16T23:46:05.233213Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-16T23:46:05.233461Z	    }
2025-09-16T23:46:05.233553Z	  
2025-09-16T23:46:05.233634Z	Query parameters: {
2025-09-16T23:46:05.233744Z	  limit: 8,
2025-09-16T23:46:05.234003Z	  offset: 0,
2025-09-16T23:46:05.234205Z	  category: undefined,
2025-09-16T23:46:05.234313Z	  brand: 'ncc',
2025-09-16T23:46:05.234446Z	  featured: undefined
2025-09-16T23:46:05.234559Z	}
2025-09-16T23:46:05.234689Z	Fetching solutions with query: 
2025-09-16T23:46:05.235456Z	    {
2025-09-16T23:46:05.235715Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:05.235966Z	        
2025-09-16T23:46:05.236197Z	    _id,
2025-09-16T23:46:05.236354Z	    title,
2025-09-16T23:46:05.236481Z	    "slug": slug.current,
2025-09-16T23:46:05.236657Z	    summary,
2025-09-16T23:46:05.237177Z	    description,
2025-09-16T23:46:05.237295Z	    coverImage,
2025-09-16T23:46:05.237407Z	    primaryBrand->{
2025-09-16T23:46:05.237513Z	      _id,
2025-09-16T23:46:05.237655Z	      name,
2025-09-16T23:46:05.237786Z	      "slug": slug.current,
2025-09-16T23:46:05.23789Z	      logo
2025-09-16T23:46:05.237986Z	    },
2025-09-16T23:46:05.238078Z	    relatedBrands[]->{
2025-09-16T23:46:05.238179Z	      _id,
2025-09-16T23:46:05.238286Z	      name,
2025-09-16T23:46:05.238383Z	      "slug": slug.current,
2025-09-16T23:46:05.238478Z	      logo
2025-09-16T23:46:05.23865Z	    },
2025-09-16T23:46:05.240271Z	    targetMarket,
2025-09-16T23:46:05.240545Z	    complexity,
2025-09-16T23:46:05.240865Z	    publishedAt,
2025-09-16T23:46:05.241139Z	    isPublished,
2025-09-16T23:46:05.241831Z	    isFeatured,
2025-09-16T23:46:05.242299Z	    viewCount,
2025-09-16T23:46:05.242622Z	    _createdAt,
2025-09-16T23:46:05.242791Z	    _updatedAt
2025-09-16T23:46:05.24328Z	  
2025-09-16T23:46:05.243648Z	      },
2025-09-16T23:46:05.243984Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-16T23:46:05.244121Z	    }
2025-09-16T23:46:05.244235Z	  
2025-09-16T23:46:05.244341Z	Query parameters: {
2025-09-16T23:46:05.244442Z	  limit: 4,
2025-09-16T23:46:05.244594Z	  offset: 0,
2025-09-16T23:46:05.244742Z	  targetMarket: undefined,
2025-09-16T23:46:05.244848Z	  brand: 'ncc',
2025-09-16T23:46:05.244943Z	  featured: undefined
2025-09-16T23:46:05.245039Z	}
2025-09-16T23:46:05.245201Z	✅ [getBrandData] Found brand: ncc
2025-09-16T23:46:05.245312Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:05.245854Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:05.246005Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-16T23:46:05.246161Z	Fetching products with query: 
2025-09-16T23:46:05.246286Z	    {
2025-09-16T23:46:05.246397Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:05.246507Z	        
2025-09-16T23:46:05.246609Z	    _id,
2025-09-16T23:46:05.246809Z	    _type,
2025-09-16T23:46:05.246933Z	    partNumber,
2025-09-16T23:46:05.247045Z	    "slug": slug.current,
2025-09-16T23:46:05.247162Z	    title,
2025-09-16T23:46:05.247275Z	    shortDescription,
2025-09-16T23:46:05.247391Z	    image,
2025-09-16T23:46:05.247512Z	    brand->{
2025-09-16T23:46:05.247624Z	      name,
2025-09-16T23:46:05.247766Z	      "slug": slug.current,
2025-09-16T23:46:05.247877Z	      logo
2025-09-16T23:46:05.247981Z	    },
2025-09-16T23:46:05.248088Z	    category->{
2025-09-16T23:46:05.248204Z	      name,
2025-09-16T23:46:05.24832Z	      "slug": slug.current
2025-09-16T23:46:05.248429Z	    },
2025-09-16T23:46:05.248547Z	    pricing{
2025-09-16T23:46:05.24866Z	      currency,
2025-09-16T23:46:05.248837Z	      tiers[]{
2025-09-16T23:46:05.248963Z	        quantity,
2025-09-16T23:46:05.249067Z	        price,
2025-09-16T23:46:05.249191Z	        unit
2025-09-16T23:46:05.249313Z	      },
2025-09-16T23:46:05.249414Z	      moq,
2025-09-16T23:46:05.249511Z	      leadTime,
2025-09-16T23:46:05.249614Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:05.249754Z	      "price": tiers[0].price,
2025-09-16T23:46:05.24988Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:05.249992Z	    },
2025-09-16T23:46:05.250123Z	    inventory{
2025-09-16T23:46:05.250242Z	      quantity,
2025-09-16T23:46:05.250358Z	      status,
2025-09-16T23:46:05.250489Z	      warehouse,
2025-09-16T23:46:05.250615Z	      lastUpdated,
2025-09-16T23:46:05.250767Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:05.250884Z	      "inStock": status == "in_stock",
2025-09-16T23:46:05.250981Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:05.251083Z	    },
2025-09-16T23:46:05.251184Z	    isActive,
2025-09-16T23:46:05.251384Z	    isFeatured,
2025-09-16T23:46:05.251527Z	    isNew,
2025-09-16T23:46:05.251651Z	    _createdAt,
2025-09-16T23:46:05.251822Z	    _updatedAt
2025-09-16T23:46:05.251934Z	  
2025-09-16T23:46:05.252034Z	      },
2025-09-16T23:46:05.252164Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-16T23:46:05.252386Z	    }
2025-09-16T23:46:05.252527Z	  
2025-09-16T23:46:05.252647Z	Query parameters: {
2025-09-16T23:46:05.252782Z	  limit: 8,
2025-09-16T23:46:05.252859Z	  offset: 0,
2025-09-16T23:46:05.252917Z	  category: undefined,
2025-09-16T23:46:05.252976Z	  brand: 'ncc',
2025-09-16T23:46:05.253032Z	  featured: undefined
2025-09-16T23:46:05.253086Z	}
2025-09-16T23:46:05.253168Z	Fetching solutions with query: 
2025-09-16T23:46:05.253261Z	    {
2025-09-16T23:46:05.253368Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:05.255241Z	        
2025-09-16T23:46:05.255413Z	    _id,
2025-09-16T23:46:05.255506Z	    title,
2025-09-16T23:46:05.25559Z	    "slug": slug.current,
2025-09-16T23:46:05.255708Z	    summary,
2025-09-16T23:46:05.255832Z	    description,
2025-09-16T23:46:05.256145Z	    coverImage,
2025-09-16T23:46:05.256333Z	    primaryBrand->{
2025-09-16T23:46:05.256495Z	      _id,
2025-09-16T23:46:05.256668Z	      name,
2025-09-16T23:46:05.256868Z	      "slug": slug.current,
2025-09-16T23:46:05.257042Z	      logo
2025-09-16T23:46:05.257204Z	    },
2025-09-16T23:46:05.257367Z	    relatedBrands[]->{
2025-09-16T23:46:05.257515Z	      _id,
2025-09-16T23:46:05.257698Z	      name,
2025-09-16T23:46:05.257869Z	      "slug": slug.current,
2025-09-16T23:46:05.258028Z	      logo
2025-09-16T23:46:05.258219Z	    },
2025-09-16T23:46:05.258401Z	    targetMarket,
2025-09-16T23:46:05.258525Z	    complexity,
2025-09-16T23:46:05.258635Z	    publishedAt,
2025-09-16T23:46:05.258782Z	    isPublished,
2025-09-16T23:46:05.258932Z	    isFeatured,
2025-09-16T23:46:05.259046Z	    viewCount,
2025-09-16T23:46:05.259543Z	    _createdAt,
2025-09-16T23:46:05.259755Z	    _updatedAt
2025-09-16T23:46:05.260004Z	  
2025-09-16T23:46:05.260252Z	      },
2025-09-16T23:46:05.260607Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-16T23:46:05.260908Z	    }
2025-09-16T23:46:05.261026Z	  
2025-09-16T23:46:05.261122Z	Query parameters: {
2025-09-16T23:46:05.261206Z	  limit: 4,
2025-09-16T23:46:05.261285Z	  offset: 0,
2025-09-16T23:46:05.263545Z	  targetMarket: undefined,
2025-09-16T23:46:05.263666Z	  brand: 'ncc',
2025-09-16T23:46:05.263801Z	  featured: undefined
2025-09-16T23:46:05.263946Z	}
2025-09-16T23:46:05.26428Z	✅ [getBrandData] Found brand: ncc
2025-09-16T23:46:05.268363Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:05.269023Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:05.269169Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:46:05.269283Z	Fetching products with query: 
2025-09-16T23:46:05.26986Z	    {
2025-09-16T23:46:05.270035Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:05.270164Z	        
2025-09-16T23:46:05.273629Z	    _id,
2025-09-16T23:46:05.274029Z	    _type,
2025-09-16T23:46:05.277978Z	    partNumber,
2025-09-16T23:46:05.27813Z	    "slug": slug.current,
2025-09-16T23:46:05.278263Z	    title,
2025-09-16T23:46:05.278633Z	    shortDescription,
2025-09-16T23:46:05.278773Z	    image,
2025-09-16T23:46:05.27889Z	    brand->{
2025-09-16T23:46:05.279001Z	      name,
2025-09-16T23:46:05.279098Z	      "slug": slug.current,
2025-09-16T23:46:05.279194Z	      logo
2025-09-16T23:46:05.279318Z	    },
2025-09-16T23:46:05.279412Z	    category->{
2025-09-16T23:46:05.280346Z	      name,
2025-09-16T23:46:05.280503Z	      "slug": slug.current
2025-09-16T23:46:05.280601Z	    },
2025-09-16T23:46:05.280708Z	    pricing{
2025-09-16T23:46:05.280809Z	      currency,
2025-09-16T23:46:05.280908Z	      tiers[]{
2025-09-16T23:46:05.281003Z	        quantity,
2025-09-16T23:46:05.2811Z	        price,
2025-09-16T23:46:05.281198Z	        unit
2025-09-16T23:46:05.281362Z	      },
2025-09-16T23:46:05.281538Z	      moq,
2025-09-16T23:46:05.281647Z	      leadTime,
2025-09-16T23:46:05.281866Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:05.281995Z	      "price": tiers[0].price,
2025-09-16T23:46:05.282161Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:05.282373Z	    },
2025-09-16T23:46:05.282654Z	    inventory{
2025-09-16T23:46:05.282939Z	      quantity,
2025-09-16T23:46:05.283059Z	      status,
2025-09-16T23:46:05.283167Z	      warehouse,
2025-09-16T23:46:05.283264Z	      lastUpdated,
2025-09-16T23:46:05.283359Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:05.283481Z	      "inStock": status == "in_stock",
2025-09-16T23:46:05.283583Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:05.283695Z	    },
2025-09-16T23:46:05.283777Z	    isActive,
2025-09-16T23:46:05.283833Z	    isFeatured,
2025-09-16T23:46:05.283896Z	    isNew,
2025-09-16T23:46:05.283967Z	    _createdAt,
2025-09-16T23:46:05.284022Z	    _updatedAt
2025-09-16T23:46:05.284081Z	  
2025-09-16T23:46:05.284138Z	      },
2025-09-16T23:46:05.284192Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:46:05.284248Z	    }
2025-09-16T23:46:05.2843Z	  
2025-09-16T23:46:05.284353Z	Query parameters: {
2025-09-16T23:46:05.28441Z	  limit: 8,
2025-09-16T23:46:05.284472Z	  offset: 0,
2025-09-16T23:46:05.284527Z	  category: undefined,
2025-09-16T23:46:05.284618Z	  brand: 'Electronicon',
2025-09-16T23:46:05.284782Z	  featured: undefined
2025-09-16T23:46:05.284856Z	}
2025-09-16T23:46:05.284915Z	Fetching solutions with query: 
2025-09-16T23:46:05.284972Z	    {
2025-09-16T23:46:05.285049Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:05.285228Z	        
2025-09-16T23:46:05.285334Z	    _id,
2025-09-16T23:46:05.285397Z	    title,
2025-09-16T23:46:05.285456Z	    "slug": slug.current,
2025-09-16T23:46:05.285541Z	    summary,
2025-09-16T23:46:05.285597Z	    description,
2025-09-16T23:46:05.285654Z	    coverImage,
2025-09-16T23:46:05.285741Z	    primaryBrand->{
2025-09-16T23:46:05.2858Z	      _id,
2025-09-16T23:46:05.285854Z	      name,
2025-09-16T23:46:05.285914Z	      "slug": slug.current,
2025-09-16T23:46:05.286029Z	      logo
2025-09-16T23:46:05.28613Z	    },
2025-09-16T23:46:05.286224Z	    relatedBrands[]->{
2025-09-16T23:46:05.286314Z	      _id,
2025-09-16T23:46:05.286403Z	      name,
2025-09-16T23:46:05.286487Z	      "slug": slug.current,
2025-09-16T23:46:05.286549Z	      logo
2025-09-16T23:46:05.286608Z	    },
2025-09-16T23:46:05.286662Z	    targetMarket,
2025-09-16T23:46:05.32412Z	    complexity,
2025-09-16T23:46:05.324298Z	    publishedAt,
2025-09-16T23:46:05.324423Z	    isPublished,
2025-09-16T23:46:05.324525Z	    isFeatured,
2025-09-16T23:46:05.32474Z	    viewCount,
2025-09-16T23:46:05.324854Z	    _createdAt,
2025-09-16T23:46:05.324957Z	    _updatedAt
2025-09-16T23:46:05.325054Z	  
2025-09-16T23:46:05.325157Z	      },
2025-09-16T23:46:05.325256Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:46:05.32536Z	    }
2025-09-16T23:46:05.325476Z	  
2025-09-16T23:46:05.325599Z	Query parameters: {
2025-09-16T23:46:05.325764Z	  limit: 4,
2025-09-16T23:46:05.325876Z	  offset: 0,
2025-09-16T23:46:05.325967Z	  targetMarket: undefined,
2025-09-16T23:46:05.32606Z	  brand: 'Electronicon',
2025-09-16T23:46:05.326154Z	  featured: undefined
2025-09-16T23:46:05.326244Z	}
2025-09-16T23:46:05.326338Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:46:05.32646Z	Products fetch result: {
2025-09-16T23:46:05.326568Z	  totalProducts: 2,
2025-09-16T23:46:05.32667Z	  fetchedProducts: 2,
2025-09-16T23:46:05.326868Z	  firstProduct: {
2025-09-16T23:46:05.326975Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:46:05.32707Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:46:05.327174Z	    _type: 'product',
2025-09-16T23:46:05.327269Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:46:05.327339Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:46:05.32742Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:46:05.327525Z	    image: null,
2025-09-16T23:46:05.327626Z	    inventory: {
2025-09-16T23:46:05.327754Z	      inStock: true,
2025-09-16T23:46:05.327864Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:46:05.327974Z	      quantity: 0,
2025-09-16T23:46:05.328087Z	      status: 'in_stock',
2025-09-16T23:46:05.328191Z	      warehouse: null
2025-09-16T23:46:05.329843Z	    },
2025-09-16T23:46:05.330042Z	    isActive: true,
2025-09-16T23:46:05.330154Z	    isFeatured: false,
2025-09-16T23:46:05.330247Z	    isNew: false,
2025-09-16T23:46:05.330347Z	    partNumber: '99999',
2025-09-16T23:46:05.330443Z	    pricing: {
2025-09-16T23:46:05.330537Z	      currency: 'CNY',
2025-09-16T23:46:05.330631Z	      leadTime: null,
2025-09-16T23:46:05.33078Z	      moq: null,
2025-09-16T23:46:05.330882Z	      price: null,
2025-09-16T23:46:05.330969Z	      tiers: null
2025-09-16T23:46:05.331058Z	    },
2025-09-16T23:46:05.331149Z	    shortDescription: null,
2025-09-16T23:46:05.331257Z	    slug: '99999',
2025-09-16T23:46:05.331358Z	    title: '99999'
2025-09-16T23:46:05.331455Z	  }
2025-09-16T23:46:05.331553Z	}
2025-09-16T23:46:05.331649Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:05.331794Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:46:05.331965Z	Fetching products with query: 
2025-09-16T23:46:05.332076Z	    {
2025-09-16T23:46:05.332173Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:05.332269Z	        
2025-09-16T23:46:05.332362Z	    _id,
2025-09-16T23:46:05.332454Z	    _type,
2025-09-16T23:46:05.332547Z	    partNumber,
2025-09-16T23:46:05.332638Z	    "slug": slug.current,
2025-09-16T23:46:05.332774Z	    title,
2025-09-16T23:46:05.33286Z	    shortDescription,
2025-09-16T23:46:05.333335Z	    image,
2025-09-16T23:46:05.333496Z	    brand->{
2025-09-16T23:46:05.333603Z	      name,
2025-09-16T23:46:05.333864Z	      "slug": slug.current,
2025-09-16T23:46:05.334105Z	      logo
2025-09-16T23:46:05.334225Z	    },
2025-09-16T23:46:05.334348Z	    category->{
2025-09-16T23:46:05.33446Z	      name,
2025-09-16T23:46:05.334563Z	      "slug": slug.current
2025-09-16T23:46:05.334656Z	    },
2025-09-16T23:46:05.334779Z	    pricing{
2025-09-16T23:46:05.334876Z	      currency,
2025-09-16T23:46:05.334968Z	      tiers[]{
2025-09-16T23:46:05.335059Z	        quantity,
2025-09-16T23:46:05.335151Z	        price,
2025-09-16T23:46:05.335238Z	        unit
2025-09-16T23:46:05.33533Z	      },
2025-09-16T23:46:05.335422Z	      moq,
2025-09-16T23:46:05.335513Z	      leadTime,
2025-09-16T23:46:05.335607Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:05.335745Z	      "price": tiers[0].price,
2025-09-16T23:46:05.335857Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:05.335956Z	    },
2025-09-16T23:46:05.336049Z	    inventory{
2025-09-16T23:46:05.336139Z	      quantity,
2025-09-16T23:46:05.336231Z	      status,
2025-09-16T23:46:05.336332Z	      warehouse,
2025-09-16T23:46:05.336917Z	      lastUpdated,
2025-09-16T23:46:05.337133Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:05.340187Z	      "inStock": status == "in_stock",
2025-09-16T23:46:05.34048Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:05.340633Z	    },
2025-09-16T23:46:05.341138Z	    isActive,
2025-09-16T23:46:05.341535Z	    isFeatured,
2025-09-16T23:46:05.341874Z	    isNew,
2025-09-16T23:46:05.342023Z	    _createdAt,
2025-09-16T23:46:05.344025Z	    _updatedAt
2025-09-16T23:46:05.344147Z	  
2025-09-16T23:46:05.344286Z	      },
2025-09-16T23:46:05.344401Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:46:05.344526Z	    }
2025-09-16T23:46:05.344637Z	  
2025-09-16T23:46:05.344776Z	Query parameters: {
2025-09-16T23:46:05.344898Z	  limit: 8,
2025-09-16T23:46:05.345019Z	  offset: 0,
2025-09-16T23:46:05.345127Z	  category: undefined,
2025-09-16T23:46:05.345243Z	  brand: 'Electronicon',
2025-09-16T23:46:05.345736Z	  featured: undefined
2025-09-16T23:46:05.345866Z	}
2025-09-16T23:46:05.345959Z	Fetching solutions with query: 
2025-09-16T23:46:05.346047Z	    {
2025-09-16T23:46:05.346134Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:05.346237Z	        
2025-09-16T23:46:05.346321Z	    _id,
2025-09-16T23:46:05.346431Z	    title,
2025-09-16T23:46:05.346607Z	    "slug": slug.current,
2025-09-16T23:46:05.346726Z	    summary,
2025-09-16T23:46:05.346816Z	    description,
2025-09-16T23:46:05.346902Z	    coverImage,
2025-09-16T23:46:05.34699Z	    primaryBrand->{
2025-09-16T23:46:05.34709Z	      _id,
2025-09-16T23:46:05.347195Z	      name,
2025-09-16T23:46:05.347331Z	      "slug": slug.current,
2025-09-16T23:46:05.347455Z	      logo
2025-09-16T23:46:05.347576Z	    },
2025-09-16T23:46:05.347702Z	    relatedBrands[]->{
2025-09-16T23:46:05.347814Z	      _id,
2025-09-16T23:46:05.348319Z	      name,
2025-09-16T23:46:05.348469Z	      "slug": slug.current,
2025-09-16T23:46:05.348586Z	      logo
2025-09-16T23:46:05.34872Z	    },
2025-09-16T23:46:05.348829Z	    targetMarket,
2025-09-16T23:46:05.34893Z	    complexity,
2025-09-16T23:46:05.34903Z	    publishedAt,
2025-09-16T23:46:05.349148Z	    isPublished,
2025-09-16T23:46:05.349251Z	    isFeatured,
2025-09-16T23:46:05.349357Z	    viewCount,
2025-09-16T23:46:05.349472Z	    _createdAt,
2025-09-16T23:46:05.34958Z	    _updatedAt
2025-09-16T23:46:05.349705Z	  
2025-09-16T23:46:05.349822Z	      },
2025-09-16T23:46:05.349926Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:46:05.350031Z	    }
2025-09-16T23:46:05.350127Z	  
2025-09-16T23:46:05.350234Z	Query parameters: {
2025-09-16T23:46:05.350475Z	  limit: 4,
2025-09-16T23:46:05.350927Z	  offset: 0,
2025-09-16T23:46:05.351292Z	  targetMarket: undefined,
2025-09-16T23:46:05.351698Z	  brand: 'Electronicon',
2025-09-16T23:46:05.351836Z	  featured: undefined
2025-09-16T23:46:05.351953Z	}
2025-09-16T23:46:05.352441Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:46:05.35276Z	Products fetch result: {
2025-09-16T23:46:05.353076Z	  totalProducts: 2,
2025-09-16T23:46:05.353192Z	  fetchedProducts: 2,
2025-09-16T23:46:05.353304Z	  firstProduct: {
2025-09-16T23:46:05.353477Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:46:05.353809Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:46:05.354031Z	    _type: 'product',
2025-09-16T23:46:05.354205Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:46:05.354887Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:46:05.355071Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:46:05.355453Z	    image: null,
2025-09-16T23:46:05.355628Z	    inventory: {
2025-09-16T23:46:05.355801Z	      inStock: true,
2025-09-16T23:46:05.355952Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:46:05.356141Z	      quantity: 0,
2025-09-16T23:46:05.356296Z	      status: 'in_stock',
2025-09-16T23:46:05.356436Z	      warehouse: null
2025-09-16T23:46:05.356602Z	    },
2025-09-16T23:46:05.356783Z	    isActive: true,
2025-09-16T23:46:05.356973Z	    isFeatured: false,
2025-09-16T23:46:05.357156Z	    isNew: false,
2025-09-16T23:46:05.357817Z	    partNumber: '99999',
2025-09-16T23:46:05.358018Z	    pricing: {
2025-09-16T23:46:05.358183Z	      currency: 'CNY',
2025-09-16T23:46:05.358309Z	      leadTime: null,
2025-09-16T23:46:05.358417Z	      moq: null,
2025-09-16T23:46:05.358519Z	      price: null,
2025-09-16T23:46:05.35863Z	      tiers: null
2025-09-16T23:46:05.358772Z	    },
2025-09-16T23:46:05.35888Z	    shortDescription: null,
2025-09-16T23:46:05.358988Z	    slug: '99999',
2025-09-16T23:46:05.359096Z	    title: '99999'
2025-09-16T23:46:05.359201Z	  }
2025-09-16T23:46:05.359338Z	}
2025-09-16T23:46:05.359448Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:05.35956Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-16T23:46:05.359699Z	Fetching products with query: 
2025-09-16T23:46:05.359825Z	    {
2025-09-16T23:46:05.359929Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:05.360035Z	        
2025-09-16T23:46:05.360135Z	    _id,
2025-09-16T23:46:05.360242Z	    _type,
2025-09-16T23:46:05.360342Z	    partNumber,
2025-09-16T23:46:05.360459Z	    "slug": slug.current,
2025-09-16T23:46:05.36057Z	    title,
2025-09-16T23:46:05.360688Z	    shortDescription,
2025-09-16T23:46:05.360813Z	    image,
2025-09-16T23:46:05.360919Z	    brand->{
2025-09-16T23:46:05.361017Z	      name,
2025-09-16T23:46:05.361119Z	      "slug": slug.current,
2025-09-16T23:46:05.361218Z	      logo
2025-09-16T23:46:05.361319Z	    },
2025-09-16T23:46:05.361422Z	    category->{
2025-09-16T23:46:05.361516Z	      name,
2025-09-16T23:46:05.361605Z	      "slug": slug.current
2025-09-16T23:46:05.361732Z	    },
2025-09-16T23:46:05.361828Z	    pricing{
2025-09-16T23:46:05.361942Z	      currency,
2025-09-16T23:46:05.362053Z	      tiers[]{
2025-09-16T23:46:05.362185Z	        quantity,
2025-09-16T23:46:05.363159Z	        price,
2025-09-16T23:46:05.363297Z	        unit
2025-09-16T23:46:05.363411Z	      },
2025-09-16T23:46:05.363517Z	      moq,
2025-09-16T23:46:05.363634Z	      leadTime,
2025-09-16T23:46:05.363763Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:05.363895Z	      "price": tiers[0].price,
2025-09-16T23:46:05.364025Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:05.364159Z	    },
2025-09-16T23:46:05.364281Z	    inventory{
2025-09-16T23:46:05.364388Z	      quantity,
2025-09-16T23:46:05.364495Z	      status,
2025-09-16T23:46:05.364609Z	      warehouse,
2025-09-16T23:46:05.364747Z	      lastUpdated,
2025-09-16T23:46:05.364869Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:05.365007Z	      "inStock": status == "in_stock",
2025-09-16T23:46:05.365136Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:05.36632Z	    },
2025-09-16T23:46:05.366508Z	    isActive,
2025-09-16T23:46:05.366626Z	    isFeatured,
2025-09-16T23:46:05.367588Z	    isNew,
2025-09-16T23:46:05.36817Z	    _createdAt,
2025-09-16T23:46:05.368282Z	    _updatedAt
2025-09-16T23:46:05.368343Z	  
2025-09-16T23:46:05.368411Z	      },
2025-09-16T23:46:05.368469Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-16T23:46:05.368533Z	    }
2025-09-16T23:46:05.368601Z	  
2025-09-16T23:46:05.368659Z	Query parameters: {
2025-09-16T23:46:05.368795Z	  limit: 8,
2025-09-16T23:46:05.368861Z	  offset: 0,
2025-09-16T23:46:05.369117Z	  category: undefined,
2025-09-16T23:46:05.369223Z	  brand: 'mediatek',
2025-09-16T23:46:05.369316Z	  featured: undefined
2025-09-16T23:46:05.369419Z	}
2025-09-16T23:46:05.369516Z	Fetching solutions with query: 
2025-09-16T23:46:05.369607Z	    {
2025-09-16T23:46:05.369728Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:05.369833Z	        
2025-09-16T23:46:05.370004Z	    _id,
2025-09-16T23:46:05.370192Z	    title,
2025-09-16T23:46:05.370317Z	    "slug": slug.current,
2025-09-16T23:46:05.370492Z	    summary,
2025-09-16T23:46:05.371752Z	    description,
2025-09-16T23:46:05.371918Z	    coverImage,
2025-09-16T23:46:05.372069Z	    primaryBrand->{
2025-09-16T23:46:05.372303Z	      _id,
2025-09-16T23:46:05.372513Z	      name,
2025-09-16T23:46:05.372708Z	      "slug": slug.current,
2025-09-16T23:46:05.373341Z	      logo
2025-09-16T23:46:05.373509Z	    },
2025-09-16T23:46:05.373644Z	    relatedBrands[]->{
2025-09-16T23:46:05.373795Z	      _id,
2025-09-16T23:46:05.373911Z	      name,
2025-09-16T23:46:05.374018Z	      "slug": slug.current,
2025-09-16T23:46:05.374128Z	      logo
2025-09-16T23:46:05.374277Z	    },
2025-09-16T23:46:05.374996Z	    targetMarket,
2025-09-16T23:46:05.375333Z	    complexity,
2025-09-16T23:46:05.375458Z	    publishedAt,
2025-09-16T23:46:05.375554Z	    isPublished,
2025-09-16T23:46:05.375641Z	    isFeatured,
2025-09-16T23:46:05.424534Z	    viewCount,
2025-09-16T23:46:05.424995Z	    _createdAt,
2025-09-16T23:46:05.425279Z	    _updatedAt
2025-09-16T23:46:05.425499Z	  
2025-09-16T23:46:05.425697Z	      },
2025-09-16T23:46:05.426047Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-16T23:46:05.426382Z	    }
2025-09-16T23:46:05.426768Z	  
2025-09-16T23:46:05.426936Z	Query parameters: {
2025-09-16T23:46:05.427057Z	  limit: 4,
2025-09-16T23:46:05.427163Z	  offset: 0,
2025-09-16T23:46:05.42726Z	  targetMarket: undefined,
2025-09-16T23:46:05.427367Z	  brand: 'mediatek',
2025-09-16T23:46:05.427492Z	  featured: undefined
2025-09-16T23:46:05.427598Z	}
2025-09-16T23:46:05.427718Z	✅ [getBrandData] Found brand: MediaTek
2025-09-16T23:46:05.427829Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:05.428299Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:05.428985Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-16T23:46:05.429138Z	Fetching products with query: 
2025-09-16T23:46:05.429249Z	    {
2025-09-16T23:46:05.429351Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:05.430488Z	        
2025-09-16T23:46:05.430617Z	    _id,
2025-09-16T23:46:05.430758Z	    _type,
2025-09-16T23:46:05.431078Z	    partNumber,
2025-09-16T23:46:05.431254Z	    "slug": slug.current,
2025-09-16T23:46:05.431408Z	    title,
2025-09-16T23:46:05.431524Z	    shortDescription,
2025-09-16T23:46:05.431682Z	    image,
2025-09-16T23:46:05.431835Z	    brand->{
2025-09-16T23:46:05.431984Z	      name,
2025-09-16T23:46:05.432127Z	      "slug": slug.current,
2025-09-16T23:46:05.432258Z	      logo
2025-09-16T23:46:05.432397Z	    },
2025-09-16T23:46:05.432519Z	    category->{
2025-09-16T23:46:05.432658Z	      name,
2025-09-16T23:46:05.432823Z	      "slug": slug.current
2025-09-16T23:46:05.432971Z	    },
2025-09-16T23:46:05.433115Z	    pricing{
2025-09-16T23:46:05.433325Z	      currency,
2025-09-16T23:46:05.433507Z	      tiers[]{
2025-09-16T23:46:05.433656Z	        quantity,
2025-09-16T23:46:05.43382Z	        price,
2025-09-16T23:46:05.433951Z	        unit
2025-09-16T23:46:05.434063Z	      },
2025-09-16T23:46:05.434165Z	      moq,
2025-09-16T23:46:05.434292Z	      leadTime,
2025-09-16T23:46:05.434483Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:05.434617Z	      "price": tiers[0].price,
2025-09-16T23:46:05.43477Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:05.434877Z	    },
2025-09-16T23:46:05.434975Z	    inventory{
2025-09-16T23:46:05.435077Z	      quantity,
2025-09-16T23:46:05.435185Z	      status,
2025-09-16T23:46:05.435312Z	      warehouse,
2025-09-16T23:46:05.435453Z	      lastUpdated,
2025-09-16T23:46:05.435631Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:05.435835Z	      "inStock": status == "in_stock",
2025-09-16T23:46:05.435966Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:05.43607Z	    },
2025-09-16T23:46:05.436166Z	    isActive,
2025-09-16T23:46:05.436288Z	    isFeatured,
2025-09-16T23:46:05.436439Z	    isNew,
2025-09-16T23:46:05.436558Z	    _createdAt,
2025-09-16T23:46:05.436727Z	    _updatedAt
2025-09-16T23:46:05.436872Z	  
2025-09-16T23:46:05.437012Z	      },
2025-09-16T23:46:05.437123Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-16T23:46:05.437286Z	    }
2025-09-16T23:46:05.437633Z	  
2025-09-16T23:46:05.437814Z	Query parameters: {
2025-09-16T23:46:05.437928Z	  limit: 8,
2025-09-16T23:46:05.438431Z	  offset: 0,
2025-09-16T23:46:05.438577Z	  category: undefined,
2025-09-16T23:46:05.438718Z	  brand: 'mediatek',
2025-09-16T23:46:05.438835Z	  featured: undefined
2025-09-16T23:46:05.438939Z	}
2025-09-16T23:46:05.439056Z	Fetching solutions with query: 
2025-09-16T23:46:05.439159Z	    {
2025-09-16T23:46:05.439282Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:05.439417Z	        
2025-09-16T23:46:05.439559Z	    _id,
2025-09-16T23:46:05.439697Z	    title,
2025-09-16T23:46:05.439821Z	    "slug": slug.current,
2025-09-16T23:46:05.439928Z	    summary,
2025-09-16T23:46:05.440033Z	    description,
2025-09-16T23:46:05.440138Z	    coverImage,
2025-09-16T23:46:05.440593Z	    primaryBrand->{
2025-09-16T23:46:05.440925Z	      _id,
2025-09-16T23:46:05.441224Z	      name,
2025-09-16T23:46:05.441303Z	      "slug": slug.current,
2025-09-16T23:46:05.44136Z	      logo
2025-09-16T23:46:05.441415Z	    },
2025-09-16T23:46:05.441473Z	    relatedBrands[]->{
2025-09-16T23:46:05.441527Z	      _id,
2025-09-16T23:46:05.441583Z	      name,
2025-09-16T23:46:05.441651Z	      "slug": slug.current,
2025-09-16T23:46:05.441767Z	      logo
2025-09-16T23:46:05.441872Z	    },
2025-09-16T23:46:05.441964Z	    targetMarket,
2025-09-16T23:46:05.442056Z	    complexity,
2025-09-16T23:46:05.442155Z	    publishedAt,
2025-09-16T23:46:05.442246Z	    isPublished,
2025-09-16T23:46:05.442337Z	    isFeatured,
2025-09-16T23:46:05.442442Z	    viewCount,
2025-09-16T23:46:05.442543Z	    _createdAt,
2025-09-16T23:46:05.442638Z	    _updatedAt
2025-09-16T23:46:05.442785Z	  
2025-09-16T23:46:05.442901Z	      },
2025-09-16T23:46:05.443023Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-16T23:46:05.443136Z	    }
2025-09-16T23:46:05.443242Z	  
2025-09-16T23:46:05.443345Z	Query parameters: {
2025-09-16T23:46:05.443441Z	  limit: 4,
2025-09-16T23:46:05.443543Z	  offset: 0,
2025-09-16T23:46:05.443645Z	  targetMarket: undefined,
2025-09-16T23:46:05.443817Z	  brand: 'mediatek',
2025-09-16T23:46:05.443963Z	  featured: undefined
2025-09-16T23:46:05.444075Z	}
2025-09-16T23:46:05.444182Z	✅ [getBrandData] Found brand: MediaTek
2025-09-16T23:46:05.444288Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:05.444385Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:05.444474Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:46:05.444574Z	Fetching products with query: 
2025-09-16T23:46:05.444697Z	    {
2025-09-16T23:46:05.444818Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:05.444927Z	        
2025-09-16T23:46:05.445039Z	    _id,
2025-09-16T23:46:05.445143Z	    _type,
2025-09-16T23:46:05.44524Z	    partNumber,
2025-09-16T23:46:05.445335Z	    "slug": slug.current,
2025-09-16T23:46:05.445446Z	    title,
2025-09-16T23:46:05.445557Z	    shortDescription,
2025-09-16T23:46:05.445666Z	    image,
2025-09-16T23:46:05.44582Z	    brand->{
2025-09-16T23:46:05.445927Z	      name,
2025-09-16T23:46:05.446041Z	      "slug": slug.current,
2025-09-16T23:46:05.44615Z	      logo
2025-09-16T23:46:05.446308Z	    },
2025-09-16T23:46:05.446419Z	    category->{
2025-09-16T23:46:05.446614Z	      name,
2025-09-16T23:46:05.446741Z	      "slug": slug.current
2025-09-16T23:46:05.446819Z	    },
2025-09-16T23:46:05.446879Z	    pricing{
2025-09-16T23:46:05.446936Z	      currency,
2025-09-16T23:46:05.446992Z	      tiers[]{
2025-09-16T23:46:05.447046Z	        quantity,
2025-09-16T23:46:05.447099Z	        price,
2025-09-16T23:46:05.447152Z	        unit
2025-09-16T23:46:05.447208Z	      },
2025-09-16T23:46:05.447269Z	      moq,
2025-09-16T23:46:05.447323Z	      leadTime,
2025-09-16T23:46:05.447378Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:05.447435Z	      "price": tiers[0].price,
2025-09-16T23:46:05.447493Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:05.447548Z	    },
2025-09-16T23:46:05.447602Z	    inventory{
2025-09-16T23:46:05.44766Z	      quantity,
2025-09-16T23:46:05.447796Z	      status,
2025-09-16T23:46:05.447965Z	      warehouse,
2025-09-16T23:46:05.448168Z	      lastUpdated,
2025-09-16T23:46:05.448367Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:05.448615Z	      "inStock": status == "in_stock",
2025-09-16T23:46:05.448864Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:05.448985Z	    },
2025-09-16T23:46:05.449086Z	    isActive,
2025-09-16T23:46:05.44932Z	    isFeatured,
2025-09-16T23:46:05.449529Z	    isNew,
2025-09-16T23:46:05.449658Z	    _createdAt,
2025-09-16T23:46:05.449794Z	    _updatedAt
2025-09-16T23:46:05.449897Z	  
2025-09-16T23:46:05.450022Z	      },
2025-09-16T23:46:05.450136Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:46:05.450243Z	    }
2025-09-16T23:46:05.450339Z	  
2025-09-16T23:46:05.450434Z	Query parameters: {
2025-09-16T23:46:05.450827Z	  limit: 8,
2025-09-16T23:46:05.451042Z	  offset: 0,
2025-09-16T23:46:05.451195Z	  category: undefined,
2025-09-16T23:46:05.45131Z	  brand: 'cree',
2025-09-16T23:46:05.451418Z	  featured: undefined
2025-09-16T23:46:05.45153Z	}
2025-09-16T23:46:05.451815Z	Fetching solutions with query: 
2025-09-16T23:46:05.452068Z	    {
2025-09-16T23:46:05.452215Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:05.452354Z	        
2025-09-16T23:46:05.452466Z	    _id,
2025-09-16T23:46:05.452573Z	    title,
2025-09-16T23:46:05.452706Z	    "slug": slug.current,
2025-09-16T23:46:05.453096Z	    summary,
2025-09-16T23:46:05.453226Z	    description,
2025-09-16T23:46:05.453331Z	    coverImage,
2025-09-16T23:46:05.453543Z	    primaryBrand->{
2025-09-16T23:46:05.453652Z	      _id,
2025-09-16T23:46:05.453954Z	      name,
2025-09-16T23:46:05.454818Z	      "slug": slug.current,
2025-09-16T23:46:05.454971Z	      logo
2025-09-16T23:46:05.455112Z	    },
2025-09-16T23:46:05.455279Z	    relatedBrands[]->{
2025-09-16T23:46:05.455433Z	      _id,
2025-09-16T23:46:05.455557Z	      name,
2025-09-16T23:46:05.4558Z	      "slug": slug.current,
2025-09-16T23:46:05.455929Z	      logo
2025-09-16T23:46:05.456052Z	    },
2025-09-16T23:46:05.456159Z	    targetMarket,
2025-09-16T23:46:05.456268Z	    complexity,
2025-09-16T23:46:05.456381Z	    publishedAt,
2025-09-16T23:46:05.456533Z	    isPublished,
2025-09-16T23:46:05.456649Z	    isFeatured,
2025-09-16T23:46:05.456833Z	    viewCount,
2025-09-16T23:46:05.456963Z	    _createdAt,
2025-09-16T23:46:05.457071Z	    _updatedAt
2025-09-16T23:46:05.457178Z	  
2025-09-16T23:46:05.457283Z	      },
2025-09-16T23:46:05.457424Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:46:05.457583Z	    }
2025-09-16T23:46:05.457841Z	  
2025-09-16T23:46:05.457985Z	Query parameters: {
2025-09-16T23:46:05.458174Z	  limit: 4,
2025-09-16T23:46:05.458307Z	  offset: 0,
2025-09-16T23:46:05.458599Z	  targetMarket: undefined,
2025-09-16T23:46:05.458772Z	  brand: 'cree',
2025-09-16T23:46:05.45889Z	  featured: undefined
2025-09-16T23:46:05.459Z	}
2025-09-16T23:46:05.459103Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:46:05.459299Z	Products fetch result: {
2025-09-16T23:46:05.459461Z	  totalProducts: 4,
2025-09-16T23:46:05.459632Z	  fetchedProducts: 4,
2025-09-16T23:46:05.459841Z	  firstProduct: {
2025-09-16T23:46:05.459963Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:46:05.460099Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:46:05.460225Z	    _type: 'product',
2025-09-16T23:46:05.460343Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:46:05.460472Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:46:05.460593Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:05.460759Z	    image: null,
2025-09-16T23:46:05.460902Z	    inventory: {
2025-09-16T23:46:05.461055Z	      inStock: true,
2025-09-16T23:46:05.461195Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:46:05.461322Z	      quantity: 0,
2025-09-16T23:46:05.461487Z	      status: 'in_stock',
2025-09-16T23:46:05.461626Z	      warehouse: null
2025-09-16T23:46:05.461773Z	    },
2025-09-16T23:46:05.461893Z	    isActive: true,
2025-09-16T23:46:05.462026Z	    isFeatured: false,
2025-09-16T23:46:05.462154Z	    isNew: false,
2025-09-16T23:46:05.462273Z	    partNumber: '11111',
2025-09-16T23:46:05.46238Z	    pricing: {
2025-09-16T23:46:05.462443Z	      currency: 'CNY',
2025-09-16T23:46:05.462499Z	      leadTime: null,
2025-09-16T23:46:05.462592Z	      moq: null,
2025-09-16T23:46:05.462719Z	      price: null,
2025-09-16T23:46:05.462828Z	      tiers: null
2025-09-16T23:46:05.46294Z	    },
2025-09-16T23:46:05.463047Z	    shortDescription: '11111',
2025-09-16T23:46:05.463187Z	    slug: 'sic mosfet',
2025-09-16T23:46:05.463325Z	    title: '111111'
2025-09-16T23:46:05.463463Z	  }
2025-09-16T23:46:05.463621Z	}
2025-09-16T23:46:05.46379Z	Solutions fetch result: {
2025-09-16T23:46:05.463912Z	  totalSolutions: 6,
2025-09-16T23:46:05.464093Z	  fetchedSolutions: 4,
2025-09-16T23:46:05.464247Z	  firstSolution: {
2025-09-16T23:46:05.464389Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:46:05.46455Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:46:05.46475Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:46:05.464872Z	    complexity: 'medium',
2025-09-16T23:46:05.464974Z	    coverImage: null,
2025-09-16T23:46:05.465071Z	    description: [ [Object] ],
2025-09-16T23:46:05.465159Z	    isFeatured: false,
2025-09-16T23:46:05.465244Z	    isPublished: true,
2025-09-16T23:46:05.465347Z	    primaryBrand: {
2025-09-16T23:46:05.465451Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:46:05.465553Z	      logo: null,
2025-09-16T23:46:05.465667Z	      name: 'CREE',
2025-09-16T23:46:05.465799Z	      slug: 'cree'
2025-09-16T23:46:05.465939Z	    },
2025-09-16T23:46:05.466077Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:46:05.466637Z	    relatedBrands: null,
2025-09-16T23:46:05.466951Z	    slug: '11111',
2025-09-16T23:46:05.467115Z	    summary: '11111',
2025-09-16T23:46:05.467482Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:05.467615Z	    title: '11111',
2025-09-16T23:46:05.467784Z	    viewCount: 0
2025-09-16T23:46:05.46791Z	  }
2025-09-16T23:46:05.468032Z	}
2025-09-16T23:46:05.468176Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:46:05.468317Z	Fetching products with query: 
2025-09-16T23:46:05.468484Z	    {
2025-09-16T23:46:05.468606Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:05.468694Z	        
2025-09-16T23:46:05.468788Z	    _id,
2025-09-16T23:46:05.468881Z	    _type,
2025-09-16T23:46:05.468994Z	    partNumber,
2025-09-16T23:46:05.46911Z	    "slug": slug.current,
2025-09-16T23:46:05.469227Z	    title,
2025-09-16T23:46:05.469345Z	    shortDescription,
2025-09-16T23:46:05.469456Z	    image,
2025-09-16T23:46:05.469554Z	    brand->{
2025-09-16T23:46:05.469655Z	      name,
2025-09-16T23:46:05.46977Z	      "slug": slug.current,
2025-09-16T23:46:05.469867Z	      logo
2025-09-16T23:46:05.469961Z	    },
2025-09-16T23:46:05.47006Z	    category->{
2025-09-16T23:46:05.470189Z	      name,
2025-09-16T23:46:05.470308Z	      "slug": slug.current
2025-09-16T23:46:05.47046Z	    },
2025-09-16T23:46:05.470666Z	    pricing{
2025-09-16T23:46:05.470847Z	      currency,
2025-09-16T23:46:05.470954Z	      tiers[]{
2025-09-16T23:46:05.471123Z	        quantity,
2025-09-16T23:46:05.471226Z	        price,
2025-09-16T23:46:05.47133Z	        unit
2025-09-16T23:46:05.471423Z	      },
2025-09-16T23:46:05.471533Z	      moq,
2025-09-16T23:46:05.471631Z	      leadTime,
2025-09-16T23:46:05.472697Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:05.472988Z	      "price": tiers[0].price,
2025-09-16T23:46:05.473136Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:05.473659Z	    },
2025-09-16T23:46:05.473819Z	    inventory{
2025-09-16T23:46:05.473935Z	      quantity,
2025-09-16T23:46:05.474042Z	      status,
2025-09-16T23:46:05.477994Z	      warehouse,
2025-09-16T23:46:05.478138Z	      lastUpdated,
2025-09-16T23:46:05.524337Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:05.524724Z	      "inStock": status == "in_stock",
2025-09-16T23:46:05.525297Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:05.525524Z	    },
2025-09-16T23:46:05.525713Z	    isActive,
2025-09-16T23:46:05.525887Z	    isFeatured,
2025-09-16T23:46:05.526055Z	    isNew,
2025-09-16T23:46:05.526229Z	    _createdAt,
2025-09-16T23:46:05.526434Z	    _updatedAt
2025-09-16T23:46:05.52661Z	  
2025-09-16T23:46:05.526896Z	      },
2025-09-16T23:46:05.527048Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:46:05.527229Z	    }
2025-09-16T23:46:05.527448Z	  
2025-09-16T23:46:05.527771Z	Query parameters: {
2025-09-16T23:46:05.528043Z	  limit: 8,
2025-09-16T23:46:05.528299Z	  offset: 0,
2025-09-16T23:46:05.529272Z	  category: undefined,
2025-09-16T23:46:05.529709Z	  brand: 'cree',
2025-09-16T23:46:05.530048Z	  featured: undefined
2025-09-16T23:46:05.530183Z	}
2025-09-16T23:46:05.530287Z	Fetching solutions with query: 
2025-09-16T23:46:05.530398Z	    {
2025-09-16T23:46:05.530504Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:05.530613Z	        
2025-09-16T23:46:05.53073Z	    _id,
2025-09-16T23:46:05.530844Z	    title,
2025-09-16T23:46:05.530937Z	    "slug": slug.current,
2025-09-16T23:46:05.531024Z	    summary,
2025-09-16T23:46:05.531112Z	    description,
2025-09-16T23:46:05.53121Z	    coverImage,
2025-09-16T23:46:05.531299Z	    primaryBrand->{
2025-09-16T23:46:05.531407Z	      _id,
2025-09-16T23:46:05.531511Z	      name,
2025-09-16T23:46:05.531607Z	      "slug": slug.current,
2025-09-16T23:46:05.531714Z	      logo
2025-09-16T23:46:05.531815Z	    },
2025-09-16T23:46:05.53191Z	    relatedBrands[]->{
2025-09-16T23:46:05.532004Z	      _id,
2025-09-16T23:46:05.532111Z	      name,
2025-09-16T23:46:05.532205Z	      "slug": slug.current,
2025-09-16T23:46:05.532299Z	      logo
2025-09-16T23:46:05.532406Z	    },
2025-09-16T23:46:05.532497Z	    targetMarket,
2025-09-16T23:46:05.53259Z	    complexity,
2025-09-16T23:46:05.532743Z	    publishedAt,
2025-09-16T23:46:05.532872Z	    isPublished,
2025-09-16T23:46:05.532972Z	    isFeatured,
2025-09-16T23:46:05.533071Z	    viewCount,
2025-09-16T23:46:05.533165Z	    _createdAt,
2025-09-16T23:46:05.533259Z	    _updatedAt
2025-09-16T23:46:05.533368Z	  
2025-09-16T23:46:05.533465Z	      },
2025-09-16T23:46:05.533574Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:46:05.533688Z	    }
2025-09-16T23:46:05.534042Z	  
2025-09-16T23:46:05.534187Z	Query parameters: {
2025-09-16T23:46:05.534298Z	  limit: 4,
2025-09-16T23:46:05.534416Z	  offset: 0,
2025-09-16T23:46:05.534522Z	  targetMarket: undefined,
2025-09-16T23:46:05.534621Z	  brand: 'cree',
2025-09-16T23:46:05.534745Z	  featured: undefined
2025-09-16T23:46:05.534852Z	}
2025-09-16T23:46:05.534952Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:46:05.535055Z	Products fetch result: {
2025-09-16T23:46:05.535153Z	  totalProducts: 4,
2025-09-16T23:46:05.535244Z	  fetchedProducts: 4,
2025-09-16T23:46:05.535414Z	  firstProduct: {
2025-09-16T23:46:05.535696Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:46:05.53589Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:46:05.536037Z	    _type: 'product',
2025-09-16T23:46:05.53632Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:46:05.536478Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:46:05.536605Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:05.537118Z	    image: null,
2025-09-16T23:46:05.537255Z	    inventory: {
2025-09-16T23:46:05.538517Z	      inStock: true,
2025-09-16T23:46:05.538639Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:46:05.53879Z	      quantity: 0,
2025-09-16T23:46:05.538903Z	      status: 'in_stock',
2025-09-16T23:46:05.539007Z	      warehouse: null
2025-09-16T23:46:05.539112Z	    },
2025-09-16T23:46:05.539213Z	    isActive: true,
2025-09-16T23:46:05.539342Z	    isFeatured: false,
2025-09-16T23:46:05.539448Z	    isNew: false,
2025-09-16T23:46:05.539557Z	    partNumber: '11111',
2025-09-16T23:46:05.539667Z	    pricing: {
2025-09-16T23:46:05.53982Z	      currency: 'CNY',
2025-09-16T23:46:05.539934Z	      leadTime: null,
2025-09-16T23:46:05.540084Z	      moq: null,
2025-09-16T23:46:05.540283Z	      price: null,
2025-09-16T23:46:05.540481Z	      tiers: null
2025-09-16T23:46:05.540781Z	    },
2025-09-16T23:46:05.54089Z	    shortDescription: '11111',
2025-09-16T23:46:05.540976Z	    slug: 'sic mosfet',
2025-09-16T23:46:05.541126Z	    title: '111111'
2025-09-16T23:46:05.541212Z	  }
2025-09-16T23:46:05.541296Z	}
2025-09-16T23:46:05.541382Z	Solutions fetch result: {
2025-09-16T23:46:05.541483Z	  totalSolutions: 6,
2025-09-16T23:46:05.541605Z	  fetchedSolutions: 4,
2025-09-16T23:46:05.542173Z	  firstSolution: {
2025-09-16T23:46:05.542317Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:46:05.542444Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:46:05.542553Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:46:05.542656Z	    complexity: 'medium',
2025-09-16T23:46:05.542797Z	    coverImage: null,
2025-09-16T23:46:05.542926Z	    description: [ [Object] ],
2025-09-16T23:46:05.543027Z	    isFeatured: false,
2025-09-16T23:46:05.543185Z	    isPublished: true,
2025-09-16T23:46:05.543348Z	    primaryBrand: {
2025-09-16T23:46:05.543484Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:46:05.543593Z	      logo: null,
2025-09-16T23:46:05.543718Z	      name: 'CREE',
2025-09-16T23:46:05.543891Z	      slug: 'cree'
2025-09-16T23:46:05.544009Z	    },
2025-09-16T23:46:05.544301Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:46:05.544602Z	    relatedBrands: null,
2025-09-16T23:46:05.544768Z	    slug: '11111',
2025-09-16T23:46:05.544967Z	    summary: '11111',
2025-09-16T23:46:05.545491Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:05.545636Z	    title: '11111',
2025-09-16T23:46:05.546695Z	    viewCount: 0
2025-09-16T23:46:05.547146Z	  }
2025-09-16T23:46:05.547965Z	}
2025-09-16T23:46:05.548143Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-16T23:46:05.548257Z	Fetching products with query: 
2025-09-16T23:46:05.54837Z	    {
2025-09-16T23:46:05.5485Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:05.548619Z	        
2025-09-16T23:46:05.548752Z	    _id,
2025-09-16T23:46:05.548851Z	    _type,
2025-09-16T23:46:05.548943Z	    partNumber,
2025-09-16T23:46:05.54904Z	    "slug": slug.current,
2025-09-16T23:46:05.549141Z	    title,
2025-09-16T23:46:05.549242Z	    shortDescription,
2025-09-16T23:46:05.549338Z	    image,
2025-09-16T23:46:05.549771Z	    brand->{
2025-09-16T23:46:05.550246Z	      name,
2025-09-16T23:46:05.550424Z	      "slug": slug.current,
2025-09-16T23:46:05.550552Z	      logo
2025-09-16T23:46:05.55067Z	    },
2025-09-16T23:46:05.550813Z	    category->{
2025-09-16T23:46:05.550926Z	      name,
2025-09-16T23:46:05.551033Z	      "slug": slug.current
2025-09-16T23:46:05.551139Z	    },
2025-09-16T23:46:05.551242Z	    pricing{
2025-09-16T23:46:05.551425Z	      currency,
2025-09-16T23:46:05.551535Z	      tiers[]{
2025-09-16T23:46:05.551643Z	        quantity,
2025-09-16T23:46:05.551768Z	        price,
2025-09-16T23:46:05.551874Z	        unit
2025-09-16T23:46:05.551972Z	      },
2025-09-16T23:46:05.552073Z	      moq,
2025-09-16T23:46:05.552178Z	      leadTime,
2025-09-16T23:46:05.552283Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:05.552405Z	      "price": tiers[0].price,
2025-09-16T23:46:05.552519Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:05.552626Z	    },
2025-09-16T23:46:05.552789Z	    inventory{
2025-09-16T23:46:05.552907Z	      quantity,
2025-09-16T23:46:05.553024Z	      status,
2025-09-16T23:46:05.55313Z	      warehouse,
2025-09-16T23:46:05.553248Z	      lastUpdated,
2025-09-16T23:46:05.553377Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:05.553497Z	      "inStock": status == "in_stock",
2025-09-16T23:46:05.553625Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:05.553771Z	    },
2025-09-16T23:46:05.553897Z	    isActive,
2025-09-16T23:46:05.554019Z	    isFeatured,
2025-09-16T23:46:05.554131Z	    isNew,
2025-09-16T23:46:05.554246Z	    _createdAt,
2025-09-16T23:46:05.554403Z	    _updatedAt
2025-09-16T23:46:05.554524Z	  
2025-09-16T23:46:05.554629Z	      },
2025-09-16T23:46:05.554751Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-16T23:46:05.55487Z	    }
2025-09-16T23:46:05.554974Z	  
2025-09-16T23:46:05.555074Z	Query parameters: {
2025-09-16T23:46:05.555173Z	  limit: 8,
2025-09-16T23:46:05.5553Z	  offset: 0,
2025-09-16T23:46:05.555423Z	  category: undefined,
2025-09-16T23:46:05.555589Z	  brand: '英飞凌',
2025-09-16T23:46:05.555828Z	  featured: undefined
2025-09-16T23:46:05.55599Z	}
2025-09-16T23:46:05.55611Z	Fetching solutions with query: 
2025-09-16T23:46:05.556217Z	    {
2025-09-16T23:46:05.556329Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:05.556466Z	        
2025-09-16T23:46:05.556574Z	    _id,
2025-09-16T23:46:05.556836Z	    title,
2025-09-16T23:46:05.55695Z	    "slug": slug.current,
2025-09-16T23:46:05.557056Z	    summary,
2025-09-16T23:46:05.557171Z	    description,
2025-09-16T23:46:05.55729Z	    coverImage,
2025-09-16T23:46:05.557404Z	    primaryBrand->{
2025-09-16T23:46:05.557508Z	      _id,
2025-09-16T23:46:05.55761Z	      name,
2025-09-16T23:46:05.557738Z	      "slug": slug.current,
2025-09-16T23:46:05.557846Z	      logo
2025-09-16T23:46:05.557942Z	    },
2025-09-16T23:46:05.558039Z	    relatedBrands[]->{
2025-09-16T23:46:05.55814Z	      _id,
2025-09-16T23:46:05.558238Z	      name,
2025-09-16T23:46:05.558341Z	      "slug": slug.current,
2025-09-16T23:46:05.558465Z	      logo
2025-09-16T23:46:05.558565Z	    },
2025-09-16T23:46:05.558667Z	    targetMarket,
2025-09-16T23:46:05.558795Z	    complexity,
2025-09-16T23:46:05.558899Z	    publishedAt,
2025-09-16T23:46:05.558996Z	    isPublished,
2025-09-16T23:46:05.559099Z	    isFeatured,
2025-09-16T23:46:05.559195Z	    viewCount,
2025-09-16T23:46:05.559388Z	    _createdAt,
2025-09-16T23:46:05.55957Z	    _updatedAt
2025-09-16T23:46:05.559696Z	  
2025-09-16T23:46:05.559863Z	      },
2025-09-16T23:46:05.559941Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-16T23:46:05.560011Z	    }
2025-09-16T23:46:05.560068Z	  
2025-09-16T23:46:05.560124Z	Query parameters: {
2025-09-16T23:46:05.560178Z	  limit: 4,
2025-09-16T23:46:05.560231Z	  offset: 0,
2025-09-16T23:46:05.561098Z	  targetMarket: undefined,
2025-09-16T23:46:05.561353Z	  brand: '英飞凌',
2025-09-16T23:46:05.561686Z	  featured: undefined
2025-09-16T23:46:05.561893Z	}
2025-09-16T23:46:05.562022Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-16T23:46:05.562134Z	Fetching products with query: 
2025-09-16T23:46:05.56224Z	    {
2025-09-16T23:46:05.56236Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:05.562496Z	        
2025-09-16T23:46:05.562604Z	    _id,
2025-09-16T23:46:05.562808Z	    _type,
2025-09-16T23:46:05.562987Z	    partNumber,
2025-09-16T23:46:05.563144Z	    "slug": slug.current,
2025-09-16T23:46:05.563301Z	    title,
2025-09-16T23:46:05.563515Z	    shortDescription,
2025-09-16T23:46:05.563666Z	    image,
2025-09-16T23:46:05.563816Z	    brand->{
2025-09-16T23:46:05.563935Z	      name,
2025-09-16T23:46:05.564047Z	      "slug": slug.current,
2025-09-16T23:46:05.564148Z	      logo
2025-09-16T23:46:05.564246Z	    },
2025-09-16T23:46:05.564344Z	    category->{
2025-09-16T23:46:05.564454Z	      name,
2025-09-16T23:46:05.564558Z	      "slug": slug.current
2025-09-16T23:46:05.564657Z	    },
2025-09-16T23:46:05.564784Z	    pricing{
2025-09-16T23:46:05.564884Z	      currency,
2025-09-16T23:46:05.564983Z	      tiers[]{
2025-09-16T23:46:05.565082Z	        quantity,
2025-09-16T23:46:05.565182Z	        price,
2025-09-16T23:46:05.565283Z	        unit
2025-09-16T23:46:05.565387Z	      },
2025-09-16T23:46:05.565534Z	      moq,
2025-09-16T23:46:05.565886Z	      leadTime,
2025-09-16T23:46:05.565966Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:05.566092Z	      "price": tiers[0].price,
2025-09-16T23:46:05.56652Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:05.566702Z	    },
2025-09-16T23:46:05.566904Z	    inventory{
2025-09-16T23:46:05.567012Z	      quantity,
2025-09-16T23:46:05.567114Z	      status,
2025-09-16T23:46:05.5672Z	      warehouse,
2025-09-16T23:46:05.567291Z	      lastUpdated,
2025-09-16T23:46:05.567398Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:05.567489Z	      "inStock": status == "in_stock",
2025-09-16T23:46:05.567572Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:05.567685Z	    },
2025-09-16T23:46:05.567789Z	    isActive,
2025-09-16T23:46:05.567881Z	    isFeatured,
2025-09-16T23:46:05.567968Z	    isNew,
2025-09-16T23:46:05.568067Z	    _createdAt,
2025-09-16T23:46:05.56816Z	    _updatedAt
2025-09-16T23:46:05.568251Z	  
2025-09-16T23:46:05.568346Z	      },
2025-09-16T23:46:05.568861Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-16T23:46:05.569041Z	    }
2025-09-16T23:46:05.56915Z	  
2025-09-16T23:46:05.56925Z	Query parameters: {
2025-09-16T23:46:05.569354Z	  limit: 8,
2025-09-16T23:46:05.569758Z	  offset: 0,
2025-09-16T23:46:05.569882Z	  category: undefined,
2025-09-16T23:46:05.569985Z	  brand: '英飞凌',
2025-09-16T23:46:05.570435Z	  featured: undefined
2025-09-16T23:46:05.570549Z	}
2025-09-16T23:46:05.570653Z	Fetching solutions with query: 
2025-09-16T23:46:05.570771Z	    {
2025-09-16T23:46:05.570875Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:05.570995Z	        
2025-09-16T23:46:05.571102Z	    _id,
2025-09-16T23:46:05.571201Z	    title,
2025-09-16T23:46:05.571295Z	    "slug": slug.current,
2025-09-16T23:46:05.571414Z	    summary,
2025-09-16T23:46:05.572088Z	    description,
2025-09-16T23:46:05.572205Z	    coverImage,
2025-09-16T23:46:05.572306Z	    primaryBrand->{
2025-09-16T23:46:05.572402Z	      _id,
2025-09-16T23:46:05.572498Z	      name,
2025-09-16T23:46:05.572599Z	      "slug": slug.current,
2025-09-16T23:46:05.572744Z	      logo
2025-09-16T23:46:05.572866Z	    },
2025-09-16T23:46:05.572985Z	    relatedBrands[]->{
2025-09-16T23:46:05.573089Z	      _id,
2025-09-16T23:46:05.573192Z	      name,
2025-09-16T23:46:05.573342Z	      "slug": slund: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:05.573467Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:05.573577Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:05.57372Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:05.573846Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:05.57397Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:05.574087Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:05.574193Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:05.574298Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:05.574406Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:05.574521Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:05.57464Z	g.current,
2025-09-16T23:46:05.57477Z	      logo
2025-09-16T23:46:05.574835Z	    },
2025-09-16T23:46:05.57489Z	    targetMarket,
2025-09-16T23:46:05.574945Z	    complexity,
2025-09-16T23:46:05.575001Z	    publishedAt,
2025-09-16T23:46:05.575055Z	    isPublished,
2025-09-16T23:46:05.575109Z	    isFeatured,
2025-09-16T23:46:05.57517Z	    viewCount,
2025-09-16T23:46:05.575226Z	    _createdAt,
2025-09-16T23:46:05.575283Z	    _updatedAt
2025-09-16T23:46:05.575338Z	  
2025-09-16T23:46:05.575405Z	      },
2025-09-16T23:46:05.575465Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-16T23:46:05.575527Z	    }
2025-09-16T23:46:05.575598Z	  
2025-09-16T23:46:05.575664Z	Query parameters: {
2025-09-16T23:46:05.575753Z	  limit: 4,
2025-09-16T23:46:05.575809Z	  offset: 0,
2025-09-16T23:46:05.575877Z	  targetMarket: undefined,
2025-09-16T23:46:05.575994Z	  brand: '英飞凌',
2025-09-16T23:46:05.576053Z	  featured: undefined
2025-09-16T23:46:05.576107Z	}
2025-09-16T23:46:05.576163Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-16T23:46:05.576219Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-16T23:46:05.576276Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:05.576334Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:05.576392Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:05.576445Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:05.576499Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-16T23:46:05.576554Z	Fetching products with query: 
2025-09-16T23:46:05.576611Z	    {
2025-09-16T23:46:05.623913Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:05.624214Z	        
2025-09-16T23:46:05.624334Z	    _id,
2025-09-16T23:46:05.624481Z	    _type,
2025-09-16T23:46:05.624585Z	    partNumber,
2025-09-16T23:46:05.624718Z	    "slug": slug.current,
2025-09-16T23:46:05.624832Z	    title,
2025-09-16T23:46:05.624927Z	    shortDescription,
2025-09-16T23:46:05.62502Z	    image,
2025-09-16T23:46:05.625111Z	    brand->{
2025-09-16T23:46:05.625206Z	      name,
2025-09-16T23:46:05.625296Z	      "slug": slug.current,
2025-09-16T23:46:05.625411Z	      logo
2025-09-16T23:46:05.625513Z	    },
2025-09-16T23:46:05.625612Z	    category->{
2025-09-16T23:46:05.625737Z	      name,
2025-09-16T23:46:05.625846Z	      "slug": slug.current
2025-09-16T23:46:05.625955Z	    },
2025-09-16T23:46:05.626055Z	    pricing{
2025-09-16T23:46:05.626178Z	      currency,
2025-09-16T23:46:05.626409Z	      tiers[]{
2025-09-16T23:46:05.626516Z	        quantity,
2025-09-16T23:46:05.626623Z	        price,
2025-09-16T23:46:05.62675Z	        unit
2025-09-16T23:46:05.626843Z	      },
2025-09-16T23:46:05.626932Z	      moq,
2025-09-16T23:46:05.627033Z	      leadTime,
2025-09-16T23:46:05.627141Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:05.62725Z	      "price": tiers[0].price,
2025-09-16T23:46:05.627369Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:05.627473Z	    },
2025-09-16T23:46:05.627822Z	    inventory{
2025-09-16T23:46:05.62801Z	      quantity,
2025-09-16T23:46:05.628623Z	      status,
2025-09-16T23:46:05.628852Z	      warehouse,
2025-09-16T23:46:05.628977Z	      lastUpdated,
2025-09-16T23:46:05.62911Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:05.629223Z	      "inStock": status == "in_stock",
2025-09-16T23:46:05.629326Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:05.629424Z	    },
2025-09-16T23:46:05.629614Z	    isActive,
2025-09-16T23:46:05.629806Z	    isFeatured,
2025-09-16T23:46:05.630008Z	    isNew,
2025-09-16T23:46:05.630175Z	    _createdAt,
2025-09-16T23:46:05.630359Z	    _updatedAt
2025-09-16T23:46:05.631086Z	  
2025-09-16T23:46:05.631409Z	      },
2025-09-16T23:46:05.637542Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-16T23:46:05.638564Z	    }
2025-09-16T23:46:05.638828Z	  
2025-09-16T23:46:05.639013Z	Query parameters: {
2025-09-16T23:46:05.639123Z	  limit: 8,
2025-09-16T23:46:05.639296Z	  offset: 0,
2025-09-16T23:46:05.639437Z	  category: undefined,
2025-09-16T23:46:05.639809Z	  brand: 'mediatek',
2025-09-16T23:46:05.640018Z	  featured: undefined
2025-09-16T23:46:05.640201Z	}
2025-09-16T23:46:05.640409Z	Fetching solutions with query: 
2025-09-16T23:46:05.64054Z	    {
2025-09-16T23:46:05.64065Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:05.6408Z	        
2025-09-16T23:46:05.640922Z	    _id,
2025-09-16T23:46:05.641029Z	    title,
2025-09-16T23:46:05.641135Z	    "slug": slug.current,
2025-09-16T23:46:05.641231Z	    summary,
2025-09-16T23:46:05.641331Z	    description,
2025-09-16T23:46:05.641447Z	    coverImage,
2025-09-16T23:46:05.641552Z	    primaryBrand->{
2025-09-16T23:46:05.641655Z	      _id,
2025-09-16T23:46:05.64179Z	      name,
2025-09-16T23:46:05.641897Z	      "slug": slug.current,
2025-09-16T23:46:05.642004Z	      logo
2025-09-16T23:46:05.64214Z	    },
2025-09-16T23:46:05.642248Z	    relatedBrands[]->{
2025-09-16T23:46:05.642766Z	      _id,
2025-09-16T23:46:05.642912Z	      name,
2025-09-16T23:46:05.643059Z	      "slug": slug.current,
2025-09-16T23:46:05.643235Z	      logo
2025-09-16T23:46:05.6434Z	    },
2025-09-16T23:46:05.64354Z	    targetMarket,
2025-09-16T23:46:05.643655Z	    complexity,
2025-09-16T23:46:05.64378Z	    publishedAt,
2025-09-16T23:46:05.643899Z	    isPublished,
2025-09-16T23:46:05.644058Z	    isFeatured,
2025-09-16T23:46:05.644229Z	    viewCount,
2025-09-16T23:46:05.644341Z	    _createdAt,
2025-09-16T23:46:05.644472Z	    _updatedAt
2025-09-16T23:46:05.644764Z	  
2025-09-16T23:46:05.644894Z	      },
2025-09-16T23:46:05.645224Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-16T23:46:05.645568Z	    }
2025-09-16T23:46:05.645722Z	  
2025-09-16T23:46:05.645844Z	Query parameters: {
2025-09-16T23:46:05.64617Z	  limit: 4,
2025-09-16T23:46:05.646277Z	  offset: 0,
2025-09-16T23:46:05.646387Z	  targetMarket: undefined,
2025-09-16T23:46:05.646495Z	  brand: 'mediatek',
2025-09-16T23:46:05.646654Z	  featured: undefined
2025-09-16T23:46:05.647214Z	}
2025-09-16T23:46:05.64734Z	✅ [getBrandData] Found brand: MediaTek
2025-09-16T23:46:05.647456Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:05.647628Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:05.647914Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-16T23:46:05.648123Z	Fetching products with query: 
2025-09-16T23:46:05.648283Z	    {
2025-09-16T23:46:05.648471Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:05.648695Z	        
2025-09-16T23:46:05.648877Z	    _id,
2025-09-16T23:46:05.649055Z	    _type,
2025-09-16T23:46:05.64923Z	    partNumber,
2025-09-16T23:46:05.649415Z	    "slug": slug.current,
2025-09-16T23:46:05.64958Z	    title,
2025-09-16T23:46:05.649747Z	    shortDescription,
2025-09-16T23:46:05.64987Z	    image,
2025-09-16T23:46:05.650016Z	    brand->{
2025-09-16T23:46:05.650133Z	      name,
2025-09-16T23:46:05.650381Z	      "slug": slug.current,
2025-09-16T23:46:05.650538Z	      logo
2025-09-16T23:46:05.650649Z	    },
2025-09-16T23:46:05.651079Z	    category->{
2025-09-16T23:46:05.651336Z	      name,
2025-09-16T23:46:05.651514Z	      "slug": slug.current
2025-09-16T23:46:05.651644Z	    },
2025-09-16T23:46:05.651793Z	    pricing{
2025-09-16T23:46:05.65215Z	      currency,
2025-09-16T23:46:05.652451Z	      tiers[]{
2025-09-16T23:46:05.652747Z	        quantity,
2025-09-16T23:46:05.652871Z	        price,
2025-09-16T23:46:05.65301Z	        unit
2025-09-16T23:46:05.653164Z	      },
2025-09-16T23:46:05.653287Z	      moq,
2025-09-16T23:46:05.653454Z	      leadTime,
2025-09-16T23:46:05.653617Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:05.653789Z	      "price": tiers[0].price,
2025-09-16T23:46:05.653927Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:05.654051Z	    },
2025-09-16T23:46:05.654161Z	    inventory{
2025-09-16T23:46:05.654271Z	      quantity,
2025-09-16T23:46:05.654373Z	      status,
2025-09-16T23:46:05.65449Z	      warehouse,
2025-09-16T23:46:05.654603Z	      lastUpdated,
2025-09-16T23:46:05.654739Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:05.654845Z	      "inStock": status == "in_stock",
2025-09-16T23:46:05.654939Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:05.655054Z	    },
2025-09-16T23:46:05.655154Z	    isActive,
2025-09-16T23:46:05.65525Z	    isFeatured,
2025-09-16T23:46:05.655338Z	    isNew,
2025-09-16T23:46:05.65544Z	    _createdAt,
2025-09-16T23:46:05.655543Z	    _updatedAt
2025-09-16T23:46:05.65564Z	  
2025-09-16T23:46:05.655759Z	      },
2025-09-16T23:46:05.655868Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-16T23:46:05.655972Z	    }
2025-09-16T23:46:05.656067Z	  
2025-09-16T23:46:05.656165Z	Query parameters: {
2025-09-16T23:46:05.656269Z	  limit: 8,
2025-09-16T23:46:05.656363Z	  offset: 0,
2025-09-16T23:46:05.656469Z	  category: undefined,
2025-09-16T23:46:05.656569Z	  brand: 'mediatek',
2025-09-16T23:46:05.656665Z	  featured: undefined
2025-09-16T23:46:05.656785Z	}
2025-09-16T23:46:05.656888Z	Fetching solutions with query: 
2025-09-16T23:46:05.656982Z	    {
2025-09-16T23:46:05.657094Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:05.66034Z	        
2025-09-16T23:46:05.6605Z	    _id,
2025-09-16T23:46:05.660656Z	    title,
2025-09-16T23:46:05.660947Z	    "slug": slug.current,
2025-09-16T23:46:05.661287Z	    summary,
2025-09-16T23:46:05.661418Z	    description,
2025-09-16T23:46:05.661535Z	    coverImage,
2025-09-16T23:46:05.661742Z	    primaryBrand->{
2025-09-16T23:46:05.662356Z	      _id,
2025-09-16T23:46:05.662523Z	      name,
2025-09-16T23:46:05.662639Z	      "slug": slug.current,
2025-09-16T23:46:05.662767Z	      logo
2025-09-16T23:46:05.662868Z	    },
2025-09-16T23:46:05.662964Z	    relatedBrands[]->{
2025-09-16T23:46:05.663061Z	      _id,
2025-09-16T23:46:05.663162Z	      name,
2025-09-16T23:46:05.663258Z	      "slug": slug.current,
2025-09-16T23:46:05.663353Z	      logo
2025-09-16T23:46:05.663463Z	    },
2025-09-16T23:46:05.663569Z	    targetMarket,
2025-09-16T23:46:05.663669Z	    complexity,
2025-09-16T23:46:05.663788Z	    publishedAt,
2025-09-16T23:46:05.663898Z	    isPublished,
2025-09-16T23:46:05.664002Z	    isFeatured,
2025-09-16T23:46:05.664104Z	    viewCount,
2025-09-16T23:46:05.665121Z	    _createdAt,
2025-09-16T23:46:05.665434Z	    _updatedAt
2025-09-16T23:46:05.665737Z	  
2025-09-16T23:46:05.665959Z	      },
2025-09-16T23:46:05.666122Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-16T23:46:05.666235Z	    }
2025-09-16T23:46:05.666341Z	  
2025-09-16T23:46:05.666433Z	Query parameters: {
2025-09-16T23:46:05.666859Z	  limit: 4,
2025-09-16T23:46:05.666999Z	  offset: 0,
2025-09-16T23:46:05.667133Z	  targetMarket: undefined,
2025-09-16T23:46:05.667272Z	  brand: 'mediatek',
2025-09-16T23:46:05.667389Z	  featured: undefined
2025-09-16T23:46:05.667496Z	}
2025-09-16T23:46:05.667598Z	✅ [getBrandData] Found brand: MediaTek
2025-09-16T23:46:05.667733Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:05.667839Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:05.667946Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-16T23:46:05.668054Z	Fetching products with query: 
2025-09-16T23:46:05.66816Z	    {
2025-09-16T23:46:05.668282Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:05.668401Z	        
2025-09-16T23:46:05.668511Z	    _id,
2025-09-16T23:46:05.668614Z	    _type,
2025-09-16T23:46:05.668747Z	    partNumber,
2025-09-16T23:46:05.668856Z	    "slug": slug.current,
2025-09-16T23:46:05.668962Z	    title,
2025-09-16T23:46:05.669068Z	    shortDescription,
2025-09-16T23:46:05.669176Z	    image,
2025-09-16T23:46:05.669285Z	    brand->{
2025-09-16T23:46:05.66939Z	      name,
2025-09-16T23:46:05.669495Z	      "slug": slug.current,
2025-09-16T23:46:05.669597Z	      logo
2025-09-16T23:46:05.669724Z	    },
2025-09-16T23:46:05.669823Z	    category->{
2025-09-16T23:46:05.669918Z	      name,
2025-09-16T23:46:05.670008Z	      "slug": slug.current
2025-09-16T23:46:05.67067Z	    },
2025-09-16T23:46:05.670821Z	    pricing{
2025-09-16T23:46:05.670932Z	      currency,
2025-09-16T23:46:05.671032Z	      tiers[]{
2025-09-16T23:46:05.671131Z	        quantity,
2025-09-16T23:46:05.671226Z	        price,
2025-09-16T23:46:05.671335Z	        unit
2025-09-16T23:46:05.671434Z	      },
2025-09-16T23:46:05.671531Z	      moq,
2025-09-16T23:46:05.671632Z	      leadTime,
2025-09-16T23:46:05.671764Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:05.671876Z	      "price": tiers[0].price,
2025-09-16T23:46:05.671984Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:05.672085Z	    },
2025-09-16T23:46:05.672191Z	    inventory{
2025-09-16T23:46:05.672812Z	      quantity,
2025-09-16T23:46:05.723896Z	      status,
2025-09-16T23:46:05.724175Z	      warehouse,
2025-09-16T23:46:05.724402Z	      lastUpdated,
2025-09-16T23:46:05.724593Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:05.724831Z	      "inStock": status == "in_stock",
2025-09-16T23:46:05.7251Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:05.725788Z	    },
2025-09-16T23:46:05.726442Z	    isActive,
2025-09-16T23:46:05.726854Z	    isFeatured,
2025-09-16T23:46:05.727256Z	    isNew,
2025-09-16T23:46:05.7277Z	    _createdAt,
2025-09-16T23:46:05.727971Z	    _updatedAt
2025-09-16T23:46:05.728269Z	  
2025-09-16T23:46:05.728384Z	      },
2025-09-16T23:46:05.729255Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-16T23:46:05.729531Z	    }
2025-09-16T23:46:05.729697Z	  
2025-09-16T23:46:05.729823Z	Query parameters: {
2025-09-16T23:46:05.729926Z	  limit: 8,
2025-09-16T23:46:05.730024Z	  offset: 0,
2025-09-16T23:46:05.730118Z	  category: undefined,
2025-09-16T23:46:05.730213Z	  brand: '英飞凌',
2025-09-16T23:46:05.730313Z	  featured: undefined
2025-09-16T23:46:05.730414Z	}
2025-09-16T23:46:05.730525Z	Fetching solutions with query: 
2025-09-16T23:46:05.731217Z	    {
2025-09-16T23:46:05.731406Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:05.73159Z	        
2025-09-16T23:46:05.731789Z	    _id,
2025-09-16T23:46:05.731944Z	    title,
2025-09-16T23:46:05.732102Z	    "slug": slug.current,
2025-09-16T23:46:05.734497Z	    summary,
2025-09-16T23:46:05.735897Z	    description,
2025-09-16T23:46:05.736179Z	    coverImage,
2025-09-16T23:46:05.736349Z	    primaryBrand->{
2025-09-16T23:46:05.736539Z	      _id,
2025-09-16T23:46:05.737352Z	      name,
2025-09-16T23:46:05.740698Z	      "slug": slug.current,
2025-09-16T23:46:05.741163Z	      logo
2025-09-16T23:46:05.741556Z	    },
2025-09-16T23:46:05.742024Z	    relatedBrands[]->{
2025-09-16T23:46:05.742171Z	      _id,
2025-09-16T23:46:05.742604Z	      name,
2025-09-16T23:46:05.742772Z	      "slug": slug.current,
2025-09-16T23:46:05.742892Z	      logo
2025-09-16T23:46:05.743022Z	    },
2025-09-16T23:46:05.743145Z	    targetMarket,
2025-09-16T23:46:05.743527Z	    complexity,
2025-09-16T23:46:05.743885Z	    publishedAt,
2025-09-16T23:46:05.744194Z	    isPublished,
2025-09-16T23:46:05.744523Z	    isFeatured,
2025-09-16T23:46:05.744892Z	    viewCount,
2025-09-16T23:46:05.746794Z	    _createdAt,
2025-09-16T23:46:05.746951Z	    _updatedAt
2025-09-16T23:46:05.747061Z	  
2025-09-16T23:46:05.747162Z	      },
2025-09-16T23:46:05.747397Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-16T23:46:05.747526Z	    }
2025-09-16T23:46:05.747649Z	  
2025-09-16T23:46:05.74819Z	Query parameters: {
2025-09-16T23:46:05.748306Z	  limit: 4,
2025-09-16T23:46:05.748405Z	  offset: 0,
2025-09-16T23:46:05.748499Z	  targetMarket: undefined,
2025-09-16T23:46:05.748592Z	  brand: '英飞凌',
2025-09-16T23:46:05.748795Z	  featured: undefined
2025-09-16T23:46:05.748943Z	}
2025-09-16T23:46:05.749105Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-16T23:46:05.749212Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:05.749352Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:05.749478Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-16T23:46:05.750172Z	Fetching products with query: 
2025-09-16T23:46:05.750331Z	    {
2025-09-16T23:46:05.750478Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:05.750598Z	        
2025-09-16T23:46:05.751217Z	    _id,
2025-09-16T23:46:05.751394Z	    _type,
2025-09-16T23:46:05.751522Z	    partNumber,
2025-09-16T23:46:05.751624Z	    "slug": slug.current,
2025-09-16T23:46:05.751778Z	    title,
2025-09-16T23:46:05.752264Z	    shortDescription,
2025-09-16T23:46:05.752576Z	    image,
2025-09-16T23:46:05.752655Z	    brand->{
2025-09-16T23:46:05.752772Z	      name,
2025-09-16T23:46:05.752871Z	      "slug": slug.current,
2025-09-16T23:46:05.752964Z	      logo
2025-09-16T23:46:05.753064Z	    },
2025-09-16T23:46:05.75317Z	    category->{
2025-09-16T23:46:05.753289Z	      name,
2025-09-16T23:46:05.75341Z	      "slug": slug.current
2025-09-16T23:46:05.753524Z	    },
2025-09-16T23:46:05.753636Z	    pricing{
2025-09-16T23:46:05.753766Z	      currency,
2025-09-16T23:46:05.753883Z	      tiers[]{
2025-09-16T23:46:05.754486Z	        quantity,
2025-09-16T23:46:05.754881Z	        price,
2025-09-16T23:46:05.755007Z	        unit
2025-09-16T23:46:05.755102Z	      },
2025-09-16T23:46:05.755199Z	      moq,
2025-09-16T23:46:05.755293Z	      leadTime,
2025-09-16T23:46:05.755386Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:05.755857Z	      "price": tiers[0].price,
2025-09-16T23:46:05.756025Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:05.756132Z	    },
2025-09-16T23:46:05.756223Z	    inventory{
2025-09-16T23:46:05.756308Z	      quantity,
2025-09-16T23:46:05.756409Z	      status,
2025-09-16T23:46:05.756513Z	      warehouse,
2025-09-16T23:46:05.756622Z	      lastUpdated,
2025-09-16T23:46:05.756762Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:05.756877Z	      "inStock": status == "in_stock",
2025-09-16T23:46:05.756979Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:05.757102Z	    },
2025-09-16T23:46:05.757197Z	    isActive,
2025-09-16T23:46:05.757311Z	    isFeatured,
2025-09-16T23:46:05.757422Z	    isNew,
2025-09-16T23:46:05.757525Z	    _createdAt,
2025-09-16T23:46:05.757636Z	    _updatedAt
2025-09-16T23:46:05.757766Z	  
2025-09-16T23:46:05.757863Z	      },
2025-09-16T23:46:05.757966Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-16T23:46:05.758102Z	    }
2025-09-16T23:46:05.758212Z	  
2025-09-16T23:46:05.758316Z	Query parameters: {
2025-09-16T23:46:05.75842Z	  limit: 8,
2025-09-16T23:46:05.758512Z	  offset: 0,
2025-09-16T23:46:05.758601Z	  category: undefined,
2025-09-16T23:46:05.758736Z	  brand: '英飞凌',
2025-09-16T23:46:05.758847Z	  featured: undefined
2025-09-16T23:46:05.758955Z	}
2025-09-16T23:46:05.759065Z	Fetching solutions with query: 
2025-09-16T23:46:05.759166Z	    {
2025-09-16T23:46:05.759326Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:05.759481Z	        
2025-09-16T23:46:05.759586Z	    _id,
2025-09-16T23:46:05.759727Z	    title,
2025-09-16T23:46:05.75991Z	    "slug": slug.current,
2025-09-16T23:46:05.76012Z	    summary,
2025-09-16T23:46:05.760253Z	    description,
2025-09-16T23:46:05.760395Z	    coverImage,
2025-09-16T23:46:05.760972Z	    primaryBrand->{
2025-09-16T23:46:05.761449Z	      _id,
2025-09-16T23:46:05.761933Z	      name,
2025-09-16T23:46:05.762225Z	      "slug": slug.current,
2025-09-16T23:46:05.762384Z	      logo
2025-09-16T23:46:05.762552Z	    },
2025-09-16T23:46:05.762668Z	    relatedBrands[]->{
2025-09-16T23:46:05.762833Z	      _id,
2025-09-16T23:46:05.76296Z	      name,
2025-09-16T23:46:05.763075Z	      "slug": slug.current,
2025-09-16T23:46:05.763185Z	      logo
2025-09-16T23:46:05.763286Z	    },
2025-09-16T23:46:05.763456Z	    targetMarket,
2025-09-16T23:46:05.763659Z	    complexity,
2025-09-16T23:46:05.763994Z	    publishedAt,
2025-09-16T23:46:05.764159Z	    isPublished,
2025-09-16T23:46:05.764309Z	    isFeatured,
2025-09-16T23:46:05.764461Z	    viewCount,
2025-09-16T23:46:05.764609Z	    _createdAt,
2025-09-16T23:46:05.768404Z	    _updatedAt
2025-09-16T23:46:05.768622Z	  
2025-09-16T23:46:05.769034Z	      },
2025-09-16T23:46:05.769371Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-16T23:46:05.769536Z	    }
2025-09-16T23:46:05.769645Z	  
2025-09-16T23:46:05.769767Z	Query parameters: {
2025-09-16T23:46:05.769882Z	  limit: 4,
2025-09-16T23:46:05.769993Z	  offset: 0,
2025-09-16T23:46:05.770104Z	  targetMarket: undefined,
2025-09-16T23:46:05.770218Z	  brand: '英飞凌',
2025-09-16T23:46:05.770334Z	  featured: undefined
2025-09-16T23:46:05.770458Z	}
2025-09-16T23:46:05.770561Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-16T23:46:05.770655Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:05.770804Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:05.770938Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-16T23:46:05.771063Z	Fetching products with query: 
2025-09-16T23:46:05.77121Z	    {
2025-09-16T23:46:05.771453Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:05.771602Z	        
2025-09-16T23:46:05.771747Z	    _id,
2025-09-16T23:46:05.771905Z	    _type,
2025-09-16T23:46:05.772044Z	    partNumber,
2025-09-16T23:46:05.772197Z	    "slug": slug.current,
2025-09-16T23:46:05.772335Z	    title,
2025-09-16T23:46:05.772487Z	    shortDescription,
2025-09-16T23:46:05.772779Z	    image,
2025-09-16T23:46:05.773213Z	    brand->{
2025-09-16T23:46:05.77366Z	      name,
2025-09-16T23:46:05.77395Z	      "slug": slug.current,
2025-09-16T23:46:05.774124Z	      logo
2025-09-16T23:46:05.774275Z	    },
2025-09-16T23:46:05.774419Z	    category->{
2025-09-16T23:46:05.774564Z	      name,
2025-09-16T23:46:05.774716Z	      "slug": slug.current
2025-09-16T23:46:05.774867Z	    },
2025-09-16T23:46:05.775015Z	    pricing{
2025-09-16T23:46:05.775162Z	      currency,
2025-09-16T23:46:05.775307Z	      tiers[]{
2025-09-16T23:46:05.775462Z	        quantity,
2025-09-16T23:46:05.775707Z	        price,
2025-09-16T23:46:05.775847Z	        unit
2025-09-16T23:46:05.775917Z	      },
2025-09-16T23:46:05.776087Z	      moq,
2025-09-16T23:46:05.776166Z	      leadTime,
2025-09-16T23:46:05.776224Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:05.776303Z	      "price": tiers[0].price,
2025-09-16T23:46:05.776473Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:05.777075Z	    },
2025-09-16T23:46:05.777263Z	    inventory{
2025-09-16T23:46:05.777421Z	      quantity,
2025-09-16T23:46:05.777581Z	      status,
2025-09-16T23:46:05.777743Z	      warehouse,
2025-09-16T23:46:05.777844Z	      lastUpdated,
2025-09-16T23:46:05.77794Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:05.778036Z	      "inStock": status == "in_stock",
2025-09-16T23:46:05.778124Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:05.778213Z	    },
2025-09-16T23:46:05.7783Z	    isActive,
2025-09-16T23:46:05.824414Z	    isFeatured,
2025-09-16T23:46:05.824924Z	    isNew,
2025-09-16T23:46:05.825069Z	    _createdAt,
2025-09-16T23:46:05.82518Z	    _updatedAt
2025-09-16T23:46:05.82528Z	  
2025-09-16T23:46:05.825391Z	      },
2025-09-16T23:46:05.82575Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-16T23:46:05.825898Z	    }
2025-09-16T23:46:05.826239Z	  
2025-09-16T23:46:05.826503Z	Query parameters: {
2025-09-16T23:46:05.82663Z	  limit: 8,
2025-09-16T23:46:05.826752Z	  offset: 0,
2025-09-16T23:46:05.82685Z	  category: undefined,
2025-09-16T23:46:05.826939Z	  brand: 'ixys',
2025-09-16T23:46:05.827028Z	  featured: undefined
2025-09-16T23:46:05.827118Z	}
2025-09-16T23:46:05.827206Z	Fetching solutions with query: 
2025-09-16T23:46:05.827296Z	    {
2025-09-16T23:46:05.827394Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:05.827491Z	        
2025-09-16T23:46:05.827636Z	    _id,
2025-09-16T23:46:05.827756Z	    title,
2025-09-16T23:46:05.827856Z	    "slug": slug.current,
2025-09-16T23:46:05.82796Z	    summary,
2025-09-16T23:46:05.828065Z	    description,
2025-09-16T23:46:05.82817Z	    coverImage,
2025-09-16T23:46:05.828267Z	    primaryBrand->{
2025-09-16T23:46:05.82841Z	      _id,
2025-09-16T23:46:05.828524Z	      name,
2025-09-16T23:46:05.828589Z	      "slug": slug.current,
2025-09-16T23:46:05.828649Z	      logo
2025-09-16T23:46:05.828743Z	    },
2025-09-16T23:46:05.828879Z	    relatedBrands[]->{
2025-09-16T23:46:05.828977Z	      _id,
2025-09-16T23:46:05.829112Z	      name,
2025-09-16T23:46:05.829278Z	      "slug": slug.current,
2025-09-16T23:46:05.830108Z	      logo
2025-09-16T23:46:05.830478Z	    },
2025-09-16T23:46:05.830713Z	    targetMarket,
2025-09-16T23:46:05.830896Z	    complexity,
2025-09-16T23:46:05.831298Z	    publishedAt,
2025-09-16T23:46:05.831539Z	    isPublished,
2025-09-16T23:46:05.831759Z	    isFeatured,
2025-09-16T23:46:05.83193Z	    viewCount,
2025-09-16T23:46:05.832092Z	    _createdAt,
2025-09-16T23:46:05.832285Z	    _updatedAt
2025-09-16T23:46:05.832449Z	  
2025-09-16T23:46:05.832639Z	      },
2025-09-16T23:46:05.832871Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-16T23:46:05.833049Z	    }
2025-09-16T23:46:05.833221Z	  
2025-09-16T23:46:05.833413Z	Query parameters: {
2025-09-16T23:46:05.833597Z	  limit: 4,
2025-09-16T23:46:05.833816Z	  offset: 0,
2025-09-16T23:46:05.834014Z	  targetMarket: undefined,
2025-09-16T23:46:05.83421Z	  brand: 'ixys',
2025-09-16T23:46:05.834396Z	  featured: undefined
2025-09-16T23:46:05.834547Z	}
2025-09-16T23:46:05.834707Z	✅ [getBrandData] Found brand: IXYS
2025-09-16T23:46:05.834898Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:05.835606Z	Solutions fetch result: {
2025-09-16T23:46:05.836491Z	  totalSolutions: 1,
2025-09-16T23:46:05.836979Z	  fetchedSolutions: 1,
2025-09-16T23:46:05.837561Z	  firstSolution: {
2025-09-16T23:46:05.838486Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-16T23:46:05.83883Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-16T23:46:05.839819Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-16T23:46:05.840038Z	    complexity: 'medium',
2025-09-16T23:46:05.840196Z	    coverImage: null,
2025-09-16T23:46:05.840388Z	    description: [ [Object] ],
2025-09-16T23:46:05.840583Z	    isFeatured: false,
2025-09-16T23:46:05.841078Z	    isPublished: true,
2025-09-16T23:46:05.841497Z	    primaryBrand: {
2025-09-16T23:46:05.841699Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:46:05.841885Z	      logo: null,
2025-09-16T23:46:05.842343Z	      name: 'IXYS',
2025-09-16T23:46:05.842667Z	      slug: 'ixys'
2025-09-16T23:46:05.842855Z	    },
2025-09-16T23:46:05.843035Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-16T23:46:05.843729Z	    relatedBrands: null,
2025-09-16T23:46:05.845596Z	    slug: '99999',
2025-09-16T23:46:05.845746Z	    summary: '99999',
2025-09-16T23:46:05.846125Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:05.846271Z	    title: '99999',
2025-09-16T23:46:05.846401Z	    viewCount: 0
2025-09-16T23:46:05.846535Z	  }
2025-09-16T23:46:05.846637Z	}
2025-09-16T23:46:05.846771Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-16T23:46:05.846899Z	Fetching products with query: 
2025-09-16T23:46:05.847009Z	    {
2025-09-16T23:46:05.847112Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:05.847214Z	        
2025-09-16T23:46:05.84732Z	    _id,
2025-09-16T23:46:05.847437Z	    _type,
2025-09-16T23:46:05.847538Z	    partNumber,
2025-09-16T23:46:05.847695Z	    "slug": slug.current,
2025-09-16T23:46:05.8478Z	    title,
2025-09-16T23:46:05.847896Z	    shortDescription,
2025-09-16T23:46:05.848036Z	    image,
2025-09-16T23:46:05.848155Z	    brand->{
2025-09-16T23:46:05.848282Z	      name,
2025-09-16T23:46:05.848412Z	      "slug": slug.current,
2025-09-16T23:46:05.848547Z	      logo
2025-09-16T23:46:05.848652Z	    },
2025-09-16T23:46:05.848781Z	    category->{
2025-09-16T23:46:05.848888Z	      name,
2025-09-16T23:46:05.848992Z	      "slug": slug.current
2025-09-16T23:46:05.8491Z	    },
2025-09-16T23:46:05.849209Z	    pricing{
2025-09-16T23:46:05.849316Z	      currency,
2025-09-16T23:46:05.849439Z	      tiers[]{
2025-09-16T23:46:05.849547Z	        quantity,
2025-09-16T23:46:05.84966Z	        price,
2025-09-16T23:46:05.849797Z	        unit
2025-09-16T23:46:05.850343Z	      },
2025-09-16T23:46:05.850501Z	      moq,
2025-09-16T23:46:05.850621Z	      leadTime,
2025-09-16T23:46:05.850758Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:05.850867Z	      "price": tiers[0].price,
2025-09-16T23:46:05.850966Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:05.851115Z	    },
2025-09-16T23:46:05.851279Z	    inventory{
2025-09-16T23:46:05.851427Z	      quantity,
2025-09-16T23:46:05.851536Z	      status,
2025-09-16T23:46:05.851637Z	      warehouse,
2025-09-16T23:46:05.85176Z	      lastUpdated,
2025-09-16T23:46:05.851873Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:05.851974Z	      "inStock": status == "in_stock",
2025-09-16T23:46:05.852087Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:05.852183Z	    },
2025-09-16T23:46:05.85228Z	    isActive,
2025-09-16T23:46:05.852393Z	    isFeatured,
2025-09-16T23:46:05.8525Z	    isNew,
2025-09-16T23:46:05.852602Z	    _createdAt,
2025-09-16T23:46:05.852724Z	    _updatedAt
2025-09-16T23:46:05.852842Z	  
2025-09-16T23:46:05.852944Z	      },
2025-09-16T23:46:05.853049Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-16T23:46:05.85317Z	    }
2025-09-16T23:46:05.853275Z	  
2025-09-16T23:46:05.855768Z	Query parameters: {
2025-09-16T23:46:05.855944Z	  limit: 8,
2025-09-16T23:46:05.856091Z	  offset: 0,
2025-09-16T23:46:05.856234Z	  category: undefined,
2025-09-16T23:46:05.856384Z	  brand: 'ixys',
2025-09-16T23:46:05.856519Z	  featured: undefined
2025-09-16T23:46:05.856664Z	}
2025-09-16T23:46:05.859216Z	Fetching solutions with query: 
2025-09-16T23:46:05.859789Z	    {
2025-09-16T23:46:05.860515Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:05.863319Z	        
2025-09-16T23:46:05.863477Z	    _id,
2025-09-16T23:46:05.863594Z	    title,
2025-09-16T23:46:05.863743Z	    "slug": slug.current,
2025-09-16T23:46:05.863869Z	    summary,
2025-09-16T23:46:05.86399Z	    description,
2025-09-16T23:46:05.864113Z	    coverImage,
2025-09-16T23:46:05.864219Z	    primaryBrand->{
2025-09-16T23:46:05.866481Z	      _id,
2025-09-16T23:46:05.866623Z	      name,
2025-09-16T23:46:05.86676Z	      "slug": slug.current,
2025-09-16T23:46:05.866891Z	      logo
2025-09-16T23:46:05.867Z	    },
2025-09-16T23:46:05.867155Z	    relatedBrands[]->{
2025-09-16T23:46:05.867362Z	      _id,
2025-09-16T23:46:05.867494Z	      name,
2025-09-16T23:46:05.867618Z	      "slug": slug.current,
2025-09-16T23:46:05.867782Z	      logo
2025-09-16T23:46:05.867963Z	    },
2025-09-16T23:46:05.868154Z	    targetMarket,
2025-09-16T23:46:05.868445Z	    complexity,
2025-09-16T23:46:05.869702Z	    publishedAt,
2025-09-16T23:46:05.873648Z	    isPublished,
2025-09-16T23:46:05.873848Z	    isFeatured,
2025-09-16T23:46:05.873967Z	    viewCount,
2025-09-16T23:46:05.874079Z	    _createdAt,
2025-09-16T23:46:05.874188Z	    _updatedAt
2025-09-16T23:46:05.876335Z	  
2025-09-16T23:46:05.87652Z	      },
2025-09-16T23:46:05.876643Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-16T23:46:05.924053Z	    }
2025-09-16T23:46:05.924237Z	  
2025-09-16T23:46:05.924365Z	Query parameters: {
2025-09-16T23:46:05.92448Z	  limit: 4,
2025-09-16T23:46:05.924614Z	  offset: 0,
2025-09-16T23:46:05.924768Z	  targetMarket: undefined,
2025-09-16T23:46:05.924883Z	  brand: 'ixys',
2025-09-16T23:46:05.924982Z	  featured: undefined
2025-09-16T23:46:05.925108Z	}
2025-09-16T23:46:05.925248Z	✅ [getBrandData] Found brand: IXYS
2025-09-16T23:46:05.925371Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:05.925493Z	Solutions fetch result: {
2025-09-16T23:46:05.925608Z	  totalSolutions: 1,
2025-09-16T23:46:05.925721Z	  fetchedSolutions: 1,
2025-09-16T23:46:05.925833Z	  firstSolution: {
2025-09-16T23:46:05.92593Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-16T23:46:05.926016Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-16T23:46:05.926107Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-16T23:46:05.926201Z	    complexity: 'medium',
2025-09-16T23:46:05.926299Z	    coverImage: null,
2025-09-16T23:46:05.926391Z	    description: [ [Object] ],
2025-09-16T23:46:05.926475Z	    isFeatured: false,
2025-09-16T23:46:05.926557Z	    isPublished: true,
2025-09-16T23:46:05.926712Z	    primaryBrand: {
2025-09-16T23:46:05.926866Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:46:05.92699Z	      logo: null,
2025-09-16T23:46:05.927128Z	      name: 'IXYS',
2025-09-16T23:46:05.927248Z	      slug: 'ixys'
2025-09-16T23:46:05.927349Z	    },
2025-09-16T23:46:05.927442Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-16T23:46:05.927528Z	    relatedBrands: null,
2025-09-16T23:46:05.92761Z	    slug: '99999',
2025-09-16T23:46:05.927734Z	    summary: '99999',
2025-09-16T23:46:05.927836Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:05.927936Z	    title: '99999',
2025-09-16T23:46:05.928033Z	    viewCount: 0
2025-09-16T23:46:05.928126Z	  }
2025-09-16T23:46:05.928224Z	}
2025-09-16T23:46:05.928318Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-16T23:46:05.928431Z	Fetching products with query: 
2025-09-16T23:46:05.928536Z	    {
2025-09-16T23:46:05.928643Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:05.928807Z	        
2025-09-16T23:46:05.928975Z	    _id,
2025-09-16T23:46:05.929103Z	    _type,
2025-09-16T23:46:05.929226Z	    partNumber,
2025-09-16T23:46:05.929398Z	    "slug": slug.current,
2025-09-16T23:46:05.929553Z	    title,
2025-09-16T23:46:05.93112Z	    shortDescription,
2025-09-16T23:46:05.931366Z	    image,
2025-09-16T23:46:05.931661Z	    brand->{
2025-09-16T23:46:05.931937Z	      name,
2025-09-16T23:46:05.932071Z	      "slug": slug.current,
2025-09-16T23:46:05.932193Z	      logo
2025-09-16T23:46:05.932304Z	    },
2025-09-16T23:46:05.933317Z	    category->{
2025-09-16T23:46:05.933509Z	      name,
2025-09-16T23:46:05.933878Z	      "slug": slug.current
2025-09-16T23:46:05.934348Z	    },
2025-09-16T23:46:05.935421Z	    pricing{
2025-09-16T23:46:05.935571Z	      currency,
2025-09-16T23:46:05.938898Z	      tiers[]{
2025-09-16T23:46:05.939408Z	        quantity,
2025-09-16T23:46:05.939949Z	        price,
2025-09-16T23:46:05.940215Z	        unit
2025-09-16T23:46:05.940641Z	      },
2025-09-16T23:46:05.940978Z	      moq,
2025-09-16T23:46:05.941505Z	      leadTime,
2025-09-16T23:46:05.941861Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:05.943015Z	      "price": tiers[0].price,
2025-09-16T23:46:05.943323Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:05.94356Z	    },
2025-09-16T23:46:05.943669Z	    inventory{
2025-09-16T23:46:05.943794Z	      quantity,
2025-09-16T23:46:05.943894Z	      status,
2025-09-16T23:46:05.943989Z	      warehouse,
2025-09-16T23:46:05.944088Z	      lastUpdated,
2025-09-16T23:46:05.944171Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:05.944258Z	      "inStock": status == "in_stock",
2025-09-16T23:46:05.944355Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:05.947709Z	    },
2025-09-16T23:46:05.947968Z	    isActive,
2025-09-16T23:46:05.948222Z	    isFeatured,
2025-09-16T23:46:05.948523Z	    isNew,
2025-09-16T23:46:05.949746Z	    _createdAt,
2025-09-16T23:46:05.949874Z	    _updatedAt
2025-09-16T23:46:05.950019Z	  
2025-09-16T23:46:05.950139Z	      },
2025-09-16T23:46:05.950247Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-16T23:46:05.950384Z	    }
2025-09-16T23:46:05.950489Z	  
2025-09-16T23:46:05.950592Z	Query parameters: {
2025-09-16T23:46:05.950718Z	  limit: 8,
2025-09-16T23:46:05.950828Z	  offset: 0,
2025-09-16T23:46:05.950932Z	  category: undefined,
2025-09-16T23:46:05.951046Z	  brand: 'pi',
2025-09-16T23:46:05.951343Z	  featured: undefined
2025-09-16T23:46:05.951482Z	}
2025-09-16T23:46:05.951601Z	Fetching solutions with query: 
2025-09-16T23:46:05.951752Z	    {
2025-09-16T23:46:05.951875Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:05.951983Z	        
2025-09-16T23:46:05.952084Z	    _id,
2025-09-16T23:46:05.952181Z	    title,
2025-09-16T23:46:05.952278Z	    "slug": slug.current,
2025-09-16T23:46:05.952406Z	    summary,
2025-09-16T23:46:05.952534Z	    description,
2025-09-16T23:46:05.95284Z	    coverImage,
2025-09-16T23:46:05.952966Z	    primaryBrand->{
2025-09-16T23:46:05.953081Z	      _id,
2025-09-16T23:46:05.953184Z	      name,
2025-09-16T23:46:05.953293Z	      "slug": slug.current,
2025-09-16T23:46:05.953401Z	      logo
2025-09-16T23:46:05.95351Z	    },
2025-09-16T23:46:05.953611Z	    relatedBrands[]->{
2025-09-16T23:46:05.953771Z	      _id,
2025-09-16T23:46:05.953883Z	      name,
2025-09-16T23:46:05.95399Z	      "slug": slug.current,
2025-09-16T23:46:05.954114Z	      logo
2025-09-16T23:46:05.954225Z	    },
2025-09-16T23:46:05.954333Z	    targetMarket,
2025-09-16T23:46:05.954448Z	    complexity,
2025-09-16T23:46:05.954552Z	    publishedAt,
2025-09-16T23:46:05.954663Z	    isPublished,
2025-09-16T23:46:05.954801Z	    isFeatured,
2025-09-16T23:46:05.954913Z	    viewCount,
2025-09-16T23:46:05.955308Z	    _createdAt,
2025-09-16T23:46:05.955566Z	    _updatedAt
2025-09-16T23:46:05.955728Z	  
2025-09-16T23:46:05.955847Z	      },
2025-09-16T23:46:05.956136Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-16T23:46:05.956613Z	    }
2025-09-16T23:46:05.956836Z	  
2025-09-16T23:46:05.956956Z	Query parameters: {
2025-09-16T23:46:05.957062Z	  limit: 4,
2025-09-16T23:46:05.959421Z	  offset: 0,
2025-09-16T23:46:05.961317Z	  targetMarket: undefined,
2025-09-16T23:46:05.961609Z	  brand: 'pi',
2025-09-16T23:46:05.961953Z	  featured: undefined
2025-09-16T23:46:05.962233Z	}
2025-09-16T23:46:05.962531Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-16T23:46:05.962692Z	Fetching products with query: 
2025-09-16T23:46:05.962816Z	    {
2025-09-16T23:46:05.962923Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:05.963026Z	        
2025-09-16T23:46:05.963131Z	    _id,
2025-09-16T23:46:05.963228Z	    _type,
2025-09-16T23:46:05.963324Z	    partNumber,
2025-09-16T23:46:05.96342Z	    "slug": slug.current,
2025-09-16T23:46:05.96718Z	    title,
2025-09-16T23:46:05.967526Z	    shortDescription,
2025-09-16T23:46:05.967697Z	    image,
2025-09-16T23:46:05.967849Z	    brand->{
2025-09-16T23:46:05.968125Z	      name,
2025-09-16T23:46:05.968448Z	      "slug": slug.current,
2025-09-16T23:46:05.968736Z	      logo
2025-09-16T23:46:05.968984Z	    },
2025-09-16T23:46:05.969236Z	    category->{
2025-09-16T23:46:05.969366Z	      name,
2025-09-16T23:46:05.969469Z	      "slug": slug.current
2025-09-16T23:46:05.969591Z	    },
2025-09-16T23:46:05.969726Z	    pricing{
2025-09-16T23:46:05.969844Z	      currency,
2025-09-16T23:46:05.969951Z	      tiers[]{
2025-09-16T23:46:05.972783Z	        quantity,
2025-09-16T23:46:05.973005Z	        price,
2025-09-16T23:46:05.973116Z	        unit
2025-09-16T23:46:05.973226Z	      },
2025-09-16T23:46:05.973331Z	      moq,
2025-09-16T23:46:05.973495Z	      leadTime,
2025-09-16T23:46:05.973806Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:05.973999Z	      "price": tiers[0].price,
2025-09-16T23:46:05.974128Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:05.974233Z	    },
2025-09-16T23:46:05.974328Z	    inventory{
2025-09-16T23:46:05.974422Z	      quantity,
2025-09-16T23:46:05.974522Z	      status,
2025-09-16T23:46:05.974842Z	      warehouse,
2025-09-16T23:46:05.974931Z	      lastUpdated,
2025-09-16T23:46:05.974993Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:05.975052Z	      "inStock": status == "in_stock",
2025-09-16T23:46:05.975108Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:05.975163Z	    },
2025-09-16T23:46:05.975216Z	    isActive,
2025-09-16T23:46:05.975269Z	    isFeatured,
2025-09-16T23:46:05.975321Z	    isNew,
2025-09-16T23:46:05.975373Z	    _createdAt,
2025-09-16T23:46:05.97544Z	    _updatedAt
2025-09-16T23:46:05.975497Z	  
2025-09-16T23:46:05.975551Z	      },
2025-09-16T23:46:05.975603Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-16T23:46:06.023819Z	    }
2025-09-16T23:46:06.024146Z	  
2025-09-16T23:46:06.024279Z	Query parameters: {
2025-09-16T23:46:06.024406Z	  limit: 8,
2025-09-16T23:46:06.024512Z	  offset: 0,
2025-09-16T23:46:06.024611Z	  category: undefined,
2025-09-16T23:46:06.024763Z	  brand: 'pi',
2025-09-16T23:46:06.024867Z	  featured: undefined
2025-09-16T23:46:06.024959Z	}
2025-09-16T23:46:06.02506Z	Fetching solutions with query: 
2025-09-16T23:46:06.02516Z	    {
2025-09-16T23:46:06.025261Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:06.025365Z	        
2025-09-16T23:46:06.025463Z	    _id,
2025-09-16T23:46:06.02556Z	    title,
2025-09-16T23:46:06.02569Z	    "slug": slug.current,
2025-09-16T23:46:06.025803Z	    summary,
2025-09-16T23:46:06.025899Z	    description,
2025-09-16T23:46:06.026003Z	    coverImage,
2025-09-16T23:46:06.026101Z	    primaryBrand->{
2025-09-16T23:46:06.026198Z	      _id,
2025-09-16T23:46:06.026347Z	      name,
2025-09-16T23:46:06.026539Z	      "slug": slug.current,
2025-09-16T23:46:06.026664Z	      logo
2025-09-16T23:46:06.026829Z	    },
2025-09-16T23:46:06.026966Z	    relatedBrands[]->{
2025-09-16T23:46:06.027087Z	      _id,
2025-09-16T23:46:06.027197Z	      name,
2025-09-16T23:46:06.027298Z	      "slug": slug.current,
2025-09-16T23:46:06.027428Z	      logo
2025-09-16T23:46:06.027543Z	    },
2025-09-16T23:46:06.027652Z	    targetMarket,
2025-09-16T23:46:06.027837Z	    complexity,
2025-09-16T23:46:06.027953Z	    publishedAt,
2025-09-16T23:46:06.028124Z	    isPublished,
2025-09-16T23:46:06.028286Z	    isFeatured,
2025-09-16T23:46:06.028432Z	    viewCount,
2025-09-16T23:46:06.028565Z	    _createdAt,
2025-09-16T23:46:06.028688Z	    _updatedAt
2025-09-16T23:46:06.028819Z	  
2025-09-16T23:46:06.028936Z	      },
2025-09-16T23:46:06.031773Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-16T23:46:06.031947Z	    }
2025-09-16T23:46:06.032064Z	  
2025-09-16T23:46:06.032206Z	Query parameters: {
2025-09-16T23:46:06.032442Z	  limit: 4,
2025-09-16T23:46:06.032645Z	  offset: 0,
2025-09-16T23:46:06.032863Z	  targetMarket: undefined,
2025-09-16T23:46:06.03607Z	  brand: 'pi',
2025-09-16T23:46:06.036235Z	  featured: undefined
2025-09-16T23:46:06.036352Z	}
2025-09-16T23:46:06.036494Z	✅ [getBrandData] Found brand: PI
2025-09-16T23:46:06.03672Z	✅ [getBrandData] Found brand: PI
2025-09-16T23:46:06.036856Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:06.036966Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:06.03706Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:06.037199Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:06.037325Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:46:06.037476Z	Fetching products with query: 
2025-09-16T23:46:06.037647Z	    {
2025-09-16T23:46:06.037866Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:06.038046Z	        
2025-09-16T23:46:06.038179Z	    _id,
2025-09-16T23:46:06.03832Z	    _type,
2025-09-16T23:46:06.038466Z	    partNumber,
2025-09-16T23:46:06.038656Z	    "slug": slug.current,
2025-09-16T23:46:06.038813Z	    title,
2025-09-16T23:46:06.038931Z	    shortDescription,
2025-09-16T23:46:06.039092Z	    image,
2025-09-16T23:46:06.039202Z	    brand->{
2025-09-16T23:46:06.039341Z	      name,
2025-09-16T23:46:06.039444Z	      "slug": slug.current,
2025-09-16T23:46:06.039545Z	      logo
2025-09-16T23:46:06.039747Z	    },
2025-09-16T23:46:06.040208Z	    category->{
2025-09-16T23:46:06.040316Z	      name,
2025-09-16T23:46:06.040412Z	      "slug": slug.current
2025-09-16T23:46:06.040499Z	    },
2025-09-16T23:46:06.040586Z	    pricing{
2025-09-16T23:46:06.041254Z	      currency,
2025-09-16T23:46:06.044778Z	      tiers[]{
2025-09-16T23:46:06.04501Z	        quantity,
2025-09-16T23:46:06.045275Z	        price,
2025-09-16T23:46:06.045467Z	        unit
2025-09-16T23:46:06.04558Z	      },
2025-09-16T23:46:06.045755Z	      moq,
2025-09-16T23:46:06.046054Z	      leadTime,
2025-09-16T23:46:06.046331Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:06.046486Z	      "price": tiers[0].price,
2025-09-16T23:46:06.046604Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:06.046743Z	    },
2025-09-16T23:46:06.046857Z	    inventory{
2025-09-16T23:46:06.046967Z	      quantity,
2025-09-16T23:46:06.047072Z	      status,
2025-09-16T23:46:06.047168Z	      warehouse,
2025-09-16T23:46:06.047258Z	      lastUpdated,
2025-09-16T23:46:06.047353Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:06.047464Z	      "inStock": status == "in_stock",
2025-09-16T23:46:06.047569Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:06.047689Z	    },
2025-09-16T23:46:06.047801Z	    isActive,
2025-09-16T23:46:06.047902Z	    isFeatured,
2025-09-16T23:46:06.048Z	    isNew,
2025-09-16T23:46:06.0481Z	    _createdAt,
2025-09-16T23:46:06.048206Z	    _updatedAt
2025-09-16T23:46:06.048308Z	  
2025-09-16T23:46:06.050749Z	      },
2025-09-16T23:46:06.050915Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:46:06.051042Z	    }
2025-09-16T23:46:06.051152Z	  
2025-09-16T23:46:06.051256Z	Query parameters: {
2025-09-16T23:46:06.051493Z	  limit: 8,
2025-09-16T23:46:06.052283Z	  offset: 0,
2025-09-16T23:46:06.052401Z	  category: undefined,
2025-09-16T23:46:06.05251Z	  brand: 'Electronicon',
2025-09-16T23:46:06.052626Z	  featured: undefined
2025-09-16T23:46:06.053068Z	}
2025-09-16T23:46:06.053195Z	Fetching solutions with query: 
2025-09-16T23:46:06.053595Z	    {
2025-09-16T23:46:06.053746Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:06.053877Z	        
2025-09-16T23:46:06.053989Z	    _id,
2025-09-16T23:46:06.054097Z	    title,
2025-09-16T23:46:06.054204Z	    "slug": slug.current,
2025-09-16T23:46:06.054305Z	    summary,
2025-09-16T23:46:06.054403Z	    description,
2025-09-16T23:46:06.054523Z	    coverImage,
2025-09-16T23:46:06.054623Z	    primaryBrand->{
2025-09-16T23:46:06.054735Z	      _id,
2025-09-16T23:46:06.054836Z	      name,
2025-09-16T23:46:06.055314Z	      "slug": slug.current,
2025-09-16T23:46:06.055451Z	      logo
2025-09-16T23:46:06.055582Z	    },
2025-09-16T23:46:06.055749Z	    relatedBrands[]->{
2025-09-16T23:46:06.055875Z	      _id,
2025-09-16T23:46:06.056074Z	      name,
2025-09-16T23:46:06.056203Z	      "slug": slug.current,
2025-09-16T23:46:06.056345Z	      logo
2025-09-16T23:46:06.056539Z	    },
2025-09-16T23:46:06.056688Z	    targetMarket,
2025-09-16T23:46:06.056834Z	    complexity,
2025-09-16T23:46:06.056972Z	    publishedAt,
2025-09-16T23:46:06.057106Z	    isPublished,
2025-09-16T23:46:06.057234Z	    isFeatured,
2025-09-16T23:46:06.057371Z	    viewCount,
2025-09-16T23:46:06.057511Z	    _createdAt,
2025-09-16T23:46:06.057638Z	    _updatedAt
2025-09-16T23:46:06.057782Z	  
2025-09-16T23:46:06.057902Z	      },
2025-09-16T23:46:06.058032Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:46:06.058161Z	    }
2025-09-16T23:46:06.05829Z	  
2025-09-16T23:46:06.0584Z	Query parameters: {
2025-09-16T23:46:06.058532Z	  limit: 4,
2025-09-16T23:46:06.058647Z	  offset: 0,
2025-09-16T23:46:06.058794Z	  targetMarket: undefined,
2025-09-16T23:46:06.058931Z	  brand: 'Electronicon',
2025-09-16T23:46:06.059045Z	  featured: undefined
2025-09-16T23:46:06.059178Z	}
2025-09-16T23:46:06.059328Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:46:06.059462Z	Products fetch result: {
2025-09-16T23:46:06.059593Z	  totalProducts: 2,
2025-09-16T23:46:06.059746Z	  fetchedProducts: 2,
2025-09-16T23:46:06.059866Z	  firstProduct: {
2025-09-16T23:46:06.059999Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:46:06.060131Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:46:06.060245Z	    _type: 'product',
2025-09-16T23:46:06.060378Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:46:06.060486Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:46:06.060615Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:46:06.060764Z	    image: null,
2025-09-16T23:46:06.060885Z	    inventory: {
2025-09-16T23:46:06.061009Z	      inStock: true,
2025-09-16T23:46:06.061125Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:46:06.061255Z	      quantity: 0,
2025-09-16T23:46:06.061378Z	      status: 'in_stock',
2025-09-16T23:46:06.061504Z	      warehouse: null
2025-09-16T23:46:06.061641Z	    },
2025-09-16T23:46:06.061807Z	    isActive: true,
2025-09-16T23:46:06.06195Z	    isFeatured: false,
2025-09-16T23:46:06.062076Z	    isNew: false,
2025-09-16T23:46:06.062186Z	    partNumber: '99999',
2025-09-16T23:46:06.062316Z	    pricing: {
2025-09-16T23:46:06.06244Z	      currency: 'CNY',
2025-09-16T23:46:06.062558Z	      leadTime: null,
2025-09-16T23:46:06.06271Z	      moq: null,
2025-09-16T23:46:06.062831Z	      price: null,
2025-09-16T23:46:06.062959Z	      tiers: null
2025-09-16T23:46:06.063086Z	    },
2025-09-16T23:46:06.06322Z	    shortDescription: null,
2025-09-16T23:46:06.063337Z	    slug: '99999',
2025-09-16T23:46:06.063477Z	    title: '99999'
2025-09-16T23:46:06.063601Z	  }
2025-09-16T23:46:06.063766Z	}
2025-09-16T23:46:06.063895Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:06.064031Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:46:06.064175Z	Fetching products with query: 
2025-09-16T23:46:06.0643Z	    {
2025-09-16T23:46:06.064435Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:06.064566Z	        
2025-09-16T23:46:06.064707Z	    _id,
2025-09-16T23:46:06.064852Z	    _type,
2025-09-16T23:46:06.065034Z	    partNumber,
2025-09-16T23:46:06.065164Z	    "slug": slug.current,
2025-09-16T23:46:06.065277Z	    title,
2025-09-16T23:46:06.065434Z	    shortDescription,
2025-09-16T23:46:06.065571Z	    image,
2025-09-16T23:46:06.065732Z	    brand->{
2025-09-16T23:46:06.065867Z	      name,
2025-09-16T23:46:06.065998Z	      "slug": slug.current,
2025-09-16T23:46:06.066135Z	      logo
2025-09-16T23:46:06.066255Z	    },
2025-09-16T23:46:06.066392Z	    category->{
2025-09-16T23:46:06.066531Z	      name,
2025-09-16T23:46:06.066698Z	      "slug": slug.current
2025-09-16T23:46:06.066859Z	    },
2025-09-16T23:46:06.066983Z	    pricing{
2025-09-16T23:46:06.067182Z	      currency,
2025-09-16T23:46:06.067321Z	      tiers[]{
2025-09-16T23:46:06.067429Z	        quantity,
2025-09-16T23:46:06.067536Z	        price,
2025-09-16T23:46:06.067641Z	        unit
2025-09-16T23:46:06.067773Z	      },
2025-09-16T23:46:06.067932Z	      moq,
2025-09-16T23:46:06.068063Z	      leadTime,
2025-09-16T23:46:06.068174Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:06.068296Z	      "price": tiers[0].price,
2025-09-16T23:46:06.068447Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:06.068567Z	    },
2025-09-16T23:46:06.068703Z	    inventory{
2025-09-16T23:46:06.068856Z	      quantity,
2025-09-16T23:46:06.068974Z	      status,
2025-09-16T23:46:06.069081Z	      warehouse,
2025-09-16T23:46:06.069204Z	      lastUpdated,
2025-09-16T23:46:06.06936Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:06.069474Z	      "inStock": status == "in_stock",
2025-09-16T23:46:06.069577Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:06.069696Z	    },
2025-09-16T23:46:06.069802Z	    isActive,
2025-09-16T23:46:06.069903Z	    isFeatured,
2025-09-16T23:46:06.070002Z	    isNew,
2025-09-16T23:46:06.0701Z	    _createdAt,
2025-09-16T23:46:06.070207Z	    _updatedAt
2025-09-16T23:46:06.070315Z	  
2025-09-16T23:46:06.070423Z	      },
2025-09-16T23:46:06.070538Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:46:06.070693Z	    }
2025-09-16T23:46:06.070856Z	  
2025-09-16T23:46:06.070994Z	Query parameters: {
2025-09-16T23:46:06.071113Z	  limit: 8,
2025-09-16T23:46:06.071545Z	  offset: 0,
2025-09-16T23:46:06.125889Z	  category: undefined,
2025-09-16T23:46:06.126093Z	  brand: 'Electronicon',
2025-09-16T23:46:06.126284Z	  featured: undefined
2025-09-16T23:46:06.126408Z	}
2025-09-16T23:46:06.127007Z	Fetching solutions with query: 
2025-09-16T23:46:06.127742Z	    {
2025-09-16T23:46:06.12789Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:06.12832Z	        
2025-09-16T23:46:06.128501Z	    _id,
2025-09-16T23:46:06.12869Z	    title,
2025-09-16T23:46:06.128859Z	    "slug": slug.current,
2025-09-16T23:46:06.129015Z	    summary,
2025-09-16T23:46:06.129177Z	    description,
2025-09-16T23:46:06.12933Z	    coverImage,
2025-09-16T23:46:06.129542Z	    primaryBrand->{
2025-09-16T23:46:06.129666Z	      _id,
2025-09-16T23:46:06.129832Z	      name,
2025-09-16T23:46:06.129944Z	      "slug": slug.current,
2025-09-16T23:46:06.130098Z	      logo
2025-09-16T23:46:06.130259Z	    },
2025-09-16T23:46:06.130416Z	    relatedBrands[]->{
2025-09-16T23:46:06.130549Z	      _id,
2025-09-16T23:46:06.130714Z	      name,
2025-09-16T23:46:06.130868Z	      "slug": slug.current,
2025-09-16T23:46:06.131Z	      logo
2025-09-16T23:46:06.131112Z	    },
2025-09-16T23:46:06.131461Z	    targetMarket,
2025-09-16T23:46:06.131799Z	    complexity,
2025-09-16T23:46:06.131933Z	    publishedAt,
2025-09-16T23:46:06.132042Z	    isPublished,
2025-09-16T23:46:06.132149Z	    isFeatured,
2025-09-16T23:46:06.132249Z	    viewCount,
2025-09-16T23:46:06.132344Z	    _createdAt,
2025-09-16T23:46:06.132479Z	    _updatedAt
2025-09-16T23:46:06.132595Z	  
2025-09-16T23:46:06.132733Z	      },
2025-09-16T23:46:06.132851Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:46:06.132964Z	    }
2025-09-16T23:46:06.133079Z	  
2025-09-16T23:46:06.133221Z	Query parameters: {
2025-09-16T23:46:06.133333Z	  limit: 4,
2025-09-16T23:46:06.133454Z	  offset: 0,
2025-09-16T23:46:06.133588Z	  targetMarket: undefined,
2025-09-16T23:46:06.133733Z	  brand: 'Electronicon',
2025-09-16T23:46:06.133847Z	  featured: undefined
2025-09-16T23:46:06.133946Z	}
2025-09-16T23:46:06.134184Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:46:06.134305Z	Products fetch result: {
2025-09-16T23:46:06.13441Z	  totalProducts: 2,
2025-09-16T23:46:06.134511Z	  fetchedProducts: 2,
2025-09-16T23:46:06.134608Z	  firstProduct: {
2025-09-16T23:46:06.134705Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:46:06.134831Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:46:06.134939Z	    _type: 'product',
2025-09-16T23:46:06.135049Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:46:06.135159Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:46:06.135266Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:46:06.135369Z	    image: null,
2025-09-16T23:46:06.135745Z	    inventory: {
2025-09-16T23:46:06.137056Z	      inStock: true,
2025-09-16T23:46:06.137392Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:46:06.137777Z	      quantity: 0,
2025-09-16T23:46:06.138309Z	      status: 'in_stock',
2025-09-16T23:46:06.138478Z	      warehouse: null
2025-09-16T23:46:06.138606Z	    },
2025-09-16T23:46:06.138732Z	    isActive: true,
2025-09-16T23:46:06.138851Z	    isFeatured: false,
2025-09-16T23:46:06.13897Z	    isNew: false,
2025-09-16T23:46:06.139076Z	    partNumber: '99999',
2025-09-16T23:46:06.139307Z	    pricing: {
2025-09-16T23:46:06.139443Z	      currency: 'CNY',
2025-09-16T23:46:06.13957Z	      leadTime: null,
2025-09-16T23:46:06.143633Z	      moq: null,
2025-09-16T23:46:06.143959Z	      price: null,
2025-09-16T23:46:06.144086Z	      tiers: null
2025-09-16T23:46:06.144192Z	    },
2025-09-16T23:46:06.144301Z	    shortDescription: null,
2025-09-16T23:46:06.14548Z	    slug: '99999',
2025-09-16T23:46:06.145598Z	    title: '99999'
2025-09-16T23:46:06.145727Z	  }
2025-09-16T23:46:06.145862Z	}
2025-09-16T23:46:06.14597Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:06.146081Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-16T23:46:06.146242Z	Fetching products with query: 
2025-09-16T23:46:06.146408Z	    {
2025-09-16T23:46:06.146517Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:06.146614Z	        
2025-09-16T23:46:06.14674Z	    _id,
2025-09-16T23:46:06.146834Z	    _type,
2025-09-16T23:46:06.146922Z	    partNumber,
2025-09-16T23:46:06.14702Z	    "slug": slug.current,
2025-09-16T23:46:06.147372Z	    title,
2025-09-16T23:46:06.147541Z	    shortDescription,
2025-09-16T23:46:06.147813Z	    image,
2025-09-16T23:46:06.148005Z	    brand->{
2025-09-16T23:46:06.148117Z	      name,
2025-09-16T23:46:06.148246Z	      "slug": slug.current,
2025-09-16T23:46:06.148354Z	      logo
2025-09-16T23:46:06.148466Z	    },
2025-09-16T23:46:06.148652Z	    category->{
2025-09-16T23:46:06.148792Z	      name,
2025-09-16T23:46:06.149004Z	      "slug": slug.current
2025-09-16T23:46:06.149141Z	    },
2025-09-16T23:46:06.149367Z	    pricing{
2025-09-16T23:46:06.149507Z	      currency,
2025-09-16T23:46:06.14963Z	      tiers[]{
2025-09-16T23:46:06.149773Z	        quantity,
2025-09-16T23:46:06.149908Z	        price,
2025-09-16T23:46:06.150021Z	        unit
2025-09-16T23:46:06.150125Z	      },
2025-09-16T23:46:06.15024Z	      moq,
2025-09-16T23:46:06.150349Z	      leadTime,
2025-09-16T23:46:06.150488Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:06.150604Z	      "price": tiers[0].price,
2025-09-16T23:46:06.150743Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:06.150856Z	    },
2025-09-16T23:46:06.150968Z	    inventory{
2025-09-16T23:46:06.151106Z	      quantity,
2025-09-16T23:46:06.151218Z	      status,
2025-09-16T23:46:06.151322Z	      warehouse,
2025-09-16T23:46:06.151419Z	      lastUpdated,
2025-09-16T23:46:06.15152Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:06.151622Z	      "inStock": status == "in_stock",
2025-09-16T23:46:06.151922Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:06.152056Z	    },
2025-09-16T23:46:06.152181Z	    isActive,
2025-09-16T23:46:06.152289Z	    isFeatured,
2025-09-16T23:46:06.152456Z	    isNew,
2025-09-16T23:46:06.152577Z	    _createdAt,
2025-09-16T23:46:06.152714Z	    _updatedAt
2025-09-16T23:46:06.152828Z	  
2025-09-16T23:46:06.152927Z	      },
2025-09-16T23:46:06.153032Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-16T23:46:06.153139Z	    }
2025-09-16T23:46:06.153243Z	  
2025-09-16T23:46:06.153343Z	Query parameters: {
2025-09-16T23:46:06.153449Z	  limit: 8,
2025-09-16T23:46:06.153557Z	  offset: 0,
2025-09-16T23:46:06.153664Z	  category: undefined,
2025-09-16T23:46:06.153811Z	  brand: 'mediatek',
2025-09-16T23:46:06.153922Z	  featured: undefined
2025-09-16T23:46:06.154029Z	}
2025-09-16T23:46:06.154128Z	Fetching solutions with query: 
2025-09-16T23:46:06.15423Z	    {
2025-09-16T23:46:06.154332Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:06.154439Z	        
2025-09-16T23:46:06.154539Z	    _id,
2025-09-16T23:46:06.154645Z	    title,
2025-09-16T23:46:06.154918Z	    "slug": slug.current,
2025-09-16T23:46:06.155057Z	    summary,
2025-09-16T23:46:06.155398Z	    description,
2025-09-16T23:46:06.15583Z	    coverImage,
2025-09-16T23:46:06.156083Z	    primaryBrand->{
2025-09-16T23:46:06.156463Z	      _id,
2025-09-16T23:46:06.15683Z	      name,
2025-09-16T23:46:06.157101Z	      "slug": slug.current,
2025-09-16T23:46:06.157327Z	      logo
2025-09-16T23:46:06.157568Z	    },
2025-09-16T23:46:06.15773Z	    relatedBrands[]->{
2025-09-16T23:46:06.157885Z	      _id,
2025-09-16T23:46:06.157993Z	      name,
2025-09-16T23:46:06.158134Z	      "slug": slug.current,
2025-09-16T23:46:06.158321Z	      logo
2025-09-16T23:46:06.158459Z	    },
2025-09-16T23:46:06.158573Z	    targetMarket,
2025-09-16T23:46:06.158706Z	    complexity,
2025-09-16T23:46:06.158816Z	    publishedAt,
2025-09-16T23:46:06.15892Z	    isPublished,
2025-09-16T23:46:06.159018Z	    isFeatured,
2025-09-16T23:46:06.159121Z	    viewCount,
2025-09-16T23:46:06.159237Z	    _createdAt,
2025-09-16T23:46:06.159387Z	    _updatedAt
2025-09-16T23:46:06.159539Z	  
2025-09-16T23:46:06.159686Z	      },
2025-09-16T23:46:06.159813Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-16T23:46:06.159972Z	    }
2025-09-16T23:46:06.160102Z	  
2025-09-16T23:46:06.160263Z	Query parameters: {
2025-09-16T23:46:06.160406Z	  limit: 4,
2025-09-16T23:46:06.160543Z	  offset: 0,
2025-09-16T23:46:06.160689Z	  targetMarket: undefined,
2025-09-16T23:46:06.16083Z	  brand: 'mediatek',
2025-09-16T23:46:06.160974Z	  featured: undefined
2025-09-16T23:46:06.16111Z	}
2025-09-16T23:46:06.161249Z	✅ [getBrandData] Found brand: MediaTek
2025-09-16T23:46:06.161384Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:06.161528Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:06.161695Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-16T23:46:06.16188Z	Fetching products with query: 
2025-09-16T23:46:06.162025Z	    {
2025-09-16T23:46:06.162179Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:06.16236Z	        
2025-09-16T23:46:06.162523Z	    _id,
2025-09-16T23:46:06.162622Z	    _type,
2025-09-16T23:46:06.162744Z	    partNumber,
2025-09-16T23:46:06.16284Z	    "slug": slug.current,
2025-09-16T23:46:06.163025Z	    title,
2025-09-16T23:46:06.163131Z	    shortDescription,
2025-09-16T23:46:06.163221Z	    image,
2025-09-16T23:46:06.163332Z	    brand->{
2025-09-16T23:46:06.16342Z	      name,
2025-09-16T23:46:06.163547Z	      "slug": slug.current,
2025-09-16T23:46:06.163644Z	      logo
2025-09-16T23:46:06.163783Z	    },
2025-09-16T23:46:06.163881Z	    category->{
2025-09-16T23:46:06.16398Z	      name,
2025-09-16T23:46:06.164075Z	      "slug": slug.current
2025-09-16T23:46:06.164169Z	    },
2025-09-16T23:46:06.164261Z	    pricing{
2025-09-16T23:46:06.164356Z	      currency,
2025-09-16T23:46:06.164467Z	      tiers[]{
2025-09-16T23:46:06.164568Z	        quantity,
2025-09-16T23:46:06.164671Z	        price,
2025-09-16T23:46:06.164789Z	        unit
2025-09-16T23:46:06.164876Z	      },
2025-09-16T23:46:06.164967Z	      moq,
2025-09-16T23:46:06.165056Z	      leadTime,
2025-09-16T23:46:06.165158Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:06.165274Z	      "price": tiers[0].price,
2025-09-16T23:46:06.165366Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:06.165467Z	    },
2025-09-16T23:46:06.165577Z	    inventory{
2025-09-16T23:46:06.165686Z	      quantity,
2025-09-16T23:46:06.165835Z	      status,
2025-09-16T23:46:06.165941Z	      warehouse,
2025-09-16T23:46:06.166039Z	      lastUpdated,
2025-09-16T23:46:06.166194Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:06.166308Z	      "inStock": status == "in_stock",
2025-09-16T23:46:06.166401Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:06.166531Z	    },
2025-09-16T23:46:06.166821Z	    isActive,
2025-09-16T23:46:06.166941Z	    isFeatured,
2025-09-16T23:46:06.167032Z	    isNew,
2025-09-16T23:46:06.167121Z	    _createdAt,
2025-09-16T23:46:06.167207Z	    _updatedAt
2025-09-16T23:46:06.167294Z	  
2025-09-16T23:46:06.167527Z	      },
2025-09-16T23:46:06.16764Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-16T23:46:06.167768Z	    }
2025-09-16T23:46:06.167867Z	  
2025-09-16T23:46:06.16796Z	Query parameters: {
2025-09-16T23:46:06.168056Z	  limit: 8,
2025-09-16T23:46:06.168146Z	  offset: 0,
2025-09-16T23:46:06.168236Z	  category: undefined,
2025-09-16T23:46:06.168338Z	  brand: 'mediatek',
2025-09-16T23:46:06.168435Z	  featured: undefined
2025-09-16T23:46:06.168527Z	}
2025-09-16T23:46:06.168642Z	Fetching solutions with query: 
2025-09-16T23:46:06.168773Z	    {
2025-09-16T23:46:06.168863Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:06.16896Z	        
2025-09-16T23:46:06.169372Z	    _id,
2025-09-16T23:46:06.170199Z	    title,
2025-09-16T23:46:06.170356Z	    "slug": slug.current,
2025-09-16T23:46:06.170469Z	    summary,
2025-09-16T23:46:06.170789Z	    description,
2025-09-16T23:46:06.170924Z	    coverImage,
2025-09-16T23:46:06.171028Z	    primaryBrand->{
2025-09-16T23:46:06.17112Z	      _id,
2025-09-16T23:46:06.171205Z	      name,
2025-09-16T23:46:06.171293Z	      "slug": slug.current,
2025-09-16T23:46:06.171376Z	      logo
2025-09-16T23:46:06.171472Z	    },
2025-09-16T23:46:06.171561Z	    relatedBrands[]->{
2025-09-16T23:46:06.171646Z	      _id,
2025-09-16T23:46:06.171758Z	      name,
2025-09-16T23:46:06.171856Z	      "slug": slug.current,
2025-09-16T23:46:06.171948Z	      logo
2025-09-16T23:46:06.172032Z	    },
2025-09-16T23:46:06.172303Z	    targetMarket,
2025-09-16T23:46:06.172511Z	    complexity,
2025-09-16T23:46:06.172809Z	    publishedAt,
2025-09-16T23:46:06.173008Z	    isPublished,
2025-09-16T23:46:06.173458Z	    isFeatured,
2025-09-16T23:46:06.173794Z	    viewCount,
2025-09-16T23:46:06.174184Z	    _createdAt,
2025-09-16T23:46:06.174328Z	    _updatedAt
2025-09-16T23:46:06.174447Z	  
2025-09-16T23:46:06.174563Z	      },
2025-09-16T23:46:06.174701Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-16T23:46:06.174829Z	    }
2025-09-16T23:46:06.174935Z	  
2025-09-16T23:46:06.175034Z	Query parameters: {
2025-09-16T23:46:06.175136Z	  limit: 4,
2025-09-16T23:46:06.175242Z	  offset: 0,
2025-09-16T23:46:06.175851Z	  targetMarket: undefined,
2025-09-16T23:46:06.175968Z	  brand: 'mediatek',
2025-09-16T23:46:06.176073Z	  featured: undefined
2025-09-16T23:46:06.176187Z	}
2025-09-16T23:46:06.178165Z	✅ [getBrandData] Found brand: MediaTek
2025-09-16T23:46:06.178308Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:06.178408Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:06.1785Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-16T23:46:06.178736Z	Fetching products with query: 
2025-09-16T23:46:06.17892Z	    {
2025-09-16T23:46:06.179041Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:06.179146Z	        
2025-09-16T23:46:06.179246Z	    _id,
2025-09-16T23:46:06.179471Z	    _type,
2025-09-16T23:46:06.179747Z	    partNumber,
2025-09-16T23:46:06.179868Z	    "slug": slug.current,
2025-09-16T23:46:06.179974Z	    title,
2025-09-16T23:46:06.180068Z	    shortDescription,
2025-09-16T23:46:06.180154Z	    image,
2025-09-16T23:46:06.180241Z	    brand->{
2025-09-16T23:46:06.180332Z	      name,
2025-09-16T23:46:06.180422Z	      "slug": slug.current,
2025-09-16T23:46:06.180761Z	      logo
2025-09-16T23:46:06.225524Z	    },
2025-09-16T23:46:06.225914Z	    category->{
2025-09-16T23:46:06.22627Z	      name,
2025-09-16T23:46:06.226652Z	      "slug": slug.current
2025-09-16T23:46:06.226822Z	    },
2025-09-16T23:46:06.226948Z	    pricing{
2025-09-16T23:46:06.227051Z	      currency,
2025-09-16T23:46:06.227165Z	      tiers[]{
2025-09-16T23:46:06.22727Z	        quantity,
2025-09-16T23:46:06.22737Z	        price,
2025-09-16T23:46:06.227481Z	        unit
2025-09-16T23:46:06.227585Z	      },
2025-09-16T23:46:06.227706Z	      moq,
2025-09-16T23:46:06.227897Z	      leadTime,
2025-09-16T23:46:06.228142Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:06.228352Z	      "price": tiers[0].price,
2025-09-16T23:46:06.228534Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:06.228742Z	    },
2025-09-16T23:46:06.228939Z	    inventory{
2025-09-16T23:46:06.229111Z	      quantity,
2025-09-16T23:46:06.229244Z	      status,
2025-09-16T23:46:06.229354Z	      warehouse,
2025-09-16T23:46:06.229471Z	      lastUpdated,
2025-09-16T23:46:06.229579Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:06.229695Z	      "inStock": status == "in_stock",
2025-09-16T23:46:06.229803Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:06.229913Z	    },
2025-09-16T23:46:06.230026Z	    isActive,
2025-09-16T23:46:06.230138Z	    isFeatured,
2025-09-16T23:46:06.23025Z	    isNew,
2025-09-16T23:46:06.230356Z	    _createdAt,
2025-09-16T23:46:06.230493Z	    _updatedAt
2025-09-16T23:46:06.230601Z	  
2025-09-16T23:46:06.230729Z	      },
2025-09-16T23:46:06.230839Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-16T23:46:06.230957Z	    }
2025-09-16T23:46:06.231056Z	  
2025-09-16T23:46:06.231161Z	Query parameters: {
2025-09-16T23:46:06.231267Z	  limit: 8,
2025-09-16T23:46:06.231368Z	  offset: 0,
2025-09-16T23:46:06.231484Z	  category: undefined,
2025-09-16T23:46:06.231581Z	  brand: '英飞凌',
2025-09-16T23:46:06.231671Z	  featured: undefined
2025-09-16T23:46:06.231795Z	}
2025-09-16T23:46:06.231897Z	Fetching solutions with query: 
2025-09-16T23:46:06.231994Z	    {
2025-09-16T23:46:06.232099Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:06.232202Z	        
2025-09-16T23:46:06.232303Z	    _id,
2025-09-16T23:46:06.23241Z	    title,
2025-09-16T23:46:06.23276Z	    "slug": slug.current,
2025-09-16T23:46:06.232898Z	    summary,
2025-09-16T23:46:06.233009Z	    description,
2025-09-16T23:46:06.23313Z	    coverImage,
2025-09-16T23:46:06.233237Z	    primaryBrand->{
2025-09-16T23:46:06.233551Z	      _id,
2025-09-16T23:46:06.233703Z	      name,
2025-09-16T23:46:06.233805Z	      "slug": slug.current,
2025-09-16T23:46:06.233886Z	      logo
2025-09-16T23:46:06.233962Z	    },
2025-09-16T23:46:06.234105Z	    relatedBrands[]->{
2025-09-16T23:46:06.234316Z	      _id,
2025-09-16T23:46:06.234633Z	      name,
2025-09-16T23:46:06.234841Z	      "slug": slug.current,
2025-09-16T23:46:06.234959Z	      logo
2025-09-16T23:46:06.235124Z	    },
2025-09-16T23:46:06.235225Z	    targetMarket,
2025-09-16T23:46:06.235374Z	    complexity,
2025-09-16T23:46:06.235499Z	    publishedAt,
2025-09-16T23:46:06.235611Z	    isPublished,
2025-09-16T23:46:06.235758Z	    isFeatured,
2025-09-16T23:46:06.23587Z	    viewCount,
2025-09-16T23:46:06.235973Z	    _createdAt,
2025-09-16T23:46:06.236069Z	    _updatedAt
2025-09-16T23:46:06.236204Z	  
2025-09-16T23:46:06.236375Z	      },
2025-09-16T23:46:06.236502Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-16T23:46:06.236643Z	    }
2025-09-16T23:46:06.236828Z	  
2025-09-16T23:46:06.236949Z	Query parameters: {
2025-09-16T23:46:06.237045Z	  limit: 4,
2025-09-16T23:46:06.237136Z	  offset: 0,
2025-09-16T23:46:06.237514Z	  targetMarket: undefined,
2025-09-16T23:46:06.237642Z	  brand: '英飞凌',
2025-09-16T23:46:06.237778Z	  featured: undefined
2025-09-16T23:46:06.237887Z	}
2025-09-16T23:46:06.237997Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-16T23:46:06.2381Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:06.238201Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:06.2383Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-16T23:46:06.238721Z	Fetching products with query: 
2025-09-16T23:46:06.238875Z	    {
2025-09-16T23:46:06.23906Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:06.239249Z	        
2025-09-16T23:46:06.23936Z	    _id,
2025-09-16T23:46:06.239464Z	    _type,
2025-09-16T23:46:06.239557Z	    partNumber,
2025-09-16T23:46:06.23976Z	    "slug": slug.current,
2025-09-16T23:46:06.239883Z	    title,
2025-09-16T23:46:06.239984Z	    shortDescription,
2025-09-16T23:46:06.240087Z	    image,
2025-09-16T23:46:06.240194Z	    brand->{
2025-09-16T23:46:06.240303Z	      name,
2025-09-16T23:46:06.240415Z	      "slug": slug.current,
2025-09-16T23:46:06.240506Z	      logo
2025-09-16T23:46:06.240586Z	    },
2025-09-16T23:46:06.240692Z	    category->{
2025-09-16T23:46:06.240792Z	      name,
2025-09-16T23:46:06.240883Z	      "slug": slug.current
2025-09-16T23:46:06.240979Z	    },
2025-09-16T23:46:06.241078Z	    pricing{
2025-09-16T23:46:06.241176Z	      currency,
2025-09-16T23:46:06.241277Z	      tiers[]{
2025-09-16T23:46:06.241373Z	        quantity,
2025-09-16T23:46:06.241466Z	        price,
2025-09-16T23:46:06.241557Z	        unit
2025-09-16T23:46:06.24165Z	      },
2025-09-16T23:46:06.241765Z	      moq,
2025-09-16T23:46:06.241859Z	      leadTime,
2025-09-16T23:46:06.241962Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:06.242066Z	      "price": tiers[0].price,
2025-09-16T23:46:06.242164Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:06.242267Z	    },
2025-09-16T23:46:06.24237Z	    inventory{
2025-09-16T23:46:06.24248Z	      quantity,
2025-09-16T23:46:06.242581Z	      status,
2025-09-16T23:46:06.242717Z	      warehouse,
2025-09-16T23:46:06.24283Z	      lastUpdated,
2025-09-16T23:46:06.242972Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:06.243082Z	      "inStock": status == "in_stock",
2025-09-16T23:46:06.243192Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:06.243299Z	    },
2025-09-16T23:46:06.243403Z	    isActive,
2025-09-16T23:46:06.243504Z	    isFeatured,
2025-09-16T23:46:06.243613Z	    isNew,
2025-09-16T23:46:06.243746Z	    _createdAt,
2025-09-16T23:46:06.243862Z	    _updatedAt
2025-09-16T23:46:06.243973Z	  
2025-09-16T23:46:06.244076Z	      },
2025-09-16T23:46:06.244175Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-16T23:46:06.244289Z	    }
2025-09-16T23:46:06.244382Z	  
2025-09-16T23:46:06.244478Z	Query parameters: {
2025-09-16T23:46:06.24458Z	  limit: 8,
2025-09-16T23:46:06.24469Z	  offset: 0,
2025-09-16T23:46:06.2448Z	  category: undefined,
2025-09-16T23:46:06.244903Z	  brand: '英飞凌',
2025-09-16T23:46:06.245008Z	  featured: undefined
2025-09-16T23:46:06.245099Z	}
2025-09-16T23:46:06.245227Z	Fetching solutions with query: 
2025-09-16T23:46:06.24545Z	    {
2025-09-16T23:46:06.245585Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:06.245727Z	        
2025-09-16T23:46:06.245858Z	    _id,
2025-09-16T23:46:06.245956Z	    title,
2025-09-16T23:46:06.246598Z	    "slug": slug.current,
2025-09-16T23:46:06.246781Z	    summary,
2025-09-16T23:46:06.246903Z	    description,
2025-09-16T23:46:06.247016Z	    coverImage,
2025-09-16T23:46:06.247118Z	    primaryBrand->{
2025-09-16T23:46:06.247215Z	      _id,
2025-09-16T23:46:06.247313Z	      name,
2025-09-16T23:46:06.247405Z	      "slug": slug.current,
2025-09-16T23:46:06.24752Z	      logo
2025-09-16T23:46:06.247638Z	    },
2025-09-16T23:46:06.247759Z	    relatedBrands[]->{
2025-09-16T23:46:06.24786Z	      _id,
2025-09-16T23:46:06.247955Z	      name,
2025-09-16T23:46:06.248054Z	      "slug": slug.current,
2025-09-16T23:46:06.248154Z	      logo
2025-09-16T23:46:06.248271Z	    },
2025-09-16T23:46:06.248376Z	    targetMarket,
2025-09-16T23:46:06.248493Z	    complexity,
2025-09-16T23:46:06.248929Z	    publishedAt,
2025-09-16T23:46:06.249038Z	    isPublished,
2025-09-16T23:46:06.249122Z	    isFeatured,
2025-09-16T23:46:06.249203Z	    viewCount,
2025-09-16T23:46:06.249281Z	    _createdAt,
2025-09-16T23:46:06.249354Z	    _updatedAt
2025-09-16T23:46:06.249492Z	  
2025-09-16T23:46:06.249592Z	      },
2025-09-16T23:46:06.249717Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-16T23:46:06.249863Z	    }
2025-09-16T23:46:06.249975Z	  
2025-09-16T23:46:06.250082Z	Query parameters: {
2025-09-16T23:46:06.250187Z	  limit: 4,
2025-09-16T23:46:06.250303Z	  offset: 0,
2025-09-16T23:46:06.250407Z	  targetMarket: undefined,
2025-09-16T23:46:06.250514Z	  brand: '英飞凌',
2025-09-16T23:46:06.25062Z	  featured: undefined
2025-09-16T23:46:06.250761Z	}
2025-09-16T23:46:06.250886Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-16T23:46:06.251012Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:06.251126Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:06.251242Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:06.251378Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:06.251494Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:06.251598Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:06.251732Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:06.251857Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:06.251965Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:06.252066Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:06.252161Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:06.252258Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:06.252357Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:06.252457Z	  digest: '1870762441'
2025-09-16T23:46:06.252558Z	}
2025-09-16T23:46:06.252659Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:06.252795Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:06.252896Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:06.253013Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:06.253126Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:06.253238Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:06.253367Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:06.253481Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:06.253585Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:06.25373Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:06.253839Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:06.253945Z	  digest: '1870762441'
2025-09-16T23:46:06.254038Z	}
2025-09-16T23:46:06.254136Z	
2025-09-16T23:46:06.254236Z	Error occurred prerendering page "/zh-CN/solutions/motodiriver". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:06.254344Z	
2025-09-16T23:46:06.254443Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:06.254552Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:06.254655Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:06.254794Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:06.254908Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:06.255022Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:06.255131Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:06.255247Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:06.255353Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:06.255456Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:06.255558Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:06.255664Z	
2025-09-16T23:46:06.255794Z	Error occurred prerendering page "/zh-CN/solutions/charger". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:06.255909Z	
2025-09-16T23:46:06.256074Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:06.256185Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:06.256285Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:06.256393Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:06.256524Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compi🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-16T23:46:06.258839Z	Fetching products with query: 
2025-09-16T23:46:06.258968Z	    {
2025-09-16T23:46:06.259083Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:06.259195Z	        
2025-09-16T23:46:06.259321Z	    _id,
2025-09-16T23:46:06.25942Z	    _type,
2025-09-16T23:46:06.259578Z	    partNumber,
2025-09-16T23:46:06.259731Z	    "slug": slug.current,
2025-09-16T23:46:06.259852Z	    title,
2025-09-16T23:46:06.260122Z	    shortDescription,
2025-09-16T23:46:06.260571Z	    image,
2025-09-16T23:46:06.261013Z	    brand->{
2025-09-16T23:46:06.26142Z	      name,
2025-09-16T23:46:06.261662Z	      "slug": slug.current,
2025-09-16T23:46:06.261809Z	      logo
2025-09-16T23:46:06.261933Z	    },
2025-09-16T23:46:06.262041Z	    category->{
2025-09-16T23:46:06.262276Z	      name,
2025-09-16T23:46:06.262404Z	      "slug": slug.current
2025-09-16T23:46:06.262513Z	    },
2025-09-16T23:46:06.262617Z	    pricing{
2025-09-16T23:46:06.262745Z	      currency,
2025-09-16T23:46:06.263022Z	      tiers[]{
2025-09-16T23:46:06.26337Z	        quantity,
2025-09-16T23:46:06.263747Z	        price,
2025-09-16T23:46:06.264763Z	        unit
2025-09-16T23:46:06.265045Z	      },
2025-09-16T23:46:06.265277Z	      moq,
2025-09-16T23:46:06.265511Z	      leadTime,
2025-09-16T23:46:06.266162Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:06.266297Z	      "price": tiers[0].price,
2025-09-16T23:46:06.266364Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:06.266429Z	    },
2025-09-16T23:46:06.266489Z	    inventory{
2025-09-16T23:46:06.266544Z	      quantity,
2025-09-16T23:46:06.266598Z	      status,
2025-09-16T23:46:06.266651Z	      warehouse,
2025-09-16T23:46:06.26674Z	      lastUpdated,
2025-09-16T23:46:06.266817Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:06.266943Z	      "inStock": status == "in_stock",
2025-09-16T23:46:06.267077Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:06.267183Z	    },
2025-09-16T23:46:06.267284Z	    isActive,
2025-09-16T23:46:06.267385Z	    isFeatured,
2025-09-16T23:46:06.267502Z	    isNew,
2025-09-16T23:46:06.267648Z	    _createdAt,
2025-09-16T23:46:06.267785Z	    _updatedAt
2025-09-16T23:46:06.26789Z	  
2025-09-16T23:46:06.267989Z	      },
2025-09-16T23:46:06.268453Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-16T23:46:06.268643Z	    }
2025-09-16T23:46:06.269011Z	  
2025-09-16T23:46:06.269126Z	Query parameters: {
2025-09-16T23:46:06.269478Z	  limit: 8,
2025-09-16T23:46:06.269817Z	  offset: 0,
2025-09-16T23:46:06.269967Z	  category: undefined,
2025-09-16T23:46:06.27049Z	  brand: '英飞凌',
2025-09-16T23:46:06.270852Z	  featured: undefined
2025-09-16T23:46:06.270977Z	}
2025-09-16T23:46:06.271086Z	Fetching solutions with query: 
2025-09-16T23:46:06.271188Z	    {
2025-09-16T23:46:06.271306Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:06.271881Z	        
2025-09-16T23:46:06.272032Z	    _id,
2025-09-16T23:46:06.272379Z	    title,
2025-09-16T23:46:06.272716Z	    "slug": slug.current,
2025-09-16T23:46:06.272844Z	    summary,
2025-09-16T23:46:06.272955Z	    description,
2025-09-16T23:46:06.273481Z	    coverImage,
2025-09-16T23:46:06.273626Z	    primaryBrand->{
2025-09-16T23:46:06.27396Z	      _id,
2025-09-16T23:46:06.274102Z	      name,
2025-09-16T23:46:06.274595Z	      "slug": slug.current,
2025-09-16T23:46:06.274932Z	      logo
2025-09-16T23:46:06.275065Z	    },
2025-09-16T23:46:06.275179Z	    relatedBrands[]->{
2025-09-16T23:46:06.275332Z	      _id,
2025-09-16T23:46:06.275495Z	      name,
2025-09-16T23:46:06.275669Z	      "slug": slug.current,
2025-09-16T23:46:06.275854Z	      logo
2025-09-16T23:46:06.27598Z	    },
2025-09-16T23:46:06.2761Z	    targetMarket,
2025-09-16T23:46:06.276223Z	    complexity,
2025-09-16T23:46:06.276331Z	    publishedAt,
2025-09-16T23:46:06.27646Z	    isPublished,
2025-09-16T23:46:06.276628Z	    isFeatured,
2025-09-16T23:46:06.276832Z	    viewCount,
2025-09-16T23:46:06.276969Z	    _createdAt,
2025-09-16T23:46:06.277083Z	    _updatedAt
2025-09-16T23:46:06.277196Z	  
2025-09-16T23:46:06.324111Z	      },
2025-09-16T23:46:06.324297Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-16T23:46:06.324416Z	    }
2025-09-16T23:46:06.324523Z	  
2025-09-16T23:46:06.324622Z	Query parameters: {
2025-09-16T23:46:06.324771Z	  limit: 4,
2025-09-16T23:46:06.324921Z	  offset: 0,
2025-09-16T23:46:06.325064Z	  targetMarket: undefined,
2025-09-16T23:46:06.325199Z	  brand: '英飞凌',
2025-09-16T23:46:06.325324Z	  featured: undefined
2025-09-16T23:46:06.325471Z	}
2025-09-16T23:46:06.325632Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-16T23:46:06.325811Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:06.325952Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:06.32614Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-16T23:46:06.326278Z	Fetching products with query: 
2025-09-16T23:46:06.326381Z	    {
2025-09-16T23:46:06.326571Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:06.326926Z	        
2025-09-16T23:46:06.327188Z	    _id,
2025-09-16T23:46:06.328377Z	    _type,
2025-09-16T23:46:06.328542Z	    partNumber,
2025-09-16T23:46:06.328667Z	    "slug": slug.current,
2025-09-16T23:46:06.328807Z	    title,
2025-09-16T23:46:06.328906Z	    shortDescription,
2025-09-16T23:46:06.328995Z	    image,
2025-09-16T23:46:06.329084Z	    brand->{
2025-09-16T23:46:06.329183Z	      name,
2025-09-16T23:46:06.329302Z	      "slug": slug.current,
2025-09-16T23:46:06.329407Z	      logo
2025-09-16T23:46:06.32952Z	    },
2025-09-16T23:46:06.329623Z	    category->{
2025-09-16T23:46:06.32974Z	      name,
2025-09-16T23:46:06.329848Z	      "slug": slug.current
2025-09-16T23:46:06.329958Z	    },
2025-09-16T23:46:06.33006Z	    pricing{
2025-09-16T23:46:06.33016Z	      currency,
2025-09-16T23:46:06.330276Z	      tiers[]{
2025-09-16T23:46:06.330386Z	        quantity,
2025-09-16T23:46:06.330498Z	        price,
2025-09-16T23:46:06.330604Z	        unit
2025-09-16T23:46:06.330717Z	      },
2025-09-16T23:46:06.330823Z	      moq,
2025-09-16T23:46:06.330936Z	      leadTime,
2025-09-16T23:46:06.33104Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:06.331156Z	      "price": tiers[0].price,
2025-09-16T23:46:06.331293Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:06.331402Z	    },
2025-09-16T23:46:06.331566Z	    inventory{
2025-09-16T23:46:06.331692Z	      quantity,
2025-09-16T23:46:06.331974Z	      status,
2025-09-16T23:46:06.332147Z	      warehouse,
2025-09-16T23:46:06.332526Z	      lastUpdated,
2025-09-16T23:46:06.332666Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:06.332821Z	      "inStock": status == "in_stock",
2025-09-16T23:46:06.332929Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:06.333059Z	    },
2025-09-16T23:46:06.33353Z	    isActive,
2025-09-16T23:46:06.333812Z	    isFeatured,
2025-09-16T23:46:06.334399Z	    isNew,
2025-09-16T23:46:06.334568Z	    _createdAt,
2025-09-16T23:46:06.334666Z	    _updatedAt
2025-09-16T23:46:06.334783Z	  
2025-09-16T23:46:06.335104Z	      },
2025-09-16T23:46:06.335238Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-16T23:46:06.335356Z	    }
2025-09-16T23:46:06.335491Z	  
2025-09-16T23:46:06.335609Z	Query parameters: {
2025-09-16T23:46:06.335746Z	  limit: 8,
2025-09-16T23:46:06.340425Z	  offset: 0,
2025-09-16T23:46:06.341013Z	  category: undefined,
2025-09-16T23:46:06.341169Z	  brand: '英飞凌',
2025-09-16T23:46:06.341286Z	  featured: undefined
2025-09-16T23:46:06.341401Z	}
2025-09-16T23:46:06.341508Z	Fetching solutions with query: 
2025-09-16T23:46:06.341605Z	    {
2025-09-16T23:46:06.341777Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:06.342294Z	        
2025-09-16T23:46:06.342416Z	    _id,
2025-09-16T23:46:06.342522Z	    title,
2025-09-16T23:46:06.342625Z	    "slug": slug.current,
2025-09-16T23:46:06.342755Z	    summary,
2025-09-16T23:46:06.342865Z	    description,
2025-09-16T23:46:06.342992Z	    coverImage,
2025-09-16T23:46:06.343093Z	    primaryBrand->{
2025-09-16T23:46:06.343196Z	      _id,
2025-09-16T23:46:06.343299Z	      name,
2025-09-16T23:46:06.343406Z	      "slug": slug.current,
2025-09-16T23:46:06.343897Z	      logo
2025-09-16T23:46:06.344286Z	    },
2025-09-16T23:46:06.34441Z	    relatedBrands[]->{
2025-09-16T23:46:06.344518Z	      _id,
2025-09-16T23:46:06.344628Z	      name,
2025-09-16T23:46:06.345644Z	      "slug": slug.current,
2025-09-16T23:46:06.345848Z	      logo
2025-09-16T23:46:06.346954Z	    },
2025-09-16T23:46:06.347587Z	    targetMarket,
2025-09-16T23:46:06.347833Z	    complexity,
2025-09-16T23:46:06.348229Z	    publishedAt,
2025-09-16T23:46:06.348582Z	    isPublished,
2025-09-16T23:46:06.348978Z	    isFeatured,
2025-09-16T23:46:06.349117Z	    viewCount,
2025-09-16T23:46:06.349261Z	    _createdAt,
2025-09-16T23:46:06.349428Z	    _updatedAt
2025-09-16T23:46:06.349582Z	  
2025-09-16T23:46:06.349741Z	      },
2025-09-16T23:46:06.350187Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-16T23:46:06.350578Z	    }
2025-09-16T23:46:06.350782Z	  
2025-09-16T23:46:06.351163Z	Query parameters: {
2025-09-16T23:46:06.351363Z	  limit: 4,
2025-09-16T23:46:06.351524Z	  offset: 0,
2025-09-16T23:46:06.351945Z	  targetMarket: undefined,
2025-09-16T23:46:06.352116Z	  brand: '英飞凌',
2025-09-16T23:46:06.352271Z	  featured: undefined
2025-09-16T23:46:06.352396Z	}
2025-09-16T23:46:06.352559Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-16T23:46:06.353393Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:06.353855Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:06.354007Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-16T23:46:06.354409Z	Fetching products with query: 
2025-09-16T23:46:06.354808Z	    {
2025-09-16T23:46:06.355175Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:06.355575Z	        
2025-09-16T23:46:06.355988Z	    _id,
2025-09-16T23:46:06.35616Z	    _type,
2025-09-16T23:46:06.356341Z	    partNumber,
2025-09-16T23:46:06.356522Z	    "slug": slug.current,
2025-09-16T23:46:06.356965Z	    title,
2025-09-16T23:46:06.357143Z	    shortDescription,
2025-09-16T23:46:06.357298Z	    image,
2025-09-16T23:46:06.357453Z	    brand->{
2025-09-16T23:46:06.35761Z	      name,
2025-09-16T23:46:06.357826Z	      "slug": slug.current,
2025-09-16T23:46:06.358005Z	      logo
2025-09-16T23:46:06.358161Z	    },
2025-09-16T23:46:06.358312Z	    category->{
2025-09-16T23:46:06.358465Z	      name,
2025-09-16T23:46:06.358622Z	      "slug": slug.current
2025-09-16T23:46:06.358782Z	    },
2025-09-16T23:46:06.358934Z	    pricing{
2025-09-16T23:46:06.359064Z	      currency,
2025-09-16T23:46:06.359257Z	      tiers[]{
2025-09-16T23:46:06.359421Z	        quantity,
2025-09-16T23:46:06.360062Z	        price,
2025-09-16T23:46:06.360183Z	        unit
2025-09-16T23:46:06.360289Z	      },
2025-09-16T23:46:06.360566Z	      moq,
2025-09-16T23:46:06.36074Z	      leadTime,
2025-09-16T23:46:06.360901Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:06.361068Z	      "price": tiers[0].price,
2025-09-16T23:46:06.36118Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:06.36129Z	    },
2025-09-16T23:46:06.361395Z	    inventory{
2025-09-16T23:46:06.361498Z	      quantity,
2025-09-16T23:46:06.361603Z	      status,
2025-09-16T23:46:06.361733Z	      warehouse,
2025-09-16T23:46:06.36184Z	      lastUpdated,
2025-09-16T23:46:06.361959Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:06.362086Z	      "inStock": status == "in_stock",
2025-09-16T23:46:06.362189Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:06.362286Z	    },
2025-09-16T23:46:06.362396Z	    isActive,
2025-09-16T23:46:06.3625Z	    isFeatured,
2025-09-16T23:46:06.362658Z	    isNew,
2025-09-16T23:46:06.362799Z	    _createdAt,
2025-09-16T23:46:06.362911Z	    _updatedAt
2025-09-16T23:46:06.363078Z	  
2025-09-16T23:46:06.363186Z	      },
2025-09-16T23:46:06.363289Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-16T23:46:06.363404Z	    }
2025-09-16T23:46:06.363571Z	  
2025-09-16T23:46:06.363705Z	Query parameters: {
2025-09-16T23:46:06.363824Z	  limit: 8,
2025-09-16T23:46:06.363925Z	  offset: 0,
2025-09-16T23:46:06.364032Z	  category: undefined,
2025-09-16T23:46:06.364123Z	  brand: 'lem',
2025-09-16T23:46:06.364219Z	  featured: undefined
2025-09-16T23:46:06.364309Z	}
2025-09-16T23:46:06.364401Z	Fetching solutions with query: 
2025-09-16T23:46:06.364508Z	    {
2025-09-16T23:46:06.364617Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:06.364777Z	        
2025-09-16T23:46:06.364892Z	    _id,
2025-09-16T23:46:06.364999Z	    title,
2025-09-16T23:46:06.365104Z	    "slug": slug.current,
2025-09-16T23:46:06.365206Z	    summary,
2025-09-16T23:46:06.365304Z	    description,
2025-09-16T23:46:06.365401Z	    coverImage,
2025-09-16T23:46:06.365504Z	    primaryBrand->{
2025-09-16T23:46:06.365688Z	      _id,
2025-09-16T23:46:06.365823Z	      name,
2025-09-16T23:46:06.365938Z	      "slug": slug.current,
2025-09-16T23:46:06.366113Z	      logo
2025-09-16T23:46:06.366324Z	    },
2025-09-16T23:46:06.366503Z	    relatedBrands[]->{
2025-09-16T23:46:06.366651Z	      _id,
2025-09-16T23:46:06.366918Z	      name,
2025-09-16T23:46:06.367084Z	      "slug": slug.current,
2025-09-16T23:46:06.367421Z	      logo
2025-09-16T23:46:06.367553Z	    },
2025-09-16T23:46:06.36776Z	    targetMarket,
2025-09-16T23:46:06.367906Z	    complexity,
2025-09-16T23:46:06.368137Z	    publishedAt,
2025-09-16T23:46:06.368254Z	    isPublished,
2025-09-16T23:46:06.373087Z	    isFeatured,
2025-09-16T23:46:06.373296Z	    viewCount,
2025-09-16T23:46:06.37351Z	    _createdAt,
2025-09-16T23:46:06.42973Z	    _updatedAt
2025-09-16T23:46:06.430053Z	  
2025-09-16T23:46:06.430178Z	      },
2025-09-16T23:46:06.430277Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-16T23:46:06.430422Z	    }
2025-09-16T23:46:06.436267Z	  
2025-09-16T23:46:06.43711Z	Query parameters: {
2025-09-16T23:46:06.437352Z	  limit: 4,
2025-09-16T23:46:06.437543Z	  offset: 0,
2025-09-16T23:46:06.437757Z	  targetMarket: undefined,
2025-09-16T23:46:06.437998Z	  brand: 'lem',
2025-09-16T23:46:06.438338Z	  featured: undefined
2025-09-16T23:46:06.438649Z	}
2025-09-16T23:46:06.438834Z	✅ [getBrandData] Found brand: LEM
2025-09-16T23:46:06.438954Z	Products fetch result: {
2025-09-16T23:46:06.439065Z	  totalProducts: 3,
2025-09-16T23:46:06.439172Z	  fetchedProducts: 3,
2025-09-16T23:46:06.439292Z	  firstProduct: {
2025-09-16T23:46:06.439406Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-16T23:46:06.439527Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-16T23:46:06.439628Z	    _type: 'product',
2025-09-16T23:46:06.439743Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-16T23:46:06.439852Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-16T23:46:06.439953Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-16T23:46:06.440063Z	    image: null,
2025-09-16T23:46:06.440663Z	    inventory: {
2025-09-16T23:46:06.440842Z	      inStock: true,
2025-09-16T23:46:06.441018Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-16T23:46:06.441199Z	      quantity: 0,
2025-09-16T23:46:06.441397Z	      status: 'in_stock',
2025-09-16T23:46:06.441568Z	      warehouse: null
2025-09-16T23:46:06.441729Z	    },
2025-09-16T23:46:06.441859Z	    isActive: true,
2025-09-16T23:46:06.44198Z	    isFeatured: false,
2025-09-16T23:46:06.442077Z	    isNew: false,
2025-09-16T23:46:06.442172Z	    partNumber: 'la55-p',
2025-09-16T23:46:06.442264Z	    pricing: {
2025-09-16T23:46:06.442368Z	      currency: 'CNY',
2025-09-16T23:46:06.442612Z	      leadTime: null,
2025-09-16T23:46:06.442942Z	      moq: null,
2025-09-16T23:46:06.44316Z	      price: null,
2025-09-16T23:46:06.443306Z	      tiers: null
2025-09-16T23:46:06.44362Z	    },
2025-09-16T23:46:06.44426Z	    shortDescription: '电流传感器la55-p',
2025-09-16T23:46:06.444658Z	    slug: 'la55-p',
2025-09-16T23:46:06.444824Z	    title: '电流传感器la55-p'
2025-09-16T23:46:06.445339Z	  }
2025-09-16T23:46:06.446517Z	}
2025-09-16T23:46:06.446697Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:06.447084Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-16T23:46:06.447213Z	Fetching products with query: 
2025-09-16T23:46:06.447322Z	    {
2025-09-16T23:46:06.44744Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:06.447559Z	        
2025-09-16T23:46:06.447696Z	    _id,
2025-09-16T23:46:06.447825Z	    _type,
2025-09-16T23:46:06.447956Z	    partNumber,
2025-09-16T23:46:06.448065Z	    "slug": slug.current,
2025-09-16T23:46:06.448163Z	    title,
2025-09-16T23:46:06.448261Z	    shortDescription,
2025-09-16T23:46:06.448359Z	    image,
2025-09-16T23:46:06.448457Z	    brand->{
2025-09-16T23:46:06.448555Z	      name,
2025-09-16T23:46:06.448707Z	      "slug": slug.current,
2025-09-16T23:46:06.448826Z	      logo
2025-09-16T23:46:06.448931Z	    },
2025-09-16T23:46:06.449042Z	    category->{
2025-09-16T23:46:06.449138Z	      name,
2025-09-16T23:46:06.449235Z	      "slug": slug.current
2025-09-16T23:46:06.449342Z	    },
2025-09-16T23:46:06.449439Z	    pricing{
2025-09-16T23:46:06.449542Z	      currency,
2025-09-16T23:46:06.449655Z	      tiers[]{
2025-09-16T23:46:06.450837Z	        quantity,
2025-09-16T23:46:06.451028Z	        price,
2025-09-16T23:46:06.451156Z	        unit
2025-09-16T23:46:06.451344Z	      },
2025-09-16T23:46:06.451469Z	      moq,
2025-09-16T23:46:06.451577Z	      leadTime,
2025-09-16T23:46:06.451726Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:06.451845Z	      "price": tiers[0].price,
2025-09-16T23:46:06.451947Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:06.452049Z	    },
2025-09-16T23:46:06.45215Z	    inventory{
2025-09-16T23:46:06.45225Z	      quantity,
2025-09-16T23:46:06.452386Z	      status,
2025-09-16T23:46:06.452511Z	      warehouse,
2025-09-16T23:46:06.452626Z	      lastUpdated,
2025-09-16T23:46:06.452756Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:06.452877Z	      "inStock": status == "in_stock",
2025-09-16T23:46:06.452984Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:06.453097Z	    },
2025-09-16T23:46:06.453215Z	    isActive,
2025-09-16T23:46:06.453324Z	    isFeatured,
2025-09-16T23:46:06.453423Z	    isNew,
2025-09-16T23:46:06.45352Z	    _createdAt,
2025-09-16T23:46:06.453627Z	    _updatedAt
2025-09-16T23:46:06.453754Z	  
2025-09-16T23:46:06.45386Z	      },
2025-09-16T23:46:06.453959Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-16T23:46:06.454071Z	    }
2025-09-16T23:46:06.454175Z	  
2025-09-16T23:46:06.454275Z	Query parameters: {
2025-09-16T23:46:06.454368Z	  limit: 8,
2025-09-16T23:46:06.454462Z	  offset: 0,
2025-09-16T23:46:06.454559Z	  category: undefined,
2025-09-16T23:46:06.454709Z	  brand: 'lem',
2025-09-16T23:46:06.454828Z	  featured: undefined
2025-09-16T23:46:06.454941Z	}
2025-09-16T23:46:06.455049Z	Fetching solutions with query: 
2025-09-16T23:46:06.455147Z	    {
2025-09-16T23:46:06.455248Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:06.45543Z	        
2025-09-16T23:46:06.455544Z	    _id,
2025-09-16T23:46:06.455658Z	    title,
2025-09-16T23:46:06.455801Z	    "slug": slug.current,
2025-09-16T23:46:06.455915Z	    summary,
2025-09-16T23:46:06.456026Z	    description,
2025-09-16T23:46:06.456192Z	    coverImage,
2025-09-16T23:46:06.456377Z	    primaryBrand->{
2025-09-16T23:46:06.456508Z	      _id,
2025-09-16T23:46:06.456623Z	      name,
2025-09-16T23:46:06.456761Z	      "slug": slug.current,
2025-09-16T23:46:06.456875Z	      logo
2025-09-16T23:46:06.45698Z	    },
2025-09-16T23:46:06.457088Z	    relatedBrands[]->{
2025-09-16T23:46:06.457193Z	      _id,
2025-09-16T23:46:06.457377Z	      name,
2025-09-16T23:46:06.457497Z	      "slug": slug.current,
2025-09-16T23:46:06.457626Z	      logo
2025-09-16T23:46:06.457794Z	    },
2025-09-16T23:46:06.457958Z	    targetMarket,
2025-09-16T23:46:06.458124Z	    complexity,
2025-09-16T23:46:06.458229Z	    publishedAt,
2025-09-16T23:46:06.458327Z	    isPublished,
2025-09-16T23:46:06.458437Z	    isFeatured,
2025-09-16T23:46:06.458557Z	    viewCount,
2025-09-16T23:46:06.458686Z	    _createdAt,
2025-09-16T23:46:06.458798Z	    _updatedAt
2025-09-16T23:46:06.459113Z	  
2025-09-16T23:46:06.45952Z	      },
2025-09-16T23:46:06.459757Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-16T23:46:06.460127Z	    }
2025-09-16T23:46:06.460291Z	  
2025-09-16T23:46:06.460413Z	Query parameters: {
2025-09-16T23:46:06.460552Z	  limit: 4,
2025-09-16T23:46:06.460689Z	  offset: 0,
2025-09-16T23:46:06.463546Z	  targetMarket: undefined,
2025-09-16T23:46:06.463696Z	  brand: 'lem',
2025-09-16T23:46:06.463819Z	  featured: undefined
2025-09-16T23:46:06.463927Z	}
2025-09-16T23:46:06.464051Z	✅ [getBrandData] Found brand: LEM
2025-09-16T23:46:06.464154Z	Products fetch result: {
2025-09-16T23:46:06.464252Z	  totalProducts: 3,
2025-09-16T23:46:06.464363Z	  fetchedProducts: 3,
2025-09-16T23:46:06.464477Z	  firstProduct: {
2025-09-16T23:46:06.464588Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-16T23:46:06.464718Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-16T23:46:06.464824Z	    _type: 'product',
2025-09-16T23:46:06.464917Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-16T23:46:06.465007Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-16T23:46:06.465104Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-16T23:46:06.465207Z	    image: null,
2025-09-16T23:46:06.465309Z	    inventory: {
2025-09-16T23:46:06.465424Z	      inStock: true,
2025-09-16T23:46:06.465534Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-16T23:46:06.465638Z	      quantity: 0,
2025-09-16T23:46:06.465769Z	      status: 'in_stock',
2025-09-16T23:46:06.46588Z	      warehouse: null
2025-09-16T23:46:06.465992Z	    },
2025-09-16T23:46:06.466101Z	    isActive: true,
2025-09-16T23:46:06.466204Z	    isFeatured: false,
2025-09-16T23:46:06.466319Z	    isNew: false,
2025-09-16T23:46:06.466441Z	    partNumber: 'la55-p',
2025-09-16T23:46:06.466553Z	    pricing: {
2025-09-16T23:46:06.466665Z	      currency: 'CNY',
2025-09-16T23:46:06.470012Z	      leadTime: null,
2025-09-16T23:46:06.470238Z	      moq: null,
2025-09-16T23:46:06.472021Z	      price: null,
2025-09-16T23:46:06.472213Z	      tiers: null
2025-09-16T23:46:06.472425Z	    },
2025-09-16T23:46:06.47261Z	    shortDescription: '电流传感器la55-p',
2025-09-16T23:46:06.472819Z	    slug: 'la55-p',
2025-09-16T23:46:06.47299Z	    title: '电流传感器la55-p'
2025-09-16T23:46:06.473157Z	  }
2025-09-16T23:46:06.47328Z	}
2025-09-16T23:46:06.473396Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:06.524805Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:46:06.525443Z	Fetching products with query: 
2025-09-16T23:46:06.525637Z	    {
2025-09-16T23:46:06.525828Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:06.525999Z	        
2025-09-16T23:46:06.526252Z	    _id,
2025-09-16T23:46:06.526653Z	    _type,
2025-09-16T23:46:06.527113Z	    partNumber,
2025-09-16T23:46:06.527355Z	    "slug": slug.current,
2025-09-16T23:46:06.527502Z	    title,
2025-09-16T23:46:06.527629Z	    shortDescription,
2025-09-16T23:46:06.527866Z	    image,
2025-09-16T23:46:06.528019Z	    brand->{
2025-09-16T23:46:06.528135Z	      name,
2025-09-16T23:46:06.528551Z	      "slug": slug.current,
2025-09-16T23:46:06.528702Z	      logo
2025-09-16T23:46:06.529193Z	    },
2025-09-16T23:46:06.52936Z	    category->{
2025-09-16T23:46:06.532171Z	      name,
2025-09-16T23:46:06.532293Z	      "slug": slug.current
2025-09-16T23:46:06.532394Z	    },
2025-09-16T23:46:06.532488Z	    pricing{
2025-09-16T23:46:06.532583Z	      currency,
2025-09-16T23:46:06.532696Z	      tiers[]{
2025-09-16T23:46:06.53292Z	        quantity,
2025-09-16T23:46:06.53312Z	        price,
2025-09-16T23:46:06.533226Z	        unit
2025-09-16T23:46:06.533323Z	      },
2025-09-16T23:46:06.533419Z	      moq,
2025-09-16T23:46:06.533519Z	      leadTime,
2025-09-16T23:46:06.533843Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:06.533989Z	      "price": tiers[0].price,
2025-09-16T23:46:06.534126Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:06.534311Z	    },
2025-09-16T23:46:06.534472Z	    inventory{
2025-09-16T23:46:06.534626Z	      quantity,
2025-09-16T23:46:06.534754Z	      status,
2025-09-16T23:46:06.534917Z	      warehouse,
2025-09-16T23:46:06.535024Z	      lastUpdated,
2025-09-16T23:46:06.535129Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:06.53529Z	      "inStock": status == "in_stock",
2025-09-16T23:46:06.535438Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:06.535561Z	    },
2025-09-16T23:46:06.535757Z	    isActive,
2025-09-16T23:46:06.535873Z	    isFeatured,
2025-09-16T23:46:06.53598Z	    isNew,
2025-09-16T23:46:06.536075Z	    _createdAt,
2025-09-16T23:46:06.536226Z	    _updatedAt
2025-09-16T23:46:06.536345Z	  
2025-09-16T23:46:06.536482Z	      },
2025-09-16T23:46:06.536625Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:46:06.537044Z	    }
2025-09-16T23:46:06.537195Z	  
2025-09-16T23:46:06.537313Z	Query parameters: {
2025-09-16T23:46:06.537436Z	  limit: 8,
2025-09-16T23:46:06.537544Z	  offset: 0,
2025-09-16T23:46:06.53788Z	  category: undefined,
2025-09-16T23:46:06.538208Z	  brand: 'qualcomm',
2025-09-16T23:46:06.538344Z	  featured: undefined
2025-09-16T23:46:06.538472Z	}
2025-09-16T23:46:06.53858Z	Fetching solutions with query: 
2025-09-16T23:46:06.538699Z	    {
2025-09-16T23:46:06.53913Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:06.539498Z	        
2025-09-16T23:46:06.539754Z	    _id,
2025-09-16T23:46:06.539871Z	    title,
2025-09-16T23:46:06.539979Z	    "slug": slug.current,
2025-09-16T23:46:06.54008Z	    summary,
2025-09-16T23:46:06.540182Z	    description,
2025-09-16T23:46:06.540275Z	    coverImage,
2025-09-16T23:46:06.540951Z	    primaryBrand->{
2025-09-16T23:46:06.5418Z	      _id,
2025-09-16T23:46:06.541956Z	      name,
2025-09-16T23:46:06.542065Z	      "slug": slug.current,
2025-09-16T23:46:06.54216Z	      logo
2025-09-16T23:46:06.542259Z	    },
2025-09-16T23:46:06.542351Z	    relatedBrands[]->{
2025-09-16T23:46:06.542454Z	      _id,
2025-09-16T23:46:06.542553Z	      name,
2025-09-16T23:46:06.54265Z	      "slug": slug.current,
2025-09-16T23:46:06.542785Z	      logo
2025-09-16T23:46:06.542899Z	    },
2025-09-16T23:46:06.543009Z	    targetMarket,
2025-09-16T23:46:06.543116Z	    complexity,
2025-09-16T23:46:06.543217Z	    publishedAt,
2025-09-16T23:46:06.54332Z	    isPublished,
2025-09-16T23:46:06.54343Z	    isFeatured,
2025-09-16T23:46:06.543542Z	    viewCount,
2025-09-16T23:46:06.543652Z	    _createdAt,
2025-09-16T23:46:06.543798Z	    _updatedAt
2025-09-16T23:46:06.543912Z	  
2025-09-16T23:46:06.544025Z	      },
2025-09-16T23:46:06.544127Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:46:06.544236Z	    }
2025-09-16T23:46:06.544342Z	  
2025-09-16T23:46:06.544434Z	Query parameters: {
2025-09-16T23:46:06.544536Z	  limit: 4,
2025-09-16T23:46:06.544638Z	  offset: 0,
2025-09-16T23:46:06.544764Z	  targetMarket: undefined,
2025-09-16T23:46:06.544874Z	  brand: 'qualcomm',
2025-09-16T23:46:06.544988Z	  featured: undefined
2025-09-16T23:46:06.545101Z	}
2025-09-16T23:46:06.545214Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:46:06.545968Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:06.546488Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:06.54664Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:46:06.546918Z	Fetching products with query: 
2025-09-16T23:46:06.54712Z	    {
2025-09-16T23:46:06.547251Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:06.547469Z	        
2025-09-16T23:46:06.547644Z	    _id,
2025-09-16T23:46:06.547841Z	    _type,
2025-09-16T23:46:06.547988Z	    partNumber,
2025-09-16T23:46:06.548235Z	    "slug": slug.current,
2025-09-16T23:46:06.548495Z	    title,
2025-09-16T23:46:06.548718Z	    shortDescription,
2025-09-16T23:46:06.548907Z	    image,
2025-09-16T23:46:06.549115Z	    brand->{
2025-09-16T23:46:06.549361Z	      name,
2025-09-16T23:46:06.549806Z	      "slug": slug.current,
2025-09-16T23:46:06.550082Z	      logo
2025-09-16T23:46:06.550248Z	    },
2025-09-16T23:46:06.550353Z	    category->{
2025-09-16T23:46:06.550441Z	      name,
2025-09-16T23:46:06.550526Z	      "slug": slug.current
2025-09-16T23:46:06.550607Z	    },
2025-09-16T23:46:06.550779Z	    pricing{
2025-09-16T23:46:06.55093Z	      currency,
2025-09-16T23:46:06.551129Z	      tiers[]{
2025-09-16T23:46:06.55126Z	        quantity,
2025-09-16T23:46:06.551828Z	        price,
2025-09-16T23:46:06.551971Z	        unit
2025-09-16T23:46:06.552077Z	      },
2025-09-16T23:46:06.552184Z	      moq,
2025-09-16T23:46:06.552294Z	      leadTime,
2025-09-16T23:46:06.552412Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:06.552522Z	      "price": tiers[0].price,
2025-09-16T23:46:06.552628Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:06.552772Z	    },
2025-09-16T23:46:06.552904Z	    inventory{
2025-09-16T23:46:06.553017Z	      quantity,
2025-09-16T23:46:06.553141Z	      status,
2025-09-16T23:46:06.553248Z	      warehouse,
2025-09-16T23:46:06.553367Z	      lastUpdated,
2025-09-16T23:46:06.55348Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:06.553591Z	      "inStock": status == "in_stock",
2025-09-16T23:46:06.553794Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:06.553933Z	    },
2025-09-16T23:46:06.554042Z	    isActive,
2025-09-16T23:46:06.554246Z	    isFeatured,
2025-09-16T23:46:06.554387Z	    isNew,
2025-09-16T23:46:06.554652Z	    _createdAt,
2025-09-16T23:46:06.55488Z	    _updatedAt
2025-09-16T23:46:06.555113Z	  
2025-09-16T23:46:06.555252Z	      },
2025-09-16T23:46:06.555389Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:46:06.555525Z	    }
2025-09-16T23:46:06.555974Z	  
2025-09-16T23:46:06.556392Z	Query parameters: {
2025-09-16T23:46:06.556537Z	  limit: 8,
2025-09-16T23:46:06.556977Z	  offset: 0,
2025-09-16T23:46:06.557802Z	  category: undefined,
2025-09-16T23:46:06.557986Z	  brand: 'qualcomm',
2025-09-16T23:46:06.558091Z	  featured: undefined
2025-09-16T23:46:06.558185Z	}
2025-09-16T23:46:06.558288Z	Fetching solutions with query: 
2025-09-16T23:46:06.558403Z	    {
2025-09-16T23:46:06.558542Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:06.558649Z	        
2025-09-16T23:46:06.558836Z	    _id,
2025-09-16T23:46:06.55898Z	    title,
2025-09-16T23:46:06.559102Z	    "slug": slug.current,
2025-09-16T23:46:06.559257Z	    summary,
2025-09-16T23:46:06.559378Z	    description,
2025-09-16T23:46:06.559482Z	    coverImage,
2025-09-16T23:46:06.559581Z	    primaryBrand->{
2025-09-16T23:46:06.559689Z	      _id,
2025-09-16T23:46:06.559812Z	      name,
2025-09-16T23:46:06.559917Z	      "slug": slug.current,
2025-09-16T23:46:06.560021Z	      logo
2025-09-16T23:46:06.560132Z	    },
2025-09-16T23:46:06.560244Z	    relatedBrands[]->{
2025-09-16T23:46:06.560355Z	      _id,
2025-09-16T23:46:06.560468Z	      name,
2025-09-16T23:46:06.560578Z	      "slug": slug.current,
2025-09-16T23:46:06.560796Z	      logo
2025-09-16T23:46:06.561016Z	    },
2025-09-16T23:46:06.561485Z	    targetMarket,
2025-09-16T23:46:06.5616Z	    complexity,
2025-09-16T23:46:06.561667Z	    publishedAt,
2025-09-16T23:46:06.561806Z	    isPublished,
2025-09-16T23:46:06.56192Z	    isFeatured,
2025-09-16T23:46:06.562025Z	    viewCount,
2025-09-16T23:46:06.562127Z	    _createdAt,
2025-09-16T23:46:06.562224Z	    _updatedAt
2025-09-16T23:46:06.562314Z	  
2025-09-16T23:46:06.562424Z	      },
2025-09-16T23:46:06.56258Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:46:06.56313Z	    }
2025-09-16T23:46:06.563356Z	  
2025-09-16T23:46:06.563545Z	Query parameters: {
2025-09-16T23:46:06.564007Z	  limit: 4led/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:06.564275Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:06.564907Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:06.56546Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:06.565948Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:06.566449Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:06.566994Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:06.567547Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:06.568051Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:06.568548Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:06.56907Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:06.569609Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:06.569972Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:06.570123Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:06.570242Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:06.57034Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:06.570461Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:06.570569Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:06.5707Z	  digest: '1870762441'
2025-09-16T23:46:06.570818Z	}
2025-09-16T23:46:06.570922Z	
2025-09-16T23:46:06.571018Z	Error occurred prerendering page "/zh-TW/solutions/99999". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:06.571129Z	
2025-09-16T23:46:06.571236Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:06.571347Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:06.571463Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:06.57157Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:06.571697Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:06.571836Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:06.571945Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:06.572293Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:06.572443Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:06.572555Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:06.572659Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:06.572798Z	,
2025-09-16T23:46:06.572905Z	  offset: 0,
2025-09-16T23:46:06.573007Z	  targetMarket: undefined,
2025-09-16T23:46:06.573225Z	  brand: 'qualcomm',
2025-09-16T23:46:06.573353Z	  featured: undefined
2025-09-16T23:46:06.573474Z	}
2025-09-16T23:46:06.573603Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:46:06.573724Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:06.573823Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:06.573921Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:46:06.574024Z	Fetching products with query: 
2025-09-16T23:46:06.574121Z	    {
2025-09-16T23:46:06.574217Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:06.574341Z	        
2025-09-16T23:46:06.574454Z	    _id,
2025-09-16T23:46:06.574567Z	    _type,
2025-09-16T23:46:06.574669Z	    partNumber,
2025-09-16T23:46:06.574787Z	    "slug": slug.current,
2025-09-16T23:46:06.574884Z	    title,
2025-09-16T23:46:06.574978Z	    shortDescription,
2025-09-16T23:46:06.575071Z	    image,
2025-09-16T23:46:06.575176Z	    brand->{
2025-09-16T23:46:06.575276Z	      name,
2025-09-16T23:46:06.575376Z	      "slug": slug.current,
2025-09-16T23:46:06.575489Z	      logo
2025-09-16T23:46:06.575594Z	    },
2025-09-16T23:46:06.57571Z	    category->{
2025-09-16T23:46:06.575816Z	      name,
2025-09-16T23:46:06.575916Z	      "slug": slug.current
2025-09-16T23:46:06.576015Z	    },
2025-09-16T23:46:06.576108Z	    pricing{
2025-09-16T23:46:06.576209Z	      currency,
2025-09-16T23:46:06.623807Z	      tiers[]{
2025-09-16T23:46:06.624274Z	        quantity,
2025-09-16T23:46:06.624438Z	        price,
2025-09-16T23:46:06.624634Z	        unit
2025-09-16T23:46:06.624784Z	      },
2025-09-16T23:46:06.624904Z	      moq,
2025-09-16T23:46:06.625345Z	      leadTime,
2025-09-16T23:46:06.625484Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:06.6256Z	      "price": tiers[0].price,
2025-09-16T23:46:06.625727Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:06.625845Z	    },
2025-09-16T23:46:06.625953Z	    inventory{
2025-09-16T23:46:06.626064Z	      quantity,
2025-09-16T23:46:06.626187Z	      status,
2025-09-16T23:46:06.626297Z	      warehouse,
2025-09-16T23:46:06.626397Z	      lastUpdated,
2025-09-16T23:46:06.626508Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:06.626618Z	      "inStock": status == "in_stock",
2025-09-16T23:46:06.626748Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:06.626943Z	    },
2025-09-16T23:46:06.627071Z	    isActive,
2025-09-16T23:46:06.627182Z	    isFeatured,
2025-09-16T23:46:06.627295Z	    isNew,
2025-09-16T23:46:06.627398Z	    _createdAt,
2025-09-16T23:46:06.627513Z	    _updatedAt
2025-09-16T23:46:06.627613Z	  
2025-09-16T23:46:06.627735Z	      },
2025-09-16T23:46:06.627845Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:46:06.627979Z	    }
2025-09-16T23:46:06.628086Z	  
2025-09-16T23:46:06.62819Z	Query parameters: {
2025-09-16T23:46:06.628293Z	  limit: 8,
2025-09-16T23:46:06.628394Z	  offset: 0,
2025-09-16T23:46:06.628501Z	  category: undefined,
2025-09-16T23:46:06.628608Z	  brand: 'cree',
2025-09-16T23:46:06.628753Z	  featured: undefined
2025-09-16T23:46:06.628872Z	}
2025-09-16T23:46:06.629006Z	Fetching solutions with query: 
2025-09-16T23:46:06.62911Z	    {
2025-09-16T23:46:06.629657Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:06.629812Z	        
2025-09-16T23:46:06.629931Z	    _id,
2025-09-16T23:46:06.630036Z	    title,
2025-09-16T23:46:06.630142Z	    "slug": slug.current,
2025-09-16T23:46:06.630272Z	    summary,
2025-09-16T23:46:06.63038Z	    description,
2025-09-16T23:46:06.6305Z	    coverImage,
2025-09-16T23:46:06.630612Z	    primaryBrand->{
2025-09-16T23:46:06.630737Z	      _id,
2025-09-16T23:46:06.630845Z	      name,
2025-09-16T23:46:06.630946Z	      "slug": slug.current,
2025-09-16T23:46:06.631042Z	      logo
2025-09-16T23:46:06.63114Z	    },
2025-09-16T23:46:06.631241Z	    relatedBrands[]->{
2025-09-16T23:46:06.63134Z	      _id,
2025-09-16T23:46:06.631452Z	      name,
2025-09-16T23:46:06.631567Z	      "slug": slug.current,
2025-09-16T23:46:06.631696Z	      logo
2025-09-16T23:46:06.632202Z	    },
2025-09-16T23:46:06.632309Z	    targetMarket,
2025-09-16T23:46:06.632414Z	    complexity,
2025-09-16T23:46:06.632538Z	    publishedAt,
2025-09-16T23:46:06.632648Z	    isPublished,
2025-09-16T23:46:06.632798Z	    isFeatured,
2025-09-16T23:46:06.633333Z	    viewCount,
2025-09-16T23:46:06.633487Z	    _createdAt,
2025-09-16T23:46:06.633617Z	    _updatedAt
2025-09-16T23:46:06.633751Z	  
2025-09-16T23:46:06.633865Z	      },
2025-09-16T23:46:06.633974Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:46:06.634081Z	    }
2025-09-16T23:46:06.634187Z	  
2025-09-16T23:46:06.634284Z	Query parameters: {
2025-09-16T23:46:06.634514Z	  limit: 4,
2025-09-16T23:46:06.634628Z	  offset: 0,
2025-09-16T23:46:06.634803Z	  targetMarket: undefined,
2025-09-16T23:46:06.635296Z	  brand: 'cree',
2025-09-16T23:46:06.63543Z	  featured: undefined
2025-09-16T23:46:06.635555Z	}
2025-09-16T23:46:06.636287Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:46:06.637431Z	Products fetch result: {
2025-09-16T23:46:06.637604Z	  totalProducts: 4,
2025-09-16T23:46:06.637948Z	  fetchedProducts: 4,
2025-09-16T23:46:06.638076Z	  firstProduct: {
2025-09-16T23:46:06.638186Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:46:06.638282Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:46:06.638375Z	    _type: 'product',
2025-09-16T23:46:06.638478Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:46:06.638577Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:46:06.63869Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:06.638845Z	    image: null,
2025-09-16T23:46:06.638985Z	    inventory: {
2025-09-16T23:46:06.639094Z	      inStock: true,
2025-09-16T23:46:06.639201Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:46:06.639328Z	      quantity: 0,
2025-09-16T23:46:06.641801Z	      status: 'in_stock',
2025-09-16T23:46:06.641931Z	      warehouse: null
2025-09-16T23:46:06.642039Z	    },
2025-09-16T23:46:06.642148Z	    isActive: true,
2025-09-16T23:46:06.642256Z	    isFeatured: false,
2025-09-16T23:46:06.642371Z	    isNew: false,
2025-09-16T23:46:06.642496Z	    partNumber: '11111',
2025-09-16T23:46:06.642598Z	    pricing: {
2025-09-16T23:46:06.642745Z	      currency: 'CNY',
2025-09-16T23:46:06.642859Z	      leadTime: null,
2025-09-16T23:46:06.642956Z	      moq: null,
2025-09-16T23:46:06.643051Z	      price: null,
2025-09-16T23:46:06.643172Z	      tiers: null
2025-09-16T23:46:06.643271Z	    },
2025-09-16T23:46:06.643376Z	    shortDescription: '11111',
2025-09-16T23:46:06.643488Z	    slug: 'sic mosfet',
2025-09-16T23:46:06.64359Z	    title: '111111'
2025-09-16T23:46:06.64427Z	  }
2025-09-16T23:46:06.644405Z	}
2025-09-16T23:46:06.644512Z	Solutions fetch result: {
2025-09-16T23:46:06.644611Z	  totalSolutions: 6,
2025-09-16T23:46:06.644979Z	  fetchedSolutions: 4,
2025-09-16T23:46:06.645124Z	  firstSolution: {
2025-09-16T23:46:06.645226Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:46:06.645316Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:46:06.645437Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:46:06.645563Z	    complexity: 'medium',
2025-09-16T23:46:06.645702Z	    coverImage: null,
2025-09-16T23:46:06.645806Z	    description: [ [Object] ],
2025-09-16T23:46:06.645896Z	    isFeatured: false,
2025-09-16T23:46:06.645991Z	    isPublished: true,
2025-09-16T23:46:06.646088Z	    primaryBrand: {
2025-09-16T23:46:06.646191Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:46:06.646295Z	      logo: null,
2025-09-16T23:46:06.646394Z	      name: 'CREE',
2025-09-16T23:46:06.646528Z	      slug: 'cree'
2025-09-16T23:46:06.654958Z	    },
2025-09-16T23:46:06.655166Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:46:06.655284Z	    relatedBrands: null,
2025-09-16T23:46:06.655843Z	    slug: '11111',
2025-09-16T23:46:06.656028Z	    summary: '11111',
2025-09-16T23:46:06.65616Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:06.656253Z	    title: '11111',
2025-09-16T23:46:06.656345Z	    viewCount: 0
2025-09-16T23:46:06.656435Z	  }
2025-09-16T23:46:06.656523Z	}
2025-09-16T23:46:06.656611Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:46:06.656792Z	Fetching products with query: 
2025-09-16T23:46:06.656885Z	    {
2025-09-16T23:46:06.656968Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:06.657058Z	        
2025-09-16T23:46:06.657155Z	    _id,
2025-09-16T23:46:06.657239Z	    _type,
2025-09-16T23:46:06.65732Z	    partNumber,
2025-09-16T23:46:06.657401Z	    "slug": slug.current,
2025-09-16T23:46:06.657483Z	    title,
2025-09-16T23:46:06.657565Z	    shortDescription,
2025-09-16T23:46:06.657654Z	    image,
2025-09-16T23:46:06.657761Z	    brand->{
2025-09-16T23:46:06.657855Z	      name,
2025-09-16T23:46:06.657941Z	      "slug": slug.current,
2025-09-16T23:46:06.658041Z	      logo
2025-09-16T23:46:06.658128Z	    },
2025-09-16T23:46:06.658231Z	    category->{
2025-09-16T23:46:06.658314Z	      name,
2025-09-16T23:46:06.658399Z	      "slug": slug.current
2025-09-16T23:46:06.658482Z	    },
2025-09-16T23:46:06.65856Z	    pricing{
2025-09-16T23:46:06.658649Z	      currency,
2025-09-16T23:46:06.65876Z	      tiers[]{
2025-09-16T23:46:06.658853Z	        quantity,
2025-09-16T23:46:06.659194Z	        price,
2025-09-16T23:46:06.65932Z	        unit
2025-09-16T23:46:06.659416Z	      },
2025-09-16T23:46:06.659504Z	      moq,
2025-09-16T23:46:06.659593Z	      leadTime,
2025-09-16T23:46:06.659711Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:06.659807Z	      "price": tiers[0].price,
2025-09-16T23:46:06.664747Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:06.664922Z	    },
2025-09-16T23:46:06.665024Z	    inventory{
2025-09-16T23:46:06.666003Z	      quantity,
2025-09-16T23:46:06.666478Z	      status,
2025-09-16T23:46:06.666601Z	      warehouse,
2025-09-16T23:46:06.667152Z	      lastUpdated,
2025-09-16T23:46:06.66756Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:06.667744Z	      "inStock": status == "in_stock",
2025-09-16T23:46:06.667864Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:06.667999Z	    },
2025-09-16T23:46:06.66857Z	    isActive,
2025-09-16T23:46:06.668701Z	    isFeatured,
2025-09-16T23:46:06.668827Z	    isNew,
2025-09-16T23:46:06.668939Z	    _createdAt,
2025-09-16T23:46:06.669046Z	    _updatedAt
2025-09-16T23:46:06.669148Z	  
2025-09-16T23:46:06.669248Z	      },
2025-09-16T23:46:06.669343Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:46:06.66951Z	    }
2025-09-16T23:46:06.669611Z	  
2025-09-16T23:46:06.66973Z	Query parameters: {
2025-09-16T23:46:06.669833Z	  limit: 8,
2025-09-16T23:46:06.669951Z	  offset: 0,
2025-09-16T23:46:06.670068Z	  category: undefined,
2025-09-16T23:46:06.670168Z	  brand: 'cree',
2025-09-16T23:46:06.670263Z	  featured: undefined
2025-09-16T23:46:06.670355Z	}
2025-09-16T23:46:06.670466Z	Fetching solutions with query: 
2025-09-16T23:46:06.67055Z	    {
2025-09-16T23:46:06.670649Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:06.670789Z	        
2025-09-16T23:46:06.670887Z	    _id,
2025-09-16T23:46:06.670981Z	    title,
2025-09-16T23:46:06.671069Z	    "slug": slug.current,
2025-09-16T23:46:06.671154Z	    summary,
2025-09-16T23:46:06.671255Z	    description,
2025-09-16T23:46:06.671344Z	    coverImage,
2025-09-16T23:46:06.67145Z	    primaryBrand->{
2025-09-16T23:46:06.671543Z	      _id,
2025-09-16T23:46:06.671633Z	      name,
2025-09-16T23:46:06.671752Z	      "slug": slug.current,
2025-09-16T23:46:06.671856Z	      logo
2025-09-16T23:46:06.671959Z	    },
2025-09-16T23:46:06.67206Z	    relatedBrands[]->{
2025-09-16T23:46:06.67216Z	      _id,
2025-09-16T23:46:06.672257Z	      name,
2025-09-16T23:46:06.672362Z	      "slug": slug.current,
2025-09-16T23:46:06.672482Z	      logo
2025-09-16T23:46:06.672586Z	    },
2025-09-16T23:46:06.672713Z	    targetMarket,
2025-09-16T23:46:06.672814Z	    complexity,
2025-09-16T23:46:06.672911Z	    publishedAt,
2025-09-16T23:46:06.673012Z	    isPublished,
2025-09-16T23:46:06.673138Z	    isFeatured,
2025-09-16T23:46:06.673276Z	    viewCount,
2025-09-16T23:46:06.673384Z	    _createdAt,
2025-09-16T23:46:06.673486Z	    _updatedAt
2025-09-16T23:46:06.673597Z	  
2025-09-16T23:46:06.673735Z	      },
2025-09-16T23:46:06.673852Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:46:06.673962Z	    }
2025-09-16T23:46:06.674102Z	  
2025-09-16T23:46:06.67423Z	Query parameters: {
2025-09-16T23:46:06.674361Z	  limit: 4,
2025-09-16T23:46:06.674488Z	  offset: 0,
2025-09-16T23:46:06.674585Z	  targetMarket: undefined,
2025-09-16T23:46:06.674692Z	  brand: 'cree',
2025-09-16T23:46:06.674792Z	  featured: undefined
2025-09-16T23:46:06.674884Z	}
2025-09-16T23:46:06.674972Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:46:06.675054Z	Products fetch result: {
2025-09-16T23:46:06.675144Z	  totalProducts: 4,
2025-09-16T23:46:06.675231Z	  fetchedProducts: 4,
2025-09-16T23:46:06.675378Z	  firstProduct: {
2025-09-16T23:46:06.675485Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:46:06.675584Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:46:06.675685Z	    _type: 'product',
2025-09-16T23:46:06.675777Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:46:06.675871Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:46:06.675961Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:06.676119Z	    image: null,
2025-09-16T23:46:06.676215Z	    inventory: {
2025-09-16T23:46:06.676302Z	      inStock: true,
2025-09-16T23:46:06.676394Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:46:06.676478Z	      quantity: 0,
2025-09-16T23:46:06.676576Z	      status: 'in_stock',
2025-09-16T23:46:06.676657Z	      warehouse: null
2025-09-16T23:46:06.676764Z	    },
2025-09-16T23:46:06.676853Z	    isActive: true,
2025-09-16T23:46:06.676946Z	    isFeatured: false,
2025-09-16T23:46:06.67703Z	    isNew: false,
2025-09-16T23:46:06.677108Z	    partNumber: '11111',
2025-09-16T23:46:06.677188Z	    pricing: {
2025-09-16T23:46:06.677266Z	      currency: 'CNY',
2025-09-16T23:46:06.677342Z	      leadTime: null,
2025-09-16T23:46:06.677429Z	      moq: null,
2025-09-16T23:46:06.67751Z	      price: null,
2025-09-16T23:46:06.677596Z	      tiers: null
2025-09-16T23:46:06.677696Z	    },
2025-09-16T23:46:06.677788Z	    shortDescription: '11111',
2025-09-16T23:46:06.677872Z	    slug: 'sic mosfet',
2025-09-16T23:46:06.677954Z	    title: '111111'
2025-09-16T23:46:06.678038Z	  }
2025-09-16T23:46:06.678124Z	}
2025-09-16T23:46:06.678207Z	Solutions fetch result: {
2025-09-16T23:46:06.678292Z	  totalSolutions: 6,
2025-09-16T23:46:06.678383Z	  fetchedSolutions: 4,
2025-09-16T23:46:06.678487Z	  firstSolution: {
2025-09-16T23:46:06.678582Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:46:06.678688Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:46:06.678798Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:46:06.678905Z	    complexity: 'medium',
2025-09-16T23:46:06.679008Z	    coverImage: null,
2025-09-16T23:46:06.679104Z	    description: [ [Object] ],
2025-09-16T23:46:06.679199Z	    isFeatured: false,
2025-09-16T23:46:06.679319Z	    isPublished: true,
2025-09-16T23:46:06.679424Z	    primaryBrand: {
2025-09-16T23:46:06.679512Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:46:06.679607Z	      logo: null,
2025-09-16T23:46:06.679738Z	      name: 'CREE',
2025-09-16T23:46:06.679865Z	      slug: 'cree'
2025-09-16T23:46:06.679972Z	    },
2025-09-16T23:46:06.680072Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:46:06.680166Z	    relatedBrands: null,
2025-09-16T23:46:06.680259Z	    slug: '11111',
2025-09-16T23:46:06.680358Z	    summary: '11111',
2025-09-16T23:46:06.680496Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:06.680601Z	    title: '11111',
2025-09-16T23:46:06.724099Z	    viewCount: 0
2025-09-16T23:46:06.724999Z	  }
2025-09-16T23:46:06.725138Z	}
2025-09-16T23:46:06.725369Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:06.725582Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:06.72607Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:06.726211Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:06.727154Z	}
2025-09-16T23:46:06.727393Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:06.727661Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:06.727862Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:06.728067Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:06.728355Z	}
2025-09-16T23:46:06.728517Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:06.728734Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:06.728934Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:46:06.729082Z	Fetching products with query: 
2025-09-16T23:46:06.729194Z	    {
2025-09-16T23:46:06.72931Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:06.72943Z	        
2025-09-16T23:46:06.731194Z	    _id,
2025-09-16T23:46:06.731451Z	    _type,
2025-09-16T23:46:06.731626Z	    partNumber,
2025-09-16T23:46:06.7318Z	    "slug": slug.current,
2025-09-16T23:46:06.731955Z	    title,
2025-09-16T23:46:06.732181Z	    shortDescription,
2025-09-16T23:46:06.732427Z	    image,
2025-09-16T23:46:06.732823Z	    brand->{
2025-09-16T23:46:06.733301Z	      name,
2025-09-16T23:46:06.733956Z	      "slug": slug.current,
2025-09-16T23:46:06.734076Z	      logo
2025-09-16T23:46:06.734184Z	    },
2025-09-16T23:46:06.734296Z	    category->{
2025-09-16T23:46:06.73442Z	      name,
2025-09-16T23:46:06.734537Z	      "slug": slug.current
2025-09-16T23:46:06.746354Z	    },
2025-09-16T23:46:06.749109Z	    pricing{
2025-09-16T23:46:06.749287Z	      currency,
2025-09-16T23:46:06.749461Z	      tiers[]{
2025-09-16T23:46:06.7498Z	        quantity,
2025-09-16T23:46:06.749975Z	        price,
2025-09-16T23:46:06.75012Z	        unit
2025-09-16T23:46:06.750244Z	      },
2025-09-16T23:46:06.750393Z	      moq,
2025-09-16T23:46:06.750569Z	      leadTime,
2025-09-16T23:46:06.750811Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:06.750913Z	      "price": tiers[0].price,
2025-09-16T23:46:06.751023Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:06.751338Z	    },
2025-09-16T23:46:06.75158Z	    inventory{
2025-09-16T23:46:06.751758Z	      quantity,
2025-09-16T23:46:06.751888Z	      status,
2025-09-16T23:46:06.752014Z	      warehouse,
2025-09-16T23:46:06.752139Z	      lastUpdated,
2025-09-16T23:46:06.75225Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:06.752376Z	      "inStock": status == "in_stock",
2025-09-16T23:46:06.75249Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:06.752599Z	    },
2025-09-16T23:46:06.752746Z	    isActive,
2025-09-16T23:46:06.752867Z	    isFeatured,
2025-09-16T23:46:06.753015Z	    isNew,
2025-09-16T23:46:06.753204Z	    _createdAt,
2025-09-16T23:46:06.753335Z	    _updatedAt
2025-09-16T23:46:06.753443Z	  
2025-09-16T23:46:06.753552Z	      },
2025-09-16T23:46:06.753655Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:46:06.753823Z	    }
2025-09-16T23:46:06.767018Z	  
2025-09-16T23:46:06.767145Z	Query parameters: {
2025-09-16T23:46:06.767205Z	  limit: 8,
2025-09-16T23:46:06.767453Z	  offset: 0,
2025-09-16T23:46:06.768121Z	  category: undefined,
2025-09-16T23:46:06.768539Z	  brand: 'qualcomm',
2025-09-16T23:46:06.768696Z	  featured: undefined
2025-09-16T23:46:06.76883Z	}
2025-09-16T23:46:06.768949Z	Fetching solutions with query: 
2025-09-16T23:46:06.769065Z	    {
2025-09-16T23:46:06.769216Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:06.769329Z	        
2025-09-16T23:46:06.769436Z	    _id,
2025-09-16T23:46:06.771847Z	    title,
2025-09-16T23:46:06.772054Z	    "slug": slug.current,
2025-09-16T23:46:06.772178Z	    summary,
2025-09-16T23:46:06.772394Z	    description,
2025-09-16T23:46:06.77254Z	    coverImage,
2025-09-16T23:46:06.772642Z	    primaryBrand->{
2025-09-16T23:46:06.772787Z	      _id,
2025-09-16T23:46:06.7729Z	      name,
2025-09-16T23:46:06.773Z	      "slug": slug.current,
2025-09-16T23:46:06.773106Z	      logo
2025-09-16T23:46:06.77321Z	    },
2025-09-16T23:46:06.773307Z	    relatedBrands[]->{
2025-09-16T23:46:06.773406Z	      _id,
2025-09-16T23:46:06.774086Z	      name,
2025-09-16T23:46:06.774205Z	      "slug": slug.current,
2025-09-16T23:46:06.774312Z	      logo
2025-09-16T23:46:06.774413Z	    },
2025-09-16T23:46:06.774803Z	    targetMarket,
2025-09-16T23:46:06.8282Z	    complexity,
2025-09-16T23:46:06.828304Z	    publishedAt,
2025-09-16T23:46:06.82837Z	    isPublished,
2025-09-16T23:46:06.828886Z	    isFeatured,
2025-09-16T23:46:06.82937Z	    viewCount,
2025-09-16T23:46:06.829542Z	    _createdAt,
2025-09-16T23:46:06.82965Z	    _updatedAt
2025-09-16T23:46:06.82979Z	  
2025-09-16T23:46:06.829909Z	      },
2025-09-16T23:46:06.830037Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:46:06.830408Z	    }
2025-09-16T23:46:06.830586Z	  
2025-09-16T23:46:06.830962Z	Query parameters: {
2025-09-16T23:46:06.831098Z	  limit: 4,
2025-09-16T23:46:06.831206Z	  offset: 0,
2025-09-16T23:46:06.831311Z	  targetMarket: undefined,
2025-09-16T23:46:06.831409Z	  brand: 'qualcomm',
2025-09-16T23:46:06.831522Z	  featured: undefined
2025-09-16T23:46:06.831624Z	}
2025-09-16T23:46:06.831773Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:46:06.83189Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:06.831997Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:06.833518Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:46:06.833641Z	Fetching products with query: 
2025-09-16T23:46:06.833788Z	    {
2025-09-16T23:46:06.833878Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:06.833964Z	        
2025-09-16T23:46:06.834047Z	    _id,
2025-09-16T23:46:06.834127Z	    _type,
2025-09-16T23:46:06.834209Z	    partNumber,
2025-09-16T23:46:06.834289Z	    "slug": slug.current,
2025-09-16T23:46:06.834369Z	    title,
2025-09-16T23:46:06.834481Z	    shortDescription,
2025-09-16T23:46:06.834576Z	    image,
2025-09-16T23:46:06.834657Z	    brand->{
2025-09-16T23:46:06.834766Z	      name,
2025-09-16T23:46:06.834853Z	      "slug": slug.current,
2025-09-16T23:46:06.834943Z	      logo
2025-09-16T23:46:06.835028Z	    },
2025-09-16T23:46:06.835114Z	    category->{
2025-09-16T23:46:06.835197Z	      name,
2025-09-16T23:46:06.83528Z	      "slug": slug.current
2025-09-16T23:46:06.835394Z	    },
2025-09-16T23:46:06.835485Z	    pricing{
2025-09-16T23:46:06.835571Z	      currency,
2025-09-16T23:46:06.835658Z	      tiers[]{
2025-09-16T23:46:06.835767Z	        quantity,
2025-09-16T23:46:06.835854Z	        price,
2025-09-16T23:46:06.835948Z	        unit
2025-09-16T23:46:06.836033Z	      },
2025-09-16T23:46:06.836338Z	      moq,
2025-09-16T23:46:06.836459Z	      leadTime,
2025-09-16T23:46:06.836549Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:06.83702Z	      "price": tiers[0].price,
2025-09-16T23:46:06.83723Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:06.837359Z	    },
2025-09-16T23:46:06.83748Z	    inventory{
2025-09-16T23:46:06.837594Z	      quantity,
2025-09-16T23:46:06.837743Z	      status,
2025-09-16T23:46:06.837923Z	      warehouse,
2025-09-16T23:46:06.838048Z	      lastUpdated,
2025-09-16T23:46:06.838139Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:06.838227Z	      "inStock": status == "in_stock",
2025-09-16T23:46:06.838311Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:06.838394Z	    },
2025-09-16T23:46:06.838521Z	    isActive,
2025-09-16T23:46:06.838606Z	    isFeatured,
2025-09-16T23:46:06.838727Z	    isNew,
2025-09-16T23:46:06.838826Z	    _createdAt,
2025-09-16T23:46:06.838915Z	    _updatedAt
2025-09-16T23:46:06.839006Z	  
2025-09-16T23:46:06.839096Z	      },
2025-09-16T23:46:06.839184Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:46:06.839312Z	    }
2025-09-16T23:46:06.839415Z	  
2025-09-16T23:46:06.839544Z	Query parameters: {
2025-09-16T23:46:06.839638Z	  limit: 8,
2025-09-16T23:46:06.839738Z	  offset: 0,
2025-09-16T23:46:06.840281Z	  category: undefined,
2025-09-16T23:46:06.840531Z	  brand: 'qualcomm',
2025-09-16T23:46:06.841177Z	  featured: undefined
2025-09-16T23:46:06.841717Z	}
2025-09-16T23:46:06.841892Z	Fetching solutions with query: 
2025-09-16T23:46:06.841994Z	    {
2025-09-16T23:46:06.842102Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcom-page.runtime.prod.js:12:67539)
2025-09-16T23:46:06.842376Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:06.842509Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:06.842598Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:06.842694Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:06.842791Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:06.842878Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:06.842967Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:06.843064Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:06.843151Z	  digest: '1870762441'
2025-09-16T23:46:06.843237Z	}
2025-09-16T23:46:06.843323Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:06.843412Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:06.843508Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:06.843596Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:06.843694Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:06.844129Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:06.844749Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:06.845078Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:06.845542Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:06.846767Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:06.846993Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:06.847176Z	  digest: '3820195337'
2025-09-16T23:46:06.847294Z	}
2025-09-16T23:46:06.847559Z	
2025-09-16T23:46:06.847954Z	Error occurred prerendering page "/zh-TW/solutions/concrol". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:06.848353Z	
2025-09-16T23:46:06.848647Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:06.849106Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:06.849396Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:06.84983Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:06.850057Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:06.850228Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:06.850397Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:06.850526Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:06.8508Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:06.85098Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:06.851171Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:06.851301Z	
2025-09-16T23:46:06.85141Z	Error occurred prerendering page "/zh-CN/solutions/infineon-aurix-automotive-solution". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:06.851751Z	
2025-09-16T23:46:06.851891Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:06.852018Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:06.852286Z	    at nB (/m")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:06.852613Z	        
2025-09-16T23:46:06.852761Z	    _id,
2025-09-16T23:46:06.852872Z	    title,
2025-09-16T23:46:06.853146Z	    "slug": slug.current,
2025-09-16T23:46:06.853274Z	    summary,
2025-09-16T23:46:06.853372Z	    description,
2025-09-16T23:46:06.854222Z	    coverImage,
2025-09-16T23:46:06.854377Z	    primaryBrand->{
2025-09-16T23:46:06.854734Z	      _id,
2025-09-16T23:46:06.854861Z	      name,
2025-09-16T23:46:06.854948Z	      "slug": slug.current,
2025-09-16T23:46:06.85503Z	      logo
2025-09-16T23:46:06.855107Z	    },
2025-09-16T23:46:06.855405Z	    relatedBrands[]->{
2025-09-16T23:46:06.855683Z	      _id,
2025-09-16T23:46:06.856476Z	      name,
2025-09-16T23:46:06.856833Z	      "slug": slug.current,
2025-09-16T23:46:06.85725Z	      logo
2025-09-16T23:46:06.857516Z	    },
2025-09-16T23:46:06.857652Z	    targetMarket,
2025-09-16T23:46:06.857822Z	    complexity,
2025-09-16T23:46:06.857941Z	    publishedAt,
2025-09-16T23:46:06.858052Z	    isPublished,
2025-09-16T23:46:06.858168Z	    isFeatured,
2025-09-16T23:46:06.858275Z	    viewCount,
2025-09-16T23:46:06.858372Z	    _createdAt,
2025-09-16T23:46:06.858469Z	    _updatedAt
2025-09-16T23:46:06.858558Z	  
2025-09-16T23:46:06.858638Z	      },
2025-09-16T23:46:06.86201Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:46:06.862209Z	    }
2025-09-16T23:46:06.862316Z	  
2025-09-16T23:46:06.862411Z	Query parameters: {
2025-09-16T23:46:06.862499Z	  limit: 4,
2025-09-16T23:46:06.862584Z	  offset: 0,
2025-09-16T23:46:06.862668Z	  targetMarket: undefined,
2025-09-16T23:46:06.862796Z	  brand: 'qualcomm',
2025-09-16T23:46:06.862893Z	  featured: undefined
2025-09-16T23:46:06.862992Z	}
2025-09-16T23:46:06.863089Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:46:06.863182Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:06.86878Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:06.869065Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:46:06.877896Z	Fetching products with query: 
2025-09-16T23:46:06.877993Z	    {
2025-09-16T23:46:06.878113Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:06.878792Z	        
2025-09-16T23:46:06.880176Z	    _id,
2025-09-16T23:46:06.923839Z	    _type,
2025-09-16T23:46:06.924125Z	    partNumber,
2025-09-16T23:46:06.924262Z	    "slug": slug.current,
2025-09-16T23:46:06.924388Z	    title,
2025-09-16T23:46:06.924529Z	    shortDescription,
2025-09-16T23:46:06.92465Z	    image,
2025-09-16T23:46:06.924783Z	    brand->{
2025-09-16T23:46:06.924898Z	      name,
2025-09-16T23:46:06.924995Z	      "slug": slug.current,
2025-09-16T23:46:06.925087Z	      logo
2025-09-16T23:46:06.92519Z	    },
2025-09-16T23:46:06.925292Z	    category->{
2025-09-16T23:46:06.925394Z	      name,
2025-09-16T23:46:06.925516Z	      "slug": slug.current
2025-09-16T23:46:06.925622Z	    },
2025-09-16T23:46:06.925842Z	    pricing{
2025-09-16T23:46:06.926118Z	      currency,
2025-09-16T23:46:06.926544Z	      tiers[]{
2025-09-16T23:46:06.926967Z	        quantity,
2025-09-16T23:46:06.927362Z	        price,
2025-09-16T23:46:06.927923Z	        unit
2025-09-16T23:46:06.928066Z	      },
2025-09-16T23:46:06.928182Z	      moq,
2025-09-16T23:46:06.928366Z	      leadTime,
2025-09-16T23:46:06.928594Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:06.928752Z	      "price": tiers[0].price,
2025-09-16T23:46:06.9289Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:06.92905Z	    },
2025-09-16T23:46:06.92916Z	    inventory{
2025-09-16T23:46:06.929267Z	      quantity,
2025-09-16T23:46:06.929362Z	      status,
2025-09-16T23:46:06.92946Z	      warehouse,
2025-09-16T23:46:06.929556Z	      lastUpdated,
2025-09-16T23:46:06.929668Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:06.929838Z	      "inStock": status == "in_stock",
2025-09-16T23:46:06.929938Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:06.930035Z	    },
2025-09-16T23:46:06.930132Z	    isActive,
2025-09-16T23:46:06.930231Z	    isFeatured,
2025-09-16T23:46:06.930347Z	    isNew,
2025-09-16T23:46:06.930463Z	    _createdAt,
2025-09-16T23:46:06.930561Z	    _updatedAt
2025-09-16T23:46:06.930651Z	  
2025-09-16T23:46:06.930776Z	      },
2025-09-16T23:46:06.930868Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:46:06.930969Z	    }
2025-09-16T23:46:06.931177Z	  
2025-09-16T23:46:06.931369Z	Query parameters: {
2025-09-16T23:46:06.931492Z	  limit: 8,
2025-09-16T23:46:06.9316Z	  offset: 0,
2025-09-16T23:46:06.931729Z	  category: undefined,
2025-09-16T23:46:06.931837Z	  brand: 'cree',
2025-09-16T23:46:06.931935Z	  featured: undefined
2025-09-16T23:46:06.932034Z	}
2025-09-16T23:46:06.932138Z	Fetching solutions with query: 
2025-09-16T23:46:06.932238Z	    {
2025-09-16T23:46:06.932344Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:06.932468Z	        
2025-09-16T23:46:06.932601Z	    _id,
2025-09-16T23:46:06.932838Z	    title,
2025-09-16T23:46:06.933155Z	    "slug": slug.current,
2025-09-16T23:46:06.933382Z	    summary,
2025-09-16T23:46:06.933566Z	    description,
2025-09-16T23:46:06.933759Z	    coverImage,
2025-09-16T23:46:06.933876Z	    primaryBrand->{
2025-09-16T23:46:06.933983Z	      _id,
2025-09-16T23:46:06.934325Z	      name,
2025-09-16T23:46:06.934455Z	      "slug": slug.current,
2025-09-16T23:46:06.934565Z	      logo
2025-09-16T23:46:06.9347Z	    },
2025-09-16T23:46:06.934819Z	    relatedBrands[]->{
2025-09-16T23:46:06.934942Z	      _id,
2025-09-16T23:46:06.935061Z	      name,
2025-09-16T23:46:06.93517Z	      "slug": slug.current,
2025-09-16T23:46:06.935279Z	      logo
2025-09-16T23:46:06.935382Z	    },
2025-09-16T23:46:06.935487Z	    targetMarket,
2025-09-16T23:46:06.935607Z	    complexity,
2025-09-16T23:46:06.935748Z	    publishedAt,
2025-09-16T23:46:06.935856Z	    isPublished,
2025-09-16T23:46:06.935961Z	    isFeatured,
2025-09-16T23:46:06.936062Z	    viewCount,
2025-09-16T23:46:06.936175Z	    _createdAt,
2025-09-16T23:46:06.936282Z	    _updatedAt
2025-09-16T23:46:06.936413Z	  
2025-09-16T23:46:06.936517Z	      },
2025-09-16T23:46:06.936614Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:46:06.936754Z	    }
2025-09-16T23:46:06.936861Z	  
2025-09-16T23:46:06.936967Z	Query parameters: {
2025-09-16T23:46:06.93708Z	  limit: 4,
2025-09-16T23:46:06.937196Z	  offset: 0,
2025-09-16T23:46:06.937298Z	  targetMarket: undefined,
2025-09-16T23:46:06.937396Z	  brand: 'cree',
2025-09-16T23:46:06.937496Z	  featured: undefined
2025-09-16T23:46:06.937597Z	}
2025-09-16T23:46:06.937729Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:46:06.937852Z	Products fetch result: {
2025-09-16T23:46:06.937956Z	  totalProducts: 4,
2025-09-16T23:46:06.938058Z	  fetchedProducts: 4,
2025-09-16T23:46:06.938159Z	  firstProduct: {
2025-09-16T23:46:06.938259Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:46:06.938354Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:46:06.938466Z	    _type: 'product',
2025-09-16T23:46:06.938575Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:46:06.938713Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:46:06.938835Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:06.93896Z	    image: null,
2025-09-16T23:46:06.939058Z	    inventory: {
2025-09-16T23:46:06.939212Z	      inStock: true,
2025-09-16T23:46:06.939443Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:46:06.939604Z	      quantity: 0,
2025-09-16T23:46:06.939781Z	      status: 'in_stock',
2025-09-16T23:46:06.941848Z	      warehouse: null
2025-09-16T23:46:06.942028Z	    },
2025-09-16T23:46:06.942466Z	    isActive: true,
2025-09-16T23:46:06.942667Z	    isFeatured: false,
2025-09-16T23:46:06.942888Z	    isNew: false,
2025-09-16T23:46:06.943016Z	    partNumber: '11111',
2025-09-16T23:46:06.943157Z	    pricing: {
2025-09-16T23:46:06.943491Z	      currency: 'CNY',
2025-09-16T23:46:06.944012Z	      leadTime: null,
2025-09-16T23:46:06.944211Z	      moq: null,
2025-09-16T23:46:06.944373Z	      price: null,
2025-09-16T23:46:06.944515Z	      tiers: null
2025-09-16T23:46:06.944669Z	    },
2025-09-16T23:46:06.944882Z	    shortDescription: '11111',
2025-09-16T23:46:06.945037Z	    slug: 'sic mosfet',
2025-09-16T23:46:06.945168Z	    title: '111111'
2025-09-16T23:46:06.945363Z	  }
2025-09-16T23:46:06.945522Z	}
2025-09-16T23:46:06.945755Z	Solutions fetch result: {
2025-09-16T23:46:06.946026Z	  totalSolutions: 6,
2025-09-16T23:46:06.946446Z	  fetchedSolutions: 4,
2025-09-16T23:46:06.946716Z	  firstSolution: {
2025-09-16T23:46:06.947016Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:46:06.947272Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:46:06.947522Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:46:06.94781Z	    complexity: 'medium',
2025-09-16T23:46:06.947953Z	    coverImage: null,
2025-09-16T23:46:06.948227Z	    description: [ [Object] ],
2025-09-16T23:46:06.948361Z	    isFeatured: false,
2025-09-16T23:46:06.948505Z	    isPublished: true,
2025-09-16T23:46:06.948618Z	    primaryBrand: {
2025-09-16T23:46:06.948762Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:46:06.948886Z	      logo: null,
2025-09-16T23:46:06.948982Z	      name: 'CREE',
2025-09-16T23:46:06.949072Z	      slug: 'cree'
2025-09-16T23:46:06.949234Z	    },
2025-09-16T23:46:06.94942Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:46:06.949529Z	    relatedBrands: null,
2025-09-16T23:46:06.949617Z	    slug: '11111',
2025-09-16T23:46:06.949725Z	    summary: '11111',
2025-09-16T23:46:06.949831Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:06.949937Z	    title: '11111',
2025-09-16T23:46:06.950039Z	    viewCount: 0
2025-09-16T23:46:06.950143Z	  }
2025-09-16T23:46:06.95024Z	}
2025-09-16T23:46:06.95034Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:46:06.950447Z	Fetching products with query: 
2025-09-16T23:46:06.950619Z	    {
2025-09-16T23:46:06.950743Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:06.950846Z	        
2025-09-16T23:46:06.950933Z	    _id,
2025-09-16T23:46:06.95101Z	    _type,
2025-09-16T23:46:06.951088Z	    partNumber,
2025-09-16T23:46:06.951168Z	    "slug": slug.current,
2025-09-16T23:46:06.951249Z	    title,
2025-09-16T23:46:06.951328Z	    shortDescription,
2025-09-16T23:46:06.951414Z	    image,
2025-09-16T23:46:06.951499Z	    brand->{
2025-09-16T23:46:06.951582Z	      name,
2025-09-16T23:46:06.95166Z	      "slug": slug.current,
2025-09-16T23:46:06.951777Z	      logo
2025-09-16T23:46:06.951866Z	    },
2025-09-16T23:46:06.951957Z	    category->{
2025-09-16T23:46:06.952055Z	      name,
2025-09-16T23:46:06.952155Z	      "slug": slug.current
2025-09-16T23:46:06.952253Z	    },
2025-09-16T23:46:06.952345Z	    pricing{
2025-09-16T23:46:06.952431Z	      currency,
2025-09-16T23:46:06.952513Z	      tiers[]{
2025-09-16T23:46:06.952596Z	        quantity,
2025-09-16T23:46:06.952691Z	        price,
2025-09-16T23:46:06.952785Z	        unit
2025-09-16T23:46:06.952872Z	      },
2025-09-16T23:46:06.952959Z	      moq,
2025-09-16T23:46:06.953052Z	      leadTime,
2025-09-16T23:46:06.95341Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:06.953778Z	      "price": tiers[0].price,
2025-09-16T23:46:06.953956Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:06.971859Z	    },
2025-09-16T23:46:06.972082Z	    inventory{
2025-09-16T23:46:06.972157Z	      quantity,
2025-09-16T23:46:06.972215Z	      status,
2025-09-16T23:46:06.97227Z	      warehouse,
2025-09-16T23:46:06.972324Z	      lastUpdated,
2025-09-16T23:46:06.972379Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:06.97245Z	      "inStock": status == "in_stock",
2025-09-16T23:46:06.97251Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:06.972566Z	    },
2025-09-16T23:46:06.972626Z	    isActive,
2025-09-16T23:46:06.972731Z	    isFeatured,
2025-09-16T23:46:06.972845Z	    isNew,
2025-09-16T23:46:06.972951Z	    _createdAt,
2025-09-16T23:46:06.973065Z	    _updatedAt
2025-09-16T23:46:06.973175Z	  
2025-09-16T23:46:06.973286Z	      },
2025-09-16T23:46:06.973397Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:46:06.973518Z	    }
2025-09-16T23:46:06.974456Z	  
2025-09-16T23:46:06.974586Z	Query parameters: {
2025-09-16T23:46:06.974775Z	  limit: 8,
2025-09-16T23:46:06.975445Z	  offset: 0,
2025-09-16T23:46:06.975741Z	  category: undefined,
2025-09-16T23:46:06.975983Z	  brand: 'cree',
2025-09-16T23:46:06.976537Z	  featured: undefined
2025-09-16T23:46:06.97667Z	}
2025-09-16T23:46:06.97709Z	Fetching solutions with query: 
2025-09-16T23:46:06.979801Z	    {
2025-09-16T23:46:06.979941Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:06.980071Z	        
2025-09-16T23:46:06.980177Z	    _id,
2025-09-16T23:46:06.980267Z	    title,
2025-09-16T23:46:06.980357Z	    "slug": slug.current,
2025-09-16T23:46:06.980453Z	    summary,
2025-09-16T23:46:06.980534Z	    description,
2025-09-16T23:46:06.980613Z	    coverImage,
2025-09-16T23:46:06.980739Z	    primaryBrand->{
2025-09-16T23:46:06.980833Z	      _id,
2025-09-16T23:46:06.980934Z	      name,
2025-09-16T23:46:06.981033Z	      "slug": slug.current,
2025-09-16T23:46:06.981135Z	      logo
2025-09-16T23:46:06.981241Z	    },
2025-09-16T23:46:06.981329Z	    relatedBrands[]->{
2025-09-16T23:46:06.981412Z	      _id,
2025-09-16T23:46:06.981512Z	      name,
2025-09-16T23:46:06.98161Z	      "slug": slug.current,
2025-09-16T23:46:06.98175Z	      logo
2025-09-16T23:46:06.98186Z	    },
2025-09-16T23:46:06.981958Z	    targetMarket,
2025-09-16T23:46:06.982056Z	    complexity,
2025-09-16T23:46:06.982167Z	    publishedAt,
2025-09-16T23:46:06.982277Z	    isPublished,
2025-09-16T23:46:06.982398Z	    isFeatured,
2025-09-16T23:46:06.982532Z	    viewCount,
2025-09-16T23:46:06.982634Z	    _createdAt,
2025-09-16T23:46:07.02473Z	    _updatedAt
2025-09-16T23:46:07.025221Z	  
2025-09-16T23:46:07.025574Z	      },
2025-09-16T23:46:07.025904Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:46:07.026264Z	    }
2025-09-16T23:46:07.026597Z	  
2025-09-16T23:46:07.026952Z	Query parameters: {
2025-09-16T23:46:07.027255Z	  limit: 4,
2025-09-16T23:46:07.027377Z	  offset: 0,
2025-09-16T23:46:07.0279Z	  targetMarket: undefined,
2025-09-16T23:46:07.028073Z	  brand: 'cree',
2025-09-16T23:46:07.028191Z	  featured: undefined
2025-09-16T23:46:07.028295Z	}
2025-09-16T23:46:07.028405Z	opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.028783Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.028912Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.029019Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.029128Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.029235Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.029349Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.029472Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.029574Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.02971Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children✅ [getBrandData] Found brand: CREE
2025-09-16T23:46:07.029847Z	Products fetch result: {
2025-09-16T23:46:07.029974Z	  totalProducts: 4,
2025-09-16T23:46:07.030087Z	  fetchedProducts: 4,
2025-09-16T23:46:07.030197Z	  firstProduct: {
2025-09-16T23:46:07.030311Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:46:07.030428Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:46:07.030536Z	    _type: 'product',
2025-09-16T23:46:07.030643Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:46:07.030787Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:46:07.030892Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:07.030995Z	    image: null,
2025-09-16T23:46:07.031092Z	    inventory: {
2025-09-16T23:46:07.031221Z	      inStock: true,
2025-09-16T23:46:07.031332Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:46:07.031434Z	      quantity: 0,
2025-09-16T23:46:07.031536Z	      status: 'in_stock',
2025-09-16T23:46:07.031634Z	      warehouse: null
2025-09-16T23:46:07.031791Z	    },
2025-09-16T23:46:07.031907Z	    isActive: true,
2025-09-16T23:46:07.03202Z	    isFeatured: false,
2025-09-16T23:46:07.032147Z	    isNew: false,
2025-09-16T23:46:07.032254Z	    partNumber: '11111',
2025-09-16T23:46:07.032355Z	    pricing: {
2025-09-16T23:46:07.032461Z	      currency: 'CNY',
2025-09-16T23:46:07.032566Z	      leadTime: null,
2025-09-16T23:46:07.032686Z	      moq: null,
2025-09-16T23:46:07.032823Z	      price: null,
2025-09-16T23:46:07.032935Z	      tiers: null
2025-09-16T23:46:07.033043Z	    },
2025-09-16T23:46:07.03315Z	    shortDescription: '11111',
2025-09-16T23:46:07.033258Z	    slug: 'sic mosfet',
2025-09-16T23:46:07.033355Z	    title: '111111'
2025-09-16T23:46:07.033459Z	  }
2025-09-16T23:46:07.033564Z	}
2025-09-16T23:46:07.033665Z	Solutions fetch result: {
2025-09-16T23:46:07.033807Z	  totalSolutions: 6,
2025-09-16T23:46:07.033916Z	  fetchedSolutions: 4,
2025-09-16T23:46:07.034022Z	  firstSolution: {
2025-09-16T23:46:07.034143Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:46:07.034263Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:46:07.034377Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:46:07.034478Z	    complexity: 'medium',
2025-09-16T23:46:07.034577Z	    coverImage: null,
2025-09-16T23:46:07.034713Z	    description: [ [Object] ],
2025-09-16T23:46:07.034827Z	    isFeatured: false,
2025-09-16T23:46:07.034932Z	    isPublished: true,
2025-09-16T23:46:07.035026Z	    primaryBrand: {
2025-09-16T23:46:07.03512Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:46:07.035213Z	      logo: null,
2025-09-16T23:46:07.035306Z	      name: 'CREE',
2025-09-16T23:46:07.035398Z	      slug: 'cree'
2025-09-16T23:46:07.035499Z	    },
2025-09-16T23:46:07.035733Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:46:07.0359Z	    relatedBrands: null,
2025-09-16T23:46:07.036012Z	    slug: '11111',
2025-09-16T23:46:07.036236Z	    summary: '11111',
2025-09-16T23:46:07.036373Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:07.036484Z	    title: '11111',
2025-09-16T23:46:07.036588Z	    viewCount: 0
2025-09-16T23:46:07.036718Z	  }
2025-09-16T23:46:07.036897Z	}
2025-09-16T23:46:07.037038Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-16T23:46:07.037165Z	Fetching products with query: 
2025-09-16T23:46:07.037274Z	    {
2025-09-16T23:46:07.037375Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:07.037476Z	        
2025-09-16T23:46:07.037576Z	    _id,
2025-09-16T23:46:07.037702Z	    _type,
2025-09-16T23:46:07.037827Z	    partNumber,
2025-09-16T23:46:07.03793Z	    "slug": slug.current,
2025-09-16T23:46:07.038035Z	    title,
2025-09-16T23:46:07.038135Z	    shortDescription,
2025-09-16T23:46:07.03823Z	    image,
2025-09-16T23:46:07.038345Z	    brand->{
2025-09-16T23:46:07.038469Z	      name,
2025-09-16T23:46:07.038582Z	      "slug": slug.current,
2025-09-16T23:46:07.038727Z	      logo
2025-09-16T23:46:07.038864Z	    },
2025-09-16T23:46:07.038974Z	    category->{
2025-09-16T23:46:07.039083Z	      name,
2025-09-16T23:46:07.039181Z	      "slug": slug.current
2025-09-16T23:46:07.039308Z	    },
2025-09-16T23:46:07.03941Z	    pricing{
2025-09-16T23:46:07.039511Z	      currency,
2025-09-16T23:46:07.039615Z	      tiers[]{
2025-09-16T23:46:07.039739Z	        quantity,
2025-09-16T23:46:07.039856Z	        price,
2025-09-16T23:46:07.039962Z	        unit
2025-09-16T23:46:07.040065Z	      },
2025-09-16T23:46:07.040177Z	      moq,
2025-09-16T23:46:07.040271Z	      leadTime,
2025-09-16T23:46:07.040371Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:07.040472Z	      "price": tiers[0].price,
2025-09-16T23:46:07.040574Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:07.040665Z	    },
2025-09-16T23:46:07.04079Z	    inventory{
2025-09-16T23:46:07.040874Z	      quantity,
2025-09-16T23:46:07.040952Z	      status,
2025-09-16T23:46:07.041031Z	      warehouse,
2025-09-16T23:46:07.04111Z	      lastUpdated,
2025-09-16T23:46:07.041194Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:07.041377Z	      "inStock": status == "in_stock",
2025-09-16T23:46:07.04152Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:07.04162Z	    },
2025-09-16T23:46:07.041745Z	    isActive,
2025-09-16T23:46:07.041839Z	    isFeatured,
2025-09-16T23:46:07.041924Z	    isNew,
2025-09-16T23:46:07.042012Z	    _createdAt,
2025-09-16T23:46:07.042102Z	    _updatedAt
2025-09-16T23:46:07.045745Z	  
2025-09-16T23:46:07.045926Z	      },
2025-09-16T23:46:07.046174Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-16T23:46:07.046371Z	    }
2025-09-16T23:46:07.046526Z	  
2025-09-16T23:46:07.046603Z	Query parameters: {
2025-09-16T23:46:07.046661Z	  limit: 8,
2025-09-16T23:46:07.046773Z	  offset: 0,
2025-09-16T23:46:07.046835Z	  category: undefined,
2025-09-16T23:46:07.046935Z	  brand: 'pi',
2025-09-16T23:46:07.047256Z	  featured: undefined
2025-09-16T23:46:07.047581Z	}
2025-09-16T23:46:07.047858Z	Fetching solutions with query: 
2025-09-16T23:46:07.048343Z	    {
2025-09-16T23:46:07.04885Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:07.049366Z	        
2025-09-16T23:46:07.049866Z	    _id,
2025-09-16T23:46:07.050324Z	    title,
2025-09-16T23:46:07.050797Z	    "slug": slug.current,
2025-09-16T23:46:07.051289Z	    summary,
2025-09-16T23:46:07.051825Z	    description,
2025-09-16T23:46:07.052285Z	    coverImage,
2025-09-16T23:46:07.052775Z	    primaryBrand->{
2025-09-16T23:46:07.053134Z	      _id,
2025-09-16T23:46:07.053523Z	      name,
2025-09-16T23:46:07.054048Z	      "slug": slug.current,
2025-09-16T23:46:07.054565Z	      logo
2025-09-16T23:46:07.055317Z	    },
2025-09-16T23:46:07.055488Z	    relatedBrands[]->{
2025-09-16T23:46:07.05561Z	      _id,
2025-09-16T23:46:07.055776Z	      name,
2025-09-16T23:46:07.05592Z	      "slug": slug.current,
2025-09-16T23:46:07.056034Z	      logo
2025-09-16T23:46:07.056147Z	    },
2025-09-16T23:46:07.056262Z	    targetMarket,
2025-09-16T23:46:07.056371Z	    complexity,
2025-09-16T23:46:07.056484Z	    publishedAt,
2025-09-16T23:46:07.0571Z	    isPublished,
2025-09-16T23:46:07.057218Z	    isFeatured,
2025-09-16T23:46:07.05733Z	    viewCount,
2025-09-16T23:46:07.057435Z	    _createdAt,
2025-09-16T23:46:07.057549Z	    _updatedAt
2025-09-16T23:46:07.057696Z	  
2025-09-16T23:46:07.057881Z	      },
2025-09-16T23:46:07.057994Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-16T23:46:07.058685Z	    }
2025-09-16T23:46:07.060045Z	  
2025-09-16T23:46:07.06052Z	Query parameters: {
2025-09-16T23:46:07.060683Z	  limit: 4,
2025-09-16T23:46:07.060815Z	  offset: 0,
2025-09-16T23:46:07.060933Z	  targetMarket: undefined,
2025-09-16T23:46:07.061047Z	  brand: 'pi',
2025-09-16T23:46:07.061156Z	  featured: undefined
2025-09-16T23:46:07.061266Z	}
2025-09-16T23:46:07.062051Z	✅ [getBrandData] Found brand: PI
2025-09-16T23:46:07.062487Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:07.062751Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:07.063095Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-16T23:46:07.063635Z	Fetching products w, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.064082Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.06432Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.064656Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.065018Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.065551Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.065807Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.066146Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.066574Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.066923Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.067349Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:07.067665Z	  digest: '1870762441'
2025-09-16T23:46:07.068007Z	}
2025-09-16T23:46:07.068472Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.068863Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.069155Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.069602Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.069935Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.07049Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.070982Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.071322Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.071622Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.072141Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.072582Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:07.072747Z	  digest: '1870762441'
2025-09-16T23:46:07.076953Z	}
2025-09-16T23:46:07.077322Z	
2025-09-16T23:46:07.077616Z	Error occurred prerendering page "/zh-TW/solutions/supplysolution". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:07.081126Z	
2025-09-16T23:46:07.081527Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.081933Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.082503Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.082628Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.082752Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.083122Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.083625Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.096998Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.09718Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.097291Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.097397Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.09751Z	
2025-09-16T23:46:07.09761Z	Error occurred prerendering page "/zh-TW/solutions/charger". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:07.097753Z	
2025-09-16T23:46:07.09788Z	Error: Objects are not valiith query: 
2025-09-16T23:46:07.097987Z	    {
2025-09-16T23:46:07.098088Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:07.09819Z	        
2025-09-16T23:46:07.098294Z	    _id,
2025-09-16T23:46:07.098394Z	    _type,
2025-09-16T23:46:07.098492Z	    partNumber,
2025-09-16T23:46:07.098595Z	    "slug": slug.current,
2025-09-16T23:46:07.098708Z	    title,
2025-09-16T23:46:07.098802Z	    shortDescription,
2025-09-16T23:46:07.098892Z	    image,
2025-09-16T23:46:07.098983Z	    brand->{
2025-09-16T23:46:07.099069Z	      name,
2025-09-16T23:46:07.099157Z	      "slug": slug.current,
2025-09-16T23:46:07.099278Z	      logo
2025-09-16T23:46:07.099375Z	    },
2025-09-16T23:46:07.099475Z	    category->{
2025-09-16T23:46:07.099568Z	      name,
2025-09-16T23:46:07.099655Z	      "slug": slug.current
2025-09-16T23:46:07.12485Z	    },
2025-09-16T23:46:07.125255Z	    pricing{
2025-09-16T23:46:07.125402Z	      currency,
2025-09-16T23:46:07.125763Z	      tiers[]{
2025-09-16T23:46:07.125888Z	        quantity,
2025-09-16T23:46:07.125989Z	        price,
2025-09-16T23:46:07.126088Z	        unit
2025-09-16T23:46:07.126192Z	      },
2025-09-16T23:46:07.126565Z	      moq,
2025-09-16T23:46:07.126685Z	      leadTime,
2025-09-16T23:46:07.126797Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:07.126897Z	      "price": tiers[0].price,
2025-09-16T23:46:07.126989Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:07.127073Z	    },
2025-09-16T23:46:07.127159Z	    inventory{
2025-09-16T23:46:07.127248Z	      quantity,
2025-09-16T23:46:07.127334Z	      status,
2025-09-16T23:46:07.127419Z	      warehouse,
2025-09-16T23:46:07.127526Z	      lastUpdated,
2025-09-16T23:46:07.127617Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:07.127733Z	      "inStock": status == "in_stock",
2025-09-16T23:46:07.12784Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:07.127936Z	    },
2025-09-16T23:46:07.128039Z	    isActive,
2025-09-16T23:46:07.128135Z	    isFeatured,
2025-09-16T23:46:07.12825Z	    isNew,
2025-09-16T23:46:07.128349Z	    _createdAt,
2025-09-16T23:46:07.128454Z	    _updatedAt
2025-09-16T23:46:07.128541Z	  
2025-09-16T23:46:07.128624Z	      },
2025-09-16T23:46:07.128738Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-16T23:46:07.128848Z	    }
2025-09-16T23:46:07.128958Z	  
2025-09-16T23:46:07.129072Z	Query parameters: {
2025-09-16T23:46:07.129171Z	  limit: 8,
2025-09-16T23:46:07.12926Z	  offset: 0,
2025-09-16T23:46:07.129348Z	  category: undefined,
2025-09-16T23:46:07.129444Z	  brand: 'pi',
2025-09-16T23:46:07.129537Z	  featured: undefined
2025-09-16T23:46:07.129635Z	}
2025-09-16T23:46:07.129758Z	Fetching solutions with query: 
2025-09-16T23:46:07.129864Z	    {
2025-09-16T23:46:07.129962Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:07.130096Z	        
2025-09-16T23:46:07.130194Z	    _id,
2025-09-16T23:46:07.130288Z	    title,
2025-09-16T23:46:07.130375Z	    "slug": slug.current,
2025-09-16T23:46:07.130478Z	    summary,
2025-09-16T23:46:07.130573Z	    description,
2025-09-16T23:46:07.130663Z	    coverImage,
2025-09-16T23:46:07.13078Z	    primaryBrand->{
2025-09-16T23:46:07.130882Z	      _id,
2025-09-16T23:46:07.130977Z	      name,
2025-09-16T23:46:07.131071Z	      "slug": slug.current,
2025-09-16T23:46:07.131164Z	      logo
2025-09-16T23:46:07.13126Z	    },
2025-09-16T23:46:07.131351Z	    relatedBrands[]->{
2025-09-16T23:46:07.131454Z	      _id,
2025-09-16T23:46:07.131544Z	      name,
2025-09-16T23:46:07.131627Z	      "slug": slug.current,
2025-09-16T23:46:07.131741Z	      logo
2025-09-16T23:46:07.131836Z	    },
2025-09-16T23:46:07.131928Z	    targetMarket,
2025-09-16T23:46:07.146105Z	    complexity,
2025-09-16T23:46:07.146233Z	    publishedAt,
2025-09-16T23:46:07.146362Z	    isPublished,
2025-09-16T23:46:07.146938Z	    isFeatured,
2025-09-16T23:46:07.147153Z	    viewCount,
2025-09-16T23:46:07.147301Z	    _createdAt,
2025-09-16T23:46:07.147498Z	    _updatedAt
2025-09-16T23:46:07.147657Z	  
2025-09-16T23:46:07.147903Z	      },
2025-09-16T23:46:07.148099Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-16T23:46:07.148226Z	    }
2025-09-16T23:46:07.148362Z	  
2025-09-16T23:46:07.148905Z	Query parameters: {
2025-09-16T23:46:07.149014Z	  limit: 4,
2025-09-16T23:46:07.149128Z	  offset: 0,
2025-09-16T23:46:07.149232Z	  targetMarket: undefined,
2025-09-16T23:46:07.14933Z	  brand: 'pi',
2025-09-16T23:46:07.149423Z	  featured: undefined
2025-09-16T23:46:07.14952Z	}
2025-09-16T23:46:07.149636Z	✅ [getBrandData] Found brand: PI
2025-09-16T23:46:07.149767Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:07.150279Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:07.150406Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:46:07.150523Z	Fetching products with query: 
2025-09-16T23:46:07.150628Z	    {
2025-09-16T23:46:07.150747Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:07.150847Z	        
2025-09-16T23:46:07.150946Z	    _id,
2025-09-16T23:46:07.151045Z	    _type,
2025-09-16T23:46:07.151145Z	    partNumber,
2025-09-16T23:46:07.151244Z	    "slug": slug.current,
2025-09-16T23:46:07.151341Z	    title,
2025-09-16T23:46:07.151472Z	    shortDescription,
2025-09-16T23:46:07.151598Z	    image,
2025-09-16T23:46:07.152019Z	    brand->{
2025-09-16T23:46:07.152116Z	      name,
2025-09-16T23:46:07.152201Z	      "slug": slug.current,
2025-09-16T23:46:07.152295Z	      logo
2025-09-16T23:46:07.152378Z	    },
2025-09-16T23:46:07.15246Z	    category->{
2025-09-16T23:46:07.152622Z	      name,
2025-09-16T23:46:07.153051Z	      "slug": slug.current
2025-09-16T23:46:07.153188Z	    },
2025-09-16T23:46:07.153495Z	    pricing{
2025-09-16T23:46:07.153653Z	      currency,
2025-09-16T23:46:07.153796Z	      tiers[]{
2025-09-16T23:46:07.153912Z	        quantity,
2025-09-16T23:46:07.154014Z	        price,
2025-09-16T23:46:07.154119Z	        unit
2025-09-16T23:46:07.154221Z	      },
2025-09-16T23:46:07.154324Z	      moq,
2025-09-16T23:46:07.15443Z	      leadTime,
2025-09-16T23:46:07.154549Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:07.154659Z	      "price": tiers[0].price,
2025-09-16T23:46:07.155116Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:07.155541Z	    },
2025-09-16T23:46:07.155966Z	    inventory{
2025-09-16T23:46:07.156079Z	      quantity,
2025-09-16T23:46:07.156512Z	      status,
2025-09-16T23:46:07.156639Z	      warehouse,
2025-09-16T23:46:07.156784Z	      lastUpdated,
2025-09-16T23:46:07.15689Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:07.156988Z	      "inStock": status == "in_stock",
2025-09-16T23:46:07.157093Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:07.1572Z	    },
2025-09-16T23:46:07.157303Z	    isActive,
2025-09-16T23:46:07.157409Z	    isFeatured,
2025-09-16T23:46:07.157526Z	    isNew,
2025-09-16T23:46:07.157628Z	    _createdAt,
2025-09-16T23:46:07.157755Z	    _updatedAt
2025-09-16T23:46:07.157855Z	  
2025-09-16T23:46:07.157951Z	      },
2025-09-16T23:46:07.15804Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:46:07.158145Z	    }
2025-09-16T23:46:07.15823Z	  
2025-09-16T23:46:07.158325Z	Query parameters: {
2025-09-16T23:46:07.158422Z	  limit: 8,
2025-09-16T23:46:07.15854Z	  offset: 0,
2025-09-16T23:46:07.159153Z	  category: undefined,
2025-09-16T23:46:07.159536Z	  brand: 'Electronicon',
2025-09-16T23:46:07.159919Z	  featured: undefined
2025-09-16T23:46:07.160666Z	}
2025-09-16T23:46:07.161127Z	Fetching solutions with query: 
2025-09-16T23:46:07.161528Z	    {
2025-09-16T23:46:07.161921Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:07.162352Z	        
2025-09-16T23:46:07.162785Z	    _id,
2025-09-16T23:46:07.163214Z	    title,
2025-09-16T23:46:07.163545Z	    "slug": slug.current,
2025-09-16T23:46:07.163908Z	    summary,
2025-09-16T23:46:07.164305Z	    description,
2025-09-16T23:46:07.16475Z	    coverImage,
2025-09-16T23:46:07.165172Z	    primaryBrand->{
2025-09-16T23:46:07.165705Z	      _id,
2025-09-16T23:46:07.165856Z	      name,
2025-09-16T23:46:07.165977Z	      "slug": slug.current,
2025-09-16T23:46:07.166081Z	      logo
2025-09-16T23:46:07.166181Z	    },
2025-09-16T23:46:07.166279Z	    relatedBrands[]->{
2025-09-16T23:46:07.166382Z	      _id,
2025-09-16T23:46:07.166467Z	      name,
2025-09-16T23:46:07.166547Z	      "slug": slug.current,
2025-09-16T23:46:07.166641Z	      logo
2025-09-16T23:46:07.166775Z	    },
2025-09-16T23:46:07.166879Z	    targetMarket,
2025-09-16T23:46:07.166984Z	    complexity,
2025-09-16T23:46:07.167369Z	    publishedAt,
2025-09-16T23:46:07.167498Z	    isPublished,
2025-09-16T23:46:07.167593Z	    isFeatured,
2025-09-16T23:46:07.16774Z	    viewCount,
2025-09-16T23:46:07.167884Z	    _createdAt,
2025-09-16T23:46:07.168063Z	    _updatedAt
2025-09-16T23:46:07.168224Z	  
2025-09-16T23:46:07.168411Z	      },
2025-09-16T23:46:07.168593Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:46:07.168824Z	    }
2025-09-16T23:46:07.168994Z	  
2025-09-16T23:46:07.169141Z	Query parameters: {
2025-09-16T23:46:07.169282Z	  limit: 4,
2025-09-16T23:46:07.169448Z	  offset: 0,
2025-09-16T23:46:07.169633Z	  targetMarket: undefined,
2025-09-16T23:46:07.169764Z	  brand: 'Electronicon',
2025-09-16T23:46:07.169936Z	  featured: undefined
2025-09-16T23:46:07.170102Z	}
2025-09-16T23:46:07.17027Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:46:07.170426Z	Fetching products with query: 
2025-09-16T23:46:07.170577Z	    {
2025-09-16T23:46:07.170761Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:07.170946Z	        
2025-09-16T23:46:07.17111Z	    _id,
2025-09-16T23:46:07.171275Z	    _type,
2025-09-16T23:46:07.17144Z	    partNumber,
2025-09-16T23:46:07.171605Z	    "slug": slug.current,
2025-09-16T23:46:07.171741Z	    title,
2025-09-16T23:46:07.17183Z	    shortDescription,
2025-09-16T23:46:07.171999Z	    image,
2025-09-16T23:46:07.172134Z	    brand->{
2025-09-16T23:46:07.172317Z	      name,
2025-09-16T23:46:07.173481Z	      "slug": slug.current,
2025-09-16T23:46:07.173971Z	      logo
2025-09-16T23:46:07.174339Z	    },
2025-09-16T23:46:07.174487Z	    category->{
2025-09-16T23:46:07.174597Z	      name,
2025-09-16T23:46:07.174722Z	      "slug": slug.current
2025-09-16T23:46:07.174825Z	    },
2025-09-16T23:46:07.174911Z	    pricing{
2025-09-16T23:46:07.175005Z	      currency,
2025-09-16T23:46:07.175107Z	      tiers[]{
2025-09-16T23:46:07.17521Z	        quantity,
2025-09-16T23:46:07.17532Z	        price,
2025-09-16T23:46:07.17544Z	        unit
2025-09-16T23:46:07.175551Z	      },
2025-09-16T23:46:07.175651Z	      moq,
2025-09-16T23:46:07.175831Z	      leadTime,
2025-09-16T23:46:07.175935Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:07.176028Z	      "price": tiers[0].price,
2025-09-16T23:46:07.176117Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:07.176208Z	    },
2025-09-16T23:46:07.176312Z	    inventory{
2025-09-16T23:46:07.176412Z	      quantity,
2025-09-16T23:46:07.176531Z	      status,
2025-09-16T23:46:07.176637Z	      warehouse,
2025-09-16T23:46:07.17676Z	      lastUpdated,
2025-09-16T23:46:07.176857Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:07.177033Z	      "inStock": status == "in_stock",
2025-09-16T23:46:07.177265Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:07.177711Z	    },
2025-09-16T23:46:07.178058Z	    isActive,
2025-09-16T23:46:07.178188Z	    isFeatured,
2025-09-16T23:46:07.179832Z	    isNew,
2025-09-16T23:46:07.179958Z	    _createdAt,
2025-09-16T23:46:07.180071Z	    _updatedAt
2025-09-16T23:46:07.180177Z	  
2025-09-16T23:46:07.180301Z	      },
2025-09-16T23:46:07.180431Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:46:07.180549Z	    }
2025-09-16T23:46:07.180659Z	  
2025-09-16T23:46:07.225009Z	Query parameters: {
2025-09-16T23:46:07.225256Z	  limit: 8,
2025-09-16T23:46:07.225507Z	  offset: 0,
2025-09-16T23:46:07.229806Z	  category: undefined,
2025-09-16T23:46:07.229983Z	  brand: 'Electronicon',
2025-09-16T23:46:07.230092Z	  featured: undefined
2025-09-16T23:46:07.230194Z	}
2025-09-16T23:46:07.23033Z	Fetching solutions with query: 
2025-09-16T23:46:07.230463Z	    {
2025-09-16T23:46:07.230571Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:07.2307Z	        
2025-09-16T23:46:07.230805Z	    _id,
2025-09-16T23:46:07.230904Z	    title,
2025-09-16T23:46:07.231003Z	    "slug": slug.current,
2025-09-16T23:46:07.233831Z	    summary,
2025-09-16T23:46:07.234002Z	    description,
2025-09-16T23:46:07.234109Z	    coverImage,
2025-09-16T23:46:07.234207Z	    primaryBrand->{
2025-09-16T23:46:07.2343Z	      _id,
2025-09-16T23:46:07.234392Z	      name,
2025-09-16T23:46:07.23448Z	      "slug": slug.current,
2025-09-16T23:46:07.234565Z	      logo
2025-09-16T23:46:07.234661Z	    },
2025-09-16T23:46:07.235272Z	    relatedBrands[]->{
2025-09-16T23:46:07.235438Z	      _id,
2025-09-16T23:46:07.23559Z	      name,
2025-09-16T23:46:07.23575Z	      "slug": slug.current,
2025-09-16T23:46:07.235853Z	      logo
2025-09-16T23:46:07.235942Z	    },
2025-09-16T23:46:07.236074Z	    targetMarket,
2025-09-16T23:46:07.236262Z	    complexity,
2025-09-16T23:46:07.236379Z	    publishedAt,
2025-09-16T23:46:07.236488Z	    isPublished,
2025-09-16T23:46:07.236591Z	    isFeatured,
2025-09-16T23:46:07.236737Z	    viewCount,
2025-09-16T23:46:07.23685Z	    _createdAt,
2025-09-16T23:46:07.236965Z	    _updatedAt
2025-09-16T23:46:07.237075Z	  
2025-09-16T23:46:07.237178Z	      },
2025-09-16T23:46:07.237283Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:46:07.237406Z	    }
2025-09-16T23:46:07.237514Z	  
2025-09-16T23:46:07.237616Z	Query parameters: {
2025-09-16T23:46:07.237753Z	  limit: 4,
2025-09-16T23:46:07.237859Z	  offset: 0,
2025-09-16T23:46:07.237961Z	  targetMarket: undefined,
2025-09-16T23:46:07.238065Z	  brand: 'Electronicon',
2025-09-16T23:46:07.238172Z	  featured: undefined
2025-09-16T23:46:07.238275Z	}
2025-09-16T23:46:07.238381Z	Products fetch result: {
2025-09-16T23:46:07.238486Z	  totalProducts: 2,
2025-09-16T23:46:07.238584Z	  fetchedProducts: 2,
2025-09-16T23:46:07.238735Z	  firstProduct: {
2025-09-16T23:46:07.238841Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:46:07.238937Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:46:07.239029Z	    _type: 'product',
2025-09-16T23:46:07.239131Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:46:07.23925Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:46:07.239349Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:46:07.239447Z	    image: null,
2025-09-16T23:46:07.239537Z	    inventory: {
2025-09-16T23:46:07.239659Z	      inStock: true,
2025-09-16T23:46:07.239784Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:46:07.239878Z	      quantity: 0,
2025-09-16T23:46:07.239972Z	      status: 'in_stock',
2025-09-16T23:46:07.240065Z	      warehouse: null
2025-09-16T23:46:07.240156Z	    },
2025-09-16T23:46:07.240276Z	    isActive: true,
2025-09-16T23:46:07.240361Z	    isFeatured: false,
2025-09-16T23:46:07.240446Z	    isNew: false,
2025-09-16T23:46:07.240535Z	    partNumber: '99999',
2025-09-16T23:46:07.240625Z	    pricing: {
2025-09-16T23:46:07.240748Z	      currency: 'CNY',
2025-09-16T23:46:07.242838Z	      leadTime: null,
2025-09-16T23:46:07.24299Z	      moq: null,
2025-09-16T23:46:07.243114Z	      price: null,
2025-09-16T23:46:07.243219Z	      tiers: null
2025-09-16T23:46:07.243316Z	    },
2025-09-16T23:46:07.243412Z	    shortDescription: null,
2025-09-16T23:46:07.243513Z	    slug: '99999',
2025-09-16T23:46:07.243607Z	    title: '99999'
2025-09-16T23:46:07.243737Z	  }
2025-09-16T23:46:07.243839Z	}
2025-09-16T23:46:07.243929Z	Products fetch result: {
2025-09-16T23:46:07.244021Z	  totalProducts: 2,
2025-09-16T23:46:07.244122Z	  fetchedProducts: 2,
2025-09-16T23:46:07.244222Z	  firstProduct: {
2025-09-16T23:46:07.244315Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:46:07.244411Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:46:07.244492Z	    _type: 'product',
2025-09-16T23:46:07.24459Z	    _updatedAt: '2025-09-16T22:14:21d as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.244737Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.244847Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.244948Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.24505Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.245142Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.245292Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.245426Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.245551Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.245688Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.245808Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.245911Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:07.246009Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:07.246131Z	    at runNextTicks (node:internal/process/task_queues:60:5)
2025-09-16T23:46:07.246234Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:46:07.246333Z	    at process.processTimers (node:internal/timers:512:7)
2025-09-16T23:46:07.246434Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:07.246537Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:07.246645Z	}
2025-09-16T23:46:07.246769Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:07.246873Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:07.246973Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:07.247071Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:07.247232Z	}
2025-09-16T23:46:07.247371Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.247498Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.247789Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.248214Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.248358Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.248455Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.248595Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.248733Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.248824Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.248916Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.249017Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:07.249121Z	  digest: '1870762441'
2025-09-16T23:46:07.249218Z	}
2025-09-16T23:46:07.249325Z	
2025-09-16T23:46:07.249429Z	Error occurred prerendering page "/zh-TW/solutions/motodiriver". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:07.249536Z	
2025-09-16T23:46:07.249634Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.249746Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.249846Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.249944Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.250044Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.250166Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.250271Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.250366Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.250484Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.25058Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.250728Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.251215Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.251397Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.251861Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.252029Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.252433Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.252788Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.252935Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.253052Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.253161Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.253264Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.253363Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:07.253493Z	  digest: '3820195337'
2025-09-16T23:46:07.254222Z	}
2025-09-16T23:46:07.254336Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:07.254457Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:07.25457Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:07.254697Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:07.254813Z	}
2025-09-16T23:46:07.254911Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:07.255005Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:07.255115Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:07.255226Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:07.255339Z	}
2025-09-16T23:46:07.255468Z	
2025-09-16T23:46:07.255969Z	Error occurred prerendering page "/zh-TW/solutions/infineon-aurix-automotive-solution". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:07.256493Z	
2025-09-16T23:46:07.256635Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.256773Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.256881Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.256995Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.257108Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.257212Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.257308Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.257425Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.257531Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.257629Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.257762Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.257876Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.257997Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.258106Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.258213Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.258324Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.258442Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.258554Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.258662Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.258794Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.258909Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.259022Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:07.259123Z	  digest: '1870762441'
2025-09-16T23:46:07.259255Z	}
2025-09-16T23:46:07.259366Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.259503Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.259604Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.25973Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.259828Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.259917Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.26001Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.260099Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.260187Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.260279Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.260368Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:07.260489Z	  digest: '1870762441'
2025-09-16T23:46:07.261528Z	}
2025-09-16T23:46:07.261666Z	
2025-09-16T23:46:07.262046Z	Error occurred prerendering page "/zh-TW/solutions/11111". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:07.262204Z	
2025-09-16T23:46:07.262318Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.26245Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.262568Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.262956Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.263207Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.263325Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.263874Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.263994Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.264107Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.264449Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.264824Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.264978Z	
2025-09-16T23:46:07.265286Z	Error occurred prerendering page "/zh-CN/solutions/11111". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:07.265713Z	
2025-09-16T23:46:07.266043Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.2662Z	    at nN (/opt/buildhome/repo/node_moZ',
2025-09-16T23:46:07.266714Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:46:07.267063Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:46:07.26718Z	    image: null,
2025-09-16T23:46:07.267282Z	    inventory: {
2025-09-16T23:46:07.267616Z	      inStock: true,
2025-09-16T23:46:07.267976Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:46:07.268297Z	      quantity: 0,
2025-09-16T23:46:07.268437Z	      status: 'in_stock',
2025-09-16T23:46:07.268771Z	      warehouse: null
2025-09-16T23:46:07.268904Z	    },
2025-09-16T23:46:07.26902Z	    isActive: true,
2025-09-16T23:46:07.269133Z	    isFeatured: false,
2025-09-16T23:46:07.26924Z	    isNew: false,
2025-09-16T23:46:07.269351Z	    partNumber: '99999',
2025-09-16T23:46:07.269474Z	    pricing: {
2025-09-16T23:46:07.269566Z	      currency: 'CNY',
2025-09-16T23:46:07.269665Z	      leadTime: null,
2025-09-16T23:46:07.269796Z	      moq: null,
2025-09-16T23:46:07.269896Z	      price: null,
2025-09-16T23:46:07.270324Z	      tiers: null
2025-09-16T23:46:07.270468Z	    },
2025-09-16T23:46:07.270568Z	    shortDescription: null,
2025-09-16T23:46:07.27095Z	    slug: '99999',
2025-09-16T23:46:07.27128Z	    title: '99999'
2025-09-16T23:46:07.271613Z	  }
2025-09-16T23:46:07.271954Z	}
2025-09-16T23:46:07.272085Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:07.272191Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:07.272297Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:46:07.272405Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:46:07.272509Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-16T23:46:07.272617Z	Fetching products with query: 
2025-09-16T23:46:07.272734Z	    {
2025-09-16T23:46:07.272878Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:07.273069Z	        
2025-09-16T23:46:07.273202Z	    _id,
2025-09-16T23:46:07.273365Z	    _type,
2025-09-16T23:46:07.273617Z	    partNumber,
2025-09-16T23:46:07.273794Z	    "slug": slug.current,
2025-09-16T23:46:07.27398Z	    title,
2025-09-16T23:46:07.274092Z	    shortDescription,
2025-09-16T23:46:07.274196Z	    image,
2025-09-16T23:46:07.274298Z	    brand->{
2025-09-16T23:46:07.274396Z	      name,
2025-09-16T23:46:07.274494Z	      "slug": slug.current,
2025-09-16T23:46:07.274592Z	      logo
2025-09-16T23:46:07.274711Z	    },
2025-09-16T23:46:07.274838Z	    category->{
2025-09-16T23:46:07.274984Z	      name,
2025-09-16T23:46:07.275168Z	      "slug": slug.current
2025-09-16T23:46:07.275306Z	    },
2025-09-16T23:46:07.324106Z	    pricing{
2025-09-16T23:46:07.324514Z	      currency,
2025-09-16T23:46:07.324661Z	      tiers[]{
2025-09-16T23:46:07.32547Z	        quantity,
2025-09-16T23:46:07.325787Z	        price,
2025-09-16T23:46:07.325926Z	        unit
2025-09-16T23:46:07.32603Z	      },
2025-09-16T23:46:07.32613Z	      moq,
2025-09-16T23:46:07.326228Z	      leadTime,
2025-09-16T23:46:07.326542Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:07.326794Z	      "price": tiers[0].price,
2025-09-16T23:46:07.329516Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:07.330624Z	    },
2025-09-16T23:46:07.330837Z	    inventory{
2025-09-16T23:46:07.330999Z	      quantity,
2025-09-16T23:46:07.331154Z	      status,
2025-09-16T23:46:07.33132Z	      warehouse,
2025-09-16T23:46:07.331458Z	      lastUpdated,
2025-09-16T23:46:07.331577Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:07.331743Z	      "inStock": status == "in_stock",
2025-09-16T23:46:07.331896Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:07.332745Z	    },
2025-09-16T23:46:07.333096Z	    isActive,
2025-09-16T23:46:07.333205Z	    isFeatured,
2025-09-16T23:46:07.333339Z	    isNew,
2025-09-16T23:46:07.333479Z	    _createdAt,
2025-09-16T23:46:07.333617Z	    _updatedAt
2025-09-16T23:46:07.333812Z	  
2025-09-16T23:46:07.334023Z	      },
2025-09-16T23:46:07.334195Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-16T23:46:07.33439Z	    }
2025-09-16T23:46:07.334654Z	  
2025-09-16T23:46:07.33491Z	Query parameters: {
2025-09-16T23:46:07.335278Z	  limit: 8,
2025-09-16T23:46:07.335544Z	  offset: 0,
2025-09-16T23:46:07.33569Z	  category: undefined,
2025-09-16T23:46:07.33584Z	  brand: 'semikron',
2025-09-16T23:46:07.335949Z	  featured: undefined
2025-09-16T23:46:07.336055Z	}
2025-09-16T23:46:07.336159Z	Fetching solutions with query: 
2025-09-16T23:46:07.33626Z	    {
2025-09-16T23:46:07.336406Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:07.336535Z	        
2025-09-16T23:46:07.336636Z	    _id,
2025-09-16T23:46:07.336755Z	    title,
2025-09-16T23:46:07.336867Z	    "slug": slug.current,
2025-09-16T23:46:07.337064Z	    summary,
2025-09-16T23:46:07.337179Z	    description,
2025-09-16T23:46:07.337289Z	    coverImage,
2025-09-16T23:46:07.337388Z	    primaryBrand->{
2025-09-16T23:46:07.337528Z	      _id,
2025-09-16T23:46:07.337651Z	      name,
2025-09-16T23:46:07.342573Z	      "slug": slug.current,
2025-09-16T23:46:07.342815Z	      logo
2025-09-16T23:46:07.342948Z	    },
2025-09-16T23:46:07.343065Z	    relatedBrands[]->{
2025-09-16T23:46:07.343179Z	      _id,
2025-09-16T23:46:07.343293Z	      name,
2025-09-16T23:46:07.343413Z	      "slug": slug.current,
2025-09-16T23:46:07.34352Z	      logo
2025-09-16T23:46:07.343621Z	    },
2025-09-16T23:46:07.343743Z	    targetMarket,
2025-09-16T23:46:07.343856Z	    complexity,
2025-09-16T23:46:07.343967Z	    publishedAt,
2025-09-16T23:46:07.344077Z	    isPublished,
2025-09-16T23:46:07.344175Z	    isFeatured,
2025-09-16T23:46:07.344271Z	    viewCount,
2025-09-16T23:46:07.344396Z	    _createdAt,
2025-09-16T23:46:07.344502Z	    _updatedAt
2025-09-16T23:46:07.344607Z	  
2025-09-16T23:46:07.344734Z	      },
2025-09-16T23:46:07.344843Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-16T23:46:07.344967Z	    }
2025-09-16T23:46:07.345082Z	  
2025-09-16T23:46:07.345188Z	Query parameters: {
2025-09-16T23:46:07.345296Z	  limit: 4,
2025-09-16T23:46:07.345411Z	  offset: 0,
2025-09-16T23:46:07.345513Z	  targetMarket: undefined,
2025-09-16T23:46:07.345613Z	  brand: 'semikron',
2025-09-16T23:46:07.345737Z	  featured: undefined
2025-09-16T23:46:07.34584Z	}
2025-09-16T23:46:07.345943Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-16T23:46:07.346844Z	Fetching products with query: 
2025-09-16T23:46:07.346956Z	    {
2025-09-16T23:46:07.347264Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:07.347406Z	        
2025-09-16T23:46:07.34753Z	    _id,
2025-09-16T23:46:07.347644Z	    _type,
2025-09-16T23:46:07.347769Z	    partNumber,
2025-09-16T23:46:07.347869Z	    "slug": slug.current,
2025-09-16T23:46:07.347971Z	    title,
2025-09-16T23:46:07.348074Z	    shortDescription,
2025-09-16T23:46:07.348175Z	    image,
2025-09-16T23:46:07.348282Z	    brand->{
2025-09-16T23:46:07.348396Z	      name,
2025-09-16T23:46:07.348508Z	      "slug": slug.current,
2025-09-16T23:46:07.348618Z	      logo
2025-09-16T23:46:07.348742Z	    },
2025-09-16T23:46:07.348848Z	    category->{
2025-09-16T23:46:07.348948Z	      name,
2025-09-16T23:46:07.349049Z	      "slug": slug.current
2025-09-16T23:46:07.349148Z	    },
2025-09-16T23:46:07.349259Z	    pricing{
2025-09-16T23:46:07.349362Z	      currency,
2025-09-16T23:46:07.349472Z	      tiers[]{
2025-09-16T23:46:07.349578Z	        quantity,
2025-09-16T23:46:07.350027Z	        price,
2025-09-16T23:46:07.350125Z	        unit
2025-09-16T23:46:07.350218Z	      },
2025-09-16T23:46:07.352435Z	      moq,
2025-09-16T23:46:07.352652Z	      leadTime,
2025-09-16T23:46:07.352787Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:07.352889Z	      "price": tiers[0].price,
2025-09-16T23:46:07.352995Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:07.353086Z	    },
2025-09-16T23:46:07.353177Z	    inventory{
2025-09-16T23:46:07.353276Z	      quantity,
2025-09-16T23:46:07.353373Z	      status,
2025-09-16T23:46:07.353493Z	      warehouse,
2025-09-16T23:46:07.353602Z	      lastUpdated,
2025-09-16T23:46:07.354196Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:07.354358Z	      "inStock": status == "in_stock",
2025-09-16T23:46:07.354492Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:07.354604Z	    },
2025-09-16T23:46:07.354767Z	    isActive,
2025-09-16T23:46:07.354887Z	    isFeatured,
2025-09-16T23:46:07.354992Z	    isNew,
2025-09-16T23:46:07.355198Z	    _createdAt,
2025-09-16T23:46:07.35575Z	    _updatedAt
2025-09-16T23:46:07.355902Z	  
2025-09-16T23:46:07.356013Z	      },
2025-09-16T23:46:07.356115Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-16T23:46:07.356227Z	    }
2025-09-16T23:46:07.356324Z	  
2025-09-16T23:46:07.356427Z	Query parameters: {
2025-09-16T23:46:07.357773Z	  limit: 8,
2025-09-16T23:46:07.358235Z	  offset: 0,
2025-09-16T23:46:07.358364Z	  category: undefined,
2025-09-16T23:46:07.358496Z	  brand: 'semikron',
2025-09-16T23:46:07.358616Z	  featured: undefined
2025-09-16T23:46:07.358749Z	}
2025-09-16T23:46:07.358855Z	Fetching solutions with query: 
2025-09-16T23:46:07.358972Z	    {
2025-09-16T23:46:07.359086Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:07.36021Z	        
2025-09-16T23:46:07.360381Z	    _id,
2025-09-16T23:46:07.360762Z	    title,
2025-09-16T23:46:07.360888Z	    "slug": slug.current,
2025-09-16T23:46:07.360997Z	    summary,
2025-09-16T23:46:07.361108Z	    description,
2025-09-16T23:46:07.361213Z	    coverImage,
2025-09-16T23:46:07.361315Z	    primaryBrand->{
2025-09-16T23:46:07.361427Z	      _id,
2025-09-16T23:46:07.361535Z	      name,
2025-09-16T23:46:07.361637Z	      "slug": slug.current,
2025-09-16T23:46:07.36177Z	      logo
2025-09-16T23:46:07.361982Z	    },
2025-09-16T23:46:07.362149Z	    relatedBrands[]->{
2025-09-16T23:46:07.362266Z	      _id,
2025-09-16T23:46:07.362396Z	      name,
2025-09-16T23:46:07.362705Z	      "slug": slug.current,
2025-09-16T23:46:07.36284Z	      logo
2025-09-16T23:46:07.362953Z	    },
2025-09-16T23:46:07.363063Z	    targetMarket,
2025-09-16T23:46:07.363201Z	    complexity,
2025-09-16T23:46:07.363332Z	    publishedAt,
2025-09-16T23:46:07.363465Z	    isPublished,
2025-09-16T23:46:07.363578Z	    isFeatured,
2025-09-16T23:46:07.363847Z	    viewCount,
2025-09-16T23:46:07.363999Z	    _createdAt,
2025-09-16T23:46:07.364109Z	    _updatedAt
2025-09-16T23:46:07.364218Z	  
2025-09-16T23:46:07.364326Z	      },
2025-09-16T23:46:07.364439Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-16T23:46:07.364549Z	    }
2025-09-16T23:46:07.364647Z	  
2025-09-16T23:46:07.364777Z	Query parameters: {
2025-09-16T23:46:07.364889Z	  limit: 4,
2025-09-16T23:46:07.364985Z	  offset: 0,
2025-09-16T23:46:07.36508Z	  targetMarket: undefined,
2025-09-16T23:46:07.365181Z	  brand: 'semikron',
2025-09-16T23:46:07.365311Z	  featured: undefined
2025-09-16T23:46:07.365436Z	}
2025-09-16T23:46:07.365551Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:07.365659Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:07.365788Z	✅ [getBrandData] Found brand: Semikron
2025-09-16T23:46:07.365907Z	✅ [getBrandData] Found brand: Semikron
2025-09-16T23:46:07.366028Z	Products fetch result: {
2025-09-16T23:46:07.366136Z	  totalProducts: 1,
2025-09-16T23:46:07.366243Z	  fetchedProducts: 1,
2025-09-16T23:46:07.366345Z	  firstProduct: {
2025-09-16T23:46:07.366465Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-16T23:46:07.366572Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-16T23:46:07.367349Z	    _type: 'product',
2025-09-16T23:46:07.367563Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-16T23:46:07.367784Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-16T23:46:07.368393Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:07.368586Z	    image: null,
2025-09-16T23:46:07.368767Z	    inventory: {
2025-09-16T23:46:07.368925Z	      inStock: true,
2025-09-16T23:46:07.369086Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-16T23:46:07.36943Z	      quantity: 0,
2025-09-16T23:46:07.369701Z	      status: 'in_stock',
2025-09-16T23:46:07.369891Z	      warehouse: null
2025-09-16T23:46:07.370057Z	    },
2025-09-16T23:46:07.370213Z	    isActive: true,
2025-09-16T23:46:07.370367Z	    isFeatured: false,
2025-09-16T23:46:07.370524Z	    isNew: false,
2025-09-16T23:46:07.370702Z	    partNumber: 'SKKT106/16E',
2025-09-16T23:46:07.370867Z	    pricing: {
2025-09-16T23:46:07.371908Z	      currency: 'CNY',
2025-09-16T23:46:07.372056Z	      leadTime: null,
2025-09-16T23:46:07.372173Z	      moq: null,
2025-09-16T23:46:07.372282Z	      price: null,
2025-09-16T23:46:07.372393Z	      tiers: null
2025-09-16T23:46:07.372502Z	    },
2025-09-16T23:46:07.372604Z	    shortDescription: 'SKKT106/16E',
2025-09-16T23:46:07.424087Z	    slug: 'SKKT106/16E',
2025-09-16T23:46:07.424493Z	    title: 'SKKT106/16E'
2025-09-16T23:46:07.42466Z	  }
2025-09-16T23:46:07.424834Z	}
2025-09-16T23:46:07.424954Z	Products fetch result: {
2025-09-16T23:46:07.42506Z	  totalProducts: 1,
2025-09-16T23:46:07.425146Z	  fetchedProducts: 1,
2025-09-16T23:46:07.425272Z	  firstProduct: {
2025-09-16T23:46:07.425531Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-16T23:46:07.425657Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-16T23:46:07.425786Z	    _type: 'product',
2025-09-16T23:46:07.425892Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-16T23:46:07.425989Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-16T23:46:07.42609Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:07.42621Z	    image: null,
2025-09-16T23:46:07.426418Z	    inventory: {
2025-09-16T23:46:07.426555Z	      inStock: true,
2025-09-16T23:46:07.426693Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-16T23:46:07.426817Z	      quantity: 0,
2025-09-16T23:46:07.42693Z	      status: 'in_stock',
2025-09-16T23:46:07.427042Z	      warehouse: null
2025-09-16T23:46:07.427148Z	    },
2025-09-16T23:46:07.427261Z	    isActive: true,
2025-09-16T23:46:07.427391Z	    isFeatured: false,
2025-09-16T23:46:07.427503Z	    isNew: false,
2025-09-16T23:46:07.427607Z	    partNumber: 'SKKT106/16E',
2025-09-16T23:46:07.42773Z	    pricing: {
2025-09-16T23:46:07.427827Z	      currency: 'CNY',
2025-09-16T23:46:07.42793Z	      leadTime: null,
2025-09-16T23:46:07.428227Z	      moq: null,
2025-09-16T23:46:07.428405Z	      price: null,
2025-09-16T23:46:07.42855Z	      tiers: null
2025-09-16T23:46:07.428665Z	    },
2025-09-16T23:46:07.428801Z	    shortDescription: 'SKKT106/16E',
2025-09-16T23:46:07.431877Z	    slug: 'SKKT106/16E',
2025-09-16T23:46:07.432011Z	    title: 'SKKT106/16E'
2025-09-16T23:46:07.438738Z	  }
2025-09-16T23:46:07.439365Z	}
2025-09-16T23:46:07.439937Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-16T23:46:07.440087Z	Fetching products with query: 
2025-09-16T23:46:07.440242Z	    {
2025-09-16T23:46:07.440361Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:07.440497Z	        
2025-09-16T23:46:07.440594Z	    _id,
2025-09-16T23:46:07.440716Z	    _type,
2025-09-16T23:46:07.441516Z	    partNumber,
2025-09-16T23:46:07.441696Z	    "slug": slug.current,
2025-09-16T23:46:07.441872Z	    title,
2025-09-16T23:46:07.441978Z	    shortDescription,
2025-09-16T23:46:07.442927Z	    image,
2025-09-16T23:46:07.443061Z	    brand->{
2025-09-16T23:46:07.443171Z	      name,
2025-09-16T23:46:07.443321Z	      "slug": slug.current,
2025-09-16T23:46:07.443475Z	      logo
2025-09-16T23:46:07.443596Z	    },
2025-09-16T23:46:07.44373Z	    category->{
2025-09-16T23:46:07.443863Z	      name,
2025-09-16T23:46:07.443985Z	      "slug": slug.current
2025-09-16T23:46:07.444072Z	    },
2025-09-16T23:46:07.444201Z	    pricing{
2025-09-16T23:46:07.44437Z	      currency,
2025-09-16T23:46:07.44451Z	      tiers[]{
2025-09-16T23:46:07.444633Z	        quantity,
2025-09-16T23:46:07.445102Z	        price,
2025-09-16T23:46:07.44525Z	        unit
2025-09-16T23:46:07.445362Z	      },
2025-09-16T23:46:07.445466Z	      moq,
2025-09-16T23:46:07.445838Z	      leadTime,
2025-09-16T23:46:07.445991Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:07.446404Z	      "price": tiers[0].price,
2025-09-16T23:46:07.446633Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:07.446841Z	    },
2025-09-16T23:46:07.446963Z	    inventory{
2025-09-16T23:46:07.447064Z	      quantity,
2025-09-16T23:46:07.44716Z	      status,
2025-09-16T23:46:07.44729Z	      warehouse,
2025-09-16T23:46:07.447403Z	      lastUpdated,
2025-09-16T23:46:07.447542Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:07.447665Z	      "inStock": status == "in_stock",
2025-09-16T23:46:07.447838Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:07.44794Z	    },
2025-09-16T23:46:07.448038Z	    isActive,
2025-09-16T23:46:07.448133Z	    isFeatured,
2025-09-16T23:46:07.448244Z	    isNew,
2025-09-16T23:46:07.448341Z	    _createdAt,
2025-09-16T23:46:07.448479Z	    _updatedAt
2025-09-16T23:46:07.448595Z	  
2025-09-16T23:46:07.448825Z	      },
2025-09-16T23:46:07.44898Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-16T23:46:07.449446Z	    }
2025-09-16T23:46:07.449592Z	  
2025-09-16T23:46:07.449729Z	Query parameters: {
2025-09-16T23:46:07.449843Z	  limit: 8,
2025-09-16T23:46:07.449952Z	  offset: 0,
2025-09-16T23:46:07.450051Z	  category: undefined,
2025-09-16T23:46:07.450149Z	  brand: 'ixys',
2025-09-16T23:46:07.450273Z	  featured: undefined
2025-09-16T23:46:07.450447Z	}
2025-09-16T23:46:07.450573Z	Fetching solutions with query: 
2025-09-16T23:46:07.450733Z	    {
2025-09-16T23:46:07.450909Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:07.45104Z	        
2025-09-16T23:46:07.451176Z	    _id,
2025-09-16T23:46:07.45128Z	    title,
2025-09-16T23:46:07.451391Z	    "slug": slug.current,
2025-09-16T23:46:07.451508Z	    summary,
2025-09-16T23:46:07.451606Z	    description,
2025-09-16T23:46:07.452364Z	    coverImage,
2025-09-16T23:46:07.452525Z	    primaryBrand->{
2025-09-16T23:46:07.452642Z	      _id,
2025-09-16T23:46:07.452767Z	      name,
2025-09-16T23:46:07.452881Z	      "slug": slug.current,
2025-09-16T23:46:07.452991Z	      logo
2025-09-16T23:46:07.453093Z	    },
2025-09-16T23:46:07.453186Z	    relatedBrands[]->{
2025-09-16T23:46:07.453431Z	      _id,
2025-09-16T23:46:07.455697Z	      name,
2025-09-16T23:46:07.455845Z	      "slug": slug.current,
2025-09-16T23:46:07.455955Z	      logo
2025-09-16T23:46:07.456052Z	    },
2025-09-16T23:46:07.456662Z	    targetMarket,
2025-09-16T23:46:07.456825Z	    complexity,
2025-09-16T23:46:07.456935Z	    publishedAt,
2025-09-16T23:46:07.457042Z	    isPublished,
2025-09-16T23:46:07.457147Z	    isFeatured,
2025-09-16T23:46:07.457915Z	    viewCount,
2025-09-16T23:46:07.458062Z	    _createdAt,
2025-09-16T23:46:07.458201Z	    _updatedAt
2025-09-16T23:46:07.45837Z	  
2025-09-16T23:46:07.458569Z	      },
2025-09-16T23:46:07.458794Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-16T23:46:07.458938Z	    }
2025-09-16T23:46:07.459047Z	  
2025-09-16T23:46:07.459209Z	Query parameters: {
2025-09-16T23:46:07.45935Z	  limit: 4,
2025-09-16T23:46:07.459471Z	  offset: 0,
2025-09-16T23:46:07.459582Z	  targetMarket: undefined,
2025-09-16T23:46:07.459799Z	  brand: 'ixys',
2025-09-16T23:46:07.459932Z	  featured: undefined
2025-09-16T23:46:07.460039Z	}
2025-09-16T23:46:07.460221Z	✅ [getBrandData] Found brand: IXYS
2025-09-16T23:46:07.46044Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:07.460596Z	Solutions fetch result: {
2025-09-16T23:46:07.460975Z	  totalSolutions: 1,
2025-09-16T23:46:07.4612Z	  fetchedSolutions: 1,
2025-09-16T23:46:07.461378Z	  firstSolution: {
2025-09-16T23:46:07.461537Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-16T23:46:07.461717Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-16T23:46:07.463101Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-16T23:46:07.463294Z	    complexity: 'medium',
2025-09-16T23:46:07.463469Z	    coverImage: null,
2025-09-16T23:46:07.463654Z	    description: [ [Object] ],
2025-09-16T23:46:07.463816Z	    isFeatured: false,
2025-09-16T23:46:07.463958Z	    isPublished: true,
2025-09-16T23:46:07.464123Z	    primaryBrand: {
2025-09-16T23:46:07.464266Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:46:07.464402Z	      logo: null,
2025-09-16T23:46:07.464549Z	      name: 'IXYS',
2025-09-16T23:46:07.46471Z	      slug: 'ixys'
2025-09-16T23:46:07.464856Z	    },
2025-09-16T23:46:07.46497Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-16T23:46:07.4651Z	    relatedBrands: null,
2025-09-16T23:46:07.465222Z	    slug: '99999',
2025-09-16T23:46:07.465365Z	    summary: '99999',
2025-09-16T23:46:07.465613Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:07.466192Z	    title: '99999',
2025-09-16T23:46:07.466417Z	    viewCount: 0
2025-09-16T23:46:07.466718Z	  }
2025-09-16T23:46:07.466885Z	}
2025-09-16T23:46:07.466991Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-16T23:46:07.467105Z	Fetching products with query: 
2025-09-16T23:46:07.467204Z	    {
2025-09-16T23:46:07.467309Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:07.467424Z	        
2025-09-16T23:46:07.467528Z	    _id,
2025-09-16T23:46:07.467631Z	    _type,
2025-09-16T23:46:07.467756Z	    partNumber,
2025-09-16T23:46:07.467875Z	    "slug": slug.current,
2025-09-16T23:46:07.467982Z	    title,
2025-09-16T23:46:07.46812Z	    shortDescription,
2025-09-16T23:46:07.46823Z	    image,
2025-09-16T23:46:07.468335Z	    brand->{
2025-09-16T23:46:07.468451Z	      name,
2025-09-16T23:46:07.468555Z	      "slug": slug.current,
2025-09-16T23:46:07.468663Z	      logo
2025-09-16T23:46:07.468791Z	    },
2025-09-16T23:46:07.468915Z	    category->{
2025-09-16T23:46:07.469032Z	      name,
2025-09-16T23:46:07.469141Z	      "slug": slug.current
2025-09-16T23:46:07.469248Z	    },
2025-09-16T23:46:07.469351Z	    pricing{
2025-09-16T23:46:07.469483Z	      currency,
2025-09-16T23:46:07.469604Z	      tiers[]{
2025-09-16T23:46:07.469728Z	        quantity,
2025-09-16T23:46:07.469835Z	        price,
2025-09-16T23:46:07.469938Z	        unit
2025-09-16T23:46:07.47006Z	      },
2025-09-16T23:46:07.47017Z	      moq,
2025-09-16T23:46:07.470276Z	      leadTime,
2025-09-16T23:46:07.470399Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:07.470527Z	      "price": tiers[0].price,
2025-09-16T23:46:07.470636Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:07.470761Z	    },
2025-09-16T23:46:07.470869Z	    inventory{
2025-09-16T23:46:07.470978Z	      quantity,
2025-09-16T23:46:07.47108Z	      status,
2025-09-16T23:46:07.471183Z	      warehouse,
2025-09-16T23:46:07.471287Z	      lastUpdated,
2025-09-16T23:46:07.471399Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:07.471505Z	      "inStock": status == "in_stock",
2025-09-16T23:46:07.471608Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:07.471729Z	    },
2025-09-16T23:46:07.471835Z	    isActive,
2025-09-16T23:46:07.471937Z	    isFeatured,
2025-09-16T23:46:07.472053Z	    isNew,
2025-09-16T23:46:07.472198Z	    _createdAt,
2025-09-16T23:46:07.472581Z	    _updatedAt
2025-09-16T23:46:07.472756Z	  
2025-09-16T23:46:07.472877Z	      },
2025-09-16T23:46:07.47321Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-16T23:46:07.473359Z	    }
2025-09-16T23:46:07.473493Z	  
2025-09-16T23:46:07.473644Z	Query parameters: {
2025-09-16T23:46:07.474033Z	  limit: 8,
2025-09-16T23:46:07.474476Z	  offset: 0,
2025-09-16T23:46:07.474893Z	  category: undefined,
2025-09-16T23:46:07.474978Z	  brand: 'ixys',
2025-09-16T23:46:07.475037Z	  featured: undefined
2025-09-16T23:46:07.475093Z	}
2025-09-16T23:46:07.475148Z	Fetching solutions with query: 
2025-09-16T23:46:07.475205Z	    {
2025-09-16T23:46:07.47526Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:07.475317Z	        
2025-09-16T23:46:07.47537Z	    _id,
2025-09-16T23:46:07.475423Z	    title,
2025-09-16T23:46:07.475476Z	    "slug": slug.current,
2025-09-16T23:46:07.475532Z	    summary,
2025-09-16T23:46:07.475596Z	    description,
2025-09-16T23:46:07.475651Z	    coverImage,
2025-09-16T23:46:07.52397Z	    primaryBrand->{
2025-09-16T23:46:07.524201Z	      _id,
2025-09-16T23:46:07.524322Z	      name,
2025-09-16T23:46:07.524454Z	      "slug": slug.current,
2025-09-16T23:46:07.524572Z	      logo
2025-09-16T23:46:07.524699Z	    },
2025-09-16T23:46:07.524843Z	    relatedBrands[]->{
2025-09-16T23:46:07.524953Z	      _id,
2025-09-16T23:46:07.525057Z	      name,
2025-09-16T23:46:07.525159Z	      "slug": slug.current,
2025-09-16T23:46:07.525918Z	      logo
2025-09-16T23:46:07.526475Z	    },
2025-09-16T23:46:07.526605Z	    targetMarket,
2025-09-16T23:46:07.540896Z	    complexity,
2025-09-16T23:46:07.54345Z	    publishedAt,
2025-09-16T23:46:07.54397Z	    isPublished,
2025-09-16T23:46:07.544261Z	    isFeatured,
2025-09-16T23:46:07.544487Z	    viewCount,
2025-09-16T23:46:07.544893Z	    _createdAt,
2025-09-16T23:46:07.545469Z	    _updatedAt
2025-09-16T23:46:07.545828Z	  
2025-09-16T23:46:07.548485Z	      },
2025-09-16T23:46:07.549486Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-16T23:46:07.54964Z	    }
2025-09-16T23:46:07.549777Z	  
2025-09-16T23:46:07.549885Z	Query parameters: {
2025-09-16T23:46:07.54999Z	  limit: 4,
2025-09-16T23:46:07.55012Z	  offset: 0,
2025-09-16T23:46:07.550265Z	  targetMarket: undefined,
2025-09-16T23:46:07.550394Z	  brand: 'ixys',
2025-09-16T23:46:07.550504Z	  featured: undefined
2025-09-16T23:46:07.550604Z	}
2025-09-16T23:46:07.550744Z	✅ [getBrandData] Found brand: IXYS
2025-09-16T23:46:07.550856Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:07.550967Z	Solutions fetch result: {
2025-09-16T23:46:07.551101Z	  totalSolutions: 1,
2025-09-16T23:46:07.551212Z	  fetchedSolutions: 1,
2025-09-16T23:46:07.553736Z	  firstSolution: {
2025-09-16T23:46:07.553878Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-16T23:46:07.554003Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-16T23:46:07.554112Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-16T23:46:07.554213Z	    complexity: 'medium',
2025-09-16T23:46:07.554314Z	    coverImage: null,
2025-09-16T23:46:07.554415Z	    description: [ [Object] ],
2025-09-16T23:46:07.554513Z	    isFeatured: false,
2025-09-16T23:46:07.55461Z	    isPublished: true,
2025-09-16T23:46:07.554728Z	    primaryBrand: {
2025-09-16T23:46:07.554821Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:46:07.554916Z	      logo: null,
2025-09-16T23:46:07.555011Z	      name: 'IXYS',
2025-09-16T23:46:07.555105Z	      slug: 'ixys'
2025-09-16T23:46:07.555195Z	    },
2025-09-16T23:46:07.555294Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-16T23:46:07.555386Z	    relatedBrands: null,
2025-09-16T23:46:07.555476Z	    slug: '99999',
2025-09-16T23:46:07.55557Z	    summary: '99999',
2025-09-16T23:46:07.55567Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:07.555786Z	    title: '99999',
2025-09-16T23:46:07.555887Z	    viewCount: 0
2025-09-16T23:46:07.55599Z	  }
2025-09-16T23:46:07.556092Z	}
2025-09-16T23:46:07.556195Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:46:07.556352Z	Fetching products with query: 
2025-09-16T23:46:07.55648Z	    {
2025-09-16T23:46:07.556607Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:07.556747Z	        
2025-09-16T23:46:07.556847Z	    _id,
2025-09-16T23:46:07.556943Z	    _type,
2025-09-16T23:46:07.557031Z	    partNumber,
2025-09-16T23:46:07.557118Z	    "slug": slug.current,
2025-09-16T23:46:07.557204Z	    title,
2025-09-16T23:46:07.557291Z	    shortDescription,
2025-09-16T23:46:07.55738Z	    image,
2025-09-16T23:46:07.557468Z	    brand->{
2025-09-16T23:46:07.557555Z	      name,
2025-09-16T23:46:07.557663Z	      "slug": slug.current,
2025-09-16T23:46:07.557779Z	      logo
2025-09-16T23:46:07.557878Z	    },
2025-09-16T23:46:07.557968Z	    category->{
2025-09-16T23:46:07.55807Z	      name,
2025-09-16T23:46:07.558251Z	      "slug": slug.current
2025-09-16T23:46:07.55839Z	    },
2025-09-16T23:46:07.558505Z	    pricing{
2025-09-16T23:46:07.558642Z	      currency,
2025-09-16T23:46:07.558784Z	      tiers[]{
2025-09-16T23:46:07.559117Z	        quantity,
2025-09-16T23:46:07.559343Z	        price,
2025-09-16T23:46:07.559586Z	        unit
2025-09-16T23:46:07.559941Z	      },
2025-09-16T23:46:07.560027Z	      moq,
2025-09-16T23:46:07.560087Z	      leadTime,
2025-09-16T23:46:07.560145Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:07.560204Z	      "price": tiers[0].price,
2025-09-16T23:46:07.56026Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:07.560325Z	    },
2025-09-16T23:46:07.560414Z	    inventory{
2025-09-16T23:46:07.56047Z	      quantity,
2025-09-16T23:46:07.560524Z	      status,
2025-09-16T23:46:07.560587Z	      warehouse,
2025-09-16T23:46:07.560644Z	      lastUpdated,
2025-09-16T23:46:07.560746Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:07.560852Z	      "inStock": status == "in_stock",
2025-09-16T23:46:07.560945Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:07.561039Z	    },
2025-09-16T23:46:07.561138Z	    isActive,
2025-09-16T23:46:07.561226Z	    isFeatured,
2025-09-16T23:46:07.561311Z	    isNew,
2025-09-16T23:46:07.561406Z	    _createdAt,
2025-09-16T23:46:07.561497Z	    _updatedAt
2025-09-16T23:46:07.561585Z	  
2025-09-16T23:46:07.561671Z	      },
2025-09-16T23:46:07.561785Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:46:07.562116Z	    }
2025-09-16T23:46:07.563143Z	  
2025-09-16T23:46:07.564423Z	Query parameters: {
2025-09-16T23:46:07.565189Z	  limit: 8,
2025-09-16T23:46:07.565426Z	  offset: 0,
2025-09-16T23:46:07.565605Z	  category: undefined,
2025-09-16T23:46:07.565804Z	  brand: 'qualcomm',
2025-09-16T23:46:07.565969Z	  featured: undefined
2025-09-16T23:46:07.566122Z	}
2025-09-16T23:46:07.5663Z	Fetching solutions with query: 
2025-09-16T23:46:07.566545Z	    {
2025-09-16T23:46:07.568361Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:07.569404Z	        
2025-09-16T23:46:07.569994Z	    _id,
2025-09-16T23:46:07.57079Z	    title,
2025-09-16T23:46:07.571268Z	    "slug": slug.current,
2025-09-16T23:46:07.571783Z	    summary,
2025-09-16T23:46:07.572262Z	    description,
2025-09-16T23:46:07.574181Z	    coverImage,
2025-09-16T23:46:07.574305Z	    primaryBrand->{
2025-09-16T23:46:07.57442Z	      _id,
2025-09-16T23:46:07.574518Z	      name,
2025-09-16T23:46:07.574609Z	      "slug": slug.current,
2025-09-16T23:46:07.574741Z	      logo
2025-09-16T23:46:07.574836Z	    },
2025-09-16T23:46:07.574949Z	    relatedBrands[]->{
2025-09-16T23:46:07.57505Z	      _id,
2025-09-16T23:46:07.576188Z	      name,
2025-09-16T23:46:07.576404Z	      "slug": slug.current,
2025-09-16T23:46:07.580799Z	      logo
2025-09-16T23:46:07.58098Z	    },
2025-09-16T23:46:07.581093Z	    targetMarket,
2025-09-16T23:46:07.581212Z	    complexity,
2025-09-16T23:46:07.581315Z	    publishedAt,
2025-09-16T23:46:07.581431Z	    isPublished,
2025-09-16T23:46:07.581551Z	    isFeatured,
2025-09-16T23:46:07.581655Z	    viewCount,
2025-09-16T23:46:07.581794Z	    _createdAt,
2025-09-16T23:46:07.581906Z	    _updatedAt
2025-09-16T23:46:07.582025Z	  
2025-09-16T23:46:07.582124Z	      },
2025-09-16T23:46:07.582228Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:46:07.582338Z	    }
2025-09-16T23:46:07.582474Z	  
2025-09-16T23:46:07.582593Z	Query parameters: {
2025-09-16T23:46:07.582723Z	  limit: 4,
2025-09-16T23:46:07.582838Z	  offset: 0,
2025-09-16T23:46:07.582939Z	  targetMarket: undefined,
2025-09-16T23:46:07.583039Z	  brand: 'qualcomm',
2025-09-16T23:46:07.583141Z	  featured: undefined
2025-09-16T23:46:07.583243Z	}
2025-09-16T23:46:07.583355Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:46:07.583476Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:07.583588Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:07.583726Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:46:07.584467Z	Fetching products with query: 
2025-09-16T23:46:07.584587Z	    {
2025-09-16T23:46:07.58532Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:07.585472Z	        
2025-09-16T23:46:07.585577Z	    _id,
2025-09-16T23:46:07.586487Z	    _type,
2025-09-16T23:46:07.586667Z	    partNumber,
2025-09-16T23:46:07.586815Z	    "slug": slug.current,
2025-09-16T23:46:07.586926Z	    title,
2025-09-16T23:46:07.587037Z	    shortDescription,
2025-09-16T23:46:07.587138Z	    image,
2025-09-16T23:46:07.58724Z	    brand->{
2025-09-16T23:46:07.587337Z	      name,
2025-09-16T23:46:07.58745Z	      "slug": slug.current,
2025-09-16T23:46:07.587553Z	      logo
2025-09-16T23:46:07.58769Z	    },
2025-09-16T23:46:07.587803Z	    category->{
2025-09-16T23:46:07.587908Z	      name,
2025-09-16T23:46:07.588017Z	      "slug": slug.current
2025-09-16T23:46:07.588112Z	    },
2025-09-16T23:46:07.588206Z	    pricing{
2025-09-16T23:46:07.588308Z	      currency,
2025-09-16T23:46:07.62461Z	      tiers[]{
2025-09-16T23:46:07.624851Z	        quantity,
2025-09-16T23:46:07.624986Z	        price,
2025-09-16T23:46:07.625098Z	        unit
2025-09-16T23:46:07.625205Z	      },
2025-09-16T23:46:07.625311Z	      moq,
2025-09-16T23:46:07.625405Z	      leadTime,
2025-09-16T23:46:07.625508Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:07.625609Z	      "price": tiers[0].price,
2025-09-16T23:46:07.625743Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:07.62585Z	    },
2025-09-16T23:46:07.625951Z	    inventory{
2025-09-16T23:46:07.626047Z	      quantity,
2025-09-16T23:46:07.626139Z	      status,
2025-09-16T23:46:07.626236Z	      warehouse,
2025-09-16T23:46:07.626336Z	      lastUpdated,
2025-09-16T23:46:07.627078Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:07.627226Z	      "inStock": status == "in_stock",
2025-09-16T23:46:07.627334Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:07.627971Z	    },
2025-09-16T23:46:07.641315Z	    isActive,
2025-09-16T23:46:07.64154Z	    isFeatured,
2025-09-16T23:46:07.641692Z	    isNew,
2025-09-16T23:46:07.641895Z	    _createdAt,
2025-09-16T23:46:07.642016Z	    _updatedAt
2025-09-16T23:46:07.642112Z	  
2025-09-16T23:46:07.64221Z	      },
2025-09-16T23:46:07.642297Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:46:07.642391Z	    }
2025-09-16T23:46:07.642505Z	  
2025-09-16T23:46:07.642636Z	Query parameters: {
2025-09-16T23:46:07.642762Z	  limit: 8,
2025-09-16T23:46:07.642871Z	  offset: 0,
2025-09-16T23:46:07.643047Z	  category: undefined,
2025-09-16T23:46:07.643144Z	  brand: 'qualcomm',
2025-09-16T23:46:07.643233Z	  featured: undefined
2025-09-16T23:46:07.643325Z	}
2025-09-16T23:46:07.643411Z	Fetching solutions with query: 
2025-09-16T23:46:07.643493Z	    {
2025-09-16T23:46:07.643584Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:07.643696Z	        
2025-09-16T23:46:07.643782Z	    _id,
2025-09-16T23:46:07.64386Z	    title,
2025-09-16T23:46:07.643938Z	    "slug": slug.current,
2025-09-16T23:46:07.644015Z	    summary,
2025-09-16T23:46:07.64409Z	    description,
2025-09-16T23:46:07.644169Z	    coverImage,
2025-09-16T23:46:07.644268Z	    primaryBrand->{
2025-09-16T23:46:07.644355Z	      _id,
2025-09-16T23:46:07.644446Z	      name,
2025-09-16T23:46:07.644535Z	      "slug": slug.current,
2025-09-16T23:46:07.644635Z	      logo
2025-09-16T23:46:07.645203Z	    },
2025-09-16T23:46:07.645333Z	    relatedBrands[]->{
2025-09-16T23:46:07.645423Z	      _id,
2025-09-16T23:46:07.645639Z	      name,
2025-09-16T23:46:07.645796Z	      "slug": slug.current,
2025-09-16T23:46:07.645948Z	      logo
2025-09-16T23:46:07.646058Z	    },
2025-09-16T23:46:07.646199Z	    targetMarket,
2025-09-16T23:46:07.646361Z	    complexity,
2025-09-16T23:46:07.646509Z	    publishedAt,
2025-09-16T23:46:07.646647Z	    isPublished,
2025-09-16T23:46:07.647096Z	    isFeatured,
2025-09-16T23:46:07.647374Z	    viewCount,
2025-09-16T23:46:07.647514Z	    _createdAt,
2025-09-16T23:46:07.647626Z	    _updatedAt
2025-09-16T23:46:07.647738Z	  
2025-09-16T23:46:07.647838Z	      },
2025-09-16T23:46:07.647944Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:46:07.648161Z	    }
2025-09-16T23:46:07.64844Z	  
2025-09-16T23:46:07.648942Z	Query parameters: {
2025-09-16T23:46:07.649364Z	  limit: 4,
2025-09-16T23:46:07.650953Z	  offset: 0,
2025-09-16T23:46:07.651143Z	  targetMarket: undefined,
2025-09-16T23:46:07.651286Z	  brand: 'qualcomm',
2025-09-16T23:46:07.651397Z	  featured: undefined
2025-09-16T23:46:07.6515Z	}
2025-09-16T23:46:07.651598Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:46:07.651738Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:07.651843Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:07.651957Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:46:07.652068Z	Fetching products with query: 
2025-09-16T23:46:07.652182Z	    {
2025-09-16T23:46:07.652644Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:07.653101Z	        
2025-09-16T23:46:07.653235Z	    _id,
2025-09-16T23:46:07.653744Z	    _type,
2025-09-16T23:46:07.654155Z	    partNumber,
2025-09-16T23:46:07.654561Z	    "slug": slug.current,
2025-09-16T23:46:07.654912Z	    title,
2025-09-16T23:46:07.656503Z	    shortDescription,
2025-09-16T23:46:07.656643Z	    image,
2025-09-16T23:46:07.656781Z	    brand->{
2025-09-16T23:46:07.65689Z	      name,
2025-09-16T23:46:07.656997Z	      "slug": slug.current,
2025-09-16T23:46:07.657102Z	      logo
2025-09-16T23:46:07.657208Z	    },
2025-09-16T23:46:07.65731Z	    category->{
2025-09-16T23:46:07.657427Z	      name,
2025-09-16T23:46:07.657529Z	      "slug": slug.current
2025-09-16T23:46:07.657634Z	    },
2025-09-16T23:46:07.657768Z	    pricing{
2025-09-16T23:46:07.657879Z	      currency,
2025-09-16T23:46:07.657985Z	      tiers[]{
2025-09-16T23:46:07.658105Z	        quantity,
2025-09-16T23:46:07.658206Z	        price,
2025-09-16T23:46:07.658308Z	        unit
2025-09-16T23:46:07.658435Z	      },
2025-09-16T23:46:07.658555Z	      moq,
2025-09-16T23:46:07.658664Z	      leadTime,
2025-09-16T23:46:07.658796Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:07.658917Z	      "price": tiers[0].price,
2025-09-16T23:46:07.659042Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:07.659154Z	    },
2025-09-16T23:46:07.659307Z	    inventory{
2025-09-16T23:46:07.659434Z	      quantity,
2025-09-16T23:46:07.659547Z	      status,
2025-09-16T23:46:07.659655Z	      warehouse,
2025-09-16T23:46:07.659787Z	      lastUpdated,
2025-09-16T23:46:07.659889Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:07.659998Z	      "inStock": status == "in_stock",
2025-09-16T23:46:07.660099Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:07.660224Z	    },
2025-09-16T23:46:07.660332Z	    isActive,
2025-09-16T23:46:07.660453Z	    isFeatured,
2025-09-16T23:46:07.660565Z	    isNew,
2025-09-16T23:46:07.669915Z	    _createdAt,
2025-09-16T23:46:07.67036Z	    _updatedAt
2025-09-16T23:46:07.670661Z	  
2025-09-16T23:46:07.670852Z	      },
2025-09-16T23:46:07.670975Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:46:07.671103Z	    }
2025-09-16T23:46:07.671208Z	  
2025-09-16T23:46:07.671305Z	Query parameters: {
2025-09-16T23:46:07.671404Z	  limit: 8,
2025-09-16T23:46:07.671508Z	  offset: 0,
2025-09-16T23:46:07.671634Z	  category: undefined,
2025-09-16T23:46:07.671778Z	  brand: 'cree',
2025-09-16T23:46:07.671895Z	  featured: undefined
2025-09-16T23:46:07.672014Z	}
2025-09-16T23:46:07.672116Z	Fetching solutions with query: 
2025-09-16T23:46:07.672209Z	    {
2025-09-16T23:46:07.6723Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:07.672399Z	        
2025-09-16T23:46:07.672493Z	    _id,
2025-09-16T23:46:07.672587Z	    title,
2025-09-16T23:46:07.672704Z	    "slug": slug.current,
2025-09-16T23:46:07.672815Z	    summary,
2025-09-16T23:46:07.672908Z	    description,
2025-09-16T23:46:07.673008Z	    coverImage,
2025-09-16T23:46:07.673101Z	    primaryBrand->{
2025-09-16T23:46:07.673189Z	      _id,
2025-09-16T23:46:07.67328Z	      name,
2025-09-16T23:46:07.673387Z	      "slug": slug.curdules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.673496Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.673607Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.673846Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.674049Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.674176Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.674273Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.67436Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.674452Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.674835Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.674974Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.675113Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.675225Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.675414Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.675542Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.675656Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.676087Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.676489Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.676653Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.677011Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.67715Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:07.67759Z	  digest: '1870762441'
2025-09-16T23:46:07.677748Z	}
2025-09-16T23:46:07.677866Z	
2025-09-16T23:46:07.677969Z	Error occurred prerendering page "/en/solutions/11111". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:07.678069Z	
2025-09-16T23:46:07.678166Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.678266Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.678412Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.678522Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.678623Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.678744Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.678851Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.678952Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.679047Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.679143Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.679259Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.679361Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.679474Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.679617Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.67975Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.679858Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.679953Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.680999Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.68116Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.681269Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.681363Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.681465Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:07.681556Z	  digest: '1870762441'
2025-09-16T23:46:07.681651Z	}
2025-09-16T23:46:07.68178Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.681895Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.682Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.682115Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.682215Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.682317Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.723991Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.724186Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.724312Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.72446Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.724583Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:07.724774Z	  digest: '1870762441'
2025-09-16T23:46:07.724914Z	}
2025-09-16T23:46:07.725163Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.725348Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.725668Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.725951Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.72611Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.726218Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.72631Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.726396Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.726481Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.726587Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.726709Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:07.726823Z	  digest: '1870762441'
2025-09-16T23:46:07.726925Z	}
2025-09-16T23:46:07.727032Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:07.727146Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:07.727369Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:07.727516Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:07.727632Z	}
2025-09-16T23:46:07.727755Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:07.727861Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:07.727961Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:07.728053Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:07.728141Z	}
2025-09-16T23:46:07.728231Z	
2025-09-16T23:46:07.728317Z	Error occurred prerendering page "/en/solutions/99999". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:07.72842Z	
2025-09-16T23:46:07.728517Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.728618Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.728824Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.728964Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.729207Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.72941Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.729552Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.729988Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.730143Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.730304Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.730597Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.730865Z	
2025-09-16T23:46:07.731062Z	Error occurred prerendering page "/en/solutions/concrol". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:07.731263Z	
2025-09-16T23:46:07.73151Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.731637Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.731805Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.732062Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.732172Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.732278Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.732382Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.732479Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.732576Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.732707Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.732826Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.732933Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.733034Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.73313Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.733226Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.733341Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.733804Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.734058Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.73433Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.734557Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.734739Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.735001Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:07.735253Z	  digest: '1870762441'
2025-09-16T23:46:07.736652Z	}
2025-09-16T23:46:07.736978Z	
2025-09-16T23:46:07.737248Z	Error occurred prerendering page "/en/solutions/charger". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:07.737494Z	
2025-09-16T23:46:07.737702Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.737882Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.738054Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.738217Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.738379Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.738566Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.739354Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.73978Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.739918Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.740038Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.740157Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.740265Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.74037Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.740472Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.740569Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.740696Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.740813Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.740922Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.741031Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.741135Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.74125Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.741406Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:07.741522Z	  digest: '3820195337'
2025-09-16T23:46:07.741627Z	}
2025-09-16T23:46:07.741766Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.743028Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.743297Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.74372Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.743879Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.744Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.744259Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.744403Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.744639Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.744923Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.745164Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:07.745401Z	  digest: '1870762441'
2025-09-16T23:46:07.74564Z	}
2025-09-16T23:46:07.745897Z	
2025-09-16T23:46:07.74614Z	Error occurrerent,
2025-09-16T23:46:07.746266Z	      logo
2025-09-16T23:46:07.74662Z	    },
2025-09-16T23:46:07.746777Z	    relatedBrands[]->{
2025-09-16T23:46:07.746891Z	      _id,
2025-09-16T23:46:07.747008Z	      name,
2025-09-16T23:46:07.747108Z	      "slug": slug.current,
2025-09-16T23:46:07.747216Z	      logo
2025-09-16T23:46:07.74732Z	    },
2025-09-16T23:46:07.747555Z	    targetMarket,
2025-09-16T23:46:07.747896Z	    complexity,
2025-09-16T23:46:07.748043Z	    publishedAt,
2025-09-16T23:46:07.748163Z	    isPublished,
2025-09-16T23:46:07.748272Z	    isFeatured,
2025-09-16T23:46:07.748604Z	    viewCount,
2025-09-16T23:46:07.748764Z	    _createdAt,
2025-09-16T23:46:07.748919Z	    _updatedAt
2025-09-16T23:46:07.74904Z	  
2025-09-16T23:46:07.749162Z	      },
2025-09-16T23:46:07.749307Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:46:07.749488Z	    }
2025-09-16T23:46:07.749644Z	  
2025-09-16T23:46:07.749797Z	Query parameters: {
2025-09-16T23:46:07.749912Z	  limit: 4,
2025-09-16T23:46:07.750017Z	  offset: 0,
2025-09-16T23:46:07.75014Z	  targetMarket: undefined,
2025-09-16T23:46:07.750242Z	  brand: 'cree',
2025-09-16T23:46:07.750346Z	  featured: undefined
2025-09-16T23:46:07.750463Z	}
2025-09-16T23:46:07.75057Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:46:07.750691Z	Products fetch result: {
2025-09-16T23:46:07.750803Z	  totalProducts: 4,
2025-09-16T23:46:07.750903Z	  fetchedProducts: 4,
2025-09-16T23:46:07.751005Z	  firstProduct: {
2025-09-16T23:46:07.751105Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:46:07.751207Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:46:07.751306Z	    _type: 'product',
2025-09-16T23:46:07.751422Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:46:07.751528Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:46:07.751636Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:07.751834Z	    image: null,
2025-09-16T23:46:07.751958Z	    inventory: {
2025-09-16T23:46:07.752068Z	      inStock: true,
2025-09-16T23:46:07.752174Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:46:07.752278Z	      quantity: 0,
2025-09-16T23:46:07.752387Z	      status: 'in_stock',
2025-09-16T23:46:07.752497Z	      warehouse: null
2025-09-16T23:46:07.752603Z	    },
2025-09-16T23:46:07.752734Z	    isActive: true,
2025-09-16T23:46:07.752849Z	    isFeatured: false,
2025-09-16T23:46:07.753037Z	    isNew: false,
2025-09-16T23:46:07.753146Z	    partNumber: '11111',
2025-09-16T23:46:07.753244Z	    pricing: {
2025-09-16T23:46:07.75334Z	      currency: 'CNY',
2025-09-16T23:46:07.753453Z	      leadTime: null,
2025-09-16T23:46:07.753551Z	      moq: null,
2025-09-16T23:46:07.753646Z	      price: null,
2025-09-16T23:46:07.753759Z	      tiers: null
2025-09-16T23:46:07.75385Z	    },
2025-09-16T23:46:07.753941Z	    shortDescription: '11111',
2025-09-16T23:46:07.754032Z	    slug: 'sic mosfet',
2025-09-16T23:46:07.754123Z	    title: '111111'
2025-09-16T23:46:07.754217Z	  }
2025-09-16T23:46:07.754308Z	}
2025-09-16T23:46:07.754419Z	Solutions fetch result: {
2025-09-16T23:46:07.754522Z	  totalSolutions: 6,
2025-09-16T23:46:07.754615Z	  fetchedSolutions: 4,
2025-09-16T23:46:07.754733Z	  firstSolution: {
2025-09-16T23:46:07.754835Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:46:07.754937Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:46:07.755035Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:46:07.75513Z	    complexity: 'medium',
2025-09-16T23:46:07.755223Z	    coverImage: null,
2025-09-16T23:46:07.755319Z	    description: [ [Object] ],
2025-09-16T23:46:07.755435Z	    isFeatured: false,
2025-09-16T23:46:07.755522Z	    isPublished: true,
2025-09-16T23:46:07.755616Z	    primaryBrand: {
2025-09-16T23:46:07.755726Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:46:07.755821Z	      logo: null,
2025-09-16T23:46:07.755915Z	      name: 'CREE',
2025-09-16T23:46:07.756026Z	      slug: 'cree'
2025-09-16T23:46:07.756117Z	    },
2025-09-16T23:46:07.756205Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:46:07.756309Z	    relatedBrands: null,
2025-09-16T23:46:07.756425Z	    slug: '11111',
2025-09-16T23:46:07.756528Z	    summary: '11111',
2025-09-16T23:46:07.756621Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:07.765331Z	    title: '11111',
2025-09-16T23:46:07.765471Z	    viewCount: 0
2025-09-16T23:46:07.765535Z	  }
2025-09-16T23:46:07.765591Z	}
2025-09-16T23:46:07.765654Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:46:07.765751Z	Fetching products with query: 
2025-09-16T23:46:07.765811Z	    {
2025-09-16T23:46:07.765868Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:07.765925Z	        
2025-09-16T23:46:07.765979Z	    _id,
2025-09-16T23:46:07.766034Z	    _type,
2025-09-16T23:46:07.766087Z	    partNumber,
2025-09-16T23:46:07.766446Z	    "slug": slug.current,
2025-09-16T23:46:07.766561Z	    title,
2025-09-16T23:46:07.766664Z	    shortDescription,
2025-09-16T23:46:07.766774Z	    image,
2025-09-16T23:46:07.768051Z	    brand->{
2025-09-16T23:46:07.768269Z	      name,
2025-09-16T23:46:07.768443Z	      "slug": slug.current,
2025-09-16T23:46:07.76889Z	      logo
2025-09-16T23:46:07.769035Z	    },
2025-09-16T23:46:07.769142Z	    category->{
2025-09-16T23:46:07.769242Z	      name,
2025-09-16T23:46:07.769994Z	      "slug": slug.current
2025-09-16T23:46:07.77012Z	    },
2025-09-16T23:46:07.770185Z	    pricing{
2025-09-16T23:46:07.770248Z	      currency,
2025-09-16T23:46:07.770303Z	      tiers[]{
2025-09-16T23:46:07.770654Z	        quantity,
2025-09-16T23:46:07.771155Z	        price,
2025-09-16T23:46:07.771297Z	        unit
2025-09-16T23:46:07.771413Z	      },
2025-09-16T23:46:07.771524Z	      moq,
2025-09-16T23:46:07.771641Z	      leadTime,
2025-09-16T23:46:07.771804Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:07.77194Z	      "price": tiers[0].price,
2025-09-16T23:46:07.772046Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:07.77215Z	    },
2025-09-16T23:46:07.7723Z	    inventory{
2025-09-16T23:46:07.772438Z	      quantity,
2025-09-16T23:46:07.772564Z	      status,
2025-09-16T23:46:07.772716Z	      warehouse,
2025-09-16T23:46:07.772827Z	      lastUpdated,
2025-09-16T23:46:07.772923Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:07.77302Z	      "inStock": status == "in_stock",
2025-09-16T23:46:07.773309Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:07.773659Z	    },
2025-09-16T23:46:07.773837Z	    isActive,
2025-09-16T23:46:07.773958Z	    isFeatured,
2025-09-16T23:46:07.774111Z	    isNew,
2025-09-16T23:46:07.774518Z	    _createdAt,
2025-09-16T23:46:07.774668Z	    _updatedAt
2025-09-16T23:46:07.774823Z	  
2025-09-16T23:46:07.77688Z	      },
2025-09-16T23:46:07.776986Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:46:07.777105Z	    }
2025-09-16T23:46:07.777209Z	  
2025-09-16T23:46:07.777311Z	Query parameters: {
2025-09-16T23:46:07.777472Z	  limit: 8,
2025-09-16T23:46:07.77759Z	  offset: 0,
2025-09-16T23:46:07.777737Z	  category: undefined,
2025-09-16T23:46:07.777804Z	  brand: 'cree',
2025-09-16T23:46:07.77787Z	  featured: undefined
2025-09-16T23:46:07.777928Z	}
2025-09-16T23:46:07.777981Z	Fetching solutions with query: 
2025-09-16T23:46:07.778034Z	    {
2025-09-16T23:46:07.778088Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:07.778144Z	        
2025-09-16T23:46:07.778202Z	    _id,
2025-09-16T23:46:07.778257Z	    title,
2025-09-16T23:46:07.77831Z	    "slug": slug.current,
2025-09-16T23:46:07.778362Z	    summary,
2025-09-16T23:46:07.778464Z	    description,
2025-09-16T23:46:07.77853Z	    coverImage,
2025-09-16T23:46:07.778584Z	    primaryBrand->{
2025-09-16T23:46:07.77865Z	      _id,
2025-09-16T23:46:07.778946Z	      name,
2025-09-16T23:46:07.779048Z	      "slug": slug.current,
2025-09-16T23:46:07.779264Z	      logo
2025-09-16T23:46:07.783773Z	    },
2025-09-16T23:46:07.783858Z	    relatedBrands[]->{
2025-09-16T23:46:07.783917Z	      _id,
2025-09-16T23:46:07.783971Z	      name,
2025-09-16T23:46:07.784024Z	      "slug": slug.current,
2025-09-16T23:46:07.784127Z	      logo
2025-09-16T23:46:07.784184Z	    },
2025-09-16T23:46:07.784237Z	    targetMarket,
2025-09-16T23:46:07.784305Z	    complexity,
2025-09-16T23:46:07.784359Z	    publishedAt,
2025-09-16T23:46:07.784411Z	    isPublished,
2025-09-16T23:46:07.784468Z	    isFeatured,
2025-09-16T23:46:07.784527Z	    viewCount,
2025-09-16T23:46:07.784581Z	    _createdAt,
2025-09-16T23:46:07.784635Z	    _updatedAt
2025-09-16T23:46:07.784728Z	  
2025-09-16T23:46:07.784792Z	      },
2025-09-16T23:46:07.784859Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:46:07.784915Z	    }
2025-09-16T23:46:07.784968Z	  
2025-09-16T23:46:07.785024Z	Query parameters: {
2025-09-16T23:46:07.785077Z	  limit: 4,
2025-09-16T23:46:07.78513Z	  offset: 0,
2025-09-16T23:46:07.785181Z	  targetMarket: undefined,
2025-09-16T23:46:07.785233Z	  brand: 'cree',
2025-09-16T23:46:07.785284Z	  featured: undefined
2025-09-16T23:46:07.785344Z	}
2025-09-16T23:46:07.785414Z	d prerendering page "/en/solutions/supplysolution". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:07.78547Z	
2025-09-16T23:46:07.785526Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.785585Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.785639Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.785714Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.78577Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.785823Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.785881Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.785934Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.785987Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.786041Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.786094Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.786146Z	
2025-09-16T23:46:07.786199Z	Error occurred prerendering page "/en/solutions/infineon-aurix-automotive-solution". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:07.786252Z	
2025-09-16T23:46:07.786304Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.786359Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.786412Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.786468Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.786521Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.786573Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.786625Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.82382Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.824155Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.824323Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.824496Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.824625Z	
2025-09-16T23:46:07.824921Z	Error occurred prerendering page "/en/solutions/motodiriver". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:07.825123Z	
2025-09-16T23:46:07.825256Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.82542Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.825641Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.825829Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.826005Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.826117Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.826227Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.826347Z	    at nNProducts fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:07.826489Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:07.826652Z	 (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.826788Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.826906Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.827041Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.827202Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:07.827368Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:07.827515Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:07.827629Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:07.827804Z	}
2025-09-16T23:46:07.827964Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:07.828121Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:07.828241Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:07.828346Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:07.828459Z	}
2025-09-16T23:46:07.82857Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.828691Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.828802Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.828913Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.829074Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.829194Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.829301Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.829466Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.829671Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.830872Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.830995Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:07.831101Z	  digest: '1870762441'
2025-09-16T23:46:07.831209Z	}
2025-09-16T23:46:07.831317Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.831426Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.831535Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.831652Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.831784Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.831895Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.831997Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.832112Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.832217Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.832322Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.832432Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:07.832536Z	  digest: '1870762441'
2025-09-16T23:46:07.832643Z	}
2025-09-16T23:46:07.832757Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.832864Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.833144Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compil🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-16T23:46:07.833256Z	Fetching products with query: 
2025-09-16T23:46:07.833367Z	    {
2025-09-16T23:46:07.834043Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:07.83433Z	        
2025-09-16T23:46:07.834594Z	    _id,
2025-09-16T23:46:07.834975Z	    _type,
2025-09-16T23:46:07.835385Z	    partNumber,
2025-09-16T23:46:07.835803Z	    "slug": slug.current,
2025-09-16T23:46:07.836182Z	    title,
2025-09-16T23:46:07.836567Z	    shortDescription,
2025-09-16T23:46:07.83695Z	    image,
2025-09-16T23:46:07.837339Z	    brand->{
2025-09-16T23:46:07.837724Z	      name,
2025-09-16T23:46:07.837976Z	      "slug": slug.current,
2025-09-16T23:46:07.838223Z	      logo
2025-09-16T23:46:07.838458Z	    },
2025-09-16T23:46:07.838589Z	    category->{
2025-09-16T23:46:07.838942Z	      name,
2025-09-16T23:46:07.839194Z	      "slug": slug.current
2025-09-16T23:46:07.839586Z	    },
2025-09-16T23:46:07.839859Z	    pricing{
2025-09-16T23:46:07.840226Z	      currency,
2025-09-16T23:46:07.840487Z	      tiers[]{
2025-09-16T23:46:07.840875Z	        quantity,
2025-09-16T23:46:07.841145Z	        price,
2025-09-16T23:46:07.841519Z	        unit
2025-09-16T23:46:07.841793Z	      },
2025-09-16T23:46:07.842156Z	      moq,
2025-09-16T23:46:07.842416Z	      leadTime,
2025-09-16T23:46:07.842797Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:07.843159Z	      "price": tiers[0].price,
2025-09-16T23:46:07.843302Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:07.843808Z	    },
2025-09-16T23:46:07.844181Z	    inventory{
2025-09-16T23:46:07.844518Z	      quantity,
2025-09-16T23:46:07.844771Z	      status,
2025-09-16T23:46:07.844996Z	      warehouse,
2025-09-16T23:46:07.845256Z	      lastUpdated,
2025-09-16T23:46:07.845461Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:07.845608Z	      "inStock": status == "in_stock",
2025-09-16T23:46:07.845774Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:07.845921Z	    },
2025-09-16T23:46:07.846071Z	    isActive,
2025-09-16T23:46:07.846225Z	    isFeatured,
2025-09-16T23:46:07.846385Z	    isNew,
2025-09-16T23:46:07.846545Z	    _createdAt,
2025-09-16T23:46:07.846724Z	    _updatedAt
2025-09-16T23:46:07.846875Z	  
2025-09-16T23:46:07.847062Z	      },
2025-09-16T23:46:07.847183Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-16T23:46:07.8473Z	    }
2025-09-16T23:46:07.847639Z	  
2025-09-16T23:46:07.847801Z	Query parameters: {
2025-09-16T23:46:07.847912Z	  limit: 8,
2025-09-16T23:46:07.84801Z	  offset: 0,
2025-09-16T23:46:07.848122Z	  category: undefined,
2025-09-16T23:46:07.848218Z	  brand: 'ncc',
2025-09-16T23:46:07.848311Z	  featured: undefined
2025-09-16T23:46:07.848417Z	}
2025-09-16T23:46:07.848528Z	Fetching solutions with query: 
2025-09-16T23:46:07.848631Z	    {
2025-09-16T23:46:07.848775Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:07.848887Z	        
2025-09-16T23:46:07.848984Z	    _id,
2025-09-16T23:46:07.849081Z	    title,
2025-09-16T23:46:07.849194Z	    "slug": slug.current,
2025-09-16T23:46:07.849296Z	    summary,
2025-09-16T23:46:07.849454Z	    description,
2025-09-16T23:46:07.849643Z	    coverImage,
2025-09-16T23:46:07.850043Z	    primaryBrand->{
2025-09-16T23:46:07.850159Z	      _id,
2025-09-16T23:46:07.850256Z	      name,
2025-09-16T23:46:07.850347Z	      "slug": slug.current,
2025-09-16T23:46:07.850443Z	      logo
2025-09-16T23:46:07.850592Z	    },
2025-09-16T23:46:07.850777Z	    relatedBrands[]->{
2025-09-16T23:46:07.850943Z	      _id,
2025-09-16T23:46:07.851058Z	      name,
2025-09-16T23:46:07.851163Z	      "slug": slug.current,
2025-09-16T23:46:07.851321Z	      logo
2025-09-16T23:46:07.851535Z	    },
2025-09-16T23:46:07.851747Z	    targetMarket,
2025-09-16T23:46:07.851882Z	    complexity,
2025-09-16T23:46:07.851983Z	    publishedAt,
2025-09-16T23:46:07.852084Z	    isPublished,
2025-09-16T23:46:07.852205Z	    isFeatured,
2025-09-16T23:46:07.852326Z	    viewCount,
2025-09-16T23:46:07.852435Z	    _createdAt,
2025-09-16T23:46:07.852545Z	    _updatedAt
2025-09-16T23:46:07.85266Z	  
2025-09-16T23:46:07.852788Z	      },
2025-09-16T23:46:07.852888Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-16T23:46:07.852983Z	    }
2025-09-16T23:46:07.853069Z	  
2025-09-16T23:46:07.853157Z	Query parameters: {
2025-09-16T23:46:07.853244Z	  limit: 4,
2025-09-16T23:46:07.853342Z	  offset: 0,
2025-09-16T23:46:07.853451Z	  targetMarket: undefined,
2025-09-16T23:46:07.853566Z	  brand: 'ncc',
2025-09-16T23:46:07.853709Z	  featured: undefined
2025-09-16T23:46:07.853822Z	}
2025-09-16T23:46:07.853913Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-16T23:46:07.854013Z	Fetching products with query: 
2025-09-16T23:46:07.854129Z	    {
2025-09-16T23:46:07.854223Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:07.854322Z	        
2025-09-16T23:46:07.854427Z	    _id,
2025-09-16T23:46:07.854527Z	    _type,
2025-09-16T23:46:07.854649Z	    partNumber,
2025-09-16T23:46:07.854768Z	    "slug": slug.current,
2025-09-16T23:46:07.854868Z	    title,
2025-09-16T23:46:07.854981Z	    shortDescription,
2025-09-16T23:46:07.8551Z	    image,
2025-09-16T23:46:07.855209Z	    brand->{
2025-09-16T23:46:07.855315Z	      name,
2025-09-16T23:46:07.855422Z	      "slug": slug.current,
2025-09-16T23:46:07.855548Z	      logo
2025-09-16T23:46:07.85567Z	    },
2025-09-16T23:46:07.855803Z	    category->{
2025-09-16T23:46:07.855905Z	      name,
2025-09-16T23:46:07.855997Z	      "slug": slug.current
2025-09-16T23:46:07.856087Z	    },
2025-09-16T23:46:07.856177Z	    pricing{
2025-09-16T23:46:07.85627Z	      currency,
2025-09-16T23:46:07.856381Z	      tiers[]{
2025-09-16T23:46:07.856491Z	        quantity,
2025-09-16T23:46:07.856593Z	        price,
2025-09-16T23:46:07.85673Z	        unit
2025-09-16T23:46:07.856837Z	      },
2025-09-16T23:46:07.856934Z	      moq,
2025-09-16T23:46:07.857062Z	      leadTime,
2025-09-16T23:46:07.857289Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:07.858444Z	      "price": tiers[0].price,
2025-09-16T23:46:07.858607Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:07.858967Z	    },
2025-09-16T23:46:07.859241Z	    inventory{
2025-09-16T23:46:07.859381Z	      quantity,
2025-09-16T23:46:07.859513Z	      status,
2025-09-16T23:46:07.859642Z	      warehouse,
2025-09-16T23:46:07.859766Z	      lastUpdated,
2025-09-16T23:46:07.85988Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:07.859992Z	      "inStock": status == "in_stock",
2025-09-16T23:46:07.860661Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:07.860863Z	    },
2025-09-16T23:46:07.860981Z	    isActive,
2025-09-16T23:46:07.861078Z	    isFeatured,
2025-09-16T23:46:07.861177Z	    isNew,
2025-09-16T23:46:07.86128Z	    _createdAt,
2025-09-16T23:46:07.861406Z	    _updatedAt
2025-09-16T23:46:07.861519Z	  
2025-09-16T23:46:07.861625Z	      },
2025-09-16T23:46:07.861762Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-16T23:46:07.861884Z	    }
2025-09-16T23:46:07.862003Z	  
2025-09-16T23:46:07.862139Z	Query parameters: {
2025-09-16T23:46:07.862256Z	  limit: 8,
2025-09-16T23:46:07.862363Z	  offset: 0,
2025-09-16T23:46:07.862483Z	  category: undefined,
2025-09-16T23:46:07.862595Z	  brand: 'ncc',
2025-09-16T23:46:07.86273Z	  featured: undefined
2025-09-16T23:46:07.862906Z	}
2025-09-16T23:46:07.863133Z	Fetching solutions with query: 
2025-09-16T23:46:07.863471Z	    {
2025-09-16T23:46:07.863688Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:07.863832Z	        
2025-09-16T23:46:07.863946Z	    _id,
2025-09-16T23:46:07.864049Z	    title,
2025-09-16T23:46:07.864153Z	    "slug": slug.current,
2025-09-16T23:46:07.864257Z	    summary,
2025-09-16T23:46:07.864372Z	    description,
2025-09-16T23:46:07.864659Z	    coverImage,
2025-09-16T23:46:07.865051Z	    primaryBrand->{
2025-09-16T23:46:07.865232Z	      _id,
2025-09-16T23:46:07.865358Z	      name,
2025-09-16T23:46:07.865486Z	      "slug": slug.current,
2025-09-16T23:46:07.865593Z	      logo
2025-09-16T23:46:07.865721Z	    },
2025-09-16T23:46:07.866612Z	    relatedBrands[]->{
2025-09-16T23:46:07.866804Z	      _id,
2025-09-16T23:46:07.867037Z	      name,
2025-09-16T23:46:07.867231Z	      "slug": slug.current,
2025-09-16T23:46:07.867381Z	      logo
2025-09-16T23:46:07.867511Z	    },
2025-09-16T23:46:07.867621Z	    targetMarket,
2025-09-16T23:46:07.867833Z	    complexity,
2025-09-16T23:46:07.867991Z	    publishedAt,
2025-09-16T23:46:07.868109Z	    isPublished,
2025-09-16T23:46:07.868217Z	    isFeatured,
2025-09-16T23:46:07.868325Z	    viewCount,
2025-09-16T23:46:07.868644Z	    _createdAt,
2025-09-16T23:46:07.868791Z	    _updatedAt
2025-09-16T23:46:07.868916Z	  
2025-09-16T23:46:07.869048Z	      },
2025-09-16T23:46:07.869266Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-16T23:46:07.8694Z	    }
2025-09-16T23:46:07.869532Z	  
2025-09-16T23:46:07.869643Z	Query parameters: {
2025-09-16T23:46:07.86978Z	  limit: 4,
2025-09-16T23:46:07.869889Z	  offset: 0,
2025-09-16T23:46:07.870012Z	  targetMarket: undefined,
2025-09-16T23:46:07.870123Z	  brand: 'ncc',
2025-09-16T23:46:07.870226Z	  featured: undefined
2025-09-16T23:46:07.870327Z	}
2025-09-16T23:46:07.870429Z	✅ [getBrandData] Found brand: ncc
2025-09-16T23:46:07.870551Z	✅ [getBrandData] Found brand: ncc
2025-09-16T23:46:07.870661Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:07.870791Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:07.870895Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:07.871005Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:07.871112Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:46:07.871221Z	Products fetch result: {
2025-09-16T23:46:07.871329Z	  totalProducts: 4,
2025-09-16T23:46:07.87143Z	  fetchedProducts: 4,
2025-09-16T23:46:07.87156Z	  firstProduct: {
2025-09-16T23:46:07.871687Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:46:07.871819Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:46:07.871942Z	    _type: 'product',
2025-09-16T23:46:07.872051Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:46:07.872162Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:46:07.872266Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:07.872377Z	    image: null,
2025-09-16T23:46:07.872501Z	    inventory: {
2025-09-16T23:46:07.872617Z	      inStock: true,
2025-09-16T23:46:07.872742Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:46:07.872909Z	      quantity: 0,
2025-09-16T23:46:07.873026Z	      status: 'in_stock',
2025-09-16T23:46:07.873953Z	      warehouse: null
2025-09-16T23:46:07.87413Z	    },
2025-09-16T23:46:07.874238Z	    isActive: true,
2025-09-16T23:46:07.874336Z	    isFeatured: false,
2025-09-16T23:46:07.874434Z	    isNew: false,
2025-09-16T23:46:07.87453Z	    partNumber: '11111',
2025-09-16T23:46:07.874633Z	    pricing: {
2025-09-16T23:46:07.874731Z	      currency: 'CNY',
2025-09-16T23:46:07.874814Z	      leadTime: null,
2025-09-16T23:46:07.874893Z	      moq: null,
2025-09-16T23:46:07.874973Z	      price: null,
2025-09-16T23:46:07.875053Z	      tiers: null
2025-09-16T23:46:07.875135Z	    },
2025-09-16T23:46:07.875227Z	    shortDescription: '11111',
2025-09-16T23:46:07.875319Z	    slug: 'sic mosfet',
2025-09-16T23:46:07.875406Z	    title: '111111'
2025-09-16T23:46:07.876436Z	  }
2025-09-16T23:46:07.876577Z	}
2025-09-16T23:46:07.876698Z	Solutions fetch result: {
2025-09-16T23:46:07.876829Z	  totalSolutions: 6,
2025-09-16T23:46:07.876925Z	  fetchedSolutions: 4,
2025-09-16T23:46:07.877024Z	  firstSolution: {
2025-09-16T23:46:07.877121Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:46:07.877216Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:46:07.924567Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:46:07.925078Z	    complexity: 'medium',
2025-09-16T23:46:07.925272Z	    coverImage: null,
2025-09-16T23:46:07.925396Z	    description: [ [Object] ],
2025-09-16T23:46:07.925513Z	    isFeatured: false,
2025-09-16T23:46:07.925622Z	    isPublished: true,
2025-09-16T23:46:07.925754Z	    primaryBrand: {
2025-09-16T23:46:07.926186Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:46:07.926314Z	      logo: null,
2025-09-16T23:46:07.926496Z	      name: 'CREE',
2025-09-16T23:46:07.926875Z	      slug: 'cree'
2025-09-16T23:46:07.926995Z	    },
2025-09-16T23:46:07.927096Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:46:07.927195Z	    relatedBrands: null,
2025-09-16T23:46:07.927291Z	    slug: '11111',
2025-09-16T23:46:07.92739Z	    summary: '11111',
2025-09-16T23:46:07.927489Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:07.92759Z	    title: '11111',
2025-09-16T23:46:07.92773Z	    viewCount: 0
2025-09-16T23:46:07.927842Z	  }
2025-09-16T23:46:07.928275Z	}
2025-09-16T23:46:07.928682Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-16T23:46:07.928816Z	Fetching products with query: 
2025-09-16T23:46:07.92892Z	    {
2025-09-16T23:46:07.929011Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:07.929108Z	        
2025-09-16T23:46:07.929204Z	    _id,
2025-09-16T23:46:07.9293Z	    _type,
2025-09-16T23:46:07.929395Z	    partNumber,
2025-09-16T23:46:07.929516Z	    "slug": slug.current,
2025-09-16T23:46:07.929626Z	    title,
2025-09-16T23:46:07.930019Z	    shortDescription,
2025-09-16T23:46:07.930423Z	    image,
2025-09-16T23:46:07.930583Z	    brand->{
2025-09-16T23:46:07.93071Z	      name,
2025-09-16T23:46:07.930806Z	      "slug": slug.current,
2025-09-16T23:46:07.930894Z	      logo
2025-09-16T23:46:07.930981Z	    },
2025-09-16T23:46:07.931061Z	    category->{
2025-09-16T23:46:07.931187Z	      name,
2025-09-16T23:46:07.93136Z	      "slug": slug.current
2025-09-16T23:46:07.931499Z	    },
2025-09-16T23:46:07.931845Z	    pricing{
2025-09-16T23:46:07.931987Z	      currency,
2025-09-16T23:46:07.932086Z	      tiers[]{
2025-09-16T23:46:07.932187Z	        quantity,
2025-09-16T23:46:07.932286Z	        price,
2025-09-16T23:46:07.932756Z	        unit
2025-09-16T23:46:07.932879Z	      },
2025-09-16T23:46:07.933145Z	      moq,
2025-09-16T23:46:07.933495Z	      leadTime,
2025-09-16T23:46:07.933845Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:07.934Z	      "price": tiers[0].price,
2025-09-16T23:46:07.934114Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:07.934215Z	    },
2025-09-16T23:46:07.934306Z	    inventory{
2025-09-16T23:46:07.9344Z	      quantity,
2025-09-16T23:46:07.934967Z	      status,
2025-09-16T23:46:07.935309Z	      warehouse,
2025-09-16T23:46:07.935639Z	      lastUpdated,
2025-09-16T23:46:07.935778Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:07.935891Z	      "inStock": status == "in_stock",
2025-09-16T23:46:07.936232Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:07.936419Z	    },
2025-09-16T23:46:07.936559Z	    isActive,
2025-09-16T23:46:07.936701Z	    isFeatured,
2025-09-16T23:46:07.936827Z	    isNew,
2025-09-16T23:46:07.936934Z	    _createdAt,
2025-09-16T23:46:07.937032Z	    _updatedAt
2025-09-16T23:46:07.937631Z	  
2025-09-16T23:46:07.937946Z	      },
2025-09-16T23:46:07.9382Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-16T23:46:07.938342Z	    }
2025-09-16T23:46:07.938452Z	  
2025-09-16T23:46:07.938553Z	Query parameters: {
2025-09-16T23:46:07.938663Z	  limit: 8,
2025-09-16T23:46:07.938786Z	  offset: 0,
2025-09-16T23:46:07.938888Z	  category: undefined,
2025-09-16T23:46:07.938991Z	  brand: 'pi',
2025-09-16T23:46:07.93909Z	  featured: undefined
2025-09-16T23:46:07.939194Z	}
2025-09-16T23:46:07.939331Z	Fetching solutions with query: 
2025-09-16T23:46:07.939435Z	    {
2025-09-16T23:46:07.939528Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:07.939656Z	        
2025-09-16T23:46:07.93981Z	    _id,
2025-09-16T23:46:07.939924Z	    title,
2025-09-16T23:46:07.940049Z	    "slug": slug.current,
2025-09-16T23:46:07.940298Z	    summary,
2025-09-16T23:46:07.940537Z	    description,
2025-09-16T23:46:07.940733Z	    coverImage,
2025-09-16T23:46:07.94106Z	    pried/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.941602Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.944561Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.944767Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.945292Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.945436Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.945564Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.945698Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.945817Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:07.945922Z	  digest: '1870762441'
2025-09-16T23:46:07.946029Z	}
2025-09-16T23:46:07.946115Z	
2025-09-16T23:46:07.946197Z	Error occurred prerendering page "/ja/solutions/99999". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:07.946293Z	
2025-09-16T23:46:07.946409Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.946518Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.946624Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.946902Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.947172Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.948408Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.948536Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.948944Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.949133Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.949255Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.949459Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.949589Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.94975Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.949872Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.949973Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.950084Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.9502Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.950308Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.950415Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.950543Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.950647Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.950806Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:07.95092Z	  digest: '1870762441'
2025-09-16T23:46:07.951037Z	}
2025-09-16T23:46:07.951143Z	
2025-09-16T23:46:07.951564Z	Error occurred prerendering page "/ja/solutions/11111". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:07.953844Z	
2025-09-16T23:46:07.954033Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.954295Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.954494Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.954618Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.95487Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.954999Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.955202Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.955331Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.955473Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.955592Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.955741Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.955877Z	
2025-09-16T23:46:07.95599Z	Error occurred prerendering page "/ja/solutions/concrol". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:07.95612Z	
2025-09-16T23:46:07.956228Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.956327Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.956445Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.95655Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.95665Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.956766Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.956874Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.957013Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.957123Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.957228Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.957342Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.957457Z	
2025-09-16T23:46:07.957561Z	Error occurred prerendering page "/ja/solutions/supplysolution". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:07.957685Z	
2025-09-16T23:46:07.957806Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.957921Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.958023Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.958147Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.958255Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.958355Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.958489Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.958607Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.958739Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.958848Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.958955Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.959061Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.959197Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.959351Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.959486Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.959592Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.959726Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.959834Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.959937Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.960035Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.96013Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.960223Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:07.960326Z	  digest: '1870762441'
2025-09-16T23:46:07.960444Z	}
2025-09-16T23:46:07.960545Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:07.960638Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:07.960765Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:07.960876Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:07.960977Z	}
2025-09-16T23:46:07.961071Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:07.96117Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:07.961266Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:07.961364Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:07.96148Z	}
2025-09-16T23:46:07.96158Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.961748Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.961885Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.962017Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.96213Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.962247Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.962356Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.96249Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.962604Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.962732Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.962839Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:07.963122Z	  digest: '1870762441'
2025-09-16T23:46:07.963501Z	}
2025-09-16T23:46:07.963803Z	
2025-09-16T23:46:07.964028Z	Error occurred prerendering page "/ja/solutions/charger". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:07.964208Z	
2025-09-16T23:46:07.967003Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.967333Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.971914Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.972046Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.972141Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.972236Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.972334Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.972428Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.972519Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.972649Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.972775Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.972878Z	
2025-09-16T23:46:07.972976Z	Error occurred prerendering page "/ja/solutions/motodiriver". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:07.973077Z	
2025-09-16T23:46:07.973175Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.973272Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.973366Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.973471Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.973568Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.973671Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.97401Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.974164Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.974364Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.974506Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.974768Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.97504Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.975282Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.975488Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.975647Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.975807Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.975919Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.976042Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.976153Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.976266Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.976374Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.976508Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:07.976615Z	  digest: '3820195337'
2025-09-16T23:46:07.976738Z	}
2025-09-16T23:46:07.976845Z	
2025-09-16T23:46:07.976948Z	Error occurred prerendering page "/ja/solutions/infineon-aurix-automotive-solution". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:07.97705Z	
2025-09-16T23:46:07.977167Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:07.977269Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:07.977365Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.977496Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:07.977611Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:07.977747Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.97788Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:07.978Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:07.978123Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:07.978246Z	    at nD (/opt/buildhome/repo/nmaryBrand->{
2025-09-16T23:46:07.978364Z	      _id,
2025-09-16T23:46:07.978495Z	      name,
2025-09-16T23:46:07.978607Z	      "slug": slug.current,
2025-09-16T23:46:07.978742Z	      logo
2025-09-16T23:46:07.978848Z	    },
2025-09-16T23:46:07.97895Z	    relatedBrands[]->{
2025-09-16T23:46:07.979051Z	      _id,
2025-09-16T23:46:07.979153Z	      name,
2025-09-16T23:46:07.979292Z	      "slug": slug.current,
2025-09-16T23:46:07.979421Z	      logo
2025-09-16T23:46:07.979535Z	    },
2025-09-16T23:46:07.979646Z	    targetMarket,
2025-09-16T23:46:08.027326Z	    complexity,
2025-09-16T23:46:08.028239Z	    publishedAt,
2025-09-16T23:46:08.034695Z	    isPublished,
2025-09-16T23:46:08.034961Z	    isFeatured,
2025-09-16T23:46:08.035095Z	    viewCount,
2025-09-16T23:46:08.035419Z	    _createdAt,
2025-09-16T23:46:08.035564Z	    _updatedAt
2025-09-16T23:46:08.035912Z	  
2025-09-16T23:46:08.036332Z	      },
2025-09-16T23:46:08.036559Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-16T23:46:08.036861Z	    }
2025-09-16T23:46:08.037332Z	  
2025-09-16T23:46:08.037469Z	Query parameters: {
2025-09-16T23:46:08.037578Z	  limit: 4,
2025-09-16T23:46:08.037735Z	  offset: 0,
2025-09-16T23:46:08.037839Z	  targetMarket: undefined,
2025-09-16T23:46:08.037927Z	  brand: 'pi',
2025-09-16T23:46:08.038012Z	  featured: undefined
2025-09-16T23:46:08.038098Z	}
2025-09-16T23:46:08.038178Z	✅ [getBrandData] Found brand: PI
2025-09-16T23:46:08.03826Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:08.038341Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:08.038423Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-16T23:46:08.038515Z	Fetching products with query: 
2025-09-16T23:46:08.038597Z	    {
2025-09-16T23:46:08.038707Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:08.0388Z	        
2025-09-16T23:46:08.038887Z	    _id,
2025-09-16T23:46:08.038972Z	    _type,
2025-09-16T23:46:08.039061Z	    partNumber,
2025-09-16T23:46:08.03916Z	    "slug": slug.current,
2025-09-16T23:46:08.039264Z	    title,
2025-09-16T23:46:08.039361Z	    shortDescription,
2025-09-16T23:46:08.039459Z	    image,
2025-09-16T23:46:08.039551Z	    brand->{
2025-09-16T23:46:08.039667Z	      name,
2025-09-16T23:46:08.039791Z	      "slug": slug.current,
2025-09-16T23:46:08.04048Z	      logo
2025-09-16T23:46:08.040597Z	    },
2025-09-16T23:46:08.04076Z	    category->{
2025-09-16T23:46:08.041011Z	      name,
2025-09-16T23:46:08.041105Z	      "slug": slug.current
2025-09-16T23:46:08.041197Z	    },
2025-09-16T23:46:08.041287Z	    pricing{
2025-09-16T23:46:08.041378Z	      currency,
2025-09-16T23:46:08.041474Z	      tiers[]{
2025-09-16T23:46:08.041572Z	        quantity,
2025-09-16T23:46:08.041698Z	        price,
2025-09-16T23:46:08.04182Z	        unit
2025-09-16T23:46:08.041929Z	      },
2025-09-16T23:46:08.042035Z	      moq,
2025-09-16T23:46:08.04214Z	      leadTime,
2025-09-16T23:46:08.042245Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:08.04236Z	      "price": tiers[0].price,
2025-09-16T23:46:08.042471Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:08.042573Z	    },
2025-09-16T23:46:08.042699Z	    inventory{
2025-09-16T23:46:08.042805Z	      quantity,
2025-09-16T23:46:08.042911Z	      status,
2025-09-16T23:46:08.043018Z	      warehouse,
2025-09-16T23:46:08.04521Z	      lastUpdated,
2025-09-16T23:46:08.045366Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:08.045492Z	      "inStock": status == "in_stock",
2025-09-16T23:46:08.0456Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:08.045785Z	    },
2025-09-16T23:46:08.045906Z	    isActive,
2025-09-16T23:46:08.04602Z	    isFeatured,
2025-09-16T23:46:08.046123Z	    isNew,
2025-09-16T23:46:08.046214Z	    _createdAt,
2025-09-16T23:46:08.046301Z	    _updatedAt
2025-09-16T23:46:08.046389Z	  
2025-09-16T23:46:08.046478Z	      },
2025-09-16T23:46:08.046568Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-16T23:46:08.046732Z	    }
2025-09-16T23:46:08.046845Z	  
2025-09-16T23:46:08.046941Z	Query parameters: {
2025-09-16T23:46:08.047048Z	  limit: 8,
2025-09-16T23:46:08.04715Z	  offset: 0,
2025-09-16T23:46:08.047264Z	  category: undefined,
2025-09-16T23:46:08.047826Z	  brand: 'pi',
2025-09-16T23:46:08.047943Z	  featured: undefined
2025-09-16T23:46:08.048296Z	}
2025-09-16T23:46:08.048636Z	Fetching solutions with query: 
2025-09-16T23:46:08.048767Z	    {
2025-09-16T23:46:08.048855Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:08.048941Z	        
2025-09-16T23:46:08.049025Z	    _id,
2025-09-16T23:46:08.049121Z	    title,
2025-09-16T23:46:08.049218Z	    "slug": slug.current,
2025-09-16T23:46:08.049322Z	    summary,
2025-09-16T23:46:08.049438Z	    description,
2025-09-16T23:46:08.049538Z	    coverImage,
2025-09-16T23:46:08.049628Z	    primaryBrand->{
2025-09-16T23:46:08.049741Z	      _id,
2025-09-16T23:46:08.049845Z	      name,
2025-09-16T23:46:08.049944Z	      "slug": slug.current,
2025-09-16T23:46:08.050048Z	      logo
2025-09-16T23:46:08.050148Z	    },
2025-09-16T23:46:08.050261Z	    relatedBrands[]->{
2025-09-16T23:46:08.050377Z	      _id,
2025-09-16T23:46:08.050491Z	      name,
2025-09-16T23:46:08.051609Z	      "slug": slug.current,
2025-09-16T23:46:08.052065Z	      logo
2025-09-16T23:46:08.052186Z	    },
2025-09-16T23:46:08.052291Z	    targetMarket,
2025-09-16T23:46:08.052406Z	    complexity,
2025-09-16T23:46:08.053097Z	    publishedAt,
2025-09-16T23:46:08.053231Z	    isPublished,
2025-09-16T23:46:08.053346Z	    isFeatured,
2025-09-16T23:46:08.053484Z	    viewCount,
2025-09-16T23:46:08.053776Z	    _createdAt,
2025-09-16T23:46:08.053896Z	    _updatedAt
2025-09-16T23:46:08.054005Z	  
2025-09-16T23:46:08.054122Z	      },
2025-09-16T23:46:08.054284Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-16T23:46:08.054771Z	    }
2025-09-16T23:46:08.055087Z	  
2025-09-16T23:46:08.05535Z	Query parameters: {
2025-09-16T23:46:08.05578Z	  limit: 4,
2025-09-16T23:46:08.05628Z	  offset: 0,
2025-09-16T23:46:08.056706Z	  targetMarket: undefined,
2025-09-16T23:46:08.0569Z	  brand: 'pi',
2025-09-16T23:46:08.057069Z	  featured: undefined
2025-09-16T23:46:08.057273Z	}
2025-09-16T23:46:08.057458Z	✅ [getBrandData] Found brand: PI
2025-09-16T23:46:08.05769Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:08.057858Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:08.057943Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:46:08.058588Z	Fetching products with query: 
2025-09-16T23:46:08.058771Z	    {
2025-09-16T23:46:08.058893Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:08.059009Z	        
2025-09-16T23:46:08.059112Z	    _id,
2025-09-16T23:46:08.059202Z	    _type,
2025-09-16T23:46:08.059313Z	    partNumber,
2025-09-16T23:46:08.059413Z	    "slug": slug.current,
2025-09-16T23:46:08.059513Z	    title,
2025-09-16T23:46:08.059634Z	    shortDescription,
2025-09-16T23:46:08.059785Z	    image,
2025-09-16T23:46:08.059887Z	    brand->{
2025-09-16T23:46:08.059972Z	      name,
2025-09-16T23:46:08.06007Z	      "slug": slug.current,
2025-09-16T23:46:08.060183Z	      logo
2025-09-16T23:46:08.060905Z	    },
2025-09-16T23:46:08.061045Z	    category->{
2025-09-16T23:46:08.061173Z	      name,
2025-09-16T23:46:08.061327Z	      "slug": slug.current
2025-09-16T23:46:08.061472Z	    },
2025-09-16T23:46:08.061586Z	    pricing{
2025-09-16T23:46:08.061844Z	      currency,
2025-09-16T23:46:08.061988Z	      tiers[]{
2025-09-16T23:46:08.062125Z	        quantity,
2025-09-16T23:46:08.062244Z	        price,
2025-09-16T23:46:08.062361Z	        unit
2025-09-16T23:46:08.062474Z	      },
2025-09-16T23:46:08.062602Z	      moq,
2025-09-16T23:46:08.063322Z	      leadTime,
2025-09-16T23:46:08.063562Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:08.063751Z	      "price": tiers[0].price,
2025-09-16T23:46:08.063866Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:08.063995Z	    },
2025-09-16T23:46:08.064175Z	    inventory{
2025-09-16T23:46:08.064326Z	      quantity,
2025-09-16T23:46:08.064444Z	      status,
2025-09-16T23:46:08.064551Z	      warehouse,
2025-09-16T23:46:08.064879Z	      lastUpdated,
2025-09-16T23:46:08.065241Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:08.065418Z	      "inStock": status == "in_stock",
2025-09-16T23:46:08.065577Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:08.06763Z	    },
2025-09-16T23:46:08.067918Z	    isActive,
2025-09-16T23:46:08.068119Z	    isFeatured,
2025-09-16T23:46:08.06825Z	    isNew,
2025-09-16T23:46:08.068355Z	    _createdAt,
2025-09-16T23:46:08.07421Z	    _updatedAt
2025-09-16T23:46:08.074631Z	  
2025-09-16T23:46:08.074837Z	      },
2025-09-16T23:46:08.074976Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:46:08.075154Z	    }
2025-09-16T23:46:08.075333Z	  
2025-09-16T23:46:08.075472Z	Query parameters: {
2025-09-16T23:46:08.075594Z	  limit: 8,
2025-09-16T23:46:08.07579Z	  offset: 0,
2025-09-16T23:46:08.075911Z	  category: undefined,
2025-09-16T23:46:08.076015Z	  brand: 'Electronicon',
2025-09-16T23:46:08.076114Z	  featured: undefined
2025-09-16T23:46:08.076211Z	}
2025-09-16T23:46:08.076323Z	Fetching solutions with query: 
2025-09-16T23:46:08.076506Z	    {
2025-09-16T23:46:08.07663Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:08.079604Z	        
2025-09-16T23:46:08.079749Z	    _id,
2025-09-16T23:46:08.079871Z	    title,
2025-09-16T23:46:08.080264Z	    "slug": slug.current,
2025-09-16T23:46:08.080928Z	    summary,
2025-09-16T23:46:08.081253Z	    description,
2025-09-16T23:46:08.081432Z	    coverImage,
2025-09-16T23:46:08.124067Z	    primaryBrand->{
2025-09-16T23:46:08.124331Z	      _id,
2025-09-16T23:46:08.124479Z	      name,
2025-09-16T23:46:08.124618Z	      "slug": slug.current,
2025-09-16T23:46:08.124821Z	      logo
2025-09-16T23:46:08.124993Z	    },
2025-09-16T23:46:08.125514Z	    relatedBrands[]->{
2025-09-16T23:46:08.125856Z	      _id,
2025-09-16T23:46:08.125981Z	      name,
2025-09-16T23:46:08.126089Z	      "slug": slug.current,
2025-09-16T23:46:08.126232Z	      logo
2025-09-16T23:46:08.126358Z	    },
2025-09-16T23:46:08.127915Z	    targetMarket,
2025-09-16T23:46:08.128314Z	    complexity,
2025-09-16T23:46:08.128485Z	    publishedAt,
2025-09-16T23:46:08.128612Z	    isPublished,
2025-09-16T23:46:08.128743Z	    isFeatured,
2025-09-16T23:46:08.128855Z	    viewCount,
2025-09-16T23:46:08.12896Z	    _createdAt,
2025-09-16T23:46:08.129063Z	    _updatedAt
2025-09-16T23:46:08.129182Z	  
2025-09-16T23:46:08.129286Z	      },
2025-09-16T23:46:08.129382Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:46:08.129486Z	    }
2025-09-16T23:46:08.129579Z	  
2025-09-16T23:46:08.1297Z	Query parameters: {
2025-09-16T23:46:08.129808Z	  limit: 4,
2025-09-16T23:46:08.129913Z	  offset: 0,
2025-09-16T23:46:08.130035Z	  targetMarket: undefined,
2025-09-16T23:46:08.130127Z	  brand: 'Electronicon',
2025-09-16T23:46:08.130234Z	  featured: undefined
2025-09-16T23:46:08.130362Z	}
2025-09-16T23:46:08.130472Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:46:08.1306Z	Products fetch result: {
2025-09-16T23:46:08.13291Z	  totalProducts: 2,
2025-09-16T23:46:08.133092Z	  fetchedProducts: 2,
2025-09-16T23:46:08.133203Z	  firstProduct: {
2025-09-16T23:46:08.133337Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:46:08.133461Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:46:08.13358Z	    _type: 'product',
2025-09-16T23:46:08.133696Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:46:08.133801Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:46:08.135982Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:46:08.136111Z	    image: null,
2025-09-16T23:46:08.136212Z	    inventory: {
2025-09-16T23:46:08.136315Z	      inStock: true,
2025-09-16T23:46:08.13656Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:46:08.136668Z	      quantity: 0,
2025-09-16T23:46:08.136789Z	      status: 'in_stock',
2025-09-16T23:46:08.136886Z	      warehouse: null
2025-09-16T23:46:08.137079Z	    },
2025-09-16T23:46:08.137191Z	    isActive: true,
2025-09-16T23:46:08.137292Z	    isFeatured: false,
2025-09-16T23:46:08.137406Z	    isNew: false,
2025-09-16T23:46:08.137507Z	    partNumber: '99999',
2025-09-16T23:46:08.137599Z	    pricing: {
2025-09-16T23:46:08.137706Z	      currency: 'CNY',
2025-09-16T23:46:08.137797Z	      leadTime: null,
2025-09-16T23:46:08.137887Z	      moq: null,
2025-09-16T23:46:08.138Z	      price: null,
2025-09-16T23:46:08.138096Z	      tiers: null
2025-09-16T23:46:08.138177Z	    },
2025-09-16T23:46:08.138259Z	    shortDescription: null,
2025-09-16T23:46:08.138338Z	    slug: '99999',
2025-09-16T23:46:08.138431Z	    title: '99999'
2025-09-16T23:46:08.138523Z	  }
2025-09-16T23:46:08.138614Z	}
2025-09-16T23:46:08.138719Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:08.138837Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:46:08.138943Z	Fetching products with query: 
2025-09-16T23:46:08.139037Z	    {
2025-09-16T23:46:08.139144Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:08.139269Z	        
2025-09-16T23:46:08.139375Z	    _id,
2025-09-16T23:46:08.139476Z	    _type,
2025-09-16T23:46:08.139573Z	    partNumber,
2025-09-16T23:46:08.139688Z	    "slug": slug.current,
2025-09-16T23:46:08.139801Z	    title,
2025-09-16T23:46:08.13991Z	    shortDescription,
2025-09-16T23:46:08.140011Z	    image,
2025-09-16T23:46:08.140114Z	    brand->{
2025-09-16T23:46:08.140215Z	      name,
2025-09-16T23:46:08.140313Z	      "slug": slug.current,
2025-09-16T23:46:08.140429Z	      logo
2025-09-16T23:46:08.14054Z	    },
2025-09-16T23:46:08.140671Z	    category->{
2025-09-16T23:46:08.140809Z	      name,
2025-09-16T23:46:08.141043Z	      "slug": slug.current
2025-09-16T23:46:08.141208Z	    },
2025-09-16T23:46:08.141455Z	    pricing{
2025-09-16T23:46:08.141629Z	      currency,
2025-09-16T23:46:08.141876Z	      tiers[]{
2025-09-16T23:46:08.14202Z	        quantity,
2025-09-16T23:46:08.142138Z	        price,
2025-09-16T23:46:08.14236Z	        unit
2025-09-16T23:46:08.142591Z	      },
2025-09-16T23:46:08.142768Z	      moq,
2025-09-16T23:46:08.142949Z	      leadTime,
2025-09-16T23:46:08.143185Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:08.143421Z	      "price": tiers[0].price,
2025-09-16T23:46:08.143536Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:08.143629Z	    },
2025-09-16T23:46:08.143746Z	    inventory{
2025-09-16T23:46:08.143928Z	      quantity,
2025-09-16T23:46:08.144109Z	      status,
2025-09-16T23:46:08.144212Z	      warehouse,
2025-09-16T23:46:08.144304Z	      lastUpdated,
2025-09-16T23:46:08.144409Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:08.144503Z	      "inStock": status == "in_stock",
2025-09-16T23:46:08.144594Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:08.144703Z	    },
2025-09-16T23:46:08.144809Z	    isActive,
2025-09-16T23:46:08.144898Z	    isFeatured,
2025-09-16T23:46:08.144988Z	    isNew,
2025-09-16T23:46:08.14509Z	    _createdAt,
2025-09-16T23:46:08.145203Z	    _updatedAt
2025-09-16T23:46:08.145292Z	  
2025-09-16T23:46:08.145399Z	      },
2025-09-16T23:46:08.1455Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:46:08.145597Z	    }
2025-09-16T23:46:08.145706Z	  
2025-09-16T23:46:08.145806Z	Query parameters: {
2025-09-16T23:46:08.145894Z	  limit: 8,
2025-09-16T23:46:08.145978Z	  offset: 0,
2025-09-16T23:46:08.146064Z	  category: undefined,
2025-09-16T23:46:08.146149Z	  brand: 'Electronicon',
2025-09-16T23:46:08.146242Z	  featured: undefined
2025-09-16T23:46:08.146329Z	}
2025-09-16T23:46:08.146437Z	Fetching solutions with query: 
2025-09-16T23:46:08.146546Z	    {
2025-09-16T23:46:08.146726Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:08.146833Z	        
2025-09-16T23:46:08.14693Z	    _id,
2025-09-16T23:46:08.147018Z	    title,
2025-09-16T23:46:08.147103Z	    "slug": slug.current,
2025-09-16T23:46:08.147206Z	    summary,
2025-09-16T23:46:08.147296Z	    description,
2025-09-16T23:46:08.147394Z	    coverImage,
2025-09-16T23:46:08.1475Z	    primaryBrand->{
2025-09-16T23:46:08.147601Z	      _id,
2025-09-16T23:46:08.147713Z	      name,
2025-09-16T23:46:08.147808Z	      "slug": slug.current,
2025-09-16T23:46:08.147898Z	      logo
2025-09-16T23:46:08.147988Z	    },
2025-09-16T23:46:08.148077Z	    relatedBrands[]->{
2025-09-16T23:46:08.14816Z	      _id,
2025-09-16T23:46:08.148241Z	      name,
2025-09-16T23:46:08.148325Z	      "slug": slug.current,
2025-09-16T23:46:08.148429Z	      logo
2025-09-16T23:46:08.148528Z	    },
2025-09-16T23:46:08.148644Z	    targetMarket,
2025-09-16T23:46:08.148759Z	    complexity,
2025-09-16T23:46:08.14885Z	    publishedAt,
2025-09-16T23:46:08.148934Z	    isPublished,
2025-09-16T23:46:08.149021Z	    isFeatured,
2025-09-16T23:46:08.149111Z	    viewCount,
2025-09-16T23:46:08.149206Z	    _createdAt,
2025-09-16T23:46:08.149298Z	    _updatedAt
2025-09-16T23:46:08.149398Z	  
2025-09-16T23:46:08.149495Z	      },
2025-09-16T23:46:08.149609Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:46:08.149725Z	    }
2025-09-16T23:46:08.14983Z	  
2025-09-16T23:46:08.149925Z	Query parameters: {
2025-09-16T23:46:08.150022Z	  limit: 4,
2025-09-16T23:46:08.150116Z	  offset: 0,
2025-09-16T23:46:08.150205Z	  targetMarket: undefined,
2025-09-16T23:46:08.150294Z	  brand: 'Electronicon',
2025-09-16T23:46:08.150398Z	  featured: undefined
2025-09-16T23:46:08.15049Z	}
2025-09-16T23:46:08.150589Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:46:08.15073Z	   Generating static pages (670/894) 
2025-09-16T23:46:08.15083Z	ode_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:08.150921Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:08.151023Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:08.151112Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:08.151199Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:08.151288Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:08.151389Z	}
2025-09-16T23:46:08.151485Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:08.151577Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:08.151665Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:08.151782Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:08.151879Z	}
2025-09-16T23:46:08.151976Z	Products fetch result: {
2025-09-16T23:46:08.152064Z	  totalProducts: 2,
2025-09-16T23:46:08.152156Z	  fetchedProducts: 2,
2025-09-16T23:46:08.152247Z	  firstProduct: {
2025-09-16T23:46:08.152373Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:46:08.152459Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:46:08.15254Z	    _type: 'product',
2025-09-16T23:46:08.152623Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:46:08.152726Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:46:08.152818Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:46:08.152909Z	    image: null,
2025-09-16T23:46:08.153043Z	    inventory: {
2025-09-16T23:46:08.153132Z	      inStock: true,
2025-09-16T23:46:08.153214Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:46:08.153299Z	      quantity: 0,
2025-09-16T23:46:08.153392Z	      status: 'in_stock',
2025-09-16T23:46:08.153486Z	      warehouse: null
2025-09-16T23:46:08.153588Z	    },
2025-09-16T23:46:08.153697Z	    isActive: true,
2025-09-16T23:46:08.153789Z	    isFeatured: false,
2025-09-16T23:46:08.154084Z	    isNew: false,
2025-09-16T23:46:08.154504Z	    partNumber: '99999',
2025-09-16T23:46:08.154622Z	    pricing: {
2025-09-16T23:46:08.154748Z	      currency: 'CNY',
2025-09-16T23:46:08.154857Z	      leadTime: null,
2025-09-16T23:46:08.154957Z	      moq: null,
2025-09-16T23:46:08.155052Z	      price: null,
2025-09-16T23:46:08.155141Z	      tiers: null
2025-09-16T23:46:08.155228Z	    },
2025-09-16T23:46:08.155315Z	    shortDescription: null,
2025-09-16T23:46:08.155466Z	    slug: '99999',
2025-09-16T23:46:08.155568Z	    title: '99999'
2025-09-16T23:46:08.155662Z	  }
2025-09-16T23:46:08.15583Z	}
2025-09-16T23:46:08.156112Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:08.156328Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-16T23:46:08.156469Z	Fetching products with query: 
2025-09-16T23:46:08.156592Z	    {
2025-09-16T23:46:08.156796Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:08.15691Z	        
2025-09-16T23:46:08.157009Z	    _id,
2025-09-16T23:46:08.157105Z	    _type,
2025-09-16T23:46:08.157199Z	    partNumber,
2025-09-16T23:46:08.157292Z	    "slug": slug.current,
2025-09-16T23:46:08.157397Z	    title,
2025-09-16T23:46:08.157488Z	    shortDescription,
2025-09-16T23:46:08.157583Z	    image,
2025-09-16T23:46:08.157695Z	    brand->{
2025-09-16T23:46:08.157798Z	      name,
2025-09-16T23:46:08.157901Z	      "slug": slug.current,
2025-09-16T23:46:08.157997Z	      logo
2025-09-16T23:46:08.158091Z	    },
2025-09-16T23:46:08.158185Z	    category->{
2025-09-16T23:46:08.158282Z	      name,
2025-09-16T23:46:08.158384Z	      "slug": slug.current
2025-09-16T23:46:08.15848Z	    },
2025-09-16T23:46:08.15857Z	    pricing{
2025-09-16T23:46:08.15867Z	      currency,
2025-09-16T23:46:08.158785Z	      tiers[]{
2025-09-16T23:46:08.158885Z	        quantity,
2025-09-16T23:46:08.158986Z	        price,
2025-09-16T23:46:08.159081Z	        unit
2025-09-16T23:46:08.15917Z	      },
2025-09-16T23:46:08.159278Z	      moq,
2025-09-16T23:46:08.159379Z	      leadTime,
2025-09-16T23:46:08.159471Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:08.159572Z	      "price": tiers[0].price,
2025-09-16T23:46:08.159665Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:08.159782Z	    },
2025-09-16T23:46:08.159875Z	    inventory{
2025-09-16T23:46:08.159989Z	      quantity,
2025-09-16T23:46:08.160135Z	      status,
2025-09-16T23:46:08.160259Z	      warehouse,
2025-09-16T23:46:08.160369Z	      lastUpdated,
2025-09-16T23:46:08.16047Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:08.16057Z	      "inStock": status == "in_stock",
2025-09-16T23:46:08.16069Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:08.160801Z	    },
2025-09-16T23:46:08.160904Z	    isActive,
2025-09-16T23:46:08.160998Z	    isFeatured,
2025-09-16T23:46:08.161093Z	    isNew,
2025-09-16T23:46:08.161201Z	    _createdAt,
2025-09-16T23:46:08.161302Z	    _updatedAt
2025-09-16T23:46:08.16141Z	  
2025-09-16T23:46:08.161508Z	      },
2025-09-16T23:46:08.161607Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-16T23:46:08.161748Z	    }
2025-09-16T23:46:08.161848Z	  
2025-09-16T23:46:08.161938Z	Query parameters: {
2025-09-16T23:46:08.162033Z	  limit: 8,
2025-09-16T23:46:08.162155Z	  offset: 0,
2025-09-16T23:46:08.162254Z	  category: undefined,
2025-09-16T23:46:08.162366Z	  brand: '英飞凌',
2025-09-16T23:46:08.16247Z	  featured: undefined
2025-09-16T23:46:08.162561Z	}
2025-09-16T23:46:08.162653Z	Fetching solutions with query: 
2025-09-16T23:46:08.162762Z	    {
2025-09-16T23:46:08.162851Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:08.162942Z	        
2025-09-16T23:46:08.163039Z	    _id,
2025-09-16T23:46:08.163122Z	    title,
2025-09-16T23:46:08.163205Z	    "slug": slug.current,
2025-09-16T23:46:08.163286Z	    summary,
2025-09-16T23:46:08.16338Z	    description,
2025-09-16T23:46:08.163484Z	    coverImage,
2025-09-16T23:46:08.163578Z	    primaryBrand->{
2025-09-16T23:46:08.163672Z	      _id,
2025-09-16T23:46:08.1638Z	      name,
2025-09-16T23:46:08.163899Z	      "slug": slug.current,
2025-09-16T23:46:08.163995Z	      logo
2025-09-16T23:46:08.16409Z	    },
2025-09-16T23:46:08.164199Z	    relatedBrands[]->{
2025-09-16T23:46:08.164296Z	      _id,
2025-09-16T23:46:08.164411Z	      name,
2025-09-16T23:46:08.164508Z	      "slug": slug.current,
2025-09-16T23:46:08.164603Z	      logo
2025-09-16T23:46:08.165018Z	    },
2025-09-16T23:46:08.165139Z	    targetMarket,
2025-09-16T23:46:08.165235Z	    complexity,
2025-09-16T23:46:08.165329Z	    publishedAt,
2025-09-16T23:46:08.165431Z	    isPublished,
2025-09-16T23:46:08.165519Z	    isFeatured,
2025-09-16T23:46:08.165608Z	    viewCount,
2025-09-16T23:46:08.165763Z	    _createdAt,
2025-09-16T23:46:08.165866Z	    _updatedAt
2025-09-16T23:46:08.165977Z	  
2025-09-16T23:46:08.166085Z	      },
2025-09-16T23:46:08.166181Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-16T23:46:08.166411Z	    }
2025-09-16T23:46:08.166515Z	  
2025-09-16T23:46:08.166603Z	Query parameters: {
2025-09-16T23:46:08.166711Z	  limit: 4,
2025-09-16T23:46:08.166811Z	  offset: 0,
2025-09-16T23:46:08.166914Z	  targetMarket: undefined,
2025-09-16T23:46:08.167015Z	  brand: '英飞凌',
2025-09-16T23:46:08.167117Z	  featured: undefined
2025-09-16T23:46:08.167224Z	}
2025-09-16T23:46:08.167409Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-16T23:46:08.167525Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:08.167624Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:08.167744Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-16T23:46:08.167849Z	Fetching products with query: 
2025-09-16T23:46:08.167947Z	    {
2025-09-16T23:46:08.168064Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:08.168179Z	        
2025-09-16T23:46:08.168276Z	    _id,
2025-09-16T23:46:08.168381Z	    _type,
2025-09-16T23:46:08.168478Z	    partNumber,
2025-09-16T23:46:08.168572Z	    "slug": slug.current,
2025-09-16T23:46:08.168666Z	    title,
2025-09-16T23:46:08.168785Z	    shortDescription,
2025-09-16T23:46:08.168874Z	    image,
2025-09-16T23:46:08.168962Z	    brand->{
2025-09-16T23:46:08.169049Z	      name,
2025-09-16T23:46:08.169134Z	      "slug": slug.current,
2025-09-16T23:46:08.169225Z	      logo
2025-09-16T23:46:08.169317Z	    },
2025-09-16T23:46:08.169418Z	    category->{
2025-09-16T23:46:08.169516Z	      name,
2025-09-16T23:46:08.169624Z	      "slug": slug.current
2025-09-16T23:46:08.169741Z	    },
2025-09-16T23:46:08.169836Z	    pricing{
2025-09-16T23:46:08.169934Z	      currency,
2025-09-16T23:46:08.170029Z	      tiers[]{
2025-09-16T23:46:08.170124Z	        quantity,
2025-09-16T23:46:08.17022Z	        price,
2025-09-16T23:46:08.170311Z	        unit
2025-09-16T23:46:08.170415Z	      },
2025-09-16T23:46:08.170503Z	      moq,
2025-09-16T23:46:08.170587Z	      leadTime,
2025-09-16T23:46:08.170686Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:08.170799Z	      "price": tiers[0].price,
2025-09-16T23:46:08.1709Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:08.170998Z	    },
2025-09-16T23:46:08.173498Z	    inventory{
2025-09-16T23:46:08.17387Z	      quantity,
2025-09-16T23:46:08.174136Z	      status,
2025-09-16T23:46:08.176914Z	      warehouse,
2025-09-16T23:46:08.177053Z	      lastUpdated,
2025-09-16T23:46:08.177152Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:08.177251Z	      "inStock": status == "in_stock",
2025-09-16T23:46:08.177382Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:08.177475Z	    },
2025-09-16T23:46:08.177559Z	    isActive,
2025-09-16T23:46:08.223985Z	    isFeatured,
2025-09-16T23:46:08.224336Z	    isNew,
2025-09-16T23:46:08.224459Z	    _createdAt,
2025-09-16T23:46:08.224545Z	    _updatedAt
2025-09-16T23:46:08.224639Z	  
2025-09-16T23:46:08.22476Z	      },
2025-09-16T23:46:08.224857Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-16T23:46:08.224962Z	    }
2025-09-16T23:46:08.225056Z	  
2025-09-16T23:46:08.225149Z	Query parameters: {
2025-09-16T23:46:08.225338Z	  limit: 8,
2025-09-16T23:46:08.225482Z	  offset: 0,
2025-09-16T23:46:08.225583Z	  category: undefined,
2025-09-16T23:46:08.225708Z	  brand: '英飞凌',
2025-09-16T23:46:08.225828Z	  featured: undefined
2025-09-16T23:46:08.226255Z	}
2025-09-16T23:46:08.226391Z	Fetching solutions with query: 
2025-09-16T23:46:08.22649Z	    {
2025-09-16T23:46:08.226582Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:08.227876Z	        
2025-09-16T23:46:08.228022Z	    _id,
2025-09-16T23:46:08.228129Z	    title,
2025-09-16T23:46:08.22824Z	    "slug": slug.current,
2025-09-16T23:46:08.228332Z	    summary,
2025-09-16T23:46:08.22842Z	    description,
2025-09-16T23:46:08.228507Z	    coverImage,
2025-09-16T23:46:08.228595Z	    primaryBrand->{
2025-09-16T23:46:08.228715Z	      _id,
2025-09-16T23:46:08.228811Z	      name,
2025-09-16T23:46:08.228903Z	      "slug": slug.current,
2025-09-16T23:46:08.228992Z	      logo
2025-09-16T23:46:08.229083Z	    },
2025-09-16T23:46:08.229231Z	    relatedBrands[]->{
2025-09-16T23:46:08.229323Z	      _id,
2025-09-16T23:46:08.229418Z	      name,
2025-09-16T23:46:08.229509Z	      "slug": slug.current,
2025-09-16T23:46:08.229607Z	      logo
2025-09-16T23:46:08.229728Z	    },
2025-09-16T23:46:08.229835Z	    targetMarket,
2025-09-16T23:46:08.229936Z	    complexity,
2025-09-16T23:46:08.230038Z	    publishedAt,
2025-09-16T23:46:08.230139Z	    isPublished,
2025-09-16T23:46:08.230237Z	    isFeatured,
2025-09-16T23:46:08.230335Z	    viewCount,
2025-09-16T23:46:08.230439Z	    _createdAt,
2025-09-16T23:46:08.230529Z	    _updatedAt
2025-09-16T23:46:08.230623Z	  
2025-09-16T23:46:08.230734Z	      },
2025-09-16T23:46:08.230838Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-16T23:46:08.23094Z	    }
2025-09-16T23:46:08.231035Z	  
2025-09-16T23:46:08.231123Z	Query parameters: {
2025-09-16T23:46:08.231212Z	  limit: 4,
2025-09-16T23:46:08.231307Z	  offset: 0,
2025-09-16T23:46:08.23142Z	  targetMarket: undefined,
2025-09-16T23:46:08.231531Z	  brand: '英飞凌',
2025-09-16T23:46:08.231655Z	  featured: undefined
2025-09-16T23:46:08.231772Z	}
2025-09-16T23:46:08.231882Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-16T23:46:08.231965Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:08.232047Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:08.232143Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:46:08.232245Z	Fetching products with query: 
2025-09-16T23:46:08.232342Z	    {
2025-09-16T23:46:08.232441Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:08.232537Z	        
2025-09-16T23:46:08.232659Z	    _id,
2025-09-16T23:46:08.232777Z	    _type,
2025-09-16T23:46:08.232871Z	    partNumber,
2025-09-16T23:46:08.232966Z	    "slug": slug.current,
2025-09-16T23:46:08.23307Z	    title,
2025-09-16T23:46:08.233177Z	    shortDescription,
2025-09-16T23:46:08.233287Z	    image,
2025-09-16T23:46:08.233393Z	    brand->{
2025-09-16T23:46:08.233503Z	      name,
2025-09-16T23:46:08.233621Z	      "slug": slug.current,
2025-09-16T23:46:08.233784Z	      logo
2025-09-16T23:46:08.233904Z	    },
2025-09-16T23:46:08.234013Z	    category->{
2025-09-16T23:46:08.234119Z	      name,
2025-09-16T23:46:08.234219Z	      "slug": slug.current
2025-09-16T23:46:08.234312Z	    },
2025-09-16T23:46:08.234403Z	    pricing{
2025-09-16T23:46:08.234488Z	      currency,
2025-09-16T23:46:08.234582Z	      tiers[]{
2025-09-16T23:46:08.234715Z	        quantity,
2025-09-16T23:46:08.234823Z	        price,
2025-09-16T23:46:08.234935Z	        unit
2025-09-16T23:46:08.235039Z	      },
2025-09-16T23:46:08.235127Z	      moq,
2025-09-16T23:46:08.235218Z	      leadTime,
2025-09-16T23:46:08.235303Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:08.235586Z	      "price": tiers[0].price,
2025-09-16T23:46:08.23611Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:08.236393Z	    },
2025-09-16T23:46:08.236543Z	    inventory{
2025-09-16T23:46:08.236742Z	      quantity,
2025-09-16T23:46:08.237115Z	      status,
2025-09-16T23:46:08.237253Z	      warehouse,
2025-09-16T23:46:08.23737Z	      lastUpdated,
2025-09-16T23:46:08.237485Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:08.237593Z	      "inStock": status == "in_stock",
2025-09-16T23:46:08.23773Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:08.237847Z	    },
2025-09-16T23:46:08.237954Z	    isActive,
2025-09-16T23:46:08.238057Z	    isFeatured,
2025-09-16T23:46:08.238159Z	    isNew,
2025-09-16T23:46:08.238266Z	    _createdAt,
2025-09-16T23:46:08.238376Z	    _updatedAt
2025-09-16T23:46:08.238496Z	  
2025-09-16T23:46:08.238603Z	      },
2025-09-16T23:46:08.238738Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:46:08.23885Z	    }
2025-09-16T23:46:08.238964Z	  
2025-09-16T23:46:08.239071Z	Query parameters: {
2025-09-16T23:46:08.239177Z	  limit: 8,
2025-09-16T23:46:08.239331Z	  offset: 0,
2025-09-16T23:46:08.239469Z	  category: undefined,
2025-09-16T23:46:08.239578Z	  brand: 'littelfuse',
2025-09-16T23:46:08.239699Z	  featured: undefined
2025-09-16T23:46:08.239831Z	}
2025-09-16T23:46:08.239949Z	Fetching solutions with query: 
2025-09-16T23:46:08.240062Z	    {
2025-09-16T23:46:08.240166Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:08.240292Z	        
2025-09-16T23:46:08.240393Z	    _id,
2025-09-16T23:46:08.240494Z	    title,
2025-09-16T23:46:08.240609Z	    "slug": slug.current,
2025-09-16T23:46:08.240755Z	    summary,
2025-09-16T23:46:08.240877Z	    description,
2025-09-16T23:46:08.240991Z	    coverImage,
2025-09-16T23:46:08.241086Z	    primaryBrand->{
2025-09-16T23:46:08.241179Z	      _id,
2025-09-16T23:46:08.241284Z	      name,
2025-09-16T23:46:08.241392Z	      "slug": slug.current,
2025-09-16T23:46:08.241501Z	      logo
2025-09-16T23:46:08.241646Z	    },
2025-09-16T23:46:08.241804Z	    relatedBrands[]->{
2025-09-16T23:46:08.24193Z	      _id,
2025-09-16T23:46:08.242049Z	      name,
2025-09-16T23:46:08.242155Z	      "slug": slug.current,
2025-09-16T23:46:08.242266Z	      logo
2025-09-16T23:46:08.242374Z	    },
2025-09-16T23:46:08.242491Z	    targetMarket,
2025-09-16T23:46:08.242593Z	    complexity,
2025-09-16T23:46:08.242727Z	    publishedAt,
2025-09-16T23:46:08.242857Z	    isPublished,
2025-09-16T23:46:08.242968Z	    isFeatured,
2025-09-16T23:46:08.243073Z	    viewCount,
2025-09-16T23:46:08.243175Z	    _createdAt,
2025-09-16T23:46:08.243277Z	    _updatedAt
2025-09-16T23:46:08.24338Z	  
2025-09-16T23:46:08.243483Z	      },
2025-09-16T23:46:08.243593Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:46:08.243735Z	    }
2025-09-16T23:46:08.243919Z	  
2025-09-16T23:46:08.244853Z	Query parameters: {
2025-09-16T23:46:08.245049Z	  limit: 4,
2025-09-16T23:46:08.245218Z	  offset: 0,
2025-09-16T23:46:08.24544Z	  targetMarket: undefined,
2025-09-16T23:46:08.245599Z	  brand: 'littelfuse',
2025-09-16T23:46:08.245764Z	  featured: undefined
2025-09-16T23:46:08.245924Z	}
2025-09-16T23:46:08.246116Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:46:08.246248Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:08.246382Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:08.246507Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:46:08.24664Z	Fetching products with query: 
2025-09-16T23:46:08.246792Z	    {
2025-09-16T23:46:08.246906Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:08.247019Z	        
2025-09-16T23:46:08.247133Z	    _id,
2025-09-16T23:46:08.24725Z	    _type,
2025-09-16T23:46:08.247357Z	    partNumber,
2025-09-16T23:46:08.247472Z	    "slug": slug.current,
2025-09-16T23:46:08.247579Z	    title,
2025-09-16T23:46:08.247707Z	    shortDescription,
2025-09-16T23:46:08.24782Z	    image,
2025-09-16T23:46:08.247924Z	    brand->{
2025-09-16T23:46:08.248018Z	      name,
2025-09-16T23:46:08.248109Z	      "slug": slug.current,
2025-09-16T23:46:08.248198Z	      logo
2025-09-16T23:46:08.248299Z	    },
2025-09-16T23:46:08.248403Z	    category->{
2025-09-16T23:46:08.248518Z	      name,
2025-09-16T23:46:08.248609Z	      "slug": slug.current
2025-09-16T23:46:08.248733Z	    },
2025-09-16T23:46:08.248849Z	    pricing{
2025-09-16T23:46:08.248953Z	      currency,
2025-09-16T23:46:08.249086Z	      tiers[]{
2025-09-16T23:46:08.249202Z	        quantity,
2025-09-16T23:46:08.249341Z	        price,
2025-09-16T23:46:08.249518Z	        unit
2025-09-16T23:46:08.249701Z	      },
2025-09-16T23:46:08.249852Z	      moq,
2025-09-16T23:46:08.249962Z	      leadTime,
2025-09-16T23:46:08.250058Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:08.250152Z	      "price": tiers[0].price,
2025-09-16T23:46:08.250243Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:08.25033Z	    },
2025-09-16T23:46:08.250415Z	    inventory{
2025-09-16T23:46:08.250508Z	      quantity,
2025-09-16T23:46:08.250625Z	      status,
2025-09-16T23:46:08.250852Z	      warehouse,
2025-09-16T23:46:08.250977Z	      lastUpdated,
2025-09-16T23:46:08.251107Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:08.251241Z	      "inStock": status == "in_stock",
2025-09-16T23:46:08.25133Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:08.25146Z	    },
2025-09-16T23:46:08.251573Z	    isActive,
2025-09-16T23:46:08.251712Z	    isFeatured,
2025-09-16T23:46:08.25182Z	    isNew,
2025-09-16T23:46:08.251921Z	    _createdAt,
2025-09-16T23:46:08.252009Z	    _updatedAt
2025-09-16T23:46:08.252092Z	  
2025-09-16T23:46:08.252377Z	      },
2025-09-16T23:46:08.253019Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:46:08.253151Z	    }
2025-09-16T23:46:08.253261Z	  
2025-09-16T23:46:08.253372Z	Query parameters: {
2025-09-16T23:46:08.253487Z	  limit: 8,
2025-09-16T23:46:08.253581Z	  offset: 0,
2025-09-16T23:46:08.253665Z	  category: undefined,
2025-09-16T23:46:08.253788Z	  brand: 'littelfuse',
2025-09-16T23:46:08.254524Z	  featured: undefined
2025-09-16T23:46:08.254709Z	}
2025-09-16T23:46:08.254836Z	Fetching solutions with query: 
2025-09-16T23:46:08.254945Z	    {
2025-09-16T23:46:08.255058Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:08.25516Z	        
2025-09-16T23:46:08.255253Z	    _id,
2025-09-16T23:46:08.255402Z	    title,
2025-09-16T23:46:08.255567Z	    "slug": slug.current,
2025-09-16T23:46:08.25566Z	    summary,
2025-09-16T23:46:08.255764Z	    description,
2025-09-16T23:46:08.255844Z	    coverImage,
2025-09-16T23:46:08.255918Z	    primaryBrand->{
2025-09-16T23:46:08.255993Z	      _id,
2025-09-16T23:46:08.256067Z	      name,
2025-09-16T23:46:08.256145Z	      "slug": slug.current,
2025-09-16T23:46:08.256227Z	      logo
2025-09-16T23:46:08.256306Z	    },
2025-09-16T23:46:08.256408Z	    relatedBrands[]->{
2025-09-16T23:46:08.256515Z	      _id,
2025-09-16T23:46:08.256605Z	      name,
2025-09-16T23:46:08.256729Z	      "slug": slug.current,
2025-09-16T23:46:08.256834Z	      logo
2025-09-16T23:46:08.256925Z	    },
2025-09-16T23:46:08.257009Z	    targetMarket,
2025-09-16T23:46:08.257094Z	    complexity,
2025-09-16T23:46:08.257178Z	    publishedAt,
2025-09-16T23:46:08.257269Z	    isPublished,
2025-09-16T23:46:08.257376Z	    isFeatured,
2025-09-16T23:46:08.257486Z	    viewCount,
2025-09-16T23:46:08.257578Z	    _createdAt,
2025-09-16T23:46:08.257687Z	    _updatedAt
2025-09-16T23:46:08.257784Z	  
2025-09-16T23:46:08.257872Z	      },
2025-09-16T23:46:08.257981Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("litError: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:08.258079Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:08.258173Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:08.258263Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:08.258354Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:08.258456Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:08.258542Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:08.258623Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:08.25873Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:08.258821Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:08.258908Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:08.259003Z	  digest: '1870762441'
2025-09-16T23:46:08.25909Z	}
2025-09-16T23:46:08.259172Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:08.259292Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:08.259401Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:08.259515Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:08.259613Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:08.259729Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:08.259834Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:08.259924Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:08.26001Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:08.260095Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:08.260182Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:08.260267Z	  digest: '1870762441'
2025-09-16T23:46:08.260352Z	}
2025-09-16T23:46:08.260435Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:08.260539Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:08.260627Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:08.260736Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:08.260833Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:08.260928Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:08.26102Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:08.261111Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:08.261199Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:08.261292Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:08.261383Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:08.26148Z	  digest: '1870762441'
2025-09-16T23:46:08.261569Z	}
2025-09-16T23:46:08.261659Z	
2025-09-16T23:46:08.261769Z	Error occurred prerendering page "/ko/solutions/11111". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:08.261855Z	
2025-09-16T23:46:08.26195Z	Error: Objects are not valid as a React chtelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:46:08.262049Z	    }
2025-09-16T23:46:08.262149Z	  
2025-09-16T23:46:08.262236Z	Query parameters: {
2025-09-16T23:46:08.262322Z	  limit: 4,
2025-09-16T23:46:08.262409Z	  offset: 0,
2025-09-16T23:46:08.262503Z	  targetMarket: undefined,
2025-09-16T23:46:08.262588Z	  brand: 'littelfuse',
2025-09-16T23:46:08.262687Z	  featured: undefined
2025-09-16T23:46:08.262786Z	}
2025-09-16T23:46:08.262883Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:46:08.262978Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:08.263074Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:08.263161Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:46:08.263246Z	Fetching products with query: 
2025-09-16T23:46:08.263331Z	    {
2025-09-16T23:46:08.263414Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:08.263509Z	        
2025-09-16T23:46:08.26359Z	    _id,
2025-09-16T23:46:08.2637Z	    _type,
2025-09-16T23:46:08.263805Z	    partNumber,
2025-09-16T23:46:08.263894Z	    "slug": slug.current,
2025-09-16T23:46:08.263973Z	    title,
2025-09-16T23:46:08.264066Z	    shortDescription,
2025-09-16T23:46:08.264153Z	    image,
2025-09-16T23:46:08.264233Z	    brand->{
2025-09-16T23:46:08.264317Z	      name,
2025-09-16T23:46:08.264399Z	      "slug": slug.current,
2025-09-16T23:46:08.26449Z	      logo
2025-09-16T23:46:08.264575Z	    },
2025-09-16T23:46:08.264656Z	    category->{
2025-09-16T23:46:08.264761Z	      name,
2025-09-16T23:46:08.264847Z	      "slug": slug.current
2025-09-16T23:46:08.264932Z	    },
2025-09-16T23:46:08.265014Z	    pricing{
2025-09-16T23:46:08.265098Z	      currency,
2025-09-16T23:46:08.265176Z	      tiers[]{
2025-09-16T23:46:08.265258Z	        quantity,
2025-09-16T23:46:08.265337Z	        price,
2025-09-16T23:46:08.26542Z	        unit
2025-09-16T23:46:08.265516Z	      },
2025-09-16T23:46:08.265979Z	      moq,
2025-09-16T23:46:08.267493Z	      leadTime,
2025-09-16T23:46:08.267648Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:08.267811Z	      "price": tiers[0].price,
2025-09-16T23:46:08.267924Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:08.268039Z	    },
2025-09-16T23:46:08.26814Z	    inventory{
2025-09-16T23:46:08.268245Z	      quantity,
2025-09-16T23:46:08.268348Z	      status,
2025-09-16T23:46:08.268443Z	      warehouse,
2025-09-16T23:46:08.268559Z	      lastUpdated,
2025-09-16T23:46:08.268659Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:08.268783Z	      "inStock": status == "in_stock",
2025-09-16T23:46:08.268885Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:08.269484Z	    },
2025-09-16T23:46:08.269574Z	    isActive,
2025-09-16T23:46:08.269686Z	    isFeatured,
2025-09-16T23:46:08.269788Z	    isNew,
2025-09-16T23:46:08.269877Z	    _createdAt,
2025-09-16T23:46:08.269968Z	    _updatedAt
2025-09-16T23:46:08.270056Z	  
2025-09-16T23:46:08.270145Z	      },
2025-09-16T23:46:08.270231Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:46:08.270321Z	    }
2025-09-16T23:46:08.270408Z	  
2025-09-16T23:46:08.270502Z	Query parameters: {
2025-09-16T23:46:08.27058Z	  limit: 8,
2025-09-16T23:46:08.270657Z	  offset: 0,
2025-09-16T23:46:08.270773Z	  category: undefined,
2025-09-16T23:46:08.270869Z	  brand: 'qualcomm',
2025-09-16T23:46:08.270958Z	  featured: undefined
2025-09-16T23:46:08.27105Z	}
2025-09-16T23:46:08.272364Z	Fetching solutions with query: 
2025-09-16T23:46:08.27256Z	    {
2025-09-16T23:46:08.272732Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:08.272909Z	        
2025-09-16T23:46:08.273075Z	    _id,
2025-09-16T23:46:08.273252Z	    title,
2025-09-16T23:46:08.27339Z	    "slug": slug.current,
2025-09-16T23:46:08.325937Z	    summary,
2025-09-16T23:46:08.326115Z	    description,
2025-09-16T23:46:08.326238Z	    coverImage,
2025-09-16T23:46:08.326355Z	    primaryBrand->{
2025-09-16T23:46:08.32647Z	      _id,
2025-09-16T23:46:08.326596Z	      name,
2025-09-16T23:46:08.32673Z	      "slug": slug.current,
2025-09-16T23:46:08.326843Z	      logo
2025-09-16T23:46:08.327041Z	    },
2025-09-16T23:46:08.327155Z	    relatedBrands[]->{
2025-09-16T23:46:08.327249Z	      _id,
2025-09-16T23:46:08.327346Z	      name,
2025-09-16T23:46:08.327443Z	      "slug": slug.current,
2025-09-16T23:46:08.327539Z	      logo
2025-09-16T23:46:08.327636Z	    },
2025-09-16T23:46:08.327788Z	    targetMarket,
2025-09-16T23:46:08.328331Z	    complexity,
2025-09-16T23:46:08.328452Z	    publishedAt,
2025-09-16T23:46:08.328553Z	    isPublished,
2025-09-16T23:46:08.328654Z	    isFeatured,
2025-09-16T23:46:08.328788Z	    viewCount,
2025-09-16T23:46:08.328892Z	    _createdAt,
2025-09-16T23:46:08.328988Z	    _updatedAt
2025-09-16T23:46:08.329157Z	  
2025-09-16T23:46:08.329709Z	      },
2025-09-16T23:46:08.329871Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:46:08.32999Z	    }
2025-09-16T23:46:08.330091Z	  
2025-09-16T23:46:08.330184Z	Query parameters: {
2025-09-16T23:46:08.330272Z	  limit: 4,
2025-09-16T23:46:08.330687Z	  offset: 0,
2025-09-16T23:46:08.331177Z	  targetMarket: undefined,
2025-09-16T23:46:08.332342Z	  brand: 'qualcomm',
2025-09-16T23:46:08.332879Z	  featured: undefined
2025-09-16T23:46:08.333217Z	}
2025-09-16T23:46:08.333571Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:46:08.334024Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:08.334198Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:08.334631Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:46:08.33501Z	Fetching products with query: 
2025-09-16T23:46:08.335145Z	    {
2025-09-16T23:46:08.335254Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:08.335373Z	        
2025-09-16T23:46:08.335491Z	    _id,
2025-09-16T23:46:08.335616Z	    _type,
2025-09-16T23:46:08.335757Z	    partNumber,
2025-09-16T23:46:08.335905Z	    "slug": slug.current,
2025-09-16T23:46:08.336116Z	    title,
2025-09-16T23:46:08.336308Z	    shortDescription,
2025-09-16T23:46:08.336524Z	    image,
2025-09-16T23:46:08.336718Z	    brand->{
2025-09-16T23:46:08.336846Z	      name,
2025-09-16T23:46:08.336956Z	      "slug": slug.current,
2025-09-16T23:46:08.337077Z	      logo
2025-09-16T23:46:08.337245Z	    },
2025-09-16T23:46:08.337864Z	    category->{
2025-09-16T23:46:08.338063Z	      name,
2025-09-16T23:46:08.338215Z	      "slug": slug.current
2025-09-16T23:46:08.338324Z	    },
2025-09-16T23:46:08.33843Z	    pricing{
2025-09-16T23:46:08.338536Z	      currency,
2025-09-16T23:46:08.338634Z	      tiers[]{
2025-09-16T23:46:08.338754Z	        quantity,
2025-09-16T23:46:08.338981Z	        price,
2025-09-16T23:46:08.33916Z	        unit
2025-09-16T23:46:08.339311Z	      },
2025-09-16T23:46:08.339419Z	      moq,
2025-09-16T23:46:08.348581Z	      leadTime,
2025-09-16T23:46:08.348874Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:08.349555Z	      "price": tiers[0].price,
2025-09-16T23:46:08.350301Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:08.351315Z	    },
2025-09-16T23:46:08.351436Z	    inventory{
2025-09-16T23:46:08.351617Z	      quantity,
2025-09-16T23:46:08.351831Z	      status,
2025-09-16T23:46:08.351934Z	      warehouse,
2025-09-16T23:46:08.352116Z	      lastUpdated,
2025-09-16T23:46:08.352191Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:08.352403Z	      "inStock": status == "in_stock",
2025-09-16T23:46:08.35248Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:08.352538Z	    },
2025-09-16T23:46:08.352595Z	    isActive,
2025-09-16T23:46:08.352701Z	    isFeatured,
2025-09-16T23:46:08.352775Z	    isNew,
2025-09-16T23:46:08.353227Z	    _createdAt,
2025-09-16T23:46:08.353517Z	    _updatedAt
2025-09-16T23:46:08.353601Z	  
2025-09-16T23:46:08.353664Z	      },
2025-09-16T23:46:08.353925Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:46:08.354464Z	    }
2025-09-16T23:46:08.35464Z	  
2025-09-16T23:46:08.354811Z	Query parameters: {
2025-09-16T23:46:08.354945Z	  limit: 8,
2025-09-16T23:46:08.355044Z	  offset: 0,
2025-09-16T23:46:08.355185Z	  category: undefined,
2025-09-16T23:46:08.355314Z	  brand: 'qualcomm',
2025-09-16T23:46:08.35554Z	  featured: undefined
2025-09-16T23:46:08.355641Z	}
2025-09-16T23:46:08.355821Z	Fetching solutions with query: 
2025-09-16T23:46:08.355964Z	    {
2025-09-16T23:46:08.35612Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:08.356233Z	        
2025-09-16T23:46:08.356356Z	    _id,
2025-09-16T23:46:08.356555Z	    title,
2025-09-16T23:46:08.356738Z	    "slug": slug.current,
2025-09-16T23:46:08.356909Z	    summary,
2025-09-16T23:46:08.357046Z	    description,
2025-09-16T23:46:08.357232Z	    coverImage,
2025-09-16T23:46:08.357381Z	    primaryBrand->{
2025-09-16T23:46:08.3575Z	      _id,
2025-09-16T23:46:08.357624Z	      name,
2025-09-16T23:46:08.357775Z	      "slug": slug.current,
2025-09-16T23:46:08.357939Z	      logo
2025-09-16T23:46:08.358109Z	    },
2025-09-16T23:46:08.358292Z	    relatedBrands[]->{
2025-09-16T23:46:08.358428Z	      _id,
2025-09-16T23:46:08.358567Z	      name,
2025-09-16T23:46:08.358745Z	      "slug": slug.current,
2025-09-16T23:46:08.358901Z	      logo
2025-09-16T23:46:08.359018Z	    },
2025-09-16T23:46:08.359124Z	    targetMarket,
2025-09-16T23:46:08.359274Z	    complexity,
2025-09-16T23:46:08.359415Z	    publishedAt,
2025-09-16T23:46:08.359646Z	    isPublished,
2025-09-16T23:46:08.360767Z	    isFeatured,
2025-09-16T23:46:08.360939Z	    viewCount,
2025-09-16T23:46:08.361061Z	    _createdAt,
2025-09-16T23:46:08.361158Z	    _updatedAt
2025-09-16T23:46:08.361277Z	  
2025-09-16T23:46:08.36139Z	      },
2025-09-16T23:46:08.361497Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:46:08.361608Z	    }
2025-09-16T23:46:08.361763Z	  
2025-09-16T23:46:08.361873Z	Query parameters: {
2025-09-16T23:46:08.361971Z	  limit: 4,
2025-09-16T23:46:08.362069Z	  offset: 0,
2025-09-16T23:46:08.362183Z	  targetMarket: undefined,
2025-09-16T23:46:08.362286Z	  brand: 'qualcomm',
2025-09-16T23:46:08.362388Z	  featured: undefined
2025-09-16T23:46:08.362485Z	}
2025-09-16T23:46:08.362583Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:46:08.362773Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:08.363011Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:08.363208Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-16T23:46:08.363405Z	Fetching products with query: 
2025-09-16T23:46:08.363546Z	    {
2025-09-16T23:46:08.363703Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:08.364133Z	        
2025-09-16T23:46:08.364392Z	    _id,
2025-09-16T23:46:08.365029Z	    _type,
2025-09-16T23:46:08.365158Z	    partNumber,
2025-09-16T23:46:08.365258Z	    "slug": slug.current,
2025-09-16T23:46:08.36535Z	    title,
2025-09-16T23:46:08.365453Z	    shortDescription,
2025-09-16T23:46:08.365551Z	    image,
2025-09-16T23:46:08.365646Z	    brand->{
2025-09-16T23:46:08.365758Z	      name,
2025-09-16T23:46:08.365858Z	      "slug": slug.current,
2025-09-16T23:46:08.365955Z	      logo
2025-09-16T23:46:08.366044Z	    },
2025-09-16T23:46:08.366141Z	    category->{
2025-09-16T23:46:08.366251Z	      name,
2025-09-16T23:46:08.366376Z	      "slug": slug.current
2025-09-16T23:46:08.366531Z	    },
2025-09-16T23:46:08.366684Z	    pricing{
2025-09-16T23:46:08.366841Z	      currency,
2025-09-16T23:46:08.367223Z	      tiers[]{
2025-09-16T23:46:08.367367Z	        quantity,
2025-09-16T23:46:08.367497Z	        price,
2025-09-16T23:46:08.367638Z	        unit
2025-09-16T23:46:08.36781Z	      },
2025-09-16T23:46:08.368183Z	      moq,
2025-09-16T23:46:08.368338Z	      leadTime,
2025-09-16T23:46:08.36848Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:08.368605Z	      "price": tiers[0].price,
2025-09-16T23:46:08.368716Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:08.368808Z	    },
2025-09-16T23:46:08.368893Z	    inventory{
2025-09-16T23:46:08.368975Z	      quantity,
2025-09-16T23:46:08.36906Z	      status,
2025-09-16T23:46:08.36915Z	      warehouse,
2025-09-16T23:46:08.369252Z	      lastUpdated,
2025-09-16T23:46:08.369358Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:08.369483Z	      "inStock": status == "in_stock",
2025-09-16T23:46:08.369579Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:08.369696Z	    },
2025-09-16T23:46:08.369799Z	    isActive,
2025-09-16T23:46:08.369934Z	    isFeatured,
2025-09-16T23:46:08.370165Z	    isNew,
2025-09-16T23:46:08.370359Z	    _createdAt,
2025-09-16T23:46:08.371776Z	    _updatedAt
2025-09-16T23:46:08.37224Z	  
2025-09-16T23:46:08.372449Z	      },
2025-09-16T23:46:08.372619Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-16T23:46:08.372829Z	    }
2025-09-16T23:46:08.373013Z	  
2025-09-16T23:46:08.37318Z	Query parameters: {
2025-09-16T23:46:08.373341Z	  limit: 8,
2025-09-16T23:46:08.373496Z	  offset: 0,
2025-09-16T23:46:08.373693Z	  category: undefined,
2025-09-16T23:46:08.373859Z	  brand: 'epcos',
2025-09-16T23:46:08.374026Z	  featured: undefined
2025-09-16T23:46:08.374171Z	}
2025-09-16T23:46:08.374286Z	Fetching solutions with query: 
2025-09-16T23:46:08.37443Z	    {
2025-09-16T23:46:08.374595Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:08.374814Z	        
2025-09-16T23:46:08.374952Z	    _id,
2025-09-16T23:46:08.375717Z	    title,
2025-09-16T23:46:08.42449Z	    "slug": slug.current,
2025-09-16T23:46:08.425Z	    summary,
2025-09-16T23:46:08.425396Z	    description,
2025-09-16T23:46:08.425753Z	    coverImage,
2025-09-16T23:46:08.438799Z	    primaryBrand->{
2025-09-16T23:46:08.439089Z	      _id,
2025-09-16T23:46:08.439241Z	      name,
2025-09-16T23:46:08.439476Z	      "slug": slug.current,
2025-09-16T23:46:08.439991Z	      logo
2025-09-16T23:46:08.440106Z	    },
2025-09-16T23:46:08.440209Z	    relatedBrands[]->{
2025-09-16T23:46:08.440306Z	      _id,
2025-09-16T23:46:08.440412Z	      name,
2025-09-16T23:46:08.440555Z	      "slug": slug.current,
2025-09-16T23:46:08.440812Z	      logo
2025-09-16T23:46:08.441278Z	    },
2025-09-16T23:46:08.441548Z	    targetMarket,
2025-09-16T23:46:08.441801Z	    complexity,
2025-09-16T23:46:08.441923Z	    publishedAt,
2025-09-16T23:46:08.442021Z	    isPublished,
2025-09-16T23:46:08.442158Z	    isFeatured,
2025-09-16T23:46:08.442429Z	    viewCount,
2025-09-16T23:46:08.442538Z	    _createdAt,
2025-09-16T23:46:08.442638Z	    _updatedAt
2025-09-16T23:46:08.442758Z	  
2025-09-16T23:46:08.442881Z	      },
2025-09-16T23:46:08.443058Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-16T23:46:08.444931Z	    }
2025-09-16T23:46:08.445106Z	  
2025-09-16T23:46:08.445214Z	Query parameters: {
2025-09-16T23:46:08.445312Z	  limit: 4,
2025-09-16T23:46:08.445401Z	  offset: 0,
2025-09-16T23:46:08.445486Z	  targetMarket: undefined,
2025-09-16T23:46:08.44557Z	  brand: 'epcos',
2025-09-16T23:46:08.445684Z	  featured: undefined
2025-09-16T23:46:08.445828Z	}
2025-09-16T23:46:08.445938Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-16T23:46:08.446043Z	Fetching products with query: 
2025-09-16T23:46:08.446133Z	    {
2025-09-16T23:46:08.446222Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:08.446315Z	        
2025-09-16T23:46:08.446418Z	    _id,
2025-09-16T23:46:08.446509Z	    _type,
2025-09-16T23:46:08.446594Z	    partNumber,
2025-09-16T23:46:08.446714Z	    "slug": slug.current,
2025-09-16T23:46:08.446817Z	    title,
2025-09-16T23:46:08.446915Z	    shortDescription,
2025-09-16T23:46:08.447058Z	    image,
2025-09-16T23:46:08.44716Z	    brand->{
2025-09-16T23:46:08.447258Z	      name,
2025-09-16T23:46:08.447353Z	      "slug": slug.current,
2025-09-16T23:46:08.447445Z	      logo
2025-09-16T23:46:08.447708Z	    },
2025-09-16T23:46:08.447915Z	    category->{
2025-09-16T23:46:08.448086Z	      name,
2025-09-16T23:46:08.448208Z	      "slug": slug.current
2025-09-16T23:46:08.448317Z	    },
2025-09-16T23:46:08.448443Z	    pricing{
2025-09-16T23:46:08.448548Z	      currency,
2025-09-16T23:46:08.448645Z	      tiers[]{
2025-09-16T23:46:08.448762Z	        quantity,
2025-09-16T23:46:08.448857Z	        price,
2025-09-16T23:46:08.448949Z	        unit
2025-09-16T23:46:08.449046Z	      },
2025-09-16T23:46:08.44914Z	      moq,
2025-09-16T23:46:08.449233Z	      leadTime,
2025-09-16T23:46:08.449321Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:08.449433Z	      "price": tiers[0].price,
2025-09-16T23:46:08.449533Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:08.449633Z	    },
2025-09-16T23:46:08.449744Z	    inventory{
2025-09-16T23:46:08.449848Z	      quantity,
2025-09-16T23:46:08.449943Z	      status,
2025-09-16T23:46:08.45004Z	      warehouse,
2025-09-16T23:46:08.450138Z	      lastUpdated,
2025-09-16T23:46:08.45027Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:08.450399Z	      "inStock": status == "in_stock",
2025-09-16T23:46:08.450523Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:08.450618Z	    },
2025-09-16T23:46:08.450729Z	    isActive,
2025-09-16T23:46:08.450921Z	    isFeatured,
2025-09-16T23:46:08.45106Z	    isNew,
2025-09-16T23:46:08.451147Z	    _createdAt,
2025-09-16T23:46:08.45123Z	    _updatedAt
2025-09-16T23:46:08.451315Z	  
2025-09-16T23:46:08.45142Z	      },
2025-09-16T23:46:08.451506Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-16T23:46:08.451604Z	    }
2025-09-16T23:46:08.45172Z	  
2025-09-16T23:46:08.451843Z	Query parameters: {
2025-09-16T23:46:08.451964Z	  limit: 8,
2025-09-16T23:46:08.452068Z	  offset: 0,
2025-09-16T23:46:08.452162Z	  category: undefined,
2025-09-16T23:46:08.452261Z	  brand: 'epcos',
2025-09-16T23:46:08.452354Z	  featured: undefined
2025-09-16T23:46:08.452457Z	}
2025-09-16T23:46:08.45255Z	Fetching solutions with query: 
2025-09-16T23:46:08.452641Z	    {
2025-09-16T23:46:08.452773Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:08.452908Z	        
2025-09-16T23:46:08.453053Z	    _id,
2025-09-16T23:46:08.453162Z	    title,
2025-09-16T23:46:08.453256Z	    "slug": slug.current,
2025-09-16T23:46:08.45336Z	    summary,
2025-09-16T23:46:08.453475Z	    description,
2025-09-16T23:46:08.45358Z	    coverImage,
2025-09-16T23:46:08.453695Z	    primaryBrand->{
2025-09-16T23:46:08.453867Z	      _id,
2025-09-16T23:46:08.454139Z	      name,
2025-09-16T23:46:08.454274Z	      "slug": slug.current,
2025-09-16T23:46:08.454719Z	      logo
2025-09-16T23:46:08.454901Z	    },
2025-09-16T23:46:08.455129Z	    relatedBrands[]->{
2025-09-16T23:46:08.455341Z	      _id,
2025-09-16T23:46:08.455486Z	      name,
2025-09-16T23:46:08.4557Z	      "slug": slug.current,
2025-09-16T23:46:08.455835Z	      logo
2025-09-16T23:46:08.455996Z	    },
2025-09-16T23:46:08.456146Z	    targetMarket,
2025-09-16T23:46:08.456301Z	    complexity,
2025-09-16T23:46:08.45645Z	    publishedAt,
2025-09-16T23:46:08.45667Z	    isPublished,
2025-09-16T23:46:08.456827Z	    isFeatured,
2025-09-16T23:46:08.457Z	    viewCount,
2025-09-16T23:46:08.457155Z	    _createdAt,
2025-09-16T23:46:08.457302Z	    _updatedAt
2025-09-16T23:46:08.457449Z	  
2025-09-16T23:46:08.457583Z	      },
2025-09-16T23:46:08.457754Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-16T23:46:08.457867Z	    }
2025-09-16T23:46:08.457968Z	  
2025-09-16T23:46:08.458069Z	Query parameters: {
2025-09-16T23:46:08.458268Z	  limit: 4,
2025-09-16T23:46:08.458376Z	  offset: 0,
2025-09-16T23:46:08.458732Z	  targetMarket: undefined,
2025-09-16T23:46:08.459061Z	  brand: 'epcos',
2025-09-16T23:46:08.459542Z	  featured: undefined
2025-09-16T23:46:08.459734Z	}
2025-09-16T23:46:08.459872Z	✅ [getBrandData] Found brand: Epcos
2025-09-16T23:46:08.460131Z	✅ [getBrandData] Found brand: Epcos
2025-09-16T23:46:08.460369Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:08.460762Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:08.460926Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:08.461072Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:08.461212Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:46:08.461355Z	Fetching products with query: 
2025-09-16T23:46:08.461513Z	    {
2025-09-16T23:46:08.461632Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:08.461808Z	        
2025-09-16T23:46:08.461974Z	    _id,
2025-09-16T23:46:08.462083Z	    _type,
2025-09-16T23:46:08.462215Z	    partNumber,
2025-09-16T23:46:08.462341Z	    "slug": slug.current,
2025-09-16T23:46:08.462453Z	    title,
2025-09-16T23:46:08.462618Z	    shortDescription,
2025-09-16T23:46:08.462735Z	    image,
2025-09-16T23:46:08.462836Z	    brand->{
2025-09-16T23:46:08.462929Z	      name,
2025-09-16T23:46:08.463256Z	      "slug": slug.current,
2025-09-16T23:46:08.46386Z	      logo
2025-09-16T23:46:08.464342Z	    },
2025-09-16T23:46:08.464499Z	    category->{
2025-09-16T23:46:08.464787Z	      name,
2025-09-16T23:46:08.464967Z	      "slug": slug.current
2025-09-16T23:46:08.465116Z	    },
2025-09-16T23:46:08.465255Z	    pricing{
2025-09-16T23:46:08.46556Z	      currency,
2025-09-16T23:46:08.467861Z	      tiers[]{
2025-09-16T23:46:08.468065Z	        quantity,
2025-09-16T23:46:08.468462Z	        price,
2025-09-16T23:46:08.468595Z	        unit
2025-09-16T23:46:08.468739Z	      },
2025-09-16T23:46:08.468851Z	      moq,
2025-09-16T23:46:08.468952Z	      leadTime,
2025-09-16T23:46:08.469055Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:08.469164Z	      "price": tiers[0].price,
2025-09-16T23:46:08.469266Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:08.46937Z	    },
2025-09-16T23:46:08.469495Z	    inventory{
2025-09-16T23:46:08.469603Z	      quantity,
2025-09-16T23:46:08.46974Z	      status,
2025-09-16T23:46:08.46985Z	      warehouse,
2025-09-16T23:46:08.469952Z	      lastUpdated,
2025-09-16T23:46:08.470045Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:08.470147Z	      "inStock": status == "in_stock",
2025-09-16T23:46:08.470249Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:08.470349Z	    },
2025-09-16T23:46:08.470471Z	    isActive,
2025-09-16T23:46:08.470584Z	    isFeatured,
2025-09-16T23:46:08.470746Z	    isNew,
2025-09-16T23:46:08.470868Z	    _createdAt,
2025-09-16T23:46:08.470989Z	    _updatedAt
2025-09-16T23:46:08.471108Z	  
2025-09-16T23:46:08.472718Z	      },
2025-09-16T23:46:08.472917Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:46:08.527991Z	    }
2025-09-16T23:46:08.52831Z	  
2025-09-16T23:46:08.528558Z	Query parameters: {
2025-09-16T23:46:08.528832Z	  limit: 8,
2025-09-16T23:46:08.529115Z	  offset: 0,
2025-09-16T23:46:08.52924Z	  category: undefined,
2025-09-16T23:46:08.529346Z	  brand: 'qualcomm',
2025-09-16T23:46:08.529444Z	  featured: undefined
2025-09-16T23:46:08.529545Z	}
2025-09-16T23:46:08.529638Z	Fetching solutions with query: 
2025-09-16T23:46:08.52977Z	    {
2025-09-16T23:46:08.529874Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:08.529996Z	        
2025-09-16T23:46:08.530519Z	    _id,
2025-09-16T23:46:08.530663Z	    title,
2025-09-16T23:46:08.53087Z	    "slug": slug.current,
2025-09-16T23:46:08.531019Z	    summary,
2025-09-16T23:46:08.531124Z	    description,
2025-09-16T23:46:08.531234Z	    coverImage,
2025-09-16T23:46:08.531325Z	    primaryBrand->{
2025-09-16T23:46:08.531427Z	      _id,
2025-09-16T23:46:08.531534Z	      name,
2025-09-16T23:46:08.531743Z	 ild (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:08.531963Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:08.532135Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:08.532288Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:08.532529Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:08.532697Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:08.532822Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:08.532935Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:08.533038Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:08.533133Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:08.533237Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:08.533333Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:08.533433Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:08.533533Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:08.533648Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:08.533782Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:08.5339Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:08.534132Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:08.534441Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:08.535076Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:08.535308Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:08.535493Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:08.535712Z	  digest: '1870762441'
2025-09-16T23:46:08.535879Z	}
2025-09-16T23:46:08.53603Z	
2025-09-16T23:46:08.536156Z	Error occurred prerendering page "/ko/solutions/supplysolution". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:08.536537Z	
2025-09-16T23:46:08.536832Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:08.537001Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:08.537182Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:08.537297Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:08.537421Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:08.537666Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:08.537897Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:08.538049Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:08.538165Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:08.538265Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:08.538367Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:08.538508Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:08.538623Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70     "slug": slug.current,
2025-09-16T23:46:08.538756Z	      logo
2025-09-16T23:46:08.53887Z	    },
2025-09-16T23:46:08.538975Z	    relatedBrands[]->{
2025-09-16T23:46:08.53909Z	      _id,
2025-09-16T23:46:08.539194Z	      name,
2025-09-16T23:46:08.539343Z	      "slug": slug.current,
2025-09-16T23:46:08.53947Z	      logo
2025-09-16T23:46:08.539576Z	    },
2025-09-16T23:46:08.539723Z	    targetMarket,
2025-09-16T23:46:08.539896Z	    complexity,
2025-09-16T23:46:08.540013Z	    publishedAt,
2025-09-16T23:46:08.540173Z	    isPublished,
2025-09-16T23:46:08.540278Z	    isFeatured,
2025-09-16T23:46:08.540393Z	    viewCount,
2025-09-16T23:46:08.540524Z	    _createdAt,
2025-09-16T23:46:08.54064Z	    _updatedAt
2025-09-16T23:46:08.540965Z	  
2025-09-16T23:46:08.541282Z	      },
2025-09-16T23:46:08.541468Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:46:08.541701Z	    }
2025-09-16T23:46:08.541877Z	  
2025-09-16T23:46:08.541982Z	Query parameters: {
2025-09-16T23:46:08.542081Z	  limit: 4,
2025-09-16T23:46:08.542171Z	  offset: 0,
2025-09-16T23:46:08.54226Z	  targetMarket: undefined,
2025-09-16T23:46:08.542353Z	  brand: 'qualcomm',
2025-09-16T23:46:08.542469Z	  featured: undefined
2025-09-16T23:46:08.542631Z	}
2025-09-16T23:46:08.543381Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:46:08.5436Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:08.544035Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:08.544617Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:46:08.545658Z	Fetching products with query: 
2025-09-16T23:46:08.545863Z	    {
2025-09-16T23:46:08.545984Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:08.546095Z	        
2025-09-16T23:46:08.546201Z	    _id,
2025-09-16T23:46:08.546308Z	    _type,
2025-09-16T23:46:08.546404Z	    partNumber,
2025-09-16T23:46:08.546548Z	    "slug": slug.current,
2025-09-16T23:46:08.546659Z	    title,
2025-09-16T23:46:08.547848Z	    shortDescription,
2025-09-16T23:46:08.548014Z	    image,
2025-09-16T23:46:08.548121Z	    brand->{
2025-09-16T23:46:08.548218Z	      name,
2025-09-16T23:46:08.548302Z	      "slug": slug.current,
2025-09-16T23:46:08.548397Z	      logo
2025-09-16T23:46:08.54849Z	    },
2025-09-16T23:46:08.548587Z	    category->{
2025-09-16T23:46:08.548744Z	      name,
2025-09-16T23:46:08.548861Z	      "slug": slug.current
2025-09-16T23:46:08.548971Z	    },
2025-09-16T23:46:08.54907Z	    pricing{
2025-09-16T23:46:08.549159Z	      currency,
2025-09-16T23:46:08.549259Z	      tiers[]{
2025-09-16T23:46:08.549353Z	        quantity,
2025-09-16T23:46:08.549456Z	        price,
2025-09-16T23:46:08.549549Z	        unit
2025-09-16T23:46:08.54966Z	      },
2025-09-16T23:46:08.54979Z	      moq,
2025-09-16T23:46:08.549899Z	      leadTime,
2025-09-16T23:46:08.550008Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:08.550114Z	      "price": tiers[0].price,
2025-09-16T23:46:08.55021Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:08.550308Z	    },
2025-09-16T23:46:08.5504Z	    inventory{
2025-09-16T23:46:08.55049Z	      quantity,
2025-09-16T23:46:08.550589Z	      status,
2025-09-16T23:46:08.550731Z	      warehouse,
2025-09-16T23:46:08.550834Z	      lastUpdated,
2025-09-16T23:46:08.550929Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:08.551031Z	      "inStock": status == "in_stock",
2025-09-16T23:46:08.551184Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:08.551303Z	    },
2025-09-16T23:46:08.551405Z	    isActive,
2025-09-16T23:46:08.551513Z	    isFeatured,
2025-09-16T23:46:08.551618Z	    isNew,
2025-09-16T23:46:08.551758Z	    _createdAt,
2025-09-16T23:46:08.551866Z	    _updatedAt
2025-09-16T23:46:08.551963Z	  
2025-09-16T23:46:08.55206Z	      },
2025-09-16T23:46:08.552166Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:46:08.552282Z	    }
2025-09-16T23:46:08.552389Z	  
2025-09-16T23:46:08.552492Z	Query parameters: {
2025-09-16T23:46:08.552599Z	  limit: 8,
2025-09-16T23:46:08.552747Z	  offset: 0,
2025-09-16T23:46:08.552866Z	  category: undefined,
2025-09-16T23:46:08.552971Z	  brand: 'qualcomm',
2025-09-16T23:46:08.553074Z	  featured: undefined
2025-09-16T23:46:08.553183Z	}
2025-09-16T23:46:08.553291Z	Fetching solutions with query: 
2025-09-16T23:46:08.553396Z	    {
2025-09-16T23:46:08.553504Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:08.553648Z	        
2025-09-16T23:46:08.553801Z	    _id,
2025-09-16T23:46:08.553915Z	    title,
2025-09-16T23:46:08.554021Z	    "slug": slug.current,
2025-09-16T23:46:08.554123Z	    summary,
2025-09-16T23:46:08.55422Z	    description,
2025-09-16T23:46:08.554315Z	    coverImage,
2025-09-16T23:46:08.554417Z	    primaryBrand->{
2025-09-16T23:46:08.554524Z	      _id,
2025-09-16T23:46:08.554638Z	      name,
2025-09-16T23:46:08.554784Z	      "slug": slug.current,
2025-09-16T23:46:08.554899Z	      logo
2025-09-16T23:46:08.555001Z	    },
2025-09-16T23:46:08.5551Z	    relatedBrands[]->{
2025-09-16T23:46:08.555221Z	      _id,
2025-09-16T23:46:08.555325Z	      name,
2025-09-16T23:46:08.55543Z	      "slug": slug.current,
2025-09-16T23:46:08.55553Z	      logo
2025-09-16T23:46:08.555621Z	    },
2025-09-16T23:46:08.555752Z	    targetMarket,
2025-09-16T23:46:08.555871Z	    complexity,
2025-09-16T23:46:08.555995Z	    publishedAt,
2025-09-16T23:46:08.556765Z	    isPublished,
2025-09-16T23:46:08.556923Z	    isFeatured,
2025-09-16T23:46:08.557066Z	    viewCount,
2025-09-16T23:46:08.557186Z	    _createdAt,
2025-09-16T23:46:08.557301Z	    _updatedAt
2025-09-16T23:46:08.557404Z	  
2025-09-16T23:46:08.557496Z	      },
2025-09-16T23:46:08.557592Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:46:08.557739Z	    }
2025-09-16T23:46:08.557858Z	  
2025-09-16T23:46:08.557972Z	Query parameters: {
2025-09-16T23:46:08.558071Z	  limit: 4,
2025-09-16T23:46:08.558768Z	  offset: 0,
2025-09-16T23:46:08.559009Z	  targetMarket: undefined,
2025-09-16T23:46:08.559119Z	  brand: 'qualcomm',
2025-09-16T23:46:08.559282Z	  featured: undefined
2025-09-16T23:46:08.559394Z	}
2025-09-16T23:46:08.559504Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:46:08.559718Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:08.559917Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:08.560127Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-16T23:46:08.560255Z	Fetching products with query: 
2025-09-16T23:46:08.560361Z	    {
2025-09-16T23:46:08.560463Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:08.560564Z	        
2025-09-16T23:46:08.560688Z	    _id,
2025-09-16T23:46:08.560806Z	    _type,
2025-09-16T23:46:08.560899Z	    partNumber,
2025-09-16T23:46:08.56099Z	    "slug": slug.current,
2025-09-16T23:46:08.561078Z	    title,
2025-09-16T23:46:08.561169Z	    shortDescription,
2025-09-16T23:46:08.561266Z	    image,
2025-09-16T23:46:08.561362Z	    brand->{
2025-09-16T23:46:08.561459Z	      name,
2025-09-16T23:46:08.561555Z	      "slug": slug.current,
2025-09-16T23:46:08.561649Z	      logo
2025-09-16T23:46:08.562047Z	    },
2025-09-16T23:46:08.56216Z	    category->{
2025-09-16T23:46:08.562254Z	      name,
2025-09-16T23:46:08.562471Z	      "slug": slug.current
2025-09-16T23:46:08.5626Z	    },
2025-09-16T23:46:08.56273Z	    pricing{
2025-09-16T23:46:08.56284Z	      currency,
2025-09-16T23:46:08.562961Z	      tiers[]{
2025-09-16T23:46:08.563084Z	        quantity,
2025-09-16T23:46:08.563192Z	        price,
2025-09-16T23:46:08.563291Z	        unit
2025-09-16T23:46:08.563389Z	      },
2025-09-16T23:46:08.563519Z	      moq,
2025-09-16T23:46:08.563636Z	      leadTime,
2025-09-16T23:46:08.563781Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:08.563906Z	      "price": tiers[0].price,
2025-09-16T23:46:08.564038Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:08.564147Z	    },
2025-09-16T23:46:08.564247Z	    inventory{
2025-09-16T23:46:08.564349Z	      quantity,
2025-09-16T23:46:08.564449Z	      status,
2025-09-16T23:46:08.56455Z	      warehouse,
2025-09-16T23:46:08.564653Z	      lastUpdated,
2025-09-16T23:46:08.564774Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:08.564838Z	      "inStock": status == "in_stock",
2025-09-16T23:46:08.564896Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:08.564951Z	    },
2025-09-16T23:46:08.565006Z	    isActive,
2025-09-16T23:46:08.565061Z	    isFeatured,
2025-09-16T23:46:08.565115Z	    isNew,
2025-09-16T23:46:08.565186Z	    _createdAt,
2025-09-16T23:46:08.565254Z	    _updatedAt
2025-09-16T23:46:08.56531Z	  
2025-09-16T23:46:08.565363Z	      },
2025-09-16T23:46:08.565421Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-16T23:46:08.56548Z	    }
2025-09-16T23:46:08.565538Z	  
2025-09-16T23:46:08.565593Z	Query parameters: {
2025-09-16T23:46:08.565645Z	  limit: 8,
2025-09-16T23:46:08.565759Z	  offset: 0,
2025-09-16T23:46:08.565824Z	  category: undefined,
2025-09-16T23:46:08.565879Z	  brand: 'lem',
2025-09-16T23:46:08.565982Z	  featured: undefined
2025-09-16T23:46:08.566038Z	}
2025-09-16T23:46:08.566093Z	Fetching solutions with query: 
2025-09-16T23:46:08.566147Z	    {
2025-09-16T23:46:08.566202Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:08.566319Z	        
2025-09-16T23:46:08.566507Z	    _id,
2025-09-16T23:46:08.566684Z	    title,
2025-09-16T23:46:08.566806Z	    "slug": slug.current,
2025-09-16T23:46:08.566912Z	    summary,
2025-09-16T23:46:08.567013Z	    description,
2025-09-16T23:46:08.567201Z	    coverImage,
2025-09-16T23:46:08.567322Z	    primaryBrand->{
2025-09-16T23:46:08.567461Z	      _id,
2025-09-16T23:46:08.567611Z	      name,
2025-09-16T23:46:08.567768Z	      "slug": slug.current,
2025-09-16T23:46:08.567878Z	      logo
2025-09-16T23:46:08.567978Z	    },
2025-09-16T23:46:08.568069Z	    relatedBrands[]->{
2025-09-16T23:46:08.568168Z	      _id,
2025-09-16T23:46:08.568316Z	      name,
2025-09-16T23:46:08.568422Z	      "slug": slug.current,
2025-09-16T23:46:08.568508Z	      logo
2025-09-16T23:46:08.568592Z	    },
2025-09-16T23:46:08.568714Z	    targetMarket,
2025-09-16T23:46:08.568811Z	    complexity,
2025-09-16T23:46:08.568892Z	    publishedAt,
2025-09-16T23:46:08.568973Z	    isPublished,
2025-09-16T23:46:08.569056Z	    isFeatured,
2025-09-16T23:46:08.56915Z	    viewCount,
2025-09-16T23:46:08.569423Z	    _createdAt,
2025-09-16T23:46:08.569748Z	    _updatedAt
2025-09-16T23:46:08.570075Z	  
2025-09-16T23:46:08.570373Z	      },
2025-09-16T23:46:08.570514Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-16T23:46:08.573922Z	    }
2025-09-16T23:46:08.574095Z	  
2025-09-16T23:46:08.574249Z	Query parameters: {
2025-09-16T23:46:08.574372Z	  limit: 4,
2025-09-16T23:46:08.57455Z	  offset: 0,
2025-09-16T23:46:08.574742Z	  targetMarket: undefined,
2025-09-16T23:46:08.574856Z	  brand: 'lem',
2025-09-16T23:46:08.574947Z	  featured: undefined
2025-09-16T23:46:08.575037Z	}
2025-09-16T23:46:08.57513Z	✅ [getBrandData] Found brand: LEM
2025-09-16T23:46:08.575286Z	Products fetch result: {
2025-09-16T23:46:08.575436Z	  totalProducts: 3,
2025-09-16T23:46:08.575571Z	  fetchedProducts: 3,
2025-09-16T23:46:08.575718Z	  firstProduct: {
2025-09-16T23:46:08.575849Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-16T23:46:08.576004Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-16T23:46:08.576158Z	    _type: 'product',
2025-09-16T23:46:08.576299Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-16T23:46:08.576546Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-16T23:46:08.576721Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-16T23:46:08.576878Z	    image: null,
2025-09-16T23:46:08.577022Z	    inventory: {
2025-09-16T23:46:08.577179Z	      inStock: true,
2025-09-16T23:46:08.577324Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-16T23:46:08.577601Z	      quantity: 0,
2025-09-16T23:46:08.62826Z	      status: 'in_stock',
2025-09-16T23:46:08.628505Z	      warehouse: null
2025-09-16T23:46:08.62863Z	    },
2025-09-16T23:46:08.62879Z	    isActive: true,
2025-09-16T23:46:08.628908Z	    isFeatured: false,
2025-09-16T23:46:08.629011Z	    isNew: false,
2025-09-16T23:46:08.629113Z	    partNumber: 'la55-p',
2025-09-16T23:46:08.629215Z	    pricing: {
2025-09-16T23:46:08.629312Z	      currency: 'CNY',
2025-09-16T23:46:08.62941Z	      leadTime: null,
2025-09-16T23:46:08.629513Z	      moq: null,
2025-09-16T23:46:08.629631Z	      price: null,
2025-09-16T23:46:08.629941Z	      tiers: null
2025-09-16T23:46:08.630043Z	    },
2025-09-16T23:46:08.630141Z	    shortDescription: '电流传感器la55-p',
2025-09-16T23:46:08.63128Z	    slug: 'la55-p',
2025-09-16T23:46:08.631417Z	    title: '电流传感器la55-p'
2025-09-16T23:46:08.631528Z	  }
2025-09-16T23:46:08.631645Z	}
2025-09-16T23:46:08.632094Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:08.632224Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-16T23:46:08.632331Z	Fetching products with query: 
2025-09-16T23:46:08.632752Z	    {
2025-09-16T23:46:08.632917Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:08.633036Z	        
2025-09-16T23:46:08.633142Z	    _id,
2025-09-16T23:46:08.633234Z	    _type,
2025-09-16T23:46:08.633331Z	    partNumber,
2025-09-16T23:46:08.633436Z	    "slug": slug.current,
2025-09-16T23:46:08.633594Z	    title,
2025-09-16T23:46:08.633758Z	    shortDescription,
2025-09-16T23:46:08.633909Z	    image,
2025-09-16T23:46:08.63416Z	    brand->{
2025-09-16T23:46:08.634361Z	      name,
2025-09-16T23:46:08.634588Z	      "slug": slug.current,
2025-09-16T23:46:08.634824Z	      logo
2025-09-16T23:46:08.634985Z	    },
2025-09-16T23:46:08.635104Z	    category->{
2025-09-16T23:46:08.635205Z	      name,
2025-09-16T23:46:08.635321Z	      "slug": slug.current
2025-09-16T23:46:08.635418Z	    },
2025-09-16T23:46:08.635512Z	    pricing{
2025-09-16T23:46:08.635605Z	      currency,
2025-09-16T23:46:08.635745Z	      tiers[]{
2025-09-16T23:46:08.635856Z	        quantity,
2025-09-16T23:46:08.636011Z	        price,
2025-09-16T23:46:08.636142Z	        unit
2025-09-16T23:46:08.636244Z	      },
2025-09-16T23:46:08.636381Z	      moq,
2025-09-16T23:46:08.636709Z	      leadTime,
2025-09-16T23:46:08.636919Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:08.637063Z	      "price": tiers[0].price,
2025-09-16T23:46:08.63717Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:08.637278Z	    },
2025-09-16T23:46:08.637377Z	    inventory{
2025-09-16T23:46:08.637474Z	      quantity,
2025-09-16T23:46:08.637581Z	      status,
2025-09-16T23:46:08.637721Z	      warehouse,
2025-09-16T23:46:08.637839Z	      lastUpdated,
2025-09-16T23:46:08.637951Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:08.638057Z	      "inStock": status == "in_stock",
2025-09-16T23:46:08.638749Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:08.63994Z	    },
2025-09-16T23:46:08.640649Z	    isActive,
2025-09-16T23:46:08.64136Z	    isFeatured,
2025-09-16T23:46:08.642006Z	    isNew,
2025-09-16T23:46:08.642237Z	    _createdAt,
2025-09-16T23:46:08.642464Z	    _updatedAt
2025-09-16T23:46:08.643849Z	  
2025-09-16T23:46:08.644064Z	      },
2025-09-16T23:46:08.644271Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-16T23:46:08.644511Z	    }
2025-09-16T23:46:08.644689Z	  
2025-09-16T23:46:08.644816Z	Query parameters: {
2025-09-16T23:46:08.644926Z	  limit: 8,
2025-09-16T23:46:08.645965Z	  offset: 0,
2025-09-16T23:46:08.646128Z	  category: undefined,
2025-09-16T23:46:08.646244Z	  brand: 'lem',
2025-09-16T23:46:08.646347Z	  featured: undefined
2025-09-16T23:46:08.646463Z	}
2025-09-16T23:46:08.647105Z	Fetching solutions with query: 
2025-09-16T23:46:08.647246Z	    {
2025-09-16T23:46:08.64738Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:08.647502Z	        
2025-09-16T23:46:08.647664Z	    _id,
2025-09-16T23:46:08.647805Z	    title,
2025-09-16T23:46:08.647973Z	    "slug": slug.current,
2025-09-16T23:46:08.648126Z	    summary,
2025-09-16T23:46:08.648281Z	    description,
2025-09-16T23:46:08.648415Z	    coverImage,
2025-09-16T23:46:08.648549Z	    primaryBrand->{
2025-09-16T23:46:08.648713Z	      _id,
2025-09-16T23:46:08.64885Z	      name,
2025-09-16T23:46:08.649072Z	      "slug": slug.current,
2025-09-16T23:46:08.649212Z	      logo
2025-09-16T23:46:08.649321Z	    },
2025-09-16T23:46:08.649443Z	    relatedBrands[]->{
2025-09-16T23:46:08.649543Z	      _id,
2025-09-16T23:46:08.649633Z	      name,
2025-09-16T23:46:08.649743Z	      "slug": slug.current,
2025-09-16T23:46:08.649867Z	      logo
2025-09-16T23:46:08.649985Z	    },
2025-09-16T23:46:08.650129Z	    targetMarket,
2025-09-16T23:46:08.650236Z	    complexity,
2025-09-16T23:46:08.650342Z	    publishedAt,
2025-09-16T23:46:08.650448Z	    isPublished,
2025-09-16T23:46:08.650552Z	    isFeatured,
2025-09-16T23:46:08.650686Z	    viewCount,
2025-09-16T23:46:08.650804Z	    _createdAt,
2025-09-16T23:46:08.651727Z	    _updatedAt
2025-09-16T23:46:08.65188Z	  
2025-09-16T23:46:08.651991Z	      },
2025-09-16T23:46:08.652095Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-16T23:46:08.652194Z	    }
2025-09-16T23:46:08.652303Z	  
2025-09-16T23:46:08.652421Z	Query parameters: {
2025-09-16T23:46:08.652532Z	  limit: 4,
2025-09-16T23:46:08.652641Z	  offset: 0,
2025-09-16T23:46:08.652771Z	  targetMarket: undefined,
2025-09-16T23:46:08.652876Z	  brand: 'lem',
2025-09-16T23:46:08.652982Z	  featured: undefined
2025-09-16T23:46:08.653084Z	}
2025-09-16T23:46:08.65319Z	✅ [getBrandData] Found brand: LEM
2025-09-16T23:46:08.653316Z	Products fetch result: {
2025-09-16T23:46:08.653451Z	  totalProducts: 3,
2025-09-16T23:46:08.653571Z	  fetchedProducts: 3,
2025-09-16T23:46:08.653701Z	  firstProduct: {
2025-09-16T23:46:08.653821Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-16T23:46:08.65411Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-16T23:46:08.654235Z	    _type: 'product',
2025-09-16T23:46:08.65435Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-16T23:46:08.654476Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-16T23:46:08.654588Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-16T23:46:08.654732Z	    image: null,
2025-09-16T23:46:08.654842Z	    inventory: {
2025-09-16T23:46:08.654937Z	      inStock: true,
2025-09-16T23:46:08.655045Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-16T23:46:08.655145Z	      quantity: 0,
2025-09-16T23:46:08.655241Z	      status: 'in_stock',
2025-09-16T23:46:08.655339Z	      warehouse: null
2025-09-16T23:46:08.655453Z	    },
2025-09-16T23:46:08.655555Z	    isActive: true,
2025-09-16T23:46:08.655669Z	    isFeatured: false,
2025-09-16T23:46:08.655804Z	    isNew: false,
2025-09-16T23:46:08.655915Z	    partNumber: 'la55-p',
2025-09-16T23:46:08.656016Z	    pricing: {
2025-09-16T23:46:08.656123Z	      currency: 'CNY',
2025-09-16T23:46:08.656219Z	      leadTime: null,
2025-09-16T23:46:08.656315Z	      moq: null,
2025-09-16T23:46:08.65642Z	      price: null,
2025-09-16T23:46:08.656538Z	      tiers: null
2025-09-16T23:46:08.656642Z	    },
2025-09-16T23:46:08.656761Z	    shortDescription: '电流传感器la55-p',
2025-09-16T23:46:08.656865Z	    slug: 'la55-p',
2025-09-16T23:46:08.656966Z	    title: '电流传感器la55-p'
2025-09-16T23:46:08.657063Z	  }
2025-09-16T23:46:08.657168Z	}
2025-09-16T23:46:08.657271Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:08.657395Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-16T23:46:08.657501Z	Fetching products with query: 
2025-09-16T23:46:08.657608Z	    {
2025-09-16T23:46:08.657752Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:08.65787Z	        
2025-09-16T23:46:08.658417Z	    _id,
2025-09-16T23:46:08.658537Z	    _type,
2025-09-16T23:46:08.658646Z	    partNumber,
2025-09-16T23:46:08.658782Z	    "slug": slug.current,
2025-09-16T23:46:08.65889Z	    title,
2025-09-16T23:46:08.658979Z	    shortDescription,
2025-09-16T23:46:08.659071Z	    image,
2025-09-16T23:46:08.659167Z	    brand->{
2025-09-16T23:46:08.659283Z	      name,
2025-09-16T23:46:08.659404Z	      "slug": slug.current,
2025-09-16T23:46:08.659509Z	      logo
2025-09-16T23:46:08.659961Z	    },
2025-09-16T23:46:08.660102Z	    category->{
2025-09-16T23:46:08.660758Z	      name,
2025-09-16T23:46:08.660924Z	      "slug": slug.current
2025-09-16T23:46:08.66105Z	    },
2025-09-16T23:46:08.661156Z	    pricing{
2025-09-16T23:46:08.661252Z	      currency,
2025-09-16T23:46:08.661343Z	      tiers[]{
2025-09-16T23:46:08.66392Z	        quantity,
2025-09-16T23:46:08.6641Z	        price,
2025-09-16T23:46:08.664246Z	        unit
2025-09-16T23:46:08.664367Z	      },
2025-09-16T23:46:08.664515Z	      moq,
2025-09-16T23:46:08.664638Z	      leadTime,
2025-09-16T23:46:08.664788Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:08.664905Z	      "price": tiers[0].price,
2025-09-16T23:46:08.665005Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:08.665101Z	    },
2025-09-16T23:46:08.665193Z	    inventory{
2025-09-16T23:46:08.665289Z	      quantity,
2025-09-16T23:46:08.665396Z	      status,
2025-09-16T23:46:08.665503Z	      warehouse,
2025-09-16T23:46:08.665609Z	      lastUpdated,
2025-09-16T23:46:08.665756Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:08.665871Z	      "inStock": status == "in_stock",
2025-09-16T23:46:08.665978Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:08.666375Z	    },
2025-09-16T23:46:08.666505Z	    isActive,
2025-09-16T23:46:08.666604Z	    isFeatured,
2025-09-16T23:46:08.666737Z	    isNew,
2025-09-16T23:46:08.666854Z	    _createdAt,
2025-09-16T23:46:08.667025Z	    _updatedAt
2025-09-16T23:46:08.667141Z	  
2025-09-16T23:46:08.667247Z	      },
2025-09-16T23:46:08.66736Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-16T23:46:08.667484Z	    }
2025-09-16T23:46:08.667759Z	  
2025-09-16T23:46:08.667898Z	Query parameters: {
2025-09-16T23:46:08.668008Z	  limit: 8,
2025-09-16T23:46:08.668115Z	  offset: 0,
2025-09-16T23:46:08.668215Z	  category: undefined,
2025-09-16T23:46:08.668323Z	  brand: 'sanrex',
2025-09-16T23:46:08.668426Z	  featured: undefined
2025-09-16T23:46:08.668531Z	}
2025-09-16T23:46:08.668636Z	Fetching solutions with query: 
2025-09-16T23:46:08.66876Z	    {
2025-09-16T23:46:08.668886Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:08.669065Z	        
2025-09-16T23:46:08.669323Z	    _id,
2025-09-16T23:46:08.669492Z	    title,
2025-09-16T23:46:08.669611Z	    "slug": slug.current,
2025-09-16T23:46:08.669751Z	    summary,
2025-09-16T23:46:08.669863Z	    description,
2025-09-16T23:46:08.66997Z	    coverImage,
2025-09-16T23:46:08.670088Z	    primaryBrand->{
2025-09-16T23:46:08.670205Z	      _id,
2025-09-16T23:46:08.670317Z	      name,
2025-09-16T23:46:08.670429Z	      "slug": slug.current,
2025-09-16T23:46:08.670534Z	      logo
2025-09-16T23:46:08.670653Z	    },
2025-09-16T23:46:08.670792Z	    relatedBrands[]->{
2025-09-16T23:46:08.670909Z	      _id,
2025-09-16T23:46:08.671028Z	      name,
2025-09-16T23:46:08.67114Z	      "slug": slug.current,
2025-09-16T23:46:08.671245Z	      logo
2025-09-16T23:46:08.671356Z	    },
2025-09-16T23:46:08.67146Z	    targetMarket,
2025-09-16T23:46:08.67156Z	    complexity,
2025-09-16T23:46:08.671704Z	    publishedAt,
2025-09-16T23:46:08.671838Z	    isPublished,
2025-09-16T23:46:08.671946Z	    isFeatured,
2025-09-16T23:46:08.672046Z	    viewCount,
2025-09-16T23:46:08.672143Z	    _createdAt,
2025-09-16T23:46:08.67224Z	    _updatedAt
2025-09-16T23:46:08.672335Z	  
2025-09-16T23:46:08.672437Z	      },
2025-09-16T23:46:08.672537Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-16T23:46:08.672671Z	    }
2025-09-16T23:46:08.672805Z	  
2025-09-16T23:46:08.67291Z	Query parameters: {
2025-09-16T23:46:08.673015Z	  limit: 4,
2025-09-16T23:46:08.67312Z	  offset: 0,
2025-09-16T23:46:08.673221Z	  targetMarket: undefined,
2025-09-16T23:46:08.67332Z	  brand: 'sanrex',
2025-09-16T23:46:08.673425Z	  featured: undefined
2025-09-16T23:46:08.673535Z	}
2025-09-16T23:46:08.673661Z	✅ [getBrandData] Found brand: Sanrex
2025-09-16T23:46:08.673834Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:08.67397Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:08.674096Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-16T23:46:08.674215Z	Fetching products with query: 
2025-09-16T23:46:08.674324Z	    {
2025-09-16T23:46:08.674424Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:08.674524Z	        
2025-09-16T23:46:08.674643Z	    _id,
2025-09-16T23:46:08.674791Z	    _type,
2025-09-16T23:46:08.674913Z	    partNumber,
2025-09-16T23:46:08.675027Z	    "slug": slug.current,
2025-09-16T23:46:08.67515Z	    title,
2025-09-16T23:46:08.675264Z	    shortDescription,
2025-09-16T23:46:08.675377Z	    image,
2025-09-16T23:46:08.675478Z	    brand->{
2025-09-16T23:46:08.675576Z	      name,
2025-09-16T23:46:08.675708Z	      "slug": slug.current,
2025-09-16T23:46:08.675825Z	      logo
2025-09-16T23:46:08.675933Z	    },
2025-09-16T23:46:08.67604Z	    category->{
2025-09-16T23:46:08.676155Z	      name,
2025-09-16T23:46:08.676263Z	      "slug": slug.current
2025-09-16T23:46:08.676371Z	    },
2025-09-16T23:46:08.676479Z	    pricing{
2025-09-16T23:46:08.676583Z	      currency,
2025-09-16T23:46:08.676719Z	      tiers[]{
2025-09-16T23:46:08.676835Z	        quantity,
2025-09-16T23:46:08.676948Z	        price,
2025-09-16T23:46:08.677058Z	        unit
2025-09-16T23:46:08.677171Z	      },
2025-09-16T23:46:08.677279Z	      moq,
2025-09-16T23:46:08.677387Z	      leadTime,
2025-09-16T23:46:08.677506Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:08.677625Z	      "price": tiers[0].price,
2025-09-16T23:46:08.677775Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:08.677895Z	    },
2025-09-16T23:46:08.67801Z	    inventory{
2025-09-16T23:46:08.678115Z	      quantity,
2025-09-16T23:46:08.678223Z	      status,
2025-09-16T23:46:08.678366Z	      warehouse,
2025-09-16T23:46:08.678475Z	      lastUpdated,
2025-09-16T23:46:08.678578Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:08.67872Z	      "inStock": status == "in_stock",
2025-09-16T23:46:08.678867Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:08.678984Z	    },
2025-09-16T23:46:08.679091Z	    isActive,
2025-09-16T23:46:08.679185Z	    isFeatured,
2025-09-16T23:46:08.679306Z	    isNew,
2025-09-16T23:46:08.679488Z	    _createdAt,
2025-09-16T23:46:08.679604Z	    _updatedAt
2025-09-16T23:46:08.679745Z	  
2025-09-16T23:46:08.679874Z	      },
2025-09-16T23:46:08.679987Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-16T23:46:08.68012Z	    }
2025-09-16T23:46:08.680233Z	  
2025-09-16T23:46:08.680336Z	Query parameters: {
2025-09-16T23:46:08.680439Z	  limit: 8,
2025-09-16T23:46:08.68054Z	  offset: 0,
2025-09-16T23:46:08.680671Z	  category: undefined,
2025-09-16T23:46:08.680816Z	  brand: 'sanrex',
2025-09-16T23:46:08.68092Z	  featured: undefined
2025-09-16T23:46:08.681016Z	}
2025-09-16T23:46:08.68111Z	Fetching solutions with query: 
2025-09-16T23:46:08.681207Z	    {
2025-09-16T23:46:08.681306Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:08.681409Z	        
2025-09-16T23:46:08.681513Z	    _id,
2025-09-16T23:46:08.681624Z	    title,
2025-09-16T23:46:08.724106Z	    "slug": slug.current,
2025-09-16T23:46:08.724304Z	    summary,
2025-09-16T23:46:08.72441Z	    description,
2025-09-16T23:46:08.724505Z	    coverImage,
2025-09-16T23:46:08.724603Z	    primaryBrand->{
2025-09-16T23:46:08.724758Z	      _id,
2025-09-16T23:46:08.724871Z	      name,
2025-09-16T23:46:08.724984Z	      "slug": slug.current,
2025-09-16T23:46:08.725089Z	      logo
2025-09-16T23:46:08.725192Z	    },
2025-09-16T23:46:08.725295Z	    relatedBrands[]->{
2025-09-16T23:46:08.725419Z	      _id,
2025-09-16T23:46:08.726057Z	      name,
2025-09-16T23:46:08.726298Z	      "slug": slug.current,
2025-09-16T23:46:08.726458Z	      logo
2025-09-16T23:46:08.726657Z	    },
2025-09-16T23:46:08.726816Z	    targetMarket,
2025-09-16T23:46:08.726953Z	    complexity,
2025-09-16T23:46:08.72707Z	    publishedAt,
2025-09-16T23:46:08.727188Z	    isPublished,
2025-09-16T23:46:08.727293Z	    isFeatured,
2025-09-16T23:46:08.727406Z	    viewCount,
2025-09-16T23:46:08.727508Z	    _createdAt,
2025-09-16T23:46:08.727612Z	    _updatedAt
2025-09-16T23:46:08.730922Z	  
2025-09-16T23:46:08.731095Z	      },
2025-09-16T23:46:08.731202Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-16T23:46:08.731305Z	    }
2025-09-16T23:46:08.731401Z	  
2025-09-16T23:46:08.731493Z	Query parameters: {
2025-09-16T23:46:08.731584Z	  limit: 4,
2025-09-16T23:46:08.731699Z	  offset: 0,
2025-09-16T23:46:08.731812Z	  targetMarket: undefined,
2025-09-16T23:46:08.731927Z	  brand: 'sanrex',
2025-09-16T23:46:08.732022Z	  featured: undefined
2025-09-16T23:46:08.732111Z	}
2025-09-16T23:46:08.732213Z	✅ [getBrandData] Found brand: Sanrex
2025-09-16T23:46:08.732328Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:08.732432Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:08.732596Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-16T23:46:08.732743Z	Fetching products with query: 
2025-09-16T23:46:08.73284Z	    {
2025-09-16T23:46:08.733059Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:08.733204Z	        
2025-09-16T23:46:08.733311Z	    _id,
2025-09-16T23:46:08.733404Z	    _type,
2025-09-16T23:46:08.733509Z	    partNumber,
2025-09-16T23:46:08.733609Z	    "slug": slug.current,
2025-09-16T23:46:08.733742Z	    title,
2025-09-16T23:46:08.733848Z	    shortDescription,
2025-09-16T23:46:08.73395Z	    image,
2025-09-16T23:46:08.734053Z	    brand->{
2025-09-16T23:46:08.734152Z	      name,
2025-09-16T23:46:08.734252Z	      "slug": slug.current,
2025-09-16T23:46:08.734358Z	      logo
2025-09-16T23:46:08.734449Z	    },
2025-09-16T23:46:08.73454Z	    category->{
2025-09-16T23:46:08.734645Z	      name,
2025-09-16T23:46:08.734757Z	      "slug": slug.current
2025-09-16T23:46:08.734843Z	    },
2025-09-16T23:46:08.734943Z	    pricing{
2025-09-16T23:46:08.735032Z	      currency,
2025-09-16T23:46:08.735116Z	      tiers[]{
2025-09-16T23:46:08.735201Z	        quantity,
2025-09-16T23:46:08.735289Z	        price,
2025-09-16T23:46:08.735375Z	        unit
2025-09-16T23:46:08.735461Z	      },
2025-09-16T23:46:08.735552Z	      moq,
2025-09-16T23:46:08.735655Z	      leadTime,
2025-09-16T23:46:08.735786Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:08.735893Z	      "price": tiers[0].price,
2025-09-16T23:46:08.735991Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:08.73609Z	    },
2025-09-16T23:46:08.736188Z	    inventory{
2025-09-16T23:46:08.736281Z	      quantity,
2025-09-16T23:46:08.736381Z	      status,
2025-09-16T23:46:08.736474Z	      warehouse,
2025-09-16T23:46:08.736573Z	      lastUpdated,
2025-09-16T23:46:08.7367Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:08.7368Z	      "inStock": status == "in_stock",
2025-09-16T23:46:08.736894Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:08.73699Z	    },
2025-09-16T23:46:08.737081Z	    isActive,
2025-09-16T23:46:08.737178Z	    isFeatured,
2025-09-16T23:46:08.737272Z	    isNew,
2025-09-16T23:46:08.737363Z	    _createdAt,
2025-09-16T23:46:08.737462Z	    _updatedAt
2025-09-16T23:46:08.73756Z	  
2025-09-16T23:46:08.737665Z	      },
2025-09-16T23:46:08.73778Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-16T23:46:08.737884Z	    }
2025-09-16T23:46:08.737975Z	  
2025-09-16T23:46:08.738068Z	Query parameters: {
2025-09-16T23:46:08.738168Z	  limit: 8,
2025-09-16T23:46:08.738263Z	  offset: 0,
2025-09-16T23:46:08.738354Z	  category: undefined,
2025-09-16T23:46:08.738479Z	  brand: 'epcos',
2025-09-16T23:46:08.738584Z	  featured: undefined
2025-09-16T23:46:08.738717Z	}
2025-09-16T23:46:08.738823Z	Fetching solutions with query: 
2025-09-16T23:46:08.738923Z	    {
2025-09-16T23:46:08.739016Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:08.7391Z	        
2025-09-16T23:46:08.73918Z	    _id,
2025-09-16T23:46:08.739297Z	    title,
2025-09-16T23:46:08.739391Z	    "slug": slug.current,
2025-09-16T23:46:08.739487Z	    summary,
2025-09-16T23:46:08.739576Z	    description,
2025-09-16T23:46:08.739671Z	    coverImage,
2025-09-16T23:46:08.739778Z	    primaryBrand->{
2025-09-16T23:46:08.739864Z	      _id,
2025-09-16T23:46:08.73995Z	      name,
2025-09-16T23:46:08.740038Z	      "slug": slug.current,
2025-09-16T23:46:08.740121Z	      logo
2025-09-16T23:46:08.740206Z	    },
2025-09-16T23:46:08.740288Z	    relatedBrands[]->{
2025-09-16T23:46:08.740369Z	      _id,
2025-09-16T23:46:08.740457Z	      name,
2025-09-16T23:46:08.740539Z	      "slug": slug.current,
2025-09-16T23:46:08.740637Z	      logo
2025-09-16T23:46:08.740748Z	    },
2025-09-16T23:46:08.740864Z	    targetMarket,
2025-09-16T23:46:08.740963Z	    complexity,
2025-09-16T23:46:08.741058Z	    publishedAt,
2025-09-16T23:46:08.741152Z	    isPublished,
2025-09-16T23:46:08.741248Z	    isFeatured,
2025-09-16T23:46:08.741347Z	    viewCount,
2025-09-16T23:46:08.741445Z	    _createdAt,
2025-09-16T23:46:08.741551Z	    _updatedAt
2025-09-16T23:46:08.74169Z	  
2025-09-16T23:46:08.741812Z	      },
2025-09-16T23:46:08.741923Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-16T23:46:08.742039Z	    }
2025-09-16T23:46:08.742147Z	  
2025-09-16T23:46:08.74225Z	Query parameters: {
2025-09-16T23:46:08.742351Z	  limit: 4,
2025-09-16T23:46:08.742447Z	  offset: 0,
2025-09-16T23:46:08.742541Z	  targetMarket: undefined,
2025-09-16T23:46:08.742706Z	  brand: 'epcos',
2025-09-16T23:46:08.742812Z	  featured: undefined
2025-09-16T23:46:08.742904Z	}
2025-09-16T23:46:08.743024Z	✅ [getBrandData] Found brand: Epcos
2025-09-16T23:46:08.743136Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:08.743244Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:08.743352Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-16T23:46:08.743458Z	Fetching products with query: 
2025-09-16T23:46:08.743561Z	    {
2025-09-16T23:46:08.743692Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:08.743822Z	        
2025-09-16T23:46:08.743925Z	    _id,
2025-09-16T23:46:08.744037Z	    _type,
2025-09-16T23:46:08.744142Z	    partNumber,
2025-09-16T23:46:08.744263Z	    "slug": slug.current,
2025-09-16T23:46:08.744373Z	    title,
2025-09-16T23:46:08.744478Z	    shortDescription,
2025-09-16T23:46:08.744573Z	    image,
2025-09-16T23:46:08.744696Z	    brand->{
2025-09-16T23:46:08.744799Z	      name,
2025-09-16T23:46:08.744893Z	      "slug": slug.current,
2025-09-16T23:46:08.744982Z	      logo
2025-09-16T23:46:08.745083Z	    },
2025-09-16T23:46:08.745169Z	    category->{
2025-09-16T23:46:08.745258Z	      name,
2025-09-16T23:46:08.745342Z	      "slug": slug.current
2025-09-16T23:46:08.745427Z	    },
2025-09-16T23:46:08.745536Z	    pricing{
2025-09-16T23:46:08.745647Z	      currency,
2025-09-16T23:46:08.745776Z	      tiers[]{
2025-09-16T23:46:08.745883Z	        quantity,
2025-09-16T23:46:08.745986Z	        price,
2025-09-16T23:46:08.746074Z	        unit
2025-09-16T23:46:08.746158Z	      },
2025-09-16T23:46:08.74625Z	      moq,
2025-09-16T23:46:08.746353Z	      leadTime,
2025-09-16T23:46:08.746463Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:08.746581Z	      "price": tiers[0].price,
2025-09-16T23:46:08.746715Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:08.746814Z	    },
2025-09-16T23:46:08.7469Z	    inventory{
2025-09-16T23:46:08.746991Z	      quantity,
2025-09-16T23:46:08.747098Z	      status,
2025-09-16T23:46:08.747272Z	      warehouse,
2025-09-16T23:46:08.74746Z	      lastUpdated,
2025-09-16T23:46:08.747577Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:08.747696Z	      "inStock": status == "in_stock",
2025-09-16T23:46:08.747807Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:08.747919Z	    },
2025-09-16T23:46:08.748012Z	    isActive,
2025-09-16T23:46:08.748108Z	    isFeatured,
2025-09-16T23:46:08.74826Z	    isNew,
2025-09-16T23:46:08.748445Z	    _createdAt,
2025-09-16T23:46:08.748559Z	    _updatedAt
2025-09-16T23:46:08.748665Z	  
2025-09-16T23:46:08.748819Z	      },
2025-09-16T23:46:08.748918Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-16T23:46:08.749079Z	    }
2025-09-16T23:46:08.749321Z	  
2025-09-16T23:46:08.749595Z	Query parameters: {
2025-09-16T23:46:08.749809Z	  limit: 8,
2025-09-16T23:46:08.749961Z	  offset: 0,
2025-09-16T23:46:08.750077Z	  category: undefined,
2025-09-16T23:46:08.750194Z	  brand: 'epcos',
2025-09-16T23:46:08.750305Z	  featured: undefined
2025-09-16T23:46:08.750413Z	}
2025-09-16T23:46:08.750539Z	Fetching solutions with query: 
2025-09-16T23:46:08.750652Z	    {
2025-09-16T23:46:08.750789Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:08.750922Z	        
2025-09-16T23:46:08.75104Z	    _id,
2025-09-16T23:46:08.751166Z	    title,
2025-09-16T23:46:08.751316Z	    "slug": slug.current,
2025-09-16T23:46:08.751485Z	    summary,
2025-09-16T23:46:08.752515Z	    description,
2025-09-16T23:46:08.752658Z	    coverImage,
2025-09-16T23:46:08.752811Z	    primaryBrand->{
2025-09-16T23:46:08.754826Z	      _id,
2025-09-16T23:46:08.755188Z	      name,
2025-09-16T23:46:08.755453Z	      "slug": slug.current,
2025-09-16T23:46:08.755719Z	      logo
2025-09-16T23:46:08.75589Z	    },
2025-09-16T23:46:08.756577Z	    relatedBrands[]->{
2025-09-16T23:46:08.756804Z	      _id,
2025-09-16T23:46:08.756972Z	      name,
2025-09-16T23:46:08.757127Z	      "slug": slug.current,
2025-09-16T23:46:08.757537Z	      logo
2025-09-16T23:46:08.757916Z	    },
2025-09-16T23:46:08.758064Z	    targetMarket,
2025-09-16T23:46:08.758168Z	    complexity,
2025-09-16T23:46:08.758261Z	    publishedAt,
2025-09-16T23:46:08.758348Z	    isPublished,
2025-09-16T23:46:08.758457Z	    isFeatured,
2025-09-16T23:46:08.758564Z	    viewCount,
2025-09-16T23:46:08.758652Z	    _createdAt,
2025-09-16T23:46:08.758811Z	    _updatedAt
2025-09-16T23:46:08.759031Z	  
2025-09-16T23:46:08.759204Z	      },
2025-09-16T23:46:08.759424Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-16T23:46:08.759604Z	    }
2025-09-16T23:46:08.759799Z	  
2025-09-16T23:46:08.759959Z	Query parameters: {
2025-09-16T23:46:08.760327Z	  limit: 4,
2025-09-16T23:46:08.760491Z	  offset: 0,
2025-09-16T23:46:08.761177Z	  targetMarket: undefined,
2025-09-16T23:46:08.761389Z	  brand: 'epcos',
2025-09-16T23:46:08.761618Z	  featured: undefined
2025-09-16T23:46:08.761823Z	}
2025-09-16T23:46:08.761991Z	✅ [getBrandData] Found brand: Epcos
2025-09-16T23:46:08.762162Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:08.762323Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:08.762697Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-16T23:46:08.762995Z	Fetching products with query: 
2025-09-16T23:46:08.763305Z	    {
2025-09-16T23:46:08.763626Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:08.763951Z	        
2025-09-16T23:46:08.764269Z	    _id,
2025-09-16T23:46:08.764583Z	    _type,
2025-09-16T23:46:08.764747Z	    partNumber,
2025-09-16T23:46:08.764909Z	    "slug": slug.current,
2025-09-16T23:46:08.765069Z	    title,
2025-09-16T23:46:08.76527Z	    shortDescription,
2025-09-16T23:46:08.765454Z	    image,
2025-09-16T23:46:08.765601Z	    brand->{
2025-09-16T23:46:08.765759Z	      name,
2025-09-16T23:46:08.76623Z	      "slug": slug.current,
2025-09-16T23:46:08.78501Z	      logo
2025-09-16T23:46:08.785182Z	    },
2025-09-16T23:46:08.785302Z	    category->{
2025-09-16T23:46:08.785523Z	      name,
2025-09-16T23:46:08.78569Z	      "slug": slug.current
2025-09-16T23:46:08.785845Z	    },
2025-09-16T23:46:08.785983Z	    pricing{
2025-09-16T23:46:08.78611Z	      currency,
2025-09-16T23:46:08.78623Z	      tiers[]{
2025-09-16T23:46:08.786371Z	        quantity,
2025-09-16T23:46:08.786484Z	        price,
2025-09-16T23:46:08.786624Z	        unit
2025-09-16T23:46:08.786896Z	      },
2025-09-16T23:46:08.787209Z	      moq,
2025-09-16T23:46:08.78735Z	      leadTime,
2025-09-16T23:46:08.787439Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:08.787535Z	      "price": tiers[0].price,
2025-09-16T23:46:08.787614Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:08.824841Z	    },
2025-09-16T23:46:08.825175Z	    inventory{
2025-09-16T23:46:08.825317Z	      quantity,
2025-09-16T23:46:08.825434Z	      status,
2025-09-16T23:46:08.825537Z	      warehouse,
2025-09-16T23:46:08.825649Z	      lastUpdated,
2025-09-16T23:46:08.826987Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:08.827195Z	      "inStock": status == "in_stock",
2025-09-16T23:46:08.827321Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:08.827425Z	    },
2025-09-16T23:46:08.827534Z	    isActive,
2025-09-16T23:46:08.827647Z	    isFeatured,
2025-09-16T23:46:08.827781Z	    isNew,
2025-09-16T23:46:08.827894Z	    _createdAt,
2025-09-16T23:46:08.827999Z	    _updatedAt
2025-09-16T23:46:08.828102Z	  
2025-09-16T23:46:08.828201Z	      },
2025-09-16T23:46:08.828312Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-16T23:46:08.828449Z	    }
2025-09-16T23:46:08.828559Z	  
2025-09-16T23:46:08.828667Z	Query parameters: {
2025-09-16T23:46:08.828794Z	  limit: 8,
2025-09-16T23:46:08.828905Z	  offset: 0,
2025-09-16T23:46:08.829048Z	  category: undefined,
2025-09-16T23:46:08.829211Z	  brand: 'semikron',
2025-09-16T23:46:08.829332Z	  featured: undefined
2025-09-16T23:46:08.829574Z	}
2025-09-16T23:46:08.829731Z	Fetching solutions with query: 
2025-09-16T23:46:08.83273Z	    {
2025-09-16T23:46:08.832923Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:08.83306Z	        
2025-09-16T23:46:08.833193Z	    _id,
2025-09-16T23:46:08.833345Z	    title,
2025-09-16T23:46:08.833461Z	    "slug": slug.current,
2025-09-16T23:46:08.833568Z	    summary,
2025-09-16T23:46:08.833713Z	    description,
2025-09-16T23:46:08.833822Z	    coverImage,
2025-09-16T23:46:08.83395Z	    primaryBrand->{
2025-09-16T23:46:08.834079Z	      _id,
2025-09-16T23:46:08.834189Z	      name,
2025-09-16T23:46:08.834294Z	      "slug": slug.current,
2025-09-16T23:46:08.834399Z	      logo
2025-09-16T23:46:08.834502Z	    },
2025-09-16T23:46:08.83461Z	    relatedBrands[]->{
2025-09-16T23:46:08.834741Z	      _id,
2025-09-16T23:46:08.834848Z	      name,
2025-09-16T23:46:08.83494Z	      "slug": slug.current,
2025-09-16T23:46:08.835034Z	      logo
2025-09-16T23:46:08.835133Z	    },
2025-09-16T23:46:08.836611Z	    targetMarket,
2025-09-16T23:46:08.836813Z	    complexity,
2025-09-16T23:46:08.836956Z	    publishedAt,
2025-09-16T23:46:08.837247Z	    isPublished,
2025-09-16T23:46:08.837363Z	    isFeatured,
2025-09-16T23:46:08.83748Z	    viewCount,
2025-09-16T23:46:08.837573Z	    _createdAt,
2025-09-16T23:46:08.837662Z	    _updatedAt
2025-09-16T23:46:08.837774Z	  
2025-09-16T23:46:08.837864Z	      },
2025-09-16T23:46:08.837951Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-16T23:46:08.838043Z	    }
2025-09-16T23:46:08.838147Z	  
2025-09-16T23:46:08.83825Z	Query parameters: {
2025-09-16T23:46:08.838353Z	  limit: 4,
2025-09-16T23:46:08.838461Z	  offset: 0,
2025-09-16T23:46:08.83858Z	  targetMarket: undefined,
2025-09-16T23:46:08.838702Z	  brand: 'semikron',
2025-09-16T23:46:08.838797Z	  featured: undefined
2025-09-16T23:46:08.838878Z	}
2025-09-16T23:46:08.839412Z	✅ [getBrandData] Found brand: Semikron
2025-09-16T23:46:08.839911Z	Products fetch result: {
2025-09-16T23:46:08.840037Z	  totalProducts: 1,
2025-09-16T23:46:08.840323Z	  fetchedProducts: 1,
2025-09-16T23:46:08.840505Z	  firstProduct: {
2025-09-16T23:46:08.840767Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-16T23:46:08.841218Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-16T23:46:08.841446Z	    _type: 'product',
2025-09-16T23:46:08.841614Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-16T23:46:08.842992Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-16T23:46:08.843254Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:08.843413Z	    image: null,
2025-09-16T23:46:08.843555Z	    inventory: {
2025-09-16T23:46:08.843688Z	      inStock: true,
2025-09-16T23:46:08.849078Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-16T23:46:08.849306Z	      quantity: 0,
2025-09-16T23:46:08.849436Z	      status: 'in_stock',
2025-09-16T23:46:08.849542Z	      warehouse: null
2025-09-16T23:46:08.849632Z	    },
2025-09-16T23:46:08.849773Z	    isActive: true,
2025-09-16T23:46:08.849868Z	    isFeatured: false,
2025-09-16T23:46:08.849963Z	    isNew: false,
2025-09-16T23:46:08.850052Z	    partNumber: 'SKKT106/16E',
2025-09-16T23:46:08.850139Z	    pricing: {
2025-09-16T23:46:08.850231Z	      currency: 'CNY',
2025-09-16T23:46:08.85032Z	      leadTime: null,
2025-09-16T23:46:08.850408Z	      moq: null,
2025-09-16T23:46:08.853585Z	      price: null,
2025-09-16T23:46:08.853994Z	      tiers: null
2025-09-16T23:46:08.854172Z	    },
2025-09-16T23:46:08.854284Z	    shortDescription: 'SKKT106/16E',
2025-09-16T23:46:08.854391Z	    slug: 'SKKT106/16E',
2025-09-16T23:46:08.854504Z	    title: 'SKKT106/16E'
2025-09-16T23:46:08.854616Z	  }
2025-09-16T23:46:08.854766Z	}
2025-09-16T23:46:08.854877Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:08.854985Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-16T23:46:08.855092Z	Fetching products with query: 
2025-09-16T23:46:08.855197Z	    {
2025-09-16T23:46:08.855297Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:08.855399Z	        
2025-09-16T23:46:08.855497Z	    _id,
2025-09-16T23:46:08.855591Z	    _type,
2025-09-16T23:46:08.855697Z	    partNumber,
2025-09-16T23:46:08.855804Z	    "slug": slug.current,
2025-09-16T23:46:08.855902Z	    title,
2025-09-16T23:46:08.861518Z	    shortDescription,
2025-09-16T23:46:08.861663Z	    image,
2025-09-16T23:46:08.861819Z	    brand->{
2025-09-16T23:46:08.861942Z	      name,
2025-09-16T23:46:08.862056Z	      "slug": slug.current,
2025-09-16T23:46:08.862169Z	      logo
2025-09-16T23:46:08.862257Z	    },
2025-09-16T23:46:08.862352Z	    category->{
2025-09-16T23:46:08.862473Z	      name,
2025-09-16T23:46:08.862577Z	      "slug": slug.current
2025-09-16T23:46:08.862697Z	    },
2025-09-16T23:46:08.862806Z	    pricing{
2025-09-16T23:46:08.862895Z	      currency,
2025-09-16T23:46:08.862978Z	      tiers[]{
2025-09-16T23:46:08.863061Z	        quantity,
2025-09-16T23:46:08.863152Z	        price,
2025-09-16T23:46:08.863255Z	        unit
2025-09-16T23:46:08.863358Z	      },
2025-09-16T23:46:08.863493Z	      moq,
2025-09-16T23:46:08.863614Z	      leadTime,
2025-09-16T23:46:08.863744Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:08.863851Z	      "price": tiers[0].price,
2025-09-16T23:46:08.863953Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:08.864052Z	    },
2025-09-16T23:46:08.864154Z	    inventory{
2025-09-16T23:46:08.86425Z	      quantity,
2025-09-16T23:46:08.864346Z	      status,
2025-09-16T23:46:08.864452Z	      warehouse,
2025-09-16T23:46:08.864559Z	      lastUpdated,
2025-09-16T23:46:08.864654Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:08.864807Z	      "inStock": status == "in_stock",
2025-09-16T23:46:08.86492Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:08.865022Z	    },
2025-09-16T23:46:08.865127Z	    isActive,
2025-09-16T23:46:08.865222Z	    isFeatured,
2025-09-16T23:46:08.865303Z	    isNew,
2025-09-16T23:46:08.86538Z	    _createdAt,
2025-09-16T23:46:08.865491Z	    _updatedAt
2025-09-16T23:46:08.865626Z	  
2025-09-16T23:46:08.865861Z	      },
2025-09-16T23:46:08.866034Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-16T23:46:08.866804Z	    }
2025-09-16T23:46:08.866941Z	  
2025-09-16T23:46:08.867047Z	Query parameters: {
2025-09-16T23:46:08.867147Z	  limit: 8,
2025-09-16T23:46:08.867244Z	  offset: 0,
2025-09-16T23:46:08.867344Z	  category: undefined,
2025-09-16T23:46:08.867562Z	  brand: 'semikron',
2025-09-16T23:46:08.867762Z	  featured: undefined
2025-09-16T23:46:08.867918Z	}
2025-09-16T23:46:08.86809Z	Fetching solutions with query: 
2025-09-16T23:46:08.868259Z	    {
2025-09-16T23:46:08.8692Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:08.869376Z	        
2025-09-16T23:46:08.869512Z	    _id,
2025-09-16T23:46:08.86964Z	    title,
2025-09-16T23:46:08.869782Z	    "slug": slug.current,
2025-09-16T23:46:08.869898Z	    summary,
2025-09-16T23:46:08.870005Z	    description,
2025-09-16T23:46:08.870103Z	    coverImage,
2025-09-16T23:46:08.870209Z	    primaryBrand->{
2025-09-16T23:46:08.87031Z	      _id,
2025-09-16T23:46:08.870648Z	      name,
2025-09-16T23:46:08.870815Z	      "slug": slug.current,
2025-09-16T23:46:08.870928Z	      logo
2025-09-16T23:46:08.871032Z	    },
2025-09-16T23:46:08.871135Z	    relatedBrands[]->{
2025-09-16T23:46:08.871237Z	      _id,
2025-09-16T23:46:08.871329Z	      name,
2025-09-16T23:46:08.871427Z	      "slug": slug.current,
2025-09-16T23:46:08.871533Z	      logo
2025-09-16T23:46:08.871632Z	    },
2025-09-16T23:46:08.871772Z	    targetMarket,
2025-09-16T23:46:08.871889Z	    complexity,
2025-09-16T23:46:08.871998Z	    publishedAt,
2025-09-16T23:46:08.872107Z	    isPublished,
2025-09-16T23:46:08.872212Z	    isFeatured,
2025-09-16T23:46:08.872327Z	    viewCount,
2025-09-16T23:46:08.872436Z	    _createdAt,
2025-09-16T23:46:08.872538Z	    _updatedAt
2025-09-16T23:46:08.872634Z	  
2025-09-16T23:46:08.87277Z	      },
2025-09-16T23:46:08.872873Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-16T23:46:08.872978Z	    }
2025-09-16T23:46:08.873102Z	  
2025-09-16T23:46:08.873249Z	Query parameters: {
2025-09-16T23:46:08.873493Z	  limit: 4,
2025-09-16T23:46:08.874254Z	  offset: 0,
2025-09-16T23:46:08.874428Z	  targetMarket: undefined,
2025-09-16T23:46:08.87638Z	  brand: 'semikron',
2025-09-16T23:46:08.876614Z	  featured: undefined
2025-09-16T23:46:08.876698Z	}
2025-09-16T23:46:08.877103Z	✅ [getBrandData] Found brand: Semikron
2025-09-16T23:46:08.877435Z	Products fetch result: {
2025-09-16T23:46:08.877547Z	  totalProducts: 1,
2025-09-16T23:46:08.87789Z	  fetchedProducts: 1,
2025-09-16T23:46:08.877956Z	  firstProduct: {
2025-09-16T23:46:08.878062Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-16T23:46:08.878453Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-16T23:46:08.87876Z	    _type: 'product',
2025-09-16T23:46:08.878917Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-16T23:46:08.879042Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-16T23:46:08.879274Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:08.879512Z	    image: null,
2025-09-16T23:46:08.879716Z	    inventory: {
2025-09-16T23:46:08.879844Z	      inStock: true,
2025-09-16T23:46:08.879939Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-16T23:46:08.880051Z	      quantity: 0,
2025-09-16T23:46:08.88014Z	      status: 'in_stock',
2025-09-16T23:46:08.880227Z	      warehouse: null
2025-09-16T23:46:08.880314Z	    },
2025-09-16T23:46:08.880403Z	    isActive: true,
2025-09-16T23:46:08.880492Z	    isFeatured: false,
2025-09-16T23:46:08.880573Z	    isNew: false,
2025-09-16T23:46:08.88063Z	    partNumber: 'SKKT106/16E',
2025-09-16T23:46:08.880715Z	    pricing: {
2025-09-16T23:46:08.880786Z	      currency: 'CNY',
2025-09-16T23:46:08.880842Z	      leadTime: null,
2025-09-16T23:46:08.880895Z	      moq: null,
2025-09-16T23:46:08.880951Z	      price: null,
2025-09-16T23:46:08.881004Z	      tiers: null
2025-09-16T23:46:08.881056Z	    },
2025-09-16T23:46:08.881109Z	    shortDescription: 'SKKT106/16E',
2025-09-16T23:46:08.88117Z	    slug: 'SKKT106/16E',
2025-09-16T23:46:08.881228Z	    title: 'SKKT106/16E'
2025-09-16T23:46:08.881283Z	  }
2025-09-16T23:46:08.881337Z	}
2025-09-16T23:46:08.881393Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:08.881452Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-16T23:46:08.881509Z	Fetching products with query: 
2025-09-16T23:46:08.881566Z	    {
2025-09-16T23:46:08.881622Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:08.881714Z	        
2025-09-16T23:46:08.881784Z	    _id,
2025-09-16T23:46:08.881841Z	    _type,
2025-09-16T23:46:08.881896Z	    partNumber,
2025-09-16T23:46:08.88195Z	    "slug": slug.current,
2025-09-16T23:46:08.882006Z	    title,
2025-09-16T23:46:08.882073Z	    shortDescription,
2025-09-16T23:46:08.88213Z	    image,
2025-09-16T23:46:08.882201Z	    brand->{
2025-09-16T23:46:08.882312Z	      name,
2025-09-16T23:46:08.882487Z	      "slug": slug.current,
2025-09-16T23:46:08.882602Z	      logo
2025-09-16T23:46:08.882733Z	    },
2025-09-16T23:46:08.882828Z	    category->{
2025-09-16T23:46:08.882935Z	      name,
2025-09-16T23:46:08.883035Z	      "slug": slug.current
2025-09-16T23:46:08.883132Z	    },
2025-09-16T23:46:08.883232Z	    pricing{
2025-09-16T23:46:08.883328Z	      currency,
2025-09-16T23:46:08.883427Z	      tiers[]{
2025-09-16T23:46:08.883514Z	        quantity,
2025-09-16T23:46:08.883595Z	        price,
2025-09-16T23:46:08.923973Z	        unit
2025-09-16T23:46:08.924217Z	      },
2025-09-16T23:46:08.924333Z	      moq,
2025-09-16T23:46:08.924433Z	      leadTime,
2025-09-16T23:46:08.924554Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:08.924657Z	      "price": tiers[0].price,
2025-09-16T23:46:08.925076Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:08.925302Z	    },
2025-09-16T23:46:08.925475Z	    inventory{
2025-09-16T23:46:08.925659Z	      quantity,
2025-09-16T23:46:08.926129Z	      status,
2025-09-16T23:46:08.926337Z	      warehouse,
2025-09-16T23:46:08.926506Z	      lastUpdated,
2025-09-16T23:46:08.926955Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:08.927103Z	      "inStock": status == "in_stock",
2025-09-16T23:46:08.9273Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:08.92759Z	    },
2025-09-16T23:46:08.927864Z	    isActive,
2025-09-16T23:46:08.928035Z	    isFeatured,
2025-09-16T23:46:08.928159Z	    isNew,
2025-09-16T23:46:08.928274Z	    _createdAt,
2025-09-16T23:46:08.928391Z	    _updatedAt
2025-09-16T23:46:08.92851Z	  
2025-09-16T23:46:08.928633Z	      },
2025-09-16T23:46:08.929068Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-16T23:46:08.929228Z	    }
2025-09-16T23:46:08.929341Z	  
2025-09-16T23:46:08.929449Z	Query parameters: {
2025-09-16T23:46:08.929549Z	  limit: 8,
2025-09-16T23:46:08.929655Z	  offset: 0,
2025-09-16T23:46:08.929788Z	  category: undefined,
2025-09-16T23:46:08.929888Z	  brand: 'pi',
2025-09-16T23:46:08.929986Z	  featured: undefined
2025-09-16T23:46:08.930082Z	}
2025-09-16T23:46:08.930179Z	Fetching solutions with query: 
2025-09-16T23:46:08.930274Z	    {
2025-09-16T23:46:08.930403Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:08.930501Z	        
2025-09-16T23:46:08.930598Z	    _id,
2025-09-16T23:46:08.930744Z	    title,
2025-09-16T23:46:08.930853Z	    "slug": slug.current,
2025-09-16T23:46:08.930953Z	    summary,
2025-09-16T23:46:08.931044Z	    description,
2025-09-16T23:46:08.931167Z	    coverImage,
2025-09-16T23:46:08.931329Z	    primaryBrand->{
2025-09-16T23:46:08.931433Z	      _id,
2025-09-16T23:46:08.931543Z	      name,
2025-09-16T23:46:08.931647Z	      "slug": slug.current,
2025-09-16T23:46:08.931772Z	      logo
2025-09-16T23:46:08.931876Z	    },
2025-09-16T23:46:08.931973Z	    relatedBrands[]->{
2025-09-16T23:46:08.93207Z	      _id,
2025-09-16T23:46:08.932169Z	      name,
2025-09-16T23:46:08.932271Z	      "slug": slug.current,
2025-09-16T23:46:08.932371Z	      logo
2025-09-16T23:46:08.932469Z	    },
2025-09-16T23:46:08.932579Z	    targetMarket,
2025-09-16T23:46:08.932708Z	    complexity,
2025-09-16T23:46:08.932965Z	    publishedAt,
2025-09-16T23:46:08.93307Z	    isPublished,
2025-09-16T23:46:08.933173Z	    isFeatured,
2025-09-16T23:46:08.933271Z	    viewCount,
2025-09-16T23:46:08.933366Z	    _createdAt,
2025-09-16T23:46:08.933454Z	    _updatedAt
2025-09-16T23:46:08.93355Z	  
2025-09-16T23:46:08.933638Z	      },
2025-09-16T23:46:08.934462Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-16T23:46:08.936998Z	    }
2025-09-16T23:46:08.937176Z	  
2025-09-16T23:46:08.937299Z	Query parameters: {
2025-09-16T23:46:08.937417Z	  limit: 4,
2025-09-16T23:46:08.937551Z	  offset: 0,
2025-09-16T23:46:08.937664Z	  targetMarket: undefined,
2025-09-16T23:46:08.937811Z	  brand: 'pi',
2025-09-16T23:46:08.937909Z	  featured: undefined
2025-09-16T23:46:08.93801Z	}
2025-09-16T23:46:08.938117Z	✅ [getBrandData] Found brand: PI
2025-09-16T23:46:08.938226Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:08.938337Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:08.938467Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-16T23:46:08.938584Z	Fetching products with query: 
2025-09-16T23:46:08.93871Z	    {
2025-09-16T23:46:08.938816Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:08.938931Z	        
2025-09-16T23:46:08.939038Z	    _id,
2025-09-16T23:46:08.939148Z	    _type,
2025-09-16T23:46:08.93927Z	    partNumber,
2025-09-16T23:46:08.939373Z	    "slug": slug.current,
2025-09-16T23:46:08.939522Z	    title,
2025-09-16T23:46:08.939719Z	    shortDescription,
2025-09-16T23:46:08.939839Z	    image,
2025-09-16T23:46:08.939962Z	    brand->{
2025-09-16T23:46:08.940404Z	      name,
2025-09-16T23:46:08.940578Z	      "slug": slug.current,
2025-09-16T23:46:08.940701Z	      logo
2025-09-16T23:46:08.940828Z	    },
2025-09-16T23:46:08.940937Z	    category->{
2025-09-16T23:46:08.941028Z	      name,
2025-09-16T23:46:08.941184Z	      "slug": slug.current
2025-09-16T23:46:08.941286Z	    },
2025-09-16T23:46:08.941375Z	    pricing{
2025-09-16T23:46:08.941475Z	      currency,
2025-09-16T23:46:08.941568Z	      tiers[]{
2025-09-16T23:46:08.941657Z	        quantity,
2025-09-16T23:46:08.944288Z	        price,
2025-09-16T23:46:08.94445Z	        unit
2025-09-16T23:46:08.944583Z	      },
2025-09-16T23:46:08.944728Z	      moq,
2025-09-16T23:46:08.944849Z	      leadTime,
2025-09-16T23:46:08.944961Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:08.945073Z	      "price": tiers[0].price,
2025-09-16T23:46:08.945203Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:08.945312Z	    },
2025-09-16T23:46:08.94542Z	    inventory{
2025-09-16T23:46:08.945535Z	      quantity,
2025-09-16T23:46:08.945661Z	      status,
2025-09-16T23:46:08.945816Z	      warehouse,
2025-09-16T23:46:08.945898Z	      lastUpdated,
2025-09-16T23:46:08.945978Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:08.946066Z	      "inStock": status == "in_stock",
2025-09-16T23:46:08.946154Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:08.946241Z	    },
2025-09-16T23:46:08.946377Z	    isActive,
2025-09-16T23:46:08.946483Z	    isFeatured,
2025-09-16T23:46:08.946599Z	    isNew,
2025-09-16T23:46:08.946729Z	    _createdAt,
2025-09-16T23:46:08.946918Z	    _updatedAt
2025-09-16T23:46:08.947021Z	  
2025-09-16T23:46:08.947119Z	      },
2025-09-16T23:46:08.947226Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-16T23:46:08.947347Z	    }
2025-09-16T23:46:08.947647Z	  
2025-09-16T23:46:08.947816Z	Query parameters: {
2025-09-16T23:46:08.947935Z	  limit: 8,
2025-09-16T23:46:08.948038Z	  offset: 0,
2025-09-16T23:46:08.948131Z	  category: undefined,
2025-09-16T23:46:08.948229Z	  brand: 'pi',
2025-09-16T23:46:08.948339Z	  featured: undefined
2025-09-16T23:46:08.948439Z	}
2025-09-16T23:46:08.948541Z	Fetching solutions with query: 
2025-09-16T23:46:08.948651Z	    {
2025-09-16T23:46:08.948769Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:08.94887Z	        
2025-09-16T23:46:08.948962Z	    _id,
2025-09-16T23:46:08.949052Z	    title,
2025-09-16T23:46:08.949141Z	    "slug": slug.current,
2025-09-16T23:46:08.949228Z	    summary,
2025-09-16T23:46:08.949314Z	    description,
2025-09-16T23:46:08.949401Z	    coverImage,
2025-09-16T23:46:08.949495Z	    primaryBrand->{
2025-09-16T23:46:08.949642Z	      _id,
2025-09-16T23:46:08.949791Z	      name,
2025-09-16T23:46:08.949913Z	      "slug": slug.current,
2025-09-16T23:46:08.950004Z	      logo
2025-09-16T23:46:08.950096Z	    },
2025-09-16T23:46:08.950183Z	    relatedBrands[]->{
2025-09-16T23:46:08.950271Z	      _id,
2025-09-16T23:46:08.950357Z	      name,
2025-09-16T23:46:08.951866Z	      "slug": slug.current,
2025-09-16T23:46:08.952082Z	      logo
2025-09-16T23:46:08.952268Z	    },
2025-09-16T23:46:08.952407Z	    targetMarket,
2025-09-16T23:46:08.952565Z	    complexity,
2025-09-16T23:46:08.952761Z	    publishedAt,
2025-09-16T23:46:08.952922Z	    isPublished,
2025-09-16T23:46:08.953055Z	    isFeatured,
2025-09-16T23:46:08.95325Z	    viewCount,
2025-09-16T23:46:08.953373Z	    _createdAt,
2025-09-16T23:46:08.953715Z	    _updatedAt
2025-09-16T23:46:08.953879Z	  
2025-09-16T23:46:08.954035Z	      },
2025-09-16T23:46:08.954194Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-16T23:46:08.954369Z	    }
2025-09-16T23:46:08.954531Z	  
2025-09-16T23:46:08.954724Z	Query parameters: {
2025-09-16T23:46:08.954887Z	  limit: 4,
2025-09-16T23:46:08.95756Z	  offset: 0,
2025-09-16T23:46:08.957793Z	  targetMarket: undefined,
2025-09-16T23:46:08.957962Z	  brand: 'pi',
2025-09-16T23:46:08.961898Z	  featured: undefined
2025-09-16T23:46:08.962125Z	}
2025-09-16T23:46:08.962256Z	✅ [getBrandData] Found brand: PI
2025-09-16T23:46:08.962418Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:08.962828Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:08.962997Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:08.963116Z	Fetching products with query: 
2025-09-16T23:46:08.963219Z	    {
2025-09-16T23:46:08.963327Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:08.963433Z	        
2025-09-16T23:46:08.96353Z	    _id,
2025-09-16T23:46:08.963632Z	    _type,
2025-09-16T23:46:08.963769Z	    partNumber,
2025-09-16T23:46:08.96388Z	    "slug": slug.current,
2025-09-16T23:46:08.963998Z	    title,
2025-09-16T23:46:08.964112Z	    shortDescription,
2025-09-16T23:46:08.964214Z	    image,
2025-09-16T23:46:08.964312Z	    brand->{
2025-09-16T23:46:08.964404Z	      name,
2025-09-16T23:46:08.964499Z	      "slug": slug.current,
2025-09-16T23:46:08.964602Z	      logo
2025-09-16T23:46:08.964715Z	    },
2025-09-16T23:46:08.96567Z	    category->{
2025-09-16T23:46:08.965835Z	      name,
2025-09-16T23:46:08.965979Z	      "slug": slug.current
2025-09-16T23:46:08.96614Z	    },
2025-09-16T23:46:08.966254Z	    pricing{
2025-09-16T23:46:08.966385Z	      currency,
2025-09-16T23:46:08.966497Z	      tiers[]{
2025-09-16T23:46:08.966683Z	        quantity,
2025-09-16T23:46:08.966854Z	        price,
2025-09-16T23:46:08.966965Z	        unit
2025-09-16T23:46:08.967063Z	      },
2025-09-16T23:46:08.967158Z	      moq,
2025-09-16T23:46:08.967244Z	      leadTime,
2025-09-16T23:46:08.967327Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:08.967414Z	      "price": tiers[0].price,
2025-09-16T23:46:08.967497Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:08.96758Z	    },
2025-09-16T23:46:08.967799Z	    inventory{
2025-09-16T23:46:08.96791Z	      quantity,
2025-09-16T23:46:08.968035Z	      status,
2025-09-16T23:46:08.968145Z	      warehouse,
2025-09-16T23:46:08.968243Z	      lastUpdated,
2025-09-16T23:46:08.968426Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:08.968556Z	      "inStock": status == "in_stock",
2025-09-16T23:46:08.968664Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:08.968779Z	    },
2025-09-16T23:46:08.968866Z	    isActive,
2025-09-16T23:46:08.968962Z	    isFeatured,
2025-09-16T23:46:08.969129Z	    isNew,
2025-09-16T23:46:08.969561Z	    _createdAt,
2025-09-16T23:46:08.969903Z	    _updatedAt
2025-09-16T23:46:08.970249Z	  
2025-09-16T23:46:08.970481Z	      },
2025-09-16T23:46:08.970739Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-16T23:46:08.970862Z	    }
2025-09-16T23:46:08.97103Z	  
2025-09-16T23:46:08.971336Z	Query parameters: {
2025-09-16T23:46:08.971863Z	  limit: 8,
2025-09-16T23:46:08.972258Z	  offset: 0,
2025-09-16T23:46:08.972534Z	  category: undefined,
2025-09-16T23:46:08.972725Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:08.972849Z	  featured: undefined
2025-09-16T23:46:08.973794Z	}
2025-09-16T23:46:08.974067Z	Fetching solutions with query: 
2025-09-16T23:46:08.974232Z	    {
2025-09-16T23:46:08.974366Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:08.97451Z	        
2025-09-16T23:46:08.974637Z	    _id,
2025-09-16T23:46:08.974782Z	    title,
2025-09-16T23:46:08.974892Z	    "slug": slug.current,
2025-09-16T23:46:08.975141Z	    summary,
2025-09-16T23:46:08.975392Z	    description,
2025-09-16T23:46:08.976273Z	    coverImage,
2025-09-16T23:46:08.977231Z	    primaryBrand->{
2025-09-16T23:46:08.977484Z	      _id,
2025-09-16T23:46:08.978566Z	      name,
2025-09-16T23:46:08.978851Z	      "slug": slug.current,
2025-09-16T23:46:08.979014Z	      logo
2025-09-16T23:46:08.979188Z	    },
2025-09-16T23:46:08.979429Z	    relatedBrands[]->{
2025-09-16T23:46:08.979552Z	      _id,
2025-09-16T23:46:09.024191Z	      name,
2025-09-16T23:46:09.024405Z	      "slug": slug.current,
2025-09-16T23:46:09.024536Z	      logo
2025-09-16T23:46:09.025227Z	    },
2025-09-16T23:46:09.025412Z	    targetMarket,
2025-09-16T23:46:09.02562Z	    complexity,
2025-09-16T23:46:09.025765Z	    publishedAt,
2025-09-16T23:46:09.025922Z	    isPublished,
2025-09-16T23:46:09.0261Z	    isFeatured,
2025-09-16T23:46:09.026263Z	    viewCount,
2025-09-16T23:46:09.026375Z	    _createdAt,
2025-09-16T23:46:09.026473Z	    _updatedAt
2025-09-16T23:46:09.02665Z	  
2025-09-16T23:46:09.026811Z	      },
2025-09-16T23:46:09.026929Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-16T23:46:09.027112Z	    }
2025-09-16T23:46:09.027252Z	  
2025-09-16T23:46:09.027323Z	Query parameters: {
2025-09-16T23:46:09.02739Z	  limit: 4,
2025-09-16T23:46:09.027446Z	  offset: 0,
2025-09-16T23:46:09.027501Z	  targetMarket: undefined,
2025-09-16T23:46:09.027663Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:09.02781Z	  featured: undefined
2025-09-16T23:46:09.027922Z	}
2025-09-16T23:46:09.028034Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:09.028151Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:09.028258Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:09.028381Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:09.028496Z	Fetching products with query: 
2025-09-16T23:46:09.028661Z	    {
2025-09-16T23:46:09.028803Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:09.02891Z	        
2025-09-16T23:46:09.029007Z	    _id,
2025-09-16T23:46:09.029105Z	    _type,
2025-09-16T23:46:09.029208Z	    partNumber,
2025-09-16T23:46:09.029302Z	    "slug": slug.current,
2025-09-16T23:46:09.029412Z	    title,
2025-09-16T23:46:09.029557Z	    shortDescription,
2025-09-16T23:46:09.029685Z	    image,
2025-09-16T23:46:09.029832Z	    brand->{
2025-09-16T23:46:09.029974Z	      name,
2025-09-16T23:46:09.030076Z	      "slug": slug.current,
2025-09-16T23:46:09.030173Z	      logo
2025-09-16T23:46:09.030268Z	    },
2025-09-16T23:46:09.030376Z	    category->{
2025-09-16T23:46:09.030481Z	      name,
2025-09-16T23:46:09.030583Z	      "slug": slug.current
2025-09-16T23:46:09.030705Z	    },
2025-09-16T23:46:09.03087Z	    pricing{
2025-09-16T23:46:09.030974Z	      currency,
2025-09-16T23:46:09.031105Z	      tiers[]{
2025-09-16T23:46:09.031257Z	        quantity,
2025-09-16T23:46:09.031413Z	        price,
2025-09-16T23:46:09.031528Z	        unit
2025-09-16T23:46:09.031629Z	      },
2025-09-16T23:46:09.031797Z	      moq,
2025-09-16T23:46:09.031915Z	      leadTime,
2025-09-16T23:46:09.032042Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:09.032137Z	      "price": tiers[0].price,
2025-09-16T23:46:09.032229Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:09.032326Z	    },
2025-09-16T23:46:09.03243Z	    inventory{
2025-09-16T23:46:09.032522Z	      quantity,
2025-09-16T23:46:09.032611Z	      status,
2025-09-16T23:46:09.032723Z	      warehouse,
2025-09-16T23:46:09.032873Z	      lastUpdated,
2025-09-16T23:46:09.032979Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:09.033089Z	      "inStock": status == "in_stock",
2025-09-16T23:46:09.033247Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:09.033351Z	    },
2025-09-16T23:46:09.033463Z	    isActive,
2025-09-16T23:46:09.033563Z	    isFeatured,
2025-09-16T23:46:09.033683Z	    isNew,
2025-09-16T23:46:09.033793Z	    _createdAt,
2025-09-16T23:46:09.033896Z	    _updatedAt
2025-09-16T23:46:09.034006Z	  
2025-09-16T23:46:09.034108Z	      },
2025-09-16T23:46:09.034208Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-16T23:46:09.0346Z	    }
2025-09-16T23:46:09.03477Z	  
2025-09-16T23:46:09.034899Z	Query parameters: {
2025-09-16T23:46:09.035013Z	  limit: 8,
2025-09-16T23:46:09.035114Z	  offset: 0,
2025-09-16T23:46:09.035209Z	  category: undefined,
2025-09-16T23:46:09.035303Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:09.035417Z	  featured: undefined
2025-09-16T23:46:09.035532Z	}
2025-09-16T23:46:09.035644Z	Fetching solutions with query: 
2025-09-16T23:46:09.035765Z	    {
2025-09-16T23:46:09.035933Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:09.036127Z	        
2025-09-16T23:46:09.036255Z	    _id,
2025-09-16T23:46:09.036373Z	    title,
2025-09-16T23:46:09.036497Z	    "slug": slug.current,
2025-09-16T23:46:09.037003Z	    summary,
2025-09-16T23:46:09.037455Z	    description,
2025-09-16T23:46:09.038Z	    coverImage,
2025-09-16T23:46:09.038467Z	    primaryBrand->{
2025-09-16T23:46:09.038838Z	      _id,
2025-09-16T23:46:09.039175Z	      name,
2025-09-16T23:46:09.039602Z	      "slug": slug.current,
2025-09-16T23:46:09.03996Z	      logo
2025-09-16T23:46:09.040292Z	    },
2025-09-16T23:46:09.040627Z	    relatedBrands[]->{
2025-09-16T23:46:09.040996Z	      _id,
2025-09-16T23:46:09.041328Z	      name,
2025-09-16T23:46:09.041667Z	      "slug": slug.current,
2025-09-16T23:46:09.042132Z	      logo
2025-09-16T23:46:09.042484Z	    },
2025-09-16T23:46:09.044824Z	    targetMarket,
2025-09-16T23:46:09.044991Z	    complexity,
2025-09-16T23:46:09.045124Z	    publishedAt,
2025-09-16T23:46:09.045252Z	    isPublished,
2025-09-16T23:46:09.045362Z	    isFeatured,
2025-09-16T23:46:09.04549Z	    viewCount,
2025-09-16T23:46:09.045605Z	    _createdAt,
2025-09-16T23:46:09.045732Z	    _updatedAt
2025-09-16T23:46:09.045887Z	  
2025-09-16T23:46:09.045991Z	      },
2025-09-16T23:46:09.046119Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-16T23:46:09.046242Z	    }
2025-09-16T23:46:09.047091Z	  
2025-09-16T23:46:09.047251Z	Query parameters: {
2025-09-16T23:46:09.047361Z	  limit: 4,
2025-09-16T23:46:09.047467Z	  offset: 0,
2025-09-16T23:46:09.04771Z	  targetMarket: undefined,
2025-09-16T23:46:09.04813Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:09.048485Z	  featured: undefined
2025-09-16T23:46:09.048776Z	}
2025-09-16T23:46:09.04892Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:09.049019Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:09.049099Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:09.049176Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:46:09.049259Z	Fetching products with query: 
2025-09-16T23:46:09.049343Z	    {
2025-09-16T23:46:09.049431Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:09.049512Z	        
2025-09-16T23:46:09.049586Z	    _id,
2025-09-16T23:46:09.049668Z	    _type,
2025-09-16T23:46:09.049788Z	    partNumber,
2025-09-16T23:46:09.049874Z	    "slug": slug.current,
2025-09-16T23:46:09.049953Z	    title,
2025-09-16T23:46:09.050061Z	    shortDescription,
2025-09-16T23:46:09.050157Z	    image,
2025-09-16T23:46:09.05025Z	    brand->{
2025-09-16T23:46:09.050342Z	      name,
2025-09-16T23:46:09.052211Z	      "slug": slug.current,
2025-09-16T23:46:09.052697Z	      logo
2025-09-16T23:46:09.053047Z	    },
2025-09-16T23:46:09.053409Z	    category->{
2025-09-16T23:46:09.05385Z	      name,
2025-09-16T23:46:09.054277Z	      "slug": slug.current
2025-09-16T23:46:09.054561Z	    },
2025-09-16T23:46:09.05488Z	    pricing{
2025-09-16T23:46:09.055292Z	      currency,
2025-09-16T23:46:09.055444Z	      tiers[]{
2025-09-16T23:46:09.055824Z	        quantity,
2025-09-16T23:46:09.05631Z	        price,
2025-09-16T23:46:09.056571Z	        unit
2025-09-16T23:46:09.063899Z	      },
2025-09-16T23:46:09.064407Z	      moq,
2025-09-16T23:46:09.064761Z	      leadTime,
2025-09-16T23:46:09.065213Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:09.065717Z	      "price": tiers[0].price,
2025-09-16T23:46:09.066072Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:09.066634Z	    },
2025-09-16T23:46:09.066997Z	    inventory{
2025-09-16T23:46:09.067494Z	      quantity,
2025-09-16T23:46:09.067957Z	      status,
2025-09-16T23:46:09.068286Z	      warehouse,
2025-09-16T23:46:09.068421Z	      lastUpdated,
2025-09-16T23:46:09.06854Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:09.068693Z	      "inStock": status == "in_stock",
2025-09-16T23:46:09.068827Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:09.068932Z	    },
2025-09-16T23:46:09.069032Z	    isActive,
2025-09-16T23:46:09.069129Z	    isFeatured,
2025-09-16T23:46:09.069238Z	    isNew,
2025-09-16T23:46:09.069447Z	    _createdAt,
2025-09-16T23:46:09.069608Z	    _updatedAt
2025-09-16T23:46:09.069735Z	  
2025-09-16T23:46:09.069841Z	      },
2025-09-16T23:46:09.069944Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:46:09.070056Z	    }
2025-09-16T23:46:09.070162Z	  
2025-09-16T23:46:09.070268Z	Query parameters: {
2025-09-16T23:46:09.070357Z	  limit: 8,
2025-09-16T23:46:09.070447Z	  offset: 0,
2025-09-16T23:46:09.070548Z	  category: undefined,
2025-09-16T23:46:09.070694Z	  brand: 'Electronicon',
2025-09-16T23:46:09.070835Z	  featured: undefined
2025-09-16T23:46:09.07102Z	}
2025-09-16T23:46:09.071118Z	Fetching solutions with query: 
2025-09-16T23:46:09.071221Z	    {
2025-09-16T23:46:09.071323Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:09.07147Z	        
2025-09-16T23:46:09.071578Z	    _id,
2025-09-16T23:46:09.071696Z	    title,
2025-09-16T23:46:09.071802Z	    "slug": slug.current,
2025-09-16T23:46:09.071894Z	    summary,
2025-09-16T23:46:09.071984Z	    description,
2025-09-16T23:46:09.072072Z	    coverImage,
2025-09-16T23:46:09.072205Z	    primaryBrand->{
2025-09-16T23:46:09.07237Z	      _id,
2025-09-16T23:46:09.072661Z	      name,
2025-09-16T23:46:09.072816Z	      "slug": slug.current,
2025-09-16T23:46:09.072924Z	      logo
2025-09-16T23:46:09.073027Z	    },
2025-09-16T23:46:09.073133Z	    relatedBrands[]->{
2025-09-16T23:46:09.073237Z	      _id,
2025-09-16T23:46:09.07334Z	      name,
2025-09-16T23:46:09.073457Z	      "slug": slug.current,
2025-09-16T23:46:09.073587Z	      logo
2025-09-16T23:46:09.073729Z	    },
2025-09-16T23:46:09.073842Z	    targetMarket,
2025-09-16T23:46:09.073949Z	    complexity,
2025-09-16T23:46:09.074044Z	    publishedAt,
2025-09-16T23:46:09.074584Z	    isPublished,
2025-09-16T23:46:09.074736Z	    isFeatured,
2025-09-16T23:46:09.074882Z	    viewCount,
2025-09-16T23:46:09.075002Z	    _createdAt,
2025-09-16T23:46:09.075109Z	    _updatedAt
2025-09-16T23:46:09.075219Z	  
2025-09-16T23:46:09.07533Z	      },
2025-09-16T23:46:09.075444Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:46:09.075608Z	    }
2025-09-16T23:46:09.075748Z	  
2025-09-16T23:46:09.075857Z	Query parameters: {
2025-09-16T23:46:09.075966Z	  limit: 4,
2025-09-16T23:46:09.076123Z	  offset: 0,
2025-09-16T23:46:09.07624Z	  targetMarket: undefined,
2025-09-16T23:46:09.076353Z	  brand: 'Electronicon',
2025-09-16T23:46:09.07646Z	  featured: undefined
2025-09-16T23:46:09.076568Z	}
2025-09-16T23:46:09.076705Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:46:09.076833Z	Fetching products with query: 
2025-09-16T23:46:09.076939Z	    {
2025-09-16T23:46:09.077092Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:09.077265Z	        
2025-09-16T23:46:09.077422Z	    _id,
2025-09-16T23:46:09.077567Z	    _type,
2025-09-16T23:46:09.077719Z	    partNumber,
2025-09-16T23:46:09.077885Z	    "slug": slug.current,
2025-09-16T23:46:09.078005Z	    title,
2025-09-16T23:46:09.078113Z	    shortDescription,
2025-09-16T23:46:09.078229Z	    image,
2025-09-16T23:46:09.078358Z	    brand->{
2025-09-16T23:46:09.07848Z	      name,
2025-09-16T23:46:09.078597Z	      "slug": slug.current,
2025-09-16T23:46:09.078793Z	      logo
2025-09-16T23:46:09.078932Z	    },
2025-09-16T23:46:09.079058Z	    category->{
2025-09-16T23:46:09.079182Z	      name,
2025-09-16T23:46:09.079322Z	      "slug": slug.current
2025-09-16T23:46:09.079639Z	    },
2025-09-16T23:46:09.079792Z	    pricing{
2025-09-16T23:46:09.079903Z	      currency,
2025-09-16T23:46:09.080014Z	      tiers[]{
2025-09-16T23:46:09.080127Z	        quantity,
2025-09-16T23:46:09.080231Z	        price,
2025-09-16T23:46:09.080335Z	        unit
2025-09-16T23:46:09.080438Z	      },
2025-09-16T23:46:09.080541Z	      moq,
2025-09-16T23:46:09.080638Z	      leadTime,
2025-09-16T23:46:09.08078Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:09.080888Z	      "price": tiers[0].price,
2025-09-16T23:46:09.080993Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:09.081099Z	    },
2025-09-16T23:46:09.081223Z	    inventory{
2025-09-16T23:46:09.081321Z	      quantity,
2025-09-16T23:46:09.081572Z	      status,
2025-09-16T23:46:09.081755Z	      warehouse,
2025-09-16T23:46:09.08191Z	      lastUpdated,
2025-09-16T23:46:09.08205Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:09.124657Z	      "inStock": status == "in_stock",
2025-09-16T23:46:09.124896Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:09.125027Z	    },
2025-09-16T23:46:09.125165Z	    isActive,
2025-09-16T23:46:09.125301Z	    isFeatured,
2025-09-16T23:46:09.125474Z	    isNew,
2025-09-16T23:46:09.12571Z	    _createdAt,
2025-09-16T23:46:09.126074Z	    _updatedAt
2025-09-16T23:46:09.126455Z	  
2025-09-16T23:46:09.127343Z	      },
2025-09-16T23:46:09.128059Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:46:09.128279Z	    }
2025-09-16T23:46:09.128489Z	  
2025-09-16T23:46:09.128611Z	Query parameters: {
2025-09-16T23:46:09.128731Z	  limit: 8,
2025-09-16T23:46:09.128829Z	  offset: 0,
2025-09-16T23:46:09.128919Z	  category: undefined,
2025-09-16T23:46:09.129007Z	  brand: 'Electronicon',
2025-09-16T23:46:09.129095Z	  featured: undefined
2025-09-16T23:46:09.12918Z	}
2025-09-16T23:46:09.129267Z	Fetching solutions with query: 
2025-09-16T23:46:09.129357Z	    {
2025-09-16T23:46:09.129472Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:09.129591Z	        
2025-09-16T23:46:09.12971Z	    _id,
2025-09-16T23:46:09.12981Z	    title,
2025-09-16T23:46:09.129902Z	    "slug": slug.current,
2025-09-16T23:46:09.130002Z	    summary,
2025-09-16T23:46:09.131373Z	    description,
2025-09-16T23:46:09.131754Z	    coverImage,
2025-09-16T23:46:09.132071Z	    primaryBrand->{
2025-09-16T23:46:09.13224Z	      _id,
2025-09-16T23:46:09.132407Z	      name,
2025-09-16T23:46:09.132575Z	      "slug": slug.current,
2025-09-16T23:46:09.132781Z	      logo
2025-09-16T23:46:09.132943Z	    },
2025-09-16T23:46:09.13311Z	    relatedBrands[]->{
2025-09-16T23:46:09.133267Z	      _id,
2025-09-16T23:46:09.134011Z	      name,
2025-09-16T23:46:09.134532Z	      "slug": slug.current,
2025-09-16T23:46:09.13499Z	      logo
2025-09-16T23:46:09.135968Z	    },
2025-09-16T23:46:09.136124Z	    targetMarket,
2025-09-16T23:46:09.136235Z	    complexity,
2025-09-16T23:46:09.136342Z	    publishedAt,
2025-09-16T23:46:09.136454Z	    isPublished,
2025-09-16T23:46:09.137041Z	    isFeatured,
2025-09-16T23:46:09.137153Z	    viewCount,
2025-09-16T23:46:09.142505Z	    _createdAt,
2025-09-16T23:46:09.142877Z	    _updatedAt
2025-09-16T23:46:09.143008Z	  
2025-09-16T23:46:09.143141Z	      },
2025-09-16T23:46:09.143261Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:46:09.143361Z	    }
2025-09-16T23:46:09.143471Z	  
2025-09-16T23:46:09.143567Z	Query parameters: {
2025-09-16T23:46:09.143663Z	  limit: 4,
2025-09-16T23:46:09.143776Z	  offset: 0,
2025-09-16T23:46:09.143866Z	  targetMarket: undefined,
2025-09-16T23:46:09.143957Z	  brand: 'Electronicon',
2025-09-16T23:46:09.144051Z	  featured: undefined
2025-09-16T23:46:09.144143Z	}
2025-09-16T23:46:09.144237Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:46:09.144334Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:46:09.144438Z	Products fetch result: {
2025-09-16T23:46:09.145101Z	  totalProducts: 2,
2025-09-16T23:46:09.145268Z	  fetchedProducts: 2,
2025-09-16T23:46:09.145459Z	  firstProduct: {
2025-09-16T23:46:09.14558Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:46:09.145701Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:46:09.145802Z	    _type: 'product',
2025-09-16T23:46:09.146507Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:46:09.146667Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:46:09.146842Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:46:09.146973Z	    image: null,
2025-09-16T23:46:09.147076Z	    inventory: {
2025-09-16T23:46:09.147173Z	      inStock: true,
2025-09-16T23:46:09.14727Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:46:09.147434Z	      quantity: 0,
2025-09-16T23:46:09.147781Z	      status: 'in_stock',
2025-09-16T23:46:09.147911Z	      warehouse: null
2025-09-16T23:46:09.148003Z	    },
2025-09-16T23:46:09.148146Z	    isActive: true,
2025-09-16T23:46:09.148241Z	    isFeatured: false,
2025-09-16T23:46:09.148539Z	    isNew: false,
2025-09-16T23:46:09.148653Z	    partNumber: '99999',
2025-09-16T23:46:09.148775Z	    pricing: {
2025-09-16T23:46:09.151937Z	      currency: 'CNY',
2025-09-16T23:46:09.152086Z	      leadTime: null,
2025-09-16T23:46:09.152203Z	      moq: null,
2025-09-16T23:46:09.152306Z	      price: null,
2025-09-16T23:46:09.152419Z	      tiers: null
2025-09-16T23:46:09.152532Z	    },
2025-09-16T23:46:09.152643Z	    shortDescription: null,
2025-09-16T23:46:09.152782Z	    slug: '99999',
2025-09-16T23:46:09.152892Z	    title: '99999'
2025-09-16T23:46:09.152994Z	  }
2025-09-16T23:46:09.153101Z	}
2025-09-16T23:46:09.155072Z	Products fetch result: {
2025-09-16T23:46:09.155197Z	  totalProducts: 2,
2025-09-16T23:46:09.155297Z	  fetchedProducts: 2,
2025-09-16T23:46:09.15541Z	  firstProduct: {
2025-09-16T23:46:09.155898Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:46:09.156016Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:46:09.156122Z	    _type: 'product',
2025-09-16T23:46:09.156243Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:46:09.156356Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:46:09.156469Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:46:09.15657Z	    image: null,
2025-09-16T23:46:09.156659Z	    inventory: {
2025-09-16T23:46:09.156767Z	      inStock: true,
2025-09-16T23:46:09.156878Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:46:09.156967Z	      quantity: 0,
2025-09-16T23:46:09.15705Z	      status: 'in_stock',
2025-09-16T23:46:09.157135Z	      warehouse: null
2025-09-16T23:46:09.157217Z	    },
2025-09-16T23:46:09.157299Z	    isActive: true,
2025-09-16T23:46:09.157384Z	    isFeatured: false,
2025-09-16T23:46:09.157484Z	    isNew: false,
2025-09-16T23:46:09.157581Z	    partNumber: '99999',
2025-09-16T23:46:09.157692Z	    pricing: {
2025-09-16T23:46:09.157787Z	      currency: 'CNY',
2025-09-16T23:46:09.157875Z	      leadTime: null,
2025-09-16T23:46:09.157961Z	      moq: null,
2025-09-16T23:46:09.158038Z	      price: null,
2025-09-16T23:46:09.158123Z	      tiers: null
2025-09-16T23:46:09.158213Z	    },
2025-09-16T23:46:09.15831Z	    shortDescription: null,
2025-09-16T23:46:09.158417Z	    slug: '99999',
2025-09-16T23:46:09.158524Z	    title: '99999'
2025-09-16T23:46:09.158628Z	  }
2025-09-16T23:46:09.158745Z	}
2025-09-16T23:46:09.158841Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:09.158941Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:09.159042Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-16T23:46:09.159173Z	Fetching products with query: 
2025-09-16T23:46:09.159304Z	    {
2025-09-16T23:46:09.159432Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:09.159602Z	        
2025-09-16T23:46:09.159731Z	    _id,
2025-09-16T23:46:09.159828Z	    _type,
2025-09-16T23:46:09.159922Z	    partNumber,
2025-09-16T23:46:09.160024Z	    "slug": slug.current,
2025-09-16T23:46:09.160111Z	    title,
2025-09-16T23:46:09.160194Z	    shortDescription,
2025-09-16T23:46:09.160276Z	    image,
2025-09-16T23:46:09.160359Z	    brand->{
2025-09-16T23:46:09.160453Z	      name,
2025-09-16T23:46:09.160545Z	      "slug": slug.current,
2025-09-16T23:46:09.160633Z	      logo
2025-09-16T23:46:09.160741Z	    },
2025-09-16T23:46:09.160847Z	    category->{
2025-09-16T23:46:09.160945Z	      name,
2025-09-16T23:46:09.161036Z	      "slug": slug.current
2025-09-16T23:46:09.161128Z	    },
2025-09-16T23:46:09.161218Z	    pricing{
2025-09-16T23:46:09.161305Z	      currency,
2025-09-16T23:46:09.161399Z	      tiers[]{
2025-09-16T23:46:09.161492Z	        quantity,
2025-09-16T23:46:09.16223Z	        price,
2025-09-16T23:46:09.162727Z	        unit
2025-09-16T23:46:09.163186Z	      },
2025-09-16T23:46:09.163935Z	      moq,
2025-09-16T23:46:09.230354Z	      leadTime,
2025-09-16T23:46:09.230537Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:09.230702Z	      "price": tiers[0].price,
2025-09-16T23:46:09.230835Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:09.230949Z	    },
2025-09-16T23:46:09.231053Z	    inventory{
2025-09-16T23:46:09.231161Z	      quantity,
2025-09-16T23:46:09.231262Z	      status,
2025-09-16T23:46:09.231365Z	      warehouse,
2025-09-16T23:46:09.231483Z	      lastUpdated,
2025-09-16T23:46:09.23159Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:09.23172Z	      "inStock": status == "in_stock",
2025-09-16T23:46:09.231832Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:09.231936Z	    },
2025-09-16T23:46:09.232044Z	    isActive,
2025-09-16T23:46:09.232151Z	    isFeatured,
2025-09-16T23:46:09.232249Z	    isNew,
2025-09-16T23:46:09.232347Z	    _createdAt,
2025-09-16T23:46:09.232465Z	    _updatedAt
2025-09-16T23:46:09.232572Z	  
2025-09-16T23:46:09.232688Z	      },
2025-09-16T23:46:09.232803Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-16T23:46:09.23292Z	    }
2025-09-16T23:46:09.233023Z	  
2025-09-16T23:46:09.233135Z	Query parameters: {
2025-09-16T23:46:09.23325Z	  limit: 8,
2025-09-16T23:46:09.233356Z	  offset: 0,
2025-09-16T23:46:09.233469Z	  category: undefined,
2025-09-16T23:46:09.23357Z	  brand: 'ncc',
2025-09-16T23:46:09.233665Z	  featured: undefined
2025-09-16T23:46:09.233784Z	}
2025-09-16T23:46:09.234771Z	Fetching solutions with query: 
2025-09-16T23:46:09.23491Z	    {
2025-09-16T23:46:09.235024Z	      "solutions": *[_ty)
2025-09-16T23:46:09.235116Z	    at runNextTicks (node:internal/process/task_queues:60:5)
2025-09-16T23:46:09.235212Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:46:09.235308Z	    at process.processTimers (node:internal/timers:512:7)
2025-09-16T23:46:09.23541Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:09.235506Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:09.235651Z	}
2025-09-16T23:46:09.235763Z	
2025-09-16T23:46:09.235855Z	Error occurred prerendering page "/ko/solutions/99999". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:09.235947Z	
2025-09-16T23:46:09.236037Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:09.236133Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:09.2363Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:09.236447Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:09.236562Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:09.236756Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:09.236854Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:09.236935Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:09.237016Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:09.237097Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:09.237183Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:09.237275Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:09.237364Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:09.237469Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:09.237564Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:09.237664Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:09.23779Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:09.237896Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:09.237992Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:09.238087Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:09.23818Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:09.238275Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:09.238371Z	  digest: '1870762441'
2025-09-16T23:46:09.238479Z	}
2025-09-16T23:46:09.238577Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:09.238707Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:09.238812Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:09.238907Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:09.239006Z	}
2025-09-16T23:46:09.239099Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:09.239185Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:09.239316Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:09.239425Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:09.23953Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:09.239639Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:09.23978Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:09.239875Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:09.239966Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:09.240059Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:09.24015Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:09.240237Z	  digest: '1870762441'
2025-09-16T23:46:09.240339Z	}
2025-09-16T23:46:09.240447Z	
2025-09-16T23:46:09.240539Z	Error occurred prerendering page "/ko/solutions/concrol". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:09.240641Z	
2025-09-16T23:46:09.240755Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:09.240851Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:09.240946Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:09.241053Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:09.241148Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:09.241245Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:09.24134Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:09.241447Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:09.241557Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:09.241653Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:09.2418Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:09.241897Z	
2025-09-16T23:46:09.241993Z	Error occurred prerendering page "/ko/solutions/charger". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:09.242096Z	
2025-09-16T23:46:09.249884Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:09.250236Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:09.250397Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:09.250751Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:09.251211Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:09.251359Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:09.251524Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:09.251694Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:09.251824Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:09.251975Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:09.252222Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:09.252347Z	
2025-09-16T23:46:09.252489Z	Error occurred prerendering page "/ko/solutions/motodiriver". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:09.252606Z	
2025-09-16T23:46:09.25279Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:09.252891Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:09.252976Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:09.253088Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:09.253256Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:09.253561Z	    at nB (/opt/buildhome/repo/node_modules/nextpe == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:09.253906Z	        
2025-09-16T23:46:09.254053Z	    _id,
2025-09-16T23:46:09.254358Z	    title,
2025-09-16T23:46:09.25448Z	    "slug": slug.current,
2025-09-16T23:46:09.254817Z	    summary,
2025-09-16T23:46:09.254943Z	    description,
2025-09-16T23:46:09.255215Z	    coverImage,
2025-09-16T23:46:09.255482Z	    primaryBrand->{
2025-09-16T23:46:09.255752Z	      _id,
2025-09-16T23:46:09.255991Z	      name,
2025-09-16T23:46:09.256223Z	      "slug": slug.current,
2025-09-16T23:46:09.256454Z	      logo
2025-09-16T23:46:09.256691Z	    },
2025-09-16T23:46:09.25693Z	    relatedBrands[]->{
2025-09-16T23:46:09.259603Z	      _id,
2025-09-16T23:46:09.259879Z	      name,
2025-09-16T23:46:09.260068Z	      "slug": slug.current,
2025-09-16T23:46:09.260236Z	      logo
2025-09-16T23:46:09.260398Z	    },
2025-09-16T23:46:09.260518Z	    targetMarket,
2025-09-16T23:46:09.260638Z	    complexity,
2025-09-16T23:46:09.260773Z	    publishedAt,
2025-09-16T23:46:09.260885Z	    isPublished,
2025-09-16T23:46:09.260993Z	    isFeatured,
2025-09-16T23:46:09.261101Z	    viewCount,
2025-09-16T23:46:09.261215Z	    _createdAt,
2025-09-16T23:46:09.261324Z	    _updatedAt
2025-09-16T23:46:09.261429Z	  
2025-09-16T23:46:09.261533Z	      },
2025-09-16T23:46:09.261637Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-16T23:46:09.261775Z	    }
2025-09-16T23:46:09.261887Z	  
2025-09-16T23:46:09.261994Z	Query parameters: {
2025-09-16T23:46:09.262092Z	  limit: 4,
2025-09-16T23:46:09.262196Z	  offset: 0,
2025-09-16T23:46:09.262297Z	  targetMarket: undefined,
2025-09-16T23:46:09.262412Z	  brand: 'ncc',
2025-09-16T23:46:09.262524Z	  featured: undefined
2025-09-16T23:46:09.262623Z	}
2025-09-16T23:46:09.263738Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-16T23:46:09.26392Z	Fetching products with query: 
2025-09-16T23:46:09.264045Z	    {
2025-09-16T23:46:09.264167Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:09.2643Z	        
2025-09-16T23:46:09.264428Z	    _id,
2025-09-16T23:46:09.264534Z	    _type,
2025-09-16T23:46:09.264646Z	    partNumber,
2025-09-16T23:46:09.264778Z	    "slug": slug.current,
2025-09-16T23:46:09.264889Z	    title,
2025-09-16T23:46:09.265056Z	    shortDescription,
2025-09-16T23:46:09.265162Z	    image,
2025-09-16T23:46:09.265261Z	    brand->{
2025-09-16T23:46:09.265638Z	      name,
2025-09-16T23:46:09.265914Z	      "slug": slug.current,
2025-09-16T23:46:09.266034Z	      logo
2025-09-16T23:46:09.266132Z	    },
2025-09-16T23:46:09.266272Z	    category->{
2025-09-16T23:46:09.266368Z	      name,
2025-09-16T23:46:09.266491Z	      "slug": slug.current
2025-09-16T23:46:09.266637Z	    },
2025-09-16T23:46:09.26678Z	    pricing{
2025-09-16T23:46:09.266928Z	      currency,
2025-09-16T23:46:09.267053Z	      tiers[]{
2025-09-16T23:46:09.267189Z	        quantity,
2025-09-16T23:46:09.267322Z	        price,
2025-09-16T23:46:09.267509Z	        unit
2025-09-16T23:46:09.267632Z	      },
2025-09-16T23:46:09.267756Z	      moq,
2025-09-16T23:46:09.267862Z	      leadTime,
2025-09-16T23:46:09.26796Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:09.268055Z	      "price": tiers[0].price,
2025-09-16T23:46:09.268192Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:09.268318Z	    },
2025-09-16T23:46:09.26846Z	    inventory{
2025-09-16T23:46:09.268571Z	      quantity,
2025-09-16T23:46:09.268725Z	      status,
2025-09-16T23:46:09.268979Z	      warehouse,
2025-09-16T23:46:09.269162Z	      lastUpdated,
2025-09-16T23:46:09.269325Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:09.269496Z	      "inStock": status == "in_stock",
2025-09-16T23:46:09.269652Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:09.269815Z	    },
2025-09-16T23:46:09.269961Z	    isActive,
2025-09-16T23:46:09.270105Z	    isFeatured,
2025-09-16T23:46:09.270242Z	    isNew,
2025-09-16T23:46:09.270392Z	    _createdAt,
2025-09-16T23:46:09.270553Z	    _updatedAt
2025-09-16T23:46:09.270732Z	  
2025-09-16T23:46:09.270888Z	      },
2025-09-16T23:46:09.271053Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-16T23:46:09.271221Z	    }
2025-09-16T23:46:09.271405Z	  
2025-09-16T23:46:09.271692Z	Query parameters: {
2025-09-16T23:46:09.27184Z	  limit: 8,
2025-09-16T23:46:09.271956Z	  offset: 0,
2025-09-16T23:46:09.272196Z	  category: undefined,
2025-09-16T23:46:09.272417Z	  brand: 'ncc',
2025-09-16T23:46:09.272537Z	  featured: undefined
2025-09-16T23:46:09.27264Z	}
2025-09-16T23:46:09.272774Z	Fetching solutions with query: 
2025-09-16T23:46:09.272878Z	    {
2025-09-16T23:46:09.272977Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:09.273079Z	        
2025-09-16T23:46:09.273174Z	    _id,
2025-09-16T23:46:09.273266Z	    title,
2025-09-16T23:46:09.273365Z	    "slug": slug.current,
2025-09-16T23:46:09.273462Z	    summary,
2025-09-16T23:46:09.273559Z	    description,
2025-09-16T23:46:09.273654Z	    coverImage,
2025-09-16T23:46:09.324131Z	    primaryBrand->{
2025-09-16T23:46:09.324319Z	      _id,
2025-09-16T23:46:09.324444Z	      name,
2025-09-16T23:46:09.324612Z	      "slug": slug.current,
2025-09-16T23:46:09.324968Z	      logo
2025-09-16T23:46:09.325114Z	    },
2025-09-16T23:46:09.325241Z	    relatedBrands[]->{
2025-09-16T23:46:09.325342Z	      _id,
2025-09-16T23:46:09.32546Z	      name,
2025-09-16T23:46:09.325548Z	      "slug": slug.current,
2025-09-16T23:46:09.325632Z	      logo
2025-09-16T23:46:09.325742Z	    },
2025-09-16T23:46:09.325834Z	    targetMarket,
2025-09-16T23:46:09.325952Z	    complexity,
2025-09-16T23:46:09.326077Z	    publishedAt,
2025-09-16T23:46:09.326168Z	    isPublished,
2025-09-16T23:46:09.326257Z	    isFeatured,
2025-09-16T23:46:09.3264Z	    viewCount,
2025-09-16T23:46:09.32651Z	    _createdAt,
2025-09-16T23:46:09.326688Z	    _updatedAt
2025-09-16T23:46:09.326817Z	  
2025-09-16T23:46:09.327254Z	      },
2025-09-16T23:46:09.327534Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-16T23:46:09.334887Z	    }
2025-09-16T23:46:09.335034Z	  
2025-09-16T23:46:09.335145Z	Query parameters: {
2025-09-16T23:46:09.335256Z	  limit: 4,
2025-09-16T23:46:09.335363Z	  offset: 0,
2025-09-16T23:46:09.335478Z	  targetMarket: undefined,
2025-09-16T23:46:09.335578Z	  brand: 'ncc',
2025-09-16T23:46:09.335694Z	  featured: undefined
2025-09-16T23:46:09.335806Z	}
2025-09-16T23:46:09.335913Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:09.336014Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:09.336107Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:09.336216Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:09.336314Z	✅ [getBrandData] Found brand: ncc
2025-09-16T23:46:09.336414Z	✅ [getBrandData] Found brand: ncc
2025-09-16T23:46:09.336534Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-16T23:46:09.336738Z	Fetching products with query: 
2025-09-16T23:46:09.337412Z	    {
2025-09-16T23:46:09.33756Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:09.337969Z	        
2025-09-16T23:46:09.338098Z	    _id,
2025-09-16T23:46:09.338502Z	    _type,
2025-09-16T23:46:09.338712Z	    partNumber,
2025-09-16T23:46:09.339163Z	    "slug": slug.current,
2025-09-16T23:46:09.339272Z	    title,
2025-09-16T23:46:09.339335Z	    shortDescription,
2025-09-16T23:46:09.339393Z	    image,
2025-09-16T23:46:09.339454Z	    brand->{
2025-09-16T23:46:09.33951Z	      name,
2025-09-16T23:46:09.339566Z	      "slug": slug.current,
2025-09-16T23:46:09.339973Z	      logo
2025-09-16T23:46:09.340074Z	    },
2025-09-16T23:46:09.340249Z	    category->{
2025-09-16T23:46:09.3404Z	      name,
2025-09-16T23:46:09.340653Z	      "slug": sl/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:09.340795Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:09.340901Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:09.341002Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:09.341105Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:09.341202Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:09.341297Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:09.341419Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:09.342046Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:09.342191Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:09.342315Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:09.342436Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:09.342571Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:09.345852Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:09.34629Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:09.346653Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:09.346826Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:09.346934Z	  digest: '3820195337'
2025-09-16T23:46:09.347033Z	}
2025-09-16T23:46:09.347133Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:09.347512Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:09.347858Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:09.34799Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:09.348093Z	}
2025-09-16T23:46:09.348421Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:09.348736Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:09.348866Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:09.34934Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:09.349469Z	}
2025-09-16T23:46:09.349778Z	
2025-09-16T23:46:09.350093Z	Error occurred prerendering page "/ko/solutions/infineon-aurix-automotive-solution". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:09.350214Z	
2025-09-16T23:46:09.350531Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:09.350877Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:09.350997Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:09.351305Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:09.351628Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:09.351787Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:09.352127Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:09.352452Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:09.352573Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:09.352922Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:09.353058Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:09.353541Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:09.353918Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/comug.current
2025-09-16T23:46:09.35424Z	    },
2025-09-16T23:46:09.354567Z	    pricing{
2025-09-16T23:46:09.354909Z	      currency,
2025-09-16T23:46:09.355233Z	      tiers[]{
2025-09-16T23:46:09.355549Z	        quantity,
2025-09-16T23:46:09.355912Z	        price,
2025-09-16T23:46:09.356227Z	        unit
2025-09-16T23:46:09.356359Z	      },
2025-09-16T23:46:09.356701Z	      moq,
2025-09-16T23:46:09.357013Z	      leadTime,
2025-09-16T23:46:09.357317Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:09.35855Z	      "price": tiers[0].price,
2025-09-16T23:46:09.359375Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:09.359512Z	    },
2025-09-16T23:46:09.359621Z	    inventory{
2025-09-16T23:46:09.359855Z	      quantity,
2025-09-16T23:46:09.360055Z	      status,
2025-09-16T23:46:09.360236Z	      warehouse,
2025-09-16T23:46:09.360378Z	      lastUpdated,
2025-09-16T23:46:09.360512Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:09.363429Z	      "inStock": status == "in_stock",
2025-09-16T23:46:09.363595Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:09.363755Z	    },
2025-09-16T23:46:09.363882Z	    isActive,
2025-09-16T23:46:09.363992Z	    isFeatured,
2025-09-16T23:46:09.36409Z	    isNew,
2025-09-16T23:46:09.364186Z	    _createdAt,
2025-09-16T23:46:09.364285Z	    _updatedAt
2025-09-16T23:46:09.364383Z	  
2025-09-16T23:46:09.364583Z	      },
2025-09-16T23:46:09.36497Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-16T23:46:09.365144Z	    }
2025-09-16T23:46:09.365366Z	  
2025-09-16T23:46:09.365493Z	Query parameters: {
2025-09-16T23:46:09.365607Z	  limit: 8,
2025-09-16T23:46:09.365745Z	  offset: 0,
2025-09-16T23:46:09.365859Z	  category: undefined,
2025-09-16T23:46:09.365975Z	  brand: 'epcos',
2025-09-16T23:46:09.366087Z	  featured: undefined
2025-09-16T23:46:09.366213Z	}
2025-09-16T23:46:09.366313Z	Fetching solutions with query: 
2025-09-16T23:46:09.366474Z	    {
2025-09-16T23:46:09.366633Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:09.366847Z	        
2025-09-16T23:46:09.367063Z	    _id,
2025-09-16T23:46:09.367383Z	    title,
2025-09-16T23:46:09.367575Z	    "slug": slug.current,
2025-09-16T23:46:09.367726Z	    summary,
2025-09-16T23:46:09.367839Z	    description,
2025-09-16T23:46:09.367938Z	    coverImage,
2025-09-16T23:46:09.368035Z	    primaryBrand->{
2025-09-16T23:46:09.368129Z	      _id,
2025-09-16T23:46:09.368257Z	      name,
2025-09-16T23:46:09.368431Z	      "slug": slug.current,
2025-09-16T23:46:09.368574Z	      logo
2025-09-16T23:46:09.368702Z	    },
2025-09-16T23:46:09.368816Z	    relatedBrands[]->{
2025-09-16T23:46:09.368926Z	      _id,
2025-09-16T23:46:09.369033Z	      name,
2025-09-16T23:46:09.369156Z	      "slug": slug.current,
2025-09-16T23:46:09.369533Z	      logo
2025-09-16T23:46:09.369662Z	    },
2025-09-16T23:46:09.369801Z	    targetMarket,
2025-09-16T23:46:09.369916Z	    complexity,
2025-09-16T23:46:09.370031Z	    publishedAt,
2025-09-16T23:46:09.370133Z	    isPublished,
2025-09-16T23:46:09.370231Z	    isFeatured,
2025-09-16T23:46:09.37033Z	    viewCount,
2025-09-16T23:46:09.370441Z	    _createdAt,
2025-09-16T23:46:09.370545Z	    _updatedAt
2025-09-16T23:46:09.370654Z	  
2025-09-16T23:46:09.370773Z	      },
2025-09-16T23:46:09.370874Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-16T23:46:09.370973Z	    }
2025-09-16T23:46:09.37107Z	  
2025-09-16T23:46:09.371172Z	Query parameters: {
2025-09-16T23:46:09.3713Z	  limit: 4,
2025-09-16T23:46:09.371423Z	  offset: 0,
2025-09-16T23:46:09.371603Z	  targetMarket: undefined,
2025-09-16T23:46:09.371911Z	  brand: 'epcos',
2025-09-16T23:46:09.372095Z	  featured: undefined
2025-09-16T23:46:09.37229Z	}
2025-09-16T23:46:09.372483Z	✅ [getBrandData] Found brand: Epcos
2025-09-16T23:46:09.372697Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:09.373056Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:09.373333Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-16T23:46:09.373501Z	Fetching products with query: 
2025-09-16T23:46:09.373615Z	    {
2025-09-16T23:46:09.373762Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:09.373875Z	        
2025-09-16T23:46:09.373984Z	    _id,
2025-09-16T23:46:09.374087Z	    _type,
2025-09-16T23:46:09.374198Z	    partNumber,
2025-09-16T23:46:09.374295Z	    "slug": slug.current,
2025-09-16T23:46:09.374384Z	    title,
2025-09-16T23:46:09.374484Z	    shortDescription,
2025-09-16T23:46:09.374576Z	    image,
2025-09-16T23:46:09.374703Z	    brand->{
2025-09-16T23:46:09.374795Z	      name,
2025-09-16T23:46:09.374853Z	      "slug": slug.current,
2025-09-16T23:46:09.374918Z	      logo
2025-09-16T23:46:09.374974Z	    },
2025-09-16T23:46:09.375027Z	    category->{
2025-09-16T23:46:09.375089Z	      name,
2025-09-16T23:46:09.375143Z	      "slug": slug.current
2025-09-16T23:46:09.375196Z	    },
2025-09-16T23:46:09.375249Z	    pricing{
2025-09-16T23:46:09.375302Z	      currency,
2025-09-16T23:46:09.375355Z	      tiers[]{
2025-09-16T23:46:09.375413Z	        quantity,
2025-09-16T23:46:09.375473Z	        price,
2025-09-16T23:46:09.375532Z	        unit
2025-09-16T23:46:09.375586Z	      },
2025-09-16T23:46:09.375648Z	      moq,
2025-09-16T23:46:09.424163Z	      leadTime,
2025-09-16T23:46:09.425182Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:09.425368Z	      "price": tiers[0].price,
2025-09-16T23:46:09.425503Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:09.425605Z	    },
2025-09-16T23:46:09.426025Z	    inventory{
2025-09-16T23:46:09.428813Z	      quantity,
2025-09-16T23:46:09.429074Z	      status,
2025-09-16T23:46:09.429333Z	      warehouse,
2025-09-16T23:46:09.429532Z	      lastUpdated,
2025-09-16T23:46:09.429874Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:09.430154Z	      "inStock": status == "in_stock",
2025-09-16T23:46:09.430436Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:09.430569Z	    },
2025-09-16T23:46:09.430724Z	    isActive,
2025-09-16T23:46:09.431071Z	    isFeatured,
2025-09-16T23:46:09.431266Z	    isNew,
2025-09-16T23:46:09.431384Z	    _createdAt,
2025-09-16T23:46:09.431491Z	    _updatedAt
2025-09-16T23:46:09.431589Z	  
2025-09-16T23:46:09.431725Z	      },
2025-09-16T23:46:09.431833Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-16T23:46:09.431944Z	    }
2025-09-16T23:46:09.432047Z	  
2025-09-16T23:46:09.43215Z	Query parameters: {
2025-09-16T23:46:09.432258Z	  limit: 8,
2025-09-16T23:46:09.432369Z	  offset: 0,
2025-09-16T23:46:09.432467Z	  category: undefined,
2025-09-16T23:46:09.432644Z	  brand: 'epcos',
2025-09-16T23:46:09.432791Z	  featured: undefined
2025-09-16T23:46:09.432898Z	}
2025-09-16T23:46:09.432999Z	Fetching solutions with query: 
2025-09-16T23:46:09.433117Z	    {
2025-09-16T23:46:09.433221Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:09.433376Z	        
2025-09-16T23:46:09.433487Z	    _id,
2025-09-16T23:46:09.433583Z	    title,
2025-09-16T23:46:09.43371Z	    "slug": slug.current,
2025-09-16T23:46:09.433816Z	    summary,
2025-09-16T23:46:09.433911Z	    description,
2025-09-16T23:46:09.434012Z	    coverImage,
2025-09-16T23:46:09.434163Z	    primaryBrand->{
2025-09-16T23:46:09.434283Z	      _id,
2025-09-16T23:46:09.434393Z	      name,
2025-09-16T23:46:09.434525Z	      "slug": slug.current,
2025-09-16T23:46:09.434738Z	      logo
2025-09-16T23:46:09.434964Z	    },
2025-09-16T23:46:09.435097Z	    relatedBrands[]->{
2025-09-16T23:46:09.435212Z	      _id,
2025-09-16T23:46:09.435472Z	      name,
2025-09-16T23:46:09.435629Z	      "slug": slug.current,
2025-09-16T23:46:09.435784Z	      logo
2025-09-16T23:46:09.435943Z	    },
2025-09-16T23:46:09.436106Z	    targetMarket,
2025-09-16T23:46:09.436654Z	    complexity,
2025-09-16T23:46:09.436808Z	    publishedAt,
2025-09-16T23:46:09.436935Z	    isPublished,
2025-09-16T23:46:09.437192Z	    isFeatured,
2025-09-16T23:46:09.437595Z	    viewCount,
2025-09-16T23:46:09.437744Z	    _createdAt,
2025-09-16T23:46:09.437894Z	    _updatedAt
2025-09-16T23:46:09.438117Z	  
2025-09-16T23:46:09.438293Z	      },
2025-09-16T23:46:09.438483Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-16T23:46:09.438666Z	    }
2025-09-16T23:46:09.438837Z	  
2025-09-16T23:46:09.438993Z	Query parameters: {
2025-09-16T23:46:09.439128Z	  limit: 4,
2025-09-16T23:46:09.439353Z	  offset: 0,
2025-09-16T23:46:09.439517Z	  targetMarket: undefined,
2025-09-16T23:46:09.440219Z	  brand: 'epcos',
2025-09-16T23:46:09.440383Z	  featured: undefined
2025-09-16T23:46:09.440498Z	}
2025-09-16T23:46:09.440602Z	✅ [getBrandData] Found brand: Epcos
2025-09-16T23:46:09.440735Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:09.440862Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:09.44099Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:46:09.441119Z	Fetching products with query: 
2025-09-16T23:46:09.441242Z	    {
2025-09-16T23:46:09.441349Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:09.441474Z	        
2025-09-16T23:46:09.441578Z	    _id,
2025-09-16T23:46:09.441688Z	    _type,
2025-09-16T23:46:09.441809Z	    partNumber,
2025-09-16T23:46:09.441922Z	    "slug": slug.current,
2025-09-16T23:46:09.442028Z	    title,
2025-09-16T23:46:09.442128Z	    shortDescription,
2025-09-16T23:46:09.442232Z	    image,
2025-09-16T23:46:09.442349Z	    brand->{
2025-09-16T23:46:09.442468Z	      name,
2025-09-16T23:46:09.442571Z	      "slug": slug.current,
2025-09-16T23:46:09.442667Z	      logo
2025-09-16T23:46:09.442794Z	    },
2025-09-16T23:46:09.442902Z	    category->{
2025-09-16T23:46:09.442998Z	      name,
2025-09-16T23:46:09.443088Z	      "slug": slug.current
2025-09-16T23:46:09.443194Z	    },
2025-09-16T23:46:09.443298Z	    pricing{
2025-09-16T23:46:09.443414Z	      currency,
2025-09-16T23:46:09.443521Z	      tiers[]{
2025-09-16T23:46:09.443628Z	        quantity,
2025-09-16T23:46:09.443769Z	        price,
2025-09-16T23:46:09.44389Z	        unit
2025-09-16T23:46:09.443999Z	      },
2025-09-16T23:46:09.444096Z	      moq,
2025-09-16T23:46:09.444211Z	      leadTime,
2025-09-16T23:46:09.444327Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:09.444459Z	      "price": tiers[0].price,
2025-09-16T23:46:09.444566Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:09.44469Z	    },
2025-09-16T23:46:09.444802Z	    inventory{
2025-09-16T23:46:09.444906Z	      quantity,
2025-09-16T23:46:09.445006Z	      status,
2025-09-16T23:46:09.445101Z	      warehouse,
2025-09-16T23:46:09.445199Z	      lastUpdated,
2025-09-16T23:46:09.44587Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:09.446133Z	      "inStock": status == "in_stock",
2025-09-16T23:46:09.44639Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:09.446577Z	    },
2025-09-16T23:46:09.446779Z	    isActive,
2025-09-16T23:46:09.447086Z	    isFeatured,
2025-09-16T23:46:09.447657Z	    isNew,
2025-09-16T23:46:09.447936Z	    _createdAt,
2025-09-16T23:46:09.448251Z	    _updatedAt
2025-09-16T23:46:09.448489Z	  
2025-09-16T23:46:09.448801Z	      },
2025-09-16T23:46:09.449248Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:46:09.450731Z	    }
2025-09-16T23:46:09.450878Z	  
2025-09-16T23:46:09.450996Z	Query parameters: {
2025-09-16T23:46:09.451105Z	  limit: 8,
2025-09-16T23:46:09.451213Z	  offset: 0,
2025-09-16T23:46:09.451305Z	  category: undefined,
2025-09-16T23:46:09.451399Z	  brand: 'cree',
2025-09-16T23:46:09.451501Z	  featured: undefined
2025-09-16T23:46:09.451613Z	}
2025-09-16T23:46:09.451772Z	Fetching solutions with query: 
2025-09-16T23:46:09.460102Z	    {
2025-09-16T23:46:09.460339Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:09.460453Z	        
2025-09-16T23:46:09.460549Z	    _id,
2025-09-16T23:46:09.460659Z	    title,
2025-09-16T23:46:09.460779Z	    "slug": slug.current,
2025-09-16T23:46:09.460913Z	    summary,
2025-09-16T23:46:09.461273Z	    description,
2025-09-16T23:46:09.46167Z	    coverImage,
2025-09-16T23:46:09.46263Z	    primaryBrand->{
2025-09-16T23:46:09.462828Z	      _id,
2025-09-16T23:46:09.463002Z	      name,
2025-09-16T23:46:09.463116Z	      "slug": slug.current,
2025-09-16T23:46:09.464473Z	      logo
2025-09-16T23:46:09.464653Z	    },
2025-09-16T23:46:09.464979Z	    relatedBrands[]->{
2025-09-16T23:46:09.465106Z	      _id,
2025-09-16T23:46:09.465289Z	      name,
2025-09-16T23:46:09.465435Z	      "slug": slug.current,
2025-09-16T23:46:09.465578Z	      logo
2025-09-16T23:46:09.465714Z	    },
2025-09-16T23:46:09.46583Z	    targetMarket,
2025-09-16T23:46:09.465991Z	    complexity,
2025-09-16T23:46:09.466107Z	    publishedAt,
2025-09-16T23:46:09.466266Z	    isPublished,
2025-09-16T23:46:09.466445Z	    isFeatured,
2025-09-16T23:46:09.466685Z	    viewCount,
2025-09-16T23:46:09.466854Z	    _createdAt,
2025-09-16T23:46:09.467031Z	    _updatedAt
2025-09-16T23:46:09.467197Z	  
2025-09-16T23:46:09.467298Z	      },
2025-09-16T23:46:09.467391Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:46:09.467514Z	    }
2025-09-16T23:46:09.467742Z	  
2025-09-16T23:46:09.467868Z	Query parameters: {
2025-09-16T23:46:09.467933Z	  limit: 4,
2025-09-16T23:46:09.467989Z	  offset: 0,
2025-09-16T23:46:09.468046Z	  targetMarket: undefined,
2025-09-16T23:46:09.468099Z	  brand: 'cree',
2025-09-16T23:46:09.468153Z	  featured: undefined
2025-09-16T23:46:09.468208Z	}
2025-09-16T23:46:09.468262Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:46:09.469499Z	piled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:09.46988Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:09.470271Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:09.470477Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:09.470795Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:09.470967Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:09.471075Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:09.471174Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:09.471267Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:09.471357Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:09.471482Z	  digest: '1870762441'
2025-09-16T23:46:09.471592Z	}
2025-09-16T23:46:09.471735Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:09.471897Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compileProducts fetch result: {
2025-09-16T23:46:09.472019Z	  totalProducts: 4,
2025-09-16T23:46:09.47213Z	  fetchedProducts: 4,
2025-09-16T23:46:09.472236Z	  firstProduct: {
2025-09-16T23:46:09.472334Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:46:09.47254Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:46:09.472657Z	    _type: 'product',
2025-09-16T23:46:09.472775Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:46:09.472874Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:46:09.473015Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:09.47325Z	    image: null,
2025-09-16T23:46:09.473419Z	    inventory: {
2025-09-16T23:46:09.473576Z	      inStock: true,
2025-09-16T23:46:09.473806Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:46:09.474032Z	      quantity: 0,
2025-09-16T23:46:09.47417Z	      status: 'in_stock',
2025-09-16T23:46:09.474281Z	      warehouse: null
2025-09-16T23:46:09.474388Z	    },
2025-09-16T23:46:09.474488Z	    isActive: true,
2025-09-16T23:46:09.474589Z	    isFeatured: false,
2025-09-16T23:46:09.474724Z	    isNew: false,
2025-09-16T23:46:09.474819Z	    partNumber: '11111',
2025-09-16T23:46:09.474881Z	    pricing: {
2025-09-16T23:46:09.474979Z	      currency: 'CNY',
2025-09-16T23:46:09.475074Z	      leadTime: null,
2025-09-16T23:46:09.475169Z	      moq: null,
2025-09-16T23:46:09.475265Z	      price: null,
2025-09-16T23:46:09.475363Z	      tiers: null
2025-09-16T23:46:09.475475Z	    },
2025-09-16T23:46:09.475571Z	    shortDescription: '11111',
2025-09-16T23:46:09.475665Z	    slug: 'sic mosfet',
2025-09-16T23:46:09.475786Z	    title: '111111'
2025-09-16T23:46:09.476068Z	  }
2025-09-16T23:46:09.4762Z	}
2025-09-16T23:46:09.476315Z	Solutions fetch result: {
2025-09-16T23:46:09.476431Z	  totalSolutions: 6,
2025-09-16T23:46:09.476558Z	  fetchedSolutions: 4,
2025-09-16T23:46:09.47669Z	  firstSolution: {
2025-09-16T23:46:09.476822Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:46:09.476929Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:46:09.477037Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:46:09.477141Z	    complexity: 'medium',
2025-09-16T23:46:09.524307Z	    coverImage: null,
2025-09-16T23:46:09.52453Z	    description: [ [Object] ],
2025-09-16T23:46:09.525316Z	    isFeatured: false,
2025-09-16T23:46:09.525628Z	    isPublished: true,
2025-09-16T23:46:09.526221Z	    primaryBrand: {
2025-09-16T23:46:09.526373Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:46:09.526547Z	      logo: null,
2025-09-16T23:46:09.526808Z	      name: 'CREE',
2025-09-16T23:46:09.526945Z	      slug: 'cree'
2025-09-16T23:46:09.527436Z	    },
2025-09-16T23:46:09.527606Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:46:09.527762Z	    relatedBrands: null,
2025-09-16T23:46:09.527972Z	    slug: '11111',
2025-09-16T23:46:09.528098Z	    summary: '11111',
2025-09-16T23:46:09.528248Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:09.528387Z	    title: '11111',
2025-09-16T23:46:09.52853Z	    viewCount: 0
2025-09-16T23:46:09.528661Z	  }
2025-09-16T23:46:09.529445Z	}
2025-09-16T23:46:09.529579Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:46:09.529759Z	Fetching products with query: 
2025-09-16T23:46:09.529892Z	    {
2025-09-16T23:46:09.53Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:09.530099Z	        
2025-09-16T23:46:09.530198Z	    _id,
2025-09-16T23:46:09.530328Z	    _type,
2025-09-16T23:46:09.530445Z	    partNumber,
2025-09-16T23:46:09.530566Z	    "slug": slug.current,
2025-09-16T23:46:09.530688Z	    title,
2025-09-16T23:46:09.530798Z	    shortDescription,
2025-09-16T23:46:09.530897Z	    image,
2025-09-16T23:46:09.530989Z	    brand->{
2025-09-16T23:46:09.531073Z	      name,
2025-09-16T23:46:09.531168Z	      "slug": slug.current,
2025-09-16T23:46:09.53125Z	      logo
2025-09-16T23:46:09.531327Z	    },
2025-09-16T23:46:09.531419Z	    category->{
2025-09-16T23:46:09.531514Z	      name,
2025-09-16T23:46:09.531607Z	      "slug": slug.current
2025-09-16T23:46:09.531727Z	    },
2025-09-16T23:46:09.531826Z	    pricing{
2025-09-16T23:46:09.531913Z	      currency,
2025-09-16T23:46:09.53206Z	      tiers[]{
2025-09-16T23:46:09.532163Z	        quantity,
2025-09-16T23:46:09.532261Z	        price,
2025-09-16T23:46:09.532361Z	        unit
2025-09-16T23:46:09.532492Z	      },
2025-09-16T23:46:09.532598Z	      moq,
2025-09-16T23:46:09.532754Z	      leadTime,
2025-09-16T23:46:09.532869Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:09.532986Z	      "price": tiers[0].price,
2025-09-16T23:46:09.53309Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:09.533195Z	    },
2025-09-16T23:46:09.533293Z	    inventory{
2025-09-16T23:46:09.533388Z	      quantity,
2025-09-16T23:46:09.533485Z	      status,
2025-09-16T23:46:09.533593Z	      warehouse,
2025-09-16T23:46:09.533722Z	      lastUpdated,
2025-09-16T23:46:09.533827Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:09.533927Z	      "inStock": status == "in_stock",
2025-09-16T23:46:09.534033Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:09.534126Z	    },
2025-09-16T23:46:09.534216Z	    isActive,
2025-09-16T23:46:09.534309Z	    isFeatured,
2025-09-16T23:46:09.534407Z	    isNew,
2025-09-16T23:46:09.534533Z	    _createdAt,
2025-09-16T23:46:09.534647Z	    _updatedAt
2025-09-16T23:46:09.534768Z	  
2025-09-16T23:46:09.53487Z	      },
2025-09-16T23:46:09.534968Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:46:09.535079Z	    }
2025-09-16T23:46:09.535181Z	  
2025-09-16T23:46:09.535288Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-16T23:46:09.535392Z	Fetching products with query: 
2025-09-16T23:46:09.535495Z	    {
2025-09-16T23:46:09.535599Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:09.535728Z	        
2025-09-16T23:46:09.535829Z	    _id,
2025-09-16T23:46:09.535921Z	    _type,
2025-09-16T23:46:09.536017Z	    partNumber,
2025-09-16T23:46:09.536122Z	    "slug": slug.current,
2025-09-16T23:46:09.536219Z	    title,
2025-09-16T23:46:09.53632Z	    shortDescription,
2025-09-16T23:46:09.536416Z	    image,
2025-09-16T23:46:09.53651Z	    brand->{
2025-09-16T23:46:09.536598Z	      name,
2025-09-16T23:46:09.536825Z	      "slug": slug.current,
2025-09-16T23:46:09.536952Z	      logo
2025-09-16T23:46:09.537049Z	    },
2025-09-16T23:46:09.537176Z	    category->{
2025-09-16T23:46:09.537276Z	      name,
2025-09-16T23:46:09.537368Z	      "slug": slug.current
2025-09-16T23:46:09.537488Z	    },
2025-09-16T23:46:09.538073Z	    pricing{
2025-09-16T23:46:09.538212Z	      currency,
2025-09-16T23:46:09.53834Z	      tiers[]{
2025-09-16T23:46:09.538543Z	        quantity,
2025-09-16T23:46:09.538731Z	        price,
2025-09-16T23:46:09.538851Z	        unit
2025-09-16T23:46:09.539324Z	      },
2025-09-16T23:46:09.539484Z	      moq,
2025-09-16T23:46:09.539594Z	      leadTime,
2025-09-16T23:46:09.539729Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:09.539856Z	      "price": tiers[0].price,
2025-09-16T23:46:09.539961Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:09.54006Z	    },
2025-09-16T23:46:09.540157Z	    inventory{
2025-09-16T23:46:09.540256Z	      quantity,
2025-09-16T23:46:09.540352Z	      status,
2025-09-16T23:46:09.540473Z	      warehouse,
2025-09-16T23:46:09.540574Z	      lastUpdated,
2025-09-16T23:46:09.54067Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:09.540805Z	      "inStock": status == "in_stock",
2025-09-16T23:46:09.540912Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:09.541008Z	    },
2025-09-16T23:46:09.541102Z	    isActive,
2025-09-16T23:46:09.541199Z	    isFeatured,
2025-09-16T23:46:09.541296Z	    isNew,
2025-09-16T23:46:09.541409Z	    _createdAt,
2025-09-16T23:46:09.541532Z	    _updatedAt
2025-09-16T23:46:09.541654Z	  
2025-09-16T23:46:09.541789Z	      },
2025-09-16T23:46:09.541897Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-16T23:46:09.542009Z	    }
2025-09-16T23:46:09.54211Z	  
2025-09-16T23:46:09.542238Z	Query parameters: {
2025-09-16T23:46:09.542347Z	  limit: 8,
2025-09-16T23:46:09.542457Z	  offset: 0,
2025-09-16T23:46:09.542568Z	  category: undefined,
2025-09-16T23:46:09.542672Z	  brand: 'epcos',
2025-09-16T23:46:09.544173Z	  featured: undefined
2025-09-16T23:46:09.544388Z	}
2025-09-16T23:46:09.544547Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-16T23:46:09.544724Z	Fetching products with query: 
2025-09-16T23:46:09.544882Z	    {
2025-09-16T23:46:09.54503Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:09.545188Z	        
2025-09-16T23:46:09.545357Z	    _id,
2025-09-16T23:46:09.545525Z	    _type,
2025-09-16T23:46:09.545821Z	    partNumber,
2025-09-16T23:46:09.54627Z	    "slug": slug.current,
2025-09-16T23:46:09.546637Z	    title,
2025-09-16T23:46:09.547191Z	    shortDescription,
2025-09-16T23:46:09.547483Z	    image,
2025-09-16T23:46:09.547662Z	    brand->{
2025-09-16T23:46:09.552013Z	      name,
2025-09-16T23:46:09.552471Z	      "slug": slug.current,
2025-09-16T23:46:09.552638Z	      logo
2025-09-16T23:46:09.552771Z	    },
2025-09-16T23:46:09.552888Z	    category->{
2025-09-16T23:46:09.553125Z	      name,
2025-09-16T23:46:09.553398Z	      "slug": slug.current
2025-09-16T23:46:09.553568Z	    },
2025-09-16T23:46:09.553822Z	    pricing{
2025-09-16T23:46:09.55395Z	      currency,
2025-09-16T23:46:09.554081Z	      tiers[]{
2025-09-16T23:46:09.554326Z	        quantity,
2025-09-16T23:46:09.554628Z	        price,
2025-09-16T23:46:09.555278Z	        unit
2025-09-16T23:46:09.555427Z	      },
2025-09-16T23:46:09.555546Z	      moq,
2025-09-16T23:46:09.555698Z	      leadTime,
2025-09-16T23:46:09.556188Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:09.556498Z	      "price": tiers[0].price,
2025-09-16T23:46:09.556747Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:09.556962Z	    },
2025-09-16T23:46:09.557118Z	    inventory{
2025-09-16T23:46:09.557243Z	      quantity,
2025-09-16T23:46:09.557348Z	      status,
2025-09-16T23:46:09.557459Z	      warehouse,
2025-09-16T23:46:09.557569Z	      lastUpdated,
2025-09-16T23:46:09.557671Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:09.557806Z	      "inStock": status == "in_stock",
2025-09-16T23:46:09.557899Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:09.557987Z	    },
2025-09-16T23:46:09.558089Z	    isActive,
2025-09-16T23:46:09.558178Z	    isFeatured,
2025-09-16T23:46:09.558726Z	    isNew,
2025-09-16T23:46:09.560768Z	    _createdAt,
2025-09-16T23:46:09.561762Z	    _updatedAt
2025-09-16T23:46:09.56222Z	  
2025-09-16T23:46:09.562488Z	      },
2025-09-16T23:46:09.562634Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-16T23:46:09.562774Z	    }
2025-09-16T23:46:09.563141Z	  
2025-09-16T23:46:09.563504Z	Query parameters: {
2025-09-16T23:46:09.56366Z	  limit: 8,
2025-09-16T23:46:09.563806Z	  offset: 0,
2025-09-16T23:46:09.563912Z	  category: undefined,
2025-09-16T23:46:09.564008Z	  brand: 'ixys',
2025-09-16T23:46:09.56411Z	  featured: undefined
2025-09-16T23:46:09.564242Z	}
2025-09-16T23:46:09.564746Z	Fetching solutions with query: 
2025-09-16T23:46:09.564915Z	    {
2025-09-16T23:46:09.565109Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:09.565388Z	        
2025-09-16T23:46:09.565987Z	    _id,
2025-09-16T23:46:09.56617Z	    title,
2025-09-16T23:46:09.566479Z	    "slug": slug.current,
2025-09-16T23:46:09.56662Z	    summary,
2025-09-16T23:46:09.566769Z	    description,
2025-09-16T23:46:09.566891Z	    coverImage,
2025-09-16T23:46:09.566998Z	    primaryBrand->{
2025-09-16T23:46:09.56719Z	      _id,
2025-09-16T23:46:09.567315Z	      name,
2025-09-16T23:46:09.567422Z	      "slug": slug.current,
2025-09-16T23:46:09.567527Z	      logo
2025-09-16T23:46:09.567636Z	    },
2025-09-16T23:46:09.567772Z	    relatedBrands[]->{
2025-09-16T23:46:09.567894Z	      _id,
2025-09-16T23:46:09.568004Z	      name,
2025-09-16T23:46:09.56811Z	      "slug": slug.current,
2025-09-16T23:46:09.568311Z	      logo
2025-09-16T23:46:09.568551Z	    },
2025-09-16T23:46:09.568869Z	    targetMarket,
2025-09-16T23:46:09.569006Z	    complexity,
2025-09-16T23:46:09.569152Z	    publishedAt,
2025-09-16T23:46:09.569385Z	    isPublished,
2025-09-16T23:46:09.569705Z	    isFeatured,
2025-09-16T23:46:09.569864Z	    viewCount,
2025-09-16T23:46:09.569977Z	    _createdAt,
2025-09-16T23:46:09.570189Z	    _updatedAt
2025-09-16T23:46:09.570437Z	  
2025-09-16T23:46:09.570668Z	      },
2025-09-16T23:46:09.570836Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-16T23:46:09.571082Z	    }
2025-09-16T23:46:09.571312Z	  
2025-09-16T23:46:09.571442Z	Query parameters: {
2025-09-16T23:46:09.571555Z	  limit: 4,
2025-09-16T23:46:09.571692Z	  offset: 0,
2025-09-16T23:46:09.57183Z	  targetMarket: undefined,
2025-09-16T23:46:09.571942Z	  brand: 'ixys',
2025-09-16T23:46:09.572079Z	  featured: undefined
2025-09-16T23:46:09.572197Z	}
2025-09-16T23:46:09.572316Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-16T23:46:09.572441Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-16T23:46:09.572555Z	Query parameters: {
2025-09-16T23:46:09.572685Z	  limit: 8,
2025-09-16T23:46:09.572814Z	  offset: 0,
2025-09-16T23:46:09.572929Z	  category: undefined,
2025-09-16T23:46:09.573025Z	  brand: 'cree',
2025-09-16T23:46:09.573127Z	  featured: undefined
2025-09-16T23:46:09.573226Z	}
2025-09-16T23:46:09.573321Z	Fetching solutions with query: 
2025-09-16T23:46:09.57342Z	    {
2025-09-16T23:46:09.573527Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:09.573652Z	        
2025-09-16T23:46:09.573772Z	    _id,
2025-09-16T23:46:09.573876Z	    title,
2025-09-16T23:46:09.573976Z	    "slug": slug.current,
2025-09-16T23:46:09.574076Z	    summary,
2025-09-16T23:46:09.57418Z	    description,
2025-09-16T23:46:09.574277Z	    coverImage,
2025-09-16T23:46:09.574373Z	    primaryBrand->{
2025-09-16T23:46:09.574479Z	      _id,
2025-09-16T23:46:09.574588Z	      name,
2025-09-16T23:46:09.57558Z	      "slug": slug.current,
2025-09-16T23:46:09.575847Z	      logo
2025-09-16T23:46:09.575928Z	    },
2025-09-16T23:46:09.575989Z	    relatedBrands[]->{
2025-09-16T23:46:09.576044Z	      _id,
2025-09-16T23:46:09.576099Z	      name,
2025-09-16T23:46:09.576153Z	      "slug": slug.current,
2025-09-16T23:46:09.576207Z	      logo
2025-09-16T23:46:09.576306Z	    },
2025-09-16T23:46:09.576369Z	    targetMarket,
2025-09-16T23:46:09.576429Z	    complexity,
2025-09-16T23:46:09.576482Z	    publishedAt,
2025-09-16T23:46:09.576534Z	    isPublished,
2025-09-16T23:46:09.576599Z	    isFeatured,
2025-09-16T23:46:09.57666Z	    viewCount,
2025-09-16T23:46:09.576828Z	    _createdAt,
2025-09-16T23:46:09.576914Z	    _updatedAt
2025-09-16T23:46:09.576973Z	  
2025-09-16T23:46:09.577028Z	      },
2025-09-16T23:46:09.577082Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:46:09.577136Z	    }
2025-09-16T23:46:09.577192Z	  
2025-09-16T23:46:09.577256Z	Query parameters: {
2025-09-16T23:46:09.57731Z	  limit: 4,
2025-09-16T23:46:09.577363Z	  offset: 0,
2025-09-16T23:46:09.577419Z	  targetMarket: undefined,
2025-09-16T23:46:09.577475Z	  brand: 'cree',
2025-09-16T23:46:09.57753Z	  featured: undefined
2025-09-16T23:46:09.623991Z	}
2025-09-16T23:46:09.624193Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:46:09.624322Z	Products fetch result: {
2025-09-16T23:46:09.624711Z	  totalProducts: 4,
2025-09-16T23:46:09.624874Z	  fetchedProducts: 4,
2025-09-16T23:46:09.62499Z	  firstProduct: {
2025-09-16T23:46:09.625089Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:46:09.625197Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:46:09.6253Z	    _type: 'product',
2025-09-16T23:46:09.625398Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:46:09.625493Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:46:09.625592Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:09.62574Z	    image: null,
2025-09-16T23:46:09.625849Z	    inventory: {
2025-09-16T23:46:09.625963Z	      inStock: true,
2025-09-16T23:46:09.62626Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:46:09.626417Z	      quantity: 0,
2025-09-16T23:46:09.626529Z	      status: 'in_stock',
2025-09-16T23:46:09.626646Z	      warehouse: null
2025-09-16T23:46:09.626781Z	    },
2025-09-16T23:46:09.626892Z	    isActive: true,
2025-09-16T23:46:09.627001Z	    isFeatured: false,
2025-09-16T23:46:09.627103Z	    isNew: false,
2025-09-16T23:46:09.627209Z	    partNumber: '11111',
2025-09-16T23:46:09.627326Z	    pricing: {
2025-09-16T23:46:09.627433Z	      currency: 'CNY',
2025-09-16T23:46:09.627539Z	      leadTime: null,
2025-09-16T23:46:09.627652Z	      moq: null,
2025-09-16T23:46:09.62777Z	      price: null,
2025-09-16T23:46:09.628043Z	      tiers: null
2025-09-16T23:46:09.628184Z	    },
2025-09-16T23:46:09.628293Z	    shortDescription: '11111',
2025-09-16T23:46:09.628413Z	    slug: 'sic mosfet',
2025-09-16T23:46:09.628555Z	    title: '111111'
2025-09-16T23:46:09.628889Z	  }
2025-09-16T23:46:09.629066Z	}
2025-09-16T23:46:09.629241Z	Solutions fetch result: {
2025-09-16T23:46:09.629358Z	  totalSolutions: 6,
2025-09-16T23:46:09.629503Z	  fetchedSolutions: 4,
2025-09-16T23:46:09.629748Z	  firstSolution: {
2025-09-16T23:46:09.629904Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:46:09.630025Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:46:09.630138Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:46:09.630245Z	    complexity: 'medium',
2025-09-16T23:46:09.630343Z	    coverImage: null,
2025-09-16T23:46:09.63044Z	    description: [ [Object] ],
2025-09-16T23:46:09.630536Z	    isFeatured: false,
2025-09-16T23:46:09.630631Z	    isPublished: true,
2025-09-16T23:46:09.630755Z	    primaryBrand: {
2025-09-16T23:46:09.630858Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:46:09.630953Z	      logo: null,
2025-09-16T23:46:09.631102Z	      name: 'CREE',
2025-09-16T23:46:09.631316Z	      slug: 'cree'
2025-09-16T23:46:09.63152Z	    },
2025-09-16T23:46:09.631705Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:46:09.631877Z	    relatedBrands: null,
2025-09-16T23:46:09.632039Z	    slug: '11111',
2025-09-16T23:46:09.63217Z	    summary: '11111',
2025-09-16T23:46:09.632331Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:09.632544Z	    title: '11111',
2025-09-16T23:46:09.632713Z	    viewCount: 0
2025-09-16T23:46:09.632879Z	  }
2025-09-16T23:46:09.633035Z	}
2025-09-16T23:46:09.633216Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-16T23:46:09.633397Z	Fetching products with query: 
2025-09-16T23:46:09.633642Z	    {
2025-09-16T23:46:09.633835Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:09.634057Z	        
2025-09-16T23:46:09.634234Z	    _id,
2025-09-16T23:46:09.634405Z	    _type,
2025-09-16T23:46:09.634658Z	    partNumber,
2025-09-16T23:46:09.634841Z	    "slug": slug.current,
2025-09-16T23:46:09.635039Z	    title,
2025-09-16T23:46:09.635204Z	    shortDescription,
2025-09-16T23:46:09.635369Z	    image,
2025-09-16T23:46:09.635516Z	    brand->{
2025-09-16T23:46:09.635719Z	      name,
2025-09-16T23:46:09.635844Z	      "slug": slug.current,
2025-09-16T23:46:09.63599Z	      logo
2025-09-16T23:46:09.636107Z	    },
2025-09-16T23:46:09.636218Z	    category->{
2025-09-16T23:46:09.636355Z	      name,
2025-09-16T23:46:09.636471Z	      "slug": slug.current
2025-09-16T23:46:09.636566Z	    },
2025-09-16T23:46:09.636662Z	    pricing{
2025-09-16T23:46:09.636858Z	      currency,
2025-09-16T23:46:09.636981Z	      tiers[]{
2025-09-16T23:46:09.637136Z	        quantity,
2025-09-16T23:46:09.637266Z	        price,
2025-09-16T23:46:09.637379Z	        unit
2025-09-16T23:46:09.637493Z	      },
2025-09-16T23:46:09.637597Z	      moq,
2025-09-16T23:46:09.637725Z	      leadTime,
2025-09-16T23:46:09.637851Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:09.638011Z	      "price": tiers[0].price,
2025-09-16T23:46:09.638187Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:09.638304Z	    },
2025-09-16T23:46:09.638409Z	    inventory{
2025-09-16T23:46:09.638504Z	      quantity,
2025-09-16T23:46:09.638596Z	      status,
2025-09-16T23:46:09.639142Z	      warehouse,
2025-09-16T23:46:09.639289Z	      lastUpdated,
2025-09-16T23:46:09.639392Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:09.63949Z	      "inStock": status == "in_stock",
2025-09-16T23:46:09.63958Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:09.639689Z	    },
2025-09-16T23:46:09.639789Z	    isActive,
2025-09-16T23:46:09.639881Z	    isFeatured,
2025-09-16T23:46:09.639977Z	    isNew,
2025-09-16T23:46:09.640075Z	    _createdAt,
2025-09-16T23:46:09.640276Z	    _updatedAt
2025-09-16T23:46:09.640429Z	  
2025-09-16T23:46:09.641087Z	      },
2025-09-16T23:46:09.641233Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-16T23:46:09.6417Z	    }
2025-09-16T23:46:09.641832Z	  
2025-09-16T23:46:09.642151Z	Query parameters: {
2025-09-16T23:46:09.642519Z	  limit: 8,
2025-09-16T23:46:09.642699Z	  offset: 0,
2025-09-16T23:46:09.642829Z	  category: undefined,
2025-09-16T23:46:09.643091Z	  brand: 'pi',
2025-09-16T23:46:09.643308Z	  featured: undefined
2025-09-16T23:46:09.643535Z	}
2025-09-16T23:46:09.643864Z	Fetching solutions with query: 
2025-09-16T23:46:09.643987Z	    {
2025-09-16T23:46:09.644091Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:09.644198Z	        
2025-09-16T23:46:09.644294Z	    _id,
2025-09-16T23:46:09.644407Z	    title,
2025-09-16T23:46:09.644514Z	    "slug": slug.current,
2025-09-16T23:46:09.644614Z	    summary,
2025-09-16T23:46:09.644739Z	    description,
2025-09-16T23:46:09.645155Z	    coverImage,
2025-09-16T23:46:09.645306Z	    primaryBrand->{
2025-09-16T23:46:09.645477Z	      _id,
2025-09-16T23:46:09.645609Z	      name,
2025-09-16T23:46:09.645754Z	      "slug": slug.current,
2025-09-16T23:46:09.645973Z	      logo
2025-09-16T23:46:09.64613Z	    },
2025-09-16T23:46:09.646248Z	    relatedBrands[]->{
2025-09-16T23:46:09.646358Z	      _id,
2025-09-16T23:46:09.64647Z	      name,
2025-09-16T23:46:09.646731Z	      "slug": slug.current,
2025-09-16T23:46:09.647127Z	      logo
2025-09-16T23:46:09.647297Z	    },
2025-09-16T23:46:09.64748Z	    targetMarket,
2025-09-16T23:46:09.647631Z	    complexity,
2025-09-16T23:46:09.647848Z	    publishedAt,
2025-09-16T23:46:09.648004Z	    isPublished,
2025-09-16T23:46:09.648183Z	    isFeatured,
2025-09-16T23:46:09.648351Z	    viewCount,
2025-09-16T23:46:09.648506Z	    _createdAt,
2025-09-16T23:46:09.648894Z	    _updatedAt
2025-09-16T23:46:09.649049Z	  
2025-09-16T23:46:09.649206Z	      },
2025-09-16T23:46:09.649713Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-16T23:46:09.6499Z	    }
2025-09-16T23:46:09.650063Z	  
2025-09-16T23:46:09.650221Z	Query parameters: {
2025-09-16T23:46:09.650387Z	  limit: 4,
2025-09-16T23:46:09.650564Z	  offset: 0,
2025-09-16T23:46:09.651052Z	  targetMarket: undefined,
2025-09-16T23:46:09.651232Z	  brand: 'pi',
2025-09-16T23:46:09.651377Z	  featured: undefined
2025-09-16T23:46:09.651499Z	}
2025-09-16T23:46:09.654343Z	✅ [getBrandData] Found brand: PI
2025-09-16T23:46:09.658513Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:09.659436Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:09.660191Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-16T23:46:09.660986Z	Fetching products with query: 
2025-09-16T23:46:09.662216Z	    {
2025-09-16T23:46:09.662928Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:09.663621Z	        
2025-09-16T23:46:09.664327Z	    _id,
2025-09-16T23:46:09.664793Z	    _type,
2025-09-16T23:46:09.665918Z	    partNumber,
2025-09-16T23:46:09.666299Z	    "slug": slug.current,
2025-09-16T23:46:09.666944Z	    title,
2025-09-16T23:46:09.667388Z	    shortDescription,
2025-09-16T23:46:09.66787Z	    image,
2025-09-16T23:46:09.668004Z	    brand->{
2025-09-16T23:46:09.668112Z	      name,
2025-09-16T23:46:09.66821Z	      "slug": slug.current,
2025-09-16T23:46:09.66831Z	      logo
2025-09-16T23:46:09.668416Z	    },
2025-09-16T23:46:09.668519Z	    category->{
2025-09-16T23:46:09.668625Z	      name,
2025-09-16T23:46:09.668765Z	      "slug": slug.current
2025-09-16T23:46:09.668876Z	    },
2025-09-16T23:46:09.668963Z	    pricing{
2025-09-16T23:46:09.669046Z	      currency,
2025-09-16T23:46:09.669125Z	      tiers[]{
2025-09-16T23:46:09.669218Z	        quantity,
2025-09-16T23:46:09.669315Z	        price,
2025-09-16T23:46:09.669411Z	        unit
2025-09-16T23:46:09.669507Z	      },
2025-09-16T23:46:09.669618Z	      moq,
2025-09-16T23:46:09.670061Z	      leadTime,
2025-09-16T23:46:09.670464Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:09.670616Z	      "price": tiers[0].price,
2025-09-16T23:46:09.671056Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:09.671181Z	    },
2025-09-16T23:46:09.671281Z	    inventory{
2025-09-16T23:46:09.671387Z	      quantity,
2025-09-16T23:46:09.673069Z	      status,
2025-09-16T23:46:09.673243Z	      warehouse,
2025-09-16T23:46:09.673357Z	      lastUpdated,
2025-09-16T23:46:09.673731Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:09.673837Z	      "inStock": status == "in_stock",
2025-09-16T23:46:09.673902Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:09.673957Z	    },
2025-09-16T23:46:09.674014Z	    isActive,
2025-09-16T23:46:09.674068Z	    isFeatured,
2025-09-16T23:46:09.674124Z	    isNew,
2025-09-16T23:46:09.674177Z	    _createdAt,
2025-09-16T23:46:09.674232Z	    _updatedAt
2025-09-16T23:46:09.674285Z	  
2025-09-16T23:46:09.674339Z	      },
2025-09-16T23:46:09.674393Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-16T23:46:09.674477Z	    }
2025-09-16T23:46:09.674534Z	  
2025-09-16T23:46:09.674589Z	Query parameters: {
2025-09-16T23:46:09.674644Z	  limit: 8,
2025-09-16T23:46:09.674733Z	  offset: 0,
2025-09-16T23:46:09.674794Z	  category: undefined,
2025-09-16T23:46:09.674852Z	  brand: 'pi',
2025-09-16T23:46:09.674921Z	  featured: undefined
2025-09-16T23:46:09.674979Z	}
2025-09-16T23:46:09.675039Z	Fetching solutions with query: 
2025-09-16T23:46:09.675094Z	    {
2025-09-16T23:46:09.675149Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:09.675208Z	        
2025-09-16T23:46:09.675262Z	    _id,
2025-09-16T23:46:09.675316Z	    title,
2025-09-16T23:46:09.675369Z	    "slug": slug.current,
2025-09-16T23:46:09.675421Z	    summary,
2025-09-16T23:46:09.675483Z	    description,
2025-09-16T23:46:09.675537Z	    coverImage,
2025-09-16T23:46:09.67559Z	    primaryBrand->{
2025-09-16T23:46:09.675644Z	      _id,
2025-09-16T23:46:09.675724Z	      name,
2025-09-16T23:46:09.675779Z	      "slug": slug.current,
2025-09-16T23:46:09.675834Z	      logo
2025-09-16T23:46:09.675887Z	    },
2025-09-16T23:46:09.67594Z	    relatedBrands[]->{
2025-09-16T23:46:09.675995Z	      _id,
2025-09-16T23:46:09.676048Z	      name,
2025-09-16T23:46:09.676101Z	      "slug": slug.current,
2025-09-16T23:46:09.676154Z	      logo
2025-09-16T23:46:09.676206Z	    },
2025-09-16T23:46:09.676264Z	    targetMarket,
2025-09-16T23:46:09.67632Z	    complexity,
2025-09-16T23:46:09.676373Z	    publishedAt,
2025-09-16T23:46:09.676428Z	    isPublished,
2025-09-16T23:46:09.676505Z	    isFeatured,
2025-09-16T23:46:09.67656Z	    viewCount,
2025-09-16T23:46:09.676616Z	    _createdAt,
2025-09-16T23:46:09.676684Z	    _updatedAt
2025-09-16T23:46:09.676745Z	  
2025-09-16T23:46:09.676842Z	      },
2025-09-16T23:46:09.676907Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-16T23:46:09.676967Z	    }
2025-09-16T23:46:09.677021Z	  
2025-09-16T23:46:09.677076Z	Query parameters: {
2025-09-16T23:46:09.677131Z	  limit: 4,
2025-09-16T23:46:09.677183Z	  offset: 0,
2025-09-16T23:46:09.677236Z	  targetMarket: undefined,
2025-09-16T23:46:09.677291Z	  brand: 'pi',
2025-09-16T23:46:09.677354Z	  featured: undefined
2025-09-16T23:46:09.677412Z	}
2025-09-16T23:46:09.677476Z	✅ [getBrandData] Found brand: PI
2025-09-16T23:46:09.677538Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:09.677597Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:09.677653Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:09.677734Z	Fetching products with query: 
2025-09-16T23:46:09.677794Z	    {
2025-09-16T23:46:09.677849Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:09.677908Z	        
2025-09-16T23:46:09.677973Z	    _id,
2025-09-16T23:46:09.67803Z	    _type,
2025-09-16T23:46:09.678085Z	    partNumber,
2025-09-16T23:46:09.67814Z	    "slug": slug.current,
2025-09-16T23:46:09.678194Z	    title,
2025-09-16T23:46:09.678248Z	    shortDescription,
2025-09-16T23:46:09.678302Z	    image,
2025-09-16T23:46:09.678355Z	    brand->{
2025-09-16T23:46:09.678411Z	      name,
2025-09-16T23:46:09.678476Z	      "slug": slug.current,
2025-09-16T23:46:09.678533Z	      logo
2025-09-16T23:46:09.678587Z	    },
2025-09-16T23:46:09.678642Z	    category->{
2025-09-16T23:46:09.72427Z	      name,
2025-09-16T23:46:09.724654Z	      "slug": slug.current
2025-09-16T23:46:09.724836Z	    },
2025-09-16T23:46:09.731948Z	    pricing{
2025-09-16T23:46:09.732173Z	      currency,
2025-09-16T23:46:09.732352Z	      tiers[]{
2025-09-16T23:46:09.732503Z	        quantity,
2025-09-16T23:46:09.732755Z	        price,
2025-09-16T23:46:09.732953Z	        unit
2025-09-16T23:46:09.73348Z	      },
2025-09-16T23:46:09.733985Z	      moq,
2025-09-16T23:46:09.734124Z	      leadTime,
2025-09-16T23:46:09.73427Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:09.734515Z	      "price": tiers[0].price,
2025-09-16T23:46:09.734638Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:09.734817Z	    },
2025-09-16T23:46:09.734923Z	    inventory{
2025-09-16T23:46:09.73502Z	      quantity,
2025-09-16T23:46:09.735166Z	      status,
2025-09-16T23:46:09.735389Z	      warehouse,
2025-09-16T23:46:09.735571Z	      lastUpdated,
2025-09-16T23:46:09.735722Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:09.735898Z	      "inStock": status == "in_stock",
2025-09-16T23:46:09.736052Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:09.736214Z	    },
2025-09-16T23:46:09.736376Z	    isActive,
2025-09-16T23:46:09.736547Z	    isFeatured,
2025-09-16T23:46:09.736746Z	    isNew,
2025-09-16T23:46:09.736898Z	    _createdAt,
2025-09-16T23:46:09.737058Z	    _updatedAt
2025-09-16T23:46:09.737217Z	  
2025-09-16T23:46:09.737373Z	      },
2025-09-16T23:46:09.737516Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-16T23:46:09.737681Z	    }
2025-09-16T23:46:09.737844Z	  
2025-09-16T23:46:09.737991Z	Query parameters: {
2025-09-16T23:46:09.73812Z	  limit: 8,
2025-09-16T23:46:09.738268Z	  offset: 0,
2025-09-16T23:46:09.738409Z	  category: undefined,
2025-09-16T23:46:09.738576Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:09.738741Z	  featured: undefined
2025-09-16T23:46:09.738857Z	}
2025-09-16T23:46:09.738985Z	Fetching solutions with query: 
2025-09-16T23:46:09.739119Z	    {
2025-09-16T23:46:09.739307Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:09.739475Z	        
2025-09-16T23:46:09.739588Z	    _id,
2025-09-16T23:46:09.739735Z	    title,
2025-09-16T23:46:09.739854Z	    "slug": slug.current,
2025-09-16T23:46:09.73999Z	    summary,
2025-09-16T23:46:09.740101Z	    description,
2025-09-16T23:46:09.740227Z	    coverImage,
2025-09-16T23:46:09.740342Z	    primaryBrand->{
2025-09-16T23:46:09.740467Z	      _id,
2025-09-16T23:46:09.740584Z	      name,
2025-09-16T23:46:09.740709Z	      "slug": slug.current,
2025-09-16T23:46:09.740838Z	      logo
2025-09-16T23:46:09.740998Z	    },
2025-09-16T23:46:09.741107Z	    relatedBrands[]->{
2025-09-16T23:46:09.74123Z	      _id,
2025-09-16T23:46:09.741349Z	      name,
2025-09-16T23:46:09.741496Z	      "slug": slug.current,
2025-09-16T23:46:09.741647Z	      logo
2025-09-16T23:46:09.741797Z	    },
2025-09-16T23:46:09.74191Z	    targetMarket,
2025-09-16T23:46:09.742142Z	    complexity,
2025-09-16T23:46:09.742291Z	    publishedAt,
2025-09-16T23:46:09.742419Z	    isPublished,
2025-09-16T23:46:09.742651Z	    isFeatured,
2025-09-16T23:46:09.742807Z	    viewCount,
2025-09-16T23:46:09.742913Z	    _createdAt,
2025-09-16T23:46:09.743009Z	    _updatedAt
2025-09-16T23:46:09.743116Z	  
2025-09-16T23:46:09.743221Z	      },
2025-09-16T23:46:09.743342Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-16T23:46:09.743484Z	    }
2025-09-16T23:46:09.743591Z	  
2025-09-16T23:46:09.743729Z	Query parameters: {
2025-09-16T23:46:09.744031Z	  limit: 4,
2025-09-16T23:46:09.744155Z	  offset: 0,
2025-09-16T23:46:09.744254Z	  targetMarket: undefined,
2025-09-16T23:46:09.744351Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:09.744588Z	  featured: undefined
2025-09-16T23:46:09.744712Z	}
2025-09-16T23:46:09.744815Z	Fetching products with query: 
2025-09-16T23:46:09.744917Z	    {
2025-09-16T23:46:09.745016Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:09.75312Z	        
2025-09-16T23:46:09.756188Z	    _id,
2025-09-16T23:46:09.756361Z	    _type,
2025-09-16T23:46:09.756492Z	    partNumber,
2025-09-16T23:46:09.756619Z	    "slug": slug.current,
2025-09-16T23:46:09.756775Z	    title,
2025-09-16T23:46:09.756892Z	    shortDescription,
2025-09-16T23:46:09.75699Z	    image,
2025-09-16T23:46:09.757087Z	    brand->{
2025-09-16T23:46:09.757183Z	      name,
2025-09-16T23:46:09.757283Z	      "slug": slug.current,
2025-09-16T23:46:09.757406Z	      logo
2025-09-16T23:46:09.757595Z	    },
2025-09-16T23:46:09.757813Z	    category->{
2025-09-16T23:46:09.757962Z	      name,
2025-09-16T23:46:09.758102Z	      "slug": slug.current
2025-09-16T23:46:09.758213Z	    },
2025-09-16T23:46:09.758311Z	    pricing{
2025-09-16T23:46:09.758402Z	      currency,
2025-09-16T23:46:09.758809Z	      tiers[]{
2025-09-16T23:46:09.759002Z	        quantity,
2025-09-16T23:46:09.759139Z	        price,
2025-09-16T23:46:09.759261Z	        unit
2025-09-16T23:46:09.759377Z	      },
2025-09-16T23:46:09.759477Z	      moq,
2025-09-16T23:46:09.759571Z	      leadTime,
2025-09-16T23:46:09.759697Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:09.759828Z	      "price": tiers[0].price,
2025-09-16T23:46:09.759938Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:09.760072Z	    },
2025-09-16T23:46:09.76024Z	    inventory{
2025-09-16T23:46:09.760367Z	      quantity,
2025-09-16T23:46:09.760475Z	      status,
2025-09-16T23:46:09.760584Z	      warehouse,
2025-09-16T23:46:09.760738Z	      lastUpdated,
2025-09-16T23:46:09.760853Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:09.760964Z	      "inStock": status == "in_stock",
2025-09-16T23:46:09.761066Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:09.761172Z	    },
2025-09-16T23:46:09.761279Z	    isActive,
2025-09-16T23:46:09.761392Z	    isFeatured,
2025-09-16T23:46:09.761504Z	    isNew,
2025-09-16T23:46:09.761615Z	    _createdAt,
2025-09-16T23:46:09.761755Z	    _updatedAt
2025-09-16T23:46:09.761877Z	  
2025-09-16T23:46:09.761994Z	      },
2025-09-16T23:46:09.76212Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-16T23:46:09.762256Z	    }
2025-09-16T23:46:09.762369Z	  
2025-09-16T23:46:09.762484Z	Query parameters: {
2025-09-16T23:46:09.762686Z	  limit: 8,
2025-09-16T23:46:09.762876Z	  offset: 0,
2025-09-16T23:46:09.763284Z	  category: undefined,
2025-09-16T23:46:09.763426Z	  brand: 'mediatek',
2025-09-16T23:46:09.763526Z	  featured: undefined
2025-09-16T23:46:09.763617Z	}
2025-09-16T23:46:09.764802Z	Fetching products with query: 
2025-09-16T23:46:09.764945Z	    {
2025-09-16T23:46:09.765321Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:09.765484Z	        
2025-09-16T23:46:09.765595Z	    _id,
2025-09-16T23:46:09.765723Z	    _type,
2025-09-16T23:46:09.765821Z	    partNumber,
2025-09-16T23:46:09.765973Z	    "slug": slug.current,
2025-09-16T23:46:09.766107Z	    title,
2025-09-16T23:46:09.766222Z	    shortDescription,
2025-09-16T23:46:09.766321Z	    image,
2025-09-16T23:46:09.766433Z	    brand->{
2025-09-16T23:46:09.766537Z	      name,
2025-09-16T23:46:09.766634Z	      "slug": slug.current,
2025-09-16T23:46:09.766786Z	      logo
2025-09-16T23:46:09.76694Z	    },
2025-09-16T23:46:09.767047Z	    category->{
2025-09-16T23:46:09.767216Z	      name,
2025-09-16T23:46:09.767366Z	      "slug": slug.current
2025-09-16T23:46:09.7676Z	    },
2025-09-16T23:46:09.769524Z	    pricing{
2025-09-16T23:46:09.770072Z	      currency,
2025-09-16T23:46:09.770233Z	      tiers[]{
2025-09-16T23:46:09.770342Z	        quantity,
2025-09-16T23:46:09.770452Z	        price,
2025-09-16T23:46:09.770549Z	        unit
2025-09-16T23:46:09.770652Z	      },
2025-09-16T23:46:09.770764Z	      moq,
2025-09-16T23:46:09.770877Z	      leadTime,
2025-09-16T23:46:09.770977Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:09.771071Z	      "price": tiers[0].price,
2025-09-16T23:46:09.771163Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:09.771263Z	    },
2025-09-16T23:46:09.771368Z	    inventory{
2025-09-16T23:46:09.771474Z	      quantity,
2025-09-16T23:46:09.771578Z	      status,
2025-09-16T23:46:09.771714Z	      warehouse,
2025-09-16T23:46:09.771818Z	      lastUpdated,
2025-09-16T23:46:09.771921Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:09.772036Z	      "inStock": status == "in_stock",
2025-09-16T23:46:09.772152Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:09.773457Z	    },
2025-09-16T23:46:09.773605Z	    isActive,
2025-09-16T23:46:09.773752Z	    isFeatured,
2025-09-16T23:46:09.773854Z	    isNew,
2025-09-16T23:46:09.773943Z	    _createdAt,
2025-09-16T23:46:09.774029Z	    _updatedAt
2025-09-16T23:46:09.774113Z	  
2025-09-16T23:46:09.774202Z	      },
2025-09-16T23:46:09.774287Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-16T23:46:09.774388Z	    }
2025-09-16T23:46:09.774479Z	  
2025-09-16T23:46:09.774561Z	Query parameters: {
2025-09-16T23:46:09.774658Z	  limit: 8,
2025-09-16T23:46:09.824774Z	  offset: 0,
2025-09-16T23:46:09.824979Z	  category: undefined,
2025-09-16T23:46:09.825101Z	  brand: 'lem',
2025-09-16T23:46:09.825208Z	  featured: undefined
2025-09-16T23:46:09.825315Z	}
2025-09-16T23:46:09.825536Z	Fetching solutions with query: 
2025-09-16T23:46:09.82801Z	    {
2025-09-16T23:46:09.828561Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:09.829127Z	        
2025-09-16T23:46:09.829771Z	    _id,
2025-09-16T23:46:09.830227Z	    title,
2025-09-16T23:46:09.830766Z	    "slug": slug.current,
2025-09-16T23:46:09.831282Z	    summary,
2025-09-16T23:46:09.831648Z	    description,
2025-09-16T23:46:09.832279Z	    coverImage,
2025-09-16T23:46:09.832857Z	    primaryBrand->{
2025-09-16T23:46:09.833414Z	      _id,
2025-09-16T23:46:09.834072Z	      name,
2025-09-16T23:46:09.835815Z	      "slug": slug.current,
2025-09-16T23:46:09.947829Z	      logo
2025-09-16T23:46:09.948744Z	    },
2025-09-16T23:46:09.949862Z	    relatedBrands[]->{
2025-09-16T23:46:09.950109Z	      _id,
2025-09-16T23:46:09.950317Z	      name,
2025-09-16T23:46:09.950634Z	      "slug": slug.current,
2025-09-16T23:46:09.951017Z	      logo
2025-09-16T23:46:09.951147Z	    },
2025-09-16T23:46:09.951254Z	    targetMarket,
2025-09-16T23:46:09.951455Z	    complexity,
2025-09-16T23:46:09.951585Z	    publishedAt,
2025-09-16T23:46:09.951796Z	    isPublished,
2025-09-16T23:46:09.952109Z	    isFeatured,
2025-09-16T23:46:09.952266Z	    viewCount,
2025-09-16T23:46:09.952422Z	    _createdAt,
2025-09-16T23:46:09.95254Z	    _updatedAt
2025-09-16T23:46:09.952711Z	  
2025-09-16T23:46:09.952827Z	      },
2025-09-16T23:46:09.952987Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-16T23:46:09.953136Z	    }
2025-09-16T23:46:09.953255Z	  
2025-09-16T23:46:09.953364Z	Query parameters: {
2025-09-16T23:46:09.953519Z	  limit: 4,
2025-09-16T23:46:09.953628Z	  offset: 0,
2025-09-16T23:46:09.953817Z	  targetMarket: undefined,
2025-09-16T23:46:09.954012Z	  brand: 'epcos',
2025-09-16T23:46:09.954159Z	  featured: undefined
2025-09-16T23:46:09.954322Z	}
2025-09-16T23:46:09.95449Z	✅ [getBrandData] Found brand: IXYS
2025-09-16T23:46:09.95471Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:46:09.954852Z	Fetching products with query: 
2025-09-16T23:46:09.955002Z	    {
2025-09-16T23:46:09.955136Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:09.955296Z	        
2025-09-16T23:46:09.955412Z	    _id,
2025-09-16T23:46:09.955584Z	    _type,
2025-09-16T23:46:09.955771Z	    partNumber,
2025-09-16T23:46:09.955883Z	    "slug": slug.current,
2025-09-16T23:46:09.956032Z	    title,
2025-09-16T23:46:09.956136Z	    shortDescription,
2025-09-16T23:46:09.956288Z	    image,
2025-09-16T23:46:09.956449Z	    brand->{
2025-09-16T23:46:09.956562Z	      name,
2025-09-16T23:46:09.956723Z	      "slug": slug.current,
2025-09-16T23:46:09.956839Z	      logo
2025-09-16T23:46:09.956994Z	    },
2025-09-16T23:46:09.957147Z	    category->{
2025-09-16T23:46:09.957264Z	      name,
2025-09-16T23:46:09.95743Z	      "slug": slug.current
2025-09-16T23:46:09.957546Z	    },
2025-09-16T23:46:09.957737Z	    pricing{
2025-09-16T23:46:09.957866Z	      currency,
2025-09-16T23:46:09.958031Z	      tiers[]{
2025-09-16T23:46:09.958187Z	        quantity,
2025-09-16T23:46:09.958348Z	        price,
2025-09-16T23:46:09.958518Z	        unit
2025-09-16T23:46:09.958701Z	      },
2025-09-16T23:46:09.958862Z	      moq,
2025-09-16T23:46:09.959117Z	      leadTime,
2025-09-16T23:46:09.959317Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:09.959447Z	      "price": tiers[0].price,
2025-09-16T23:46:09.959887Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:09.960028Z	    },
2025-09-16T23:46:09.960147Z	    inventory{
2025-09-16T23:46:09.960261Z	      quantity,
2025-09-16T23:46:09.960374Z	      status,
2025-09-16T23:46:09.960492Z	      warehouse,
2025-09-16T23:46:09.960598Z	      lastUpdated,
2025-09-16T23:46:09.960732Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:09.960853Z	      "inStock": status == "in_stock",
2025-09-16T23:46:09.960962Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:09.961068Z	    },
2025-09-16T23:46:09.961177Z	    isActive,
2025-09-16T23:46:09.961299Z	    isFeatured,
2025-09-16T23:46:09.961399Z	    isNew,
2025-09-16T23:46:09.961495Z	    _createdAt,
2025-09-16T23:46:09.961599Z	    _updatedAt
2025-09-16T23:46:09.961721Z	  
2025-09-16T23:46:09.961844Z	      },
2025-09-16T23:46:09.961939Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:46:09.962035Z	    }
2025-09-16T23:46:09.962126Z	  
2025-09-16T23:46:09.962237Z	Query parameters: {
2025-09-16T23:46:09.962341Z	  limit: 8,
2025-09-16T23:46:09.962446Z	  offset: 0,
2025-09-16T23:46:09.962549Z	  category: undefined,
2025-09-16T23:46:09.962644Z	  brand: 'littelfuse',
2025-09-16T23:46:09.962776Z	  featured: undefined
2025-09-16T23:46:09.962891Z	}
2025-09-16T23:46:09.962998Z	Fetching solutions with query: 
2025-09-16T23:46:09.9631Z	    {
2025-09-16T23:46:09.963199Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:09.963301Z	        
2025-09-16T23:46:09.963398Z	    _id,
2025-09-16T23:46:09.963496Z	    title,
2025-09-16T23:46:09.964263Z	    "slug": slug.current,
2025-09-16T23:46:09.96439Z	    summary,
2025-09-16T23:46:09.964654Z	    description,
2025-09-16T23:46:09.965158Z	    coverImage,
2025-09-16T23:46:09.965589Z	    primaryBrand->{
2025-09-16T23:46:09.966117Z	      _id,
2025-09-16T23:46:09.96649Z	      name,
2025-09-16T23:46:09.967184Z	      "slug": slug.current,
2025-09-16T23:46:09.967333Z	      logo
2025-09-16T23:46:09.967932Z	    },
2025-09-16T23:46:09.969043Z	    relatedBrands[]->{
2025-09-16T23:46:09.969625Z	      _id,
2025-09-16T23:46:09.970366Z	      name,
2025-09-16T23:46:09.970982Z	      "slug": slug.current,
2025-09-16T23:46:09.971285Z	      logo
2025-09-16T23:46:09.971931Z	    },
2025-09-16T23:46:09.972333Z	    targetMarket,
2025-09-16T23:46:09.973626Z	    complexity,
2025-09-16T23:46:09.974038Z	    publishedAt,
2025-09-16T23:46:09.974381Z	    isPublished,
2025-09-16T23:46:09.974739Z	    isFeatured,
2025-09-16T23:46:09.975066Z	    viewCount,
2025-09-16T23:46:09.975503Z	    _createdAt,
2025-09-16T23:46:09.975866Z	    _updatedAt
2025-09-16T23:46:09.976198Z	  
2025-09-16T23:46:09.976632Z	      },
2025-09-16T23:46:09.977Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:46:09.977474Z	    }
2025-09-16T23:46:09.977855Z	  
2025-09-16T23:46:09.978218Z	Query parameters: {
2025-09-16T23:46:09.978702Z	  limit: 4,
2025-09-16T23:46:09.979081Z	  offset: 0,
2025-09-16T23:46:09.979549Z	  targetMarket: undefined,
2025-09-16T23:46:09.979887Z	  brand: 'littelfuse',
2025-09-16T23:46:09.980247Z	  featured: undefined
2025-09-16T23:46:09.980681Z	}
2025-09-16T23:46:09.981156Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:46:09.981548Z	Fetching products with query: 
2025-09-16T23:46:09.98197Z	    {
2025-09-16T23:46:09.982498Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:09.982877Z	        
2025-09-16T23:46:09.983258Z	    _id,
2025-09-16T23:46:09.98361Z	    _type,
2025-09-16T23:46:09.984617Z	    partNumber,
2025-09-16T23:46:09.985223Z	    "slug": slug.current,
2025-09-16T23:46:09.985656Z	    title,
2025-09-16T23:46:09.986062Z	    shortDescription,
2025-09-16T23:46:09.986501Z	    image,
2025-09-16T23:46:09.986631Z	    brand->{
2025-09-16T23:46:09.98734Z	      name,
2025-09-16T23:46:09.987508Z	      "slug": slug.current,
2025-09-16T23:46:09.987618Z	      logo
2025-09-16T23:46:09.987746Z	    },
2025-09-16T23:46:09.987853Z	    category->{
2025-09-16T23:46:09.987952Z	      name,
2025-09-16T23:46:09.988053Z	      "slug": slug.current
2025-09-16T23:46:09.988161Z	    },
2025-09-16T23:46:09.988258Z	    pricing{
2025-09-16T23:46:09.988354Z	      currency,
2025-09-16T23:46:09.988457Z	      tiers[]{
2025-09-16T23:46:09.98856Z	        quantity,
2025-09-16T23:46:09.988658Z	        price,
2025-09-16T23:46:09.990339Z	        unit
2025-09-16T23:46:09.990495Z	      },
2025-09-16T23:46:09.990618Z	      moq,
2025-09-16T23:46:09.990749Z	      leadTime,
2025-09-16T23:46:09.990862Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:09.99097Z	      "price": tiers[0].price,
2025-09-16T23:46:09.991088Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:09.991196Z	    },
2025-09-16T23:46:09.991304Z	    inventory{
2025-09-16T23:46:09.992838Z	      quantity,
2025-09-16T23:46:09.993288Z	      status,
2025-09-16T23:46:09.993809Z	      warehouse,
2025-09-16T23:46:09.994002Z	      lastUpdated,
2025-09-16T23:46:09.994166Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:09.99435Z	      "inStock": status == "in_stock",
2025-09-16T23:46:09.994525Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:09.99473Z	    },
2025-09-16T23:46:09.994886Z	    isActive,
2025-09-16T23:46:09.995007Z	    isFeatured,
2025-09-16T23:46:09.996242Z	    isNew,
2025-09-16T23:46:09.996435Z	    _createdAt,
2025-09-16T23:46:09.996581Z	    _updatedAt
2025-09-16T23:46:09.996705Z	  
2025-09-16T23:46:09.99686Z	      },
2025-09-16T23:46:09.996968Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:46:09.997165Z	    }
2025-09-16T23:46:09.997346Z	  
2025-09-16T23:46:09.997478Z	Query parameters: {
2025-09-16T23:46:09.997582Z	  limit: 8,
2025-09-16T23:46:09.997693Z	  offset: 0,
2025-09-16T23:46:09.997799Z	  category: undefined,
2025-09-16T23:46:09.997922Z	  brand: 'littelfuse',
2025-09-16T23:46:09.998039Z	  featured: undefined
2025-09-16T23:46:09.998151Z	}
2025-09-16T23:46:09.998261Z	Fetching solutions with query: 
2025-09-16T23:46:09.998377Z	    {
2025-09-16T23:46:09.998484Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:09.998591Z	        
2025-09-16T23:46:09.998709Z	    _id,
2025-09-16T23:46:09.998804Z	    title,
2025-09-16T23:46:09.99889Z	    "slug": slug.current,
2025-09-16T23:46:09.998975Z	    summary,
2025-09-16T23:46:09.999059Z	    description,
2025-09-16T23:46:09.99914Z	    coverImage,
2025-09-16T23:46:09.999246Z	    primaryBrand->{
2025-09-16T23:46:09.999353Z	      _id,
2025-09-16T23:46:09.999466Z	      name,
2025-09-16T23:46:09.999575Z	      "slug": slug.current,
2025-09-16T23:46:10.023868Z	      logo
2025-09-16T23:46:10.024178Z	    },
2025-09-16T23:46:10.024284Z	    relatedBrands[]->{
2025-09-16T23:46:10.024479Z	      _id,
2025-09-16T23:46:10.024696Z	      name,
2025-09-16T23:46:10.024862Z	      "slug": slug.current,
2025-09-16T23:46:10.024982Z	      logo
2025-09-16T23:46:10.025135Z	    },
2025-09-16T23:46:10.025334Z	    targetMarket,
2025-09-16T23:46:10.025462Z	    complexity,
2025-09-16T23:46:10.025578Z	    publishedAt,
2025-09-16T23:46:10.025768Z	    isPublished,
2025-09-16T23:46:10.025947Z	    isFeatured,
2025-09-16T23:46:10.026273Z	    viewCount,
2025-09-16T23:46:10.026536Z	    _createdAt,
2025-09-16T23:46:10.02683Z	    _updatedAt
2025-09-16T23:46:10.026989Z	  
2025-09-16T23:46:10.0271Z	      },
2025-09-16T23:46:10.027224Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:46:10.027344Z	    }
2025-09-16T23:46:10.027458Z	  
2025-09-16T23:46:10.027557Z	Query parameters: {
2025-09-16T23:46:10.027659Z	  limit: 4,
2025-09-16T23:46:10.028039Z	  offset: 0,
2025-09-16T23:46:10.028144Z	  targetMarket: undefined,
2025-09-16T23:46:10.028245Z	  brand: 'littelfuse',
2025-09-16T23:46:10.028343Z	  featured: undefined
2025-09-16T23:46:10.028447Z	}
2025-09-16T23:46:10.028554Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-16T23:46:10.028664Z	Fetching products with query: 
2025-09-16T23:46:10.028787Z	    {
2025-09-16T23:46:10.028888Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:10.028992Z	        
2025-09-16T23:46:10.029094Z	    _id,
2025-09-16T23:46:10.029192Z	    _type,
2025-09-16T23:46:10.029827Z	    partNumber,
2025-09-16T23:46:10.034724Z	    "slug": slug.current,
2025-09-16T23:46:10.035076Z	    title,
2025-09-16T23:46:10.035561Z	    shortDescription,
2025-09-16T23:46:10.035807Z	    image,
2025-09-16T23:46:10.035993Z	    brand->{
2025-09-16T23:46:10.036173Z	      name,
2025-09-16T23:46:10.036325Z	      "slug": slug.current,
2025-09-16T23:46:10.036535Z	      logo
2025-09-16T23:46:10.036732Z	    },
2025-09-16T23:46:10.037441Z	    category->{
2025-09-16T23:46:10.037807Z	      name,
2025-09-16T23:46:10.037985Z	      "slug": slug.current
2025-09-16T23:46:10.038122Z	    },
2025-09-16T23:46:10.038311Z	    pricing{
2025-09-16T23:46:10.038516Z	      currency,
2025-09-16T23:46:10.038699Z	      tiers[]{
2025-09-16T23:46:10.038883Z	        quantity,
2025-09-16T23:46:10.039028Z	        price,
2025-09-16T23:46:10.039199Z	        unit
2025-09-16T23:46:10.039351Z	      },
2025-09-16T23:46:10.039473Z	      moq,
2025-09-16T23:46:10.039574Z	      leadTime,
2025-09-16T23:46:10.039687Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:10.039809Z	      "price": tiers[0].price,
2025-09-16T23:46:10.039926Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:10.040036Z	    },
2025-09-16T23:46:10.040138Z	    inventory{
2025-09-16T23:46:10.04024Z	      quantity,
2025-09-16T23:46:10.040342Z	      status,
2025-09-16T23:46:10.040461Z	      warehouse,
2025-09-16T23:46:10.040566Z	      lastUpdated,
2025-09-16T23:46:10.040711Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:10.04084Z	      "inStock": status == "in_stock",
2025-09-16T23:46:10.040963Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:10.041061Z	    },
2025-09-16T23:46:10.041183Z	    isActive,
2025-09-16T23:46:10.041279Z	    isFeatured,
2025-09-16T23:46:10.041383Z	    isNew,
2025-09-16T23:46:10.041477Z	    _createdAt,
2025-09-16T23:46:10.041572Z	    _updatedAt
2025-09-16T23:46:10.041664Z	  
2025-09-16T23:46:10.043341Z	      },
2025-09-16T23:46:10.043481Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-16T23:46:10.043615Z	    }
2025-09-16T23:46:10.043749Z	  
2025-09-16T23:46:10.043862Z	Query parameters: {
2025-09-16T23:46:10.043966Z	  limit: 8,
2025-09-16T23:46:10.044078Z	  offset: 0,
2025-09-16T23:46:10.044193Z	  category: undefined,
2025-09-16T23:46:10.044295Z	  brand: 'mediatek',
2025-09-16T23:46:10.044409Z	  featured: undefined
2025-09-16T23:46:10.044506Z	}
2025-09-16T23:46:10.044604Z	Fetching solutions with query: 
2025-09-16T23:46:10.044748Z	    {
2025-09-16T23:46:10.044855Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:10.044963Z	        
2025-09-16T23:46:10.045057Z	    _id,
2025-09-16T23:46:10.045147Z	    title,
2025-09-16T23:46:10.045236Z	    "slug": slug.current,
2025-09-16T23:46:10.045326Z	    summary,
2025-09-16T23:46:10.045432Z	    description,
2025-09-16T23:46:10.045524Z	    coverImage,
2025-09-16T23:46:10.045614Z	    primaryBrand->{
2025-09-16T23:46:10.045741Z	      _id,
2025-09-16T23:46:10.045856Z	      name,
2025-09-16T23:46:10.045966Z	      "slug": slug.current,
2025-09-16T23:46:10.046074Z	      logo
2025-09-16T23:46:10.046178Z	    },
2025-09-16T23:46:10.046281Z	    relatedBrands[]->{
2025-09-16T23:46:10.046389Z	      _id,
2025-09-16T23:46:10.053153Z	      name,
2025-09-16T23:46:10.053418Z	      "slug": slug.current,
2025-09-16T23:46:10.053551Z	      logo
2025-09-16T23:46:10.053691Z	    },
2025-09-16T23:46:10.053818Z	    targetMarket,
2025-09-16T23:46:10.053929Z	    complexity,
2025-09-16T23:46:10.054045Z	    publishedAt,
2025-09-16T23:46:10.054137Z	    isPublished,
2025-09-16T23:46:10.054251Z	    isFeatured,
2025-09-16T23:46:10.054361Z	    viewCount,
2025-09-16T23:46:10.054475Z	    _createdAt,
2025-09-16T23:46:10.054579Z	    _updatedAt
2025-09-16T23:46:10.054729Z	  
2025-09-16T23:46:10.054845Z	      },
2025-09-16T23:46:10.054949Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-16T23:46:10.055069Z	    }
2025-09-16T23:46:10.055272Z	  
2025-09-16T23:46:10.055421Z	Query parameters: {
2025-09-16T23:46:10.056753Z	  limit: 4,
2025-09-16T23:46:10.05693Z	  offset: 0,
2025-09-16T23:46:10.057049Z	  targetMarket: undefined,
2025-09-16T23:46:10.057158Z	  brand: 'mediatek',
2025-09-16T23:46:10.057264Z	  featured: undefined
2025-09-16T23:46:10.057364Z	}
2025-09-16T23:46:10.057473Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.057583Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:10.057708Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:10.057815Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.057925Z	Fetching products with query: 
2025-09-16T23:46:10.058017Z	    {
2025-09-16T23:46:10.05811Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:10.058214Z	        
2025-09-16T23:46:10.058313Z	    _id,
2025-09-16T23:46:10.058415Z	    _type,
2025-09-16T23:46:10.058508Z	    partNumber,
2025-09-16T23:46:10.058599Z	    "slug": slug.current,
2025-09-16T23:46:10.058728Z	    title,
2025-09-16T23:46:10.058842Z	    shortDescription,
2025-09-16T23:46:10.062147Z	    image,
2025-09-16T23:46:10.063957Z	    brand->{
2025-09-16T23:46:10.064115Z	      name,
2025-09-16T23:46:10.064238Z	      "slug": slug.current,
2025-09-16T23:46:10.064346Z	      logo
2025-09-16T23:46:10.064455Z	    },
2025-09-16T23:46:10.064556Z	    category->{
2025-09-16T23:46:10.064688Z	      name,
2025-09-16T23:46:10.064806Z	      "slug": slug.current
2025-09-16T23:46:10.06492Z	    },
2025-09-16T23:46:10.06502Z	    pricing{
2025-09-16T23:46:10.065119Z	      currency,
2025-09-16T23:46:10.065213Z	      tiers[]{
2025-09-16T23:46:10.065311Z	        quantity,
2025-09-16T23:46:10.065418Z	        price,
2025-09-16T23:46:10.065534Z	        unit
2025-09-16T23:46:10.066975Z	      },
2025-09-16T23:46:10.067333Z	      moq,
2025-09-16T23:46:10.067457Z	      leadTime,
2025-09-16T23:46:10.067563Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:10.067697Z	      "price": tiers[0].price,
2025-09-16T23:46:10.067816Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:10.067924Z	    },
2025-09-16T23:46:10.068031Z	    inventory{
2025-09-16T23:46:10.068137Z	      quantity,
2025-09-16T23:46:10.068234Z	      status,
2025-09-16T23:46:10.068327Z	      warehouse,
2025-09-16T23:46:10.068415Z	      lastUpdated,
2025-09-16T23:46:10.068505Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:10.068607Z	      "inStock": status == "in_stock",
2025-09-16T23:46:10.068737Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:10.068849Z	    },
2025-09-16T23:46:10.068957Z	    isActive,
2025-09-16T23:46:10.069077Z	    isFeatured,
2025-09-16T23:46:10.069178Z	    isNew,
2025-09-16T23:46:10.069276Z	    _createdAt,
2025-09-16T23:46:10.069374Z	    _updatedAt
2025-09-16T23:46:10.069466Z	  
2025-09-16T23:46:10.069557Z	      },
2025-09-16T23:46:10.069662Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-16T23:46:10.0762Z	    }
2025-09-16T23:46:10.076379Z	  
2025-09-16T23:46:10.07651Z	Query parameters: {
2025-09-16T23:46:10.076616Z	  limit: 8,
2025-09-16T23:46:10.076743Z	  offset: 0,
2025-09-16T23:46:10.076933Z	  category: undefined,
2025-09-16T23:46:10.077077Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:10.077309Z	  featured: undefined
2025-09-16T23:46:10.077439Z	}
2025-09-16T23:46:10.077535Z	Fetching solutions with query: 
2025-09-16T23:46:10.077631Z	    {
2025-09-16T23:46:10.077768Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:10.077878Z	        
2025-09-16T23:46:10.077989Z	    _id,
2025-09-16T23:46:10.078089Z	    title,
2025-09-16T23:46:10.078203Z	    "slug": slug.current,
2025-09-16T23:46:10.078298Z	    summary,
2025-09-16T23:46:10.078361Z	    description,
2025-09-16T23:46:10.078427Z	    coverImage,
2025-09-16T23:46:10.078482Z	    primaryBrand->{
2025-09-16T23:46:10.078799Z	      _id,
2025-09-16T23:46:10.079023Z	      name,
2025-09-16T23:46:10.079175Z	      "slug": slug.current,
2025-09-16T23:46:10.079348Z	      logo
2025-09-16T23:46:10.079491Z	    },
2025-09-16T23:46:10.079611Z	    relatedBrands[]->{
2025-09-16T23:46:10.07975Z	      _id,
2025-09-16T23:46:10.079897Z	      name,
2025-09-16T23:46:10.080083Z	      "slug": slug.current,
2025-09-16T23:46:10.080725Z	      logo
2025-09-16T23:46:10.08124Z	    },
2025-09-16T23:46:10.08178Z	    targetMarket,
2025-09-16T23:46:10.082188Z	    complexity,
2025-09-16T23:46:10.082384Z	    publishedAt,
2025-09-16T23:46:10.082524Z	    isPublished,
2025-09-16T23:46:10.08264Z	    isFeatured,
2025-09-16T23:46:10.08278Z	    viewCount,
2025-09-16T23:46:10.082894Z	    _createdAt,
2025-09-16T23:46:10.083012Z	    _updatedAt
2025-09-16T23:46:10.083121Z	  
2025-09-16T23:46:10.083219Z	      },
2025-09-16T23:46:10.083329Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-16T23:46:10.083451Z	    }
2025-09-16T23:46:10.083566Z	  
2025-09-16T23:46:10.083797Z	Query parameters: {
2025-09-16T23:46:10.083912Z	  limit: 4,
2025-09-16T23:46:10.084011Z	  offset: 0,
2025-09-16T23:46:10.084121Z	  targetMarket: undefined,
2025-09-16T23:46:10.084235Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-16T23:46:10.084338Z	  featured: undefined
2025-09-16T23:46:10.084448Z	}
2025-09-16T23:46:10.084554Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.084659Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:10.084783Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:10.084898Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:46:10.085011Z	Fetching products with query: 
2025-09-16T23:46:10.085114Z	    {
2025-09-16T23:46:10.085214Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:10.085321Z	        
2025-09-16T23:46:10.085434Z	    _id,
2025-09-16T23:46:10.085537Z	    _type,
2025-09-16T23:46:10.085652Z	    partNumber,
2025-09-16T23:46:10.085767Z	    "slug": slug.current,
2025-09-16T23:46:10.085869Z	    title,
2025-09-16T23:46:10.085965Z	    shortDescription,
2025-09-16T23:46:10.086086Z	    image,
2025-09-16T23:46:10.086194Z	    brand->{
2025-09-16T23:46:10.086293Z	      name,
2025-09-16T23:46:10.086397Z	      "slug": slug.current,
2025-09-16T23:46:10.086504Z	      logo
2025-09-16T23:46:10.086602Z	    },
2025-09-16T23:46:10.086782Z	    category->{
2025-09-16T23:46:10.086891Z	      name,
2025-09-16T23:46:10.086995Z	      "slug": slug.current
2025-09-16T23:46:10.0871Z	    },
2025-09-16T23:46:10.087197Z	    pricing{
2025-09-16T23:46:10.08729Z	      currency,
2025-09-16T23:46:10.087393Z	      tiers[]{
2025-09-16T23:46:10.087501Z	        quantity,
2025-09-16T23:46:10.08759Z	        price,
2025-09-16T23:46:10.087698Z	        unit
2025-09-16T23:46:10.087802Z	      },
2025-09-16T23:46:10.087899Z	      moq,
2025-09-16T23:46:10.087995Z	      leadTime,
2025-09-16T23:46:10.088096Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:10.088165Z	      "price": tiers[0].price,
2025-09-16T23:46:10.088225Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:10.088308Z	    },
2025-09-16T23:46:10.088366Z	    inventory{
2025-09-16T23:46:10.088454Z	      quantity,
2025-09-16T23:46:10.088542Z	      status,
2025-09-16T23:46:10.088639Z	      warehouse,
2025-09-16T23:46:10.088772Z	      lastUpdated,
2025-09-16T23:46:10.088873Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:10.088973Z	      "inStock": status == "in_stock",
2025-09-16T23:46:10.089074Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:10.089256Z	    },
2025-09-16T23:46:10.08937Z	    isActive,
2025-09-16T23:46:10.089484Z	    isFeatured,
2025-09-16T23:46:10.089608Z	    isNew,
2025-09-16T23:46:10.089712Z	    _createdAt,
2025-09-16T23:46:10.089795Z	    _updatedAt
2025-09-16T23:46:10.08986Z	  
2025-09-16T23:46:10.089964Z	      },
2025-09-16T23:46:10.090057Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:46:10.090152Z	    }
2025-09-16T23:46:10.090222Z	  
2025-09-16T23:46:10.090285Z	Query parameters: {
2025-09-16T23:46:10.090342Z	  limit: 8,
2025-09-16T23:46:10.090397Z	  offset: 0,
2025-09-16T23:46:10.090479Z	  category: undefined,
2025-09-16T23:46:10.090595Z	  brand: 'littelfuse',
2025-09-16T23:46:10.09066Z	  featured: undefined
2025-09-16T23:46:10.090754Z	}
2025-09-16T23:46:10.090842Z	Fetching solutions with query: 
2025-09-16T23:46:10.090906Z	    {
2025-09-16T23:46:10.090994Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:10.09109Z	        
2025-09-16T23:46:10.091186Z	    _id,
2025-09-16T23:46:10.091291Z	    title,
2025-09-16T23:46:10.09138Z	    "slug": slug.current,
2025-09-16T23:46:10.091492Z	    summary,
2025-09-16T23:46:10.091579Z	    description,
2025-09-16T23:46:10.091668Z	    coverImage,
2025-09-16T23:46:10.091797Z	    primaryBrand->{
2025-09-16T23:46:10.091879Z	      _id,
2025-09-16T23:46:10.091974Z	      name,
2025-09-16T23:46:10.092197Z	      "slug": slug.current,
2025-09-16T23:46:10.092322Z	      logo
2025-09-16T23:46:10.09244Z	    },
2025-09-16T23:46:10.092554Z	    relatedBrands[]->{
2025-09-16T23:46:10.092655Z	      _id,
2025-09-16T23:46:10.092764Z	      name,
2025-09-16T23:46:10.09287Z	      "slug": slug.current,
2025-09-16T23:46:10.092974Z	      logo
2025-09-16T23:46:10.093065Z	    },
2025-09-16T23:46:10.093165Z	    targetMarket,
2025-09-16T23:46:10.093257Z	    complexity,
2025-09-16T23:46:10.093359Z	    publishedAt,
2025-09-16T23:46:10.093471Z	    isPublished,
2025-09-16T23:46:10.093573Z	    isFeatured,
2025-09-16T23:46:10.093691Z	    viewCount,
2025-09-16T23:46:10.093807Z	    _createdAt,
2025-09-16T23:46:10.093912Z	    _updatedAt
2025-09-16T23:46:10.094008Z	  
2025-09-16T23:46:10.094118Z	      },
2025-09-16T23:46:10.094222Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:46:10.094321Z	    }
2025-09-16T23:46:10.094422Z	  
2025-09-16T23:46:10.09453Z	Query parameters: {
2025-09-16T23:46:10.094625Z	  limit: 4,
2025-09-16T23:46:10.094744Z	  offset: 0,
2025-09-16T23:46:10.094826Z	  targetMarket: undefined,
2025-09-16T23:46:10.094911Z	  brand: 'littelfuse',
2025-09-16T23:46:10.095002Z	  featured: undefined
2025-09-16T23:46:10.095087Z	}
2025-09-16T23:46:10.095193Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:46:10.0953Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:10.095377Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:10.095451Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-16T23:46:10.095512Z	Fetching products with query: 
2025-09-16T23:46:10.095569Z	    {
2025-09-16T23:46:10.095624Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:10.095704Z	        
2025-09-16T23:46:10.095768Z	    _id,
2025-09-16T23:46:10.095823Z	    _type,
2025-09-16T23:46:10.095876Z	    partNumber,
2025-09-16T23:46:10.09593Z	    "slug": slug.current,
2025-09-16T23:46:10.095985Z	    title,
2025-09-16T23:46:10.096041Z	    shortDescription,
2025-09-16T23:46:10.096097Z	    image,
2025-09-16T23:46:10.09615Z	    brand->{
2025-09-16T23:46:10.096202Z	      name,
2025-09-16T23:46:10.096254Z	      "slug": slug.current,
2025-09-16T23:46:10.096308Z	      logo
2025-09-16T23:46:10.096368Z	    },
2025-09-16T23:46:10.096435Z	    category->{
2025-09-16T23:46:10.096493Z	      name,
2025-09-16T23:46:10.096545Z	      "slug": slug.current
2025-09-16T23:46:10.096598Z	    },
2025-09-16T23:46:10.096649Z	    pricing{
2025-09-16T23:46:10.096729Z	      currency,
2025-09-16T23:46:10.096791Z	      tiers[]{
2025-09-16T23:46:10.096844Z	        quantity,
2025-09-16T23:46:10.096897Z	        price,
2025-09-16T23:46:10.096949Z	        unit
2025-09-16T23:46:10.097001Z	      },
2025-09-16T23:46:10.097052Z	      moq,
2025-09-16T23:46:10.097106Z	      leadTime,
2025-09-16T23:46:10.097159Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:10.097214Z	      "price": tiers[0].price,
2025-09-16T23:46:10.097267Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:10.09732Z	    },
2025-09-16T23:46:10.097422Z	    inventory{
2025-09-16T23:46:10.097489Z	      quantity,
2025-09-16T23:46:10.097546Z	      status,
2025-09-16T23:46:10.097601Z	      warehouse,
2025-09-16T23:46:10.097656Z	      lastUpdated,
2025-09-16T23:46:10.097747Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:10.097808Z	      "inStock": status == "in_stock",
2025-09-16T23:46:10.097864Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:10.097918Z	    },
2025-09-16T23:46:10.09797Z	    isActive,
2025-09-16T23:46:10.098022Z	    isFeatured,
2025-09-16T23:46:10.098074Z	    isNew,
2025-09-16T23:46:10.098126Z	    _createdAt,
2025-09-16T23:46:10.09818Z	    _updatedAt
2025-09-16T23:46:10.098232Z	  
2025-09-16T23:46:10.098285Z	      },
2025-09-16T23:46:10.098337Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-16T23:46:10.098405Z	    }
2025-09-16T23:46:10.124023Z	  
2025-09-16T23:46:10.124235Z	Query parameters: {
2025-09-16T23:46:10.124353Z	  limit: 8,
2025-09-16T23:46:10.124468Z	  offset: 0,
2025-09-16T23:46:10.12458Z	  category: undefined,
2025-09-16T23:46:10.124722Z	  brand: 'littelfuse',
2025-09-16T23:46:10.124836Z	  featured: undefined
2025-09-16T23:46:10.124958Z	}
2025-09-16T23:46:10.125065Z	Fetching solutions with query: 
2025-09-16T23:46:10.12519Z	    {
2025-09-16T23:46:10.1253Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:10.12542Z	        
2025-09-16T23:46:10.125551Z	    _id,
2025-09-16T23:46:10.12566Z	    title,
2025-09-16T23:46:10.126006Z	    "slug": slug.current,
2025-09-16T23:46:10.126131Z	    summary,
2025-09-16T23:46:10.126279Z	    description,
2025-09-16T23:46:10.126417Z	    coverImage,
2025-09-16T23:46:10.12653Z	    primaryBrand->{
2025-09-16T23:46:10.126687Z	      _id,
2025-09-16T23:46:10.126801Z	      name,
2025-09-16T23:46:10.126929Z	      "slug": slug.current,
2025-09-16T23:46:10.127044Z	      logo
2025-09-16T23:46:10.12721Z	    },
2025-09-16T23:46:10.12733Z	    relatedBrands[]->{
2025-09-16T23:46:10.12746Z	      _id,
2025-09-16T23:46:10.127578Z	      name,
2025-09-16T23:46:10.127725Z	      "slug": slug.current,
2025-09-16T23:46:10.127847Z	      logo
2025-09-16T23:46:10.127953Z	    },
2025-09-16T23:46:10.12806Z	    targetMarket,
2025-09-16T23:46:10.128189Z	    complexity,
2025-09-16T23:46:10.128295Z	    publishedAt,
2025-09-16T23:46:10.1284Z	    isPublished,
2025-09-16T23:46:10.128538Z	    isFeatured,
2025-09-16T23:46:10.128658Z	    viewCount,
2025-09-16T23:46:10.128777Z	    _createdAt,
2025-09-16T23:46:10.128885Z	    _updatedAt
2025-09-16T23:46:10.12899Z	  
2025-09-16T23:46:10.129094Z	      },
2025-09-16T23:46:10.1292Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-16T23:46:10.12931Z	    }
2025-09-16T23:46:10.129406Z	  
2025-09-16T23:46:10.129518Z	Query parameters: {
2025-09-16T23:46:10.129622Z	  limit: 4,
2025-09-16T23:46:10.129744Z	  offset: 0,
2025-09-16T23:46:10.129845Z	  targetMarket: undefined,
2025-09-16T23:46:10.12994Z	  brand: 'littelfuse',
2025-09-16T23:46:10.130065Z	  featured: undefined
2025-09-16T23:46:10.130184Z	}
2025-09-16T23:46:10.130288Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:46:10.130395Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:10.130503Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:10.13063Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:46:10.130771Z	Fetching products with query: 
2025-09-16T23:46:10.130881Z	    {
2025-09-16T23:46:10.131145Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:10.13128Z	        
2025-09-16T23:46:10.131392Z	    _id,
2025-09-16T23:46:10.131508Z	    _type,
2025-09-16T23:46:10.131613Z	    partNumber,
2025-09-16T23:46:10.131736Z	    "slug": slug.current,
2025-09-16T23:46:10.131843Z	    title,
2025-09-16T23:46:10.13194Z	    shortDescription,
2025-09-16T23:46:10.132048Z	    image,
2025-09-16T23:46:10.132145Z	    brand->{
2025-09-16T23:46:10.132247Z	      name,
2025-09-16T23:46:10.132349Z	      "slug": slug.current,
2025-09-16T23:46:10.13245Z	      logo
2025-09-16T23:46:10.132551Z	    },
2025-09-16T23:46:10.132642Z	    category->{
2025-09-16T23:46:10.132751Z	      name,
2025-09-16T23:46:10.132837Z	      "slug": slug.current
2025-09-16T23:46:10.132893Z	    },
2025-09-16T23:46:10.132974Z	    pricing{
2025-09-16T23:46:10.133097Z	      currency,
2025-09-16T23:46:10.133245Z	      tiers[]{
2025-09-16T23:46:10.133496Z	        quantity,
2025-09-16T23:46:10.133591Z	        price,
2025-09-16T23:46:10.133729Z	        unit
2025-09-16T23:46:10.133944Z	      },
2025-09-16T23:46:10.134153Z	      moq,
2025-09-16T23:46:10.134308Z	      leadTime,
2025-09-16T23:46:10.13439Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:10.134547Z	      "price": tiers[0].price,
2025-09-16T23:46:10.134684Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:10.134895Z	    },
2025-09-16T23:46:10.135018Z	    inventory{
2025-09-16T23:46:10.135175Z	      quantity,
2025-09-16T23:46:10.135247Z	      status,
2025-09-16T23:46:10.135419Z	      warehouse,
2025-09-16T23:46:10.135494Z	      lastUpdated,
2025-09-16T23:46:10.135626Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:10.135938Z	      "inStock": status == "in_stock",
2025-09-16T23:46:10.136039Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:10.136271Z	    },
2025-09-16T23:46:10.136396Z	    isActive,
2025-09-16T23:46:10.136465Z	    isFeatured,
2025-09-16T23:46:10.136534Z	    isNew,
2025-09-16T23:46:10.136599Z	    _createdAt,
2025-09-16T23:46:10.136656Z	    _updatedAt
2025-09-16T23:46:10.136761Z	  
2025-09-16T23:46:10.136825Z	      },
2025-09-16T23:46:10.136889Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:46:10.136954Z	    }
2025-09-16T23:46:10.137013Z	  
2025-09-16T23:46:10.137068Z	Query parameters: {
2025-09-16T23:46:10.137124Z	  limit: 8,
2025-09-16T23:46:10.137192Z	  offset: 0,
2025-09-16T23:46:10.13725Z	  category: undefined,
2025-09-16T23:46:10.137306Z	  brand: 'qualcomm',
2025-09-16T23:46:10.137362Z	  featured: undefined
2025-09-16T23:46:10.137419Z	}
2025-09-16T23:46:10.137501Z	d/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.137603Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.137756Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.Fetching solutions with query: 
2025-09-16T23:46:10.137866Z	    {
2025-09-16T23:46:10.137973Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:10.138046Z	        
2025-09-16T23:46:10.138115Z	    _id,
2025-09-16T23:46:10.138198Z	    title,
2025-09-16T23:46:10.138267Z	    "slug": slug.current,
2025-09-16T23:46:10.138325Z	    summary,
2025-09-16T23:46:10.13839Z	    description,
2025-09-16T23:46:10.13845Z	    coverImage,
2025-09-16T23:46:10.138514Z	    primaryBrand->{
2025-09-16T23:46:10.138589Z	      _id,
2025-09-16T23:46:10.138658Z	      name,
2025-09-16T23:46:10.13877Z	      "slug": slug.current,
2025-09-16T23:46:10.138831Z	      logo
2025-09-16T23:46:10.1389Z	    },
2025-09-16T23:46:10.138978Z	    relatedBrands[]->{
2025-09-16T23:46:10.139036Z	      _id,
2025-09-16T23:46:10.139114Z	      name,
2025-09-16T23:46:10.139198Z	      "slug": slug.current,
2025-09-16T23:46:10.139272Z	      logo
2025-09-16T23:46:10.139334Z	    },
2025-09-16T23:46:10.139426Z	    targetMarket,
2025-09-16T23:46:10.139515Z	    complexity,
2025-09-16T23:46:10.139582Z	    publishedAt,
2025-09-16T23:46:10.139639Z	    isPublished,
2025-09-16T23:46:10.139754Z	    isFeatured,
2025-09-16T23:46:10.139827Z	    viewCount,
2025-09-16T23:46:10.139893Z	    _createdAt,
2025-09-16T23:46:10.140057Z	    _updatedAt
2025-09-16T23:46:10.14023Z	  
2025-09-16T23:46:10.140334Z	      },
2025-09-16T23:46:10.140442Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:46:10.140558Z	    }
2025-09-16T23:46:10.140665Z	  
2025-09-16T23:46:10.140798Z	Query parameters: {
2025-09-16T23:46:10.140898Z	  limit: 4,
2025-09-16T23:46:10.140992Z	  offset: 0,
2025-09-16T23:46:10.14108Z	  targetMarket: undefined,
2025-09-16T23:46:10.141164Z	  brand: 'qualcomm',
2025-09-16T23:46:10.141251Z	  featured: undefined
2025-09-16T23:46:10.141349Z	}
2025-09-16T23:46:10.141473Z	runtime.prod.js:12:66681)
2025-09-16T23:46:10.141569Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.141688Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.141841Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.141961Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.142067Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.142168Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.142263Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:10.14233Z	  digest: '1870762441'
2025-09-16T23:46:10.142459Z	}
2025-09-16T23:46:10.142642Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.142788Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.142904Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.142993Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.143113Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.143205Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.143267Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.143321Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.143377Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.143438Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.143497Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:10.143552Z	  digest: '1870762441'
2025-09-16T23:46:10.143609Z	}
2025-09-16T23:46:10.143727Z	
2025-09-16T23:46:10.143884Z	Error occurred prerendering page "/de/solutions/99999". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:10.144065Z	
2025-09-16T23:46:10.144186Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.146003Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.146119Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.146183Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.146241Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.146304Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.146454Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.146593Z	 ✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:46:10.146738Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:10.146849Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:10.146949Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:46:10.147051Z	Fetching products with query: 
2025-09-16T23:46:10.147155Z	    {
2025-09-16T23:46:10.147262Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:10.147359Z	        
2025-09-16T23:46:10.147466Z	    _id,
2025-09-16T23:46:10.147555Z	    _type,
2025-09-16T23:46:10.147642Z	    partNumber,
2025-09-16T23:46:10.147772Z	    "slug": slug.current,
2025-09-16T23:46:10.147876Z	    title,
2025-09-16T23:46:10.147972Z	    shortDescription,
2025-09-16T23:46:10.148065Z	    image,
2025-09-16T23:46:10.148178Z	    brand->{
2025-09-16T23:46:10.14829Z	      name,
2025-09-16T23:46:10.148395Z	      "slug": slug.current,
2025-09-16T23:46:10.148505Z	      logo
2025-09-16T23:46:10.148608Z	    },
2025-09-16T23:46:10.148725Z	    category->{
2025-09-16T23:46:10.148834Z	      name,
2025-09-16T23:46:10.148931Z	      "slug": slug.current
2025-09-16T23:46:10.149023Z	    },
2025-09-16T23:46:10.149117Z	    pricing{
2025-09-16T23:46:10.149212Z	      currency,
2025-09-16T23:46:10.149349Z	      tiers[]{
2025-09-16T23:46:10.14944Z	        quantity,
2025-09-16T23:46:10.149537Z	        price,
2025-09-16T23:46:10.149626Z	        unit
2025-09-16T23:46:10.149745Z	      },
2025-09-16T23:46:10.149844Z	      moq,
2025-09-16T23:46:10.149939Z	      leadTime,
2025-09-16T23:46:10.150042Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:10.15015Z	      "price": tiers[0].price,
2025-09-16T23:46:10.150362Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:10.15051Z	    },
2025-09-16T23:46:10.150579Z	    inventory{
2025-09-16T23:46:10.150646Z	      quantity,
2025-09-16T23:46:10.150736Z	      status,
2025-09-16T23:46:10.150796Z	      warehouse,
2025-09-16T23:46:10.150853Z	      lastUpdated,
2025-09-16T23:46:10.15091Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:10.150966Z	      "inStock": status == "in_stock",
2025-09-16T23:46:10.15103Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:10.151084Z	    },
2025-09-16T23:46:10.151138Z	    isActive,
2025-09-16T23:46:10.151193Z	    isFeatured,
2025-09-16T23:46:10.151247Z	    isNew,
2025-09-16T23:46:10.151318Z	    _createdAt,
2025-09-16T23:46:10.151379Z	    _updatedAt
2025-09-16T23:46:10.151433Z	  
2025-09-16T23:46:10.151494Z	      },
2025-09-16T23:46:10.151583Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:46:10.151665Z	    }
2025-09-16T23:46:10.151873Z	  
2025-09-16T23:46:10.151982Z	Query parameters: {
2025-09-16T23:46:10.152064Z	  limit: 8,
2025-09-16T23:46:10.152145Z	  offset: 0,
2025-09-16T23:46:10.152224Z	  category: undefined,
2025-09-16T23:46:10.152302Z	  brand: 'qualcomm',
2025-09-16T23:46:10.15238Z	  featured: undefined
2025-09-16T23:46:10.152467Z	}
2025-09-16T23:46:10.152549Z	Fetching solutions with query: 
2025-09-16T23:46:10.152648Z	    {
2025-09-16T23:46:10.152758Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:10.152852Z	        
2025-09-16T23:46:10.153014Z	    _id,
2025-09-16T23:46:10.153108Z	    title,
2025-09-16T23:46:10.153186Z	    "slug": slug.current,
2025-09-16T23:46:10.153298Z	    summary,
2025-09-16T23:46:10.153386Z	    description,
2025-09-16T23:46:10.153478Z	    coverImage,
2025-09-16T23:46:10.153561Z	    primaryBrand->{
2025-09-16T23:46:10.153653Z	      _id,
2025-09-16T23:46:10.153759Z	      name,
2025-09-16T23:46:10.153841Z	      "slug": slug.current,
2025-09-16T23:46:10.153918Z	      logo
2025-09-16T23:46:10.153994Z	    },
2025-09-16T23:46:10.154073Z	    relatedBrands[]->{
2025-09-16T23:46:10.154151Z	      _id,
2025-09-16T23:46:10.154227Z	      name,
2025-09-16T23:46:10.154322Z	      "slug": slug.current,
2025-09-16T23:46:10.15441Z	      logo
2025-09-16T23:46:10.154497Z	    },
2025-09-16T23:46:10.154582Z	    targetMarket,
2025-09-16T23:46:10.154694Z	    complexity,
2025-09-16T23:46:10.154821Z	    publishedAt,
2025-09-16T23:46:10.154921Z	    isPublished,
2025-09-16T23:46:10.15502Z	    isFeatured,
2025-09-16T23:46:10.155111Z	    viewCount,
2025-09-16T23:46:10.155204Z	    _createdAt,
2025-09-16T23:46:10.155294Z	    _updatedAt
2025-09-16T23:46:10.155382Z	  
2025-09-16T23:46:10.155473Z	      },
2025-09-16T23:46:10.155584Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:46:10.155746Z	    }
2025-09-16T23:46:10.155855Z	  
2025-09-16T23:46:10.155959Z	Query parameters: {
2025-09-16T23:46:10.156047Z	  limit: 4,
2025-09-16T23:46:10.156136Z	  offset: 0,
2025-09-16T23:46:10.156267Z	  targetMarket: undefined,
2025-09-16T23:46:10.156407Z	  brand: 'qualcomm',
2025-09-16T23:46:10.156531Z	  featured: undefined
2025-09-16T23:46:10.156667Z	}
2025-09-16T23:46:10.156827Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:46:10.15699Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:10.157103Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:10.157208Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:46:10.157312Z	Fetching products with query: 
2025-09-16T23:46:10.157426Z	    {
2025-09-16T23:46:10.157524Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:10.157646Z	        
2025-09-16T23:46:10.157771Z	    _id,
2025-09-16T23:46:10.157863Z	    _type,
2025-09-16T23:46:10.157956Z	    partNumber,
2025-09-16T23:46:10.158038Z	    "slug": slug.current,
2025-09-16T23:46:10.158116Z	    title,
2025-09-16T23:46:10.15821Z	    shortDescription,
2025-09-16T23:46:10.158316Z	    image,
2025-09-16T23:46:10.158403Z	    brand->{
2025-09-16T23:46:10.15849Z	      name,
2025-09-16T23:46:10.158583Z	      "slug": slug.current,
2025-09-16T23:46:10.15869Z	      logo
2025-09-16T23:46:10.15879Z	    },
2025-09-16T23:46:10.158891Z	    category->{
2025-09-16T23:46:10.15898Z	      name,
2025-09-16T23:46:10.159071Z	      "slug": slug.current
2025-09-16T23:46:10.159157Z	    },
2025-09-16T23:46:10.159262Z	    pricing{
2025-09-16T23:46:10.159354Z	      currency,
2025-09-16T23:46:10.159463Z	      tiers[]{
2025-09-16T23:46:10.159563Z	        quantity,
2025-09-16T23:46:10.15966Z	        price,
2025-09-16T23:46:10.159753Z	        unit
2025-09-16T23:46:10.159834Z	      },
2025-09-16T23:46:10.159911Z	      moq,
2025-09-16T23:46:10.159988Z	      leadTime,
2025-09-16T23:46:10.16007Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:10.160157Z	      "price": tiers[0].price,
2025-09-16T23:46:10.160238Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:10.160328Z	    },
2025-09-16T23:46:10.160419Z	    inventory{
2025-09-16T23:46:10.160511Z	      quantity,
2025-09-16T23:46:10.160609Z	      status,
2025-09-16T23:46:10.160733Z	      warehouse,
2025-09-16T23:46:10.160823Z	      lastUpdated,
2025-09-16T23:46:10.160911Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:10.161002Z	      "inStock": status == "in_stock",
2025-09-16T23:46:10.161093Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:10.161178Z	    },
2025-09-16T23:46:10.161268Z	    isActive,
2025-09-16T23:46:10.161358Z	    isFeatured,
2025-09-16T23:46:10.161447Z	    isNew,
2025-09-16T23:46:10.161541Z	    _createdAt,
2025-09-16T23:46:10.161656Z	    _updatedAt
2025-09-16T23:46:10.16177Z	  
2025-09-16T23:46:10.161856Z	      },
2025-09-16T23:46:10.161943Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:46:10.16205Z	    }
2025-09-16T23:46:10.162114Z	  
2025-09-16T23:46:10.162199Z	Query parameters: {
2025-09-16T23:46:10.162428Z	  limit: 8,
2025-09-16T23:46:10.162543Z	  offset: 0,
2025-09-16T23:46:10.16264Z	  category: undefined,
2025-09-16T23:46:10.162736Z	  brand: 'cree',
2025-09-16T23:46:10.162815Z	  featured: undefined
2025-09-16T23:46:10.162892Z	}
2025-09-16T23:46:10.16298Z	Fetching solutions with query: 
2025-09-16T23:46:10.163333Z	    {
2025-09-16T23:46:10.163451Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:10.163558Z	        
2025-09-16T23:46:10.163662Z	    _id,
2025-09-16T23:46:10.163773Z	    title,
2025-09-16T23:46:10.163871Z	    "slug": slug.current,
2025-09-16T23:46:10.163974Z	    summary,
2025-09-16T23:46:10.164076Z	    description,
2025-09-16T23:46:10.16417Z	    coverImage,
2025-09-16T23:46:10.164267Z	    primaryBrand->{
2025-09-16T23:46:10.16458Z	      _id,
2025-09-16T23:46:10.164727Z	      name,
2025-09-16T23:46:10.164835Z	      "slug": slug.current,
2025-09-16T23:46:10.164932Z	      logo
2025-09-16T23:46:10.165026Z	    },
2025-09-16T23:46:10.165109Z	    relatedBrands[]->{
2025-09-16T23:46:10.165195Z	      _id,
2025-09-16T23:46:10.165288Z	      name,
2025-09-16T23:46:10.165398Z	      "slug": slug.current,
2025-09-16T23:46:10.165493Z	      logo
2025-09-16T23:46:10.165579Z	    },
2025-09-16T23:46:10.165663Z	    targetMarket,
2025-09-16T23:46:10.165773Z	    complexity,
2025-09-16T23:46:10.165857Z	    publishedAt,
2025-09-16T23:46:10.165946Z	    isPublished,
2025-09-16T23:46:10.166038Z	    isFeatured,
2025-09-16T23:46:10.166128Z	    viewCount,
2025-09-16T23:46:10.166219Z	    _createdAt,
2025-09-16T23:46:10.166327Z	    _updatedAt
2025-09-16T23:46:10.166448Z	  
2025-09-16T23:46:10.166553Z	      },
2025-09-16T23:46:10.166622Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:46:10.166723Z	    }
2025-09-16T23:46:10.16682Z	  
2025-09-16T23:46:10.166885Z	Query parameters: {
2025-09-16T23:46:10.167001Z	  limit: 4,
2025-09-16T23:46:10.167097Z	  offset: 0,
2025-09-16T23:46:10.167189Z	  targetMarket: undefined,
2025-09-16T23:46:10.167266Z	  brand: 'cree',
2025-09-16T23:46:10.167359Z	  featured: undefined
2025-09-16T23:46:10.167462Z	}
2025-09-16T23:46:10.167555Z	Fetching solutions with query: 
2025-09-16T23:46:10.167637Z	    {
2025-09-16T23:46:10.167794Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:10.167908Z	        
2025-09-16T23:46:10.168007Z	    _id,
2025-09-16T23:46:10.168087Z	    title,
2025-09-16T23:46:10.168178Z	    "slug": slug.current,
2025-09-16T23:46:10.168247Z	    summary,
2025-09-16T23:46:10.16834Z	    description,
2025-09-16T23:46:10.168444Z	    coverImage,
2025-09-16T23:46:10.168544Z	    primaryBrand->{
2025-09-16T23:46:10.168636Z	      _id,
2025-09-16T23:46:10.168752Z	      name,
2025-09-16T23:46:10.16885Z	      "slug": slug.current,
2025-09-16T23:46:10.168928Z	      logo
2025-09-16T23:46:10.169021Z	    },
2025-09-16T23:46:10.169103Z	    relatedBrands[]->{
2025-09-16T23:46:10.169194Z	      _id,
2025-09-16T23:46:10.169281Z	      name,
2025-09-16T23:46:10.169375Z	      "slug": slug.current,
2025-09-16T23:46:10.169473Z	      logo
2025-09-16T23:46:10.169565Z	    },
2025-09-16T23:46:10.169664Z	    targetMarket,
2025-09-16T23:46:10.169781Z	    complexity,
2025-09-16T23:46:10.169877Z	    publishedAt,
2025-09-16T23:46:10.169975Z	    isPublished,
2025-09-16T23:46:10.170065Z	    isFeatured,
2025-09-16T23:46:10.170154Z	    viewCount,
2025-09-16T23:46:10.170245Z	    _createdAt,
2025-09-16T23:46:10.17034Z	    _updatedAt
2025-09-16T23:46:10.170447Z	  
2025-09-16T23:46:10.170554Z	      },
2025-09-16T23:46:10.170646Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-16T23:46:10.170754Z	    }
2025-09-16T23:46:10.170841Z	  
2025-09-16T23:46:10.170926Z	Query parameters: {
2025-09-16T23:46:10.171007Z	  limit: 4,
2025-09-16T23:46:10.17109Z	  offset: 0,
2025-09-16T23:46:10.17117Z	  targetMarket: undefined,
2025-09-16T23:46:10.17125Z	  brand: 'mediatek',
2025-09-16T23:46:10.171328Z	  featured: undefined
2025-09-16T23:46:10.171421Z	}
2025-09-16T23:46:10.171507Z	Fetching solutions with query: 
2025-09-16T23:46:10.171597Z	    {
2025-09-16T23:46:10.171701Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:10.171807Z	        
2025-09-16T23:46:10.171897Z	    _id,
2025-09-16T23:46:10.171987Z	    title,
2025-09-16T23:46:10.172069Z	    "slug": slug.current,
2025-09-16T23:46:10.172151Z	    summary,
2025-09-16T23:46:10.172243Z	    description,
2025-09-16T23:46:10.172333Z	    coverImage,
2025-09-16T23:46:10.172444Z	    primaryBrand->{
2025-09-16T23:46:10.172537Z	      _id,
2025-09-16T23:46:10.172628Z	      name,
2025-09-16T23:46:10.172738Z	      "slug": slug.current,
2025-09-16T23:46:10.172827Z	      logo
2025-09-16T23:46:10.172905Z	    },
2025-09-16T23:46:10.172979Z	    relatedBrands[]->{
2025-09-16T23:46:10.173067Z	      _id,
2025-09-16T23:46:10.173154Z	      name,
2025-09-16T23:46:10.173259Z	      "slug": slug.current,
2025-09-16T23:46:10.173344Z	      logo
2025-09-16T23:46:10.173444Z	    },
2025-09-16T23:46:10.173566Z	    targetMarket,
2025-09-16T23:46:10.173658Z	    complexity,
2025-09-16T23:46:10.17376Z	    publishedAt,
2025-09-16T23:46:10.173847Z	    isPublished,
2025-09-16T23:46:10.173943Z	    isFeatured,
2025-09-16T23:46:10.174044Z	    viewCount,
2025-09-16T23:46:10.174158Z	    _createdAt,
2025-09-16T23:46:10.174255Z	    _updatedAt
2025-09-16T23:46:10.174338Z	  
2025-09-16T23:46:10.17444Z	      },
2025-09-16T23:46:10.174592Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-16T23:46:10.174692Z	    }
2025-09-16T23:46:10.174776Z	  
2025-09-16T23:46:10.174871Z	✅ [getBrandData] Found brand: Epcos
2025-09-16T23:46:10.174969Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:10.175137Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:10.17523Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:10.175288Z	Solutions fetch result: {
2025-09-16T23:46:10.175344Z	  totalSolutions: 1,
2025-09-16T23:46:10.175406Z	  fetchedSolutions: 1,
2025-09-16T23:46:10.175461Z	  firstSolution: {
2025-09-16T23:46:10.175514Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-16T23:46:10.17557Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-16T23:46:10.175625Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-16T23:46:10.175695Z	    complexity: 'medium',
2025-09-16T23:46:10.175824Z	    coverImage: null,
2025-09-16T23:46:10.175895Z	    description: [ [Object] ],
2025-09-16T23:46:10.175963Z	    isFeatured: false,
2025-09-16T23:46:10.176024Z	    isPublished: true,
2025-09-16T23:46:10.176197Z	    primaryBrand: {
2025-09-16T23:46:10.176322Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-16T23:46:10.176428Z	      logo: null,
2025-09-16T23:46:10.176523Z	      name: 'IXYS',
2025-09-16T23:46:10.176788Z	      slug: 'ixys'
2025-09-16T23:46:10.176884Z	    },
2025-09-16T23:46:10.176961Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-16T23:46:10.177048Z	    relatedBrands: null,
2025-09-16T23:46:10.177106Z	    slug: '99999',
2025-09-16T23:46:10.177178Z	    summary: '99999',
2025-09-16T23:46:10.177269Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:10.177366Z	    title: '99999',
2025-09-16T23:46:10.177465Z	    viewCount: 0
2025-09-16T23:46:10.177559Z	  }
2025-09-16T23:46:10.177702Z	}
2025-09-16T23:46:10.177831Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:46:10.177937Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-16T23:46:10.178044Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:10.178142Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:10.178293Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:10.178394Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:10.178481Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-16T23:46:10.178585Z	Fetching products with query: 
2025-09-16T23:46:10.178751Z	    {
2025-09-16T23:46:10.178867Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:10.178966Z	        
2025-09-16T23:46:10.179056Z	    _id,
2025-09-16T23:46:10.179151Z	    _type,
2025-09-16T23:46:10.179258Z	    partNumber,
2025-09-16T23:46:10.179351Z	    "slug": slug.current,
2025-09-16T23:46:10.179439Z	    title,
2025-09-16T23:46:10.179527Z	    shortDescription,
2025-09-16T23:46:10.179612Z	    image,
2025-09-16T23:46:10.179729Z	    brand->{
2025-09-16T23:46:10.17982Z	      name,
2025-09-16T23:46:10.179909Z	      "slug": slug.current,
2025-09-16T23:46:10.179997Z	      logo
2025-09-16T23:46:10.180101Z	    },
2025-09-16T23:46:10.180195Z	    category->{
2025-09-16T23:46:10.180291Z	      name,
2025-09-16T23:46:10.180387Z	      "slug": slug.current
2025-09-16T23:46:10.180476Z	    },
2025-09-16T23:46:10.180535Z	    pricing{
2025-09-16T23:46:10.180589Z	      currency,
2025-09-16T23:46:10.180662Z	      tiers[]{
2025-09-16T23:46:10.180747Z	        quantity,
2025-09-16T23:46:10.180804Z	        price,
2025-09-16T23:46:10.180866Z	        unit
2025-09-16T23:46:10.18092Z	      },
2025-09-16T23:46:10.180972Z	      moq,
2025-09-16T23:46:10.181027Z	      leadTime,
2025-09-16T23:46:10.18108Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:10.181135Z	      "price": tiers[0].price,
2025-09-16T23:46:10.181189Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:10.181241Z	    },
2025-09-16T23:46:10.181296Z	    inventory{
2025-09-16T23:46:10.181366Z	      quantity,
2025-09-16T23:46:10.181429Z	      status,
2025-09-16T23:46:10.181482Z	      warehouse,
2025-09-16T23:46:10.181534Z	      lastUpdated,
2025-09-16T23:46:10.181586Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:10.181647Z	      "inStock": status == "in_stock",
2025-09-16T23:46:10.181749Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:10.181812Z	    },
2025-09-16T23:46:10.181865Z	    isActive,
2025-09-16T23:46:10.181918Z	    isFeatured,
2025-09-16T23:46:10.18197Z	    isNew,
2025-09-16T23:46:10.182029Z	    _createdAt,
2025-09-16T23:46:10.182089Z	    _updatedAt
2025-09-16T23:46:10.182146Z	  
2025-09-16T23:46:10.182212Z	      },
2025-09-16T23:46:10.18227Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-16T23:46:10.182345Z	    }
2025-09-16T23:46:10.182406Z	  
2025-09-16T23:46:10.182462Z	Query parameters: {
2025-09-16T23:46:10.182515Z	  limit: 8,
2025-09-16T23:46:10.182567Z	  offset: 0,
2025-09-16T23:46:10.182625Z	  category: undefined,
2025-09-16T23:46:10.182695Z	  brand: 'mediatek',
2025-09-16T23:46:10.182783Z	  featured: undefined
2025-09-16T23:46:10.18284Z	}
2025-09-16T23:46:10.182894Z	Fetching solutions with query: 
2025-09-16T23:46:10.182947Z	    {
2025-09-16T23:46:10.183Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:10.183056Z	        
2025-09-16T23:46:10.18311Z	    _id,
2025-09-16T23:46:10.183166Z	    title,
2025-09-16T23:46:10.183229Z	    "slug": slug.current,
2025-09-16T23:46:10.183283Z	    summary,
2025-09-16T23:46:10.183336Z	    description,
2025-09-16T23:46:10.183405Z	    coverImage,
2025-09-16T23:46:10.18346Z	    primaryBrand->{
2025-09-16T23:46:10.183516Z	      _id,
2025-09-16T23:46:10.183568Z	      name,
2025-09-16T23:46:10.183628Z	      "slug": slug.current,
2025-09-16T23:46:10.183758Z	      logo
2025-09-16T23:46:10.183861Z	    },
2025-09-16T23:46:10.183959Z	    relatedBrands[]->{
2025-09-16T23:46:10.184067Z	      _id,
2025-09-16T23:46:10.184165Z	      name,
2025-09-16T23:46:10.184255Z	      "slug": slug.current,
2025-09-16T23:46:10.184364Z	      logo
2025-09-16T23:46:10.18446Z	    },
2025-09-16T23:46:10.184561Z	    targetMarket,
2025-09-16T23:46:10.184687Z	    complexity,
2025-09-16T23:46:10.184786Z	    publishedAt,
2025-09-16T23:46:10.184885Z	    isPublished,
2025-09-16T23:46:10.184976Z	    isFeatured,
2025-09-16T23:46:10.185062Z	    viewCount,
2025-09-16T23:46:10.18515Z	    _createdAt,
2025-09-16T23:46:10.185247Z	    _updatedAt
2025-09-16T23:46:10.185329Z	  
2025-09-16T23:46:10.185418Z	      },
2025-09-16T23:46:10.185514Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-16T23:46:10.185602Z	    }
2025-09-16T23:46:10.185711Z	  
2025-09-16T23:46:10.185804Z	Query parameters: {
2025-09-16T23:46:10.185907Z	  limit: 4,
2025-09-16T23:46:10.186005Z	  offset: 0,
2025-09-16T23:46:10.18611Z	  targetMarket: undefined,
2025-09-16T23:46:10.18622Z	  brand: 'mediatek',
2025-09-16T23:46:10.186323Z	  featured: undefined
2025-09-16T23:46:10.186422Z	}
2025-09-16T23:46:10.18653Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:46:10.186613Z	Products fetch result: {
2025-09-16T23:46:10.186694Z	  totalProducts: 4,
2025-09-16T23:46:10.186852Z	  fetchedProducts: 4,
2025-09-16T23:46:10.186949Z	  firstProduct: {
2025-09-16T23:46:10.187047Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:46:10.187139Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:46:10.187224Z	    _type: 'product',
2025-09-16T23:46:10.18733Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:46:10.187436Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:46:10.187548Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:10.187652Z	    image: null,
2025-09-16T23:46:10.187806Z	    inventory: {
2025-09-16T23:46:10.188017Z	      inStock: true,
2025-09-16T23:46:10.188138Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:46:10.188232Z	      quantity: 0,
2025-09-16T23:46:10.188397Z	      status: 'in_stock',
2025-09-16T23:46:10.188544Z	      warehouse: null
2025-09-16T23:46:10.18869Z	    },
2025-09-16T23:46:10.188835Z	    isActive: true,
2025-09-16T23:46:10.188966Z	    isFeatured: false,
2025-09-16T23:46:10.189093Z	    isNew: false,
2025-09-16T23:46:10.189224Z	    partNumber: '11111',
2025-09-16T23:46:10.189361Z	    pricing: {
2025-09-16T23:46:10.189502Z	      currency: 'CNY',
2025-09-16T23:46:10.189654Z	      leadTime: null,
2025-09-16T23:46:10.189804Z	      moq: null,
2025-09-16T23:46:10.18995Z	      price: null,
2025-09-16T23:46:10.190102Z	      tiers: null
2025-09-16T23:46:10.190235Z	    },
2025-09-16T23:46:10.190386Z	    shortDescription: '11111',
2025-09-16T23:46:10.190528Z	    slug: 'sic mosfet',
2025-09-16T23:46:10.1907Z	    title: '111111'
2025-09-16T23:46:10.190851Z	  }
2025-09-16T23:46:10.190997Z	}
2025-09-16T23:46:10.191134Z	Solutions fetch result: {
2025-09-16T23:46:10.191285Z	  totalSolutions: 6,
2025-09-16T23:46:10.191435Z	  fetchedSolutions: 4,
2025-09-16T23:46:10.191572Z	  firstSolution: {
2025-09-16T23:46:10.191763Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:46:10.191917Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:46:10.192068Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:46:10.19222Z	    complexity: 'medium',
2025-09-16T23:46:10.192332Z	    coverImage: null,
2025-09-16T23:46:10.19252Z	    description: [ [Object] ],
2025-09-16T23:46:10.192618Z	    isFeatured: false,
2025-09-16T23:46:10.192795Z	    isPublished: true,
2025-09-16T23:46:10.193083Z	    primaryBrand: {
2025-09-16T23:46:10.193231Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:46:10.193373Z	      logo: null,
2025-09-16T23:46:10.193508Z	      name: 'CREE',
2025-09-16T23:46:10.19365Z	      slug: 'cree'
2025-09-16T23:46:10.193908Z	    },
2025-09-16T23:46:10.194063Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:46:10.19418Z	    relatedBrands: null,
2025-09-16T23:46:10.194279Z	    slug: '11111',
2025-09-16T23:46:10.194382Z	    summary: '11111',
2025-09-16T23:46:10.194469Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:10.194572Z	    title: '11111',
2025-09-16T23:46:10.194669Z	    viewCount: 0
2025-09-16T23:46:10.194782Z	  }
2025-09-16T23:46:10.1949Z	}
2025-09-16T23:46:10.195007Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-16T23:46:10.195114Z	Fetching products with query: 
2025-09-16T23:46:10.195378Z	    {
2025-09-16T23:46:10.19553Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:10.195658Z	        
2025-09-16T23:46:10.19578Z	    _id,
2025-09-16T23:46:10.195982Z	    _type,
2025-09-16T23:46:10.19609Z	    partNumber,
2025-09-16T23:46:10.196179Z	    "slug": slug.current,
2025-09-16T23:46:10.196286Z	    title,
2025-09-16T23:46:10.196375Z	    shortDescription,
2025-09-16T23:46:10.196496Z	    image,
2025-09-16T23:46:10.196574Z	    brand->{
2025-09-16T23:46:10.196661Z	      name,
2025-09-16T23:46:10.196755Z	      "slug": slug.current,
2025-09-16T23:46:10.196832Z	      logo
2025-09-16T23:46:10.196907Z	    },
2025-09-16T23:46:10.196988Z	    category->{
2025-09-16T23:46:10.197075Z	      name,
2025-09-16T23:46:10.197153Z	      "slug": slug.current
2025-09-16T23:46:10.197253Z	    },
2025-09-16T23:46:10.197344Z	    pricing{
2025-09-16T23:46:10.197454Z	      currency,
2025-09-16T23:46:10.197536Z	      tiers[]{
2025-09-16T23:46:10.197626Z	        quantity,
2025-09-16T23:46:10.197742Z	        price,
2025-09-16T23:46:10.19783Z	        unit
2025-09-16T23:46:10.197912Z	      },
2025-09-16T23:46:10.197991Z	      moq,
2025-09-16T23:46:10.198071Z	      leadTime,
2025-09-16T23:46:10.198181Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:10.198265Z	      "price": tiers[0].price,
2025-09-16T23:46:10.198353Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:10.198555Z	    },
2025-09-16T23:46:10.198658Z	    inventory{
2025-09-16T23:46:10.198848Z	      quantity,
2025-09-16T23:46:10.198941Z	      status,
2025-09-16T23:46:10.199022Z	      warehouse,
2025-09-16T23:46:10.199109Z	      lastUpdated,
2025-09-16T23:46:10.199191Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:10.1993Z	      "inStock": status == "in_stock",
2025-09-16T23:46:10.199397Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:10.199503Z	    },
2025-09-16T23:46:10.199597Z	    isActive,
2025-09-16T23:46:10.199695Z	    isFeatured,
2025-09-16T23:46:10.199774Z	    isNew,
2025-09-16T23:46:10.199862Z	    _createdAt,
2025-09-16T23:46:10.19995Z	    _updatedAt
2025-09-16T23:46:10.200045Z	  
2025-09-16T23:46:10.200137Z	      },
2025-09-16T23:46:10.20023Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-16T23:46:10.200327Z	    }
2025-09-16T23:46:10.200418Z	  
2025-09-16T23:46:10.200523Z	Query parameters: {
2025-09-16T23:46:10.200625Z	  limit: 8,
2025-09-16T23:46:10.200728Z	  offset: 0,
2025-09-16T23:46:10.200815Z	  category: undefined,
2025-09-16T23:46:10.200914Z	  brand: 'cree',
2025-09-16T23:46:10.200998Z	  featured: undefined
2025-09-16T23:46:10.20108Z	}
2025-09-16T23:46:10.201157Z	Fetching solutions with query: 
2025-09-16T23:46:10.201249Z	    {
2025-09-16T23:46:10.20134Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:10.201437Z	        
2025-09-16T23:46:10.201521Z	    _id,
2025-09-16T23:46:10.201622Z	    title,
2025-09-16T23:46:10.201732Z	    "slug": slug.current,
2025-09-16T23:46:10.201826Z	    summary,
2025-09-16T23:46:10.201913Z	    description,
2025-09-16T23:46:10.201999Z	    coverImage,
2025-09-16T23:46:10.202092Z	    primaryBrand->{
2025-09-16T23:46:10.202199Z	      _id,
2025-09-16T23:46:10.202291Z	      name,
2025-09-16T23:46:10.20238Z	      "slug": slug.current,
2025-09-16T23:46:10.202485Z	      logo
2025-09-16T23:46:10.202566Z	    },
2025-09-16T23:46:10.202658Z	    relatedBrands[]->{
2025-09-16T23:46:10.202771Z	      _id,
2025-09-16T23:46:10.202864Z	      name,
2025-09-16T23:46:10.202961Z	      "slug": slug.current,
2025-09-16T23:46:10.203054Z	      logo
2025-09-16T23:46:10.203137Z	    },
2025-09-16T23:46:10.203222Z	    targetMarket,
2025-09-16T23:46:10.203347Z	    complexity,
2025-09-16T23:46:10.203455Z	    publishedAt,
2025-09-16T23:46:10.203543Z	    isPublished,
2025-09-16T23:46:10.203636Z	    isFeatured,
2025-09-16T23:46:10.203736Z	    viewCount,
2025-09-16T23:46:10.203829Z	    _createdAt,
2025-09-16T23:46:10.203913Z	    _updatedAt
2025-09-16T23:46:10.203993Z	  
2025-09-16T23:46:10.204081Z	      },
2025-09-16T23:46:10.204174Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-16T23:46:10.204259Z	    }
2025-09-16T23:46:10.204336Z	  
2025-09-16T23:46:10.204426Z	Query parameters: {
2025-09-16T23:46:10.204508Z	  limit: 4,
2025-09-16T23:46:10.204586Z	  offset: 0,
2025-09-16T23:46:10.204667Z	  targetMarket: undefined,
2025-09-16T23:46:10.204765Z	  brand: 'cree',
2025-09-16T23:46:10.20485Z	  featured: undefined
2025-09-16T23:46:10.204941Z	}
2025-09-16T23:46:10.205017Z	✅ [getBrandData] Found brand: CREE
2025-09-16T23:46:10.205093Z	Products fetch result: {
2025-09-16T23:46:10.205167Z	  totalProducts: 4,
2025-09-16T23:46:10.205242Z	  fetchedProducts: 4,
2025-09-16T23:46:10.205317Z	  firstProduct: {
2025-09-16T23:46:10.205411Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-16T23:46:10.205494Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-16T23:46:10.205568Z	    _type: 'product',
2025-09-16T23:46:10.205641Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-16T23:46:10.205762Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-16T23:46:10.205856Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-16T23:46:10.205944Z	    image: null,
2025-09-16T23:46:10.206025Z	    inventory: {
2025-09-16T23:46:10.206114Z	      inStock: true,
2025-09-16T23:46:10.206203Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-16T23:46:10.206294Z	      quantity: 0,
2025-09-16T23:46:10.206376Z	      status: 'in_stock',
2025-09-16T23:46:10.206463Z	      warehouse: null
2025-09-16T23:46:10.206542Z	    },
2025-09-16T23:46:10.206617Z	    isActive: true,
2025-09-16T23:46:10.20671Z	    isFeatured: false,
2025-09-16T23:46:10.206799Z	    isNew: false,
2025-09-16T23:46:10.206882Z	    partNumber: '11111',
2025-09-16T23:46:10.206962Z	    pricing: {
2025-09-16T23:46:10.207043Z	      currency: 'CNY',
2025-09-16T23:46:10.207125Z	      leadTime: null,
2025-09-16T23:46:10.207206Z	      moq: null,
2025-09-16T23:46:10.207287Z	      price: null,
2025-09-16T23:46:10.207378Z	      tiers: null
2025-09-16T23:46:10.207471Z	    },
2025-09-16T23:46:10.207554Z	    shortDescription: '11111',
2025-09-16T23:46:10.207636Z	    slug: 'sic mosfet',
2025-09-16T23:46:10.207739Z	    title: '111111'
2025-09-16T23:46:10.207824Z	  }
2025-09-16T23:46:10.207908Z	}
2025-09-16T23:46:10.207993Z	Solutions fetch result: {
2025-09-16T23:46:10.208076Z	  totalSolutions: 6,
2025-09-16T23:46:10.20816Z	  fetchedSolutions: 4,
2025-09-16T23:46:10.208242Z	  firstSolution: {
2025-09-16T23:46:10.208324Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-16T23:46:10.208413Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-16T23:46:10.208497Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-16T23:46:10.208578Z	    complexity: 'medium',
2025-09-16T23:46:10.20866Z	    coverImage: null,
2025-09-16T23:46:10.208765Z	    description: [ [Object] ],
2025-09-16T23:46:10.208854Z	    isFeatured: false,
2025-09-16T23:46:10.20894Z	    isPublished: true,
2025-09-16T23:46:10.209044Z	    primaryBrand: {
2025-09-16T23:46:10.209131Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-16T23:46:10.20921Z	      logo: null,
2025-09-16T23:46:10.209285Z	      name: 'CREE',
2025-09-16T23:46:10.209361Z	      slug: 'cree'
2025-09-16T23:46:10.20945Z	    },
2025-09-16T23:46:10.209536Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-16T23:46:10.209626Z	    relatedBrands: null,
2025-09-16T23:46:10.209722Z	    slug: '11111',
2025-09-16T23:46:10.209806Z	    summary: '11111',
2025-09-16T23:46:10.209883Z	    targetMarket: 'industrial-automation',
2025-09-16T23:46:10.209959Z	    title: '11111',
2025-09-16T23:46:10.210037Z	    viewCount: 0
2025-09-16T23:46:10.210114Z	  }
2025-09-16T23:46:10.210192Z	}
2025-09-16T23:46:10.210272Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:46:10.210361Z	   at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.210467Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.210599Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.pFetching products with query: 
2025-09-16T23:46:10.210715Z	    {
2025-09-16T23:46:10.210903Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:10.211035Z	        
2025-09-16T23:46:10.211114Z	    _id,
2025-09-16T23:46:10.211195Z	    _type,
2025-09-16T23:46:10.21127Z	    partNumber,
2025-09-16T23:46:10.211343Z	    "slug": slug.current,
2025-09-16T23:46:10.211427Z	    title,
2025-09-16T23:46:10.211517Z	    shortDescription,
2025-09-16T23:46:10.211604Z	    image,
2025-09-16T23:46:10.211735Z	    brand->{
2025-09-16T23:46:10.211847Z	      name,
2025-09-16T23:46:10.211938Z	      "slug": slug.current,
2025-09-16T23:46:10.212024Z	      logo
2025-09-16T23:46:10.212102Z	    },
2025-09-16T23:46:10.212181Z	    category->{
2025-09-16T23:46:10.212256Z	      name,
2025-09-16T23:46:10.212332Z	      "slug": slug.current
2025-09-16T23:46:10.212426Z	    },
2025-09-16T23:46:10.212508Z	    pricing{
2025-09-16T23:46:10.212582Z	      currency,
2025-09-16T23:46:10.212658Z	      tiers[]{
2025-09-16T23:46:10.212757Z	        quantity,
2025-09-16T23:46:10.21286Z	        price,
2025-09-16T23:46:10.212956Z	        unit
2025-09-16T23:46:10.213047Z	      },
2025-09-16T23:46:10.213143Z	      moq,
2025-09-16T23:46:10.213232Z	      leadTime,
2025-09-16T23:46:10.21332Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:10.213464Z	      "price": tiers[0].price,
2025-09-16T23:46:10.21357Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:10.213793Z	    },
2025-09-16T23:46:10.21389Z	    inventory{
2025-09-16T23:46:10.213978Z	      quantity,
2025-09-16T23:46:10.214098Z	      status,
2025-09-16T23:46:10.214194Z	      warehouse,
2025-09-16T23:46:10.214293Z	      lastUpdated,
2025-09-16T23:46:10.214407Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:10.214506Z	      "inStock": status == "in_stock",
2025-09-16T23:46:10.214598Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:10.214714Z	    },
2025-09-16T23:46:10.214821Z	    isActive,
2025-09-16T23:46:10.214915Z	    isFeatured,
2025-09-16T23:46:10.214995Z	    isNew,
2025-09-16T23:46:10.215071Z	    _createdAt,
2025-09-16T23:46:10.215149Z	    _updatedAt
2025-09-16T23:46:10.215228Z	  
2025-09-16T23:46:10.215318Z	      },
2025-09-16T23:46:10.215406Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:46:10.215508Z	    }
2025-09-16T23:46:10.215587Z	  
2025-09-16T23:46:10.215686Z	Query parameters: {
2025-09-16T23:46:10.215776Z	  limit: 8,
2025-09-16T23:46:10.215861Z	  offset: 0,
2025-09-16T23:46:10.215987Z	  category: undefined,
2025-09-16T23:46:10.216077Z	  brand: 'qualcomm',
2025-09-16T23:46:10.216157Z	  featured: undefined
2025-09-16T23:46:10.216405Z	}
2025-09-16T23:46:10.21663Z	Fetching solutions with query: 
2025-09-16T23:46:10.216798Z	    {
2025-09-16T23:46:10.216948Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:10.21707Z	        
2025-09-16T23:46:10.217193Z	    _id,
2025-09-16T23:46:10.217321Z	    title,
2025-09-16T23:46:10.217424Z	    "slug": slug.current,
2025-09-16T23:46:10.217521Z	    summary,
2025-09-16T23:46:10.217605Z	    description,
2025-09-16T23:46:10.21772Z	    coverImage,
2025-09-16T23:46:10.217821Z	    primaryBrand->{
2025-09-16T23:46:10.217916Z	      _id,
2025-09-16T23:46:10.218023Z	      name,
2025-09-16T23:46:10.218118Z	      "slug": slug.current,
2025-09-16T23:46:10.218198Z	      logo
2025-09-16T23:46:10.218275Z	    },
2025-09-16T23:46:10.218362Z	    relatedBrands[]->{
2025-09-16T23:46:10.218454Z	      _id,
2025-09-16T23:46:10.21854Z	      name,
2025-09-16T23:46:10.218632Z	      "slug": slug.current,
2025-09-16T23:46:10.218744Z	      logo
2025-09-16T23:46:10.21884Z	    },
2025-09-16T23:46:10.218937Z	    targetMarket,
2025-09-16T23:46:10.21903Z	    complexity,
2025-09-16T23:46:10.219127Z	    publishedAt,
2025-09-16T23:46:10.219238Z	    isPublished,
2025-09-16T23:46:10.219342Z	    isFeatured,
2025-09-16T23:46:10.219442Z	    viewCount,
2025-09-16T23:46:10.219535Z	    _createdAt,
2025-09-16T23:46:10.219632Z	    _updatedAt
2025-09-16T23:46:10.219747Z	  
2025-09-16T23:46:10.219834Z	      },
2025-09-16T23:46:10.219923Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:46:10.220015Z	    }
2025-09-16T23:46:10.220101Z	  
2025-09-16T23:46:10.220187Z	Query parameters: {
2025-09-16T23:46:10.22029Z	  limit: 4,
2025-09-16T23:46:10.220392Z	  offset: 0,
2025-09-16T23:46:10.220488Z	  targetMarket: undefined,
2025-09-16T23:46:10.220579Z	  brand: 'qualcomm',
2025-09-16T23:46:10.220671Z	  featured: undefined
2025-09-16T23:46:10.220778Z	}
2025-09-16T23:46:10.220872Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:46:10.220967Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:10.221074Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:10.221171Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-16T23:46:10.221287Z	Fetching products with query: 
2025-09-16T23:46:10.221389Z	    {
2025-09-16T23:46:10.221482Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:10.221578Z	        
2025-09-16T23:46:10.221687Z	    _id,
2025-09-16T23:46:10.221785Z	    _type,
2025-09-16T23:46:10.221876Z	    partNumber,
2025-09-16T23:46:10.221968Z	    "slug": slug.current,
2025-09-16T23:46:10.222067Z	    title,
2025-09-16T23:46:10.22216Z	    shortDescription,
2025-09-16T23:46:10.222253Z	    image,
2025-09-16T23:46:10.222349Z	    brand->{
2025-09-16T23:46:10.222447Z	      name,
2025-09-16T23:46:10.222544Z	      "slug": slug.current,
2025-09-16T23:46:10.222649Z	      logo
2025-09-16T23:46:10.222764Z	    },
2025-09-16T23:46:10.22285Z	    category->{
2025-09-16T23:46:10.222945Z	      name,
2025-09-16T23:46:10.223045Z	      "slug": slug.current
2025-09-16T23:46:10.223141Z	    },
2025-09-16T23:46:10.223406Z	    pricing{
2025-09-16T23:46:10.223521Z	      currency,
2025-09-16T23:46:10.22363Z	      tiers[]{
2025-09-16T23:46:10.223732Z	        quantity,
2025-09-16T23:46:10.223817Z	        price,
2025-09-16T23:46:10.2239Z	        unit
2025-09-16T23:46:10.223972Z	      },
2025-09-16T23:46:10.224046Z	      moq,
2025-09-16T23:46:10.224117Z	      leadTime,
2025-09-16T23:46:10.224191Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:10.224278Z	      "price": tiers[0].price,
2025-09-16T23:46:10.224376Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:10.22447Z	    },
2025-09-16T23:46:10.224547Z	    inventory{
2025-09-16T23:46:10.224623Z	      quantity,
2025-09-16T23:46:10.224738Z	      status,
2025-09-16T23:46:10.224836Z	      warehouse,
2025-09-16T23:46:10.224927Z	      lastUpdated,
2025-09-16T23:46:10.22501Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:10.22509Z	      "inStock": status == "in_stock",
2025-09-16T23:46:10.225165Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:10.225241Z	    },
2025-09-16T23:46:10.225315Z	    isActive,
2025-09-16T23:46:10.225392Z	    isFeatured,
2025-09-16T23:46:10.225491Z	    isNew,
2025-09-16T23:46:10.225596Z	    _createdAt,
2025-09-16T23:46:10.225709Z	    _updatedAt
2025-09-16T23:46:10.225801Z	  
2025-09-16T23:46:10.22589Z	      },
2025-09-16T23:46:10.225979Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-16T23:46:10.226076Z	    }
2025-09-16T23:46:10.230347Z	  
2025-09-16T23:46:10.230752Z	Query parameters: {
2025-09-16T23:46:10.230873Z	  limit: 8,
2025-09-16T23:46:10.231Z	  offset: 0,
2025-09-16T23:46:10.231304Z	  category: undefined,
2025-09-16T23:46:10.231532Z	  brand: 'qualcomm',
2025-09-16T23:46:10.231646Z	  featured: undefined
2025-09-16T23:46:10.23189Z	}
2025-09-16T23:46:10.23205Z	Fetching solutions with query: 
2025-09-16T23:46:10.232137Z	    {
2025-09-16T23:46:10.232199Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:10.232264Z	        
2025-09-16T23:46:10.232322Z	    _id,
2025-09-16T23:46:10.232396Z	    title,
2025-09-16T23:46:10.232456Z	    "slug": slug.current,
2025-09-16T23:46:10.232513Z	    summary,
2025-09-16T23:46:10.232573Z	    description,
2025-09-16T23:46:10.232642Z	    coverImage,
2025-09-16T23:46:10.232765Z	    primaryBrand->{
2025-09-16T23:46:10.232872Z	      _id,
2025-09-16T23:46:10.232976Z	      name,
2025-09-16T23:46:10.233059Z	      "slug": slug.current,
2025-09-16T23:46:10.233119Z	      logo
2025-09-16T23:46:10.233174Z	    },
2025-09-16T23:46:10.23329Z	    relatedBrands[]->{
2025-09-16T23:46:10.233364Z	      _id,
2025-09-16T23:46:10.233451Z	      name,
2025-09-16T23:46:10.233508Z	      "slug": slug.current,
2025-09-16T23:46:10.233563Z	      logo
2025-09-16T23:46:10.233624Z	    },
2025-09-16T23:46:10.233953Z	    targetMarket,
2025-09-16T23:46:10.234044Z	    complexity,
2025-09-16T23:46:10.234104Z	    publishedAt,
2025-09-16T23:46:10.234164Z	    isPublished,
2025-09-16T23:46:10.234219Z	    isFeatured,
2025-09-16T23:46:10.234273Z	    viewCount,
2025-09-16T23:46:10.23433Z	    _createdAt,
2025-09-16T23:46:10.234395Z	    _updatedAt
2025-09-16T23:46:10.234454Z	  
2025-09-16T23:46:10.234512Z	      },
2025-09-16T23:46:10.234578Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-16T23:46:10.234649Z	    }
2025-09-16T23:46:10.234752Z	  
2025-09-16T23:46:10.234817Z	Query parameters: {
2025-09-16T23:46:10.234874Z	  limit: 4,
2025-09-16T23:46:10.234928Z	  offset: 0,
2025-09-16T23:46:10.234995Z	  targetMarket: undefined,
2025-09-16T23:46:10.23505Z	  brand: 'qualcomm',
2025-09-16T23:46:10.235105Z	  featured: undefined
2025-09-16T23:46:10.235159Z	}
2025-09-16T23:46:10.235214Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-16T23:46:10.235274Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:10.235335Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:10.235401Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:46:10.235468Z	Fetching products with query: 
2025-09-16T23:46:10.235523Z	    {
2025-09-16T23:46:10.235579Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:10.235665Z	        
2025-09-16T23:46:10.235869Z	    _id,
2025-09-16T23:46:10.235979Z	    _type,
2025-09-16T23:46:10.236048Z	    partNumber,
2025-09-16T23:46:10.236114Z	    "slug": slug.current,
2025-09-16T23:46:10.23617Z	    title,
2025-09-16T23:46:10.236233Z	    shortDescription,
2025-09-16T23:46:10.236289Z	    image,
2025-09-16T23:46:10.236343Z	    brand->{
2025-09-16T23:46:10.236406Z	      name,
2025-09-16T23:46:10.236463Z	      "slug": slug.current,
2025-09-16T23:46:10.236532Z	      logo
2025-09-16T23:46:10.236588Z	    },
2025-09-16T23:46:10.236649Z	    category->{
2025-09-16T23:46:10.236823Z	      name,
2025-09-16T23:46:10.236947Z	      "slug": slug.current
2025-09-16T23:46:10.237077Z	    },
2025-09-16T23:46:10.237159Z	    pricing{
2025-09-16T23:46:10.237243Z	      currency,
2025-09-16T23:46:10.237332Z	      tiers[]{
2025-09-16T23:46:10.237427Z	        quantity,
2025-09-16T23:46:10.237519Z	        price,
2025-09-16T23:46:10.237591Z	        unit
2025-09-16T23:46:10.237657Z	      },
2025-09-16T23:46:10.238173Z	      moq,
2025-09-16T23:46:10.238292Z	      leadTime,
2025-09-16T23:46:10.23839Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:10.238498Z	      "price": tiers[0].price,
2025-09-16T23:46:10.23859Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:10.2387Z	    },
2025-09-16T23:46:10.238793Z	    inventory{
2025-09-16T23:46:10.238883Z	      quantity,
2025-09-16T23:46:10.238972Z	      status,
2025-09-16T23:46:10.239062Z	      warehouse,
2025-09-16T23:46:10.239155Z	      lastUpdated,
2025-09-16T23:46:10.239266Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:10.239366Z	      "inStock": status == "in_stock",
2025-09-16T23:46:10.239469Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:10.239556Z	    },
2025-09-16T23:46:10.239646Z	    isActive,
2025-09-16T23:46:10.239757Z	    isFeatured,
2025-09-16T23:46:10.239852Z	    isNew,
2025-09-16T23:46:10.239941Z	    _createdAt,
2025-09-16T23:46:10.240038Z	    _updatedAt
2025-09-16T23:46:10.240134Z	  
2025-09-16T23:46:10.240231Z	      },
2025-09-16T23:46:10.240345Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:46:10.240453Z	    }
2025-09-16T23:46:10.240543Z	  
2025-09-16T23:46:10.240632Z	Query parameters: {
2025-09-16T23:46:10.24074Z	  limit: 8,
2025-09-16T23:46:10.240827Z	  offset: 0,
2025-09-16T23:46:10.240921Z	  category: undefined,
2025-09-16T23:46:10.241016Z	  brand: 'Electronicon',
2025-09-16T23:46:10.241099Z	  featured: undefined
2025-09-16T23:46:10.241184Z	}
2025-09-16T23:46:10.241287Z	Fetching solutions with query: 
2025-09-16T23:46:10.241389Z	    {
2025-09-16T23:46:10.241502Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:10.241608Z	        
2025-09-16T23:46:10.242015Z	    _id,
2025-09-16T23:46:10.242127Z	    title,
2025-09-16T23:46:10.242216Z	    "slug": slug.current,
2025-09-16T23:46:10.242304Z	    summary,
2025-09-16T23:46:10.242397Z	    description,
2025-09-16T23:46:10.242493Z	    coverImage,
2025-09-16T23:46:10.242588Z	    primaryBrand->{
2025-09-16T23:46:10.242687Z	      _id,
2025-09-16T23:46:10.242795Z	      name,
2025-09-16T23:46:10.242888Z	      "slug": slug.current,
2025-09-16T23:46:10.242971Z	      logo
2025-09-16T23:46:10.243061Z	    },
2025-09-16T23:46:10.243144Z	    relatedBrands[]->{
2025-09-16T23:46:10.243226Z	      _id,
2025-09-16T23:46:10.243305Z	      name,
2025-09-16T23:46:10.243394Z	      "slug": slug.current,
2025-09-16T23:46:10.243482Z	      logo
2025-09-16T23:46:10.243583Z	    },
2025-09-16T23:46:10.243689Z	    targetMarket,
2025-09-16T23:46:10.243776Z	    complexity,
2025-09-16T23:46:10.243857Z	    publishedAt,
2025-09-16T23:46:10.243948Z	    isPublished,
2025-09-16T23:46:10.244042Z	    isFeatured,
2025-09-16T23:46:10.244122Z	    viewCount,
2025-09-16T23:46:10.244203Z	    _createdAt,
2025-09-16T23:46:10.244291Z	    _updatedAt
2025-09-16T23:46:10.244379Z	  
2025-09-16T23:46:10.244476Z	      },
2025-09-16T23:46:10.244568Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:46:10.244665Z	    }
2025-09-16T23:46:10.244771Z	  
2025-09-16T23:46:10.244864Z	Query parameters: {
2025-09-16T23:46:10.244952Z	  limit: 4,
2025-09-16T23:46:10.245036Z	  offset: 0,
2025-09-16T23:46:10.245114Z	  targetMarket: undefined,
2025-09-16T23:46:10.2452Z	  brand: 'Electronicon',
2025-09-16T23:46:10.245282Z	  featured: undefined
2025-09-16T23:46:10.245375Z	}
2025-09-16T23:46:10.245476Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:46:10.245583Z	Products fetch result: {
2025-09-16T23:46:10.245689Z	  totalProducts: 2,
2025-09-16T23:46:10.245776Z	  fetchedProducts: 2,
2025-09-16T23:46:10.245859Z	  firstProduct: {
2025-09-16T23:46:10.24594Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:46:10.246021Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:46:10.246104Z	    _type: 'product',
2025-09-16T23:46:10.246199Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:46:10.24629Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:46:10.246388Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:46:10.246476Z	    image: null,
2025-09-16T23:46:10.246571Z	    inventory: {
2025-09-16T23:46:10.246666Z	      inStock: true,
2025-09-16T23:46:10.246779Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:46:10.246887Z	      quantity: 0,
2025-09-16T23:46:10.246981Z	      status: 'in_stock',
2025-09-16T23:46:10.247065Z	      warehouse: null
2025-09-16T23:46:10.247149Z	    },
2025-09-16T23:46:10.247231Z	    isActive: true,
2025-09-16T23:46:10.247306Z	    isFeatured: false,
2025-09-16T23:46:10.247412Z	    isNew: false,
2025-09-16T23:46:10.247513Z	    partNumber: '99999',
2025-09-16T23:46:10.247596Z	    pricing: {
2025-09-16T23:46:10.247694Z	      currency: 'CNY',
2025-09-16T23:46:10.247846Z	      leadTime: null,
2025-09-16T23:46:10.247947Z	      moq: null,
2025-09-16T23:46:10.248043Z	      price: null,
2025-09-16T23:46:10.248138Z	      tiers: null
2025-09-16T23:46:10.248234Z	    },
2025-09-16T23:46:10.248347Z	    shortDescription: null,
2025-09-16T23:46:10.248454Z	    slug: '99999',
2025-09-16T23:46:10.248552Z	    title: '99999'
2025-09-16T23:46:10.248648Z	  }
2025-09-16T23:46:10.248756Z	}
2025-09-16T23:46:10.248845Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:10.248934Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:46:10.249014Z	Fetching products with query: 
2025-09-16T23:46:10.249121Z	    {
2025-09-16T23:46:10.249205Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:10.249305Z	        
2025-09-16T23:46:10.249405Z	    _id,
2025-09-16T23:46:10.249495Z	    _type,
2025-09-16T23:46:10.249579Z	    partNumber,
2025-09-16T23:46:10.249661Z	    "slug": slug.current,
2025-09-16T23:46:10.249771Z	    title,
2025-09-16T23:46:10.249874Z	    shortDescription,
2025-09-16T23:46:10.249969Z	    image,
2025-09-16T23:46:10.25007Z	    brand->{
2025-09-16T23:46:10.250169Z	      name,
2025-09-16T23:46:10.250263Z	      "slug": slug.current,
2025-09-16T23:46:10.250359Z	      logo
2025-09-16T23:46:10.250458Z	    },
2025-09-16T23:46:10.25054Z	    category->{
2025-09-16T23:46:10.250634Z	      name,
2025-09-16T23:46:10.25079Z	      "slug": slug.current
2025-09-16T23:46:10.251043Z	    },
2025-09-16T23:46:10.25118Z	    pricing{
2025-09-16T23:46:10.251275Z	      currency,
2025-09-16T23:46:10.251357Z	      tiers[]{
2025-09-16T23:46:10.25145Z	        quantity,
2025-09-16T23:46:10.251548Z	        price,
2025-09-16T23:46:10.251643Z	        unit
2025-09-16T23:46:10.251755Z	      },
2025-09-16T23:46:10.251844Z	      moq,
2025-09-16T23:46:10.251925Z	      leadTime,
2025-09-16T23:46:10.252013Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:10.2521Z	      "price": tiers[0].price,
2025-09-16T23:46:10.25219Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:10.252309Z	    },
2025-09-16T23:46:10.252403Z	    inventory{
2025-09-16T23:46:10.252503Z	      quantity,
2025-09-16T23:46:10.252591Z	      status,
2025-09-16T23:46:10.252669Z	      warehouse,
2025-09-16T23:46:10.25277Z	      lastUpdated,
2025-09-16T23:46:10.252864Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:10.252958Z	      "inStock": status == "in_stock",
2025-09-16T23:46:10.253041Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:10.253131Z	    },
2025-09-16T23:46:10.253218Z	    isActive,
2025-09-16T23:46:10.253303Z	    isFeatured,
2025-09-16T23:46:10.253397Z	    isNew,
2025-09-16T23:46:10.253513Z	    _createdAt,
2025-09-16T23:46:10.253602Z	    _updatedAt
2025-09-16T23:46:10.253697Z	  
2025-09-16T23:46:10.2538Z	      },
2025-09-16T23:46:10.253905Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:46:10.254013Z	    }
2025-09-16T23:46:10.254102Z	  
2025-09-16T23:46:10.254183Z	Query parameters: {
2025-09-16T23:46:10.254262Z	  limit: 8,
2025-09-16T23:46:10.254351Z	  offset: 0,
2025-09-16T23:46:10.254447Z	  category: undefined,
2025-09-16T23:46:10.254533Z	  brand: 'Electronicon',
2025-09-16T23:46:10.254609Z	  featured: undefined
2025-09-16T23:46:10.254703Z	}
2025-09-16T23:46:10.254793Z	Fetching solutions with query: 
2025-09-16T23:46:10.254874Z	    {
2025-09-16T23:46:10.254956Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:10.255042Z	        
2025-09-16T23:46:10.255121Z	    _id,
2025-09-16T23:46:10.255198Z	    title,
2025-09-16T23:46:10.255278Z	    "slug": slug.current,
2025-09-16T23:46:10.255355Z	    summary,
2025-09-16T23:46:10.255443Z	    description,
2025-09-16T23:46:10.255531Z	    coverImage,
2025-09-16T23:46:10.255614Z	    primaryBrand->{
2025-09-16T23:46:10.255725Z	      _id,
2025-09-16T23:46:10.255811Z	      name,
2025-09-16T23:46:10.255888Z	      "slug": slug.current,
2025-09-16T23:46:10.255994Z	      logo
2025-09-16T23:46:10.256082Z	    },
2025-09-16T23:46:10.256161Z	    relatedBrands[]->{
2025-09-16T23:46:10.256241Z	      _id,
2025-09-16T23:46:10.256327Z	      name,
2025-09-16T23:46:10.256406Z	      "slug": slug.current,
2025-09-16T23:46:10.256497Z	      logo
2025-09-16T23:46:10.256593Z	    },
2025-09-16T23:46:10.256708Z	    targetMarket,
2025-09-16T23:46:10.256799Z	    complexity,
2025-09-16T23:46:10.256876Z	    publishedAt,
2025-09-16T23:46:10.256951Z	    isPublished,
2025-09-16T23:46:10.257054Z	    isFeatured,
2025-09-16T23:46:10.257143Z	    viewCount,
2025-09-16T23:46:10.257228Z	    _createdAt,
2025-09-16T23:46:10.257321Z	    _updatedAt
2025-09-16T23:46:10.257422Z	  
2025-09-16T23:46:10.257518Z	      },
2025-09-16T23:46:10.257603Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:46:10.257721Z	    }
2025-09-16T23:46:10.257811Z	  
2025-09-16T23:46:10.257891Z	Query parameters: {
2025-09-16T23:46:10.257977Z	  limit: 4,
2025-09-16T23:46:10.258056Z	  offset: 0,
2025-09-16T23:46:10.258139Z	  targetMarket: undefined,
2025-09-16T23:46:10.258222Z	  brand: 'Electronicon',
2025-09-16T23:46:10.258303Z	  featured: undefined
2025-09-16T23:46:10.258389Z	}
2025-09-16T23:46:10.258483Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:46:10.258565Z	Products fetch result: {
2025-09-16T23:46:10.258641Z	  totalProducts: 2,
2025-09-16T23:46:10.258736Z	  fetchedProducts: 2,
2025-09-16T23:46:10.258815Z	  firstProduct: {
2025-09-16T23:46:10.259101Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:46:10.259203Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:46:10.259317Z	    _type: 'product',
2025-09-16T23:46:10.259403Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:46:10.259492Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:46:10.259573Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:46:10.259672Z	    image: null,
2025-09-16T23:46:10.259779Z	    inventory: {
2025-09-16T23:46:10.259862Z	      inStock: true,
2025-09-16T23:46:10.259946Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:46:10.260025Z	      quantity: 0,
2025-09-16T23:46:10.260108Z	      status: 'in_stock',
2025-09-16T23:46:10.260186Z	      warehouse: null
2025-09-16T23:46:10.260262Z	    },
2025-09-16T23:46:10.260346Z	    isActive: true,
2025-09-16T23:46:10.260421Z	    isFeatured: false,
2025-09-16T23:46:10.260522Z	    isNew: false,
2025-09-16T23:46:10.260612Z	    partNumber: '99999',
2025-09-16T23:46:10.260704Z	    pricing: {
2025-09-16T23:46:10.260789Z	      currency: 'CNY',
2025-09-16T23:46:10.260878Z	      leadTime: null,
2025-09-16T23:46:10.260966Z	      moq: null,
2025-09-16T23:46:10.261057Z	      price: null,
2025-09-16T23:46:10.26114Z	      tiers: null
2025-09-16T23:46:10.261234Z	    },
2025-09-16T23:46:10.261318Z	    shortDescription: null,
2025-09-16T23:46:10.261403Z	    slug: '99999',
2025-09-16T23:46:10.261496Z	    title: '99999'
2025-09-16T23:46:10.261589Z	  }
2025-09-16T23:46:10.261683Z	}
2025-09-16T23:46:10.26178Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:10.26187Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-16T23:46:10.261962Z	Fetching products with query: 
2025-09-16T23:46:10.262044Z	    {
2025-09-16T23:46:10.262134Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:10.262235Z	        
2025-09-16T23:46:10.26232Z	    _id,
2025-09-16T23:46:10.262403Z	    _type,
2025-09-16T23:46:10.262498Z	    partNumber,
2025-09-16T23:46:10.262584Z	    "slug": slug.current,
2025-09-16T23:46:10.262668Z	    title,
2025-09-16T23:46:10.262771Z	    shortDescription,
2025-09-16T23:46:10.262861Z	    image,
2025-09-16T23:46:10.262943Z	    brand->{
2025-09-16T23:46:10.263028Z	      name,
2025-09-16T23:46:10.263111Z	      "slug": slug.current,
2025-09-16T23:46:10.263193Z	      logo
2025-09-16T23:46:10.263276Z	    },
2025-09-16T23:46:10.263358Z	    category->{
2025-09-16T23:46:10.263441Z	      name,
2025-09-16T23:46:10.263521Z	      "slug": slug.current
2025-09-16T23:46:10.263605Z	    },
2025-09-16T23:46:10.263701Z	    pricing{
2025-09-16T23:46:10.263785Z	      currency,
2025-09-16T23:46:10.263867Z	      tiers[]{
2025-09-16T23:46:10.263949Z	        quantity,
2025-09-16T23:46:10.264032Z	        price,
2025-09-16T23:46:10.264112Z	        unit
2025-09-16T23:46:10.264205Z	      },
2025-09-16T23:46:10.264287Z	      moq,
2025-09-16T23:46:10.264378Z	      leadTime,
2025-09-16T23:46:10.26449Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:10.264579Z	      "price": tiers[0].price,
2025-09-16T23:46:10.264685Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:10.264776Z	    },
2025-09-16T23:46:10.264867Z	    inventory{
2025-09-16T23:46:10.264949Z	      quantity,
2025-09-16T23:46:10.265024Z	      status,
2025-09-16T23:46:10.26511Z	      warehouse,
2025-09-16T23:46:10.265191Z	      lastUpdated,
2025-09-16T23:46:10.265269Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:10.265386Z	      "inStock": status == "in_stock",
2025-09-16T23:46:10.265482Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:10.265568Z	    },
2025-09-16T23:46:10.265652Z	    isActive,
2025-09-16T23:46:10.265755Z	    isFeatured,
2025-09-16T23:46:10.26586Z	    isNew,
2025-09-16T23:46:10.265943Z	    _createdAt,
2025-09-16T23:46:10.266017Z	    _updatedAt
2025-09-16T23:46:10.266095Z	  
2025-09-16T23:46:10.266179Z	      },
2025-09-16T23:46:10.266261Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-16T23:46:10.266345Z	    }
2025-09-16T23:46:10.266422Z	  
2025-09-16T23:46:10.266529Z	Query parameters: {
2025-09-16T23:46:10.266619Z	  limit: 8,
2025-09-16T23:46:10.266741Z	  offset: 0,
2025-09-16T23:46:10.266901Z	  category: undefined,
2025-09-16T23:46:10.267012Z	  brand: 'ncc',
2025-09-16T23:46:10.267104Z	  featured: undefined
2025-09-16T23:46:10.267191Z	}
2025-09-16T23:46:10.267284Z	Fetching solutions with query: 
2025-09-16T23:46:10.267381Z	    {
2025-09-16T23:46:10.267493Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:10.267582Z	        
2025-09-16T23:46:10.267661Z	    _id,
2025-09-16T23:46:10.26777Z	    title,
2025-09-16T23:46:10.267864Z	    "slug": slug.current,
2025-09-16T23:46:10.26795Z	    summary,
2025-09-16T23:46:10.268035Z	    description,
2025-09-16T23:46:10.268125Z	    coverImage,
2025-09-16T23:46:10.268209Z	    primaryBrand->{
2025-09-16T23:46:10.2683Z	      _id,
2025-09-16T23:46:10.268386Z	      name,
2025-09-16T23:46:10.268479Z	      "slug": slug.current,
2025-09-16T23:46:10.268561Z	      logo
2025-09-16T23:46:10.268642Z	    },
2025-09-16T23:46:10.268755Z	    relatedBrands[]->{
2025-09-16T23:46:10.268853Z	      _id,
2025-09-16T23:46:10.268936Z	      name,
2025-09-16T23:46:10.269024Z	      "slug": slug.current,
2025-09-16T23:46:10.269106Z	      logo
2025-09-16T23:46:10.269195Z	    },
2025-09-16T23:46:10.269279Z	    targetMarket,
2025-09-16T23:46:10.269365Z	    complexity,
2025-09-16T23:46:10.269454Z	    publishedAt,
2025-09-16T23:46:10.269541Z	    isPublished,
2025-09-16T23:46:10.269626Z	    isFeatured,
2025-09-16T23:46:10.269725Z	    viewCount,
2025-09-16T23:46:10.269803Z	    _createdAt,
2025-09-16T23:46:10.269881Z	    _updatedAt
2025-09-16T23:46:10.269955Z	  
2025-09-16T23:46:10.270044Z	      },
2025-09-16T23:46:10.270129Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-16T23:46:10.270222Z	    }
2025-09-16T23:46:10.270305Z	  
2025-09-16T23:46:10.27039Z	Query parameters: {
2025-09-16T23:46:10.270476Z	  limit: 4,
2025-09-16T23:46:10.270556Z	  offset: 0,
2025-09-16T23:46:10.270631Z	  targetMarket: undefined,
2025-09-16T23:46:10.270726Z	  brand: 'ncc',
2025-09-16T23:46:10.270828Z	  featured: undefined
2025-09-16T23:46:10.271052Z	}
2025-09-16T23:46:10.271157Z	✅ [getBrandData] Found brand: ncc
2025-09-16T23:46:10.271248Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:10.271341Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:10.271448Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-16T23:46:10.271543Z	Fetching products with query: 
2025-09-16T23:46:10.271635Z	    {
2025-09-16T23:46:10.271753Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:10.271854Z	        
2025-09-16T23:46:10.271945Z	    _id,
2025-09-16T23:46:10.27203Z	    _type,
2025-09-16T23:46:10.272113Z	    partNumber,
2025-09-16T23:46:10.272199Z	    "slug": slug.current,
2025-09-16T23:46:10.272283Z	    title,
2025-09-16T23:46:10.272384Z	    shortDescription,
2025-09-16T23:46:10.272479Z	    image,
2025-09-16T23:46:10.272565Z	    brand->{
2025-09-16T23:46:10.272651Z	      name,
2025-09-16T23:46:10.272754Z	      "slug": slug.current,
2025-09-16T23:46:10.272837Z	      logo
2025-09-16T23:46:10.272917Z	    },
2025-09-16T23:46:10.273095Z	    category->{
2025-09-16T23:46:10.273253Z	      name,
2025-09-16T23:46:10.273423Z	      "slug": slug.current
2025-09-16T23:46:10.273594Z	    },
2025-09-16T23:46:10.273757Z	    pricing{
2025-09-16T23:46:10.273851Z	      currency,
2025-09-16T23:46:10.273931Z	      tiers[]{
2025-09-16T23:46:10.274013Z	        quantity,
2025-09-16T23:46:10.274101Z	        price,
2025-09-16T23:46:10.274206Z	        unit
2025-09-16T23:46:10.274292Z	      },
2025-09-16T23:46:10.274374Z	      moq,
2025-09-16T23:46:10.274474Z	      leadTime,
2025-09-16T23:46:10.274565Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:10.274652Z	      "price": tiers[0].price,
2025-09-16T23:46:10.274758Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:10.274844Z	    },
2025-09-16T23:46:10.274927Z	    inventory{
2025-09-16T23:46:10.275017Z	      quantity,
2025-09-16T23:46:10.2751Z	      status,
2025-09-16T23:46:10.275188Z	      warehouse,
2025-09-16T23:46:10.275274Z	      lastUpdated,
2025-09-16T23:46:10.275354Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:10.27545Z	      "inStock": status == "in_stock",
2025-09-16T23:46:10.27555Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:10.275631Z	    },
2025-09-16T23:46:10.275759Z	    isActive,
2025-09-16T23:46:10.275857Z	    isFeatured,
2025-09-16T23:46:10.275942Z	    isNew,
2025-09-16T23:46:10.276017Z	    _createdAt,
2025-09-16T23:46:10.2761Z	    _updatedAt
2025-09-16T23:46:10.276196Z	  
2025-09-16T23:46:10.276294Z	      },
2025-09-16T23:46:10.276381Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-16T23:46:10.276484Z	    }
2025-09-16T23:46:10.276567Z	  
2025-09-16T23:46:10.276644Z	Query parameters: {
2025-09-16T23:46:10.276743Z	  limit: 8,
2025-09-16T23:46:10.276834Z	  offset: 0,
2025-09-16T23:46:10.276922Z	  category: undefined,
2025-09-16T23:46:10.27701Z	  brand: 'ncc',
2025-09-16T23:46:10.277097Z	  featured: undefined
2025-09-16T23:46:10.277181Z	}
2025-09-16T23:46:10.277257Z	Fetching solutions with query: 
2025-09-16T23:46:10.277333Z	    {
2025-09-16T23:46:10.277433Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:10.277529Z	        
2025-09-16T23:46:10.277621Z	    _id,
2025-09-16T23:46:10.277731Z	    title,
2025-09-16T23:46:10.277834Z	    "slug": slug.current,
2025-09-16T23:46:10.27792Z	    summary,
2025-09-16T23:46:10.278011Z	    description,
2025-09-16T23:46:10.278098Z	    coverImage,
2025-09-16T23:46:10.278181Z	    primaryBrand->{
2025-09-16T23:46:10.278266Z	      _id,
2025-09-16T23:46:10.27835Z	      name,
2025-09-16T23:46:10.278442Z	      "slug": slug.current,
2025-09-16T23:46:10.278532Z	      logo
2025-09-16T23:46:10.278615Z	    },
2025-09-16T23:46:10.278726Z	    relatedBrands[]->{
2025-09-16T23:46:10.278814Z	      _id,
2025-09-16T23:46:10.278897Z	      name,
2025-09-16T23:46:10.278981Z	      "slug": slug.current,
2025-09-16T23:46:10.279064Z	      logo
2025-09-16T23:46:10.279142Z	    },
2025-09-16T23:46:10.279238Z	    targetMarket,
2025-09-16T23:46:10.279325Z	    complexity,
2025-09-16T23:46:10.279404Z	    publishedAt,
2025-09-16T23:46:10.279496Z	    isPublished,
2025-09-16T23:46:10.27959Z	    isFeatured,
2025-09-16T23:46:10.279672Z	    viewCount,
2025-09-16T23:46:10.279774Z	    _createdAt,
2025-09-16T23:46:10.279857Z	    _updatedAt
2025-09-16T23:46:10.279932Z	  
2025-09-16T23:46:10.280018Z	      },
2025-09-16T23:46:10.280102Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-16T23:46:10.280202Z	    }
2025-09-16T23:46:10.280289Z	  
2025-09-16T23:46:10.280373Z	Query parameters: {
2025-09-16T23:46:10.280465Z	  limit: 4,
2025-09-16T23:46:10.280547Z	  offset: 0,
2025-09-16T23:46:10.28065Z	  targetMarket: undefined,
2025-09-16T23:46:10.28075Z	  brand: 'ncc',
2025-09-16T23:46:10.280828Z	  featured: undefined
2025-09-16T23:46:10.280911Z	}
2025-09-16T23:46:10.280996Z	✅ [getBrandData] Found brand: ncc
2025-09-16T23:46:10.281081Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:10.281166Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:10.281244Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-16T23:46:10.281322Z	Fetching products with query: 
2025-09-16T23:46:10.281405Z	    {
2025-09-16T23:46:10.281509Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:10.281604Z	        
2025-09-16T23:46:10.281716Z	    _id,
2025-09-16T23:46:10.28182Z	    _type,
2025-09-16T23:46:10.281911Z	    partNumber,
2025-09-16T23:46:10.281987Z	    "slug": slug.current,
2025-09-16T23:46:10.282065Z	    title,
2025-09-16T23:46:10.282141Z	    shortDescription,
2025-09-16T23:46:10.282217Z	    image,
2025-09-16T23:46:10.282302Z	    brand->{
2025-09-16T23:46:10.282381Z	      name,
2025-09-16T23:46:10.282476Z	      "slug": slug.current,
2025-09-16T23:46:10.28257Z	      logo
2025-09-16T23:46:10.282671Z	    },
2025-09-16T23:46:10.282774Z	    category->{
2025-09-16T23:46:10.282864Z	      name,
2025-09-16T23:46:10.282958Z	      "slug": slug.current
2025-09-16T23:46:10.283053Z	    },
2025-09-16T23:46:10.283134Z	    pricing{
2025-09-16T23:46:10.283214Z	      currency,
2025-09-16T23:46:10.28329Z	      tiers[]{
2025-09-16T23:46:10.283366Z	        quantity,
2025-09-16T23:46:10.283452Z	        price,
2025-09-16T23:46:10.283542Z	        unit
2025-09-16T23:46:10.283626Z	      },
2025-09-16T23:46:10.283737Z	      moq,
2025-09-16T23:46:10.283815Z	      leadTime,
2025-09-16T23:46:10.283891Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:10.283969Z	      "price": tiers[0].price,
2025-09-16T23:46:10.284043Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:10.284122Z	    },
2025-09-16T23:46:10.284208Z	    inventory{
2025-09-16T23:46:10.28429Z	      quantity,
2025-09-16T23:46:10.284371Z	      status,
2025-09-16T23:46:10.284467Z	      warehouse,
2025-09-16T23:46:10.284558Z	      lastUpdated,
2025-09-16T23:46:10.284633Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:10.284735Z	      "inStock": status == "in_stock",
2025-09-16T23:46:10.284832Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:10.284918Z	    },
2025-09-16T23:46:10.285005Z	    isActive,
2025-09-16T23:46:10.285077Z	    isFeatured,
2025-09-16T23:46:10.28515Z	    isNew,
2025-09-16T23:46:10.285259Z	    _createdAt,
2025-09-16T23:46:10.285341Z	    _updatedAt
2025-09-16T23:46:10.285414Z	  
2025-09-16T23:46:10.285517Z	      },
2025-09-16T23:46:10.285605Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-16T23:46:10.285728Z	    }
2025-09-16T23:46:10.285822Z	  
2025-09-16T23:46:10.285904Z	Query parameters: {
2025-09-16T23:46:10.285979Z	  limit: 8,
2025-09-16T23:46:10.286067Z	  offset: 0,
2025-09-16T23:46:10.286145Z	  category: undefined,
2025-09-16T23:46:10.286221Z	  brand: 'epcos',
2025-09-16T23:46:10.286301Z	  featured: undefined
2025-09-16T23:46:10.286382Z	}
2025-09-16T23:46:10.286478Z	Fetching solutions with query: 
2025-09-16T23:46:10.286566Z	    {
2025-09-16T23:46:10.286655Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:10.286758Z	        
2025-09-16T23:46:10.286834Z	    _id,
2025-09-16T23:46:10.286909Z	    title,
2025-09-16T23:46:10.286993Z	    "slug": slug.current,
2025-09-16T23:46:10.287073Z	    summary,
2025-09-16T23:46:10.287147Z	    description,
2025-09-16T23:46:10.287222Z	    coverImage,
2025-09-16T23:46:10.287307Z	    primaryBrand->{
2025-09-16T23:46:10.287401Z	      _id,
2025-09-16T23:46:10.287505Z	      name,
2025-09-16T23:46:10.287595Z	      "slug": slug.current,
2025-09-16T23:46:10.287689Z	      logo
2025-09-16T23:46:10.287775Z	    },
2025-09-16T23:46:10.287861Z	    relatedBrands[]->{
2025-09-16T23:46:10.287941Z	      _id,
2025-09-16T23:46:10.288019Z	      name,
2025-09-16T23:46:10.2881Z	      "slug": slug.current,
2025-09-16T23:46:10.288188Z	      logo
2025-09-16T23:46:10.288266Z	    },
2025-09-16T23:46:10.288346Z	    targetMarket,
2025-09-16T23:46:10.28844Z	    complexity,
2025-09-16T23:46:10.288525Z	    publishedAt,
2025-09-16T23:46:10.288607Z	    isPublished,
2025-09-16T23:46:10.288706Z	    isFeatured,
2025-09-16T23:46:10.288798Z	    viewCount,
2025-09-16T23:46:10.288878Z	    _createdAt,
2025-09-16T23:46:10.288981Z	    _updatedAt
2025-09-16T23:46:10.289068Z	  
2025-09-16T23:46:10.289153Z	      },
2025-09-16T23:46:10.289238Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-16T23:46:10.289329Z	    }
2025-09-16T23:46:10.289419Z	  
2025-09-16T23:46:10.289513Z	Query parameters: {
2025-09-16T23:46:10.289601Z	  limit: 4,
2025-09-16T23:46:10.289705Z	  offset: 0,
2025-09-16T23:46:10.289789Z	  targetMarket: undefined,
2025-09-16T23:46:10.289873Z	  brand: 'epcos',
2025-09-16T23:46:10.28995Z	  featured: undefined
2025-09-16T23:46:10.290027Z	}
2025-09-16T23:46:10.290108Z	✅ [getBrandData] Found brand: Epcos
2025-09-16T23:46:10.290192Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:10.290269Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:10.290346Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-16T23:46:10.290439Z	Fetching products with query: 
2025-09-16T23:46:10.290524Z	    {
2025-09-16T23:46:10.290614Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:10.290719Z	        
2025-09-16T23:46:10.290816Z	    _id,
2025-09-16T23:46:10.290906Z	    _type,
2025-09-16T23:46:10.290991Z	    partNumber,
2025-09-16T23:46:10.291067Z	    "slug": slug.current,
2025-09-16T23:46:10.291166Z	    title,
2025-09-16T23:46:10.291269Z	    shortDescription,
2025-09-16T23:46:10.291347Z	    image,
2025-09-16T23:46:10.291468Z	    brand->{
2025-09-16T23:46:10.291576Z	      name,
2025-09-16T23:46:10.29171Z	      "slug": slug.current,
2025-09-16T23:46:10.291804Z	      logo
2025-09-16T23:46:10.291882Z	    },
2025-09-16T23:46:10.291958Z	    category->{
2025-09-16T23:46:10.292048Z	      name,
2025-09-16T23:46:10.292131Z	      "slug": slug.current
2025-09-16T23:46:10.292212Z	    },
2025-09-16T23:46:10.292307Z	    pricing{
2025-09-16T23:46:10.292412Z	      currency,
2025-09-16T23:46:10.292511Z	      tiers[]{
2025-09-16T23:46:10.292594Z	        quantity,
2025-09-16T23:46:10.292691Z	        price,
2025-09-16T23:46:10.292795Z	        unit
2025-09-16T23:46:10.292894Z	      },
2025-09-16T23:46:10.29299Z	      moq,
2025-09-16T23:46:10.293088Z	      leadTime,
2025-09-16T23:46:10.293192Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:10.293289Z	      "price": tiers[0].price,
2025-09-16T23:46:10.29338Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:10.293481Z	    },
2025-09-16T23:46:10.293584Z	    inventory{
2025-09-16T23:46:10.293689Z	      quantity,
2025-09-16T23:46:10.293781Z	      status,
2025-09-16T23:46:10.293882Z	      warehouse,
2025-09-16T23:46:10.293978Z	      lastUpdated,
2025-09-16T23:46:10.294076Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:10.294174Z	      "inStock": status == "in_stock",
2025-09-16T23:46:10.29427Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:10.294401Z	    },
2025-09-16T23:46:10.294511Z	    isActive,
2025-09-16T23:46:10.294598Z	    isFeatured,
2025-09-16T23:46:10.294705Z	    isNew,
2025-09-16T23:46:10.294802Z	    _createdAt,
2025-09-16T23:46:10.29489Z	    _updatedAt
2025-09-16T23:46:10.295001Z	  
2025-09-16T23:46:10.295104Z	      },
2025-09-16T23:46:10.295206Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-16T23:46:10.295348Z	    }
2025-09-16T23:46:10.295475Z	  
2025-09-16T23:46:10.295578Z	Query parameters: {
2025-09-16T23:46:10.295687Z	  limit: 8,
2025-09-16T23:46:10.295792Z	  offset: 0,
2025-09-16T23:46:10.295912Z	  category: undefined,
2025-09-16T23:46:10.295996Z	  brand: 'epcos',
2025-09-16T23:46:10.296121Z	  featured: undefined
2025-09-16T23:46:10.296209Z	}
2025-09-16T23:46:10.296418Z	Fetching solutions with query: 
2025-09-16T23:46:10.296511Z	    {
2025-09-16T23:46:10.296654Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:10.296773Z	        
2025-09-16T23:46:10.29687Z	    _id,
2025-09-16T23:46:10.296964Z	    title,
2025-09-16T23:46:10.297058Z	    "slug": slug.current,
2025-09-16T23:46:10.29724Z	    summary,
2025-09-16T23:46:10.297347Z	    description,
2025-09-16T23:46:10.297405Z	    coverImage,
2025-09-16T23:46:10.297542Z	    primaryBrand->{
2025-09-16T23:46:10.297641Z	      _id,
2025-09-16T23:46:10.297822Z	      name,
2025-09-16T23:46:10.297939Z	      "slug": slug.current,
2025-09-16T23:46:10.298094Z	      logo
2025-09-16T23:46:10.298214Z	    },
2025-09-16T23:46:10.298332Z	    relatedBrands[]->{
2025-09-16T23:46:10.2985Z	      _id,
2025-09-16T23:46:10.298654Z	      name,
2025-09-16T23:46:10.298785Z	      "slug": slug.current,
2025-09-16T23:46:10.298899Z	      logo
2025-09-16T23:46:10.299035Z	    },
2025-09-16T23:46:10.299195Z	    targetMarket,
2025-09-16T23:46:10.299321Z	    complexity,
2025-09-16T23:46:10.299434Z	    publishedAt,
2025-09-16T23:46:10.299588Z	    isPublished,
2025-09-16T23:46:10.299753Z	    isFeatured,
2025-09-16T23:46:10.299831Z	    viewCount,
2025-09-16T23:46:10.299982Z	    _createdAt,
2025-09-16T23:46:10.300069Z	    _updatedAt
2025-09-16T23:46:10.30018Z	  
2025-09-16T23:46:10.300287Z	      },
2025-09-16T23:46:10.300504Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-16T23:46:10.300612Z	    }
2025-09-16T23:46:10.30073Z	  
2025-09-16T23:46:10.300834Z	Query parameters: {
2025-09-16T23:46:10.300935Z	  limit: 4,
2025-09-16T23:46:10.301042Z	  offset: 0,
2025-09-16T23:46:10.301174Z	  targetMarket: undefined,
2025-09-16T23:46:10.301336Z	  brand: 'epcos',
2025-09-16T23:46:10.301431Z	  featured: undefined
2025-09-16T23:46:10.301568Z	}
2025-09-16T23:46:10.301671Z	✅ [getBrandData] Found brand: Epcos
2025-09-16T23:46:10.301797Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:10.301916Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:10.302032Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-16T23:46:10.302147Z	Fetching products with query: 
2025-09-16T23:46:10.302247Z	    {
2025-09-16T23:46:10.302342Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:10.302441Z	        
2025-09-16T23:46:10.30251Z	    _id,
2025-09-16T23:46:10.302568Z	    _type,
2025-09-16T23:46:10.30265Z	    partNumber,
2025-09-16T23:46:10.30278Z	    "slug": slug.current,
2025-09-16T23:46:10.302881Z	    title,
2025-09-16T23:46:10.302975Z	    shortDescription,
2025-09-16T23:46:10.303072Z	    image,
2025-09-16T23:46:10.303307Z	    brand->{
2025-09-16T23:46:10.303406Z	      name,
2025-09-16T23:46:10.303536Z	      "slug": slug.current,
2025-09-16T23:46:10.303629Z	      logo
2025-09-16T23:46:10.303738Z	    },
2025-09-16T23:46:10.303854Z	    category->{
2025-09-16T23:46:10.303958Z	      name,
2025-09-16T23:46:10.304053Z	      "slug": slug.current
2025-09-16T23:46:10.304144Z	    },
2025-09-16T23:46:10.304226Z	    pricing{
2025-09-16T23:46:10.30431Z	      currency,
2025-09-16T23:46:10.304413Z	      tiers[]{
2025-09-16T23:46:10.304538Z	        quantity,
2025-09-16T23:46:10.30464Z	        price,
2025-09-16T23:46:10.304781Z	        unit
2025-09-16T23:46:10.304903Z	      },
2025-09-16T23:46:10.305041Z	      moq,
2025-09-16T23:46:10.30516Z	      leadTime,
2025-09-16T23:46:10.30527Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:10.305391Z	      "price": tiers[0].price,
2025-09-16T23:46:10.30552Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:10.305629Z	    },
2025-09-16T23:46:10.305765Z	    inventory{
2025-09-16T23:46:10.305874Z	      quantity,
2025-09-16T23:46:10.30597Z	      status,
2025-09-16T23:46:10.306068Z	      warehouse,
2025-09-16T23:46:10.306171Z	      lastUpdated,
2025-09-16T23:46:10.306269Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:10.306395Z	      "inStock": status == "in_stock",
2025-09-16T23:46:10.306506Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:10.306614Z	    },
2025-09-16T23:46:10.306775Z	    isActive,
2025-09-16T23:46:10.306903Z	    isFeatured,
2025-09-16T23:46:10.307162Z	    isNew,
2025-09-16T23:46:10.307271Z	    _createdAt,
2025-09-16T23:46:10.307549Z	    _updatedAt
2025-09-16T23:46:10.307631Z	  
2025-09-16T23:46:10.307792Z	      },
2025-09-16T23:46:10.307937Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-16T23:46:10.308193Z	    }
2025-09-16T23:46:10.308277Z	  
2025-09-16T23:46:10.308363Z	Query parameters: {
2025-09-16T23:46:10.308718Z	  limit: 8,
2025-09-16T23:46:10.308853Z	  offset: 0,
2025-09-16T23:46:10.308959Z	  category: undefined,
2025-09-16T23:46:10.309058Z	  brand: 'sanrex',
2025-09-16T23:46:10.309157Z	  featured: undefined
2025-09-16T23:46:10.30925Z	}
2025-09-16T23:46:10.309345Z	Fetching solutions with query: 
2025-09-16T23:46:10.309445Z	    {
2025-09-16T23:46:10.309556Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:10.309661Z	        
2025-09-16T23:46:10.309773Z	    _id,
2025-09-16T23:46:10.309845Z	    title,
2025-09-16T23:46:10.309924Z	    "slug": slug.current,
2025-09-16T23:46:10.310023Z	    summary,
2025-09-16T23:46:10.310122Z	    description,
2025-09-16T23:46:10.310221Z	    coverImage,
2025-09-16T23:46:10.310326Z	    primaryBrand->{
2025-09-16T23:46:10.310404Z	      _id,
2025-09-16T23:46:10.310516Z	      name,
2025-09-16T23:46:10.310686Z	      "slug": slug.current,
2025-09-16T23:46:10.310848Z	      logo
2025-09-16T23:46:10.310918Z	    },
2025-09-16T23:46:10.311012Z	    relatedBrands[]->{
2025-09-16T23:46:10.311178Z	      _id,
2025-09-16T23:46:10.311287Z	      name,
2025-09-16T23:46:10.311451Z	      "slug": slug.current,
2025-09-16T23:46:10.311568Z	      logo
2025-09-16T23:46:10.311667Z	    },
2025-09-16T23:46:10.311788Z	    targetMarket,
2025-09-16T23:46:10.311938Z	    complexity,
2025-09-16T23:46:10.312019Z	    publishedAt,
2025-09-16T23:46:10.312137Z	    isPublished,
2025-09-16T23:46:10.31244Z	    isFeatured,
2025-09-16T23:46:10.312589Z	    viewCount,
2025-09-16T23:46:10.312735Z	    _createdAt,
2025-09-16T23:46:10.312869Z	    _updatedAt
2025-09-16T23:46:10.312969Z	  
2025-09-16T23:46:10.313073Z	      },
2025-09-16T23:46:10.313183Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-16T23:46:10.313299Z	    }
2025-09-16T23:46:10.313406Z	  
2025-09-16T23:46:10.313498Z	Query parameters: {
2025-09-16T23:46:10.313593Z	  limit: 4,
2025-09-16T23:46:10.313731Z	  offset: 0,
2025-09-16T23:46:10.313904Z	  targetMarket: undefined,
2025-09-16T23:46:10.313983Z	  brand: 'sanrex',
2025-09-16T23:46:10.314133Z	  featured: undefined
2025-09-16T23:46:10.314202Z	}
2025-09-16T23:46:10.314319Z	✅ [getBrandData] Found brand: Sanrex
2025-09-16T23:46:10.314478Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:10.314612Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:10.314788Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-16T23:46:10.314876Z	Fetching products with query: 
2025-09-16T23:46:10.315002Z	    {
2025-09-16T23:46:10.315144Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:10.315231Z	        
2025-09-16T23:46:10.31536Z	    _id,
2025-09-16T23:46:10.315435Z	    _type,
2025-09-16T23:46:10.3155Z	    partNumber,
2025-09-16T23:46:10.315712Z	    "slug": slug.current,
2025-09-16T23:46:10.315827Z	    title,
2025-09-16T23:46:10.31597Z	    shortDescription,
2025-09-16T23:46:10.316072Z	    image,
2025-09-16T23:46:10.316215Z	    brand->{
2025-09-16T23:46:10.316283Z	      name,
2025-09-16T23:46:10.316339Z	      "slug": slug.current,
2025-09-16T23:46:10.316398Z	      logo
2025-09-16T23:46:10.316455Z	    },
2025-09-16T23:46:10.316516Z	    category->{
2025-09-16T23:46:10.316581Z	      name,
2025-09-16T23:46:10.31665Z	      "slug": slug.current
2025-09-16T23:46:10.316732Z	    },
2025-09-16T23:46:10.316797Z	    pricing{
2025-09-16T23:46:10.316861Z	      currency,
2025-09-16T23:46:10.316918Z	      tiers[]{
2025-09-16T23:46:10.316985Z	        quantity,
2025-09-16T23:46:10.317042Z	        price,
2025-09-16T23:46:10.317104Z	        unit
2025-09-16T23:46:10.317167Z	      },
2025-09-16T23:46:10.317242Z	      moq,
2025-09-16T23:46:10.3173Z	      leadTime,
2025-09-16T23:46:10.317357Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:10.31742Z	      "price": tiers[0].price,
2025-09-16T23:46:10.317494Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:10.317563Z	    },
2025-09-16T23:46:10.317633Z	    inventory{
2025-09-16T23:46:10.31773Z	      quantity,
2025-09-16T23:46:10.317798Z	      status,
2025-09-16T23:46:10.317859Z	      warehouse,
2025-09-16T23:46:10.317916Z	      lastUpdated,
2025-09-16T23:46:10.317986Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:10.318049Z	      "inStock": status == "in_stock",
2025-09-16T23:46:10.318108Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:10.318697Z	    },
2025-09-16T23:46:10.318951Z	    isActive,
2025-09-16T23:46:10.319068Z	    isFeatured,
2025-09-16T23:46:10.319299Z	    isNew,
2025-09-16T23:46:10.319397Z	    _createdAt,
2025-09-16T23:46:10.319468Z	    _updatedAt
2025-09-16T23:46:10.319687Z	  
2025-09-16T23:46:10.319888Z	      },
2025-09-16T23:46:10.319973Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-16T23:46:10.32025Z	    }
2025-09-16T23:46:10.32048Z	  
2025-09-16T23:46:10.320565Z	Query parameters: {
2025-09-16T23:46:10.320798Z	  limit: 8,
2025-09-16T23:46:10.321031Z	  offset: 0,
2025-09-16T23:46:10.321265Z	  category: undefined,
2025-09-16T23:46:10.321363Z	  brand: 'sanrex',
2025-09-16T23:46:10.321479Z	  featured: undefined
2025-09-16T23:46:10.321621Z	}
2025-09-16T23:46:10.321879Z	Fetching solutions with query: 
2025-09-16T23:46:10.322137Z	    {
2025-09-16T23:46:10.322233Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:10.322407Z	        
2025-09-16T23:46:10.322483Z	    _id,
2025-09-16T23:46:10.322583Z	    title,
2025-09-16T23:46:10.32296Z	    "slug": slug.current,
2025-09-16T23:46:10.323042Z	    summary,
2025-09-16T23:46:10.323286Z	    description,
2025-09-16T23:46:10.323533Z	    coverImage,
2025-09-16T23:46:10.323626Z	    primaryBrand->{
2025-09-16T23:46:10.32378Z	      _id,
2025-09-16T23:46:10.323864Z	      name,
2025-09-16T23:46:10.323959Z	      "slug": slug.current,
2025-09-16T23:46:10.324313Z	      logo
2025-09-16T23:46:10.324393Z	    },
2025-09-16T23:46:10.324634Z	    relatedBrands[]->{
2025-09-16T23:46:10.324907Z	      _id,
2025-09-16T23:46:10.325043Z	      name,
2025-09-16T23:46:10.325322Z	      "slug": slug.current,
2025-09-16T23:46:10.325455Z	      logo
2025-09-16T23:46:10.325576Z	    },
2025-09-16T23:46:10.325784Z	    targetMarket,
2025-09-16T23:46:10.325862Z	    complexity,
2025-09-16T23:46:10.325989Z	    publishedAt,
2025-09-16T23:46:10.326173Z	    isPublished,
2025-09-16T23:46:10.326319Z	    isFeatured,
2025-09-16T23:46:10.326462Z	    viewCount,
2025-09-16T23:46:10.32661Z	    _createdAt,
2025-09-16T23:46:10.326829Z	    _updatedAt
2025-09-16T23:46:10.326919Z	  
2025-09-16T23:46:10.32705Z	      },
2025-09-16T23:46:10.327182Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-16T23:46:10.327333Z	    }
2025-09-16T23:46:10.327463Z	  
2025-09-16T23:46:10.327568Z	Query parameters: {
2025-09-16T23:46:10.327663Z	  limit: 4,
2025-09-16T23:46:10.327792Z	  offset: 0,
2025-09-16T23:46:10.327888Z	  targetMarket: undefined,
2025-09-16T23:46:10.327981Z	  brand: 'sanrex',
2025-09-16T23:46:10.328213Z	  featured: undefined
2025-09-16T23:46:10.328348Z	}
2025-09-16T23:46:10.32847Z	✅ [getBrandData] Found brand: Sanrex
2025-09-16T23:46:10.328581Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:10.328699Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:10.328805Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:46:10.329035Z	Fetching products with query: 
2025-09-16T23:46:10.329343Z	    {
2025-09-16T23:46:10.329469Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:10.32978Z	        
2025-09-16T23:46:10.329951Z	    _id,
2025-09-16T23:46:10.330039Z	    _type,
2025-09-16T23:46:10.330146Z	    partNumber,
2025-09-16T23:46:10.330239Z	    "slug": slug.current,
2025-09-16T23:46:10.330371Z	    title,
2025-09-16T23:46:10.330479Z	    shortDescription,
2025-09-16T23:46:10.330573Z	    image,
2025-09-16T23:46:10.330663Z	    brand->{
2025-09-16T23:46:10.330775Z	      name,
2025-09-16T23:46:10.330877Z	      "slug": slug.current,
2025-09-16T23:46:10.330949Z	      logo
2025-09-16T23:46:10.331014Z	    },
2025-09-16T23:46:10.331099Z	    category->{
2025-09-16T23:46:10.331187Z	      name,
2025-09-16T23:46:10.331291Z	      "slug": slug.current
2025-09-16T23:46:10.331525Z	    },
2025-09-16T23:46:10.33178Z	    pricing{
2025-09-16T23:46:10.332006Z	      currency,
2025-09-16T23:46:10.332233Z	      tiers[]{
2025-09-16T23:46:10.332318Z	        quantity,
2025-09-16T23:46:10.33253Z	        price,
2025-09-16T23:46:10.332635Z	        unit
2025-09-16T23:46:10.332756Z	      },
2025-09-16T23:46:10.332847Z	      moq,
2025-09-16T23:46:10.332911Z	      leadTime,
2025-09-16T23:46:10.332992Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:10.33324Z	      "price": tiers[0].price,
2025-09-16T23:46:10.333344Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:10.333646Z	    },
2025-09-16T23:46:10.333784Z	    inventory{
2025-09-16T23:46:10.333893Z	      quantity,
2025-09-16T23:46:10.334052Z	      status,
2025-09-16T23:46:10.334142Z	      warehouse,
2025-09-16T23:46:10.334204Z	      lastUpdated,
2025-09-16T23:46:10.334264Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:10.334322Z	      "inStock": status == "in_stock",
2025-09-16T23:46:10.334394Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:10.33445Z	    },
2025-09-16T23:46:10.334514Z	    isActive,
2025-09-16T23:46:10.33457Z	    isFeatured,
2025-09-16T23:46:10.3348Z	    isNew,
2025-09-16T23:46:10.334959Z	    _createdAt,
2025-09-16T23:46:10.33513Z	    _updatedAt
2025-09-16T23:46:10.335201Z	  
2025-09-16T23:46:10.335317Z	      },
2025-09-16T23:46:10.335449Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:46:10.335586Z	    }
2025-09-16T23:46:10.335696Z	  
2025-09-16T23:46:10.335802Z	Query parameters: {
2025-09-16T23:46:10.335897Z	  limit: 8,
2025-09-16T23:46:10.336017Z	  offset: 0,
2025-09-16T23:46:10.336146Z	  category: undefined,
2025-09-16T23:46:10.336259Z	  brand: 'Electronicon',
2025-09-16T23:46:10.336383Z	  featured: undefined
2025-09-16T23:46:10.336499Z	}
2025-09-16T23:46:10.336612Z	Fetching solutions with query: 
2025-09-16T23:46:10.336731Z	    {
2025-09-16T23:46:10.336832Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:10.336906Z	        
2025-09-16T23:46:10.337047Z	    _id,
2025-09-16T23:46:10.337105Z	    title,
2025-09-16T23:46:10.337191Z	    "slug": slug.current,
2025-09-16T23:46:10.337303Z	    summary,
2025-09-16T23:46:10.337414Z	    description,
2025-09-16T23:46:10.33751Z	    coverImage,
2025-09-16T23:46:10.337608Z	    primaryBrand->{
2025-09-16T23:46:10.337762Z	      _id,
2025-09-16T23:46:10.337863Z	      name,
2025-09-16T23:46:10.337996Z	      "slug": slug.current,
2025-09-16T23:46:10.338127Z	      logo
2025-09-16T23:46:10.338259Z	    },
2025-09-16T23:46:10.338395Z	    relatedBrands[]->{
2025-09-16T23:46:10.338504Z	      _id,
2025-09-16T23:46:10.338643Z	      name,
2025-09-16T23:46:10.338772Z	      "slug": slug.current,
2025-09-16T23:46:10.338911Z	      logo
2025-09-16T23:46:10.339025Z	    },
2025-09-16T23:46:10.339148Z	    targetMarket,
2025-09-16T23:46:10.339289Z	    complexity,
2025-09-16T23:46:10.339394Z	    publishedAt,
2025-09-16T23:46:10.339549Z	    isPublished,
2025-09-16T23:46:10.339619Z	    isFeatured,
2025-09-16T23:46:10.339943Z	    viewCount,
2025-09-16T23:46:10.34002Z	    _createdAt,
2025-09-16T23:46:10.340103Z	    _updatedAt
2025-09-16T23:46:10.340224Z	  
2025-09-16T23:46:10.340327Z	      },
2025-09-16T23:46:10.340426Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:46:10.340513Z	    }
2025-09-16T23:46:10.340606Z	  
2025-09-16T23:46:10.340776Z	Query parameters: {
2025-09-16T23:46:10.340885Z	  limit: 4,
2025-09-16T23:46:10.340986Z	  offset: 0,
2025-09-16T23:46:10.341082Z	  targetMarket: undefined,
2025-09-16T23:46:10.341189Z	  brand: 'Electronicon',
2025-09-16T23:46:10.341273Z	  featured: undefined
2025-09-16T23:46:10.341333Z	}
2025-09-16T23:46:10.341439Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:46:10.341545Z	Products fetch result: {
2025-09-16T23:46:10.341637Z	  totalProducts: 2,
2025-09-16T23:46:10.341752Z	  fetchedProducts: 2,
2025-09-16T23:46:10.341849Z	  firstProduct: {
2025-09-16T23:46:10.341945Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:46:10.342043Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:46:10.342138Z	    _type: 'product',
2025-09-16T23:46:10.34229Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:46:10.342376Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:46:10.342488Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:46:10.342596Z	    image: null,
2025-09-16T23:46:10.342732Z	    inventory: {
2025-09-16T23:46:10.342911Z	      inStock: true,
2025-09-16T23:46:10.343011Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:46:10.343119Z	      quantity: 0,
2025-09-16T23:46:10.343215Z	      status: 'in_stock',
2025-09-16T23:46:10.343423Z	      warehouse: null
2025-09-16T23:46:10.343551Z	    },
2025-09-16T23:46:10.343623Z	    isActive: true,
2025-09-16T23:46:10.343712Z	    isFeatured: false,
2025-09-16T23:46:10.343776Z	    isNew: false,
2025-09-16T23:46:10.34384Z	    partNumber: '99999',
2025-09-16T23:46:10.343903Z	    pricing: {
2025-09-16T23:46:10.343959Z	      currency: 'CNY',
2025-09-16T23:46:10.344014Z	      leadTime: null,
2025-09-16T23:46:10.34407Z	      moq: null,
2025-09-16T23:46:10.344131Z	      price: null,
2025-09-16T23:46:10.344197Z	      tiers: null
2025-09-16T23:46:10.344258Z	    },
2025-09-16T23:46:10.344319Z	    shortDescription: null,
2025-09-16T23:46:10.34441Z	    slug: '99999',
2025-09-16T23:46:10.344476Z	    title: '99999'
2025-09-16T23:46:10.344541Z	  }
2025-09-16T23:46:10.344598Z	}
2025-09-16T23:46:10.344665Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:10.344741Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:46:10.344802Z	Fetching products with query: 
2025-09-16T23:46:10.344857Z	    {
2025-09-16T23:46:10.344914Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:10.344978Z	        
2025-09-16T23:46:10.345045Z	    _id,
2025-09-16T23:46:10.345103Z	    _type,
2025-09-16T23:46:10.345169Z	    partNumber,
2025-09-16T23:46:10.345236Z	    "slug": slug.current,
2025-09-16T23:46:10.345294Z	    title,
2025-09-16T23:46:10.345357Z	    shortDescription,
2025-09-16T23:46:10.345425Z	    image,
2025-09-16T23:46:10.345483Z	    brand->{
2025-09-16T23:46:10.345546Z	      name,
2025-09-16T23:46:10.345608Z	      "slug": slug.current,
2025-09-16T23:46:10.345666Z	      logo
2025-09-16T23:46:10.34574Z	    },
2025-09-16T23:46:10.345808Z	    category->{
2025-09-16T23:46:10.345865Z	      name,
2025-09-16T23:46:10.345924Z	      "slug": slug.current
2025-09-16T23:46:10.34599Z	    },
2025-09-16T23:46:10.346045Z	    pricing{
2025-09-16T23:46:10.346104Z	      currency,
2025-09-16T23:46:10.346161Z	      tiers[]{
2025-09-16T23:46:10.346218Z	        quantity,
2025-09-16T23:46:10.346275Z	        price,
2025-09-16T23:46:10.346332Z	        unit
2025-09-16T23:46:10.346388Z	      },
2025-09-16T23:46:10.34645Z	      moq,
2025-09-16T23:46:10.346508Z	      leadTime,
2025-09-16T23:46:10.34657Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:10.346634Z	      "price": tiers[0].price,
2025-09-16T23:46:10.346709Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:10.346767Z	    },
2025-09-16T23:46:10.346821Z	    inventory{
2025-09-16T23:46:10.346877Z	      quantity,
2025-09-16T23:46:10.346938Z	      status,
2025-09-16T23:46:10.347Z	      warehouse,
2025-09-16T23:46:10.347061Z	      lastUpdated,
2025-09-16T23:46:10.347122Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:10.347192Z	      "inStock": status == "in_stock",
2025-09-16T23:46:10.347259Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:10.34732Z	    },
2025-09-16T23:46:10.347381Z	    isActive,
2025-09-16T23:46:10.347458Z	    isFeatured,
2025-09-16T23:46:10.347523Z	    isNew,
2025-09-16T23:46:10.347581Z	    _createdAt,
2025-09-16T23:46:10.347645Z	    _updatedAt
2025-09-16T23:46:10.347714Z	  
2025-09-16T23:46:10.347778Z	      },
2025-09-16T23:46:10.347841Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:46:10.347905Z	    }
2025-09-16T23:46:10.347967Z	  
2025-09-16T23:46:10.348031Z	Query parameters: {
2025-09-16T23:46:10.348088Z	  limit: 8,
2025-09-16T23:46:10.348142Z	  offset: 0,
2025-09-16T23:46:10.348198Z	  category: undefined,
2025-09-16T23:46:10.348253Z	  brand: 'Electronicon',
2025-09-16T23:46:10.348322Z	  featured: undefined
2025-09-16T23:46:10.348385Z	}
2025-09-16T23:46:10.348449Z	Fetching solutions with query: 
2025-09-16T23:46:10.348505Z	    {
2025-09-16T23:46:10.348565Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:10.349391Z	        
2025-09-16T23:46:10.349529Z	    _id,
2025-09-16T23:46:10.349792Z	    title,
2025-09-16T23:46:10.349983Z	    "slug": slug.current,
2025-09-16T23:46:10.350063Z	    summary,
2025-09-16T23:46:10.350209Z	    description,
2025-09-16T23:46:10.350314Z	    coverImage,
2025-09-16T23:46:10.350454Z	    primaryBrand->{
2025-09-16T23:46:10.350544Z	      _id,
2025-09-16T23:46:10.350607Z	      name,
2025-09-16T23:46:10.350857Z	      "slug": slug.current,
2025-09-16T23:46:10.350956Z	      logo
2025-09-16T23:46:10.351121Z	    },
2025-09-16T23:46:10.3512Z	    relatedBrands[]->{
2025-09-16T23:46:10.351319Z	      _id,
2025-09-16T23:46:10.351434Z	      name,
2025-09-16T23:46:10.351517Z	      "slug": slug.current,
2025-09-16T23:46:10.351579Z	      logo
2025-09-16T23:46:10.351813Z	    },
2025-09-16T23:46:10.351961Z	    targetMarket,
2025-09-16T23:46:10.352145Z	    complexity,
2025-09-16T23:46:10.352297Z	    publishedAt,
2025-09-16T23:46:10.35245Z	    isPublished,
2025-09-16T23:46:10.352531Z	    isFeatured,
2025-09-16T23:46:10.352648Z	    viewCount,
2025-09-16T23:46:10.352778Z	    _createdAt,
2025-09-16T23:46:10.352892Z	    _updatedAt
2025-09-16T23:46:10.352992Z	  
2025-09-16T23:46:10.35309Z	      },
2025-09-16T23:46:10.353181Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:46:10.353451Z	    }
2025-09-16T23:46:10.353533Z	  
2025-09-16T23:46:10.353626Z	Query parameters: {
2025-09-16T23:46:10.353749Z	  limit: 4,
2025-09-16T23:46:10.353879Z	  offset: 0,
2025-09-16T23:46:10.353985Z	  targetMarket: undefined,
2025-09-16T23:46:10.354138Z	  brand: 'Electronicon',
2025-09-16T23:46:10.354212Z	  featured: undefined
2025-09-16T23:46:10.35435Z	}
2025-09-16T23:46:10.354498Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:46:10.354577Z	Products fetch result: {
2025-09-16T23:46:10.354726Z	  totalProducts: 2,
2025-09-16T23:46:10.354816Z	  fetchedProducts: 2,
2025-09-16T23:46:10.354935Z	  firstProduct: {
2025-09-16T23:46:10.355021Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:46:10.35516Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:46:10.35524Z	    _type: 'product',
2025-09-16T23:46:10.355318Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:46:10.355457Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:46:10.355578Z	    categoryrod.js:12:66681)
2025-09-16T23:46:10.355688Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.355796Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.356044Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.356144Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.356205Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.356509Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.356595Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.356736Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.356824Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.356886Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.357067Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.357164Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:10.357297Z	  digest: '1870762441'
2025-09-16T23:46:10.35737Z	}
2025-09-16T23:46:10.357493Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.357642Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.357754Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.357838Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.35795Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.358031Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.358092Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.358218Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.358385Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.358554Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.358628Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:10.358737Z	  digest: '1870762441'
2025-09-16T23:46:10.358904Z	}
2025-09-16T23:46:10.358984Z	
2025-09-16T23:46:10.359181Z	Error occurred prerendering page "/de/solutions/11111". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:10.359335Z	
2025-09-16T23:46:10.359468Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.359611Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.35975Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.359853Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.359958Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.360084Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.36019Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.360335Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.360492Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.360654Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.360787Z	    at nN (/opt/buildhome/repo/node_modules/next/dis: { name: '电容', slug: 'capacitor' },
2025-09-16T23:46:10.360966Z	    image: null,
2025-09-16T23:46:10.361111Z	    inventory: {
2025-09-16T23:46:10.361224Z	      inStock: true,
2025-09-16T23:46:10.361347Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:46:10.361466Z	      quantity: 0,
2025-09-16T23:46:10.361578Z	      status: 'in_stock',
2025-09-16T23:46:10.361722Z	      warehouse: null
2025-09-16T23:46:10.361834Z	    },
2025-09-16T23:46:10.361935Z	    isActive: true,
2025-09-16T23:46:10.362197Z	    isFeatured: false,
2025-09-16T23:46:10.362312Z	    isNew: false,
2025-09-16T23:46:10.3624Z	    partNumber: '99999',
2025-09-16T23:46:10.362465Z	    pricing: {
2025-09-16T23:46:10.362537Z	      currency: 'CNY',
2025-09-16T23:46:10.362608Z	      leadTime: null,
2025-09-16T23:46:10.362691Z	      moq: null,
2025-09-16T23:46:10.362777Z	      price: null,
2025-09-16T23:46:10.362846Z	      tiers: null
2025-09-16T23:46:10.362902Z	    },
2025-09-16T23:46:10.362962Z	    shortDescription: null,
2025-09-16T23:46:10.363017Z	    slug: '99999',
2025-09-16T23:46:10.363071Z	    title: '99999'
2025-09-16T23:46:10.363126Z	  }
2025-09-16T23:46:10.363182Z	}
2025-09-16T23:46:10.363238Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:10.363311Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-16T23:46:10.363379Z	Fetching products with query: 
2025-09-16T23:46:10.36344Z	    {
2025-09-16T23:46:10.363504Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:10.363568Z	        
2025-09-16T23:46:10.363633Z	    _id,
2025-09-16T23:46:10.363718Z	    _type,
2025-09-16T23:46:10.363788Z	    partNumber,
2025-09-16T23:46:10.36386Z	    "slug": slug.current,
2025-09-16T23:46:10.363924Z	    title,
2025-09-16T23:46:10.363986Z	    shortDescription,
2025-09-16T23:46:10.364043Z	    image,
2025-09-16T23:46:10.364099Z	    brand->{
2025-09-16T23:46:10.364163Z	      name,
2025-09-16T23:46:10.364227Z	      "slug": slug.current,
2025-09-16T23:46:10.364288Z	      logo
2025-09-16T23:46:10.364345Z	    },
2025-09-16T23:46:10.36441Z	    category->{
2025-09-16T23:46:10.364468Z	      name,
2025-09-16T23:46:10.364523Z	      "slug": slug.current
2025-09-16T23:46:10.364579Z	    },
2025-09-16T23:46:10.364639Z	    pricing{
2025-09-16T23:46:10.364728Z	      currency,
2025-09-16T23:46:10.364803Z	      tiers[]{
2025-09-16T23:46:10.364867Z	        quantity,
2025-09-16T23:46:10.364928Z	        price,
2025-09-16T23:46:10.36499Z	        unit
2025-09-16T23:46:10.365047Z	      },
2025-09-16T23:46:10.365102Z	      moq,
2025-09-16T23:46:10.365165Z	      leadTime,
2025-09-16T23:46:10.365225Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:10.365294Z	      "price": tiers[0].price,
2025-09-16T23:46:10.365351Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:10.365418Z	    },
2025-09-16T23:46:10.36548Z	    inventory{
2025-09-16T23:46:10.365542Z	      quantity,
2025-09-16T23:46:10.365603Z	      status,
2025-09-16T23:46:10.365668Z	      warehouse,
2025-09-16T23:46:10.365735Z	      lastUpdated,
2025-09-16T23:46:10.365792Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:10.365864Z	      "inStock": status == "in_stock",
2025-09-16T23:46:10.365928Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:10.365983Z	    },
2025-09-16T23:46:10.366043Z	    isActive,
2025-09-16T23:46:10.366098Z	    isFeatured,
2025-09-16T23:46:10.366154Z	    isNew,
2025-09-16T23:46:10.366211Z	    _createdAt,
2025-09-16T23:46:10.366989Z	    _updatedAt
2025-09-16T23:46:10.367181Z	  
2025-09-16T23:46:10.367265Z	      },
2025-09-16T23:46:10.367427Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-16T23:46:10.367656Z	    }
2025-09-16T23:46:10.367901Z	  
2025-09-16T23:46:10.367985Z	Query parameters: {
2025-09-16T23:46:10.368074Z	  limit: 8,
2025-09-16T23:46:10.368184Z	  offset: 0,
2025-09-16T23:46:10.368269Z	  category: undefined,
2025-09-16T23:46:10.368505Z	  brand: 'pi',
2025-09-16T23:46:10.368603Z	  featured: undefined
2025-09-16T23:46:10.368877Z	}
2025-09-16T23:46:10.368968Z	Fetching solutions with query: 
2025-09-16T23:46:10.369105Z	    {
2025-09-16T23:46:10.369223Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:10.369412Z	        
2025-09-16T23:46:10.369484Z	    _id,
2025-09-16T23:46:10.3696Z	    title,
2025-09-16T23:46:10.369772Z	    "slug": slug.current,
2025-09-16T23:46:10.369928Z	    summary,
2025-09-16T23:46:10.370055Z	    description,
2025-09-16T23:46:10.370155Z	    coverImage,
2025-09-16T23:46:10.370262Z	    primaryBrand->{
2025-09-16T23:46:10.370341Z	      _id,
2025-09-16T23:46:10.370508Z	      name,
2025-09-16T23:46:10.370584Z	      "slug": slug.current,
2025-09-16T23:46:10.370713Z	      logo
2025-09-16T23:46:10.370862Z	    },
2025-09-16T23:46:10.370937Z	    relatedBrands[]->{
2025-09-16T23:46:10.371181Z	      _id,
2025-09-16T23:46:10.371275Z	      name,
2025-09-16T23:46:10.371534Z	      "slug": slug.current,
2025-09-16T23:46:10.371616Z	      logo
2025-09-16T23:46:10.371891Z	    },
2025-09-16T23:46:10.371978Z	    targetMarket,
2025-09-16T23:46:10.372121Z	    complexity,
2025-09-16T23:46:10.372248Z	    publishedAt,
2025-09-16T23:46:10.372355Z	    isPublished,
2025-09-16T23:46:10.372471Z	    isFeatured,
2025-09-16T23:46:10.372577Z	    viewCount,
2025-09-16T23:46:10.372684Z	    _createdAt,
2025-09-16T23:46:10.372782Z	    _updatedAt
2025-09-16T23:46:10.37288Z	  
2025-09-16T23:46:10.373113Z	      },
2025-09-16T23:46:10.373335Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-16T23:46:10.373572Z	    }
2025-09-16T23:46:10.37366Z	  
2025-09-16T23:46:10.373772Z	Query parameters: {
2025-09-16T23:46:10.373876Z	  limit: 4,
2025-09-16T23:46:10.373968Z	  offset: 0,
2025-09-16T23:46:10.374228Z	  targetMarket: undefined,
2025-09-16T23:46:10.374357Z	  brand: 'pi',
2025-09-16T23:46:10.374471Z	  featured: undefined
2025-09-16T23:46:10.374589Z	}
2025-09-16T23:46:10.374694Z	✅ [getBrandData] Found brand: PI
2025-09-16T23:46:10.374793Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:10.3749Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:10.374982Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-16T23:46:10.375082Z	Fetching products with query: 
2025-09-16T23:46:10.375185Z	    {
2025-09-16T23:46:10.375285Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:10.375387Z	        
2025-09-16T23:46:10.375485Z	    _id,
2025-09-16T23:46:10.375595Z	    _type,
2025-09-16T23:46:10.375705Z	    partNumber,
2025-09-16T23:46:10.375815Z	    "slug": slug.current,
2025-09-16T23:46:10.37592Z	    title,
2025-09-16T23:46:10.376016Z	    shortDescription,
2025-09-16T23:46:10.376107Z	    image,
2025-09-16T23:46:10.376318Z	    brand->{
2025-09-16T23:46:10.376434Z	      name,
2025-09-16T23:46:10.376547Z	      "slug": slug.current,
2025-09-16T23:46:10.376646Z	      logo
2025-09-16T23:46:10.376754Z	    },
2025-09-16T23:46:10.37685Z	    category->{
2025-09-16T23:46:10.37695Z	      name,
2025-09-16T23:46:10.377022Z	      "slug": slug.current
2025-09-16T23:46:10.377078Z	    },
2025-09-16T23:46:10.377192Z	    pricing{
2025-09-16T23:46:10.377262Z	      currency,
2025-09-16T23:46:10.377358Z	      tiers[]{
2025-09-16T23:46:10.377457Z	        quantity,
2025-09-16T23:46:10.377609Z	        price,
2025-09-16T23:46:10.377725Z	        unit
2025-09-16T23:46:10.377826Z	      },
2025-09-16T23:46:10.377955Z	      moq,
2025-09-16T23:46:10.378052Z	      leadTime,
2025-09-16T23:46:10.378152Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:10.378265Z	      "price": tiers[0].price,
2025-09-16T23:46:10.378372Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:10.37848Z	    },
2025-09-16T23:46:10.378584Z	    inventory{
2025-09-16T23:46:10.37869Z	      quantity,
2025-09-16T23:46:10.378797Z	      status,
2025-09-16T23:46:10.378902Z	      warehouse,
2025-09-16T23:46:10.378996Z	      lastUpdated,
2025-09-16T23:46:10.379087Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:10.379215Z	      "inStock": status == "in_stock",
2025-09-16T23:46:10.379359Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:10.379469Z	    },
2025-09-16T23:46:10.379569Z	    isActive,
2025-09-16T23:46:10.379663Z	    isFeatured,
2025-09-16T23:46:10.379795Z	    isNew,
2025-09-16T23:46:10.37992Z	    _createdAt,
2025-09-16T23:46:10.380029Z	    _updatedAt
2025-09-16T23:46:10.380137Z	  
2025-09-16T23:46:10.380239Z	      },
2025-09-16T23:46:10.380337Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-16T23:46:10.380453Z	    }
2025-09-16T23:46:10.380549Z	  
2025-09-16T23:46:10.380642Z	Query parameters: {
2025-09-16T23:46:10.380797Z	  limit: 8,
2025-09-16T23:46:10.380906Z	  offset: 0,
2025-09-16T23:46:10.380996Z	  category: undefined,
2025-09-16T23:46:10.381072Z	  brand: 'pi',
2025-09-16T23:46:10.381129Z	  featured: undefined
2025-09-16T23:46:10.381191Z	}
2025-09-16T23:46:10.381283Z	Fetching solutions with query: 
2025-09-16T23:46:10.381386Z	    {
2025-09-16T23:46:10.381486Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:10.381612Z	        
2025-09-16T23:46:10.38175Z	    _id,
2025-09-16T23:46:10.381851Z	    title,
2025-09-16T23:46:10.38198Z	    "slug": slug.current,
2025-09-16T23:46:10.382096Z	    summary,
2025-09-16T23:46:10.382238Z	    description,
2025-09-16T23:46:10.382335Z	    coverImage,
2025-09-16T23:46:10.382453Z	    primaryBrand->{
2025-09-16T23:46:10.382614Z	      _id,
2025-09-16T23:46:10.382741Z	      name,
2025-09-16T23:46:10.382891Z	      "slug": slug.current,
2025-09-16T23:46:10.383033Z	      logo
2025-09-16T23:46:10.383108Z	    },
2025-09-16T23:46:10.383291Z	    relatedBrands[]->{
2025-09-16T23:46:10.383442Z	      _id,
2025-09-16T23:46:10.383524Z	      name,
2025-09-16T23:46:10.383586Z	      "slug": slug.current,
2025-09-16T23:46:10.383643Z	      logo
2025-09-16T23:46:10.383733Z	    },
2025-09-16T23:46:10.383805Z	    targetMarket,
2025-09-16T23:46:10.383863Z	    complexity,
2025-09-16T23:46:10.383922Z	    publishedAt,
2025-09-16T23:46:10.383984Z	    isPublished,
2025-09-16T23:46:10.384049Z	    isFeatured,
2025-09-16T23:46:10.384106Z	    viewCount,
2025-09-16T23:46:10.384186Z	    _createdAt,
2025-09-16T23:46:10.38426Z	    _updatedAt
2025-09-16T23:46:10.384322Z	  
2025-09-16T23:46:10.384385Z	      },
2025-09-16T23:46:10.384448Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-16T23:46:10.384514Z	    }
2025-09-16T23:46:10.384576Z	  
2025-09-16T23:46:10.384638Z	Query parameters: {
2025-09-16T23:46:10.384728Z	  limit: 4,
2025-09-16T23:46:10.384798Z	  offset: 0,
2025-09-16T23:46:10.384856Z	  targetMarket: undefined,
2025-09-16T23:46:10.384913Z	  brand: 'pi',
2025-09-16T23:46:10.384968Z	  featured: undefined
2025-09-16T23:46:10.385033Z	}
2025-09-16T23:46:10.385094Z	✅ [getBrandData] Found brand: PI
2025-09-16T23:46:10.385184Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-16T23:46:10.385262Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:10.385328Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:46:10.385395Z	Fetching products with query: 
2025-09-16T23:46:10.385461Z	    {
2025-09-16T23:46:10.385521Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:10.385579Z	        
2025-09-16T23:46:10.385642Z	    _id,
2025-09-16T23:46:10.385739Z	    _type,
2025-09-16T23:46:10.385808Z	    partNumber,
2025-09-16T23:46:10.385913Z	    "slug": slug.current,
2025-09-16T23:46:10.385998Z	    title,
2025-09-16T23:46:10.386057Z	    shortDescription,
2025-09-16T23:46:10.386114Z	    image,
2025-09-16T23:46:10.38617Z	    brand->{
2025-09-16T23:46:10.386227Z	      name,
2025-09-16T23:46:10.386286Z	      "slug": slug.current,
2025-09-16T23:46:10.386341Z	      logo
2025-09-16T23:46:10.386398Z	    },
2025-09-16T23:46:10.386463Z	    category->{
2025-09-16T23:46:10.386531Z	      name,
2025-09-16T23:46:10.386592Z	      "slug": slug.current
2025-09-16T23:46:10.386668Z	    },
2025-09-16T23:46:10.386772Z	    pricing{
2025-09-16T23:46:10.386832Z	      currency,
2025-09-16T23:46:10.386888Z	      tiers[]{
2025-09-16T23:46:10.386942Z	        quantity,
2025-09-16T23:46:10.387003Z	        price,
2025-09-16T23:46:10.387062Z	        unit
2025-09-16T23:46:10.387127Z	      },
2025-09-16T23:46:10.387188Z	      moq,
2025-09-16T23:46:10.387251Z	      leadTime,
2025-09-16T23:46:10.387308Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:10.387368Z	      "price": tiers[0].price,
2025-09-16T23:46:10.387427Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:10.387494Z	    },
2025-09-16T23:46:10.387557Z	    inventory{
2025-09-16T23:46:10.387619Z	      quantity,
2025-09-16T23:46:10.387695Z	      status,
2025-09-16T23:46:10.38777Z	      warehouse,
2025-09-16T23:46:10.387841Z	      lastUpdated,
2025-09-16T23:46:10.387906Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:10.387982Z	      "inStock": status == "in_stock",
2025-09-16T23:46:10.388047Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:10.388105Z	    },
2025-09-16T23:46:10.388167Z	    isActive,
2025-09-16T23:46:10.388226Z	    isFeatured,
2025-09-16T23:46:10.388291Z	    isNew,
2025-09-16T23:46:10.388352Z	    _createdAt,
2025-09-16T23:46:10.388414Z	    _updatedAt
2025-09-16T23:46:10.388484Z	  
2025-09-16T23:46:10.388541Z	      },
2025-09-16T23:46:10.388605Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:46:10.388669Z	    }
2025-09-16T23:46:10.388756Z	  
2025-09-16T23:46:10.388819Z	Query parameters: {
2025-09-16T23:46:10.389735Z	  limit: 8,
2025-09-16T23:46:10.389835Z	  offset: 0,
2025-09-16T23:46:10.389905Z	  category: undefined,
2025-09-16T23:46:10.389999Z	  brand: 'Electronicon',
2025-09-16T23:46:10.390287Z	  featured: undefined
2025-09-16T23:46:10.390369Z	}
2025-09-16T23:46:10.390527Z	Fetching solutions with query: 
2025-09-16T23:46:10.390613Z	    {
2025-09-16T23:46:10.390728Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:10.390849Z	        
2025-09-16T23:46:10.390914Z	    _id,
2025-09-16T23:46:10.391053Z	    title,
2025-09-16T23:46:10.391267Z	    "slug": slug.current,
2025-09-16T23:46:10.391408Z	    summary,
2025-09-16T23:46:10.391482Z	    description,
2025-09-16T23:46:10.391594Z	    coverImage,
2025-09-16T23:46:10.391847Z	    primaryBrand->{
2025-09-16T23:46:10.392012Z	      _id,
2025-09-16T23:46:10.392138Z	      name,
2025-09-16T23:46:10.392267Z	      "slug": slug.current,
2025-09-16T23:46:10.392378Z	      logo
2025-09-16T23:46:10.392526Z	    },
2025-09-16T23:46:10.392603Z	    relatedBrands[]->{
2025-09-16T23:46:10.392662Z	      _id,
2025-09-16T23:46:10.392775Z	      name,
2025-09-16T23:46:10.39289Z	      "slug": slug.current,
2025-09-16T23:46:10.393048Z	      logo
2025-09-16T23:46:10.393164Z	    },
2025-09-16T23:46:10.393337Z	    targetMarket,
2025-09-16T23:46:10.393482Z	    complexity,
2025-09-16T23:46:10.393596Z	    publishedAt,
2025-09-16T23:46:10.393722Z	    isPublished,
2025-09-16T23:46:10.393829Z	    isFeatured,
2025-09-16T23:46:10.393971Z	    viewCount,
2025-09-16T23:46:10.394243Z	    _createdAt,
2025-09-16T23:46:10.394329Z	    _updatedAt
2025-09-16T23:46:10.394596Z	  
2025-09-16T23:46:10.394704Z	      },
2025-09-16T23:46:10.394876Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:46:10.394955Z	    }
2025-09-16T23:46:10.395032Z	  
2025-09-16T23:46:10.395164Z	Query parameters: {
2025-09-16T23:46:10.395268Z	  limit: 4,
2025-09-16T23:46:10.395356Z	  offset: 0,
2025-09-16T23:46:10.395447Z	  targetMarket: undefined,
2025-09-16T23:46:10.395555Z	  brand: 'Electronicon',
2025-09-16T23:46:10.395693Z	  featured: undefined
2025-09-16T23:46:10.39581Z	}
2025-09-16T23:46:10.395907Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:46:10.396012Z	Products fetch result: {
2025-09-16T23:46:10.396109Z	  totalProducts: 2,
2025-09-16T23:46:10.396202Z	  fetchedProducts: 2,
2025-09-16T23:46:10.396307Z	  firstProduct: {
2025-09-16T23:46:10.396406Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:46:10.396755Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:46:10.396857Z	    _type: 'product',
2025-09-16T23:46:10.397038Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:46:10.397106Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:46:10.39726Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:46:10.397336Z	    image: null,
2025-09-16T23:46:10.397393Z	    inventory: {
2025-09-16T23:46:10.397534Z	      inStock: true,
2025-09-16T23:46:10.397731Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:46:10.397807Z	      quantity: 0,
2025-09-16T23:46:10.397866Z	      status: 'in_stock',
2025-09-16T23:46:10.398052Z	      warehouse: null
2025-09-16T23:46:10.398204Z	    },
2025-09-16T23:46:10.398335Z	    isActive: true,
2025-09-16T23:46:10.398479Z	    isFeatured: false,
2025-09-16T23:46:10.398555Z	    isNew: false,
2025-09-16T23:46:10.398615Z	    partNumber: '99999',
2025-09-16T23:46:10.398822Z	    pricing: {
2025-09-16T23:46:10.398893Z	      currency: 'CNY',
2025-09-16T23:46:10.398951Z	      leadTime: null,
2025-09-16T23:46:10.399089Z	      moq: null,
2025-09-16T23:46:10.39923Z	      price: null,
2025-09-16T23:46:10.399319Z	      tiers: null
2025-09-16T23:46:10.399447Z	    },
2025-09-16T23:46:10.399532Z	    shortDescription: null,
2025-09-16T23:46:10.399646Z	    slug: '99999',
2025-09-16T23:46:10.399795Z	    title: '99999'
2025-09-16T23:46:10.399954Z	  }
2025-09-16T23:46:10.40003Z	}
2025-09-16T23:46:10.400088Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:10.400291Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-16T23:46:10.40045Z	Fetching products with query: 
2025-09-16T23:46:10.400577Z	    {
2025-09-16T23:46:10.400696Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-16T23:46:10.400803Z	        
2025-09-16T23:46:10.400905Z	    _id,
2025-09-16T23:46:10.401012Z	    _type,
2025-09-16T23:46:10.401116Z	    partNumber,
2025-09-16T23:46:10.401215Z	    "slug": slug.current,
2025-09-16T23:46:10.40132Z	    title,
2025-09-16T23:46:10.401433Z	    shortDescription,
2025-09-16T23:46:10.401541Z	    image,
2025-09-16T23:46:10.401652Z	    brand->{
2025-09-16T23:46:10.401804Z	      name,
2025-09-16T23:46:10.40197Z	      "slug": slug.current,
2025-09-16T23:46:10.402103Z	      logo
2025-09-16T23:46:10.402205Z	    },
2025-09-16T23:46:10.402361Z	    category->{
2025-09-16T23:46:10.402499Z	      name,
2025-09-16T23:46:10.402608Z	      "slug": slug.current
2025-09-16T23:46:10.402744Z	    },
2025-09-16T23:46:10.402854Z	    pricing{
2025-09-16T23:46:10.402952Z	      currency,
2025-09-16T23:46:10.403056Z	      tiers[]{
2025-09-16T23:46:10.403154Z	        quantity,
2025-09-16T23:46:10.40325Z	        price,
2025-09-16T23:46:10.403366Z	        unit
2025-09-16T23:46:10.403467Z	      },
2025-09-16T23:46:10.403561Z	      moq,
2025-09-16T23:46:10.403657Z	      leadTime,
2025-09-16T23:46:10.403789Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-16T23:46:10.403974Z	      "price": tiers[0].price,
2025-09-16T23:46:10.404067Z	      "currency": coalesce(currency, "CNY")
2025-09-16T23:46:10.404147Z	    },
2025-09-16T23:46:10.404251Z	    inventory{
2025-09-16T23:46:10.404353Z	      quantity,
2025-09-16T23:46:10.404461Z	      status,
2025-09-16T23:46:10.404567Z	      warehouse,
2025-09-16T23:46:10.404661Z	      lastUpdated,
2025-09-16T23:46:10.405026Z	      // 兼容字段：转换状态为布尔值
2025-09-16T23:46:10.405131Z	      "inStock": status == "in_stock",
2025-09-16T23:46:10.405274Z	      "quantity": coalesce(quantity, 0)
2025-09-16T23:46:10.405409Z	    },
2025-09-16T23:46:10.405554Z	    isActive,
2025-09-16T23:46:10.405634Z	    isFeatured,
2025-09-16T23:46:10.405778Z	    isNew,
2025-09-16T23:46:10.405858Z	    _createdAt,
2025-09-16T23:46:10.405919Z	    _updatedAt
2025-09-16T23:46:10.406093Z	  
2025-09-16T23:46:10.406203Z	      },
2025-09-16T23:46:10.406304Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-16T23:46:10.406428Z	    }
2025-09-16T23:46:10.406533Z	  
2025-09-16T23:46:10.406727Z	Query parameters: {
2025-09-16T23:46:10.406835Z	  limit: 8,
2025-09-16T23:46:10.40701Z	  offset: 0,
2025-09-16T23:46:10.407164Z	  category: undefined,
2025-09-16T23:46:10.407249Z	  brand: 'Electronicon',
2025-09-16T23:46:10.407355Z	  featured: undefined
2025-09-16T23:46:10.407803Z	}
2025-09-16T23:46:10.408034Z	Fetching solutions with query: 
2025-09-16T23:46:10.408257Z	    {
2025-09-16T23:46:10.408404Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-16T23:46:10.408526Z	        
2025-09-16T23:46:10.408633Z	    _id,
2025-09-16T23:46:10.408764Z	    title,
2025-09-16T23:46:10.408867Z	    "slug": slug.current,
2025-09-16T23:46:10.409136Z	    summary,
2025-09-16T23:46:10.409223Z	    description,
2025-09-16T23:46:10.409462Z	    coverImage,
2025-09-16T23:46:10.409568Z	    primaryBrand->{
2025-09-16T23:46:10.409637Z	      _id,
2025-09-16T23:46:10.410064Z	      name,
2025-09-16T23:46:10.410158Z	      "slug": slug.current,
2025-09-16T23:46:10.41035Z	      logo
2025-09-16T23:46:10.410538Z	    },
2025-09-16T23:46:10.410823Z	    relatedBrands[]->{
2025-09-16T23:46:10.411124Z	      _id,
2025-09-16T23:46:10.411572Z	      name,
2025-09-16T23:46:10.411752Z	      "slug": slug.current,
2025-09-16T23:46:10.412155Z	      logo
2025-09-16T23:46:10.412393Z	    },
2025-09-16T23:46:10.412626Z	    targetMarket,
2025-09-16T23:46:10.412829Z	    complexity,
2025-09-16T23:46:10.413287Z	    publishedAt,
2025-09-16T23:46:10.41369Z	    isPublished,
2025-09-16T23:46:10.413909Z	    isFeatured,
2025-09-16T23:46:10.414028Z	    viewCount,
2025-09-16T23:46:10.4147Z	    _createdAt,
2025-09-16T23:46:10.414848Z	    _updatedAt
2025-09-16T23:46:10.414991Z	  
2025-09-16T23:46:10.415099Z	      },
2025-09-16T23:46:10.415207Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-16T23:46:10.41534Z	    }
2025-09-16T23:46:10.415464Z	  
2025-09-16T23:46:10.415571Z	Query parameters: {
2025-09-16T23:46:10.415709Z	  limit: 4,
2025-09-16T23:46:10.415889Z	  offset: 0,
2025-09-16T23:46:10.416148Z	  targetMarket: undefined,
2025-09-16T23:46:10.416537Z	  brand: 'Electronicon',
2025-09-16T23:46:10.416734Z	  featured: undefined
2025-09-16T23:46:10.417174Z	}
2025-09-16T23:46:10.417336Z	✅ [getBrandData] Found brand: Electronicon
2025-09-16T23:46:10.417842Z	Products fetch result: {
2025-09-16T23:46:10.418378Z	  totalProducts: 2,
2025-09-16T23:46:10.418828Z	  fetchedProducts: 2,
2025-09-16T23:46:10.419052Z	  firstProduct: {
2025-09-16T23:46:10.419178Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-16T23:46:10.41942Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-16T23:46:10.419861Z	    _type: 'product',
2025-09-16T23:46:10.419988Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-16T23:46:10.420093Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-16T23:46:10.420193Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-16T23:46:10.420293Z	    image: null,
2025-09-16T23:46:10.420668Z	    inventory: {
2025-09-16T23:46:10.420829Z	      inStock: true,
2025-09-16T23:46:10.420962Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-16T23:46:10.421215Z	      quantity: 0,
2025-09-16T23:46:10.421409Z	      status: 'in_stock',
2025-09-16T23:46:10.421593Z	      warehouse: null
2025-09-16T23:46:10.421724Z	    },
2025-09-16T23:46:10.42183Z	    isActive: true,
2025-09-16T23:46:10.42194Z	    isFeatured: false,
2025-09-16T23:46:10.422046Z	    isNew: false,
2025-09-16T23:46:10.422159Z	    partNumber: '99999',
2025-09-16T23:46:10.422256Z	    pricing: {
2025-09-16T23:46:10.422431Z	      currency: 'CNY',
2025-09-16T23:46:10.422552Z	      leadTime: null,
2025-09-16T23:46:10.422902Z	      moq: null,
2025-09-16T23:46:10.423472Z	      price: null,
2025-09-16T23:46:10.423638Z	      tiers: null
2025-09-16T23:46:10.424086Z	    },
2025-09-16T23:46:10.424354Z	    shortDescription: null,
2025-09-16T23:46:10.424609Z	    slug: '99999',
2025-09-16T23:46:10.424979Z	    title: '99999'
2025-09-16T23:46:10.425149Z	  }
2025-09-16T23:46:10.425329Z	}
2025-09-16T23:46:10.425431Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-16T23:46:10.425533Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-16T23:46:10.425642Z	Fetching products with query: 
2025-09-16T23:46:10.425765Z	    {
2025-09-16T23:46:10.425886Z	      "productst/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.42598Z	
2025-09-16T23:46:10.42608Z	Error occurred prerendering page "/de/solutions/supplysolution". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:10.426196Z	
2025-09-16T23:46:10.426302Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.426646Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.427066Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.427478Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.427714Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.428023Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.428179Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.42829Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.428412Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.428494Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.428563Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.428668Z	
2025-09-16T23:46:10.428798Z	Error occurred prerendering page "/de/solutions/concrol". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:10.428898Z	
2025-09-16T23:46:10.428993Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.429107Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.429255Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.429371Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.429552Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.429711Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.429824Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.42993Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.430029Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.430119Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.43022Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.430301Z	
2025-09-16T23:46:10.430575Z	Error occurred prerendering page "/de/solutions/charger". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:10.431059Z	
2025-09-16T23:46:10.431599Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.432084Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.432741Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.433062Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.433347Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.433497Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.433567Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.433624Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.433711Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.433791Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.433848Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.433903Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:10.433958Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:10.434011Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:10.434068Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:10.434127Z	}
2025-09-16T23:46:10.434191Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:10.434247Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:10.434301Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:10.434355Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:10.43441Z	}
2025-09-16T23:46:10.434471Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.43453Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.434593Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.434662Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.434748Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.434809Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.434869Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.434927Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.434992Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.435059Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.43512Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:10.435189Z	  digest: '3820195337'
2025-09-16T23:46:10.435244Z	}
2025-09-16T23:46:10.435298Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:10.435364Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:10.435421Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:10.435487Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:10.435544Z	}
2025-09-16T23:46:10.435599Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.43566Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.435745Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.435812Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.435876Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.435933Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.435991Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.436056Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.43612Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.436177Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.436231Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:10.436289Z	  digest: '1870762441'
2025-09-16T23:46:10.436347Z	}
2025-09-16T23:46:10.436486Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:10.436577Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:10.43665Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:10.436722Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:10.436831Z	}
2025-09-16T23:46:10.436897Z	
2025-09-16T23:46:10.436959Z	Error occurred prerendering page "/de/solutions/infineon-aurix-automotive-solution". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:10.437022Z	
2025-09-16T23:46:10.437096Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.437155Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.437276Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.437391Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.437508Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.437574Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.437646Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.437729Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.437788Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.43785Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.437909Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.437963Z	
2025-09-16T23:46:10.438016Z	Error occurred prerendering page "/de/solutions/motodiriver". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:10.438076Z	
2025-09-16T23:46:10.438131Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.438187Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.438246Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.438302Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.438354Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.438407Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.43847Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.438525Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.43858Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.438664Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.438756Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.438822Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.438887Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.438948Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.439004Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.439065Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.43912Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.439173Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.439261Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.43932Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.439374Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.43943Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:10.439501Z	  digest: '1870762441'
2025-09-16T23:46:10.439557Z	}
2025-09-16T23:46:10.439614Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.439696Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.439762Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.439826Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.439894Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.439958Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.440015Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.44007Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.440125Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.44018Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.440234Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:10.440289Z	  digest: '1870762441'
2025-09-16T23:46:10.440345Z	}
2025-09-16T23:46:10.4404Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.440461Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.440522Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.440599Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.440721Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.440798Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.440856Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.440919Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.44099Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.441061Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.441122Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:10.441183Z	  digest: '1870762441'
2025-09-16T23:46:10.44124Z	}
2025-09-16T23:46:10.441307Z	
2025-09-16T23:46:10.441383Z	Error occurred prerendering page "/fr/solutions/99999". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:10.441448Z	
2025-09-16T23:46:10.441506Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.441584Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.441647Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.441719Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.441997Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.442069Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.442142Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.442207Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.442262Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.442324Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.44239Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.442457Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.442522Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.4426Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.442692Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.442765Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.442833Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.442889Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.442945Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.443025Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.443094Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.443148Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:10.443206Z	  digest: '1870762441'
2025-09-16T23:46:10.443262Z	}
2025-09-16T23:46:10.443317Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:10.443372Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:10.443426Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:10.44349Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:10.443548Z	}
2025-09-16T23:46:10.443609Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:10.443663Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:10.443733Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:10.443788Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:10.443857Z	}
2025-09-16T23:46:10.443914Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.443969Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.444023Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.444086Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.444144Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.444198Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.44425Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.444303Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.444355Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.444409Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.444469Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:10.444523Z	  digest: '1870762441'
2025-09-16T23:46:10.444576Z	}
2025-09-16T23:46:10.444629Z	
2025-09-16T23:46:10.444693Z	Error occurred prerendering page "/fr/solutions/concrol". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:10.444757Z	
2025-09-16T23:46:10.444811Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.444865Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.444931Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.444987Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.445041Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.4451Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.445153Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.445205Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.445265Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.445327Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.445382Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.445435Z	
2025-09-16T23:46:10.445496Z	Error occurred prerendering page "/fr/solutions/charger". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:10.445552Z	
2025-09-16T23:46:10.445606Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.445659Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.445726Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.445781Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.445835Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.445887Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.445942Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.445994Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.446047Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.446101Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.446153Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.446215Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.44627Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.44633Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.446392Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.446458Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.446513Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.446566Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.446623Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.446695Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.446761Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.446836Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:10.446892Z	  digest: '1870762441'
2025-09-16T23:46:10.44695Z	}
2025-09-16T23:46:10.447007Z	
2025-09-16T23:46:10.447062Z	Error occurred prerendering page "/fr/solutions/supplysolution". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:10.447121Z	
2025-09-16T23:46:10.447177Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.447233Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.447287Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.447343Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.447398Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.447462Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.44752Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.447576Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.447636Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.447712Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.44777Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.447826Z	
2025-09-16T23:46:10.447883Z	Error occurred prerendering page "/fr/solutions/motodiriver". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:10.448359Z	
2025-09-16T23:46:10.448436Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.448518Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.448729Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.448943Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.449024Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.449092Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.449156Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.449212Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.449273Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.449329Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.449385Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.449455Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.44952Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.449589Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.449647Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.449737Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.449806Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.449882Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.449942Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.449996Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.450051Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.450105Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:10.450161Z	  digest: '3820195337'
2025-09-16T23:46:10.45022Z	}
2025-09-16T23:46:10.450275Z	
2025-09-16T23:46:10.450329Z	Error occurred prerendering page "/fr/solutions/11111". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:10.450383Z	
2025-09-16T23:46:10.45045Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.450522Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.450592Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.450651Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.45097Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.45111Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.451217Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.451313Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.451418Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.451525Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.451618Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.451727Z	
2025-09-16T23:46:10.451838Z	Error occurred prerendering page "/fr/solutions/infineon-aurix-automotive-solution". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:10.451932Z	
2025-09-16T23:46:10.452017Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.452098Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.452179Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.45226Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.452338Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.452408Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.452499Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.452579Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.45266Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.452771Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.452863Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.452958Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:10.453056Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:10.453143Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:10.453229Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:10.453321Z	}
2025-09-16T23:46:10.453403Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:10.453485Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:10.453568Z	    at runNextTicks (node:internal/process/task_queues:60:5)
2025-09-16T23:46:10.453653Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:46:10.453782Z	    at process.processTimers (node:internal/timers:512:7)
2025-09-16T23:46:10.454107Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:10.454274Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:10.454388Z	}
2025-09-16T23:46:10.45469Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.454834Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.45493Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.455021Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.45511Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.455198Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.455286Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.455375Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.455465Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.455555Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.455643Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:10.455774Z	  digest: '1870762441'
2025-09-16T23:46:10.455872Z	}
2025-09-16T23:46:10.455961Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.456048Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.456135Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.45623Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.456331Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.456407Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.456504Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.456577Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.456663Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.45678Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.456874Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:10.456971Z	  digest: '1870762441'
2025-09-16T23:46:10.457069Z	}
2025-09-16T23:46:10.457154Z	
2025-09-16T23:46:10.457239Z	Error occurred prerendering page "/es/solutions/99999". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:10.457328Z	
2025-09-16T23:46:10.457415Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.4575Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.457582Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.457663Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.457777Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.457865Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.457956Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.458038Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.458117Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.458196Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.458279Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.45836Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.458451Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.458541Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.458625Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.458735Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.458825Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.458908Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.458997Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.459099Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.459193Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.459287Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:10.459365Z	  digest: '1870762441'
2025-09-16T23:46:10.459448Z	}
2025-09-16T23:46:10.459535Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.459626Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.459734Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.459869Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.459976Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.460073Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.460168Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.460262Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.46035Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.460442Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.460539Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:10.460635Z	  digest: '1870762441'
2025-09-16T23:46:10.460753Z	}
2025-09-16T23:46:10.460847Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:10.460935Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:10.461019Z	    at runNextTicks (node:internal/process/task_queues:60:5)
2025-09-16T23:46:10.461113Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:46:10.461204Z	    at process.processTimers (node:internal/timers:512:7)
2025-09-16T23:46:10.461298Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:10.461402Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:10.461508Z	}
2025-09-16T23:46:10.461608Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.461731Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.461836Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.461927Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.462026Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.462124Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.462222Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.462319Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.462404Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.462496Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.462602Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:10.462724Z	  digest: '1870762441'
2025-09-16T23:46:10.462828Z	}
2025-09-16T23:46:10.46293Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:10.463022Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:10.463113Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:10.46319Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:10.463263Z	}
2025-09-16T23:46:10.463347Z	
2025-09-16T23:46:10.463428Z	Error occurred prerendering page "/es/solutions/supplysolution". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:10.463535Z	
2025-09-16T23:46:10.463635Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.463767Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.463869Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.463969Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.464065Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.464156Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.464251Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.464345Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.464442Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.464537Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.464642Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.464749Z	
2025-09-16T23:46:10.464846Z	Error occurred prerendering page "/es/solutions/11111". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:10.464937Z	
2025-09-16T23:46:10.465029Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.465125Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.465217Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.465313Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.465405Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.465497Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.465586Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.465689Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.465785Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.465886Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.46598Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.466072Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.46617Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.466258Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.466357Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.466478Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.466564Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.46666Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.46677Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.466868Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.466957Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.467053Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:10.46714Z	  digest: '1870762441'
2025-09-16T23:46:10.467242Z	}
2025-09-16T23:46:10.467336Z	
2025-09-16T23:46:10.467433Z	Error occurred prerendering page "/es/solutions/concrol". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:10.46758Z	
2025-09-16T23:46:10.467688Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.4678Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.467898Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.467997Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.468083Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.468167Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.46826Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.468358Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.468452Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.46856Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.468652Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.468775Z	
2025-09-16T23:46:10.468869Z	Error occurred prerendering page "/es/solutions/motodiriver". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:10.468969Z	
2025-09-16T23:46:10.46906Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.469141Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.469347Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.469451Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.469547Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.469644Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.469766Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.46987Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.469966Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.470054Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.470147Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.470235Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:10.470331Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:10.470455Z	    at runNextTicks (node:internal/process/task_queues:60:5)
2025-09-16T23:46:10.470561Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:46:10.470659Z	    at process.processTimers (node:internal/timers:512:7)
2025-09-16T23:46:10.470775Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:10.470875Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:10.470971Z	}
2025-09-16T23:46:10.471062Z	
2025-09-16T23:46:10.471152Z	Error occurred prerendering page "/es/solutions/charger". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:10.47124Z	
2025-09-16T23:46:10.471313Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.471396Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.471492Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.471596Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.471721Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.471817Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.471915Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.472022Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.472116Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.472213Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.472315Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.47241Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:10.472505Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:10.472606Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:10.472716Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:10.472815Z	}
2025-09-16T23:46:10.472908Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.472999Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.473094Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.473204Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.473295Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.473386Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.473492Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.473579Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.473662Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.473773Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.473855Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:10.473945Z	  digest: '3820195337'
2025-09-16T23:46:10.474038Z	}
2025-09-16T23:46:10.474126Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.474204Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.47428Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.474366Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.474458Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.474547Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.474636Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.474743Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.474834Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.474919Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.474999Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:10.475076Z	  digest: '1870762441'
2025-09-16T23:46:10.475159Z	}
2025-09-16T23:46:10.475248Z	
2025-09-16T23:46:10.475334Z	Error occurred prerendering page "/es/solutions/infineon-aurix-automotive-solution". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:10.475421Z	
2025-09-16T23:46:10.475509Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.475599Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.475707Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.475799Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.47588Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.47597Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.476054Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.476134Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.476212Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.476293Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.476373Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.476451Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.476524Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.476609Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.476712Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.476806Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.476891Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.476978Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.477064Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.477148Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.477231Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.477317Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:10.477413Z	  digest: '1870762441'
2025-09-16T23:46:10.47751Z	}
2025-09-16T23:46:10.477609Z	
2025-09-16T23:46:10.477721Z	Error occurred prerendering page "/ru/solutions/99999". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:10.477824Z	
2025-09-16T23:46:10.47792Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.478008Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.478097Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.478199Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.478295Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.478416Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.47852Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.478617Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.478956Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.479085Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.479445Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.479579Z	
2025-09-16T23:46:10.479655Z	Error occurred prerendering page "/ru/solutions/11111". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:10.479973Z	
2025-09-16T23:46:10.480144Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.480243Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.480306Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.480616Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.48075Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.480819Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.480891Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.480948Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.481004Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.481061Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.481283Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.481588Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.48171Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.481944Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.482282Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.482798Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.483213Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.483326Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.483417Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.483508Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.483588Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.484013Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:10.484202Z	  digest: '1870762441'
2025-09-16T23:46:10.484345Z	}
2025-09-16T23:46:10.484459Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:10.484552Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:10.484626Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:10.484742Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:10.48486Z	}
2025-09-16T23:46:10.485083Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.485425Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.485539Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.485602Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.485658Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.48575Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.48581Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.485868Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.485923Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.485988Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.486047Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:10.486108Z	  digest: '1870762441'
2025-09-16T23:46:10.486161Z	}
2025-09-16T23:46:10.486213Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:10.486266Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:10.486318Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:10.486387Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:10.486459Z	}
2025-09-16T23:46:10.487573Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.487723Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.487822Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.487893Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.487949Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.488015Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.488071Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.488127Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.488181Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.488238Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.488294Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:10.48835Z	  digest: '3820195337'
2025-09-16T23:46:10.488411Z	}
2025-09-16T23:46:10.488476Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.488534Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.488589Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.488644Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.488742Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.488809Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.488866Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.488921Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.488974Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.489033Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.48909Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:10.489144Z	  digest: '1870762441'
2025-09-16T23:46:10.4892Z	}
2025-09-16T23:46:10.489256Z	
2025-09-16T23:46:10.489316Z	Error occurred prerendering page "/ru/solutions/supplysolution". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:10.489385Z	
2025-09-16T23:46:10.489451Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.489523Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.489604Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.48969Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.489762Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.489822Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.489878Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.489934Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.489996Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.490056Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.490117Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.490171Z	
2025-09-16T23:46:10.490234Z	Error occurred prerendering page "/ru/solutions/concrol". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:10.490289Z	
2025-09-16T23:46:10.490352Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.490421Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.490484Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.490543Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.490705Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.490789Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.49087Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.490944Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.491013Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.491088Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.491156Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.491225Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.491285Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.491355Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.491426Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.491486Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.491542Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.491602Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.491658Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.491756Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.491816Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.491872Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:10.491937Z	  digest: '1870762441'
2025-09-16T23:46:10.491995Z	}
2025-09-16T23:46:10.492055Z	
2025-09-16T23:46:10.49211Z	Error occurred prerendering page "/ru/solutions/motodiriver". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:10.492169Z	
2025-09-16T23:46:10.492223Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.492289Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.492348Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.49241Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.492468Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.492521Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.492574Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.492629Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.492709Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.492772Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.492827Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.49288Z	
2025-09-16T23:46:10.492935Z	Error occurred prerendering page "/ru/solutions/infineon-aurix-automotive-solution". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:10.492991Z	
2025-09-16T23:46:10.493045Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.49311Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.493173Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.493228Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.493288Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.493344Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.493405Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.49346Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.493514Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.493569Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.493637Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.493726Z	
2025-09-16T23:46:10.493799Z	Error occurred prerendering page "/ru/solutions/charger". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:10.493858Z	
2025-09-16T23:46:10.493958Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.494027Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.494084Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.494142Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.494206Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.494262Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.494317Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.494371Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.494436Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.494497Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.494552Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.494607Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.494665Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.49476Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.494828Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.494886Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.494944Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.495008Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.495077Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.495136Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.495203Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.495263Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:10.495327Z	  digest: '1870762441'
2025-09-16T23:46:10.495455Z	}
2025-09-16T23:46:10.495515Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.495577Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.495633Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.495718Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.495787Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.495843Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.495905Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.495966Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.496024Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.496082Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.496136Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:10.49619Z	  digest: '1870762441'
2025-09-16T23:46:10.496261Z	}
2025-09-16T23:46:10.496326Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.496395Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.496467Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.496531Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.496595Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.496651Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.49674Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.496806Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.496864Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.49692Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.496982Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:10.497047Z	  digest: '1870762441'
2025-09-16T23:46:10.497104Z	}
2025-09-16T23:46:10.497159Z	
2025-09-16T23:46:10.497221Z	Error occurred prerendering page "/ar/solutions/99999". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:10.497283Z	
2025-09-16T23:46:10.49734Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.497396Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.497463Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.49752Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.497582Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.497645Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.497717Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.497775Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.497834Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.49789Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.497953Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.498015Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:10.49807Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:10.498131Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:10.498191Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:10.498262Z	}
2025-09-16T23:46:10.498334Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:10.498415Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:10.498486Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:10.49855Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:10.498608Z	}
2025-09-16T23:46:10.498671Z	
2025-09-16T23:46:10.498744Z	Error occurred prerendering page "/ar/solutions/concrol". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:10.498835Z	
2025-09-16T23:46:10.498909Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.498971Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.499028Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.49909Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.499147Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.499202Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.499278Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.499344Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.499415Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.499478Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.499542Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.499604Z	
2025-09-16T23:46:10.49966Z	Error occurred prerendering page "/ar/solutions/supplysolution". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:10.499743Z	
2025-09-16T23:46:10.499799Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.499857Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.49992Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.499975Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.500032Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.500097Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.500166Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.500233Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.500303Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.500362Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.500425Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.500482Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.500546Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.500602Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.500662Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.500737Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.500806Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.500863Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.500922Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.500976Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.501046Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.501109Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:10.501171Z	  digest: '1870762441'
2025-09-16T23:46:10.501225Z	}
2025-09-16T23:46:10.501289Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:10.501349Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:10.501429Z	    at runNextTicks (node:internal/process/task_queues:60:5)
2025-09-16T23:46:10.501492Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:46:10.501547Z	    at process.processTimers (node:internal/timers:512:7)
2025-09-16T23:46:10.50161Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:10.501667Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:10.50174Z	}
2025-09-16T23:46:10.501803Z	
2025-09-16T23:46:10.501859Z	Error occurred prerendering page "/ar/solutions/11111". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:10.501919Z	
2025-09-16T23:46:10.50198Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.502052Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.502111Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.502188Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.502247Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.502427Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.502501Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.502563Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.502629Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.502701Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.50276Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.502871Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.502947Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.503014Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.503077Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.503141Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.503204Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.503266Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.503328Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.503391Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.503453Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.503511Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:10.503574Z	  digest: '1870762441'
2025-09-16T23:46:10.503637Z	}
2025-09-16T23:46:10.503709Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.503768Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.503831Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.503889Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.503952Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.504022Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.504083Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.504144Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.504207Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.504271Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.504335Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:10.504413Z	  digest: '1870762441'
2025-09-16T23:46:10.504477Z	}
2025-09-16T23:46:10.504542Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:10.504602Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:10.504659Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:10.504732Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:10.504792Z	}
2025-09-16T23:46:10.504853Z	
2025-09-16T23:46:10.50491Z	Error occurred prerendering page "/ar/solutions/charger". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:10.50497Z	
2025-09-16T23:46:10.505032Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.505097Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.505152Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.505214Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.50527Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.505332Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.505391Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.50546Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.505517Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.505573Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.505634Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.505701Z	
2025-09-16T23:46:10.505758Z	Error occurred prerendering page "/ar/solutions/motodiriver". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:10.505819Z	
2025-09-16T23:46:10.50588Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, markDefs, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.505946Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.50601Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.506067Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.50613Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.506193Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.50625Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.506313Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.506379Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.506442Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.506505Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.506567Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:10.506629Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:10.506698Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:10.506761Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:10.506817Z	}
2025-09-16T23:46:10.506875Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.506932Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.507001Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.507063Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.507124Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.507184Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.507253Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.507329Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.507395Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.507474Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.507546Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854) {
2025-09-16T23:46:10.507602Z	  digest: '3820195337'
2025-09-16T23:46:10.507668Z	}
2025-09-16T23:46:10.50782Z	Error fetching solution data: l [SanityError]: Solution not found
2025-09-16T23:46:10.507886Z	    at p (/opt/buildhome/repo/.next/server/chunks/439.js:221:70)
2025-09-16T23:46:10.507944Z	    at async N (/opt/buildhome/repo/.next/server/app/[locale]/solutions/[slug]/page.js:1:5519) {
2025-09-16T23:46:10.508013Z	  code: 'SOLUTION_NOT_FOUND'
2025-09-16T23:46:10.508068Z	}
2025-09-16T23:46:10.508132Z	
2025-09-16T23:46:10.508195Z	Error occurred prerendering page "/ar/solutions/infineon-aurix-automotive-solution". Read more: https://nextjs.org/docs/messages/prerender-error
2025-09-16T23:46:10.508256Z	
2025-09-16T23:46:10.508311Z	Error: Objects are not valid as a React child (found: object with keys {_key, _type, children, style}). If you meant to render a collection of children, use an array instead.
2025-09-16T23:46:10.508372Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:65205)
2025-09-16T23:46:10.50844Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.508499Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.508562Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.508618Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.508687Z	    at nM (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:58561)
2025-09-16T23:46:10.508749Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64547)
2025-09-16T23:46:10.508808Z	    at nB (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:67539)
2025-09-16T23:46:10.508865Z	    at nD (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:66681)
2025-09-16T23:46:10.508921Z	    at nN (/opt/buildhome/repo/node_modules/next/dist/compiled/next-server/app-page.runtime.prod.js:12:64854)
2025-09-16T23:46:10.508982Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.509041Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.509097Z	Error fetching brand solutions data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.509152Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.509208Z	    at f (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/solutions/page.js:1:4481)
2025-09-16T23:46:10.509264Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:10.509322Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.509377Z	}
2025-09-16T23:46:10.509453Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.509519Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.509576Z	Error fetching brand solutions data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.509631Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.509704Z	    at f (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/solutions/page.js:1:4481)
2025-09-16T23:46:10.509776Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:10.509836Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.509897Z	}
2025-09-16T23:46:10.509954Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.510015Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.510069Z	Error fetching brand solutions data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.510125Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.510182Z	    at f (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/solutions/page.js:1:4481)
2025-09-16T23:46:10.510235Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:10.510291Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.510347Z	}
2025-09-16T23:46:10.510414Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.510471Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.510524Z	Error fetching brand solutions data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.510579Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.510641Z	    at f (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/solutions/page.js:1:4481)
2025-09-16T23:46:10.510709Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:10.510772Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.510834Z	}
2025-09-16T23:46:10.510897Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.510959Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.51102Z	Error fetching brand solutions data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.511074Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.511133Z	    at f (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/solutions/page.js:1:4481)
2025-09-16T23:46:10.511188Z	    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-09-16T23:46:10.511245Z	    at runNextTicks (node:internal/process/task_queues:64:3)
2025-09-16T23:46:10.511302Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:46:10.511359Z	    at process.processTimers (node:internal/timers:512:7) {
2025-09-16T23:46:10.511424Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.511479Z	}
2025-09-16T23:46:10.511541Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.511603Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.511662Z	Error fetching brand solutions data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.511732Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.511793Z	    at f (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/solutions/page.js:1:4481)
2025-09-16T23:46:10.511854Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:10.511909Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.511962Z	}
2025-09-16T23:46:10.512028Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.512108Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.512174Z	Error fetching brand solutions data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.512237Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.512308Z	    at f (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/solutions/page.js:1:4481)
2025-09-16T23:46:10.512409Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:10.512475Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.512532Z	}
2025-09-16T23:46:10.512588Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.512644Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.512712Z	Error fetching brand solutions data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.51277Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.512831Z	    at f (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/solutions/page.js:1:4481)
2025-09-16T23:46:10.512894Z	    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-09-16T23:46:10.512976Z	    at runNextTicks (node:internal/process/task_queues:64:3)
2025-09-16T23:46:10.513041Z	    at process.processTimers (node:internal/timers:509:9) {
2025-09-16T23:46:10.513097Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.513153Z	}
2025-09-16T23:46:10.513215Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.513274Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.513336Z	Error fetching brand solutions data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.513398Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.51346Z	    at f (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/solutions/page.js:1:4481)
2025-09-16T23:46:10.513514Z	    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-09-16T23:46:10.513576Z	    at runNextTicks (node:internal/process/task_queues:64:3)
2025-09-16T23:46:10.513632Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:46:10.513705Z	    at process.processTimers (node:internal/timers:512:7) {
2025-09-16T23:46:10.513764Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.513827Z	}
2025-09-16T23:46:10.513886Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.513952Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.51401Z	Error fetching brand solutions data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.514078Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.514145Z	    at f (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/solutions/page.js:1:4481)
2025-09-16T23:46:10.514208Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:10.514269Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.514331Z	}
2025-09-16T23:46:10.514394Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.51449Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.514558Z	Error fetching brand solutions data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.514618Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.514685Z	    at f (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/solutions/page.js:1:4481)
2025-09-16T23:46:10.514756Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:10.514834Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.51494Z	}
2025-09-16T23:46:10.515005Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.515072Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.515135Z	Error fetching brand solutions data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.515198Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.515273Z	    at f (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/solutions/page.js:1:4481)
2025-09-16T23:46:10.515347Z	    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-09-16T23:46:10.515437Z	    at runNextTicks (node:internal/process/task_queues:64:3)
2025-09-16T23:46:10.515525Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:46:10.515598Z	    at process.processTimers (node:internal/timers:512:7) {
2025-09-16T23:46:10.515655Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.51588Z	}
2025-09-16T23:46:10.51601Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.516122Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.516228Z	Error fetching brand solutions data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.516325Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.516447Z	    at f (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/solutions/page.js:1:4481)
2025-09-16T23:46:10.516562Z	    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-09-16T23:46:10.516698Z	    at runNextTicks (node:internal/process/task_queues:64:3)
2025-09-16T23:46:10.516812Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:46:10.516916Z	    at process.processTimers (node:internal/timers:512:7) {
2025-09-16T23:46:10.517021Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.517126Z	}
2025-09-16T23:46:10.517246Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.517341Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.517402Z	Error fetching brand solutions data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.517466Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.517525Z	    at f (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/solutions/page.js:1:4481)
2025-09-16T23:46:10.51758Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:10.517654Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.517748Z	}
2025-09-16T23:46:10.517809Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.517873Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.51793Z	Error fetching brand solutions data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.517995Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.518063Z	    at f (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/solutions/page.js:1:4481)
2025-09-16T23:46:10.518121Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:10.518184Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.518239Z	}
2025-09-16T23:46:10.518294Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.518358Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.518417Z	Error fetching brand solutions data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.518487Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.518549Z	    at f (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/solutions/page.js:1:4481)
2025-09-16T23:46:10.518606Z	    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-09-16T23:46:10.518665Z	    at runNextTicks (node:internal/process/task_queues:64:3)
2025-09-16T23:46:10.518948Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:46:10.519081Z	    at process.processTimers (node:internal/timers:512:7) {
2025-09-16T23:46:10.519194Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.51931Z	}
2025-09-16T23:46:10.519419Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.519541Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.519854Z	Error fetching brand solutions data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.519981Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.520087Z	    at f (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/solutions/page.js:1:4481)
2025-09-16T23:46:10.520204Z	    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-09-16T23:46:10.520315Z	    at runNextTicks (node:internal/process/task_queues:64:3)
2025-09-16T23:46:10.520627Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:46:10.520769Z	    at process.processTimers (node:internal/timers:512:7) {
2025-09-16T23:46:10.520841Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.5209Z	}
2025-09-16T23:46:10.520966Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.521024Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.52108Z	Error fetching brand solutions data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.521142Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.521199Z	    at f (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/solutions/page.js:1:4481)
2025-09-16T23:46:10.521266Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:10.521329Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.521384Z	}
2025-09-16T23:46:10.521449Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.521512Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.52157Z	Error fetching brand solutions data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.521638Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.521732Z	    at f (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/solutions/page.js:1:4481)
2025-09-16T23:46:10.521795Z	    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-09-16T23:46:10.521858Z	    at runNextTicks (node:internal/process/task_queues:64:3)
2025-09-16T23:46:10.521923Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:46:10.521985Z	    at process.processTimers (node:internal/timers:512:7) {
2025-09-16T23:46:10.522041Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.522107Z	}
2025-09-16T23:46:10.522165Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.522223Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.522285Z	Error fetching brand solutions data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.522345Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.522409Z	    at f (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/solutions/page.js:1:4481)
2025-09-16T23:46:10.522469Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:10.522523Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.522587Z	}
2025-09-16T23:46:10.522643Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.522735Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.522801Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.522864Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.522926Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619)
2025-09-16T23:46:10.522989Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:10.523043Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.523105Z	}
2025-09-16T23:46:10.52316Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.523221Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.523277Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.523331Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.523398Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619)
2025-09-16T23:46:10.523464Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:10.523524Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.523579Z	}
2025-09-16T23:46:10.523647Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.523737Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.523802Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.52386Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.523934Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619)
2025-09-16T23:46:10.52399Z	    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-09-16T23:46:10.524056Z	    at runNextTicks (node:internal/process/task_queues:64:3)
2025-09-16T23:46:10.524124Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:46:10.524189Z	    at process.processTimers (node:internal/timers:512:7) {
2025-09-16T23:46:10.524247Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.524303Z	}
2025-09-16T23:46:10.524359Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.524419Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.524475Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.524527Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.524582Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619)
2025-09-16T23:46:10.524644Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:10.524721Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.524778Z	}
2025-09-16T23:46:10.524834Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.524892Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.524951Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.525007Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.525067Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619)
2025-09-16T23:46:10.525121Z	    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-09-16T23:46:10.525177Z	    at runNextTicks (node:internal/process/task_queues:64:3)
2025-09-16T23:46:10.525233Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:46:10.52529Z	    at process.processTimers (node:internal/timers:512:7) {
2025-09-16T23:46:10.525343Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.525396Z	}
2025-09-16T23:46:10.525454Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.525509Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.525565Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.525621Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.525691Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619)
2025-09-16T23:46:10.52575Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:10.525808Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.525875Z	}
2025-09-16T23:46:10.525938Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.526004Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.526068Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.526124Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.526193Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619) {
2025-09-16T23:46:10.526257Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.526316Z	}
2025-09-16T23:46:10.526373Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.526449Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.526509Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.526567Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.526632Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619)
2025-09-16T23:46:10.526714Z	    at runNextTicks (node:internal/process/task_queues:60:5)
2025-09-16T23:46:10.526782Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:46:10.526844Z	    at process.processTimers (node:internal/timers:512:7) {
2025-09-16T23:46:10.526907Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.526973Z	}
2025-09-16T23:46:10.52703Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.527087Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.527149Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.527205Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.527277Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619)
2025-09-16T23:46:10.527342Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:10.527398Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.527453Z	}
2025-09-16T23:46:10.527517Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.527598Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.527706Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.527814Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.52792Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619)
2025-09-16T23:46:10.528025Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:10.52813Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.528241Z	}
2025-09-16T23:46:10.528348Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.528443Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.528535Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.528622Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.528741Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619)
2025-09-16T23:46:10.528835Z	    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-09-16T23:46:10.52892Z	    at runNextTicks (node:internal/process/task_queues:64:3)
2025-09-16T23:46:10.529008Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:46:10.529094Z	    at process.processTimers (node:internal/timers:512:7) {
2025-09-16T23:46:10.529156Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.529251Z	}
2025-09-16T23:46:10.52935Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.529455Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.52955Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.52966Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.529784Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619)
2025-09-16T23:46:10.529898Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:10.530002Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.530118Z	}
2025-09-16T23:46:10.530216Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.530317Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.530411Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.530518Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.530634Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619)
2025-09-16T23:46:10.530767Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:10.530874Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.530968Z	}
2025-09-16T23:46:10.531061Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.531174Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.531274Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.531374Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.531473Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619)
2025-09-16T23:46:10.531577Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:10.531723Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.531832Z	}
2025-09-16T23:46:10.531936Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.532043Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.532187Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.532273Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.532382Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619)
2025-09-16T23:46:10.532464Z	    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-09-16T23:46:10.532535Z	    at runNextTicks (node:internal/process/task_queues:64:3)
2025-09-16T23:46:10.532635Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:46:10.532743Z	    at process.processTimers (node:internal/timers:512:7) {
2025-09-16T23:46:10.532855Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.532959Z	}
2025-09-16T23:46:10.533274Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.533394Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.533809Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.534028Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.534144Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619)
2025-09-16T23:46:10.534218Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:10.534293Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.534356Z	}
2025-09-16T23:46:10.534417Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.534473Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.534527Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.53459Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.534665Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619)
2025-09-16T23:46:10.53474Z	    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-09-16T23:46:10.534823Z	    at runNextTicks (node:internal/process/task_queues:64:3)
2025-09-16T23:46:10.534887Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-16T23:46:10.534944Z	    at process.processTimers (node:internal/timers:512:7) {
2025-09-16T23:46:10.535006Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.53507Z	}
2025-09-16T23:46:10.535134Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.535189Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.535251Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.535313Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.535369Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619)
2025-09-16T23:46:10.535435Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:10.535499Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.535562Z	}
2025-09-16T23:46:10.535624Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.535699Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.535764Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.535828Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.535889Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619)
2025-09-16T23:46:10.535944Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:10.535999Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.536057Z	}
2025-09-16T23:46:10.536119Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.536179Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-16T23:46:10.536238Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-16T23:46:10.536294Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-16T23:46:10.536349Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619)
2025-09-16T23:46:10.536404Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-16T23:46:10.536463Z	  digest: 'NEXT_NOT_FOUND'
2025-09-16T23:46:10.536526Z	}
2025-09-16T23:46:10.53658Z	
2025-09-16T23:46:10.536642Z	> Export encountered errors on following paths:
2025-09-16T23:46:10.536714Z		/[locale]/solutions/[slug]/page: /ar/solutions/11111
2025-09-16T23:46:10.536782Z		/[locale]/solutions/[slug]/page: /ar/solutions/99999
2025-09-16T23:46:10.53684Z		/[locale]/solutions/[slug]/page: /ar/solutions/charger
2025-09-16T23:46:10.536897Z		/[locale]/solutions/[slug]/page: /ar/solutions/concrol
2025-09-16T23:46:10.536962Z		/[locale]/solutions/[slug]/page: /ar/solutions/infineon-aurix-automotive-solution
2025-09-16T23:46:10.537023Z		/[locale]/solutions/[slug]/page: /ar/solutions/motodiriver
2025-09-16T23:46:10.537086Z		/[locale]/solutions/[slug]/page: /ar/solutions/supplysolution
2025-09-16T23:46:10.537143Z		/[locale]/solutions/[slug]/page: /de/solutions/11111
2025-09-16T23:46:10.537202Z		/[locale]/solutions/[slug]/page: /de/solutions/99999
2025-09-16T23:46:10.53726Z		/[locale]/solutions/[slug]/page: /de/solutions/charger
2025-09-16T23:46:10.537317Z		/[locale]/solutions/[slug]/page: /de/solutions/concrol
2025-09-16T23:46:10.537377Z		/[locale]/solutions/[slug]/page: /de/solutions/infineon-aurix-automotive-solution
2025-09-16T23:46:10.5376Z		/[locale]/solutions/[slug]/page: /de/solutions/motodiriver
2025-09-16T23:46:10.537727Z		/[locale]/solutions/[slug]/page: /de/solutions/supplysolution
2025-09-16T23:46:10.537807Z		/[locale]/solutions/[slug]/page: /en/solutions/11111
2025-09-16T23:46:10.537868Z		/[locale]/solutions/[slug]/page: /en/solutions/99999
2025-09-16T23:46:10.537923Z		/[locale]/solutions/[slug]/page: /en/solutions/charger
2025-09-16T23:46:10.537977Z		/[locale]/solutions/[slug]/page: /en/solutions/concrol
2025-09-16T23:46:10.538031Z		/[locale]/solutions/[slug]/page: /en/solutions/infineon-aurix-automotive-solution
2025-09-16T23:46:10.538096Z		/[locale]/solutions/[slug]/page: /en/solutions/motodiriver
2025-09-16T23:46:10.538152Z		/[locale]/solutions/[slug]/page: /en/solutions/supplysolution
2025-09-16T23:46:10.538209Z		/[locale]/solutions/[slug]/page: /es/solutions/11111
2025-09-16T23:46:10.538264Z		/[locale]/solutions/[slug]/page: /es/solutions/99999
2025-09-16T23:46:10.538319Z		/[locale]/solutions/[slug]/page: /es/solutions/charger
2025-09-16T23:46:10.538374Z		/[locale]/solutions/[slug]/page: /es/solutions/concrol
2025-09-16T23:46:10.53843Z		/[locale]/solutions/[slug]/page: /es/solutions/infineon-aurix-automotive-solution
2025-09-16T23:46:10.538489Z		/[locale]/solutions/[slug]/page: /es/solutions/motodiriver
2025-09-16T23:46:10.538545Z		/[locale]/solutions/[slug]/page: /es/solutions/supplysolution
2025-09-16T23:46:10.5386Z		/[locale]/solutions/[slug]/page: /fr/solutions/11111
2025-09-16T23:46:10.538653Z		/[locale]/solutions/[slug]/page: /fr/solutions/99999
2025-09-16T23:46:10.538729Z		/[locale]/solutions/[slug]/page: /fr/solutions/charger
2025-09-16T23:46:10.538789Z		/[locale]/solutions/[slug]/page: /fr/solutions/concrol
2025-09-16T23:46:10.538852Z		/[locale]/solutions/[slug]/page: /fr/solutions/infineon-aurix-automotive-solution
2025-09-16T23:46:10.538914Z		/[locale]/solutions/[slug]/page: /fr/solutions/motodiriver
2025-09-16T23:46:10.53897Z		/[locale]/solutions/[slug]/page: /fr/solutions/supplysolution
2025-09-16T23:46:10.539024Z		/[locale]/solutions/[slug]/page: /ja/solutions/11111
2025-09-16T23:46:10.539077Z		/[locale]/solutions/[slug]/page: /ja/solutions/99999
2025-09-16T23:46:10.539129Z		/[locale]/solutions/[slug]/page: /ja/solutions/charger
2025-09-16T23:46:10.539192Z		/[locale]/solutions/[slug]/page: /ja/solutions/concrol
2025-09-16T23:46:10.539265Z		/[locale]/solutions/[slug]/page: /ja/solutions/infineon-aurix-automotive-solution
2025-09-16T23:46:10.539326Z		/[locale]/solutions/[slug]/page: /ja/solutions/motodiriver
2025-09-16T23:46:10.53939Z		/[locale]/solutions/[slug]/page: /ja/solutions/supplysolution
2025-09-16T23:46:10.539445Z		/[locale]/solutions/[slug]/page: /ko/solutions/11111
2025-09-16T23:46:10.5395Z		/[locale]/solutions/[slug]/page: /ko/solutions/99999
2025-09-16T23:46:10.539553Z		/[locale]/solutions/[slug]/page: /ko/solutions/charger
2025-09-16T23:46:10.539609Z		/[locale]/solutions/[slug]/page: /ko/solutions/concrol
2025-09-16T23:46:10.539662Z		/[locale]/solutions/[slug]/page: /ko/solutions/infineon-aurix-automotive-solution
2025-09-16T23:46:10.539736Z		/[locale]/solutions/[slug]/page: /ko/solutions/motodiriver
2025-09-16T23:46:10.539791Z		/[locale]/solutions/[slug]/page: /ko/solutions/supplysolution
2025-09-16T23:46:10.539844Z		/[locale]/solutions/[slug]/page: /ru/solutions/11111
2025-09-16T23:46:10.539897Z		/[locale]/solutions/[slug]/page: /ru/solutions/99999
2025-09-16T23:46:10.539953Z		/[locale]/solutions/[slug]/page: /ru/solutions/charger
2025-09-16T23:46:10.540008Z		/[locale]/solutions/[slug]/page: /ru/solutions/concrol
2025-09-16T23:46:10.540067Z		/[locale]/solutions/[slug]/page: /ru/solutions/infineon-aurix-automotive-solution
2025-09-16T23:46:10.540126Z		/[locale]/solutions/[slug]/page: /ru/solutions/motodiriver
2025-09-16T23:46:10.540179Z		/[locale]/solutions/[slug]/page: /ru/solutions/supplysolution
2025-09-16T23:46:10.540232Z		/[locale]/solutions/[slug]/page: /zh-CN/solutions/11111
2025-09-16T23:46:10.540287Z		/[locale]/solutions/[slug]/page: /zh-CN/solutions/99999
2025-09-16T23:46:10.540355Z		/[locale]/solutions/[slug]/page: /zh-CN/solutions/charger
2025-09-16T23:46:10.54041Z		/[locale]/solutions/[slug]/page: /zh-CN/solutions/concrol
2025-09-16T23:46:10.540466Z		/[locale]/solutions/[slug]/page: /zh-CN/solutions/infineon-aurix-automotive-solution
2025-09-16T23:46:10.540526Z		/[locale]/solutions/[slug]/page: /zh-CN/solutions/motodiriver
2025-09-16T23:46:10.540583Z		/[locale]/solutions/[slug]/page: /zh-CN/solutions/supplysolution
2025-09-16T23:46:10.540639Z		/[locale]/solutions/[slug]/page: /zh-TW/solutions/11111
2025-09-16T23:46:10.540716Z		/[locale]/solutions/[slug]/page: /zh-TW/solutions/99999
2025-09-16T23:46:10.540774Z		/[locale]/solutions/[slug]/page: /zh-TW/solutions/charger
2025-09-16T23:46:10.540835Z		/[locale]/solutions/[slug]/page: /zh-TW/solutions/concrol
2025-09-16T23:46:10.540891Z		/[locale]/solutions/[slug]/page: /zh-TW/solutions/infineon-aurix-automotive-solution
2025-09-16T23:46:10.540946Z		/[locale]/solutions/[slug]/page: /zh-TW/solutions/motodiriver
2025-09-16T23:46:10.541002Z		/[locale]/solutions/[slug]/page: /zh-TW/solutions/supplysolution
2025-09-16T23:46:10.541059Z	Failed: Error while executing user command. Exited with error code: 1
2025-09-16T23:46:10.541158Z	Failed: build command exited with code: 1
2025-09-16T23:46:14.90546Z	Failed: error occurred while running build command