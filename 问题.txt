2025-09-17T00:38:16.269386Z	Cloning repository...
2025-09-17T00:38:17.129249Z	From https://github.com/befpail737-glitch/litong
2025-09-17T00:38:17.129662Z	 * branch            1e3a91fbb4b01666eb7072bc1e010cdfcd590814 -> FETCH_HEAD
2025-09-17T00:38:17.129755Z	
2025-09-17T00:38:17.197631Z	HEAD is now at 1e3a91f Fix Cloudflare deployment by improving error handling in detail pages
2025-09-17T00:38:17.198036Z	
2025-09-17T00:38:17.27831Z	
2025-09-17T00:38:17.278747Z	Using v2 root directory strategy
2025-09-17T00:38:17.301522Z	Success: Finished cloning repository files
2025-09-17T00:38:19.182396Z	Checking for configuration in a Wrangler configuration file (BETA)
2025-09-17T00:38:19.18303Z	
2025-09-17T00:38:20.283331Z	No wrangler.toml file found. Continuing.
2025-09-17T00:38:20.357817Z	Detected the following tools from environment: nodejs@18.17.0, npm@10.9.2
2025-09-17T00:38:20.358341Z	Installing nodejs 18.17.0
2025-09-17T00:38:21.45716Z	Trying to update node-build... ok
2025-09-17T00:38:21.555064Z	To follow progress, use 'tail -f /tmp/node-build.20250917003821.494.log' or pass --verbose
2025-09-17T00:38:21.653003Z	Downloading node-v18.17.0-linux-x64.tar.gz...
2025-09-17T00:38:21.938097Z	-> https://nodejs.org/dist/v18.17.0/node-v18.17.0-linux-x64.tar.gz
2025-09-17T00:38:24.415025Z	
2025-09-17T00:38:24.415613Z	WARNING: node-v18.17.0-linux-x64 is in LTS Maintenance mode and nearing its end of life.
2025-09-17T00:38:24.41576Z	It only receives *critical* security updates, *critical* bug fixes and documentation updates.
2025-09-17T00:38:24.416014Z	
2025-09-17T00:38:24.416127Z	Installing node-v18.17.0-linux-x64...
2025-09-17T00:38:24.829947Z	Installed node-v18.17.0-linux-x64 to /opt/buildhome/.asdf/installs/nodejs/18.17.0
2025-09-17T00:38:24.83032Z	
2025-09-17T00:38:25.860993Z	Installing project dependencies: npm clean-install --progress=false
2025-09-17T00:38:27.264161Z	npm WARN EBADENGINE Unsupported engine {
2025-09-17T00:38:27.264476Z	npm WARN EBADENGINE   package: '@isaacs/brace-expansion@5.0.0',
2025-09-17T00:38:27.264611Z	npm WARN EBADENGINE   required: { node: '20 || >=22' },
2025-09-17T00:38:27.264733Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-17T00:38:27.264896Z	npm WARN EBADENGINE }
2025-09-17T00:38:27.265541Z	npm WARN EBADENGINE Unsupported engine {
2025-09-17T00:38:27.265746Z	npm WARN EBADENGINE   package: '@isaacs/balanced-match@4.0.1',
2025-09-17T00:38:27.265877Z	npm WARN EBADENGINE   required: { node: '20 || >=22' },
2025-09-17T00:38:27.266021Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-17T00:38:27.266144Z	npm WARN EBADENGINE }
2025-09-17T00:38:27.267306Z	npm WARN EBADENGINE Unsupported engine {
2025-09-17T00:38:27.267521Z	npm WARN EBADENGINE   package: '@sanity/client@7.11.1',
2025-09-17T00:38:27.267661Z	npm WARN EBADENGINE   required: { node: '>=20' },
2025-09-17T00:38:27.26778Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-17T00:38:27.267958Z	npm WARN EBADENGINE }
2025-09-17T00:38:27.268878Z	npm WARN EBADENGINE Unsupported engine {
2025-09-17T00:38:27.269096Z	npm WARN EBADENGINE   package: '@sanity/runtime-cli@9.2.0',
2025-09-17T00:38:27.269197Z	npm WARN EBADENGINE   required: { node: '>=20.11.0' },
2025-09-17T00:38:27.269285Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-17T00:38:27.26944Z	npm WARN EBADENGINE }
2025-09-17T00:38:27.269843Z	npm WARN EBADENGINE Unsupported engine {
2025-09-17T00:38:27.269988Z	npm WARN EBADENGINE   package: '@sanity/client@7.11.1',
2025-09-17T00:38:27.270215Z	npm WARN EBADENGINE   required: { node: '>=20' },
2025-09-17T00:38:27.270488Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-17T00:38:27.270635Z	npm WARN EBADENGINE }
2025-09-17T00:38:27.270826Z	npm WARN EBADENGINE Unsupported engine {
2025-09-17T00:38:27.271051Z	npm WARN EBADENGINE   package: 'eventsource@4.0.0',
2025-09-17T00:38:27.271156Z	npm WARN EBADENGINE   required: { node: '>=20.0.0' },
2025-09-17T00:38:27.27128Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-17T00:38:27.271393Z	npm WARN EBADENGINE }
2025-09-17T00:38:27.271814Z	npm WARN EBADENGINE Unsupported engine {
2025-09-17T00:38:27.272049Z	npm WARN EBADENGINE   package: '@sanity/client@7.11.1',
2025-09-17T00:38:27.272226Z	npm WARN EBADENGINE   required: { node: '>=20' },
2025-09-17T00:38:27.272417Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-17T00:38:27.272647Z	npm WARN EBADENGINE }
2025-09-17T00:38:27.278151Z	npm WARN EBADENGINE Unsupported engine {
2025-09-17T00:38:27.278371Z	npm WARN EBADENGINE   package: '@sanity/client@7.11.1',
2025-09-17T00:38:27.278556Z	npm WARN EBADENGINE   required: { node: '>=20' },
2025-09-17T00:38:27.278673Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-17T00:38:27.27879Z	npm WARN EBADENGINE }
2025-09-17T00:38:27.278926Z	npm WARN EBADENGINE Unsupported engine {
2025-09-17T00:38:27.279059Z	npm WARN EBADENGINE   package: '@sanity/diff-match-patch@3.2.0',
2025-09-17T00:38:27.279169Z	npm WARN EBADENGINE   required: { node: '>=18.18' },
2025-09-17T00:38:27.2793Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-17T00:38:27.279416Z	npm WARN EBADENGINE }
2025-09-17T00:38:27.279539Z	npm WARN EBADENGINE Unsupported engine {
2025-09-17T00:38:27.279644Z	npm WARN EBADENGINE   package: 'glob@11.0.3',
2025-09-17T00:38:27.279771Z	npm WARN EBADENGINE   required: { node: '20 || >=22' },
2025-09-17T00:38:27.279871Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-17T00:38:27.279988Z	npm WARN EBADENGINE }
2025-09-17T00:38:27.280091Z	npm WARN EBADENGINE Unsupported engine {
2025-09-17T00:38:27.280195Z	npm WARN EBADENGINE   package: 'jackspeak@4.1.1',
2025-09-17T00:38:27.280313Z	npm WARN EBADENGINE   required: { node: '20 || >=22' },
2025-09-17T00:38:27.280429Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-17T00:38:27.280551Z	npm WARN EBADENGINE }
2025-09-17T00:38:27.280647Z	npm WARN EBADENGINE Unsupported engine {
2025-09-17T00:38:27.280754Z	npm WARN EBADENGINE   package: 'lru-cache@11.2.1',
2025-09-17T00:38:27.28086Z	npm WARN EBADENGINE   required: { node: '20 || >=22' },
2025-09-17T00:38:27.281025Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-17T00:38:27.281132Z	npm WARN EBADENGINE }
2025-09-17T00:38:27.281261Z	npm WARN EBADENGINE Unsupported engine {
2025-09-17T00:38:27.281396Z	npm WARN EBADENGINE   package: 'minimatch@10.0.3',
2025-09-17T00:38:27.281502Z	npm WARN EBADENGINE   required: { node: '20 || >=22' },
2025-09-17T00:38:27.281711Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-17T00:38:27.281825Z	npm WARN EBADENGINE }
2025-09-17T00:38:27.281954Z	npm WARN EBADENGINE Unsupported engine {
2025-09-17T00:38:27.282056Z	npm WARN EBADENGINE   package: 'path-scurry@2.0.0',
2025-09-17T00:38:27.282152Z	npm WARN EBADENGINE   required: { node: '20 || >=22' },
2025-09-17T00:38:27.282283Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-17T00:38:27.282406Z	npm WARN EBADENGINE }
2025-09-17T00:38:27.282507Z	npm WARN EBADENGINE Unsupported engine {
2025-09-17T00:38:27.28262Z	npm WARN EBADENGINE   package: 'rimraf@6.0.1',
2025-09-17T00:38:27.282739Z	npm WARN EBADENGINE   required: { node: '20 || >=22' },
2025-09-17T00:38:27.282844Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-17T00:38:27.282954Z	npm WARN EBADENGINE }
2025-09-17T00:38:27.283066Z	npm WARN EBADENGINE Unsupported engine {
2025-09-17T00:38:27.283179Z	npm WARN EBADENGINE   package: 'glob@11.0.3',
2025-09-17T00:38:27.283313Z	npm WARN EBADENGINE   required: { node: '20 || >=22' },
2025-09-17T00:38:27.283409Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-17T00:38:27.283506Z	npm WARN EBADENGINE }
2025-09-17T00:38:27.283623Z	npm WARN EBADENGINE Unsupported engine {
2025-09-17T00:38:27.283794Z	npm WARN EBADENGINE   package: 'jackspeak@4.1.1',
2025-09-17T00:38:27.283909Z	npm WARN EBADENGINE   required: { node: '20 || >=22' },
2025-09-17T00:38:27.284018Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-17T00:38:27.284121Z	npm WARN EBADENGINE }
2025-09-17T00:38:27.284224Z	npm WARN EBADENGINE Unsupported engine {
2025-09-17T00:38:27.284362Z	npm WARN EBADENGINE   package: 'lru-cache@11.2.1',
2025-09-17T00:38:27.28448Z	npm WARN EBADENGINE   required: { node: '20 || >=22' },
2025-09-17T00:38:27.284591Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-17T00:38:27.284697Z	npm WARN EBADENGINE }
2025-09-17T00:38:27.284807Z	npm WARN EBADENGINE Unsupported engine {
2025-09-17T00:38:27.284921Z	npm WARN EBADENGINE   package: 'minimatch@10.0.3',
2025-09-17T00:38:27.285035Z	npm WARN EBADENGINE   required: { node: '20 || >=22' },
2025-09-17T00:38:27.285144Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-17T00:38:27.285243Z	npm WARN EBADENGINE }
2025-09-17T00:38:27.285367Z	npm WARN EBADENGINE Unsupported engine {
2025-09-17T00:38:27.285477Z	npm WARN EBADENGINE   package: 'path-scurry@2.0.0',
2025-09-17T00:38:27.285588Z	npm WARN EBADENGINE   required: { node: '20 || >=22' },
2025-09-17T00:38:27.285704Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-17T00:38:27.285811Z	npm WARN EBADENGINE }
2025-09-17T00:38:27.285938Z	npm WARN EBADENGINE Unsupported engine {
2025-09-17T00:38:27.286057Z	npm WARN EBADENGINE   package: 'rimraf@6.0.1',
2025-09-17T00:38:27.28616Z	npm WARN EBADENGINE   required: { node: '20 || >=22' },
2025-09-17T00:38:27.286308Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-17T00:38:27.28643Z	npm WARN EBADENGINE }
2025-09-17T00:38:27.28654Z	npm WARN EBADENGINE Unsupported engine {
2025-09-17T00:38:27.286633Z	npm WARN EBADENGINE   package: '@sanity/message-protocol@0.13.3',
2025-09-17T00:38:27.286727Z	npm WARN EBADENGINE   required: { node: '>=20.0.0' },
2025-09-17T00:38:27.286822Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-17T00:38:27.286917Z	npm WARN EBADENGINE }
2025-09-17T00:38:27.287004Z	npm WARN EBADENGINE Unsupported engine {
2025-09-17T00:38:27.287096Z	npm WARN EBADENGINE   package: '@sanity/sdk@0.0.0-alpha.25',
2025-09-17T00:38:27.287195Z	npm WARN EBADENGINE   required: { node: '>=20.0.0' },
2025-09-17T00:38:27.287308Z	npm WARN EBADENGINE   current: { node: 'v18.17.0', npm: '9.6.7' }
2025-09-17T00:38:27.287409Z	npm WARN EBADENGINE }
2025-09-17T00:38:27.569728Z	npm WARN reify invalid or damaged lockfile detected
2025-09-17T00:38:27.569983Z	npm WARN reify please re-try this operation once it completes
2025-09-17T00:38:27.570175Z	npm WARN reify so that the damage can be corrected, or perform
2025-09-17T00:38:27.57034Z	npm WARN reify a fresh install with no lockfile if the problem persists.
2025-09-17T00:38:27.571384Z	npm WARN reify invalid or damaged lockfile detected
2025-09-17T00:38:27.571629Z	npm WARN reify please re-try this operation once it completes
2025-09-17T00:38:27.571826Z	npm WARN reify so that the damage can be corrected, or perform
2025-09-17T00:38:27.571953Z	npm WARN reify a fresh install with no lockfile if the problem persists.
2025-09-17T00:38:27.572164Z	npm WARN reify invalid or damaged lockfile detected
2025-09-17T00:38:27.572592Z	npm WARN reify please re-try this operation once it completes
2025-09-17T00:38:27.572827Z	npm WARN reify so that the damage can be corrected, or perform
2025-09-17T00:38:27.573Z	npm WARN reify a fresh install with no lockfile if the problem persists.
2025-09-17T00:39:29.318817Z	
2025-09-17T00:39:29.31919Z	added 2140 packages in 1m
2025-09-17T00:39:29.356627Z	Executing user command: npm run build
2025-09-17T00:39:29.887585Z	
2025-09-17T00:39:29.887863Z	> litong-electronics-website@0.1.0 build
2025-09-17T00:39:29.88803Z	> npm run clear-cache && next build
2025-09-17T00:39:29.888151Z	
2025-09-17T00:39:30.224586Z	
2025-09-17T00:39:30.22487Z	> litong-electronics-website@0.1.0 clear-cache
2025-09-17T00:39:30.225026Z	> node scripts/clear-cache.js
2025-09-17T00:39:30.225151Z	
2025-09-17T00:39:30.28325Z	🧹 Clearing Next.js caches...
2025-09-17T00:39:30.283801Z	ℹ️  /opt/buildhome/repo/.next does not exist
2025-09-17T00:39:30.283931Z	ℹ️  /opt/buildhome/repo/node_modules/.cache does not exist
2025-09-17T00:39:30.285379Z	✅ Cache cleared! Please restart your development server.
2025-09-17T00:39:30.285519Z	Run: npm run dev
2025-09-17T00:39:30.92124Z	⚠ No build cache found. Please configure build caching for faster rebuilds. Read more: https://nextjs.org/docs/messages/no-cache
2025-09-17T00:39:30.925578Z	Attention: Next.js now collects completely anonymous telemetry regarding usage.
2025-09-17T00:39:30.926107Z	This information is used to shape Next.js' roadmap and prioritize features.
2025-09-17T00:39:30.926225Z	You can learn more, including how to opt-out if you'd not like to participate in this anonymous program, by visiting the following URL:
2025-09-17T00:39:30.926455Z	https://nextjs.org/telemetry
2025-09-17T00:39:30.926658Z	
2025-09-17T00:39:30.994975Z	  ▲ Next.js 14.2.32
2025-09-17T00:39:30.995232Z	
2025-09-17T00:39:31.0573Z	   Creating an optimized production build ...
2025-09-17T00:39:48.665679Z	 ✓ Compiled successfully
2025-09-17T00:39:48.666812Z	   Skipping validation of types
2025-09-17T00:39:48.666995Z	   Skipping linting
2025-09-17T00:39:49.005123Z	   Collecting page data ...
2025-09-17T00:39:50.191146Z	Fetching products with query: 
2025-09-17T00:39:50.19159Z	    {
2025-09-17T00:39:50.193389Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**"))] | order(_createdAt desc) [0...1000] {
2025-09-17T00:39:50.193601Z	        
2025-09-17T00:39:50.193722Z	    _id,
2025-09-17T00:39:50.193835Z	    _type,
2025-09-17T00:39:50.193965Z	    partNumber,
2025-09-17T00:39:50.194079Z	    "slug": slug.current,
2025-09-17T00:39:50.194177Z	    title,
2025-09-17T00:39:50.194307Z	    shortDescription,
2025-09-17T00:39:50.194417Z	    image,
2025-09-17T00:39:50.194514Z	    brand->{
2025-09-17T00:39:50.194624Z	      name,
2025-09-17T00:39:50.19472Z	      "slug": slug.current,
2025-09-17T00:39:50.194814Z	      logo
2025-09-17T00:39:50.194927Z	    },
2025-09-17T00:39:50.195048Z	    category->{
2025-09-17T00:39:50.195165Z	      name,
2025-09-17T00:39:50.195286Z	      "slug": slug.current
2025-09-17T00:39:50.195397Z	    },
2025-09-17T00:39:50.19551Z	    pricing{
2025-09-17T00:39:50.195617Z	      currency,
2025-09-17T00:39:50.195726Z	      tiers[]{
2025-09-17T00:39:50.195831Z	        quantity,
2025-09-17T00:39:50.195958Z	        price,
2025-09-17T00:39:50.196073Z	        unit
2025-09-17T00:39:50.196185Z	      },
2025-09-17T00:39:50.196325Z	      moq,
2025-09-17T00:39:50.197241Z	      leadTime,
2025-09-17T00:39:50.197424Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:50.197558Z	      "price": tiers[0].price,
2025-09-17T00:39:50.197672Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:50.197782Z	    },
2025-09-17T00:39:50.197889Z	    inventory{
2025-09-17T00:39:50.198018Z	      quantity,
2025-09-17T00:39:50.198127Z	      status,
2025-09-17T00:39:50.198238Z	      warehouse,
2025-09-17T00:39:50.198365Z	      lastUpdated,
2025-09-17T00:39:50.198474Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:50.198583Z	      "inStock": status == "in_stock",
2025-09-17T00:39:50.198691Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:50.199172Z	    },
2025-09-17T00:39:50.199309Z	    isActive,
2025-09-17T00:39:50.199444Z	    isFeatured,
2025-09-17T00:39:50.199848Z	    isNew,
2025-09-17T00:39:50.199987Z	    _createdAt,
2025-09-17T00:39:50.200107Z	    _updatedAt
2025-09-17T00:39:50.200218Z	  
2025-09-17T00:39:50.200357Z	      },
2025-09-17T00:39:50.200471Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**"))])
2025-09-17T00:39:50.200588Z	    }
2025-09-17T00:39:50.200706Z	  
2025-09-17T00:39:50.200843Z	Fetching solutions with query: 
2025-09-17T00:39:50.20097Z	    {
2025-09-17T00:39:50.201087Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished))] | order(publishedAt desc) [0...1000] {
2025-09-17T00:39:50.201206Z	        
2025-09-17T00:39:50.201351Z	    _id,
2025-09-17T00:39:50.201465Z	    title,
2025-09-17T00:39:50.201571Z	    "slug": slug.current,
2025-09-17T00:39:50.20168Z	    summary,
2025-09-17T00:39:50.201788Z	    description,
2025-09-17T00:39:50.201895Z	    coverImage,
2025-09-17T00:39:50.202018Z	    primaryBrand->{
2025-09-17T00:39:50.202124Z	      _id,
2025-09-17T00:39:50.202223Z	      name,
2025-09-17T00:39:50.202346Z	      "slug": slug.current,
2025-09-17T00:39:50.202456Z	      logo
2025-09-17T00:39:50.202563Z	    },
2025-09-17T00:39:50.202663Z	    relatedBrands[]->{
2025-09-17T00:39:50.202753Z	      _id,
2025-09-17T00:39:50.202846Z	      name,
2025-09-17T00:39:50.203456Z	      "slug": slug.current,
2025-09-17T00:39:50.20384Z	      logo
2025-09-17T00:39:50.204018Z	    },
2025-09-17T00:39:50.204143Z	    targetMarket,
2025-09-17T00:39:50.204278Z	    complexity,
2025-09-17T00:39:50.204419Z	    publishedAt,
2025-09-17T00:39:50.204538Z	    isPublished,
2025-09-17T00:39:50.20465Z	    isFeatured,
2025-09-17T00:39:50.204767Z	    viewCount,
2025-09-17T00:39:50.204879Z	    _createdAt,
2025-09-17T00:39:50.205004Z	    _updatedAt
2025-09-17T00:39:50.205117Z	  
2025-09-17T00:39:50.205227Z	      },
2025-09-17T00:39:50.20536Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished))])
2025-09-17T00:39:50.205484Z	    }
2025-09-17T00:39:50.205594Z	  
2025-09-17T00:39:50.205703Z	Query parameters: {
2025-09-17T00:39:50.20583Z	  limit: 1000,
2025-09-17T00:39:50.205953Z	  offset: 0,
2025-09-17T00:39:50.206068Z	  category: undefined,
2025-09-17T00:39:50.206183Z	  brand: undefined,
2025-09-17T00:39:50.206312Z	  featured: undefined
2025-09-17T00:39:50.206437Z	}
2025-09-17T00:39:50.206549Z	Query parameters: {
2025-09-17T00:39:50.206662Z	  limit: 1000,
2025-09-17T00:39:50.206771Z	  offset: 0,
2025-09-17T00:39:50.206885Z	  targetMarket: undefined,
2025-09-17T00:39:50.20701Z	  brand: undefined,
2025-09-17T00:39:50.207121Z	  featured: undefined
2025-09-17T00:39:50.207232Z	}
2025-09-17T00:39:50.207373Z	🔍 [getAllBrands] Starting brand data fetch from Sanity...
2025-09-17T00:39:50.207514Z	🔍 [getAllBrands] Executing Sanity query...
2025-09-17T00:39:50.214477Z	🔍 [getAllBrands] Starting brand data fetch from Sanity...
2025-09-17T00:39:50.216023Z	🔍 [getAllBrands] Executing Sanity query...
2025-09-17T00:39:50.219911Z	🔍 [getAllBrands] Starting brand data fetch from Sanity...
2025-09-17T00:39:50.220321Z	🔍 [getAllBrands] Executing Sanity query...
2025-09-17T00:39:50.318919Z	🔍 [getAllBrands] Starting brand data fetch from Sanity...
2025-09-17T00:39:50.31938Z	🔍 [getAllBrands] Executing Sanity query...
2025-09-17T00:39:50.592375Z	🔍 [getAllBrands] Sanity query returned: 13 brands
2025-09-17T00:39:50.613902Z	Generated static params for brand support: 140
2025-09-17T00:39:50.614356Z	🔍 [getAllBrands] Sanity query returned: 13 brands
2025-09-17T00:39:50.614524Z	Generated static params for brands: 140
2025-09-17T00:39:50.614645Z	🔍 [getAllBrands] Sanity query returned: 13 brands
2025-09-17T00:39:50.614759Z	Generated static params for brand solutions: 140
2025-09-17T00:39:50.61993Z	🔍 [getAllBrands] Sanity query returned: 13 brands
2025-09-17T00:39:50.620264Z	Generated static params for brand products: 140
2025-09-17T00:39:50.636977Z	Products fetch result: {
2025-09-17T00:39:50.637288Z	  totalProducts: 14,
2025-09-17T00:39:50.637446Z	  fetchedProducts: 14,
2025-09-17T00:39:50.637563Z	  firstProduct: {
2025-09-17T00:39:50.637683Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-17T00:39:50.637798Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-17T00:39:50.637909Z	    _type: 'product',
2025-09-17T00:39:50.63802Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-17T00:39:50.63813Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-17T00:39:50.638239Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-17T00:39:50.638354Z	    image: null,
2025-09-17T00:39:50.638422Z	    inventory: {
2025-09-17T00:39:50.638478Z	      inStock: true,
2025-09-17T00:39:50.638535Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-17T00:39:50.638589Z	      quantity: 0,
2025-09-17T00:39:50.638649Z	      status: 'in_stock',
2025-09-17T00:39:50.63871Z	      warehouse: null
2025-09-17T00:39:50.638765Z	    },
2025-09-17T00:39:50.638818Z	    isActive: true,
2025-09-17T00:39:50.638872Z	    isFeatured: false,
2025-09-17T00:39:50.638929Z	    isNew: false,
2025-09-17T00:39:50.638985Z	    partNumber: '99999',
2025-09-17T00:39:50.639039Z	    pricing: {
2025-09-17T00:39:50.639092Z	      currency: 'CNY',
2025-09-17T00:39:50.639148Z	      leadTime: null,
2025-09-17T00:39:50.6392Z	      moq: null,
2025-09-17T00:39:50.639254Z	      price: null,
2025-09-17T00:39:50.639342Z	      tiers: null
2025-09-17T00:39:50.639402Z	    },
2025-09-17T00:39:50.639458Z	    shortDescription: null,
2025-09-17T00:39:50.639514Z	    slug: '99999',
2025-09-17T00:39:50.639568Z	    title: '99999'
2025-09-17T00:39:50.639622Z	  }
2025-09-17T00:39:50.639685Z	}
2025-09-17T00:39:50.63977Z	Generated static params for products: 140
2025-09-17T00:39:50.713478Z	Solutions fetch result: {
2025-09-17T00:39:50.713841Z	  totalSolutions: 12,
2025-09-17T00:39:50.713969Z	  fetchedSolutions: 12,
2025-09-17T00:39:50.714071Z	  firstSolution: {
2025-09-17T00:39:50.714174Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-17T00:39:50.714288Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-17T00:39:50.714399Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-17T00:39:50.714488Z	    complexity: 'medium',
2025-09-17T00:39:50.714549Z	    coverImage: null,
2025-09-17T00:39:50.714633Z	    description: [ [Object] ],
2025-09-17T00:39:50.714741Z	    isFeatured: false,
2025-09-17T00:39:50.714838Z	    isPublished: true,
2025-09-17T00:39:50.714936Z	    primaryBrand: {
2025-09-17T00:39:50.715033Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:50.715128Z	      logo: null,
2025-09-17T00:39:50.715221Z	      name: 'IXYS',
2025-09-17T00:39:50.715383Z	      slug: 'ixys'
2025-09-17T00:39:50.715498Z	    },
2025-09-17T00:39:50.7156Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-17T00:39:50.715711Z	    relatedBrands: null,
2025-09-17T00:39:50.715807Z	    slug: '99999',
2025-09-17T00:39:50.715909Z	    summary: '99999',
2025-09-17T00:39:50.716007Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:50.716097Z	    title: '99999',
2025-09-17T00:39:50.716188Z	    viewCount: 0
2025-09-17T00:39:50.716291Z	  }
2025-09-17T00:39:50.716441Z	}
2025-09-17T00:39:50.720045Z	Generated static params for solutions: 120
2025-09-17T00:39:50.832302Z	Generated static params for articles: 50
2025-09-17T00:39:51.709429Z	   Generating static pages (0/894) ...
2025-09-17T00:39:51.816729Z	🔍 执行品牌查询: {
2025-09-17T00:39:51.817125Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-17T00:39:51.817624Z	  'GROQ查询': '\n' +
2025-09-17T00:39:51.817887Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-17T00:39:51.818035Z	    '      \n' +
2025-09-17T00:39:51.818142Z	    '    _id,\n' +
2025-09-17T00:39:51.818247Z	    '    name,\n' +
2025-09-17T00:39:51.818376Z	    '    "slug": slug.current,\n' +
2025-09-17T00:39:51.818495Z	    '    logo,\n' +
2025-09-17T00:39:51.818605Z	    '    description,\n' +
2025-09-17T00:39:51.819065Z	    '    website,\n' +
2025-09-17T00:39:51.819201Z	    '    country,\n' +
2025-09-17T00:39:51.819324Z	    '    isActive,\n' +
2025-09-17T00:39:51.819424Z	    '    isFeatured\n' +
2025-09-17T00:39:51.819653Z	    '  \n' +
2025-09-17T00:39:51.820225Z	    '    }\n' +
2025-09-17T00:39:51.820401Z	    '  ',
2025-09-17T00:39:51.820523Z	  '是否仅获取推荐': false
2025-09-17T00:39:51.820638Z	}
2025-09-17T00:39:51.82075Z	🔍 执行品牌查询: {
2025-09-17T00:39:51.820857Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-17T00:39:51.821002Z	  'GROQ查询': '\n' +
2025-09-17T00:39:51.821108Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-17T00:39:51.821212Z	    '      \n' +
2025-09-17T00:39:51.821344Z	    '    _id,\n' +
2025-09-17T00:39:51.821453Z	    '    name,\n' +
2025-09-17T00:39:51.821559Z	    '    "slug": slug.current,\n' +
2025-09-17T00:39:51.821665Z	    '    logo,\n' +
2025-09-17T00:39:51.821773Z	    '    description,\n' +
2025-09-17T00:39:51.821878Z	    '    website,\n' +
2025-09-17T00:39:51.822Z	    '    country,\n' +
2025-09-17T00:39:51.822107Z	    '    isActive,\n' +
2025-09-17T00:39:51.822213Z	    '    isFeatured\n' +
2025-09-17T00:39:51.822338Z	    '  \n' +
2025-09-17T00:39:51.822448Z	    '    }\n' +
2025-09-17T00:39:51.822551Z	    '  ',
2025-09-17T00:39:51.822653Z	  '是否仅获取推荐': false
2025-09-17T00:39:51.822755Z	}
2025-09-17T00:39:51.822865Z	🔍 执行品牌查询: {
2025-09-17T00:39:51.822984Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-17T00:39:51.823094Z	  'GROQ查询': '\n' +
2025-09-17T00:39:51.8232Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-17T00:39:51.823415Z	    '      \n' +
2025-09-17T00:39:51.82353Z	    '    _id,\n' +
2025-09-17T00:39:51.823638Z	    '    name,\n' +
2025-09-17T00:39:51.823743Z	    '    "slug": slug.current,\n' +
2025-09-17T00:39:51.823853Z	    '    logo,\n' +
2025-09-17T00:39:51.823973Z	    '    description,\n' +
2025-09-17T00:39:51.824092Z	    '    website,\n' +
2025-09-17T00:39:51.824194Z	    '    country,\n' +
2025-09-17T00:39:51.824324Z	    '    isActive,\n' +
2025-09-17T00:39:51.824447Z	    '    isFeatured\n' +
2025-09-17T00:39:51.824553Z	    '  \n' +
2025-09-17T00:39:51.824651Z	    '    }\n' +
2025-09-17T00:39:51.824751Z	    '  ',
2025-09-17T00:39:51.824849Z	  '是否仅获取推荐': false
2025-09-17T00:39:51.824962Z	}
2025-09-17T00:39:51.825061Z	🔍 执行品牌查询: {
2025-09-17T00:39:51.825163Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-17T00:39:51.825293Z	  'GROQ查询': '\n' +
2025-09-17T00:39:51.825412Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-17T00:39:51.825538Z	    '      \n' +
2025-09-17T00:39:51.825653Z	    '    _id,\n' +
2025-09-17T00:39:51.825765Z	    '    name,\n' +
2025-09-17T00:39:51.825874Z	    '    "slug": slug.current,\n' +
2025-09-17T00:39:51.825991Z	    '    logo,\n' +
2025-09-17T00:39:51.826116Z	    '    description,\n' +
2025-09-17T00:39:51.826225Z	    '    website,\n' +
2025-09-17T00:39:51.826355Z	    '    country,\n' +
2025-09-17T00:39:51.826478Z	    '    isActive,\n' +
2025-09-17T00:39:51.826593Z	    '    isFeatured\n' +
2025-09-17T00:39:51.826713Z	    '  \n' +
2025-09-17T00:39:51.826824Z	    '    }\n' +
2025-09-17T00:39:51.826941Z	    '  ',
2025-09-17T00:39:51.827048Z	  '是否仅获取推荐': false
2025-09-17T00:39:51.827156Z	}
2025-09-17T00:39:51.827302Z	🔍 执行品牌查询: {
2025-09-17T00:39:51.827433Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-17T00:39:51.827551Z	  'GROQ查询': '\n' +
2025-09-17T00:39:51.827657Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-17T00:39:51.827877Z	    '      \n' +
2025-09-17T00:39:51.828041Z	    '    _id,\n' +
2025-09-17T00:39:51.828149Z	    '    name,\n' +
2025-09-17T00:39:51.828338Z	    '    "slug": slug.current,\n' +
2025-09-17T00:39:51.828514Z	    '    logo,\n' +
2025-09-17T00:39:51.828646Z	    '    description,\n' +
2025-09-17T00:39:51.828762Z	    '    website,\n' +
2025-09-17T00:39:51.828876Z	    '    country,\n' +
2025-09-17T00:39:51.828999Z	    '    isActive,\n' +
2025-09-17T00:39:51.829103Z	    '    isFeatured\n' +
2025-09-17T00:39:51.829204Z	    '  \n' +
2025-09-17T00:39:51.829325Z	    '    }\n' +
2025-09-17T00:39:51.829426Z	    '  ',
2025-09-17T00:39:51.829582Z	  '是否仅获取推荐': false
2025-09-17T00:39:51.829971Z	}
2025-09-17T00:39:51.830151Z	🔍 执行品牌查询: {
2025-09-17T00:39:51.83058Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-17T00:39:51.830873Z	  'GROQ查询': '\n' +
2025-09-17T00:39:51.831069Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-17T00:39:51.831258Z	    '      \n' +
2025-09-17T00:39:51.831669Z	    '    _id,\n' +
2025-09-17T00:39:51.832065Z	    '    name,\n' +
2025-09-17T00:39:51.832548Z	    '    "slug": slug.current,\n' +
2025-09-17T00:39:51.8332Z	    '    logo,\n' +
2025-09-17T00:39:51.834047Z	    '    description,\n' +
2025-09-17T00:39:51.834538Z	    '    website,\n' +
2025-09-17T00:39:51.835043Z	    '    country,\n' +
2025-09-17T00:39:51.835553Z	    '    isActive,\n' +
2025-09-17T00:39:51.887782Z	    '    isFeatured\n' +
2025-09-17T00:39:51.888058Z	    '  \n' +
2025-09-17T00:39:51.889217Z	    '    }\n' +
2025-09-17T00:39:51.890554Z	    '  ',
2025-09-17T00:39:51.890728Z	  '是否仅获取推荐': false
2025-09-17T00:39:51.890858Z	}
2025-09-17T00:39:51.899423Z	🔍 执行品牌查询: {
2025-09-17T00:39:51.899878Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-17T00:39:51.900029Z	  'GROQ查询': '\n' +
2025-09-17T00:39:51.900136Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-17T00:39:51.900318Z	    '      \n' +
2025-09-17T00:39:51.900483Z	    '    _id,\n' +
2025-09-17T00:39:51.900588Z	    '    name,\n' +
2025-09-17T00:39:51.900811Z	    '    "slug": slug.current,\n' +
2025-09-17T00:39:51.901054Z	    '    logo,\n' +
2025-09-17T00:39:51.901171Z	    '    description,\n' +
2025-09-17T00:39:51.90334Z	    '    website,\n' +
2025-09-17T00:39:51.903512Z	    '    country,\n' +
2025-09-17T00:39:51.903763Z	    '    isActive,\n' +
2025-09-17T00:39:51.904136Z	    '    isFeatured\n' +
2025-09-17T00:39:51.904484Z	    '  \n' +
2025-09-17T00:39:51.90489Z	    '    }\n' +
2025-09-17T00:39:51.905169Z	    '  ',
2025-09-17T00:39:51.905414Z	  '是否仅获取推荐': false
2025-09-17T00:39:51.905614Z	}
2025-09-17T00:39:51.905814Z	🔍 执行品牌查询: {
2025-09-17T00:39:51.906Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-17T00:39:51.906173Z	  'GROQ查询': '\n' +
2025-09-17T00:39:51.906541Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-17T00:39:51.907047Z	    '      \n' +
2025-09-17T00:39:51.907448Z	    '    _id,\n' +
2025-09-17T00:39:51.907761Z	    '    name,\n' +
2025-09-17T00:39:51.908447Z	    '    "slug": slug.current,\n' +
2025-09-17T00:39:51.908784Z	    '    logo,\n' +
2025-09-17T00:39:51.909162Z	    '    description,\n' +
2025-09-17T00:39:51.909564Z	    '    website,\n' +
2025-09-17T00:39:51.910079Z	    '    country,\n' +
2025-09-17T00:39:51.910572Z	    '    isActive,\n' +
2025-09-17T00:39:51.911069Z	    '    isFeatured\n' +
2025-09-17T00:39:51.911555Z	    '  \n' +
2025-09-17T00:39:51.91207Z	    '    }\n' +
2025-09-17T00:39:51.912591Z	    '  ',
2025-09-17T00:39:51.91309Z	  '是否仅获取推荐': false
2025-09-17T00:39:51.913567Z	}
2025-09-17T00:39:51.914116Z	🔍 执行品牌查询: {
2025-09-17T00:39:51.914263Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-17T00:39:51.914853Z	  'GROQ查询': '\n' +
2025-09-17T00:39:51.914989Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-17T00:39:51.91513Z	    '      \n' +
2025-09-17T00:39:51.91539Z	    '    _id,\n' +
2025-09-17T00:39:51.915618Z	    '    name,\n' +
2025-09-17T00:39:51.915756Z	    '    "slug": slug.current,\n' +
2025-09-17T00:39:51.915864Z	    '    logo,\n' +
2025-09-17T00:39:51.915968Z	    '    description,\n' +
2025-09-17T00:39:51.916078Z	    '    website,\n' +
2025-09-17T00:39:51.916704Z	    '    country,\n' +
2025-09-17T00:39:51.916996Z	    '    isActive,\n' +
2025-09-17T00:39:51.917256Z	    '    isFeatured\n' +
2025-09-17T00:39:51.917401Z	    '  \n' +
2025-09-17T00:39:51.917505Z	    '    }\n' +
2025-09-17T00:39:51.917631Z	    '  ',
2025-09-17T00:39:51.917743Z	  '是否仅获取推荐': false
2025-09-17T00:39:51.918092Z	}
2025-09-17T00:39:51.918234Z	🔍 执行品牌查询: {
2025-09-17T00:39:51.918376Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-17T00:39:51.918494Z	  'GROQ查询': '\n' +
2025-09-17T00:39:51.918609Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-17T00:39:51.919111Z	    '      \n' +
2025-09-17T00:39:51.919234Z	    '    _id,\n' +
2025-09-17T00:39:51.919533Z	    '    name,\n' +
2025-09-17T00:39:51.919858Z	    '    "slug": slug.current,\n' +
2025-09-17T00:39:51.920048Z	    '    logo,\n' +
2025-09-17T00:39:51.92025Z	    '    description,\n' +
2025-09-17T00:39:51.920899Z	    '    website,\n' +
2025-09-17T00:39:51.921144Z	    '    country,\n' +
2025-09-17T00:39:51.922002Z	    '    isActive,\n' +
2025-09-17T00:39:51.922129Z	    '    isFeatured\n' +
2025-09-17T00:39:51.922293Z	    '  \n' +
2025-09-17T00:39:51.922444Z	    '    }\n' +
2025-09-17T00:39:51.922578Z	    '  ',
2025-09-17T00:39:51.922737Z	  '是否仅获取推荐': false
2025-09-17T00:39:51.922875Z	}
2025-09-17T00:39:52.146898Z	📊 品牌查询结果: {
2025-09-17T00:39:52.147276Z	  '数量': 13,
2025-09-17T00:39:52.147498Z	  '品牌列表': [
2025-09-17T00:39:52.147883Z	    {
2025-09-17T00:39:52.147983Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:52.148049Z	      '名称': 'CREE',
2025-09-17T00:39:52.148399Z	      slug: 'cree',
2025-09-17T00:39:52.14853Z	      '是否激活': true,
2025-09-17T00:39:52.148645Z	      '是否推荐': false
2025-09-17T00:39:52.148756Z	    },
2025-09-17T00:39:52.149895Z	    {
2025-09-17T00:39:52.150691Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-17T00:39:52.15101Z	      '名称': 'Electronicon',
2025-09-17T00:39:52.151197Z	      slug: 'Electronicon',
2025-09-17T00:39:52.151351Z	      '是否激活': true,
2025-09-17T00:39:52.151469Z	      '是否推荐': false
2025-09-17T00:39:52.151576Z	    },
2025-09-17T00:39:52.151679Z	    {
2025-09-17T00:39:52.151783Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-17T00:39:52.151892Z	      '名称': 'Epcos',
2025-09-17T00:39:52.152012Z	      slug: 'epcos',
2025-09-17T00:39:52.152113Z	      '是否激活': true,
2025-09-17T00:39:52.152205Z	      '是否推荐': false
2025-09-17T00:39:52.152417Z	    },
2025-09-17T00:39:52.152552Z	    {
2025-09-17T00:39:52.152672Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:52.152849Z	      '名称': 'IXYS',
2025-09-17T00:39:52.153037Z	      slug: 'ixys',
2025-09-17T00:39:52.153208Z	      '是否激活': true,
2025-09-17T00:39:52.153359Z	      '是否推荐': false
2025-09-17T00:39:52.15351Z	    },
2025-09-17T00:39:52.15363Z	    {
2025-09-17T00:39:52.153754Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-17T00:39:52.153864Z	      '名称': 'LEM',
2025-09-17T00:39:52.153965Z	      slug: 'lem',
2025-09-17T00:39:52.15407Z	      '是否激活': true,
2025-09-17T00:39:52.155045Z	      '是否推荐': false
2025-09-17T00:39:52.155321Z	    },
2025-09-17T00:39:52.155477Z	    {
2025-09-17T00:39:52.155623Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-17T00:39:52.1558Z	      '名称': 'Littelfuse',
2025-09-17T00:39:52.155934Z	      slug: 'littelfuse',
2025-09-17T00:39:52.156063Z	      '是否激活': true,
2025-09-17T00:39:52.156188Z	      '是否推荐': false
2025-09-17T00:39:52.156426Z	    },
2025-09-17T00:39:52.156569Z	    {
2025-09-17T00:39:52.156689Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-17T00:39:52.156797Z	      '名称': 'MediaTek',
2025-09-17T00:39:52.1569Z	      slug: 'mediatek',
2025-09-17T00:39:52.157003Z	      '是否激活': true,
2025-09-17T00:39:52.157118Z	      '是否推荐': false
2025-09-17T00:39:52.157223Z	    },
2025-09-17T00:39:52.157349Z	    {
2025-09-17T00:39:52.157456Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-17T00:39:52.157565Z	      '名称': 'PI',
2025-09-17T00:39:52.157679Z	      slug: 'pi',
2025-09-17T00:39:52.157805Z	      '是否激活': true,
2025-09-17T00:39:52.15791Z	      '是否推荐': false
2025-09-17T00:39:52.158012Z	    },
2025-09-17T00:39:52.158114Z	    {
2025-09-17T00:39:52.15822Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-17T00:39:52.158353Z	      '名称': 'Qualcomm',
2025-09-17T00:39:52.187661Z	      slug: 'qualcomm',
2025-09-17T00:39:52.187916Z	      '是否激活': true,
2025-09-17T00:39:52.188076Z	      '是否推荐': true
2025-09-17T00:39:52.188188Z	    },
2025-09-17T00:39:52.188314Z	    {
2025-09-17T00:39:52.188526Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-17T00:39:52.188661Z	      '名称': 'Sanrex',
2025-09-17T00:39:52.188794Z	      slug: 'sanrex',
2025-09-17T00:39:52.188901Z	      '是否激活': true,
2025-09-17T00:39:52.189004Z	      '是否推荐': false
2025-09-17T00:39:52.189334Z	    },
2025-09-17T00:39:52.189553Z	    {
2025-09-17T00:39:52.18972Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-17T00:39:52.189825Z	      '名称': 'Semikron',
2025-09-17T00:39:52.189922Z	      slug: 'semikron',
2025-09-17T00:39:52.190012Z	      '是否激活': true,
2025-09-17T00:39:52.19012Z	      '是否推荐': true
2025-09-17T00:39:52.19024Z	    },
2025-09-17T00:39:52.19036Z	    {
2025-09-17T00:39:52.190455Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-17T00:39:52.190544Z	      '名称': 'ncc',
2025-09-17T00:39:52.19065Z	      slug: 'ncc',
2025-09-17T00:39:52.190745Z	      '是否激活': true,
2025-09-17T00:39:52.190831Z	      '是否推荐': false
2025-09-17T00:39:52.190924Z	    },
2025-09-17T00:39:52.191017Z	    {
2025-09-17T00:39:52.191109Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-17T00:39:52.191219Z	      '名称': '英飞凌',
2025-09-17T00:39:52.191356Z	      slug: '英飞凌',
2025-09-17T00:39:52.191461Z	      '是否激活': true,
2025-09-17T00:39:52.191555Z	      '是否推荐': true
2025-09-17T00:39:52.19165Z	    }
2025-09-17T00:39:52.191749Z	  ]
2025-09-17T00:39:52.191836Z	}
2025-09-17T00:39:52.191944Z	📊 品牌查询结果: {
2025-09-17T00:39:52.192052Z	  '数量': 13,
2025-09-17T00:39:52.192153Z	  '品牌列表': [
2025-09-17T00:39:52.192254Z	    {
2025-09-17T00:39:52.192395Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:52.192495Z	      '名称': 'CREE',
2025-09-17T00:39:52.192621Z	      slug: 'cree',
2025-09-17T00:39:52.192734Z	      '是否激活': true,
2025-09-17T00:39:52.192842Z	      '是否推荐': false
2025-09-17T00:39:52.192951Z	    },
2025-09-17T00:39:52.193055Z	    {
2025-09-17T00:39:52.193154Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-17T00:39:52.193561Z	      '名称': 'Electronicon',
2025-09-17T00:39:52.200213Z	      slug: 'Electronicon',
2025-09-17T00:39:52.200609Z	      '是否激活': true,
2025-09-17T00:39:52.200844Z	      '是否推荐': false
2025-09-17T00:39:52.201128Z	    },
2025-09-17T00:39:52.201351Z	    {
2025-09-17T00:39:52.201606Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-17T00:39:52.201847Z	      '名称': 'Epcos',
2025-09-17T00:39:52.202218Z	      slug: 'epcos',
2025-09-17T00:39:52.202901Z	      '是否激活': true,
2025-09-17T00:39:52.203104Z	      '是否推荐': false
2025-09-17T00:39:52.203279Z	    },
2025-09-17T00:39:52.203441Z	    {
2025-09-17T00:39:52.203569Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:52.20372Z	      '名称': 'IXYS',
2025-09-17T00:39:52.203879Z	      slug: 'ixys',
2025-09-17T00:39:52.204025Z	      '是否激活': true,
2025-09-17T00:39:52.204171Z	      '是否推荐': false
2025-09-17T00:39:52.204362Z	    },
2025-09-17T00:39:52.204517Z	    {
2025-09-17T00:39:52.204647Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-17T00:39:52.204808Z	      '名称': 'LEM',
2025-09-17T00:39:52.204948Z	      slug: 'lem',
2025-09-17T00:39:52.205109Z	      '是否激活': true,
2025-09-17T00:39:52.205672Z	      '是否推荐': false
2025-09-17T00:39:52.205836Z	    },
2025-09-17T00:39:52.205964Z	    {
2025-09-17T00:39:52.206092Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-17T00:39:52.206191Z	      '名称': 'Littelfuse',
2025-09-17T00:39:52.206331Z	      slug: 'littelfuse',
2025-09-17T00:39:52.206426Z	      '是否激活': true,
2025-09-17T00:39:52.207348Z	      '是否推荐': false
2025-09-17T00:39:52.207885Z	    },
2025-09-17T00:39:52.208256Z	    {
2025-09-17T00:39:52.208451Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-17T00:39:52.20862Z	      '名称': 'MediaTek',
2025-09-17T00:39:52.208788Z	      slug: 'mediatek',
2025-09-17T00:39:52.208941Z	      '是否激活': true,
2025-09-17T00:39:52.209067Z	      '是否推荐': false
2025-09-17T00:39:52.209198Z	    },
2025-09-17T00:39:52.209351Z	    {
2025-09-17T00:39:52.209543Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-17T00:39:52.209714Z	      '名称': 'PI',
2025-09-17T00:39:52.209841Z	      slug: 'pi',
2025-09-17T00:39:52.209971Z	      '是否激活': true,
2025-09-17T00:39:52.21008Z	      '是否推荐': false
2025-09-17T00:39:52.210178Z	    },
2025-09-17T00:39:52.21029Z	    {
2025-09-17T00:39:52.2104Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-17T00:39:52.210501Z	      '名称': 'Qualcomm',
2025-09-17T00:39:52.212646Z	      slug: 'qualcomm',
2025-09-17T00:39:52.21281Z	      '是否激活': true,
2025-09-17T00:39:52.212926Z	      '是否推荐': true
2025-09-17T00:39:52.213826Z	    },
2025-09-17T00:39:52.214639Z	    {
2025-09-17T00:39:52.21508Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-17T00:39:52.215235Z	      '名称': 'Sanrex',
2025-09-17T00:39:52.215383Z	      slug: 'sanrex',
2025-09-17T00:39:52.215502Z	      '是否激活': true,
2025-09-17T00:39:52.215614Z	      '是否推荐': false
2025-09-17T00:39:52.215724Z	    },
2025-09-17T00:39:52.215829Z	    {
2025-09-17T00:39:52.215945Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-17T00:39:52.216053Z	      '名称': 'Semikron',
2025-09-17T00:39:52.216443Z	      slug: 'semikron',
2025-09-17T00:39:52.21695Z	      '是否激活': true,
2025-09-17T00:39:52.217461Z	      '是否推荐': true
2025-09-17T00:39:52.217594Z	    },
2025-09-17T00:39:52.217733Z	    {
2025-09-17T00:39:52.217849Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-17T00:39:52.217957Z	      '名称': 'ncc',
2025-09-17T00:39:52.218063Z	      slug: 'ncc',
2025-09-17T00:39:52.218164Z	      '是否激活': true,
2025-09-17T00:39:52.218285Z	      '是否推荐': false
2025-09-17T00:39:52.218403Z	    },
2025-09-17T00:39:52.220541Z	    {
2025-09-17T00:39:52.220711Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-17T00:39:52.220839Z	      '名称': '英飞凌',
2025-09-17T00:39:52.220958Z	      slug: '英飞凌',
2025-09-17T00:39:52.221069Z	      '是否激活': true,
2025-09-17T00:39:52.221182Z	      '是否推荐': true
2025-09-17T00:39:52.22133Z	    }
2025-09-17T00:39:52.222106Z	  ]
2025-09-17T00:39:52.222235Z	}
2025-09-17T00:39:52.222635Z	📊 品牌查询结果: {
2025-09-17T00:39:52.222763Z	  '数量': 13,
2025-09-17T00:39:52.223431Z	  '品牌列表': [
2025-09-17T00:39:52.223552Z	    {
2025-09-17T00:39:52.223659Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:52.223782Z	      '名称': 'CREE',
2025-09-17T00:39:52.223891Z	      slug: 'cree',
2025-09-17T00:39:52.225694Z	      '是否激活': true,
2025-09-17T00:39:52.227355Z	      '是否推荐': false
2025-09-17T00:39:52.227503Z	    },
2025-09-17T00:39:52.227607Z	    {
2025-09-17T00:39:52.227722Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-17T00:39:52.227827Z	      '名称': 'Electronicon',
2025-09-17T00:39:52.227928Z	      slug: 'Electronicon',
2025-09-17T00:39:52.228025Z	      '是否激活': true,
2025-09-17T00:39:52.228123Z	      '是否推荐': false
2025-09-17T00:39:52.228217Z	    },
2025-09-17T00:39:52.228335Z	    {
2025-09-17T00:39:52.228433Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-17T00:39:52.228536Z	      '名称': 'Epcos',
2025-09-17T00:39:52.228634Z	      slug: 'epcos',
2025-09-17T00:39:52.228747Z	      '是否激活': true,
2025-09-17T00:39:52.228853Z	      '是否推荐': false
2025-09-17T00:39:52.228948Z	    },
2025-09-17T00:39:52.229042Z	    {
2025-09-17T00:39:52.229137Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:52.229236Z	      '名称': 'IXYS',
2025-09-17T00:39:52.229349Z	      slug: 'ixys',
2025-09-17T00:39:52.22944Z	      '是否激活': true,
2025-09-17T00:39:52.229533Z	      '是否推荐': false
2025-09-17T00:39:52.229626Z	    },
2025-09-17T00:39:52.229737Z	    {
2025-09-17T00:39:52.229837Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-17T00:39:52.229933Z	      '名称': 'LEM',
2025-09-17T00:39:52.230182Z	      slug: 'lem',
2025-09-17T00:39:52.231584Z	      '是否激活': true,
2025-09-17T00:39:52.23173Z	      '是否推荐': false
2025-09-17T00:39:52.231851Z	    },
2025-09-17T00:39:52.232441Z	    {
2025-09-17T00:39:52.23291Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-17T00:39:52.233035Z	      '名称': 'Littelfuse',
2025-09-17T00:39:52.233476Z	      slug: 'littelfuse',
2025-09-17T00:39:52.233602Z	      '是否激活': true,
2025-09-17T00:39:52.233714Z	      '是否推荐': false
2025-09-17T00:39:52.233815Z	    },
2025-09-17T00:39:52.233911Z	    {
2025-09-17T00:39:52.234009Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-17T00:39:52.234154Z	      '名称': 'MediaTek',
2025-09-17T00:39:52.234344Z	      slug: 'mediatek',
2025-09-17T00:39:52.234471Z	      '是否激活': true,
2025-09-17T00:39:52.234591Z	      '是否推荐': false
2025-09-17T00:39:52.234733Z	    },
2025-09-17T00:39:52.235445Z	    {
2025-09-17T00:39:52.235651Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-17T00:39:52.235936Z	      '名称': 'PI',
2025-09-17T00:39:52.236151Z	      slug: 'pi',
2025-09-17T00:39:52.236295Z	      '是否激活': true,
2025-09-17T00:39:52.236415Z	      '是否推荐': false
2025-09-17T00:39:52.236526Z	    },
2025-09-17T00:39:52.23665Z	    {
2025-09-17T00:39:52.236809Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-17T00:39:52.236923Z	      '名称': 'Qualcomm',
2025-09-17T00:39:52.237027Z	      slug: 'qualcomm',
2025-09-17T00:39:52.237118Z	      '是否激活': true,
2025-09-17T00:39:52.237556Z	      '是否推荐': true
2025-09-17T00:39:52.287397Z	    },
2025-09-17T00:39:52.287927Z	    {
2025-09-17T00:39:52.288084Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-17T00:39:52.288192Z	      '名称': 'Sanrex',
2025-09-17T00:39:52.288777Z	      slug: 'sanrex',
2025-09-17T00:39:52.288919Z	      '是否激活': true,
2025-09-17T00:39:52.289031Z	      '是否推荐': false
2025-09-17T00:39:52.289133Z	    },
2025-09-17T00:39:52.289229Z	    {
2025-09-17T00:39:52.289346Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-17T00:39:52.289452Z	      '名称': 'Semikron',
2025-09-17T00:39:52.289553Z	      slug: 'semikron',
2025-09-17T00:39:52.289649Z	      '是否激活': true,
2025-09-17T00:39:52.290176Z	      '是否推荐': true
2025-09-17T00:39:52.290357Z	    },
2025-09-17T00:39:52.290467Z	    {
2025-09-17T00:39:52.29057Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-17T00:39:52.290689Z	      '名称': 'ncc',
2025-09-17T00:39:52.290818Z	      slug: 'ncc',
2025-09-17T00:39:52.290933Z	      '是否激活': true,
2025-09-17T00:39:52.291033Z	      '是否推荐': false
2025-09-17T00:39:52.291131Z	    },
2025-09-17T00:39:52.291224Z	    {
2025-09-17T00:39:52.29135Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-17T00:39:52.291769Z	      '名称': '英飞凌',
2025-09-17T00:39:52.291948Z	      slug: '英飞凌',
2025-09-17T00:39:52.292075Z	      '是否激活': true,
2025-09-17T00:39:52.292193Z	      '是否推荐': true
2025-09-17T00:39:52.292323Z	    }
2025-09-17T00:39:52.292439Z	  ]
2025-09-17T00:39:52.292582Z	}
2025-09-17T00:39:52.292701Z	📊 品牌查询结果: {
2025-09-17T00:39:52.292812Z	  '数量': 13,
2025-09-17T00:39:52.293049Z	  '品牌列表': [
2025-09-17T00:39:52.293301Z	    {
2025-09-17T00:39:52.293446Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:52.293582Z	      '名称': 'CREE',
2025-09-17T00:39:52.293692Z	      slug: 'cree',
2025-09-17T00:39:52.293803Z	      '是否激活': true,
2025-09-17T00:39:52.293927Z	      '是否推荐': false
2025-09-17T00:39:52.294069Z	    },
2025-09-17T00:39:52.294185Z	    {
2025-09-17T00:39:52.294317Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-17T00:39:52.294432Z	      '名称': 'Electronicon',
2025-09-17T00:39:52.29456Z	      slug: 'Electronicon',
2025-09-17T00:39:52.294669Z	      '是否激活': true,
2025-09-17T00:39:52.294779Z	      '是否推荐': false
2025-09-17T00:39:52.294887Z	    },
2025-09-17T00:39:52.295013Z	    {
2025-09-17T00:39:52.295376Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-17T00:39:52.297582Z	      '名称': 'Epcos',
2025-09-17T00:39:52.297711Z	      slug: 'epcos',
2025-09-17T00:39:52.29782Z	      '是否激活': true,
2025-09-17T00:39:52.298257Z	      '是否推荐': false
2025-09-17T00:39:52.298413Z	    },
2025-09-17T00:39:52.298536Z	    {
2025-09-17T00:39:52.298689Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:52.29886Z	      '名称': 'IXYS',
2025-09-17T00:39:52.299674Z	      slug: 'ixys',
2025-09-17T00:39:52.299852Z	      '是否激活': true,
2025-09-17T00:39:52.300815Z	      '是否推荐': false
2025-09-17T00:39:52.300962Z	    },
2025-09-17T00:39:52.301074Z	    {
2025-09-17T00:39:52.301176Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-17T00:39:52.301294Z	      '名称': 'LEM',
2025-09-17T00:39:52.301409Z	      slug: 'lem',
2025-09-17T00:39:52.301513Z	      '是否激活': true,
2025-09-17T00:39:52.301604Z	      '是否推荐': false
2025-09-17T00:39:52.301701Z	    },
2025-09-17T00:39:52.301795Z	    {
2025-09-17T00:39:52.301888Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-17T00:39:52.301981Z	      '名称': 'Littelfuse',
2025-09-17T00:39:52.302081Z	      slug: 'littelfuse',
2025-09-17T00:39:52.302184Z	      '是否激活': true,
2025-09-17T00:39:52.302307Z	      '是否推荐': false
2025-09-17T00:39:52.302417Z	    },
2025-09-17T00:39:52.302537Z	    {
2025-09-17T00:39:52.302644Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-17T00:39:52.302757Z	      '名称': 'MediaTek',
2025-09-17T00:39:52.30286Z	      slug: 'mediatek',
2025-09-17T00:39:52.302959Z	      '是否激活': true,
2025-09-17T00:39:52.303179Z	      '是否推荐': false
2025-09-17T00:39:52.30331Z	    },
2025-09-17T00:39:52.303418Z	    {
2025-09-17T00:39:52.303538Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-17T00:39:52.303645Z	      '名称': 'PI',
2025-09-17T00:39:52.303751Z	      slug: 'pi',
2025-09-17T00:39:52.303847Z	      '是否激活': true,
2025-09-17T00:39:52.303941Z	      '是否推荐': false
2025-09-17T00:39:52.304034Z	    },
2025-09-17T00:39:52.304248Z	    {
2025-09-17T00:39:52.30438Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-17T00:39:52.304486Z	      '名称': 'Qualcomm',
2025-09-17T00:39:52.304615Z	      slug: 'qualcomm',
2025-09-17T00:39:52.304731Z	      '是否激活': true,
2025-09-17T00:39:52.304833Z	      '是否推荐': true
2025-09-17T00:39:52.304924Z	    },
2025-09-17T00:39:52.305028Z	    {
2025-09-17T00:39:52.305124Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-17T00:39:52.305215Z	      '名称': 'Sanrex',
2025-09-17T00:39:52.305332Z	      slug: 'sanrex',
2025-09-17T00:39:52.305435Z	      '是否激活': true,
2025-09-17T00:39:52.305534Z	      '是否推荐': false
2025-09-17T00:39:52.305651Z	    },
2025-09-17T00:39:52.305773Z	    {
2025-09-17T00:39:52.305884Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-17T00:39:52.305997Z	      '名称': 'Semikron',
2025-09-17T00:39:52.306107Z	      slug: 'semikron',
2025-09-17T00:39:52.306207Z	      '是否激活': true,
2025-09-17T00:39:52.306334Z	      '是否推荐': true
2025-09-17T00:39:52.306445Z	    },
2025-09-17T00:39:52.30655Z	    {
2025-09-17T00:39:52.306653Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-17T00:39:52.306786Z	      '名称': 'ncc',
2025-09-17T00:39:52.306899Z	      slug: 'ncc',
2025-09-17T00:39:52.307017Z	      '是否激活': true,
2025-09-17T00:39:52.30711Z	      '是否推荐': false
2025-09-17T00:39:52.307212Z	    },
2025-09-17T00:39:52.307345Z	    {
2025-09-17T00:39:52.307453Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-17T00:39:52.307557Z	      '名称': '英飞凌',
2025-09-17T00:39:52.30766Z	      slug: '英飞凌',
2025-09-17T00:39:52.307784Z	      '是否激活': true,
2025-09-17T00:39:52.307891Z	      '是否推荐': true
2025-09-17T00:39:52.307994Z	    }
2025-09-17T00:39:52.308097Z	  ]
2025-09-17T00:39:52.308197Z	}
2025-09-17T00:39:52.308321Z	📊 品牌查询结果: {
2025-09-17T00:39:52.308438Z	  '数量': 13,
2025-09-17T00:39:52.308556Z	  '品牌列表': [
2025-09-17T00:39:52.308658Z	    {
2025-09-17T00:39:52.308802Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:52.308921Z	      '名称': 'CREE',
2025-09-17T00:39:52.309025Z	      slug: 'cree',
2025-09-17T00:39:52.309144Z	      '是否激活': true,
2025-09-17T00:39:52.30928Z	      '是否推荐': false
2025-09-17T00:39:52.309441Z	    },
2025-09-17T00:39:52.309612Z	    {
2025-09-17T00:39:52.309736Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-17T00:39:52.309844Z	      '名称': 'Electronicon',
2025-09-17T00:39:52.309965Z	      slug: 'Electronicon',
2025-09-17T00:39:52.310066Z	      '是否激活': true,
2025-09-17T00:39:52.310165Z	      '是否推荐': false
2025-09-17T00:39:52.310295Z	    },
2025-09-17T00:39:52.310583Z	    {
2025-09-17T00:39:52.310709Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-17T00:39:52.310829Z	      '名称': 'Epcos',
2025-09-17T00:39:52.310937Z	      slug: 'epcos',
2025-09-17T00:39:52.311046Z	      '是否激活': true,
2025-09-17T00:39:52.311429Z	      '是否推荐': false
2025-09-17T00:39:52.311575Z	    },
2025-09-17T00:39:52.312095Z	    {
2025-09-17T00:39:52.312566Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:52.312907Z	      '名称': 'IXYS',
2025-09-17T00:39:52.313037Z	      slug: 'ixys',
2025-09-17T00:39:52.313142Z	      '是否激活': true,
2025-09-17T00:39:52.313521Z	      '是否推荐': false
2025-09-17T00:39:52.313845Z	    },
2025-09-17T00:39:52.313957Z	    {
2025-09-17T00:39:52.314062Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-17T00:39:52.314175Z	      '名称': 'LEM',
2025-09-17T00:39:52.314313Z	      slug: 'lem',
2025-09-17T00:39:52.314711Z	      '是否激活': true,
2025-09-17T00:39:52.315077Z	      '是否推荐': false
2025-09-17T00:39:52.315205Z	    },
2025-09-17T00:39:52.315617Z	    {
2025-09-17T00:39:52.31612Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-17T00:39:52.316461Z	      '名称': 'Littelfuse',
2025-09-17T00:39:52.316575Z	      slug: 'littelfuse',
2025-09-17T00:39:52.317147Z	      '是否激活': true,
2025-09-17T00:39:52.317455Z	      '是否推荐': false
2025-09-17T00:39:52.317565Z	    },
2025-09-17T00:39:52.318063Z	    {
2025-09-17T00:39:52.318368Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-17T00:39:52.318673Z	      '名称': 'MediaTek',
2025-09-17T00:39:52.318798Z	      slug: 'mediatek',
2025-09-17T00:39:52.318902Z	      '是否激活': true,
2025-09-17T00:39:52.319023Z	      '是否推荐': false
2025-09-17T00:39:52.319153Z	    },
2025-09-17T00:39:52.319262Z	    {
2025-09-17T00:39:52.319406Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-17T00:39:52.319528Z	      '名称': 'PI',
2025-09-17T00:39:52.319659Z	      slug: 'pi',
2025-09-17T00:39:52.319796Z	      '是否激活': true,
2025-09-17T00:39:52.319907Z	      '是否推荐': false
2025-09-17T00:39:52.320013Z	    },
2025-09-17T00:39:52.320106Z	    {
2025-09-17T00:39:52.320212Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-17T00:39:52.320354Z	      '名称': 'Qualcomm',
2025-09-17T00:39:52.320471Z	      slug: 'qualcomm',
2025-09-17T00:39:52.320577Z	      '是否激活': true,
2025-09-17T00:39:52.320692Z	      '是否推荐': true
2025-09-17T00:39:52.320812Z	    },
2025-09-17T00:39:52.320918Z	    {
2025-09-17T00:39:52.321018Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-17T00:39:52.32112Z	      '名称': 'Sanrex',
2025-09-17T00:39:52.321529Z	      slug: 'sanrex',
2025-09-17T00:39:52.321685Z	      '是否激活': true,
2025-09-17T00:39:52.321794Z	      '是否推荐': false
2025-09-17T00:39:52.321911Z	    },
2025-09-17T00:39:52.322021Z	    {
2025-09-17T00:39:52.322117Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-17T00:39:52.322207Z	      '名称': 'Semikron',
2025-09-17T00:39:52.322318Z	      slug: 'semikron',
2025-09-17T00:39:52.322408Z	      '是否激活': true,
2025-09-17T00:39:52.322806Z	      '是否推荐': true
2025-09-17T00:39:52.323227Z	    },
2025-09-17T00:39:52.32369Z	    {
2025-09-17T00:39:52.32385Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-17T00:39:52.323978Z	      '名称': 'ncc',
2025-09-17T00:39:52.324132Z	      slug: 'ncc',
2025-09-17T00:39:52.324314Z	      '是否激活': true,
2025-09-17T00:39:52.324423Z	      '是否推荐': false
2025-09-17T00:39:52.324514Z	    },
2025-09-17T00:39:52.324601Z	    {
2025-09-17T00:39:52.324692Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-17T00:39:52.324807Z	      '名称': '英飞凌',
2025-09-17T00:39:52.324909Z	      slug: '英飞凌',
2025-09-17T00:39:52.325004Z	      '是否激活': true,
2025-09-17T00:39:52.325094Z	      '是否推荐': true
2025-09-17T00:39:52.32519Z	    }
2025-09-17T00:39:52.325293Z	  ]
2025-09-17T00:39:52.325383Z	}
2025-09-17T00:39:52.325467Z	📊 品牌查询结果: {
2025-09-17T00:39:52.325561Z	  '数量': 13,
2025-09-17T00:39:52.32581Z	  '品牌列表': [
2025-09-17T00:39:52.326216Z	    {
2025-09-17T00:39:52.326573Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:52.327517Z	      '名称': 'CREE',
2025-09-17T00:39:52.327682Z	      slug: 'cree',
2025-09-17T00:39:52.327804Z	      '是否激活': true,
2025-09-17T00:39:52.327922Z	      '是否推荐': false
2025-09-17T00:39:52.328023Z	    },
2025-09-17T00:39:52.328111Z	    {
2025-09-17T00:39:52.328199Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-17T00:39:52.328329Z	      '名称': 'Electronicon',
2025-09-17T00:39:52.328442Z	      slug: 'Electronicon',
2025-09-17T00:39:52.328549Z	      '是否激活': true,
2025-09-17T00:39:52.328675Z	      '是否推荐': false
2025-09-17T00:39:52.328796Z	    },
2025-09-17T00:39:52.328925Z	    {
2025-09-17T00:39:52.32906Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-17T00:39:52.32916Z	      '名称': 'Epcos',
2025-09-17T00:39:52.329282Z	      slug: 'epcos',
2025-09-17T00:39:52.32942Z	      '是否激活': true,
2025-09-17T00:39:52.329526Z	      '是否推荐': false
2025-09-17T00:39:52.329635Z	    },
2025-09-17T00:39:52.329742Z	    {
2025-09-17T00:39:52.329849Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:52.329963Z	      '名称': 'IXYS',
2025-09-17T00:39:52.330068Z	      slug: 'ixys',
2025-09-17T00:39:52.330171Z	      '是否激活': true,
2025-09-17T00:39:52.330281Z	      '是否推荐': false
2025-09-17T00:39:52.330403Z	    },
2025-09-17T00:39:52.330496Z	    {
2025-09-17T00:39:52.330595Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-17T00:39:52.330696Z	      '名称': 'LEM',
2025-09-17T00:39:52.3308Z	      slug: 'lem',
2025-09-17T00:39:52.330893Z	      '是否激活': true,
2025-09-17T00:39:52.331Z	      '是否推荐': false
2025-09-17T00:39:52.331119Z	    },
2025-09-17T00:39:52.331223Z	    {
2025-09-17T00:39:52.331343Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-17T00:39:52.331522Z	      '名称': 'Littelfuse',
2025-09-17T00:39:52.331652Z	      slug: 'littelfuse',
2025-09-17T00:39:52.331758Z	      '是否激活': true,
2025-09-17T00:39:52.331857Z	      '是否推荐': false
2025-09-17T00:39:52.331949Z	    },
2025-09-17T00:39:52.332052Z	    {
2025-09-17T00:39:52.332149Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-17T00:39:52.33225Z	      '名称': 'MediaTek',
2025-09-17T00:39:52.33237Z	      slug: 'mediatek',
2025-09-17T00:39:52.332468Z	      '是否激活': true,
2025-09-17T00:39:52.332603Z	      '是否推荐': false
2025-09-17T00:39:52.332701Z	    },
2025-09-17T00:39:52.332802Z	    {
2025-09-17T00:39:52.332907Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-17T00:39:52.333012Z	      '名称': 'PI',
2025-09-17T00:39:52.333116Z	      slug: 'pi',
2025-09-17T00:39:52.333214Z	      '是否激活': true,
2025-09-17T00:39:52.333322Z	      '是否推荐': false
2025-09-17T00:39:52.333424Z	    },
2025-09-17T00:39:52.333528Z	    {
2025-09-17T00:39:52.333628Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-17T00:39:52.333721Z	      '名称': 'Qualcomm',
2025-09-17T00:39:52.33382Z	      slug: 'qualcomm',
2025-09-17T00:39:52.333914Z	      '是否激活': true,
2025-09-17T00:39:52.334018Z	      '是否推荐': true
2025-09-17T00:39:52.334119Z	    },
2025-09-17T00:39:52.334213Z	    {
2025-09-17T00:39:52.334323Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-17T00:39:52.334421Z	      '名称': 'Sanrex',
2025-09-17T00:39:52.334517Z	      slug: 'sanrex',
2025-09-17T00:39:52.334613Z	      '是否激活': true,
2025-09-17T00:39:52.33471Z	      '是否推荐': false
2025-09-17T00:39:52.334803Z	    },
2025-09-17T00:39:52.334896Z	    {
2025-09-17T00:39:52.334993Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-17T00:39:52.335105Z	      '名称': 'Semikron',
2025-09-17T00:39:52.335237Z	      slug: 'semikron',
2025-09-17T00:39:52.33541Z	      '是否激活': true,
2025-09-17T00:39:52.33553Z	      '是否推荐': true
2025-09-17T00:39:52.33563Z	    },
2025-09-17T00:39:52.335727Z	    {
2025-09-17T00:39:52.33582Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-17T00:39:52.335922Z	      '名称': 'ncc',
2025-09-17T00:39:52.336053Z	      slug: 'ncc',
2025-09-17T00:39:52.3362Z	      '是否激活': true,
2025-09-17T00:39:52.336367Z	      '是否推荐': false
2025-09-17T00:39:52.336477Z	    },
2025-09-17T00:39:52.336595Z	    {
2025-09-17T00:39:52.336693Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-17T00:39:52.336817Z	      '名称': '英飞凌',
2025-09-17T00:39:52.336982Z	      slug: '英飞凌',
2025-09-17T00:39:52.337106Z	      '是否激活': true,
2025-09-17T00:39:52.337222Z	      '是否推荐': true
2025-09-17T00:39:52.337365Z	    }
2025-09-17T00:39:52.337478Z	  ]
2025-09-17T00:39:52.337587Z	}
2025-09-17T00:39:52.337704Z	📊 品牌查询结果: {
2025-09-17T00:39:52.337816Z	  '数量': 13,
2025-09-17T00:39:52.337932Z	  '品牌列表': [
2025-09-17T00:39:52.338047Z	    {
2025-09-17T00:39:52.33815Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:52.338252Z	      '名称': 'CREE',
2025-09-17T00:39:52.33839Z	      slug: 'cree',
2025-09-17T00:39:52.338508Z	      '是否激活': true,
2025-09-17T00:39:52.338617Z	      '是否推荐': false
2025-09-17T00:39:52.338719Z	    },
2025-09-17T00:39:52.338827Z	    {
2025-09-17T00:39:52.338938Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-17T00:39:52.339044Z	      '名称': 'Electronicon',
2025-09-17T00:39:52.339145Z	      slug: 'Electronicon',
2025-09-17T00:39:52.339248Z	      '是否激活': true,
2025-09-17T00:39:52.339362Z	      '是否推荐': false
2025-09-17T00:39:52.339615Z	    },
2025-09-17T00:39:52.339801Z	    {
2025-09-17T00:39:52.340049Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-17T00:39:52.340218Z	      '名称': 'Epcos',
2025-09-17T00:39:52.340428Z	      slug: 'epcos',
2025-09-17T00:39:52.34061Z	      '是否激活': true,
2025-09-17T00:39:52.387854Z	      '是否推荐': false
2025-09-17T00:39:52.388225Z	    },
2025-09-17T00:39:52.389032Z	    {
2025-09-17T00:39:52.389535Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:52.389986Z	      '名称': 'IXYS',
2025-09-17T00:39:52.390425Z	      slug: 'ixys',
2025-09-17T00:39:52.390826Z	      '是否激活': true,
2025-09-17T00:39:52.391234Z	      '是否推荐': false
2025-09-17T00:39:52.39246Z	    },
2025-09-17T00:39:52.39287Z	    {
2025-09-17T00:39:52.393247Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-17T00:39:52.393662Z	      '名称': 'LEM',
2025-09-17T00:39:52.394043Z	      slug: 'lem',
2025-09-17T00:39:52.394438Z	      '是否激活': true,
2025-09-17T00:39:52.395098Z	      '是否推荐': false
2025-09-17T00:39:52.39892Z	    },
2025-09-17T00:39:52.401609Z	    {
2025-09-17T00:39:52.403856Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-17T00:39:52.404025Z	      '名称': 'Littelfuse',
2025-09-17T00:39:52.411361Z	      slug: 'littelfuse',
2025-09-17T00:39:52.411561Z	      '是否激活': true,
2025-09-17T00:39:52.41172Z	      '是否推荐': false
2025-09-17T00:39:52.411966Z	    },
2025-09-17T00:39:52.412462Z	    {
2025-09-17T00:39:52.41262Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-17T00:39:52.412721Z	      '名称': 'MediaTek',
2025-09-17T00:39:52.412812Z	      slug: 'mediatek',
2025-09-17T00:39:52.412903Z	      '是否激活': true,
2025-09-17T00:39:52.413006Z	      '是否推荐': false
2025-09-17T00:39:52.413101Z	    },
2025-09-17T00:39:52.413186Z	    {
2025-09-17T00:39:52.4133Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-17T00:39:52.413397Z	      '名称': 'PI',
2025-09-17T00:39:52.413488Z	      slug: 'pi',
2025-09-17T00:39:52.413572Z	      '是否激活': true,
2025-09-17T00:39:52.413663Z	      '是否推荐': false
2025-09-17T00:39:52.413755Z	    },
2025-09-17T00:39:52.413845Z	    {
2025-09-17T00:39:52.41393Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-17T00:39:52.414035Z	      '名称': 'Qualcomm',
2025-09-17T00:39:52.414468Z	      slug: 'qualcomm',
2025-09-17T00:39:52.414844Z	      '是否激活': true,
2025-09-17T00:39:52.415052Z	      '是否推荐': true
2025-09-17T00:39:52.415204Z	    },
2025-09-17T00:39:52.415377Z	    {
2025-09-17T00:39:52.415548Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-17T00:39:52.416518Z	      '名称': 'Sanrex',
2025-09-17T00:39:52.416731Z	      slug: 'sanrex',
2025-09-17T00:39:52.416855Z	      '是否激活': true,
2025-09-17T00:39:52.416961Z	      '是否推荐': false
2025-09-17T00:39:52.417102Z	    },
2025-09-17T00:39:52.417203Z	    {
2025-09-17T00:39:52.417348Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-17T00:39:52.417461Z	      '名称': 'Semikron',
2025-09-17T00:39:52.41756Z	      slug: 'semikron',
2025-09-17T00:39:52.417665Z	      '是否激活': true,
2025-09-17T00:39:52.417779Z	      '是否推荐': true
2025-09-17T00:39:52.417879Z	    },
2025-09-17T00:39:52.417973Z	    {
2025-09-17T00:39:52.418069Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-17T00:39:52.418165Z	      '名称': 'ncc',
2025-09-17T00:39:52.418281Z	      slug: 'ncc',
2025-09-17T00:39:52.418389Z	      '是否激活': true,
2025-09-17T00:39:52.418494Z	      '是否推荐': false
2025-09-17T00:39:52.418594Z	    },
2025-09-17T00:39:52.418688Z	    {
2025-09-17T00:39:52.418785Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-17T00:39:52.41888Z	      '名称': '英飞凌',
2025-09-17T00:39:52.418974Z	      slug: '英飞凌',
2025-09-17T00:39:52.419068Z	      '是否激活': true,
2025-09-17T00:39:52.419156Z	      '是否推荐': true
2025-09-17T00:39:52.419281Z	    }
2025-09-17T00:39:52.419387Z	  ]
2025-09-17T00:39:52.41948Z	}
2025-09-17T00:39:52.41957Z	📊 品牌查询结果: {
2025-09-17T00:39:52.419672Z	  '数量': 13,
2025-09-17T00:39:52.419782Z	  '品牌列表': [
2025-09-17T00:39:52.419882Z	    {
2025-09-17T00:39:52.419978Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:52.420088Z	      '名称': 'CREE',
2025-09-17T00:39:52.420195Z	      slug: 'cree',
2025-09-17T00:39:52.420315Z	      '是否激活': true,
2025-09-17T00:39:52.420421Z	      '是否推荐': false
2025-09-17T00:39:52.420527Z	    },
2025-09-17T00:39:52.420615Z	    {
2025-09-17T00:39:52.420701Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-17T00:39:52.420801Z	      '名称': 'Electronicon',
2025-09-17T00:39:52.420896Z	      slug: 'Electronicon',
2025-09-17T00:39:52.420985Z	      '是否激活': true,
2025-09-17T00:39:52.421089Z	      '是否推荐': false
2025-09-17T00:39:52.421193Z	    },
2025-09-17T00:39:52.421335Z	    {
2025-09-17T00:39:52.421445Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-17T00:39:52.421562Z	      '名称': 'Epcos',
2025-09-17T00:39:52.421667Z	      slug: 'epcos',
2025-09-17T00:39:52.421777Z	      '是否激活': true,
2025-09-17T00:39:52.421881Z	      '是否推荐': false
2025-09-17T00:39:52.421981Z	    },
2025-09-17T00:39:52.42208Z	    {
2025-09-17T00:39:52.422173Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:52.422287Z	      '名称': 'IXYS',
2025-09-17T00:39:52.422397Z	      slug: 'ixys',
2025-09-17T00:39:52.422496Z	      '是否激活': true,
2025-09-17T00:39:52.422589Z	      '是否推荐': false
2025-09-17T00:39:52.422684Z	    },
2025-09-17T00:39:52.42279Z	    {
2025-09-17T00:39:52.422889Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-17T00:39:52.422982Z	      '名称': 'LEM',
2025-09-17T00:39:52.423076Z	      slug: 'lem',
2025-09-17T00:39:52.423167Z	      '是否激活': true,
2025-09-17T00:39:52.423263Z	      '是否推荐': false
2025-09-17T00:39:52.423388Z	    },
2025-09-17T00:39:52.423489Z	    {
2025-09-17T00:39:52.423594Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-17T00:39:52.423688Z	      '名称': 'Littelfuse',
2025-09-17T00:39:52.423797Z	      slug: 'littelfuse',
2025-09-17T00:39:52.4239Z	      '是否激活': true,
2025-09-17T00:39:52.424031Z	      '是否推荐': false
2025-09-17T00:39:52.42419Z	    },
2025-09-17T00:39:52.424321Z	    {
2025-09-17T00:39:52.42442Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-17T00:39:52.42451Z	      '名称': 'MediaTek',
2025-09-17T00:39:52.424599Z	      slug: 'mediatek',
2025-09-17T00:39:52.4247Z	      '是否激活': true,
2025-09-17T00:39:52.424795Z	      '是否推荐': false
2025-09-17T00:39:52.424916Z	    },
2025-09-17T00:39:52.425001Z	    {
2025-09-17T00:39:52.425083Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-17T00:39:52.425168Z	      '名称': 'PI',
2025-09-17T00:39:52.425247Z	      slug: 'pi',
2025-09-17T00:39:52.425361Z	      '是否激活': true,
2025-09-17T00:39:52.425454Z	      '是否推荐': false
2025-09-17T00:39:52.425544Z	    },
2025-09-17T00:39:52.425628Z	    {
2025-09-17T00:39:52.425727Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-17T00:39:52.425814Z	      '名称': 'Qualcomm',
2025-09-17T00:39:52.425899Z	      slug: 'qualcomm',
2025-09-17T00:39:52.425982Z	      '是否激活': true,
2025-09-17T00:39:52.426066Z	      '是否推荐': true
2025-09-17T00:39:52.426152Z	    },
2025-09-17T00:39:52.426244Z	    {
2025-09-17T00:39:52.426351Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-17T00:39:52.426454Z	      '名称': 'Sanrex',
2025-09-17T00:39:52.426545Z	      slug: 'sanrex',
2025-09-17T00:39:52.426626Z	      '是否激活': true,
2025-09-17T00:39:52.426724Z	      '是否推荐': false
2025-09-17T00:39:52.42681Z	    },
2025-09-17T00:39:52.42689Z	    {
2025-09-17T00:39:52.426967Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-17T00:39:52.427057Z	      '名称': 'Semikron',
2025-09-17T00:39:52.427147Z	      slug: 'semikron',
2025-09-17T00:39:52.435175Z	      '是否激活': true,
2025-09-17T00:39:52.435379Z	      '是否推荐': true
2025-09-17T00:39:52.435508Z	    },
2025-09-17T00:39:52.435613Z	    {
2025-09-17T00:39:52.435714Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-17T00:39:52.435842Z	      '名称': 'ncc',
2025-09-17T00:39:52.488349Z	      slug: 'ncc',
2025-09-17T00:39:52.488518Z	      '是否激活': true,
2025-09-17T00:39:52.488628Z	      '是否推荐': false
2025-09-17T00:39:52.488729Z	    },
2025-09-17T00:39:52.488847Z	    {
2025-09-17T00:39:52.48895Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-17T00:39:52.489046Z	      '名称': '英飞凌',
2025-09-17T00:39:52.48915Z	      slug: '英飞凌',
2025-09-17T00:39:52.489252Z	      '是否激活': true,
2025-09-17T00:39:52.489368Z	      '是否推荐': true
2025-09-17T00:39:52.489459Z	    }
2025-09-17T00:39:52.489555Z	  ]
2025-09-17T00:39:52.489649Z	}
2025-09-17T00:39:52.489744Z	📊 品牌查询结果: {
2025-09-17T00:39:52.489848Z	  '数量': 13,
2025-09-17T00:39:52.489962Z	  '品牌列表': [
2025-09-17T00:39:52.490061Z	    {
2025-09-17T00:39:52.490159Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:52.490251Z	      '名称': 'CREE',
2025-09-17T00:39:52.490374Z	      slug: 'cree',
2025-09-17T00:39:52.490488Z	      '是否激活': true,
2025-09-17T00:39:52.490597Z	      '是否推荐': false
2025-09-17T00:39:52.490725Z	    },
2025-09-17T00:39:52.491461Z	    {
2025-09-17T00:39:52.491622Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-17T00:39:52.491745Z	      '名称': 'Electronicon',
2025-09-17T00:39:52.491878Z	      slug: 'Electronicon',
2025-09-17T00:39:52.491988Z	      '是否激活': true,
2025-09-17T00:39:52.492107Z	      '是否推荐': false
2025-09-17T00:39:52.492224Z	    },
2025-09-17T00:39:52.492358Z	    {
2025-09-17T00:39:52.492492Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-17T00:39:52.492649Z	      '名称': 'Epcos',
2025-09-17T00:39:52.492776Z	      slug: 'epcos',
2025-09-17T00:39:52.492888Z	      '是否激活': true,
2025-09-17T00:39:52.493003Z	      '是否推荐': false
2025-09-17T00:39:52.493113Z	    },
2025-09-17T00:39:52.493478Z	    {
2025-09-17T00:39:52.493598Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:52.493996Z	      '名称': 'IXYS',
2025-09-17T00:39:52.494357Z	      slug: 'ixys',
2025-09-17T00:39:52.496154Z	      '是否激活': true,
2025-09-17T00:39:52.498501Z	      '是否推荐': false
2025-09-17T00:39:52.502525Z	    },
2025-09-17T00:39:52.504277Z	    {
2025-09-17T00:39:52.504442Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-17T00:39:52.504793Z	      '名称': 'LEM',
2025-09-17T00:39:52.505435Z	      slug: 'lem',
2025-09-17T00:39:52.505574Z	      '是否激活': true,
2025-09-17T00:39:52.505705Z	      '是否推荐': false
2025-09-17T00:39:52.505806Z	    },
2025-09-17T00:39:52.505907Z	    {
2025-09-17T00:39:52.506147Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-17T00:39:52.506328Z	      '名称': 'Littelfuse',
2025-09-17T00:39:52.506448Z	      slug: 'littelfuse',
2025-09-17T00:39:52.513194Z	      '是否激活': true,
2025-09-17T00:39:52.513389Z	      '是否推荐': false
2025-09-17T00:39:52.513521Z	    },
2025-09-17T00:39:52.513648Z	    {
2025-09-17T00:39:52.513771Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-17T00:39:52.513881Z	      '名称': 'MediaTek',
2025-09-17T00:39:52.513983Z	      slug: 'mediatek',
2025-09-17T00:39:52.514132Z	      '是否激活': true,
2025-09-17T00:39:52.514262Z	      '是否推荐': false
2025-09-17T00:39:52.51441Z	    },
2025-09-17T00:39:52.514597Z	    {
2025-09-17T00:39:52.514778Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-17T00:39:52.5149Z	      '名称': 'PI',
2025-09-17T00:39:52.515005Z	      slug: 'pi',
2025-09-17T00:39:52.515106Z	      '是否激活': true,
2025-09-17T00:39:52.51521Z	      '是否推荐': false
2025-09-17T00:39:52.515334Z	    },
2025-09-17T00:39:52.515439Z	    {
2025-09-17T00:39:52.515538Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-17T00:39:52.515633Z	      '名称': 'Qualcomm',
2025-09-17T00:39:52.51577Z	      slug: 'qualcomm',
2025-09-17T00:39:52.515884Z	      '是否激活': true,
2025-09-17T00:39:52.515999Z	      '是否推荐': true
2025-09-17T00:39:52.516107Z	    },
2025-09-17T00:39:52.51621Z	    {
2025-09-17T00:39:52.516336Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-17T00:39:52.516448Z	      '名称': 'Sanrex',
2025-09-17T00:39:52.516554Z	      slug: 'sanrex',
2025-09-17T00:39:52.516668Z	      '是否激活': true,
2025-09-17T00:39:52.516771Z	      '是否推荐': false
2025-09-17T00:39:52.516869Z	    },
2025-09-17T00:39:52.516975Z	    {
2025-09-17T00:39:52.517076Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-17T00:39:52.517185Z	      '名称': 'Semikron',
2025-09-17T00:39:52.517313Z	      slug: 'semikron',
2025-09-17T00:39:52.517416Z	      '是否激活': true,
2025-09-17T00:39:52.517522Z	      '是否推荐': true
2025-09-17T00:39:52.517621Z	    },
2025-09-17T00:39:52.517756Z	    {
2025-09-17T00:39:52.517847Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-17T00:39:52.517948Z	      '名称': 'ncc',
2025-09-17T00:39:52.518047Z	      slug: 'ncc',
2025-09-17T00:39:52.518136Z	      '是否激活': true,
2025-09-17T00:39:52.518229Z	      '是否推荐': false
2025-09-17T00:39:52.519307Z	    },
2025-09-17T00:39:52.520552Z	    {
2025-09-17T00:39:52.520708Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-17T00:39:52.520839Z	      '名称': '英飞凌',
2025-09-17T00:39:52.520946Z	      slug: '英飞凌',
2025-09-17T00:39:52.521054Z	      '是否激活': true,
2025-09-17T00:39:52.521161Z	      '是否推荐': true
2025-09-17T00:39:52.521281Z	    }
2025-09-17T00:39:52.52138Z	  ]
2025-09-17T00:39:52.521472Z	}
2025-09-17T00:39:52.52156Z	📊 品牌查询结果: {
2025-09-17T00:39:52.521662Z	  '数量': 13,
2025-09-17T00:39:52.521787Z	  '品牌列表': [
2025-09-17T00:39:52.521898Z	    {
2025-09-17T00:39:52.522003Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:52.522103Z	      '名称': 'CREE',
2025-09-17T00:39:52.52221Z	      slug: 'cree',
2025-09-17T00:39:52.522336Z	      '是否激活': true,
2025-09-17T00:39:52.52505Z	      '是否推荐': false
2025-09-17T00:39:52.525512Z	    },
2025-09-17T00:39:52.526069Z	    {
2025-09-17T00:39:52.526253Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-17T00:39:52.526412Z	      '名称': 'Electronicon',
2025-09-17T00:39:52.526516Z	      slug: 'Electronicon',
2025-09-17T00:39:52.526615Z	      '是否激活': true,
2025-09-17T00:39:52.52672Z	      '是否推荐': false
2025-09-17T00:39:52.526816Z	    },
2025-09-17T00:39:52.526921Z	    {
2025-09-17T00:39:52.527037Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-17T00:39:52.52716Z	      '名称': 'Epcos',
2025-09-17T00:39:52.527263Z	      slug: 'epcos',
2025-09-17T00:39:52.527383Z	      '是否激活': true,
2025-09-17T00:39:52.527496Z	      '是否推荐': false
2025-09-17T00:39:52.527598Z	    },
2025-09-17T00:39:52.527701Z	    {
2025-09-17T00:39:52.528084Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:52.528721Z	      '名称': 'IXYS',
2025-09-17T00:39:52.529798Z	      slug: 'ixys',
2025-09-17T00:39:52.530113Z	      '是否激活': true,
2025-09-17T00:39:52.531139Z	      '是否推荐': false
2025-09-17T00:39:52.531261Z	    },
2025-09-17T00:39:52.531379Z	    {
2025-09-17T00:39:52.531466Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-17T00:39:52.531554Z	      '名称': 'LEM',
2025-09-17T00:39:52.531638Z	      slug: 'lem',
2025-09-17T00:39:52.53173Z	      '是否激活': true,
2025-09-17T00:39:52.531812Z	      '是否推荐': false
2025-09-17T00:39:52.531902Z	    },
2025-09-17T00:39:52.531988Z	    {
2025-09-17T00:39:52.532076Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-17T00:39:52.532163Z	      '名称': 'Littelfuse',
2025-09-17T00:39:52.532249Z	      slug: 'littelfuse',
2025-09-17T00:39:52.532351Z	      '是否激活': true,
2025-09-17T00:39:52.532448Z	      '是否推荐': false
2025-09-17T00:39:52.532561Z	    },
2025-09-17T00:39:52.532646Z	    {
2025-09-17T00:39:52.53306Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-17T00:39:52.533178Z	      '名称': 'MediaTek',
2025-09-17T00:39:52.53329Z	      slug: 'mediatek',
2025-09-17T00:39:52.533379Z	      '是否激活': true,
2025-09-17T00:39:52.533463Z	      '是否推荐': false
2025-09-17T00:39:52.533542Z	    },
2025-09-17T00:39:52.533622Z	    {
2025-09-17T00:39:52.5337Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-17T00:39:52.533788Z	      '名称': 'PI',
2025-09-17T00:39:52.533868Z	      slug: 'pi',
2025-09-17T00:39:52.533945Z	      '是否激活': true,
2025-09-17T00:39:52.534107Z	      '是否推荐': false
2025-09-17T00:39:52.53424Z	    },
2025-09-17T00:39:52.534355Z	    {
2025-09-17T00:39:52.534464Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-17T00:39:52.534559Z	      '名称': 'Qualcomm',
2025-09-17T00:39:52.534847Z	      slug: 'qualcomm',
2025-09-17T00:39:52.534962Z	      '是否激活': true,
2025-09-17T00:39:52.535055Z	      '是否推荐': true
2025-09-17T00:39:52.535146Z	    },
2025-09-17T00:39:52.535231Z	    {
2025-09-17T00:39:52.535335Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-17T00:39:52.535767Z	      '名称': 'Sanrex',
2025-09-17T00:39:52.535886Z	      slug: 'sanrex',
2025-09-17T00:39:52.535994Z	      '是否激活': true,
2025-09-17T00:39:52.536449Z	      '是否推荐': false
2025-09-17T00:39:52.53657Z	    },
2025-09-17T00:39:52.53668Z	    {
2025-09-17T00:39:52.536774Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-17T00:39:52.536864Z	      '名称': 'Semikron',
2025-09-17T00:39:52.536953Z	      slug: 'semikron',
2025-09-17T00:39:52.53705Z	      '是否激活': true,
2025-09-17T00:39:52.537132Z	      '是否推荐': true
2025-09-17T00:39:52.538249Z	    },
2025-09-17T00:39:52.587518Z	    {
2025-09-17T00:39:52.58784Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-17T00:39:52.588009Z	      '名称': 'ncc',
2025-09-17T00:39:52.588708Z	      slug: 'ncc',
2025-09-17T00:39:52.589018Z	      '是否激活': true,
2025-09-17T00:39:52.589364Z	      '是否推荐': false
2025-09-17T00:39:52.589667Z	    },
2025-09-17T00:39:52.590116Z	    {
2025-09-17T00:39:52.590448Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-17T00:39:52.590582Z	      '名称': '英飞凌',
2025-09-17T00:39:52.590898Z	      slug: '英飞凌',
2025-09-17T00:39:52.591033Z	      '是否激活': true,
2025-09-17T00:39:52.591448Z	      '是否推荐': true
2025-09-17T00:39:52.592063Z	    }
2025-09-17T00:39:52.592414Z	  ]
2025-09-17T00:39:52.592619Z	}
2025-09-17T00:39:52.59334Z	🔍 执行品牌查询: {
2025-09-17T00:39:52.5939Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-17T00:39:52.602769Z	  'GROQ查询': '\n' +
2025-09-17T00:39:52.603216Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-17T00:39:52.603396Z	    '      \n' +
2025-09-17T00:39:52.603519Z	    '    _id,\n' +
2025-09-17T00:39:52.603626Z	    '    name,\n' +
2025-09-17T00:39:52.603738Z	    '    "slug": slug.current,\n' +
2025-09-17T00:39:52.60391Z	    '    logo,\n' +
2025-09-17T00:39:52.604041Z	    '    description,\n' +
2025-09-17T00:39:52.604194Z	    '    website,\n' +
2025-09-17T00:39:52.604615Z	    '    country,\n' +
2025-09-17T00:39:52.604754Z	    '    isActive,\n' +
2025-09-17T00:39:52.604876Z	    '    isFeatured\n' +
2025-09-17T00:39:52.604986Z	    '  \n' +
2025-09-17T00:39:52.605091Z	    '    }\n' +
2025-09-17T00:39:52.605194Z	    '  ',
2025-09-17T00:39:52.605324Z	  '是否仅获取推荐': false
2025-09-17T00:39:52.605437Z	}
2025-09-17T00:39:52.605571Z	📊 品牌查询结果: {
2025-09-17T00:39:52.605684Z	  '数量': 13,
2025-09-17T00:39:52.605812Z	  '品牌列表': [
2025-09-17T00:39:52.605934Z	    {
2025-09-17T00:39:52.606038Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:52.606151Z	      '名称': 'CREE',
2025-09-17T00:39:52.606616Z	      slug: 'cree',
2025-09-17T00:39:52.606809Z	      '是否激活': true,
2025-09-17T00:39:52.606927Z	      '是否推荐': false
2025-09-17T00:39:52.607299Z	    },
2025-09-17T00:39:52.607429Z	    {
2025-09-17T00:39:52.607538Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-17T00:39:52.607648Z	      '名称': 'Electronicon',
2025-09-17T00:39:52.60776Z	      slug: 'Electronicon',
2025-09-17T00:39:52.607856Z	      '是否激活': true,
2025-09-17T00:39:52.607959Z	      '是否推荐': false
2025-09-17T00:39:52.608051Z	    },
2025-09-17T00:39:52.608144Z	    {
2025-09-17T00:39:52.608233Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-17T00:39:52.608338Z	      '名称': 'Epcos',
2025-09-17T00:39:52.608423Z	      slug: 'epcos',
2025-09-17T00:39:52.608517Z	      '是否激活': true,
2025-09-17T00:39:52.608631Z	      '是否推荐': false
2025-09-17T00:39:52.608755Z	    },
2025-09-17T00:39:52.609343Z	    {
2025-09-17T00:39:52.609657Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:52.609793Z	      '名称': 'IXYS',
2025-09-17T00:39:52.609897Z	      slug: 'ixys',
2025-09-17T00:39:52.609995Z	      '是否激活': true,
2025-09-17T00:39:52.610102Z	      '是否推荐': false
2025-09-17T00:39:52.610205Z	    },
2025-09-17T00:39:52.610334Z	    {
2025-09-17T00:39:52.610436Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-17T00:39:52.610532Z	      '名称': 'LEM',
2025-09-17T00:39:52.610631Z	      slug: 'lem',
2025-09-17T00:39:52.610767Z	      '是否激活': true,
2025-09-17T00:39:52.610869Z	      '是否推荐': false
2025-09-17T00:39:52.610982Z	    },
2025-09-17T00:39:52.61108Z	    {
2025-09-17T00:39:52.611224Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-17T00:39:52.61135Z	      '名称': 'Littelfuse',
2025-09-17T00:39:52.61145Z	      slug: 'littelfuse',
2025-09-17T00:39:52.611543Z	      '是否激活': true,
2025-09-17T00:39:52.611638Z	      '是否推荐': false
2025-09-17T00:39:52.611745Z	    },
2025-09-17T00:39:52.611836Z	    {
2025-09-17T00:39:52.611928Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-17T00:39:52.612034Z	      '名称': 'MediaTek',
2025-09-17T00:39:52.612132Z	      slug: 'mediatek',
2025-09-17T00:39:52.612223Z	      '是否激活': true,
2025-09-17T00:39:52.612991Z	      '是否推荐': false
2025-09-17T00:39:52.613198Z	    },
2025-09-17T00:39:52.613489Z	    {
2025-09-17T00:39:52.613612Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-17T00:39:52.613782Z	      '名称': 'PI',
2025-09-17T00:39:52.613952Z	      slug: 'pi',
2025-09-17T00:39:52.61412Z	      '是否激活': true,
2025-09-17T00:39:52.614282Z	      '是否推荐': false
2025-09-17T00:39:52.614441Z	    },
2025-09-17T00:39:52.614619Z	    {
2025-09-17T00:39:52.61481Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-17T00:39:52.614992Z	      '名称': 'Qualcomm',
2025-09-17T00:39:52.61519Z	      slug: 'qualcomm',
2025-09-17T00:39:52.615417Z	      '是否激活': true,
2025-09-17T00:39:52.615606Z	      '是否推荐': true
2025-09-17T00:39:52.615756Z	    },
2025-09-17T00:39:52.615899Z	    {
2025-09-17T00:39:52.616064Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-17T00:39:52.616176Z	      '名称': 'Sanrex',
2025-09-17T00:39:52.616304Z	      slug: 'sanrex',
2025-09-17T00:39:52.616418Z	      '是否激活': true,
2025-09-17T00:39:52.616525Z	      '是否推荐': false
2025-09-17T00:39:52.61663Z	    },
2025-09-17T00:39:52.616733Z	    {
2025-09-17T00:39:52.616844Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-17T00:39:52.61699Z	      '名称': 'Semikron',
2025-09-17T00:39:52.61714Z	      slug: 'semikron',
2025-09-17T00:39:52.617249Z	      '是否激活': true,
2025-09-17T00:39:52.617389Z	      '是否推荐': true
2025-09-17T00:39:52.617502Z	    },
2025-09-17T00:39:52.61761Z	    {
2025-09-17T00:39:52.617766Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-17T00:39:52.617957Z	      '名称': 'ncc',
2025-09-17T00:39:52.618096Z	      slug: 'ncc',
2025-09-17T00:39:52.61825Z	      '是否激活': true,
2025-09-17T00:39:52.618416Z	      '是否推荐': false
2025-09-17T00:39:52.618574Z	    },
2025-09-17T00:39:52.618728Z	    {
2025-09-17T00:39:52.618883Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-17T00:39:52.619047Z	      '名称': '英飞凌',
2025-09-17T00:39:52.619208Z	      slug: '英飞凌',
2025-09-17T00:39:52.619481Z	      '是否激活': true,
2025-09-17T00:39:52.619792Z	      '是否推荐': true
2025-09-17T00:39:52.619958Z	    }
2025-09-17T00:39:52.620639Z	  ]
2025-09-17T00:39:52.621047Z	}
2025-09-17T00:39:52.621217Z	🔍 执行品牌查询: {
2025-09-17T00:39:52.621402Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-17T00:39:52.621541Z	  'GROQ查询': '\n' +
2025-09-17T00:39:52.621782Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-17T00:39:52.622024Z	    '      \n' +
2025-09-17T00:39:52.622642Z	    '    _id,\n' +
2025-09-17T00:39:52.62423Z	    '    name,\n' +
2025-09-17T00:39:52.625311Z	    '    "slug": slug.current,\n' +
2025-09-17T00:39:52.625827Z	    '    logo,\n' +
2025-09-17T00:39:52.626072Z	    '    description,\n' +
2025-09-17T00:39:52.626274Z	    '    website,\n' +
2025-09-17T00:39:52.626466Z	    '    country,\n' +
2025-09-17T00:39:52.626649Z	    '    isActive,\n' +
2025-09-17T00:39:52.626814Z	    '    isFeatured\n' +
2025-09-17T00:39:52.626956Z	    '  \n' +
2025-09-17T00:39:52.627098Z	    '    }\n' +
2025-09-17T00:39:52.627235Z	    '  ',
2025-09-17T00:39:52.627372Z	  '是否仅获取推荐': false
2025-09-17T00:39:52.627519Z	}
2025-09-17T00:39:52.627712Z	📊 品牌查询结果: {
2025-09-17T00:39:52.627846Z	  '数量': 13,
2025-09-17T00:39:52.627955Z	  '品牌列表': [
2025-09-17T00:39:52.628061Z	    {
2025-09-17T00:39:52.628169Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:52.628299Z	      '名称': 'CREE',
2025-09-17T00:39:52.628413Z	      slug: 'cree',
2025-09-17T00:39:52.628519Z	      '是否激活': true,
2025-09-17T00:39:52.628617Z	      '是否推荐': false
2025-09-17T00:39:52.628723Z	    },
2025-09-17T00:39:52.628824Z	    {
2025-09-17T00:39:52.62892Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-17T00:39:52.629025Z	      '名称': 'Electronicon',
2025-09-17T00:39:52.629133Z	      slug: 'Electronicon',
2025-09-17T00:39:52.629249Z	      '是否激活': true,
2025-09-17T00:39:52.629387Z	      '是否推荐': false
2025-09-17T00:39:52.629499Z	    },
2025-09-17T00:39:52.629608Z	    {
2025-09-17T00:39:52.629737Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-17T00:39:52.629863Z	      '名称': 'Epcos',
2025-09-17T00:39:52.629981Z	      slug: 'epcos',
2025-09-17T00:39:52.630095Z	      '是否激活': true,
2025-09-17T00:39:52.630207Z	      '是否推荐': false
2025-09-17T00:39:52.630351Z	    },
2025-09-17T00:39:52.63047Z	    {
2025-09-17T00:39:52.630575Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:52.630671Z	      '名称': 'IXYS',
2025-09-17T00:39:52.630803Z	      slug: 'ixys',
2025-09-17T00:39:52.63091Z	      '是否激活': true,
2025-09-17T00:39:52.631015Z	      '是否推荐': false
2025-09-17T00:39:52.631114Z	    },
2025-09-17T00:39:52.631205Z	    {
2025-09-17T00:39:52.63132Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-17T00:39:52.631422Z	      '名称': 'LEM',
2025-09-17T00:39:52.631523Z	      slug: 'lem',
2025-09-17T00:39:52.631618Z	      '是否激活': true,
2025-09-17T00:39:52.631744Z	      '是否推荐': false
2025-09-17T00:39:52.631917Z	    },
2025-09-17T00:39:52.632053Z	    {
2025-09-17T00:39:52.632185Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-17T00:39:52.632313Z	      '名称': 'Littelfuse',
2025-09-17T00:39:52.632416Z	      slug: 'littelfuse',
2025-09-17T00:39:52.632509Z	      '是否激活': true,
2025-09-17T00:39:52.632625Z	      '是否推荐': false
2025-09-17T00:39:52.632704Z	    },
2025-09-17T00:39:52.63278Z	    {
2025-09-17T00:39:52.63297Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-17T00:39:52.633108Z	      '名称': 'MediaTek',
2025-09-17T00:39:52.633216Z	      slug: 'mediatek',
2025-09-17T00:39:52.633357Z	      '是否激活': true,
2025-09-17T00:39:52.633468Z	      '是否推荐': false
2025-09-17T00:39:52.633568Z	    },
2025-09-17T00:39:52.633692Z	    {
2025-09-17T00:39:52.633824Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-17T00:39:52.633925Z	      '名称': 'PI',
2025-09-17T00:39:52.634041Z	      slug: 'pi',
2025-09-17T00:39:52.634135Z	      '是否激活': true,
2025-09-17T00:39:52.634233Z	      '是否推荐': false
2025-09-17T00:39:52.634355Z	    },
2025-09-17T00:39:52.634496Z	    {
2025-09-17T00:39:52.6346Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-17T00:39:52.634701Z	      '名称': 'Qualcomm',
2025-09-17T00:39:52.634797Z	      slug: 'qualcomm',
2025-09-17T00:39:52.634889Z	      '是否激活': true,
2025-09-17T00:39:52.634998Z	      '是否推荐': true
2025-09-17T00:39:52.635109Z	    },
2025-09-17T00:39:52.635198Z	    {
2025-09-17T00:39:52.635315Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-17T00:39:52.635427Z	      '名称': 'Sanrex',
2025-09-17T00:39:52.635533Z	      slug: 'sanrex',
2025-09-17T00:39:52.63565Z	      '是否激活': true,
2025-09-17T00:39:52.635753Z	      '是否推荐': false
2025-09-17T00:39:52.635847Z	    },
2025-09-17T00:39:52.63594Z	    {
2025-09-17T00:39:52.636039Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-17T00:39:52.636146Z	      '名称': 'Semikron',
2025-09-17T00:39:52.636243Z	      slug: 'semikron',
2025-09-17T00:39:52.636372Z	      '是否激活': true,
2025-09-17T00:39:52.63648Z	      '是否推荐': true
2025-09-17T00:39:52.636611Z	    },
2025-09-17T00:39:52.636718Z	    {
2025-09-17T00:39:52.636838Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-17T00:39:52.636979Z	      '名称': 'ncc',
2025-09-17T00:39:52.637104Z	      slug: 'ncc',
2025-09-17T00:39:52.63722Z	      '是否激活': true,
2025-09-17T00:39:52.637369Z	      '是否推荐': false
2025-09-17T00:39:52.637459Z	    },
2025-09-17T00:39:52.637549Z	    {
2025-09-17T00:39:52.637615Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-17T00:39:52.637674Z	      '名称': '英飞凌',
2025-09-17T00:39:52.637736Z	      slug: '英飞凌',
2025-09-17T00:39:52.637794Z	      '是否激活': true,
2025-09-17T00:39:52.637865Z	      '是否推荐': true
2025-09-17T00:39:52.637925Z	    }
2025-09-17T00:39:52.637993Z	  ]
2025-09-17T00:39:52.638049Z	}
2025-09-17T00:39:52.638105Z	🔍 执行品牌查询: {
2025-09-17T00:39:52.638163Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-17T00:39:52.63822Z	  'GROQ查询': '\n' +
2025-09-17T00:39:52.638304Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-17T00:39:52.638437Z	    '      \n' +
2025-09-17T00:39:52.638516Z	    '    _id,\n' +
2025-09-17T00:39:52.638576Z	    '    name,\n' +
2025-09-17T00:39:52.640324Z	    '    "slug": slug.current,\n' +
2025-09-17T00:39:52.640563Z	    '    logo,\n' +
2025-09-17T00:39:52.687892Z	    '    description,\n' +
2025-09-17T00:39:52.688936Z	    '    website,\n' +
2025-09-17T00:39:52.689357Z	    '    country,\n' +
2025-09-17T00:39:52.689979Z	    '    isActive,\n' +
2025-09-17T00:39:52.690474Z	    '    isFeatured\n' +
2025-09-17T00:39:52.690628Z	    '  \n' +
2025-09-17T00:39:52.690715Z	    '    }\n' +
2025-09-17T00:39:52.690782Z	    '  ',
2025-09-17T00:39:52.690841Z	  '是否仅获取推荐': false
2025-09-17T00:39:52.690907Z	}
2025-09-17T00:39:52.690968Z	📊 品牌查询结果: {
2025-09-17T00:39:52.691026Z	  '数量': 13,
2025-09-17T00:39:52.691083Z	  '品牌列表': [
2025-09-17T00:39:52.691141Z	    {
2025-09-17T00:39:52.691196Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:52.691255Z	      '名称': 'CREE',
2025-09-17T00:39:52.693168Z	      slug: 'cree',
2025-09-17T00:39:52.693608Z	      '是否激活': true,
2025-09-17T00:39:52.693971Z	      '是否推荐': false
2025-09-17T00:39:52.694121Z	    },
2025-09-17T00:39:52.694242Z	    {
2025-09-17T00:39:52.694378Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-17T00:39:52.694492Z	      '名称': 'Electronicon',
2025-09-17T00:39:52.694609Z	      slug: 'Electronicon',
2025-09-17T00:39:52.694842Z	      '是否激活': true,
2025-09-17T00:39:52.695008Z	      '是否推荐': false
2025-09-17T00:39:52.695141Z	    },
2025-09-17T00:39:52.695361Z	    {
2025-09-17T00:39:52.695591Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-17T00:39:52.695826Z	      '名称': 'Epcos',
2025-09-17T00:39:52.696022Z	      slug: 'epcos',
2025-09-17T00:39:52.696151Z	      '是否激活': true,
2025-09-17T00:39:52.696258Z	      '是否推荐': false
2025-09-17T00:39:52.696483Z	    },
2025-09-17T00:39:52.696621Z	    {
2025-09-17T00:39:52.696945Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:52.6973Z	      '名称': 'IXYS',
2025-09-17T00:39:52.697507Z	      slug: 'ixys',
2025-09-17T00:39:52.697645Z	      '是否激活': true,
2025-09-17T00:39:52.697796Z	      '是否推荐': false
2025-09-17T00:39:52.697905Z	    },
2025-09-17T00:39:52.698006Z	    {
2025-09-17T00:39:52.69809Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-17T00:39:52.698187Z	      '名称': 'LEM',
2025-09-17T00:39:52.698343Z	      slug: 'lem',
2025-09-17T00:39:52.698503Z	      '是否激活': true,
2025-09-17T00:39:52.698625Z	      '是否推荐': false
2025-09-17T00:39:52.698761Z	    },
2025-09-17T00:39:52.698871Z	    {
2025-09-17T00:39:52.698979Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-17T00:39:52.699085Z	      '名称': 'Littelfuse',
2025-09-17T00:39:52.699209Z	      slug: 'littelfuse',
2025-09-17T00:39:52.699378Z	      '是否激活': true,
2025-09-17T00:39:52.69956Z	      '是否推荐': false
2025-09-17T00:39:52.699732Z	    },
2025-09-17T00:39:52.699866Z	    {
2025-09-17T00:39:52.700003Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-17T00:39:52.700148Z	      '名称': 'MediaTek',
2025-09-17T00:39:52.700337Z	      slug: 'mediatek',
2025-09-17T00:39:52.700469Z	      '是否激活': true,
2025-09-17T00:39:52.700634Z	      '是否推荐': false
2025-09-17T00:39:52.700767Z	    },
2025-09-17T00:39:52.700925Z	    {
2025-09-17T00:39:52.701047Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-17T00:39:52.701484Z	      '名称': 'PI',
2025-09-17T00:39:52.701603Z	      slug: 'pi',
2025-09-17T00:39:52.701796Z	      '是否激活': true,
2025-09-17T00:39:52.702072Z	      '是否推荐': false
2025-09-17T00:39:52.702336Z	    },
2025-09-17T00:39:52.702497Z	    {
2025-09-17T00:39:52.70266Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-17T00:39:52.702834Z	      '名称': 'Qualcomm',
2025-09-17T00:39:52.703215Z	      slug: 'qualcomm',
2025-09-17T00:39:52.703523Z	      '是否激活': true,
2025-09-17T00:39:52.705601Z	      '是否推荐': true
2025-09-17T00:39:52.709159Z	    },
2025-09-17T00:39:52.709341Z	    {
2025-09-17T00:39:52.709714Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-17T00:39:52.710108Z	      '名称': 'Sanrex',
2025-09-17T00:39:52.710264Z	      slug: 'sanrex',
2025-09-17T00:39:52.710405Z	      '是否激活': true,
2025-09-17T00:39:52.710522Z	      '是否推荐': false
2025-09-17T00:39:52.710636Z	    },
2025-09-17T00:39:52.710745Z	    {
2025-09-17T00:39:52.710846Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-17T00:39:52.710988Z	      '名称': 'Semikron',
2025-09-17T00:39:52.711108Z	      slug: 'semikron',
2025-09-17T00:39:52.711215Z	      '是否激活': true,
2025-09-17T00:39:52.711342Z	      '是否推荐': true
2025-09-17T00:39:52.711455Z	    },
2025-09-17T00:39:52.711589Z	    {
2025-09-17T00:39:52.711697Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-17T00:39:52.71183Z	      '名称': 'ncc',
2025-09-17T00:39:52.711949Z	      slug: 'ncc',
2025-09-17T00:39:52.712056Z	      '是否激活': true,
2025-09-17T00:39:52.712162Z	      '是否推荐': false
2025-09-17T00:39:52.712297Z	    },
2025-09-17T00:39:52.712401Z	    {
2025-09-17T00:39:52.712643Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-17T00:39:52.712767Z	      '名称': '英飞凌',
2025-09-17T00:39:52.712878Z	      slug: '英飞凌',
2025-09-17T00:39:52.712982Z	      '是否激活': true,
2025-09-17T00:39:52.713429Z	      '是否推荐': true
2025-09-17T00:39:52.713553Z	    }
2025-09-17T00:39:52.713922Z	  ]
2025-09-17T00:39:52.714097Z	}
2025-09-17T00:39:52.71426Z	🔍 执行品牌查询: {
2025-09-17T00:39:52.714424Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-17T00:39:52.714545Z	  'GROQ查询': '\n' +
2025-09-17T00:39:52.71504Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-17T00:39:52.715179Z	    '      \n' +
2025-09-17T00:39:52.715432Z	    '    _id,\n' +
2025-09-17T00:39:52.715545Z	    '    name,\n' +
2025-09-17T00:39:52.715693Z	    '    "slug": slug.current,\n' +
2025-09-17T00:39:52.715825Z	    '    logo,\n' +
2025-09-17T00:39:52.715942Z	    '    description,\n' +
2025-09-17T00:39:52.716053Z	    '    website,\n' +
2025-09-17T00:39:52.716159Z	    '    country,\n' +
2025-09-17T00:39:52.716397Z	    '    isActive,\n' +
2025-09-17T00:39:52.716541Z	    '    isFeatured\n' +
2025-09-17T00:39:52.716836Z	    '  \n' +
2025-09-17T00:39:52.716957Z	    '    }\n' +
2025-09-17T00:39:52.717056Z	    '  ',
2025-09-17T00:39:52.717464Z	  '是否仅获取推荐': false
2025-09-17T00:39:52.717585Z	}
2025-09-17T00:39:52.717681Z	📊 品牌查询结果: {
2025-09-17T00:39:52.717783Z	  '数量': 13,
2025-09-17T00:39:52.717881Z	  '品牌列表': [
2025-09-17T00:39:52.717992Z	    {
2025-09-17T00:39:52.718102Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:52.718444Z	      '名称': 'CREE',
2025-09-17T00:39:52.718749Z	      slug: 'cree',
2025-09-17T00:39:52.718896Z	      '是否激活': true,
2025-09-17T00:39:52.719024Z	      '是否推荐': false
2025-09-17T00:39:52.719132Z	    },
2025-09-17T00:39:52.719242Z	    {
2025-09-17T00:39:52.719383Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-17T00:39:52.719496Z	      '名称': 'Electronicon',
2025-09-17T00:39:52.719608Z	      slug: 'Electronicon',
2025-09-17T00:39:52.719929Z	      '是否激活': true,
2025-09-17T00:39:52.720182Z	      '是否推荐': false
2025-09-17T00:39:52.720314Z	    },
2025-09-17T00:39:52.720432Z	    {
2025-09-17T00:39:52.7207Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-17T00:39:52.720812Z	      '名称': 'Epcos',
2025-09-17T00:39:52.720919Z	      slug: 'epcos',
2025-09-17T00:39:52.721032Z	      '是否激活': true,
2025-09-17T00:39:52.721395Z	      '是否推荐': false
2025-09-17T00:39:52.721522Z	    },
2025-09-17T00:39:52.72183Z	    {
2025-09-17T00:39:52.721996Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:52.722114Z	      '名称': 'IXYS',
2025-09-17T00:39:52.722224Z	      slug: 'ixys',
2025-09-17T00:39:52.722343Z	      '是否激活': true,
2025-09-17T00:39:52.722466Z	      '是否推荐': false
2025-09-17T00:39:52.722876Z	    },
2025-09-17T00:39:52.723274Z	    {
2025-09-17T00:39:52.72364Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-17T00:39:52.723858Z	      '名称': 'LEM',
2025-09-17T00:39:52.724105Z	      slug: 'lem',
2025-09-17T00:39:52.72456Z	      '是否激活': true,
2025-09-17T00:39:52.724718Z	      '是否推荐': false
2025-09-17T00:39:52.724852Z	    },
2025-09-17T00:39:52.724979Z	    {
2025-09-17T00:39:52.725091Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-17T00:39:52.725203Z	      '名称': 'Littelfuse',
2025-09-17T00:39:52.725333Z	      slug: 'littelfuse',
2025-09-17T00:39:52.72544Z	      '是否激活': true,
2025-09-17T00:39:52.725547Z	      '是否推荐': false
2025-09-17T00:39:52.725654Z	    },
2025-09-17T00:39:52.72577Z	    {
2025-09-17T00:39:52.725881Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-17T00:39:52.72599Z	      '名称': 'MediaTek',
2025-09-17T00:39:52.726097Z	      slug: 'mediatek',
2025-09-17T00:39:52.726203Z	      '是否激活': true,
2025-09-17T00:39:52.726342Z	      '是否推荐': false
2025-09-17T00:39:52.726453Z	    },
2025-09-17T00:39:52.72661Z	    {
2025-09-17T00:39:52.726799Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-17T00:39:52.726972Z	      '名称': 'PI',
2025-09-17T00:39:52.727143Z	      slug: 'pi',
2025-09-17T00:39:52.727391Z	      '是否激活': true,
2025-09-17T00:39:52.728052Z	      '是否推荐': false
2025-09-17T00:39:52.72843Z	    },
2025-09-17T00:39:52.72861Z	    {
2025-09-17T00:39:52.728821Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-17T00:39:52.729062Z	      '名称': 'Qualcomm',
2025-09-17T00:39:52.729539Z	      slug: 'qualcomm',
2025-09-17T00:39:52.73009Z	      '是否激活': true,
2025-09-17T00:39:52.730338Z	      '是否推荐': true
2025-09-17T00:39:52.730538Z	    },
2025-09-17T00:39:52.730831Z	    {
2025-09-17T00:39:52.731189Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-17T00:39:52.731862Z	      '名称': 'Sanrex',
2025-09-17T00:39:52.731987Z	      slug: 'sanrex',
2025-09-17T00:39:52.732092Z	      '是否激活': true,
2025-09-17T00:39:52.732202Z	      '是否推荐': false
2025-09-17T00:39:52.732326Z	    },
2025-09-17T00:39:52.732442Z	    {
2025-09-17T00:39:52.732573Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-17T00:39:52.732695Z	      '名称': 'Semikron',
2025-09-17T00:39:52.732806Z	      slug: 'semikron',
2025-09-17T00:39:52.732915Z	      '是否激活': true,
2025-09-17T00:39:52.733031Z	      '是否推荐': true
2025-09-17T00:39:52.733189Z	    },
2025-09-17T00:39:52.73341Z	    {
2025-09-17T00:39:52.733568Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-17T00:39:52.733758Z	      '名称': 'ncc',
2025-09-17T00:39:52.733967Z	      slug: 'ncc',
2025-09-17T00:39:52.734135Z	      '是否激活': true,
2025-09-17T00:39:52.734315Z	      '是否推荐': false
2025-09-17T00:39:52.734495Z	    },
2025-09-17T00:39:52.734661Z	    {
2025-09-17T00:39:52.734824Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-17T00:39:52.734995Z	      '名称': '英飞凌',
2025-09-17T00:39:52.735156Z	      slug: '英飞凌',
2025-09-17T00:39:52.735328Z	      '是否激活': true,
2025-09-17T00:39:52.735492Z	      '是否推荐': true
2025-09-17T00:39:52.735831Z	    }
2025-09-17T00:39:52.736016Z	  ]
2025-09-17T00:39:52.736422Z	}
2025-09-17T00:39:52.736753Z	🔍 执行品牌查询: {
2025-09-17T00:39:52.736931Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-17T00:39:52.737465Z	  'GROQ查询': '\n' +
2025-09-17T00:39:52.737688Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-17T00:39:52.738265Z	    '      \n' +
2025-09-17T00:39:52.738953Z	    '    _id,\n' +
2025-09-17T00:39:52.739101Z	    '    name,\n' +
2025-09-17T00:39:52.739245Z	    '    "slug": slug.current,\n' +
2025-09-17T00:39:52.739407Z	    '    logo,\n' +
2025-09-17T00:39:52.739522Z	    '    description,\n' +
2025-09-17T00:39:52.739681Z	    '    website,\n' +
2025-09-17T00:39:52.739832Z	    '    country,\n' +
2025-09-17T00:39:52.739966Z	    '    isActive,\n' +
2025-09-17T00:39:52.740121Z	    '    isFeatured\n' +
2025-09-17T00:39:52.740283Z	    '  \n' +
2025-09-17T00:39:52.740417Z	    '    }\n' +
2025-09-17T00:39:52.74056Z	    '  ',
2025-09-17T00:39:52.74069Z	  '是否仅获取推荐': false
2025-09-17T00:39:52.741029Z	}
2025-09-17T00:39:52.741175Z	🔍 执行品牌查询: {
2025-09-17T00:39:52.741323Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-17T00:39:52.741461Z	  'GROQ查询': '\n' +
2025-09-17T00:39:52.741603Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-17T00:39:52.74175Z	    '      \n' +
2025-09-17T00:39:52.741865Z	    '    _id,\n' +
2025-09-17T00:39:52.741995Z	    '    name,\n' +
2025-09-17T00:39:52.742445Z	    '    "slug": slug.current,\n' +
2025-09-17T00:39:52.742606Z	    '    logo,\n' +
2025-09-17T00:39:52.742735Z	    '    description,\n' +
2025-09-17T00:39:52.742851Z	    '    website,\n' +
2025-09-17T00:39:52.743033Z	    '    country,\n' +
2025-09-17T00:39:52.743149Z	    '    isActive,\n' +
2025-09-17T00:39:52.743286Z	    '    isFeatured\n' +
2025-09-17T00:39:52.743744Z	    '  \n' +
2025-09-17T00:39:52.743876Z	    '    }\n' +
2025-09-17T00:39:52.743984Z	    '  ',
2025-09-17T00:39:52.744095Z	  '是否仅获取推荐': false
2025-09-17T00:39:52.744208Z	}
2025-09-17T00:39:52.74435Z	📊 品牌查询结果: {
2025-09-17T00:39:52.744489Z	  '数量': 13,
2025-09-17T00:39:52.744645Z	  '品牌列表': [
2025-09-17T00:39:52.744808Z	    {
2025-09-17T00:39:52.745187Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:52.745464Z	      '名称': 'CREE',
2025-09-17T00:39:52.745606Z	      slug: 'cree',
2025-09-17T00:39:52.745744Z	      '是否激活': true,
2025-09-17T00:39:52.745946Z	      '是否推荐': false
2025-09-17T00:39:52.746125Z	    },
2025-09-17T00:39:52.746235Z	    {
2025-09-17T00:39:52.746348Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-17T00:39:52.746442Z	      '名称': 'Electronicon',
2025-09-17T00:39:52.746537Z	      slug: 'Electronicon',
2025-09-17T00:39:52.746638Z	      '是否激活': true,
2025-09-17T00:39:52.746758Z	      '是否推荐': false
2025-09-17T00:39:52.746871Z	    },
2025-09-17T00:39:52.746981Z	    {
2025-09-17T00:39:52.747097Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-17T00:39:52.747205Z	      '名称': 'Epcos',
2025-09-17T00:39:52.747334Z	      slug: 'epcos',
2025-09-17T00:39:52.747438Z	      '是否激活': true,
2025-09-17T00:39:52.747546Z	      '是否推荐': false
2025-09-17T00:39:52.747663Z	    },
2025-09-17T00:39:52.747788Z	    {
2025-09-17T00:39:52.747895Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:52.748007Z	      '名称': 'IXYS',
2025-09-17T00:39:52.748113Z	      slug: 'ixys',
2025-09-17T00:39:52.748243Z	      '是否激活': true,
2025-09-17T00:39:52.748464Z	      '是否推荐': false
2025-09-17T00:39:52.748683Z	    },
2025-09-17T00:39:52.748882Z	    {
2025-09-17T00:39:52.749081Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-17T00:39:52.749282Z	      '名称': 'LEM',
2025-09-17T00:39:52.749449Z	      slug: 'lem',
2025-09-17T00:39:52.749614Z	      '是否激活': true,
2025-09-17T00:39:52.749791Z	      '是否推荐': false
2025-09-17T00:39:52.749929Z	    },
2025-09-17T00:39:52.750122Z	    {
2025-09-17T00:39:52.787614Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-17T00:39:52.78799Z	      '名称': 'Littelfuse',
2025-09-17T00:39:52.788443Z	      slug: 'littelfuse',
2025-09-17T00:39:52.788655Z	      '是否激活': true,
2025-09-17T00:39:52.789212Z	      '是否推荐': false
2025-09-17T00:39:52.789393Z	    },
2025-09-17T00:39:52.789513Z	    {
2025-09-17T00:39:52.78964Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-17T00:39:52.789776Z	      '名称': 'MediaTek',
2025-09-17T00:39:52.789893Z	      slug: 'mediatek',
2025-09-17T00:39:52.789998Z	      '是否激活': true,
2025-09-17T00:39:52.792253Z	      '是否推荐': false
2025-09-17T00:39:52.792394Z	    },
2025-09-17T00:39:52.792468Z	    {
2025-09-17T00:39:52.792547Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-17T00:39:52.792611Z	      '名称': 'PI',
2025-09-17T00:39:52.792675Z	      slug: 'pi',
2025-09-17T00:39:52.792752Z	      '是否激活': true,
2025-09-17T00:39:52.792813Z	      '是否推荐': false
2025-09-17T00:39:52.792871Z	    },
2025-09-17T00:39:52.792928Z	    {
2025-09-17T00:39:52.793115Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-17T00:39:52.793277Z	      '名称': 'Qualcomm',
2025-09-17T00:39:52.793421Z	      slug: 'qualcomm',
2025-09-17T00:39:52.793535Z	      '是否激活': true,
2025-09-17T00:39:52.79365Z	      '是否推荐': true
2025-09-17T00:39:52.794031Z	    },
2025-09-17T00:39:52.794223Z	    {
2025-09-17T00:39:52.794383Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-17T00:39:52.794488Z	      '名称': 'Sanrex',
2025-09-17T00:39:52.794584Z	      slug: 'sanrex',
2025-09-17T00:39:52.794692Z	      '是否激活': true,
2025-09-17T00:39:52.794839Z	      '是否推荐': false
2025-09-17T00:39:52.794925Z	    },
2025-09-17T00:39:52.795038Z	    {
2025-09-17T00:39:52.795134Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-17T00:39:52.795219Z	      '名称': 'Semikron',
2025-09-17T00:39:52.795329Z	      slug: 'semikron',
2025-09-17T00:39:52.795418Z	      '是否激活': true,
2025-09-17T00:39:52.795506Z	      '是否推荐': true
2025-09-17T00:39:52.795596Z	    },
2025-09-17T00:39:52.795678Z	    {
2025-09-17T00:39:52.795762Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-17T00:39:52.795845Z	      '名称': 'ncc',
2025-09-17T00:39:52.795924Z	      slug: 'ncc',
2025-09-17T00:39:52.796016Z	      '是否激活': true,
2025-09-17T00:39:52.796103Z	      '是否推荐': false
2025-09-17T00:39:52.796195Z	    },
2025-09-17T00:39:52.796312Z	    {
2025-09-17T00:39:52.796401Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-17T00:39:52.7965Z	      '名称': '英飞凌',
2025-09-17T00:39:52.796599Z	      slug: '英飞凌',
2025-09-17T00:39:52.7967Z	      '是否激活': true,
2025-09-17T00:39:52.796809Z	      '是否推荐': true
2025-09-17T00:39:52.796916Z	    }
2025-09-17T00:39:52.797044Z	  ]
2025-09-17T00:39:52.797152Z	}
2025-09-17T00:39:52.797259Z	📊 品牌查询结果: {
2025-09-17T00:39:52.798129Z	  '数量': 13,
2025-09-17T00:39:52.7983Z	  '品牌列表': [
2025-09-17T00:39:52.798471Z	    {
2025-09-17T00:39:52.798587Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:52.798692Z	      '名称': 'CREE',
2025-09-17T00:39:52.798803Z	      slug: 'cree',
2025-09-17T00:39:52.798909Z	      '是否激活': true,
2025-09-17T00:39:52.799028Z	      '是否推荐': false
2025-09-17T00:39:52.799141Z	    },
2025-09-17T00:39:52.799253Z	    {
2025-09-17T00:39:52.799974Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-17T00:39:52.800177Z	      '名称': 'Electronicon',
2025-09-17T00:39:52.800474Z	      slug: 'Electronicon',
2025-09-17T00:39:52.800936Z	      '是否激活': true,
2025-09-17T00:39:52.801094Z	      '是否推荐': false
2025-09-17T00:39:52.801197Z	    },
2025-09-17T00:39:52.801341Z	    {
2025-09-17T00:39:52.801455Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-17T00:39:52.801556Z	      '名称': 'Epcos',
2025-09-17T00:39:52.801656Z	      slug: 'epcos',
2025-09-17T00:39:52.801778Z	      '是否激活': true,
2025-09-17T00:39:52.801894Z	      '是否推荐': false
2025-09-17T00:39:52.80234Z	    },
2025-09-17T00:39:52.80247Z	    {
2025-09-17T00:39:52.802575Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:52.802678Z	      '名称': 'IXYS',
2025-09-17T00:39:52.802781Z	      slug: 'ixys',
2025-09-17T00:39:52.802877Z	      '是否激活': true,
2025-09-17T00:39:52.803254Z	      '是否推荐': false
2025-09-17T00:39:52.803402Z	    },
2025-09-17T00:39:52.803513Z	    {
2025-09-17T00:39:52.803621Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-17T00:39:52.80373Z	      '名称': 'LEM',
2025-09-17T00:39:52.80384Z	      slug: 'lem',
2025-09-17T00:39:52.803952Z	      '是否激活': true,
2025-09-17T00:39:52.804069Z	      '是否推荐': false
2025-09-17T00:39:52.804191Z	    },
2025-09-17T00:39:52.804327Z	    {
2025-09-17T00:39:52.804517Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-17T00:39:52.804919Z	      '名称': 'Littelfuse',
2025-09-17T00:39:52.805183Z	      slug: 'littelfuse',
2025-09-17T00:39:52.805342Z	      '是否激活': true,
2025-09-17T00:39:52.805456Z	      '是否推荐': false
2025-09-17T00:39:52.805597Z	    },
2025-09-17T00:39:52.805722Z	    {
2025-09-17T00:39:52.805822Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-17T00:39:52.80591Z	      '名称': 'MediaTek',
2025-09-17T00:39:52.806003Z	      slug: 'mediatek',
2025-09-17T00:39:52.806095Z	      '是否激活': true,
2025-09-17T00:39:52.806183Z	      '是否推荐': false
2025-09-17T00:39:52.806294Z	    },
2025-09-17T00:39:52.806412Z	    {
2025-09-17T00:39:52.806519Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-17T00:39:52.806628Z	      '名称': 'PI',
2025-09-17T00:39:52.806747Z	      slug: 'pi',
2025-09-17T00:39:52.806854Z	      '是否激活': true,
2025-09-17T00:39:52.806956Z	      '是否推荐': false
2025-09-17T00:39:52.807056Z	    },
2025-09-17T00:39:52.807154Z	    {
2025-09-17T00:39:52.807264Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-17T00:39:52.807387Z	      '名称': 'Qualcomm',
2025-09-17T00:39:52.807493Z	      slug: 'qualcomm',
2025-09-17T00:39:52.807865Z	      '是否激活': true,
2025-09-17T00:39:52.808007Z	      '是否推荐': true
2025-09-17T00:39:52.808117Z	    },
2025-09-17T00:39:52.808215Z	    {
2025-09-17T00:39:52.808357Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-17T00:39:52.808485Z	      '名称': 'Sanrex',
2025-09-17T00:39:52.808899Z	      slug: 'sanrex',
2025-09-17T00:39:52.809069Z	      '是否激活': true,
2025-09-17T00:39:52.809195Z	      '是否推荐': false
2025-09-17T00:39:52.809345Z	    },
2025-09-17T00:39:52.809467Z	    {
2025-09-17T00:39:52.809863Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-17T00:39:52.810417Z	      '名称': 'Semikron',
2025-09-17T00:39:52.811087Z	      slug: 'semikron',
2025-09-17T00:39:52.811235Z	      '是否激活': true,
2025-09-17T00:39:52.811372Z	      '是否推荐': true
2025-09-17T00:39:52.811479Z	    },
2025-09-17T00:39:52.811584Z	    {
2025-09-17T00:39:52.811684Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-17T00:39:52.811784Z	      '名称': 'ncc',
2025-09-17T00:39:52.81198Z	      slug: 'ncc',
2025-09-17T00:39:52.812119Z	      '是否激活': true,
2025-09-17T00:39:52.812241Z	      '是否推荐': false
2025-09-17T00:39:52.812393Z	    },
2025-09-17T00:39:52.812548Z	    {
2025-09-17T00:39:52.812735Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-17T00:39:52.813034Z	      '名称': '英飞凌',
2025-09-17T00:39:52.8132Z	      slug: '英飞凌',
2025-09-17T00:39:52.813376Z	      '是否激活': true,
2025-09-17T00:39:52.813553Z	      '是否推荐': true
2025-09-17T00:39:52.813667Z	    }
2025-09-17T00:39:52.813783Z	  ]
2025-09-17T00:39:52.81388Z	}
2025-09-17T00:39:52.813999Z	🔍 执行品牌查询: {
2025-09-17T00:39:52.8141Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-17T00:39:52.814165Z	  'GROQ查询': '\n' +
2025-09-17T00:39:52.814224Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-17T00:39:52.81431Z	    '      \n' +
2025-09-17T00:39:52.81438Z	    '    _id,\n' +
2025-09-17T00:39:52.814434Z	    '    name,\n' +
2025-09-17T00:39:52.814489Z	    '    "slug": slug.current,\n' +
2025-09-17T00:39:52.814543Z	    '    logo,\n' +
2025-09-17T00:39:52.814597Z	    '    description,\n' +
2025-09-17T00:39:52.814658Z	    '    website,\n' +
2025-09-17T00:39:52.814712Z	    '    country,\n' +
2025-09-17T00:39:52.814773Z	    '    isActive,\n' +
2025-09-17T00:39:52.814841Z	    '    isFeatured\n' +
2025-09-17T00:39:52.814933Z	    '  \n' +
2025-09-17T00:39:52.815022Z	    '    }\n' +
2025-09-17T00:39:52.815123Z	    '  ',
2025-09-17T00:39:52.815221Z	  '是否仅获取推荐': false
2025-09-17T00:39:52.815349Z	}
2025-09-17T00:39:52.815456Z	📊 品牌查询结果: {
2025-09-17T00:39:52.815559Z	  '数量': 13,
2025-09-17T00:39:52.815661Z	  '品牌列表': [
2025-09-17T00:39:52.815792Z	    {
2025-09-17T00:39:52.8159Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:52.816011Z	      '名称': 'CREE',
2025-09-17T00:39:52.816115Z	      slug: 'cree',
2025-09-17T00:39:52.816547Z	      '是否激活': true,
2025-09-17T00:39:52.81681Z	      '是否推荐': false
2025-09-17T00:39:52.817014Z	    },
2025-09-17T00:39:52.817408Z	    {
2025-09-17T00:39:52.817605Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-17T00:39:52.817707Z	      '名称': 'Electronicon',
2025-09-17T00:39:52.817798Z	      slug: 'Electronicon',
2025-09-17T00:39:52.817899Z	      '是否激活': true,
2025-09-17T00:39:52.817993Z	      '是否推荐': false
2025-09-17T00:39:52.818101Z	    },
2025-09-17T00:39:52.818201Z	    {
2025-09-17T00:39:52.818314Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-17T00:39:52.818416Z	      '名称': 'Epcos',
2025-09-17T00:39:52.818513Z	      slug: 'epcos',
2025-09-17T00:39:52.818617Z	      '是否激活': true,
2025-09-17T00:39:52.81871Z	      '是否推荐': false
2025-09-17T00:39:52.818807Z	    },
2025-09-17T00:39:52.819792Z	    {
2025-09-17T00:39:52.819936Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:52.820067Z	      '名称': 'IXYS',
2025-09-17T00:39:52.820177Z	      slug: 'ixys',
2025-09-17T00:39:52.820317Z	      '是否激活': true,
2025-09-17T00:39:52.82044Z	      '是否推荐': false
2025-09-17T00:39:52.820554Z	    },
2025-09-17T00:39:52.820662Z	    {
2025-09-17T00:39:52.820813Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-17T00:39:52.821147Z	      '名称': 'LEM',
2025-09-17T00:39:52.821399Z	      slug: 'lem',
2025-09-17T00:39:52.821888Z	      '是否激活': true,
2025-09-17T00:39:52.822431Z	      '是否推荐': false
2025-09-17T00:39:52.822569Z	    },
2025-09-17T00:39:52.822948Z	    {
2025-09-17T00:39:52.82308Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-17T00:39:52.823435Z	      '名称': 'Littelfuse',
2025-09-17T00:39:52.823756Z	      slug: 'littelfuse',
2025-09-17T00:39:52.823824Z	      '是否激活': true,
2025-09-17T00:39:52.823884Z	      '是否推荐': false
2025-09-17T00:39:52.823957Z	    },
2025-09-17T00:39:52.824055Z	    {
2025-09-17T00:39:52.824329Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-17T00:39:52.824528Z	      '名称': 'MediaTek',
2025-09-17T00:39:52.824701Z	      slug: 'mediatek',
2025-09-17T00:39:52.824865Z	      '是否激活': true,
2025-09-17T00:39:52.825077Z	      '是否推荐': false
2025-09-17T00:39:52.825282Z	    },
2025-09-17T00:39:52.82545Z	    {
2025-09-17T00:39:52.825556Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-17T00:39:52.825886Z	      '名称': 'PI',
2025-09-17T00:39:52.826239Z	      slug: 'pi',
2025-09-17T00:39:52.826619Z	      '是否激活': true,
2025-09-17T00:39:52.826881Z	      '是否推荐': false
2025-09-17T00:39:52.827349Z	    },
2025-09-17T00:39:52.827505Z	    {
2025-09-17T00:39:52.827708Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-17T00:39:52.827831Z	      '名称': 'Qualcomm',
2025-09-17T00:39:52.827927Z	      slug: 'qualcomm',
2025-09-17T00:39:52.828027Z	      '是否激活': true,
2025-09-17T00:39:52.828124Z	      '是否推荐': true
2025-09-17T00:39:52.82822Z	    },
2025-09-17T00:39:52.82834Z	    {
2025-09-17T00:39:52.828445Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-17T00:39:52.828548Z	      '名称': 'Sanrex',
2025-09-17T00:39:52.828651Z	      slug: 'sanrex',
2025-09-17T00:39:52.828748Z	      '是否激活': true,
2025-09-17T00:39:52.828846Z	      '是否推荐': false
2025-09-17T00:39:52.828945Z	    },
2025-09-17T00:39:52.829055Z	    {
2025-09-17T00:39:52.829159Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-17T00:39:52.829276Z	      '名称': 'Semikron',
2025-09-17T00:39:52.829392Z	      slug: 'semikron',
2025-09-17T00:39:52.829495Z	      '是否激活': true,
2025-09-17T00:39:52.829592Z	      '是否推荐': true
2025-09-17T00:39:52.82971Z	    },
2025-09-17T00:39:52.82986Z	    {
2025-09-17T00:39:52.829977Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-17T00:39:52.830107Z	      '名称': 'ncc',
2025-09-17T00:39:52.830239Z	      slug: 'ncc',
2025-09-17T00:39:52.830395Z	      '是否激活': true,
2025-09-17T00:39:52.830495Z	      '是否推荐': false
2025-09-17T00:39:52.830592Z	    },
2025-09-17T00:39:52.83068Z	    {
2025-09-17T00:39:52.831026Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-17T00:39:52.831167Z	      '名称': '英飞凌',
2025-09-17T00:39:52.831329Z	      slug: '英飞凌',
2025-09-17T00:39:52.83176Z	      '是否激活': true,
2025-09-17T00:39:52.831953Z	      '是否推荐': true
2025-09-17T00:39:52.832081Z	    }
2025-09-17T00:39:52.832192Z	  ]
2025-09-17T00:39:52.832334Z	}
2025-09-17T00:39:52.832558Z	🔍 执行品牌查询: {
2025-09-17T00:39:52.832695Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-17T00:39:52.832806Z	  'GROQ查询': '\n' +
2025-09-17T00:39:52.832904Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-17T00:39:52.83304Z	    '      \n' +
2025-09-17T00:39:52.8332Z	    '    _id,\n' +
2025-09-17T00:39:52.833381Z	    '    name,\n' +
2025-09-17T00:39:52.833573Z	    '    "slug": slug.current,\n' +
2025-09-17T00:39:52.833698Z	    '    logo,\n' +
2025-09-17T00:39:52.833849Z	    '    description,\n' +
2025-09-17T00:39:52.834128Z	    '    website,\n' +
2025-09-17T00:39:52.834375Z	    '    country,\n' +
2025-09-17T00:39:52.834664Z	    '    isActive,\n' +
2025-09-17T00:39:52.834778Z	    '    isFeatured\n' +
2025-09-17T00:39:52.83498Z	    '  \n' +
2025-09-17T00:39:52.835374Z	    '    }\n' +
2025-09-17T00:39:52.835503Z	    '  ',
2025-09-17T00:39:52.835808Z	  '是否仅获取推荐': false
2025-09-17T00:39:52.835954Z	}
2025-09-17T00:39:52.836392Z	📊 品牌查询结果: {
2025-09-17T00:39:52.836533Z	  '数量': 13,
2025-09-17T00:39:52.836644Z	  '品牌列表': [
2025-09-17T00:39:52.836788Z	    {
2025-09-17T00:39:52.836899Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:52.837002Z	      '名称': 'CREE',
2025-09-17T00:39:52.837181Z	      slug: 'cree',
2025-09-17T00:39:52.837324Z	      '是否激活': true,
2025-09-17T00:39:52.837431Z	      '是否推荐': false
2025-09-17T00:39:52.837549Z	    },
2025-09-17T00:39:52.837661Z	    {
2025-09-17T00:39:52.837764Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-17T00:39:52.837891Z	      '名称': 'Electronicon',
2025-09-17T00:39:52.838023Z	      slug: 'Electronicon',
2025-09-17T00:39:52.838186Z	      '是否激活': true,
2025-09-17T00:39:52.838342Z	      '是否推荐': false
2025-09-17T00:39:52.838483Z	    },
2025-09-17T00:39:52.838598Z	    {
2025-09-17T00:39:52.838696Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-17T00:39:52.838812Z	      '名称': 'Epcos',
2025-09-17T00:39:52.839004Z	      slug: 'epcos',
2025-09-17T00:39:52.839163Z	      '是否激活': true,
2025-09-17T00:39:52.839317Z	      '是否推荐': false
2025-09-17T00:39:52.839433Z	    },
2025-09-17T00:39:52.839532Z	    {
2025-09-17T00:39:52.839925Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:52.840038Z	      '名称': 'IXYS',
2025-09-17T00:39:52.840364Z	      slug: 'ixys',
2025-09-17T00:39:52.84064Z	      '是否激活': true,
2025-09-17T00:39:52.840761Z	      '是否推荐': false
2025-09-17T00:39:52.841306Z	    },
2025-09-17T00:39:52.841607Z	    {
2025-09-17T00:39:52.84171Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-17T00:39:52.842071Z	      '名称': 'LEM',
2025-09-17T00:39:52.842369Z	      slug: 'lem',
2025-09-17T00:39:52.842519Z	      '是否激活': true,
2025-09-17T00:39:52.842735Z	      '是否推荐': false
2025-09-17T00:39:52.842902Z	    },
2025-09-17T00:39:52.843023Z	    {
2025-09-17T00:39:52.843133Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-17T00:39:52.84325Z	      '名称': 'Littelfuse',
2025-09-17T00:39:52.843538Z	      slug: 'littelfuse',
2025-09-17T00:39:52.843663Z	      '是否激活': true,
2025-09-17T00:39:52.843773Z	      '是否推荐': false
2025-09-17T00:39:52.84389Z	    },
2025-09-17T00:39:52.843993Z	    {
2025-09-17T00:39:52.844089Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-17T00:39:52.8442Z	      '名称': 'MediaTek',
2025-09-17T00:39:52.844324Z	      slug: 'mediatek',
2025-09-17T00:39:52.844424Z	      '是否激活': true,
2025-09-17T00:39:52.844526Z	      '是否推荐': false
2025-09-17T00:39:52.844627Z	    },
2025-09-17T00:39:52.844731Z	    {
2025-09-17T00:39:52.844871Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-17T00:39:52.845051Z	      '名称': 'PI',
2025-09-17T00:39:52.845338Z	      slug: 'pi',
2025-09-17T00:39:52.845498Z	      '是否激活': true,
2025-09-17T00:39:52.845653Z	      '是否推荐': false
2025-09-17T00:39:52.845788Z	    },
2025-09-17T00:39:52.845895Z	    {
2025-09-17T00:39:52.846088Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-17T00:39:52.8464Z	      '名称': 'Qualcomm',
2025-09-17T00:39:52.846734Z	      slug: 'qualcomm',
2025-09-17T00:39:52.846967Z	      '是否激活': true,
2025-09-17T00:39:52.847238Z	      '是否推荐': true
2025-09-17T00:39:52.847473Z	    },
2025-09-17T00:39:52.847663Z	    {
2025-09-17T00:39:52.847856Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-17T00:39:52.848033Z	      '名称': 'Sanrex',
2025-09-17T00:39:52.848151Z	      slug: 'sanrex',
2025-09-17T00:39:52.848284Z	      '是否激活': true,
2025-09-17T00:39:52.848413Z	      '是否推荐': false
2025-09-17T00:39:52.848521Z	    },
2025-09-17T00:39:52.848622Z	    {
2025-09-17T00:39:52.848748Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-17T00:39:52.848847Z	      '名称': 'Semikron',
2025-09-17T00:39:52.84894Z	      slug: 'semikron',
2025-09-17T00:39:52.849046Z	      '是否激活': true,
2025-09-17T00:39:52.849158Z	      '是否推荐': true
2025-09-17T00:39:52.849361Z	    },
2025-09-17T00:39:52.849532Z	    {
2025-09-17T00:39:52.84983Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-17T00:39:52.849953Z	      '名称': 'ncc',
2025-09-17T00:39:52.85007Z	      slug: 'ncc',
2025-09-17T00:39:52.850169Z	      '是否激活': true,
2025-09-17T00:39:52.850284Z	      '是否推荐': false
2025-09-17T00:39:52.850388Z	    },
2025-09-17T00:39:52.850518Z	    {
2025-09-17T00:39:52.850625Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-17T00:39:52.850726Z	      '名称': '英飞凌',
2025-09-17T00:39:52.85083Z	      slug: '英飞凌',
2025-09-17T00:39:52.850946Z	      '是否激活': true,
2025-09-17T00:39:52.851063Z	      '是否推荐': true
2025-09-17T00:39:52.851166Z	    }
2025-09-17T00:39:52.851353Z	  ]
2025-09-17T00:39:52.851512Z	}
2025-09-17T00:39:52.851788Z	🔍 执行品牌查询: {
2025-09-17T00:39:52.851908Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-17T00:39:52.85206Z	  'GROQ查询': '\n' +
2025-09-17T00:39:52.852233Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-17T00:39:52.852515Z	    '      \n' +
2025-09-17T00:39:52.852676Z	    '    _id,\n' +
2025-09-17T00:39:52.852781Z	    '    name,\n' +
2025-09-17T00:39:52.852874Z	    '    "slug": slug.current,\n' +
2025-09-17T00:39:52.852971Z	    '    logo,\n' +
2025-09-17T00:39:52.853038Z	    '    description,\n' +
2025-09-17T00:39:52.853407Z	    '    website,\n' +
2025-09-17T00:39:52.853627Z	    '    country,\n' +
2025-09-17T00:39:52.853826Z	    '    isActive,\n' +
2025-09-17T00:39:52.853998Z	    '    isFeatured\n' +
2025-09-17T00:39:52.854154Z	    '  \n' +
2025-09-17T00:39:52.85428Z	    '    }\n' +
2025-09-17T00:39:52.854448Z	    '  ',
2025-09-17T00:39:52.854624Z	  '是否仅获取推荐': false
2025-09-17T00:39:52.854769Z	}
2025-09-17T00:39:52.854909Z	🔍 执行品牌查询: {
2025-09-17T00:39:52.855083Z	  '查询条件': '_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))',
2025-09-17T00:39:52.855238Z	  'GROQ查询': '\n' +
2025-09-17T00:39:52.855381Z	    '    *[_type == "brandBasic" && isActive == true && !(_id in path("drafts.**"))] | order(name asc) {\n' +
2025-09-17T00:39:52.855491Z	    '      \n' +
2025-09-17T00:39:52.855676Z	    '    _id,\n' +
2025-09-17T00:39:52.855835Z	    '    name,\n' +
2025-09-17T00:39:52.855963Z	    '    "slug": slug.current,\n' +
2025-09-17T00:39:52.856095Z	    '    logo,\n' +
2025-09-17T00:39:52.856228Z	    '    description,\n' +
2025-09-17T00:39:52.856343Z	    '    website,\n' +
2025-09-17T00:39:52.856446Z	    '    country,\n' +
2025-09-17T00:39:52.856538Z	    '    isActive,\n' +
2025-09-17T00:39:52.856611Z	    '    isFeatured\n' +
2025-09-17T00:39:52.856695Z	    '  \n' +
2025-09-17T00:39:52.856777Z	    '    }\n' +
2025-09-17T00:39:52.856907Z	    '  ',
2025-09-17T00:39:52.857058Z	  '是否仅获取推荐': false
2025-09-17T00:39:52.857243Z	}
2025-09-17T00:39:52.857374Z	📊 品牌查询结果: {
2025-09-17T00:39:52.857482Z	  '数量': 13,
2025-09-17T00:39:52.857662Z	  '品牌列表': [
2025-09-17T00:39:52.857851Z	    {
2025-09-17T00:39:52.858028Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:52.858157Z	      '名称': 'CREE',
2025-09-17T00:39:52.858294Z	      slug: 'cree',
2025-09-17T00:39:52.858413Z	      '是否激活': true,
2025-09-17T00:39:52.858504Z	      '是否推荐': false
2025-09-17T00:39:52.858606Z	    },
2025-09-17T00:39:52.858699Z	    {
2025-09-17T00:39:52.858808Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-17T00:39:52.85892Z	      '名称': 'Electronicon',
2025-09-17T00:39:52.859029Z	      slug: 'Electronicon',
2025-09-17T00:39:52.859133Z	      '是否激活': true,
2025-09-17T00:39:52.859236Z	      '是否推荐': false
2025-09-17T00:39:52.887522Z	    },
2025-09-17T00:39:52.887641Z	    {
2025-09-17T00:39:52.88808Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-17T00:39:52.888284Z	      '名称': 'Epcos',
2025-09-17T00:39:52.888418Z	      slug: 'epcos',
2025-09-17T00:39:52.888549Z	      '是否激活': true,
2025-09-17T00:39:52.888664Z	      '是否推荐': false
2025-09-17T00:39:52.888771Z	    },
2025-09-17T00:39:52.888977Z	    {
2025-09-17T00:39:52.889211Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:52.889476Z	      '名称': 'IXYS',
2025-09-17T00:39:52.889651Z	      slug: 'ixys',
2025-09-17T00:39:52.889797Z	      '是否激活': true,
2025-09-17T00:39:52.889922Z	      '是否推荐': false
2025-09-17T00:39:52.890037Z	    },
2025-09-17T00:39:52.890143Z	    {
2025-09-17T00:39:52.890249Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-17T00:39:52.890412Z	      '名称': 'LEM',
2025-09-17T00:39:52.890615Z	      slug: 'lem',
2025-09-17T00:39:52.890737Z	      '是否激活': true,
2025-09-17T00:39:52.890847Z	      '是否推荐': false
2025-09-17T00:39:52.890955Z	    },
2025-09-17T00:39:52.891205Z	    {
2025-09-17T00:39:52.891432Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-17T00:39:52.891544Z	      '名称': 'Littelfuse',
2025-09-17T00:39:52.891723Z	      slug: 'littelfuse',
2025-09-17T00:39:52.891912Z	      '是否激活': true,
2025-09-17T00:39:52.892025Z	      '是否推荐': false
2025-09-17T00:39:52.892152Z	    },
2025-09-17T00:39:52.892321Z	    {
2025-09-17T00:39:52.892473Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-17T00:39:52.8926Z	      '名称': 'MediaTek',
2025-09-17T00:39:52.892686Z	      slug: 'mediatek',
2025-09-17T00:39:52.892764Z	      '是否激活': true,
2025-09-17T00:39:52.892926Z	      '是否推荐': false
2025-09-17T00:39:52.893088Z	    },
2025-09-17T00:39:52.893233Z	    {
2025-09-17T00:39:52.893399Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-17T00:39:52.893488Z	      '名称': 'PI',
2025-09-17T00:39:52.893552Z	      slug: 'pi',
2025-09-17T00:39:52.893616Z	      '是否激活': true,
2025-09-17T00:39:52.893967Z	      '是否推荐': false
2025-09-17T00:39:52.894101Z	    },
2025-09-17T00:39:52.894606Z	    {
2025-09-17T00:39:52.89483Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-17T00:39:52.894919Z	      '名称': 'Qualcomm',
2025-09-17T00:39:52.895418Z	      slug: 'qualcomm',
2025-09-17T00:39:52.895535Z	      '是否激活': true,
2025-09-17T00:39:52.895707Z	      '是否推荐': true
2025-09-17T00:39:52.895854Z	    },
2025-09-17T00:39:52.896249Z	    {
2025-09-17T00:39:52.89646Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-17T00:39:52.896585Z	      '名称': 'Sanrex',
2025-09-17T00:39:52.89676Z	      slug: 'sanrex',
2025-09-17T00:39:52.897005Z	      '是否激活': true,
2025-09-17T00:39:52.897225Z	      '是否推荐': false
2025-09-17T00:39:52.897406Z	    },
2025-09-17T00:39:52.897557Z	    {
2025-09-17T00:39:52.897706Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-17T00:39:52.897854Z	      '名称': 'Semikron',
2025-09-17T00:39:52.897974Z	      slug: 'semikron',
2025-09-17T00:39:52.898114Z	      '是否激活': true,
2025-09-17T00:39:52.898344Z	      '是否推荐': true
2025-09-17T00:39:52.898491Z	    },
2025-09-17T00:39:52.898608Z	    {
2025-09-17T00:39:52.898714Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-17T00:39:52.898847Z	      '名称': 'ncc',
2025-09-17T00:39:52.898969Z	      slug: 'ncc',
2025-09-17T00:39:52.899106Z	      '是否激活': true,
2025-09-17T00:39:52.899438Z	      '是否推荐': false
2025-09-17T00:39:52.899538Z	    },
2025-09-17T00:39:52.899645Z	    {
2025-09-17T00:39:52.899846Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-17T00:39:52.899952Z	      '名称': '英飞凌',
2025-09-17T00:39:52.900088Z	      slug: '英飞凌',
2025-09-17T00:39:52.900226Z	      '是否激活': true,
2025-09-17T00:39:52.900379Z	      '是否推荐': true
2025-09-17T00:39:52.900529Z	    }
2025-09-17T00:39:52.900946Z	  ]
2025-09-17T00:39:52.901162Z	}
2025-09-17T00:39:52.901485Z	📊 品牌查询结果: {
2025-09-17T00:39:52.901754Z	  '数量': 13,
2025-09-17T00:39:52.901871Z	  '品牌列表': [
2025-09-17T00:39:52.901986Z	    {
2025-09-17T00:39:52.902126Z	      id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:52.902244Z	      '名称': 'CREE',
2025-09-17T00:39:52.902446Z	      slug: 'cree',
2025-09-17T00:39:52.902581Z	      '是否激活': true,
2025-09-17T00:39:52.90271Z	      '是否推荐': false
2025-09-17T00:39:52.902833Z	    },
2025-09-17T00:39:52.902936Z	    {
2025-09-17T00:39:52.903086Z	      id: '334583a0-df48-4c3f-909f-8e700606a877',
2025-09-17T00:39:52.903482Z	      '名称': 'Electronicon',
2025-09-17T00:39:52.903732Z	      slug: 'Electronicon',
2025-09-17T00:39:52.904089Z	      '是否激活': true,
2025-09-17T00:39:52.904233Z	      '是否推荐': false
2025-09-17T00:39:52.904408Z	    },
2025-09-17T00:39:52.904586Z	    {
2025-09-17T00:39:52.904882Z	      id: '25b7d701-24ff-4287-87d2-2ea7a275c2f4',
2025-09-17T00:39:52.90503Z	      '名称': 'Epcos',
2025-09-17T00:39:52.905166Z	      slug: 'epcos',
2025-09-17T00:39:52.905378Z	      '是否激活': true,
2025-09-17T00:39:52.905666Z	      '是否推荐': false
2025-09-17T00:39:52.905755Z	    },
2025-09-17T00:39:52.905855Z	    {
2025-09-17T00:39:52.905955Z	      id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:52.906059Z	      '名称': 'IXYS',
2025-09-17T00:39:52.906185Z	      slug: 'ixys',
2025-09-17T00:39:52.906317Z	      '是否激活': true,
2025-09-17T00:39:52.906417Z	      '是否推荐': false
2025-09-17T00:39:52.906507Z	    },
2025-09-17T00:39:52.906652Z	    {
2025-09-17T00:39:52.906834Z	      id: '50f1951b-0bcb-4da9-8a32-d9c7ef69c8d0',
2025-09-17T00:39:52.906956Z	      '名称': 'LEM',
2025-09-17T00:39:52.907137Z	      slug: 'lem',
2025-09-17T00:39:52.907471Z	      '是否激活': true,
2025-09-17T00:39:52.90761Z	      '是否推荐': false
2025-09-17T00:39:52.908049Z	    },
2025-09-17T00:39:52.908137Z	    {
2025-09-17T00:39:52.908407Z	      id: '338ca8ee-36b5-4988-84bb-afd570f9d3f3',
2025-09-17T00:39:52.908711Z	      '名称': 'Littelfuse',
2025-09-17T00:39:52.908909Z	      slug: 'littelfuse',
2025-09-17T00:39:52.90905Z	      '是否激活': true,
2025-09-17T00:39:52.909171Z	      '是否推荐': false
2025-09-17T00:39:52.909289Z	    },
2025-09-17T00:39:52.90943Z	    {
2025-09-17T00:39:52.909555Z	      id: 'jVRgCqSLEjfmNxWovPd1Kd',
2025-09-17T00:39:52.909675Z	      '名称': 'MediaTek',
2025-09-17T00:39:52.909784Z	      slug: 'mediatek',
2025-09-17T00:39:52.909895Z	      '是否激活': true,
2025-09-17T00:39:52.910003Z	      '是否推荐': false
2025-09-17T00:39:52.910105Z	    },
2025-09-17T00:39:52.910211Z	    {
2025-09-17T00:39:52.910342Z	      id: '187f202f-9115-433e-acc5-183fcf30b53e',
2025-09-17T00:39:52.910543Z	      '名称': 'PI',
2025-09-17T00:39:52.910681Z	      slug: 'pi',
2025-09-17T00:39:52.910801Z	      '是否激活': true,
2025-09-17T00:39:52.910938Z	      '是否推荐': false
2025-09-17T00:39:52.911042Z	    },
2025-09-17T00:39:52.911143Z	    {
2025-09-17T00:39:52.911255Z	      id: 'jVRgCqSLEjfmNxWovPcI1T',
2025-09-17T00:39:52.911381Z	      '名称': 'Qualcomm',
2025-09-17T00:39:52.911485Z	      slug: 'qualcomm',
2025-09-17T00:39:52.911584Z	      '是否激活': true,
2025-09-17T00:39:52.911706Z	      '是否推荐': true
2025-09-17T00:39:52.911814Z	    },
2025-09-17T00:39:52.911998Z	    {
2025-09-17T00:39:52.912133Z	      id: '90f7a400-1a41-4848-bb47-9452417a239e',
2025-09-17T00:39:52.912306Z	      '名称': 'Sanrex',
2025-09-17T00:39:52.912454Z	      slug: 'sanrex',
2025-09-17T00:39:52.912594Z	      '是否激活': true,
2025-09-17T00:39:52.912703Z	      '是否推荐': false
2025-09-17T00:39:52.912807Z	    },
2025-09-17T00:39:52.912963Z	    {
2025-09-17T00:39:52.913077Z	      id: '6c5c79e4-ae71-4058-82b7-f084c1d6a38f',
2025-09-17T00:39:52.913315Z	      '名称': 'Semikron',
2025-09-17T00:39:52.913476Z	      slug: 'semikron',
2025-09-17T00:39:52.913614Z	      '是否激活': true,
2025-09-17T00:39:52.913737Z	      '是否推荐': true
2025-09-17T00:39:52.914382Z	    },
2025-09-17T00:39:52.914569Z	    {
2025-09-17T00:39:52.914779Z	      id: '48f35df7-11c9-474b-8ea2-d1427100878f',
2025-09-17T00:39:52.914994Z	      '名称': 'ncc',
2025-09-17T00:39:52.915144Z	      slug: 'ncc',
2025-09-17T00:39:52.915305Z	      '是否激活': true,
2025-09-17T00:39:52.915445Z	      '是否推荐': false
2025-09-17T00:39:52.915715Z	    },
2025-09-17T00:39:52.915869Z	    {
2025-09-17T00:39:52.915959Z	      id: '574c06df-0e06-4e5a-a0bc-38f210614bfa',
2025-09-17T00:39:52.916117Z	      '名称': '英飞凌',
2025-09-17T00:39:52.916255Z	      slug: '英飞凌',
2025-09-17T00:39:52.916405Z	      '是否激活': true,
2025-09-17T00:39:52.916571Z	      '是否推荐': true
2025-09-17T00:39:52.916692Z	    }
2025-09-17T00:39:52.916832Z	  ]
2025-09-17T00:39:52.916993Z	}
2025-09-17T00:39:52.91714Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-17T00:39:52.917298Z	Fetching products with query: 
2025-09-17T00:39:52.917447Z	    {
2025-09-17T00:39:52.91763Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:52.917719Z	        
2025-09-17T00:39:52.918044Z	    _id,
2025-09-17T00:39:52.918127Z	    _type,
2025-09-17T00:39:52.9184Z	    partNumber,
2025-09-17T00:39:52.91849Z	    "slug": slug.current,
2025-09-17T00:39:52.918741Z	    title,
2025-09-17T00:39:52.919016Z	    shortDescription,
2025-09-17T00:39:52.919122Z	    image,
2025-09-17T00:39:52.919453Z	    brand->{
2025-09-17T00:39:52.919548Z	      name,
2025-09-17T00:39:52.919799Z	      "slug": slug.current,
2025-09-17T00:39:52.919919Z	      logo
2025-09-17T00:39:52.920138Z	    },
2025-09-17T00:39:52.920217Z	    category->{
2025-09-17T00:39:52.92041Z	      name,
2025-09-17T00:39:52.920473Z	      "slug": slug.current
2025-09-17T00:39:52.920532Z	    },
2025-09-17T00:39:52.92066Z	    pricing{
2025-09-17T00:39:52.920875Z	      currency,
2025-09-17T00:39:52.920987Z	      tiers[]{
2025-09-17T00:39:52.921135Z	        quantity,
2025-09-17T00:39:52.921327Z	        price,
2025-09-17T00:39:52.92145Z	        unit
2025-09-17T00:39:52.921612Z	      },
2025-09-17T00:39:52.921696Z	      moq,
2025-09-17T00:39:52.921758Z	      leadTime,
2025-09-17T00:39:52.921842Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:52.922034Z	      "price": tiers[0].price,
2025-09-17T00:39:52.922122Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:52.922235Z	    },
2025-09-17T00:39:52.92242Z	    inventory{
2025-09-17T00:39:52.922563Z	      quantity,
2025-09-17T00:39:52.922687Z	      status,
2025-09-17T00:39:52.922801Z	      warehouse,
2025-09-17T00:39:52.922903Z	      lastUpdated,
2025-09-17T00:39:52.923032Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:52.923186Z	      "inStock": status == "in_stock",
2025-09-17T00:39:52.923321Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:52.923427Z	    },
2025-09-17T00:39:52.923541Z	    isActive,
2025-09-17T00:39:52.923658Z	    isFeatured,
2025-09-17T00:39:52.923773Z	    isNew,
2025-09-17T00:39:52.923874Z	    _createdAt,
2025-09-17T00:39:52.923968Z	    _updatedAt
2025-09-17T00:39:52.924074Z	  
2025-09-17T00:39:52.924219Z	      },
2025-09-17T00:39:52.92449Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-17T00:39:52.924682Z	    }
2025-09-17T00:39:52.924882Z	  
2025-09-17T00:39:52.92496Z	Query parameters: {
2025-09-17T00:39:52.925149Z	  limit: 8,
2025-09-17T00:39:52.925234Z	  offset: 0,
2025-09-17T00:39:52.92544Z	  category: undefined,
2025-09-17T00:39:52.925635Z	  brand: 'epcos',
2025-09-17T00:39:52.925714Z	  featured: undefined
2025-09-17T00:39:52.925776Z	}
2025-09-17T00:39:52.926239Z	Fetching solutions with query: 
2025-09-17T00:39:52.926532Z	    {
2025-09-17T00:39:52.926832Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:52.926969Z	        
2025-09-17T00:39:52.927482Z	    _id,
2025-09-17T00:39:52.927566Z	    title,
2025-09-17T00:39:52.927821Z	    "slug": slug.current,
2025-09-17T00:39:52.927904Z	    summary,
2025-09-17T00:39:52.928184Z	    description,
2025-09-17T00:39:52.928264Z	    coverImage,
2025-09-17T00:39:52.928527Z	    primaryBrand->{
2025-09-17T00:39:52.928614Z	      _id,
2025-09-17T00:39:52.928722Z	      name,
2025-09-17T00:39:52.928831Z	      "slug": slug.current,
2025-09-17T00:39:52.928962Z	      logo
2025-09-17T00:39:52.929154Z	    },
2025-09-17T00:39:52.929319Z	    relatedBrands[]->{
2025-09-17T00:39:52.929452Z	      _id,
2025-09-17T00:39:52.929579Z	      name,
2025-09-17T00:39:52.929705Z	      "slug": slug.current,
2025-09-17T00:39:52.929827Z	      logo
2025-09-17T00:39:52.92994Z	    },
2025-09-17T00:39:52.930052Z	    targetMarket,
2025-09-17T00:39:52.930182Z	    complexity,
2025-09-17T00:39:52.930328Z	    publishedAt,
2025-09-17T00:39:52.930443Z	    isPublished,
2025-09-17T00:39:52.930545Z	    isFeatured,
2025-09-17T00:39:52.930642Z	    viewCount,
2025-09-17T00:39:52.930741Z	    _createdAt,
2025-09-17T00:39:52.930838Z	    _updatedAt
2025-09-17T00:39:52.930937Z	  
2025-09-17T00:39:52.931037Z	      },
2025-09-17T00:39:52.931131Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-17T00:39:52.931225Z	    }
2025-09-17T00:39:52.931331Z	  
2025-09-17T00:39:52.931437Z	Query parameters: {
2025-09-17T00:39:52.931521Z	  limit: 4,
2025-09-17T00:39:52.931609Z	  offset: 0,
2025-09-17T00:39:52.931698Z	  targetMarket: undefined,
2025-09-17T00:39:52.931788Z	  brand: 'epcos',
2025-09-17T00:39:52.931876Z	  featured: undefined
2025-09-17T00:39:52.931959Z	}
2025-09-17T00:39:52.932075Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-17T00:39:52.932184Z	Fetching products with query: 
2025-09-17T00:39:52.932308Z	    {
2025-09-17T00:39:52.932423Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:52.932514Z	        
2025-09-17T00:39:52.9326Z	    _id,
2025-09-17T00:39:52.932695Z	    _type,
2025-09-17T00:39:52.932786Z	    partNumber,
2025-09-17T00:39:52.932882Z	    "slug": slug.current,
2025-09-17T00:39:52.932981Z	    title,
2025-09-17T00:39:52.933094Z	    shortDescription,
2025-09-17T00:39:52.933212Z	    image,
2025-09-17T00:39:52.933325Z	    brand->{
2025-09-17T00:39:52.933425Z	      name,
2025-09-17T00:39:52.93353Z	      "slug": slug.current,
2025-09-17T00:39:52.933631Z	      logo
2025-09-17T00:39:52.933721Z	    },
2025-09-17T00:39:52.933817Z	    category->{
2025-09-17T00:39:52.933911Z	      name,
2025-09-17T00:39:52.934007Z	      "slug": slug.current
2025-09-17T00:39:52.934093Z	    },
2025-09-17T00:39:52.934152Z	    pricing{
2025-09-17T00:39:52.934214Z	      currency,
2025-09-17T00:39:52.934365Z	      tiers[]{
2025-09-17T00:39:52.934431Z	        quantity,
2025-09-17T00:39:52.934492Z	        price,
2025-09-17T00:39:52.934547Z	        unit
2025-09-17T00:39:52.934604Z	      },
2025-09-17T00:39:52.934658Z	      moq,
2025-09-17T00:39:52.934711Z	      leadTime,
2025-09-17T00:39:52.934765Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:52.934826Z	      "price": tiers[0].price,
2025-09-17T00:39:52.93488Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:52.934934Z	    },
2025-09-17T00:39:52.934987Z	    inventory{
2025-09-17T00:39:52.935048Z	      quantity,
2025-09-17T00:39:52.935103Z	      status,
2025-09-17T00:39:52.935157Z	      warehouse,
2025-09-17T00:39:52.93521Z	      lastUpdated,
2025-09-17T00:39:52.935264Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:52.935355Z	      "inStock": status == "in_stock",
2025-09-17T00:39:52.935413Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:52.935468Z	    },
2025-09-17T00:39:52.935522Z	    isActive,
2025-09-17T00:39:52.935584Z	    isFeatured,
2025-09-17T00:39:52.935641Z	    isNew,
2025-09-17T00:39:52.935845Z	    _createdAt,
2025-09-17T00:39:52.935962Z	    _updatedAt
2025-09-17T00:39:52.936091Z	  
2025-09-17T00:39:52.936258Z	      },
2025-09-17T00:39:52.936429Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-17T00:39:52.936583Z	    }
2025-09-17T00:39:52.936679Z	  
2025-09-17T00:39:52.93674Z	Query parameters: {
2025-09-17T00:39:52.936874Z	  limit: 8,
2025-09-17T00:39:52.936958Z	  offset: 0,
2025-09-17T00:39:52.937113Z	  category: undefined,
2025-09-17T00:39:52.937211Z	  brand: 'epcos',
2025-09-17T00:39:52.937344Z	  featured: undefined
2025-09-17T00:39:52.937413Z	}
2025-09-17T00:39:52.937501Z	Fetching solutions with query: 
2025-09-17T00:39:52.93764Z	    {
2025-09-17T00:39:52.937737Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:52.937849Z	        
2025-09-17T00:39:52.937992Z	    _id,
2025-09-17T00:39:52.938096Z	    title,
2025-09-17T00:39:52.938187Z	    "slug": slug.current,
2025-09-17T00:39:52.938296Z	    summary,
2025-09-17T00:39:52.938395Z	    description,
2025-09-17T00:39:52.938488Z	    coverImage,
2025-09-17T00:39:52.938588Z	    primaryBrand->{
2025-09-17T00:39:52.938694Z	      _id,
2025-09-17T00:39:52.938785Z	      name,
2025-09-17T00:39:52.938939Z	      "slug": slug.current,
2025-09-17T00:39:52.93905Z	      logo
2025-09-17T00:39:52.939207Z	    },
2025-09-17T00:39:52.939403Z	    relatedBrands[]->{
2025-09-17T00:39:52.939502Z	      _id,
2025-09-17T00:39:52.9396Z	      name,
2025-09-17T00:39:52.939694Z	      "slug": slug.current,
2025-09-17T00:39:52.939791Z	      logo
2025-09-17T00:39:52.939882Z	    },
2025-09-17T00:39:52.939942Z	    targetMarket,
2025-09-17T00:39:52.939996Z	    complexity,
2025-09-17T00:39:52.940056Z	    publishedAt,
2025-09-17T00:39:52.94011Z	    isPublished,
2025-09-17T00:39:52.940164Z	    isFeatured,
2025-09-17T00:39:52.940232Z	    viewCount,
2025-09-17T00:39:52.940683Z	    _createdAt,
2025-09-17T00:39:52.940802Z	    _updatedAt
2025-09-17T00:39:52.940907Z	  
2025-09-17T00:39:52.941112Z	      },
2025-09-17T00:39:52.941472Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-17T00:39:52.941685Z	    }
2025-09-17T00:39:52.941816Z	  
2025-09-17T00:39:52.941919Z	Query parameters: {
2025-09-17T00:39:52.942007Z	  limit: 4,
2025-09-17T00:39:52.942095Z	  offset: 0,
2025-09-17T00:39:52.942193Z	  targetMarket: undefined,
2025-09-17T00:39:52.94231Z	  brand: 'epcos',
2025-09-17T00:39:52.942417Z	  featured: undefined
2025-09-17T00:39:52.942517Z	}
2025-09-17T00:39:52.942614Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-17T00:39:52.942705Z	Fetching products with query: 
2025-09-17T00:39:52.942802Z	    {
2025-09-17T00:39:52.942908Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:52.942994Z	        
2025-09-17T00:39:52.943089Z	    _id,
2025-09-17T00:39:52.94316Z	    _type,
2025-09-17T00:39:52.943279Z	    partNumber,
2025-09-17T00:39:52.94347Z	    "slug": slug.current,
2025-09-17T00:39:52.943641Z	    title,
2025-09-17T00:39:52.943798Z	    shortDescription,
2025-09-17T00:39:52.944042Z	    image,
2025-09-17T00:39:52.944128Z	    brand->{
2025-09-17T00:39:52.944228Z	      name,
2025-09-17T00:39:52.944385Z	      "slug": slug.current,
2025-09-17T00:39:52.944506Z	      logo
2025-09-17T00:39:52.944626Z	    },
2025-09-17T00:39:52.944729Z	    category->{
2025-09-17T00:39:52.944843Z	      name,
2025-09-17T00:39:52.944956Z	      "slug": slug.current
2025-09-17T00:39:52.945053Z	    },
2025-09-17T00:39:52.945145Z	    pricing{
2025-09-17T00:39:52.945258Z	      currency,
2025-09-17T00:39:52.945372Z	      tiers[]{
2025-09-17T00:39:52.945476Z	        quantity,
2025-09-17T00:39:52.945574Z	        price,
2025-09-17T00:39:52.945674Z	        unit
2025-09-17T00:39:52.945789Z	      },
2025-09-17T00:39:52.945885Z	      moq,
2025-09-17T00:39:52.946014Z	      leadTime,
2025-09-17T00:39:52.946111Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:52.946232Z	      "price": tiers[0].price,
2025-09-17T00:39:52.946477Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:52.946588Z	    },
2025-09-17T00:39:52.946709Z	    inventory{
2025-09-17T00:39:52.94683Z	      quantity,
2025-09-17T00:39:52.94697Z	      status,
2025-09-17T00:39:52.947081Z	      warehouse,
2025-09-17T00:39:52.94719Z	      lastUpdated,
2025-09-17T00:39:52.947307Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:52.947431Z	      "inStock": status == "in_stock",
2025-09-17T00:39:52.947509Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:52.947614Z	    },
2025-09-17T00:39:52.947795Z	    isActive,
2025-09-17T00:39:52.947885Z	    isFeatured,
2025-09-17T00:39:52.947947Z	    isNew,
2025-09-17T00:39:52.948053Z	    _createdAt,
2025-09-17T00:39:52.948176Z	    _updatedAt
2025-09-17T00:39:52.948321Z	  
2025-09-17T00:39:52.948418Z	      },
2025-09-17T00:39:52.948662Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-17T00:39:52.948918Z	    }
2025-09-17T00:39:52.949059Z	  
2025-09-17T00:39:52.949146Z	Query parameters: {
2025-09-17T00:39:52.949256Z	  limit: 8,
2025-09-17T00:39:52.94938Z	  offset: 0,
2025-09-17T00:39:52.949614Z	  category: undefined,
2025-09-17T00:39:52.949701Z	  brand: 'Electronicon',
2025-09-17T00:39:52.949913Z	  featured: undefined
2025-09-17T00:39:52.950031Z	}
2025-09-17T00:39:52.950125Z	Fetching solutions with query: 
2025-09-17T00:39:52.95022Z	    {
2025-09-17T00:39:52.950338Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:52.950439Z	        
2025-09-17T00:39:52.950524Z	    _id,
2025-09-17T00:39:52.950653Z	    title,
2025-09-17T00:39:52.950781Z	    "slug": slug.current,
2025-09-17T00:39:52.950877Z	    summary,
2025-09-17T00:39:52.950943Z	    description,
2025-09-17T00:39:52.951045Z	    coverImage,
2025-09-17T00:39:52.951159Z	    primaryBrand->{
2025-09-17T00:39:52.95125Z	      _id,
2025-09-17T00:39:52.951362Z	      name,
2025-09-17T00:39:52.951471Z	      "slug": slug.current,
2025-09-17T00:39:52.951571Z	      logo
2025-09-17T00:39:52.951691Z	    },
2025-09-17T00:39:52.951955Z	    relatedBrands[]->{
2025-09-17T00:39:52.95204Z	      _id,
2025-09-17T00:39:52.952262Z	      name,
2025-09-17T00:39:52.952397Z	      "slug": slug.current,
2025-09-17T00:39:52.952461Z	      logo
2025-09-17T00:39:52.952519Z	    },
2025-09-17T00:39:52.952878Z	    targetMarket,
2025-09-17T00:39:52.953009Z	    complexity,
2025-09-17T00:39:52.953312Z	    publishedAt,
2025-09-17T00:39:52.953528Z	    isPublished,
2025-09-17T00:39:52.953762Z	    isFeatured,
2025-09-17T00:39:52.953885Z	    viewCount,
2025-09-17T00:39:52.9543Z	    _createdAt,
2025-09-17T00:39:52.954481Z	    _updatedAt
2025-09-17T00:39:52.95457Z	  
2025-09-17T00:39:52.954758Z	      },
2025-09-17T00:39:52.954887Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-17T00:39:52.955137Z	    }
2025-09-17T00:39:52.955453Z	  
2025-09-17T00:39:52.955543Z	Query parameters: {
2025-09-17T00:39:52.955654Z	  limit: 4,
2025-09-17T00:39:52.955914Z	  offset: 0,
2025-09-17T00:39:52.956256Z	  targetMarket: undefined,
2025-09-17T00:39:52.956386Z	  brand: 'Electronicon',
2025-09-17T00:39:52.956651Z	  featured: undefined
2025-09-17T00:39:52.956745Z	}
2025-09-17T00:39:52.957017Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-17T00:39:52.957104Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-17T00:39:52.957293Z	Fetching products with query: 
2025-09-17T00:39:52.957387Z	    {
2025-09-17T00:39:52.957453Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:52.957518Z	        
2025-09-17T00:39:52.957576Z	    _id,
2025-09-17T00:39:52.957632Z	    _type,
2025-09-17T00:39:52.957697Z	    partNumber,
2025-09-17T00:39:52.957762Z	    "slug": slug.current,
2025-09-17T00:39:52.957819Z	    title,
2025-09-17T00:39:52.957886Z	    shortDescription,
2025-09-17T00:39:52.957954Z	    image,
2025-09-17T00:39:52.958015Z	    brand->{
2025-09-17T00:39:52.958071Z	      name,
2025-09-17T00:39:52.958127Z	      "slug": slug.current,
2025-09-17T00:39:52.958182Z	      logo
2025-09-17T00:39:52.958235Z	    },
2025-09-17T00:39:52.958612Z	    category->{
2025-09-17T00:39:52.958904Z	      name,
2025-09-17T00:39:52.959379Z	      "slug": slug.current
2025-09-17T00:39:52.959467Z	    },
2025-09-17T00:39:52.959661Z	    pricing{
2025-09-17T00:39:52.959805Z	      currency,
2025-09-17T00:39:52.959924Z	      tiers[]{
2025-09-17T00:39:52.960068Z	        quantity,
2025-09-17T00:39:52.960325Z	        price,
2025-09-17T00:39:52.960479Z	        unit
2025-09-17T00:39:52.960646Z	      },
2025-09-17T00:39:52.960823Z	      moq,
2025-09-17T00:39:52.961017Z	      leadTime,
2025-09-17T00:39:52.961106Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:52.961285Z	      "price": tiers[0].price,
2025-09-17T00:39:52.961401Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:52.961506Z	    },
2025-09-17T00:39:52.961586Z	    inventory{
2025-09-17T00:39:52.961662Z	      quantity,
2025-09-17T00:39:52.961743Z	      status,
2025-09-17T00:39:52.961835Z	      warehouse,
2025-09-17T00:39:52.962053Z	      lastUpdated,
2025-09-17T00:39:52.962135Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:52.962415Z	      "inStock": status == "in_stock",
2025-09-17T00:39:52.962492Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:52.96263Z	    },
2025-09-17T00:39:52.962825Z	    isActive,
2025-09-17T00:39:52.962953Z	    isFeatured,
2025-09-17T00:39:52.963073Z	    isNew,
2025-09-17T00:39:52.963207Z	    _createdAt,
2025-09-17T00:39:52.963326Z	    _updatedAt
2025-09-17T00:39:52.963437Z	  
2025-09-17T00:39:52.963559Z	      },
2025-09-17T00:39:52.963669Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-17T00:39:52.963824Z	    }
2025-09-17T00:39:52.963945Z	  
2025-09-17T00:39:52.964065Z	Query parameters: {
2025-09-17T00:39:52.964184Z	  limit: 8,
2025-09-17T00:39:52.96429Z	  offset: 0,
2025-09-17T00:39:52.964415Z	  category: undefined,
2025-09-17T00:39:52.964527Z	  brand: 'cree',
2025-09-17T00:39:52.964656Z	  featured: undefined
2025-09-17T00:39:52.964759Z	}
2025-09-17T00:39:52.964888Z	Fetching solutions with query: 
2025-09-17T00:39:52.965008Z	    {
2025-09-17T00:39:52.965118Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:52.965235Z	        
2025-09-17T00:39:52.965375Z	    _id,
2025-09-17T00:39:52.965495Z	    title,
2025-09-17T00:39:52.965578Z	    "slug": slug.current,
2025-09-17T00:39:52.965692Z	    summary,
2025-09-17T00:39:52.965771Z	    description,
2025-09-17T00:39:52.965839Z	    coverImage,
2025-09-17T00:39:52.965968Z	    primaryBrand->{
2025-09-17T00:39:52.966049Z	      _id,
2025-09-17T00:39:52.966108Z	      name,
2025-09-17T00:39:52.966179Z	      "slug": slug.current,
2025-09-17T00:39:52.966343Z	      logo
2025-09-17T00:39:52.966472Z	    },
2025-09-17T00:39:52.966594Z	    relatedBrands[]->{
2025-09-17T00:39:52.966721Z	      _id,
2025-09-17T00:39:52.966989Z	      name,
2025-09-17T00:39:52.967124Z	      "slug": slug.current,
2025-09-17T00:39:52.967239Z	      logo
2025-09-17T00:39:52.96738Z	    },
2025-09-17T00:39:52.967482Z	    targetMarket,
2025-09-17T00:39:52.967578Z	    complexity,
2025-09-17T00:39:52.967674Z	    publishedAt,
2025-09-17T00:39:52.967783Z	    isPublished,
2025-09-17T00:39:52.967898Z	    isFeatured,
2025-09-17T00:39:52.968017Z	    viewCount,
2025-09-17T00:39:52.968143Z	    _createdAt,
2025-09-17T00:39:52.968244Z	    _updatedAt
2025-09-17T00:39:52.968372Z	  
2025-09-17T00:39:52.968478Z	      },
2025-09-17T00:39:52.968578Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-17T00:39:52.968695Z	    }
2025-09-17T00:39:52.968806Z	  
2025-09-17T00:39:52.968915Z	Query parameters: {
2025-09-17T00:39:52.969016Z	  limit: 4,
2025-09-17T00:39:52.969117Z	  offset: 0,
2025-09-17T00:39:52.969222Z	  targetMarket: undefined,
2025-09-17T00:39:52.969348Z	  brand: 'cree',
2025-09-17T00:39:52.969451Z	  featured: undefined
2025-09-17T00:39:52.969541Z	}
2025-09-17T00:39:52.969639Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-17T00:39:52.969743Z	Fetching products with query: 
2025-09-17T00:39:52.969844Z	    {
2025-09-17T00:39:52.969939Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:52.97006Z	        
2025-09-17T00:39:52.970163Z	    _id,
2025-09-17T00:39:52.970279Z	    _type,
2025-09-17T00:39:52.970385Z	    partNumber,
2025-09-17T00:39:52.970479Z	    "slug": slug.current,
2025-09-17T00:39:52.970584Z	    title,
2025-09-17T00:39:52.97068Z	    shortDescription,
2025-09-17T00:39:52.970767Z	    image,
2025-09-17T00:39:52.970853Z	    brand->{
2025-09-17T00:39:52.97094Z	      name,
2025-09-17T00:39:52.971056Z	      "slug": slug.current,
2025-09-17T00:39:52.971158Z	      logo
2025-09-17T00:39:52.971258Z	    },
2025-09-17T00:39:52.971381Z	    category->{
2025-09-17T00:39:52.971472Z	      name,
2025-09-17T00:39:52.971556Z	      "slug": slug.current
2025-09-17T00:39:52.971659Z	    },
2025-09-17T00:39:52.971778Z	    pricing{
2025-09-17T00:39:52.971937Z	      currency,
2025-09-17T00:39:52.97207Z	      tiers[]{
2025-09-17T00:39:52.972173Z	        quantity,
2025-09-17T00:39:52.972283Z	        price,
2025-09-17T00:39:52.972385Z	        unit
2025-09-17T00:39:52.972488Z	      },
2025-09-17T00:39:52.972618Z	      moq,
2025-09-17T00:39:52.972733Z	      leadTime,
2025-09-17T00:39:52.972962Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:52.973165Z	      "price": tiers[0].price,
2025-09-17T00:39:52.973372Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:52.973528Z	    },
2025-09-17T00:39:52.973769Z	    inventory{
2025-09-17T00:39:52.973911Z	      quantity,
2025-09-17T00:39:52.974047Z	      status,
2025-09-17T00:39:52.974193Z	      warehouse,
2025-09-17T00:39:52.974385Z	      lastUpdated,
2025-09-17T00:39:52.974535Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:52.974691Z	      "inStock": status == "in_stock",
2025-09-17T00:39:52.974829Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:52.974972Z	    },
2025-09-17T00:39:52.975129Z	    isActive,
2025-09-17T00:39:52.975289Z	    isFeatured,
2025-09-17T00:39:52.975441Z	    isNew,
2025-09-17T00:39:52.975557Z	    _createdAt,
2025-09-17T00:39:52.975694Z	    _updatedAt
2025-09-17T00:39:52.975859Z	  
2025-09-17T00:39:52.975977Z	      },
2025-09-17T00:39:52.976073Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-17T00:39:52.976182Z	    }
2025-09-17T00:39:52.976302Z	  
2025-09-17T00:39:52.976403Z	Query parameters: {
2025-09-17T00:39:52.976505Z	  limit: 8,
2025-09-17T00:39:52.976603Z	  offset: 0,
2025-09-17T00:39:52.976702Z	  category: undefined,
2025-09-17T00:39:52.976802Z	  brand: 'cree',
2025-09-17T00:39:52.976891Z	  featured: undefined
2025-09-17T00:39:52.976993Z	}
2025-09-17T00:39:52.977097Z	Fetching solutions with query: 
2025-09-17T00:39:52.977199Z	    {
2025-09-17T00:39:52.977321Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:52.977429Z	        
2025-09-17T00:39:52.97755Z	    _id,
2025-09-17T00:39:52.97765Z	    title,
2025-09-17T00:39:52.977767Z	    "slug": slug.current,
2025-09-17T00:39:52.977866Z	    summary,
2025-09-17T00:39:52.977994Z	    description,
2025-09-17T00:39:52.978172Z	    coverImage,
2025-09-17T00:39:52.978373Z	    primaryBrand->{
2025-09-17T00:39:52.978515Z	      _id,
2025-09-17T00:39:52.978617Z	      name,
2025-09-17T00:39:52.978729Z	      "slug": slug.current,
2025-09-17T00:39:52.978838Z	      logo
2025-09-17T00:39:52.978944Z	    },
2025-09-17T00:39:52.979052Z	    relatedBrands[]->{
2025-09-17T00:39:52.979148Z	      _id,
2025-09-17T00:39:52.979248Z	      name,
2025-09-17T00:39:52.979364Z	      "slug": slug.current,
2025-09-17T00:39:52.979466Z	      logo
2025-09-17T00:39:52.97956Z	    },
2025-09-17T00:39:52.979658Z	    targetMarket,
2025-09-17T00:39:52.979769Z	    complexity,
2025-09-17T00:39:52.979868Z	    publishedAt,
2025-09-17T00:39:52.979964Z	    isPublished,
2025-09-17T00:39:52.980057Z	    isFeatured,
2025-09-17T00:39:52.980154Z	    viewCount,
2025-09-17T00:39:52.980246Z	    _createdAt,
2025-09-17T00:39:52.980366Z	    _updatedAt
2025-09-17T00:39:52.98046Z	  
2025-09-17T00:39:52.98055Z	      },
2025-09-17T00:39:52.980779Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-17T00:39:52.980884Z	    }
2025-09-17T00:39:52.980977Z	  
2025-09-17T00:39:52.981064Z	Query parameters: {
2025-09-17T00:39:52.981167Z	  limit: 4,
2025-09-17T00:39:52.981262Z	  offset: 0,
2025-09-17T00:39:52.981375Z	  targetMarket: undefined,
2025-09-17T00:39:52.981475Z	  brand: 'cree',
2025-09-17T00:39:52.981567Z	  featured: undefined
2025-09-17T00:39:52.981657Z	}
2025-09-17T00:39:52.981751Z	Fetching products with query: 
2025-09-17T00:39:52.981858Z	    {
2025-09-17T00:39:52.981952Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:52.982054Z	        
2025-09-17T00:39:52.982339Z	    _id,
2025-09-17T00:39:52.982434Z	    _type,
2025-09-17T00:39:52.982529Z	    partNumber,
2025-09-17T00:39:52.982632Z	    "slug": slug.current,
2025-09-17T00:39:52.982733Z	    title,
2025-09-17T00:39:52.98282Z	    shortDescription,
2025-09-17T00:39:52.982911Z	    image,
2025-09-17T00:39:52.983003Z	    brand->{
2025-09-17T00:39:52.983092Z	      name,
2025-09-17T00:39:52.983182Z	      "slug": slug.current,
2025-09-17T00:39:52.987382Z	      logo
2025-09-17T00:39:52.987542Z	    },
2025-09-17T00:39:52.987654Z	    category->{
2025-09-17T00:39:52.987771Z	      name,
2025-09-17T00:39:52.987867Z	      "slug": slug.current
2025-09-17T00:39:52.987953Z	    },
2025-09-17T00:39:52.988042Z	    pricing{
2025-09-17T00:39:52.988129Z	      currency,
2025-09-17T00:39:52.988218Z	      tiers[]{
2025-09-17T00:39:52.988329Z	        quantity,
2025-09-17T00:39:52.98843Z	        price,
2025-09-17T00:39:52.988522Z	        unit
2025-09-17T00:39:52.988617Z	      },
2025-09-17T00:39:52.98871Z	      moq,
2025-09-17T00:39:52.988816Z	      leadTime,
2025-09-17T00:39:52.988921Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:52.989011Z	      "price": tiers[0].price,
2025-09-17T00:39:52.989102Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:52.989213Z	    },
2025-09-17T00:39:52.989325Z	    inventory{
2025-09-17T00:39:52.989417Z	      quantity,
2025-09-17T00:39:52.989505Z	      status,
2025-09-17T00:39:52.989595Z	      warehouse,
2025-09-17T00:39:52.989695Z	      lastUpdated,
2025-09-17T00:39:52.989818Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:52.989919Z	      "inStock": status == "in_stock",
2025-09-17T00:39:52.990042Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:52.990149Z	    },
2025-09-17T00:39:52.990243Z	    isActive,
2025-09-17T00:39:52.990362Z	    isFeatured,
2025-09-17T00:39:52.990462Z	    isNew,
2025-09-17T00:39:52.990559Z	    _createdAt,
2025-09-17T00:39:52.990653Z	    _updatedAt
2025-09-17T00:39:52.990757Z	  
2025-09-17T00:39:52.990852Z	      },
2025-09-17T00:39:52.990961Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-17T00:39:52.991066Z	    }
2025-09-17T00:39:52.99116Z	  
2025-09-17T00:39:52.991253Z	Query parameters: {
2025-09-17T00:39:52.991367Z	  limit: 8,
2025-09-17T00:39:52.991462Z	  offset: 0,
2025-09-17T00:39:52.991555Z	  category: undefined,
2025-09-17T00:39:52.991651Z	  brand: 'Electronicon',
2025-09-17T00:39:52.991765Z	  featured: undefined
2025-09-17T00:39:52.991869Z	}
2025-09-17T00:39:52.991954Z	Fetching solutions with query: 
2025-09-17T00:39:52.992038Z	    {
2025-09-17T00:39:52.992127Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:52.992231Z	        
2025-09-17T00:39:52.992342Z	    _id,
2025-09-17T00:39:52.992431Z	    title,
2025-09-17T00:39:52.992547Z	    "slug": slug.current,
2025-09-17T00:39:52.992649Z	    summary,
2025-09-17T00:39:52.992754Z	    description,
2025-09-17T00:39:52.992849Z	    coverImage,
2025-09-17T00:39:52.992944Z	    primaryBrand->{
2025-09-17T00:39:52.99304Z	      _id,
2025-09-17T00:39:52.993134Z	      name,
2025-09-17T00:39:52.993286Z	      "slug": slug.current,
2025-09-17T00:39:52.993393Z	      logo
2025-09-17T00:39:52.993493Z	    },
2025-09-17T00:39:52.993587Z	    relatedBrands[]->{
2025-09-17T00:39:52.993681Z	      _id,
2025-09-17T00:39:52.993786Z	      name,
2025-09-17T00:39:52.993875Z	      "slug": slug.current,
2025-09-17T00:39:52.993988Z	      logo
2025-09-17T00:39:52.994089Z	    },
2025-09-17T00:39:52.994184Z	    targetMarket,
2025-09-17T00:39:52.994289Z	    complexity,
2025-09-17T00:39:52.994382Z	    publishedAt,
2025-09-17T00:39:52.99447Z	    isPublished,
2025-09-17T00:39:52.995022Z	    isFeatured,
2025-09-17T00:39:52.995168Z	    viewCount,
2025-09-17T00:39:52.995308Z	    _createdAt,
2025-09-17T00:39:52.995439Z	    _updatedAt
2025-09-17T00:39:52.995535Z	  
2025-09-17T00:39:52.995622Z	      },
2025-09-17T00:39:52.995706Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-17T00:39:52.995813Z	    }
2025-09-17T00:39:52.995908Z	  
2025-09-17T00:39:52.996004Z	Query parameters: {
2025-09-17T00:39:52.996108Z	  limit: 4,
2025-09-17T00:39:52.996199Z	  offset: 0,
2025-09-17T00:39:52.996318Z	  targetMarket: undefined,
2025-09-17T00:39:52.99643Z	  brand: 'Electronicon',
2025-09-17T00:39:52.996521Z	  featured: undefined
2025-09-17T00:39:52.996608Z	}
2025-09-17T00:39:52.996697Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-17T00:39:52.996809Z	Fetching products with query: 
2025-09-17T00:39:52.996925Z	    {
2025-09-17T00:39:52.997039Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:52.99713Z	        
2025-09-17T00:39:52.997217Z	    _id,
2025-09-17T00:39:52.997355Z	    _type,
2025-09-17T00:39:52.99753Z	    partNumber,
2025-09-17T00:39:52.997657Z	    "slug": slug.current,
2025-09-17T00:39:52.997777Z	    title,
2025-09-17T00:39:52.997886Z	    shortDescription,
2025-09-17T00:39:52.998009Z	    image,
2025-09-17T00:39:52.998119Z	    brand->{
2025-09-17T00:39:52.998227Z	      name,
2025-09-17T00:39:52.99835Z	      "slug": slug.current,
2025-09-17T00:39:52.998459Z	      logo
2025-09-17T00:39:52.998564Z	    },
2025-09-17T00:39:52.998672Z	    category->{
2025-09-17T00:39:52.998786Z	      name,
2025-09-17T00:39:52.998897Z	      "slug": slug.current
2025-09-17T00:39:52.999008Z	    },
2025-09-17T00:39:52.999112Z	    pricing{
2025-09-17T00:39:52.99921Z	      currency,
2025-09-17T00:39:52.999358Z	      tiers[]{
2025-09-17T00:39:52.999463Z	        quantity,
2025-09-17T00:39:52.999571Z	        price,
2025-09-17T00:39:52.999671Z	        unit
2025-09-17T00:39:52.999775Z	      },
2025-09-17T00:39:52.999871Z	      moq,
2025-09-17T00:39:52.999957Z	      leadTime,
2025-09-17T00:39:53.00007Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:53.000185Z	      "price": tiers[0].price,
2025-09-17T00:39:53.000307Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:53.00041Z	    },
2025-09-17T00:39:53.000507Z	    inventory{
2025-09-17T00:39:53.000601Z	      quantity,
2025-09-17T00:39:53.000695Z	      status,
2025-09-17T00:39:53.000797Z	      warehouse,
2025-09-17T00:39:53.000895Z	      lastUpdated,
2025-09-17T00:39:53.001012Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:53.001112Z	      "inStock": status == "in_stock",
2025-09-17T00:39:53.001219Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:53.00133Z	    },
2025-09-17T00:39:53.001421Z	    isActive,
2025-09-17T00:39:53.001501Z	    isFeatured,
2025-09-17T00:39:53.001581Z	    isNew,
2025-09-17T00:39:53.001672Z	    _createdAt,
2025-09-17T00:39:53.00176Z	    _updatedAt
2025-09-17T00:39:53.001839Z	  
2025-09-17T00:39:53.001922Z	      },
2025-09-17T00:39:53.002016Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-17T00:39:53.002105Z	    }
2025-09-17T00:39:53.002192Z	  
2025-09-17T00:39:53.002293Z	Query parameters: {
2025-09-17T00:39:53.002382Z	  limit: 8,
2025-09-17T00:39:53.002479Z	  offset: 0,
2025-09-17T00:39:53.002566Z	  category: undefined,
2025-09-17T00:39:53.002652Z	  brand: 'littelfuse',
2025-09-17T00:39:53.002737Z	  featured: undefined
2025-09-17T00:39:53.002823Z	}
2025-09-17T00:39:53.002915Z	Fetching solutions with query: 
2025-09-17T00:39:53.00302Z	    {
2025-09-17T00:39:53.003317Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:53.003491Z	        
2025-09-17T00:39:53.003615Z	    _id,
2025-09-17T00:39:53.003958Z	    title,
2025-09-17T00:39:53.004174Z	    "slug": slug.current,
2025-09-17T00:39:53.00443Z	    summary,
2025-09-17T00:39:53.004664Z	    description,
2025-09-17T00:39:53.004895Z	    coverImage,
2025-09-17T00:39:53.005014Z	    primaryBrand->{
2025-09-17T00:39:53.005234Z	      _id,
2025-09-17T00:39:53.005369Z	      name,
2025-09-17T00:39:53.005475Z	      "slug": slug.current,
2025-09-17T00:39:53.00558Z	      logo
2025-09-17T00:39:53.005679Z	    },
2025-09-17T00:39:53.005807Z	    relatedBrands[]->{
2025-09-17T00:39:53.005893Z	      _id,
2025-09-17T00:39:53.006125Z	      name,
2025-09-17T00:39:53.006251Z	      "slug": slug.current,
2025-09-17T00:39:53.006371Z	      logo
2025-09-17T00:39:53.006461Z	    },
2025-09-17T00:39:53.006545Z	    targetMarket,
2025-09-17T00:39:53.00663Z	    complexity,
2025-09-17T00:39:53.006709Z	    publishedAt,
2025-09-17T00:39:53.006807Z	    isPublished,
2025-09-17T00:39:53.00692Z	    isFeatured,
2025-09-17T00:39:53.007031Z	    viewCount,
2025-09-17T00:39:53.007148Z	    _createdAt,
2025-09-17T00:39:53.007256Z	    _updatedAt
2025-09-17T00:39:53.007377Z	  
2025-09-17T00:39:53.007475Z	      },
2025-09-17T00:39:53.007567Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-17T00:39:53.007659Z	    }
2025-09-17T00:39:53.00776Z	  
2025-09-17T00:39:53.00786Z	Query parameters: {
2025-09-17T00:39:53.007954Z	  limit: 4,
2025-09-17T00:39:53.008063Z	  offset: 0,
2025-09-17T00:39:53.008157Z	  targetMarket: undefined,
2025-09-17T00:39:53.008248Z	  brand: 'littelfuse',
2025-09-17T00:39:53.008354Z	  featured: undefined
2025-09-17T00:39:53.008442Z	}
2025-09-17T00:39:53.008526Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-17T00:39:53.008612Z	Fetching products with query: 
2025-09-17T00:39:53.008695Z	    {
2025-09-17T00:39:53.008793Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:53.008883Z	        
2025-09-17T00:39:53.008976Z	    _id,
2025-09-17T00:39:53.009065Z	    _type,
2025-09-17T00:39:53.00916Z	    partNumber,
2025-09-17T00:39:53.009248Z	    "slug": slug.current,
2025-09-17T00:39:53.009367Z	    title,
2025-09-17T00:39:53.009464Z	    shortDescription,
2025-09-17T00:39:53.009556Z	    image,
2025-09-17T00:39:53.009644Z	    brand->{
2025-09-17T00:39:53.009966Z	      name,
2025-09-17T00:39:53.010094Z	      "slug": slug.current,
2025-09-17T00:39:53.010189Z	      logo
2025-09-17T00:39:53.010303Z	    },
2025-09-17T00:39:53.010402Z	    category->{
2025-09-17T00:39:53.010493Z	      name,
2025-09-17T00:39:53.010582Z	      "slug": slug.current
2025-09-17T00:39:53.010672Z	    },
2025-09-17T00:39:53.010774Z	    pricing{
2025-09-17T00:39:53.010866Z	      currency,
2025-09-17T00:39:53.010998Z	      tiers[]{
2025-09-17T00:39:53.011205Z	        quantity,
2025-09-17T00:39:53.011438Z	        price,
2025-09-17T00:39:53.011722Z	        unit
2025-09-17T00:39:53.011844Z	      },
2025-09-17T00:39:53.011941Z	      moq,
2025-09-17T00:39:53.012034Z	      leadTime,
2025-09-17T00:39:53.012142Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:53.012412Z	      "price": tiers[0].price,
2025-09-17T00:39:53.012708Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:53.012947Z	    },
2025-09-17T00:39:53.013122Z	    inventory{
2025-09-17T00:39:53.013223Z	      quantity,
2025-09-17T00:39:53.013339Z	      status,
2025-09-17T00:39:53.013506Z	      warehouse,
2025-09-17T00:39:53.013738Z	      lastUpdated,
2025-09-17T00:39:53.014161Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:53.014397Z	      "inStock": status == "in_stock",
2025-09-17T00:39:53.014611Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:53.014847Z	    },
2025-09-17T00:39:53.015063Z	    isActive,
2025-09-17T00:39:53.015403Z	    isFeatured,
2025-09-17T00:39:53.01564Z	    isNew,
2025-09-17T00:39:53.015822Z	    _createdAt,
2025-09-17T00:39:53.015975Z	    _updatedAt
2025-09-17T00:39:53.016134Z	  
2025-09-17T00:39:53.016289Z	      },
2025-09-17T00:39:53.016439Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-17T00:39:53.016615Z	    }
2025-09-17T00:39:53.017312Z	  
2025-09-17T00:39:53.017504Z	Query parameters: {
2025-09-17T00:39:53.01804Z	  limit: 8,
2025-09-17T00:39:53.018206Z	  offset: 0,
2025-09-17T00:39:53.018363Z	  category: undefined,
2025-09-17T00:39:53.018497Z	  brand: 'littelfuse',
2025-09-17T00:39:53.018658Z	  featured: undefined
2025-09-17T00:39:53.018823Z	}
2025-09-17T00:39:53.018963Z	Fetching solutions with query: 
2025-09-17T00:39:53.019114Z	    {
2025-09-17T00:39:53.019258Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:53.019424Z	        
2025-09-17T00:39:53.021074Z	    _id,
2025-09-17T00:39:53.021245Z	    title,
2025-09-17T00:39:53.021439Z	    "slug": slug.current,
2025-09-17T00:39:53.021558Z	    summary,
2025-09-17T00:39:53.021753Z	    description,
2025-09-17T00:39:53.021904Z	    coverImage,
2025-09-17T00:39:53.022081Z	    primaryBrand->{
2025-09-17T00:39:53.022291Z	      _id,
2025-09-17T00:39:53.022418Z	      name,
2025-09-17T00:39:53.022631Z	      "slug": slug.current,
2025-09-17T00:39:53.02293Z	      logo
2025-09-17T00:39:53.023093Z	    },
2025-09-17T00:39:53.023307Z	    relatedBrands[]->{
2025-09-17T00:39:53.023448Z	      _id,
2025-09-17T00:39:53.023616Z	      name,
2025-09-17T00:39:53.023793Z	      "slug": slug.current,
2025-09-17T00:39:53.02463Z	      logo
2025-09-17T00:39:53.024922Z	    },
2025-09-17T00:39:53.025132Z	    targetMarket,
2025-09-17T00:39:53.025281Z	    complexity,
2025-09-17T00:39:53.025485Z	    publishedAt,
2025-09-17T00:39:53.025649Z	    isPublished,
2025-09-17T00:39:53.025887Z	    isFeatured,
2025-09-17T00:39:53.026065Z	    viewCount,
2025-09-17T00:39:53.026205Z	    _createdAt,
2025-09-17T00:39:53.026348Z	    _updatedAt
2025-09-17T00:39:53.0267Z	  
2025-09-17T00:39:53.026883Z	      },
2025-09-17T00:39:53.02702Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-17T00:39:53.027141Z	    }
2025-09-17T00:39:53.027245Z	  
2025-09-17T00:39:53.027379Z	Query parameters: {
2025-09-17T00:39:53.027501Z	  limit: 4,
2025-09-17T00:39:53.027615Z	  offset: 0,
2025-09-17T00:39:53.027743Z	  targetMarket: undefined,
2025-09-17T00:39:53.027865Z	  brand: 'littelfuse',
2025-09-17T00:39:53.027987Z	  featured: undefined
2025-09-17T00:39:53.028102Z	}
2025-09-17T00:39:53.028209Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-17T00:39:53.028361Z	Fetching products with query: 
2025-09-17T00:39:53.028484Z	    {
2025-09-17T00:39:53.028594Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:53.028728Z	        
2025-09-17T00:39:53.028832Z	    _id,
2025-09-17T00:39:53.028937Z	    _type,
2025-09-17T00:39:53.029051Z	    partNumber,
2025-09-17T00:39:53.029152Z	    "slug": slug.current,
2025-09-17T00:39:53.029254Z	    title,
2025-09-17T00:39:53.029397Z	    shortDescription,
2025-09-17T00:39:53.029507Z	    image,
2025-09-17T00:39:53.029733Z	    brand->{
2025-09-17T00:39:53.029874Z	      name,
2025-09-17T00:39:53.030062Z	      "slug": slug.current,
2025-09-17T00:39:53.030236Z	      logo
2025-09-17T00:39:53.03038Z	    },
2025-09-17T00:39:53.030532Z	    category->{
2025-09-17T00:39:53.030695Z	      name,
2025-09-17T00:39:53.030843Z	      "slug": slug.current
2025-09-17T00:39:53.03112Z	    },
2025-09-17T00:39:53.031286Z	    pricing{
2025-09-17T00:39:53.031643Z	      currency,
2025-09-17T00:39:53.031773Z	      tiers[]{
2025-09-17T00:39:53.031894Z	        quantity,
2025-09-17T00:39:53.032005Z	        price,
2025-09-17T00:39:53.032112Z	        unit
2025-09-17T00:39:53.032433Z	      },
2025-09-17T00:39:53.032585Z	      moq,
2025-09-17T00:39:53.032695Z	      leadTime,
2025-09-17T00:39:53.032794Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:53.032903Z	      "price": tiers[0].price,
2025-09-17T00:39:53.033028Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:53.033131Z	    },
2025-09-17T00:39:53.03333Z	    inventory{
2025-09-17T00:39:53.033454Z	      quantity,
2025-09-17T00:39:53.033556Z	      status,
2025-09-17T00:39:53.033659Z	      warehouse,
2025-09-17T00:39:53.033911Z	      lastUpdated,
2025-09-17T00:39:53.034111Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:53.034321Z	      "inStock": status == "in_stock",
2025-09-17T00:39:53.034483Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:53.034598Z	    },
2025-09-17T00:39:53.034711Z	    isActive,
2025-09-17T00:39:53.034827Z	    isFeatured,
2025-09-17T00:39:53.034931Z	    isNew,
2025-09-17T00:39:53.035057Z	    _createdAt,
2025-09-17T00:39:53.035169Z	    _updatedAt
2025-09-17T00:39:53.035361Z	  
2025-09-17T00:39:53.035527Z	      },
2025-09-17T00:39:53.035636Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-17T00:39:53.035744Z	    }
2025-09-17T00:39:53.03584Z	  
2025-09-17T00:39:53.035948Z	Query parameters: {
2025-09-17T00:39:53.036043Z	  limit: 8,
2025-09-17T00:39:53.036138Z	  offset: 0,
2025-09-17T00:39:53.036229Z	  category: undefined,
2025-09-17T00:39:53.03634Z	  brand: 'ixys',
2025-09-17T00:39:53.036435Z	  featured: undefined
2025-09-17T00:39:53.036544Z	}
2025-09-17T00:39:53.03665Z	Fetching solutions with query: 
2025-09-17T00:39:53.036786Z	    {
2025-09-17T00:39:53.037005Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:53.03715Z	        
2025-09-17T00:39:53.037264Z	    _id,
2025-09-17T00:39:53.037416Z	    title,
2025-09-17T00:39:53.037531Z	    "slug": slug.current,
2025-09-17T00:39:53.03764Z	    summary,
2025-09-17T00:39:53.037752Z	    description,
2025-09-17T00:39:53.037861Z	    coverImage,
2025-09-17T00:39:53.037988Z	    primaryBrand->{
2025-09-17T00:39:53.038091Z	      _id,
2025-09-17T00:39:53.038192Z	      name,
2025-09-17T00:39:53.038316Z	      "slug": slug.current,
2025-09-17T00:39:53.038421Z	      logo
2025-09-17T00:39:53.038518Z	    },
2025-09-17T00:39:53.03862Z	    relatedBrands[]->{
2025-09-17T00:39:53.038721Z	      _id,
2025-09-17T00:39:53.038823Z	      name,
2025-09-17T00:39:53.038943Z	      "slug": slug.current,
2025-09-17T00:39:53.039044Z	      logo
2025-09-17T00:39:53.039143Z	    },
2025-09-17T00:39:53.039242Z	    targetMarket,
2025-09-17T00:39:53.039364Z	    complexity,
2025-09-17T00:39:53.039512Z	    publishedAt,
2025-09-17T00:39:53.039627Z	    isPublished,
2025-09-17T00:39:53.039743Z	    isFeatured,
2025-09-17T00:39:53.039851Z	    viewCount,
2025-09-17T00:39:53.039987Z	    _createdAt,
2025-09-17T00:39:53.040114Z	    _updatedAt
2025-09-17T00:39:53.040224Z	  
2025-09-17T00:39:53.040346Z	      },
2025-09-17T00:39:53.040456Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-17T00:39:53.04056Z	    }
2025-09-17T00:39:53.040666Z	  
2025-09-17T00:39:53.04077Z	Query parameters: {
2025-09-17T00:39:53.04087Z	  limit: 4,
2025-09-17T00:39:53.04098Z	  offset: 0,
2025-09-17T00:39:53.041081Z	  targetMarket: undefined,
2025-09-17T00:39:53.041182Z	  brand: 'ixys',
2025-09-17T00:39:53.041306Z	  featured: undefined
2025-09-17T00:39:53.041421Z	}
2025-09-17T00:39:53.04153Z	✅ [getBrandData] Found brand: CREE
2025-09-17T00:39:53.041622Z	✅ [getBrandData] Found brand: CREE
2025-09-17T00:39:53.041719Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-17T00:39:53.041822Z	Fetching products with query: 
2025-09-17T00:39:53.041948Z	    {
2025-09-17T00:39:53.04205Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:53.042148Z	        
2025-09-17T00:39:53.042246Z	    _id,
2025-09-17T00:39:53.042396Z	    _type,
2025-09-17T00:39:53.042511Z	    partNumber,
2025-09-17T00:39:53.042615Z	    "slug": slug.current,
2025-09-17T00:39:53.042711Z	    title,
2025-09-17T00:39:53.042806Z	    shortDescription,
2025-09-17T00:39:53.042978Z	    image,
2025-09-17T00:39:53.043089Z	    brand->{
2025-09-17T00:39:53.043186Z	      name,
2025-09-17T00:39:53.043305Z	      "slug": slug.current,
2025-09-17T00:39:53.043476Z	      logo
2025-09-17T00:39:53.043587Z	    },
2025-09-17T00:39:53.043688Z	    category->{
2025-09-17T00:39:53.043791Z	      name,
2025-09-17T00:39:53.043894Z	      "slug": slug.current
2025-09-17T00:39:53.044017Z	    },
2025-09-17T00:39:53.044128Z	    pricing{
2025-09-17T00:39:53.044234Z	      currency,
2025-09-17T00:39:53.044352Z	      tiers[]{
2025-09-17T00:39:53.044526Z	        quantity,
2025-09-17T00:39:53.044664Z	        price,
2025-09-17T00:39:53.044769Z	        unit
2025-09-17T00:39:53.044861Z	      },
2025-09-17T00:39:53.044972Z	      moq,
2025-09-17T00:39:53.045099Z	      leadTime,
2025-09-17T00:39:53.045206Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:53.045368Z	      "price": tiers[0].price,
2025-09-17T00:39:53.04557Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:53.045765Z	    },
2025-09-17T00:39:53.045931Z	    inventory{
2025-09-17T00:39:53.08744Z	      quantity,
2025-09-17T00:39:53.087766Z	      status,
2025-09-17T00:39:53.087961Z	      warehouse,
2025-09-17T00:39:53.088143Z	      lastUpdated,
2025-09-17T00:39:53.088328Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:53.088494Z	      "inStock": status == "in_stock",
2025-09-17T00:39:53.088633Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:53.088784Z	    },
2025-09-17T00:39:53.088897Z	    isActive,
2025-09-17T00:39:53.089083Z	    isFeatured,
2025-09-17T00:39:53.08922Z	    isNew,
2025-09-17T00:39:53.089366Z	    _createdAt,
2025-09-17T00:39:53.089565Z	    _updatedAt
2025-09-17T00:39:53.089811Z	  
2025-09-17T00:39:53.089908Z	      },
2025-09-17T00:39:53.090007Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-17T00:39:53.090117Z	    }
2025-09-17T00:39:53.090282Z	  
2025-09-17T00:39:53.090409Z	Query parameters: {
2025-09-17T00:39:53.090572Z	  limit: 8,
2025-09-17T00:39:53.09073Z	  offset: 0,
2025-09-17T00:39:53.090847Z	  category: undefined,
2025-09-17T00:39:53.090951Z	  brand: 'ixys',
2025-09-17T00:39:53.091062Z	  featured: undefined
2025-09-17T00:39:53.091166Z	}
2025-09-17T00:39:53.091281Z	Fetching solutions with query: 
2025-09-17T00:39:53.091398Z	    {
2025-09-17T00:39:53.091503Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:53.091604Z	        
2025-09-17T00:39:53.091729Z	    _id,
2025-09-17T00:39:53.091937Z	    title,
2025-09-17T00:39:53.092184Z	    "slug": slug.current,
2025-09-17T00:39:53.092669Z	    summary,
2025-09-17T00:39:53.092859Z	    description,
2025-09-17T00:39:53.092997Z	    coverImage,
2025-09-17T00:39:53.093122Z	    primaryBrand->{
2025-09-17T00:39:53.093235Z	      _id,
2025-09-17T00:39:53.093379Z	      name,
2025-09-17T00:39:53.093496Z	      "slug": slug.current,
2025-09-17T00:39:53.093639Z	      logo
2025-09-17T00:39:53.093813Z	    },
2025-09-17T00:39:53.093939Z	    relatedBrands[]->{
2025-09-17T00:39:53.094144Z	      _id,
2025-09-17T00:39:53.094296Z	      name,
2025-09-17T00:39:53.094415Z	      "slug": slug.current,
2025-09-17T00:39:53.094521Z	      logo
2025-09-17T00:39:53.094623Z	    },
2025-09-17T00:39:53.094719Z	    targetMarket,
2025-09-17T00:39:53.094815Z	    complexity,
2025-09-17T00:39:53.094921Z	    publishedAt,
2025-09-17T00:39:53.095028Z	    isPublished,
2025-09-17T00:39:53.095128Z	    isFeatured,
2025-09-17T00:39:53.095232Z	    viewCount,
2025-09-17T00:39:53.095382Z	    _createdAt,
2025-09-17T00:39:53.095609Z	    _updatedAt
2025-09-17T00:39:53.095751Z	  
2025-09-17T00:39:53.095865Z	      },
2025-09-17T00:39:53.096125Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-17T00:39:53.096732Z	    }
2025-09-17T00:39:53.09688Z	  
2025-09-17T00:39:53.097008Z	Query parameters: {
2025-09-17T00:39:53.09711Z	  limit: 4,
2025-09-17T00:39:53.097216Z	  offset: 0,
2025-09-17T00:39:53.09736Z	  targetMarket: undefined,
2025-09-17T00:39:53.097482Z	  brand: 'ixys',
2025-09-17T00:39:53.097769Z	  featured: undefined
2025-09-17T00:39:53.097899Z	}
2025-09-17T00:39:53.098021Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-17T00:39:53.098136Z	Fetching products with query: 
2025-09-17T00:39:53.098244Z	    {
2025-09-17T00:39:53.098374Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:53.098485Z	        
2025-09-17T00:39:53.098589Z	    _id,
2025-09-17T00:39:53.098689Z	    _type,
2025-09-17T00:39:53.098811Z	    partNumber,
2025-09-17T00:39:53.098916Z	    "slug": slug.current,
2025-09-17T00:39:53.099017Z	    title,
2025-09-17T00:39:53.099117Z	    shortDescription,
2025-09-17T00:39:53.099241Z	    image,
2025-09-17T00:39:53.099367Z	    brand->{
2025-09-17T00:39:53.099474Z	      name,
2025-09-17T00:39:53.099582Z	      "slug": slug.current,
2025-09-17T00:39:53.099683Z	      logo
2025-09-17T00:39:53.099796Z	    },
2025-09-17T00:39:53.0999Z	    category->{
2025-09-17T00:39:53.100003Z	      name,
2025-09-17T00:39:53.100112Z	      "slug": slug.current
2025-09-17T00:39:53.100228Z	    },
2025-09-17T00:39:53.100359Z	    pricing{
2025-09-17T00:39:53.100502Z	      currency,
2025-09-17T00:39:53.100631Z	      tiers[]{
2025-09-17T00:39:53.100751Z	        quantity,
2025-09-17T00:39:53.100982Z	        price,
2025-09-17T00:39:53.101155Z	        unit
2025-09-17T00:39:53.101331Z	      },
2025-09-17T00:39:53.101455Z	      moq,
2025-09-17T00:39:53.101559Z	      leadTime,
2025-09-17T00:39:53.101659Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:53.101761Z	      "price": tiers[0].price,
2025-09-17T00:39:53.10187Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:53.10199Z	    },
2025-09-17T00:39:53.102094Z	    inventory{
2025-09-17T00:39:53.1022Z	      quantity,
2025-09-17T00:39:53.102352Z	      status,
2025-09-17T00:39:53.102562Z	      warehouse,
2025-09-17T00:39:53.10271Z	      lastUpdated,
2025-09-17T00:39:53.102825Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:53.102962Z	      "inStock": status == "in_stock",
2025-09-17T00:39:53.103073Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:53.103167Z	    },
2025-09-17T00:39:53.103298Z	    isActive,
2025-09-17T00:39:53.103406Z	    isFeatured,
2025-09-17T00:39:53.103509Z	    isNew,
2025-09-17T00:39:53.103607Z	    _createdAt,
2025-09-17T00:39:53.103703Z	    _updatedAt
2025-09-17T00:39:53.103794Z	  
2025-09-17T00:39:53.103887Z	      },
2025-09-17T00:39:53.104007Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-17T00:39:53.104114Z	    }
2025-09-17T00:39:53.104228Z	  
2025-09-17T00:39:53.104364Z	Query parameters: {
2025-09-17T00:39:53.104476Z	  limit: 8,
2025-09-17T00:39:53.10458Z	  offset: 0,
2025-09-17T00:39:53.104758Z	  category: undefined,
2025-09-17T00:39:53.104933Z	  brand: 'lem',
2025-09-17T00:39:53.105048Z	  featured: undefined
2025-09-17T00:39:53.105153Z	}
2025-09-17T00:39:53.105249Z	Fetching solutions with query: 
2025-09-17T00:39:53.105365Z	    {
2025-09-17T00:39:53.105458Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:53.105835Z	        
2025-09-17T00:39:53.10599Z	    _id,
2025-09-17T00:39:53.106101Z	    title,
2025-09-17T00:39:53.106205Z	    "slug": slug.current,
2025-09-17T00:39:53.106333Z	    summary,
2025-09-17T00:39:53.10644Z	    description,
2025-09-17T00:39:53.10654Z	    coverImage,
2025-09-17T00:39:53.106651Z	    primaryBrand->{
2025-09-17T00:39:53.106759Z	      _id,
2025-09-17T00:39:53.107774Z	      name,
2025-09-17T00:39:53.108149Z	      "slug": slug.current,
2025-09-17T00:39:53.108334Z	      logo
2025-09-17T00:39:53.108497Z	    },
2025-09-17T00:39:53.109507Z	    relatedBrands[]->{
2025-09-17T00:39:53.10986Z	      _id,
2025-09-17T00:39:53.110212Z	      name,
2025-09-17T00:39:53.110568Z	      "slug": slug.current,
2025-09-17T00:39:53.110896Z	      logo
2025-09-17T00:39:53.11137Z	    },
2025-09-17T00:39:53.111836Z	    targetMarket,
2025-09-17T00:39:53.112201Z	    complexity,
2025-09-17T00:39:53.112722Z	    publishedAt,
2025-09-17T00:39:53.113098Z	    isPublished,
2025-09-17T00:39:53.113247Z	    isFeatured,
2025-09-17T00:39:53.11382Z	    viewCount,
2025-09-17T00:39:53.113949Z	    _createdAt,
2025-09-17T00:39:53.114449Z	    _updatedAt
2025-09-17T00:39:53.114773Z	  
2025-09-17T00:39:53.115104Z	      },
2025-09-17T00:39:53.115425Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-17T00:39:53.115769Z	    }
2025-09-17T00:39:53.116078Z	  
2025-09-17T00:39:53.116402Z	Query parameters: {
2025-09-17T00:39:53.116519Z	  limit: 4,
2025-09-17T00:39:53.116866Z	  offset: 0,
2025-09-17T00:39:53.117233Z	  targetMarket: undefined,
2025-09-17T00:39:53.117579Z	  brand: 'lem',
2025-09-17T00:39:53.118025Z	  featured: undefined
2025-09-17T00:39:53.118339Z	}
2025-09-17T00:39:53.118658Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-17T00:39:53.118782Z	Fetching products with query: 
2025-09-17T00:39:53.118874Z	    {
2025-09-17T00:39:53.119239Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:53.119425Z	        
2025-09-17T00:39:53.119553Z	    _id,
2025-09-17T00:39:53.119662Z	    _type,
2025-09-17T00:39:53.119771Z	    partNumber,
2025-09-17T00:39:53.119911Z	    "slug": slug.current,
2025-09-17T00:39:53.120036Z	    title,
2025-09-17T00:39:53.120188Z	    shortDescription,
2025-09-17T00:39:53.120313Z	    image,
2025-09-17T00:39:53.12042Z	    brand->{
2025-09-17T00:39:53.120519Z	      name,
2025-09-17T00:39:53.120625Z	      "slug": slug.current,
2025-09-17T00:39:53.123245Z	      logo
2025-09-17T00:39:53.124375Z	    },
2025-09-17T00:39:53.124657Z	    category->{
2025-09-17T00:39:53.124791Z	      name,
2025-09-17T00:39:53.125435Z	      "slug": slug.current
2025-09-17T00:39:53.125554Z	    },
2025-09-17T00:39:53.125651Z	    pricing{
2025-09-17T00:39:53.125742Z	      currency,
2025-09-17T00:39:53.125828Z	      tiers[]{
2025-09-17T00:39:53.125912Z	        quantity,
2025-09-17T00:39:53.12601Z	        price,
2025-09-17T00:39:53.126103Z	        unit
2025-09-17T00:39:53.126197Z	      },
2025-09-17T00:39:53.126316Z	      moq,
2025-09-17T00:39:53.126415Z	      leadTime,
2025-09-17T00:39:53.126503Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:53.126611Z	      "price": tiers[0].price,
2025-09-17T00:39:53.126716Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:53.12685Z	    },
2025-09-17T00:39:53.126953Z	    inventory{
2025-09-17T00:39:53.127062Z	      quantity,
2025-09-17T00:39:53.12716Z	      status,
2025-09-17T00:39:53.127478Z	      warehouse,
2025-09-17T00:39:53.127618Z	      lastUpdated,
2025-09-17T00:39:53.127765Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:53.127881Z	      "inStock": status == "in_stock",
2025-09-17T00:39:53.127993Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:53.1281Z	    },
2025-09-17T00:39:53.128202Z	    isActive,
2025-09-17T00:39:53.128313Z	    isFeatured,
2025-09-17T00:39:53.128407Z	    isNew,
2025-09-17T00:39:53.128542Z	    _createdAt,
2025-09-17T00:39:53.128656Z	    _updatedAt
2025-09-17T00:39:53.128762Z	  
2025-09-17T00:39:53.128864Z	      },
2025-09-17T00:39:53.128961Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-17T00:39:53.129093Z	    }
2025-09-17T00:39:53.129199Z	  
2025-09-17T00:39:53.129333Z	Query parameters: {
2025-09-17T00:39:53.129762Z	  limit: 8,
2025-09-17T00:39:53.129915Z	  offset: 0,
2025-09-17T00:39:53.130373Z	  category: undefined,
2025-09-17T00:39:53.130648Z	  brand: 'lem',
2025-09-17T00:39:53.130908Z	  featured: undefined
2025-09-17T00:39:53.131063Z	}
2025-09-17T00:39:53.131189Z	Products fetch result: {
2025-09-17T00:39:53.131338Z	  totalProducts: 4,
2025-09-17T00:39:53.131461Z	  fetchedProducts: 4,
2025-09-17T00:39:53.131576Z	  firstProduct: {
2025-09-17T00:39:53.131695Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-17T00:39:53.131814Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-17T00:39:53.131929Z	    _type: 'product',
2025-09-17T00:39:53.132061Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-17T00:39:53.132174Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-17T00:39:53.132308Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:53.132428Z	    image: null,
2025-09-17T00:39:53.132561Z	    inventory: {
2025-09-17T00:39:53.132676Z	      inStock: true,
2025-09-17T00:39:53.132858Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-17T00:39:53.133002Z	      quantity: 0,
2025-09-17T00:39:53.133117Z	      status: 'in_stock',
2025-09-17T00:39:53.13324Z	      warehouse: null
2025-09-17T00:39:53.133376Z	    },
2025-09-17T00:39:53.133491Z	    isActive: true,
2025-09-17T00:39:53.133608Z	    isFeatured: false,
2025-09-17T00:39:53.133718Z	    isNew: false,
2025-09-17T00:39:53.133902Z	    partNumber: '11111',
2025-09-17T00:39:53.134048Z	    pricing: {
2025-09-17T00:39:53.134169Z	      currency: 'CNY',
2025-09-17T00:39:53.134292Z	      leadTime: null,
2025-09-17T00:39:53.134416Z	      moq: null,
2025-09-17T00:39:53.134525Z	      price: null,
2025-09-17T00:39:53.13463Z	      tiers: null
2025-09-17T00:39:53.134758Z	    },
2025-09-17T00:39:53.134876Z	    shortDescription: '11111',
2025-09-17T00:39:53.135016Z	    slug: 'sic mosfet',
2025-09-17T00:39:53.135182Z	    title: '111111'
2025-09-17T00:39:53.135319Z	  }
2025-09-17T00:39:53.13548Z	}
2025-09-17T00:39:53.135628Z	Products fetch result: {
2025-09-17T00:39:53.135756Z	  totalProducts: 4,
2025-09-17T00:39:53.135865Z	  fetchedProducts: 4,
2025-09-17T00:39:53.135971Z	  firstProduct: {
2025-09-17T00:39:53.136094Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-17T00:39:53.136216Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-17T00:39:53.136355Z	    _type: 'product',
2025-09-17T00:39:53.136468Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-17T00:39:53.13658Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-17T00:39:53.136693Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:53.136834Z	    image: null,
2025-09-17T00:39:53.13694Z	    inventory: {
2025-09-17T00:39:53.137058Z	      inStock: true,
2025-09-17T00:39:53.13743Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-17T00:39:53.137614Z	      quantity: 0,
2025-09-17T00:39:53.137726Z	      status: 'in_stock',
2025-09-17T00:39:53.137829Z	      warehouse: null
2025-09-17T00:39:53.137998Z	    },
2025-09-17T00:39:53.13813Z	    isActive: true,
2025-09-17T00:39:53.138254Z	    isFeatured: false,
2025-09-17T00:39:53.138387Z	    isNew: false,
2025-09-17T00:39:53.138513Z	    partNumber: '11111',
2025-09-17T00:39:53.138625Z	    pricing: {
2025-09-17T00:39:53.138743Z	      currency: 'CNY',
2025-09-17T00:39:53.13886Z	      leadTime: null,
2025-09-17T00:39:53.138962Z	      moq: null,
2025-09-17T00:39:53.139192Z	      price: null,
2025-09-17T00:39:53.139336Z	      tiers: null
2025-09-17T00:39:53.139468Z	    },
2025-09-17T00:39:53.139588Z	    shortDescription: '11111',
2025-09-17T00:39:53.139712Z	    slug: 'sic mosfet',
2025-09-17T00:39:53.139827Z	    title: '111111'
2025-09-17T00:39:53.139955Z	  }
2025-09-17T00:39:53.140071Z	}
2025-09-17T00:39:53.140175Z	Fetching solutions with query: 
2025-09-17T00:39:53.140297Z	    {
2025-09-17T00:39:53.140417Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:53.140529Z	        
2025-09-17T00:39:53.140636Z	    _id,
2025-09-17T00:39:53.140743Z	    title,
2025-09-17T00:39:53.140843Z	    "slug": slug.current,
2025-09-17T00:39:53.14095Z	    summary,
2025-09-17T00:39:53.141087Z	    description,
2025-09-17T00:39:53.141197Z	    coverImage,
2025-09-17T00:39:53.141317Z	    primaryBrand->{
2025-09-17T00:39:53.141429Z	      _id,
2025-09-17T00:39:53.14153Z	      name,
2025-09-17T00:39:53.141636Z	      "slug": slug.current,
2025-09-17T00:39:53.141742Z	      logo
2025-09-17T00:39:53.141844Z	    },
2025-09-17T00:39:53.141969Z	    relatedBrands[]->{
2025-09-17T00:39:53.142093Z	      _id,
2025-09-17T00:39:53.142258Z	      name,
2025-09-17T00:39:53.142407Z	      "slug": slug.current,
2025-09-17T00:39:53.142819Z	      logo
2025-09-17T00:39:53.142955Z	    },
2025-09-17T00:39:53.143077Z	    targetMarket,
2025-09-17T00:39:53.143759Z	    complexity,
2025-09-17T00:39:53.144147Z	    publishedAt,
2025-09-17T00:39:53.144496Z	    isPublished,
2025-09-17T00:39:53.144606Z	    isFeatured,
2025-09-17T00:39:53.144927Z	    viewCount,
2025-09-17T00:39:53.145449Z	    _createdAt,
2025-09-17T00:39:53.145776Z	    _updatedAt
2025-09-17T00:39:53.146055Z	  
2025-09-17T00:39:53.146155Z	      },
2025-09-17T00:39:53.14645Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-17T00:39:53.146779Z	    }
2025-09-17T00:39:53.147105Z	  
2025-09-17T00:39:53.147435Z	Query parameters: {
2025-09-17T00:39:53.147543Z	  limit: 4,
2025-09-17T00:39:53.148059Z	  offset: 0,
2025-09-17T00:39:53.148285Z	  targetMarket: undefined,
2025-09-17T00:39:53.148382Z	  brand: 'lem',
2025-09-17T00:39:53.148531Z	  featured: undefined
2025-09-17T00:39:53.187588Z	}
2025-09-17T00:39:53.188111Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-17T00:39:53.1884Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-17T00:39:53.188607Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:53.1888Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:53.18894Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:53.189035Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:53.189124Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-17T00:39:53.189229Z	Fetching products with query: 
2025-09-17T00:39:53.189415Z	    {
2025-09-17T00:39:53.189751Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:53.189933Z	        
2025-09-17T00:39:53.190104Z	    _id,
2025-09-17T00:39:53.190245Z	    _type,
2025-09-17T00:39:53.190389Z	    partNumber,
2025-09-17T00:39:53.19054Z	    "slug": slug.current,
2025-09-17T00:39:53.19071Z	    title,
2025-09-17T00:39:53.190876Z	    shortDescription,
2025-09-17T00:39:53.191235Z	    image,
2025-09-17T00:39:53.19141Z	    brand->{
2025-09-17T00:39:53.191874Z	      name,
2025-09-17T00:39:53.192181Z	      "slug": slug.current,
2025-09-17T00:39:53.192547Z	      logo
2025-09-17T00:39:53.192872Z	    },
2025-09-17T00:39:53.192963Z	    category->{
2025-09-17T00:39:53.193029Z	      name,
2025-09-17T00:39:53.193564Z	      "slug": slug.current
2025-09-17T00:39:53.193704Z	    },
2025-09-17T00:39:53.194039Z	    pricing{
2025-09-17T00:39:53.194368Z	      currency,
2025-09-17T00:39:53.19499Z	      tiers[]{
2025-09-17T00:39:53.19525Z	        quantity,
2025-09-17T00:39:53.195454Z	        price,
2025-09-17T00:39:53.195637Z	        unit
2025-09-17T00:39:53.195787Z	      },
2025-09-17T00:39:53.195947Z	      moq,
2025-09-17T00:39:53.196117Z	      leadTime,
2025-09-17T00:39:53.196254Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:53.196544Z	      "price": tiers[0].price,
2025-09-17T00:39:53.196701Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:53.196822Z	    },
2025-09-17T00:39:53.196932Z	    inventory{
2025-09-17T00:39:53.197189Z	      quantity,
2025-09-17T00:39:53.197568Z	      status,
2025-09-17T00:39:53.197718Z	      warehouse,
2025-09-17T00:39:53.198103Z	      lastUpdated,
2025-09-17T00:39:53.198253Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:53.198911Z	      "inStock": status == "in_stock",
2025-09-17T00:39:53.199046Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:53.199156Z	    },
2025-09-17T00:39:53.199253Z	    isActive,
2025-09-17T00:39:53.199458Z	    isFeatured,
2025-09-17T00:39:53.199608Z	    isNew,
2025-09-17T00:39:53.199836Z	    _createdAt,
2025-09-17T00:39:53.199978Z	    _updatedAt
2025-09-17T00:39:53.20009Z	  
2025-09-17T00:39:53.200181Z	      },
2025-09-17T00:39:53.200287Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-17T00:39:53.200399Z	    }
2025-09-17T00:39:53.200502Z	  
2025-09-17T00:39:53.200597Z	Query parameters: {
2025-09-17T00:39:53.200696Z	  limit: 8,
2025-09-17T00:39:53.200786Z	  offset: 0,
2025-09-17T00:39:53.200885Z	  category: undefined,
2025-09-17T00:39:53.200973Z	  brand: 'mediatek',
2025-09-17T00:39:53.201066Z	  featured: undefined
2025-09-17T00:39:53.201151Z	}
2025-09-17T00:39:53.201239Z	Fetching solutions with query: 
2025-09-17T00:39:53.201372Z	    {
2025-09-17T00:39:53.20147Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:53.201568Z	        
2025-09-17T00:39:53.201666Z	    _id,
2025-09-17T00:39:53.201761Z	    title,
2025-09-17T00:39:53.201864Z	    "slug": slug.current,
2025-09-17T00:39:53.201961Z	    summary,
2025-09-17T00:39:53.202224Z	    description,
2025-09-17T00:39:53.202427Z	    coverImage,
2025-09-17T00:39:53.202583Z	    primaryBrand->{
2025-09-17T00:39:53.202688Z	      _id,
2025-09-17T00:39:53.202786Z	      name,
2025-09-17T00:39:53.202882Z	      "slug": slug.current,
2025-09-17T00:39:53.202988Z	      logo
2025-09-17T00:39:53.203096Z	    },
2025-09-17T00:39:53.2032Z	    relatedBrands[]->{
2025-09-17T00:39:53.203321Z	      _id,
2025-09-17T00:39:53.203418Z	      name,
2025-09-17T00:39:53.203576Z	      "slug": slug.current,
2025-09-17T00:39:53.203666Z	      logo
2025-09-17T00:39:53.203756Z	    },
2025-09-17T00:39:53.203845Z	    targetMarket,
2025-09-17T00:39:53.203942Z	    complexity,
2025-09-17T00:39:53.204053Z	    publishedAt,
2025-09-17T00:39:53.204147Z	    isPublished,
2025-09-17T00:39:53.204236Z	    isFeatured,
2025-09-17T00:39:53.204348Z	    viewCount,
2025-09-17T00:39:53.204445Z	    _createdAt,
2025-09-17T00:39:53.204537Z	    _updatedAt
2025-09-17T00:39:53.204739Z	  
2025-09-17T00:39:53.204869Z	      },
2025-09-17T00:39:53.204983Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-17T00:39:53.205093Z	    }
2025-09-17T00:39:53.205198Z	  
2025-09-17T00:39:53.205414Z	Query parameters: {
2025-09-17T00:39:53.205577Z	  limit: 4,
2025-09-17T00:39:53.205722Z	  offset: 0,
2025-09-17T00:39:53.205857Z	  targetMarket: undefined,
2025-09-17T00:39:53.20601Z	  brand: 'mediatek',
2025-09-17T00:39:53.206168Z	  featured: undefined
2025-09-17T00:39:53.20633Z	}
2025-09-17T00:39:53.206553Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-17T00:39:53.206708Z	Fetching products with query: 
2025-09-17T00:39:53.206926Z	    {
2025-09-17T00:39:53.207072Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:53.207203Z	        
2025-09-17T00:39:53.207568Z	    _id,
2025-09-17T00:39:53.207723Z	    _type,
2025-09-17T00:39:53.207824Z	    partNumber,
2025-09-17T00:39:53.20792Z	    "slug": slug.current,
2025-09-17T00:39:53.208021Z	    title,
2025-09-17T00:39:53.20813Z	    shortDescription,
2025-09-17T00:39:53.208286Z	    image,
2025-09-17T00:39:53.208402Z	    brand->{
2025-09-17T00:39:53.208497Z	      name,
2025-09-17T00:39:53.208606Z	      "slug": slug.current,
2025-09-17T00:39:53.208705Z	      logo
2025-09-17T00:39:53.208794Z	    },
2025-09-17T00:39:53.208929Z	    category->{
2025-09-17T00:39:53.209052Z	      name,
2025-09-17T00:39:53.20917Z	      "slug": slug.current
2025-09-17T00:39:53.209309Z	    },
2025-09-17T00:39:53.209409Z	    pricing{
2025-09-17T00:39:53.209497Z	      currency,
2025-09-17T00:39:53.209606Z	      tiers[]{
2025-09-17T00:39:53.209775Z	        quantity,
2025-09-17T00:39:53.209916Z	        price,
2025-09-17T00:39:53.210051Z	        unit
2025-09-17T00:39:53.210165Z	      },
2025-09-17T00:39:53.210301Z	      moq,
2025-09-17T00:39:53.210411Z	      leadTime,
2025-09-17T00:39:53.210546Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:53.210726Z	      "price": tiers[0].price,
2025-09-17T00:39:53.21085Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:53.210969Z	    },
2025-09-17T00:39:53.211192Z	    inventory{
2025-09-17T00:39:53.211336Z	      quantity,
2025-09-17T00:39:53.21161Z	      status,
2025-09-17T00:39:53.211946Z	      warehouse,
2025-09-17T00:39:53.212074Z	      lastUpdated,
2025-09-17T00:39:53.212375Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:53.212547Z	      "inStock": status == "in_stock",
2025-09-17T00:39:53.212755Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:53.212885Z	    },
2025-09-17T00:39:53.213117Z	    isActive,
2025-09-17T00:39:53.21325Z	    isFeatured,
2025-09-17T00:39:53.213424Z	    isNew,
2025-09-17T00:39:53.213538Z	    _createdAt,
2025-09-17T00:39:53.213744Z	    _updatedAt
2025-09-17T00:39:53.213884Z	  
2025-09-17T00:39:53.214062Z	      },
2025-09-17T00:39:53.214217Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-17T00:39:53.214385Z	    }
2025-09-17T00:39:53.214498Z	  
2025-09-17T00:39:53.214594Z	Query parameters: {
2025-09-17T00:39:53.214686Z	  limit: 8,
2025-09-17T00:39:53.214781Z	  offset: 0,
2025-09-17T00:39:53.214871Z	  category: undefined,
2025-09-17T00:39:53.214949Z	  brand: 'mediatek',
2025-09-17T00:39:53.215005Z	  featured: undefined
2025-09-17T00:39:53.215091Z	}
2025-09-17T00:39:53.215181Z	Products fetch result: {
2025-09-17T00:39:53.21529Z	  totalProducts: 2,
2025-09-17T00:39:53.215402Z	  fetchedProducts: 2,
2025-09-17T00:39:53.215498Z	  firstProduct: {
2025-09-17T00:39:53.215589Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-17T00:39:53.215685Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-17T00:39:53.215789Z	    _type: 'product',
2025-09-17T00:39:53.215898Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-17T00:39:53.21602Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-17T00:39:53.216204Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-17T00:39:53.216329Z	    image: null,
2025-09-17T00:39:53.216413Z	    inventory: {
2025-09-17T00:39:53.21652Z	      inStock: true,
2025-09-17T00:39:53.216636Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-17T00:39:53.216733Z	      quantity: 0,
2025-09-17T00:39:53.216923Z	      status: 'in_stock',
2025-09-17T00:39:53.217063Z	      warehouse: null
2025-09-17T00:39:53.217177Z	    },
2025-09-17T00:39:53.217297Z	    isActive: true,
2025-09-17T00:39:53.217397Z	    isFeatured: false,
2025-09-17T00:39:53.217484Z	    isNew: false,
2025-09-17T00:39:53.217577Z	    partNumber: '99999',
2025-09-17T00:39:53.217667Z	    pricing: {
2025-09-17T00:39:53.217763Z	      currency: 'CNY',
2025-09-17T00:39:53.217863Z	      leadTime: null,
2025-09-17T00:39:53.217988Z	      moq: null,
2025-09-17T00:39:53.218086Z	      price: null,
2025-09-17T00:39:53.218167Z	      tiers: null
2025-09-17T00:39:53.218263Z	    },
2025-09-17T00:39:53.21838Z	    shortDescription: null,
2025-09-17T00:39:53.218477Z	    slug: '99999',
2025-09-17T00:39:53.218564Z	    title: '99999'
2025-09-17T00:39:53.218734Z	  }
2025-09-17T00:39:53.218871Z	}
2025-09-17T00:39:53.218978Z	Products fetch result: {
2025-09-17T00:39:53.219075Z	  totalProducts: 2,
2025-09-17T00:39:53.219173Z	  fetchedProducts: 2,
2025-09-17T00:39:53.219258Z	  firstProduct: {
2025-09-17T00:39:53.219367Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-17T00:39:53.219461Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-17T00:39:53.219571Z	    _type: 'product',
2025-09-17T00:39:53.219663Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-17T00:39:53.219761Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-17T00:39:53.219856Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-17T00:39:53.219969Z	    image: null,
2025-09-17T00:39:53.22008Z	    inventory: {
2025-09-17T00:39:53.220177Z	      inStock: true,
2025-09-17T00:39:53.220279Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-17T00:39:53.220393Z	      quantity: 0,
2025-09-17T00:39:53.220603Z	      status: 'in_stock',
2025-09-17T00:39:53.220788Z	      warehouse: null
2025-09-17T00:39:53.221146Z	    },
2025-09-17T00:39:53.221285Z	    isActive: true,
2025-09-17T00:39:53.221611Z	    isFeatured: false,
2025-09-17T00:39:53.221916Z	    isNew: false,
2025-09-17T00:39:53.222241Z	    partNumber: '99999',
2025-09-17T00:39:53.222445Z	    pricing: {
2025-09-17T00:39:53.222577Z	      currency: 'CNY',
2025-09-17T00:39:53.222703Z	      leadTime: null,
2025-09-17T00:39:53.222795Z	      moq: null,
2025-09-17T00:39:53.222891Z	      price: null,
2025-09-17T00:39:53.223005Z	      tiers: null
2025-09-17T00:39:53.223076Z	    },
2025-09-17T00:39:53.22317Z	    shortDescription: null,
2025-09-17T00:39:53.223241Z	    slug: '99999',
2025-09-17T00:39:53.223336Z	    title: '99999'
2025-09-17T00:39:53.223422Z	  }
2025-09-17T00:39:53.223481Z	}
2025-09-17T00:39:53.223574Z	Fetching solutions with query: 
2025-09-17T00:39:53.223669Z	    {
2025-09-17T00:39:53.223767Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:53.223862Z	        
2025-09-17T00:39:53.223967Z	    _id,
2025-09-17T00:39:53.224053Z	    title,
2025-09-17T00:39:53.224133Z	    "slug": slug.current,
2025-09-17T00:39:53.224253Z	    summary,
2025-09-17T00:39:53.224363Z	    description,
2025-09-17T00:39:53.224454Z	    coverImage,
2025-09-17T00:39:53.224511Z	    primaryBrand->{
2025-09-17T00:39:53.224581Z	      _id,
2025-09-17T00:39:53.224683Z	      name,
2025-09-17T00:39:53.224789Z	      "slug": slug.current,
2025-09-17T00:39:53.224892Z	      logo
2025-09-17T00:39:53.224982Z	    },
2025-09-17T00:39:53.225077Z	    relatedBrands[]->{
2025-09-17T00:39:53.225152Z	      _id,
2025-09-17T00:39:53.225252Z	      name,
2025-09-17T00:39:53.225401Z	      "slug": slug.current,
2025-09-17T00:39:53.225506Z	      logo
2025-09-17T00:39:53.225596Z	    },
2025-09-17T00:39:53.225691Z	    targetMarket,
2025-09-17T00:39:53.225787Z	    complexity,
2025-09-17T00:39:53.225885Z	    publishedAt,
2025-09-17T00:39:53.225992Z	    isPublished,
2025-09-17T00:39:53.226097Z	    isFeatured,
2025-09-17T00:39:53.226199Z	    viewCount,
2025-09-17T00:39:53.22632Z	    _createdAt,
2025-09-17T00:39:53.226417Z	    _updatedAt
2025-09-17T00:39:53.226515Z	  
2025-09-17T00:39:53.226611Z	      },
2025-09-17T00:39:53.226714Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-17T00:39:53.226863Z	    }
2025-09-17T00:39:53.226973Z	  
2025-09-17T00:39:53.227063Z	Query parameters: {
2025-09-17T00:39:53.227174Z	  limit: 4,
2025-09-17T00:39:53.227284Z	  offset: 0,
2025-09-17T00:39:53.227381Z	  targetMarket: undefined,
2025-09-17T00:39:53.227492Z	  brand: 'mediatek',
2025-09-17T00:39:53.227614Z	  featured: undefined
2025-09-17T00:39:53.227724Z	}
2025-09-17T00:39:53.227819Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:53.227914Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:53.228006Z	✅ [getBrandData] Found brand: IXYS
2025-09-17T00:39:53.228107Z	✅ [getBrandData] Found brand: IXYS
2025-09-17T00:39:53.228207Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:53.228321Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:53.228412Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:53.228503Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:53.228594Z	✅ [getBrandData] Found brand: Electronicon
2025-09-17T00:39:53.228712Z	✅ [getBrandData] Found brand: Electronicon
2025-09-17T00:39:53.228804Z	Solutions fetch result: {
2025-09-17T00:39:53.228899Z	  totalSolutions: 6,
2025-09-17T00:39:53.228997Z	  fetchedSolutions: 4,
2025-09-17T00:39:53.229094Z	  firstSolution: {
2025-09-17T00:39:53.229188Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-17T00:39:53.229299Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-17T00:39:53.229411Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-17T00:39:53.229516Z	    complexity: 'medium',
2025-09-17T00:39:53.229613Z	    coverImage: null,
2025-09-17T00:39:53.229729Z	    description: [ [Object] ],
2025-09-17T00:39:53.229833Z	    isFeatured: false,
2025-09-17T00:39:53.229953Z	    isPublished: true,
2025-09-17T00:39:53.23005Z	    primaryBrand: {
2025-09-17T00:39:53.230145Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:53.230235Z	      logo: null,
2025-09-17T00:39:53.230343Z	      name: 'CREE',
2025-09-17T00:39:53.230442Z	      slug: 'cree'
2025-09-17T00:39:53.23054Z	    },
2025-09-17T00:39:53.230638Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-17T00:39:53.230743Z	    relatedBrands: null,
2025-09-17T00:39:53.230841Z	    slug: '11111',
2025-09-17T00:39:53.231115Z	    summary: '11111',
2025-09-17T00:39:53.231473Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:53.23173Z	    title: '11111',
2025-09-17T00:39:53.232194Z	    viewCount: 0
2025-09-17T00:39:53.232389Z	  }
2025-09-17T00:39:53.232568Z	}
2025-09-17T00:39:53.232739Z	Solutions fetch result: {
2025-09-17T00:39:53.232969Z	  totalSolutions: 6,
2025-09-17T00:39:53.233181Z	  fetchedSolutions: 4,
2025-09-17T00:39:53.233394Z	  firstSolution: {
2025-09-17T00:39:53.233621Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-17T00:39:53.233796Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-17T00:39:53.233906Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-17T00:39:53.234335Z	    complexity: 'medium',
2025-09-17T00:39:53.234489Z	    coverImage: null,
2025-09-17T00:39:53.234612Z	    description: [ [Object] ],
2025-09-17T00:39:53.234735Z	    isFeatured: false,
2025-09-17T00:39:53.234847Z	    isPublished: true,
2025-09-17T00:39:53.234953Z	    primaryBrand: {
2025-09-17T00:39:53.23507Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:53.235178Z	      logo: null,
2025-09-17T00:39:53.235306Z	      name: 'CREE',
2025-09-17T00:39:53.235428Z	      slug: 'cree'
2025-09-17T00:39:53.235544Z	    },
2025-09-17T00:39:53.235653Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-17T00:39:53.235778Z	    relatedBrands: null,
2025-09-17T00:39:53.235934Z	    slug: '11111',
2025-09-17T00:39:53.236306Z	    summary: '11111',
2025-09-17T00:39:53.236462Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:53.236784Z	    title: '11111',
2025-09-17T00:39:53.237092Z	    viewCount: 0
2025-09-17T00:39:53.237204Z	  }
2025-09-17T00:39:53.23735Z	}
2025-09-17T00:39:53.23746Z	✅ [getBrandData] Found brand: LEM
2025-09-17T00:39:53.23758Z	✅ [getBrandData] Found brand: LEM
2025-09-17T00:39:53.237702Z	Products fetch result: {
2025-09-17T00:39:53.237809Z	  totalProducts: 3,
2025-09-17T00:39:53.237924Z	  fetchedProducts: 3,
2025-09-17T00:39:53.238036Z	  firstProduct: {
2025-09-17T00:39:53.238154Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-17T00:39:53.238262Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-17T00:39:53.23866Z	    _type: 'product',
2025-09-17T00:39:53.238801Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-17T00:39:53.238967Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-17T00:39:53.239238Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-17T00:39:53.239586Z	    image: null,
2025-09-17T00:39:53.239728Z	    inventory: {
2025-09-17T00:39:53.240073Z	      inStock: true,
2025-09-17T00:39:53.240228Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-17T00:39:53.24038Z	      quantity: 0,
2025-09-17T00:39:53.240496Z	      status: 'in_stock',
2025-09-17T00:39:53.240596Z	      warehouse: null
2025-09-17T00:39:53.240699Z	    },
2025-09-17T00:39:53.240813Z	    isActive: true,
2025-09-17T00:39:53.240927Z	    isFeatured: false,
2025-09-17T00:39:53.241028Z	    isNew: false,
2025-09-17T00:39:53.241125Z	    partNumber: 'la55-p',
2025-09-17T00:39:53.241223Z	    pricing: {
2025-09-17T00:39:53.241429Z	      currency: 'CNY',
2025-09-17T00:39:53.241749Z	      leadTime: null,
2025-09-17T00:39:53.241924Z	      moq: null,
2025-09-17T00:39:53.242227Z	      price: null,
2025-09-17T00:39:53.24237Z	      tiers: null
2025-09-17T00:39:53.242502Z	    },
2025-09-17T00:39:53.242658Z	    shortDescription: '电流传感器la55-p',
2025-09-17T00:39:53.24282Z	    slug: 'la55-p',
2025-09-17T00:39:53.244864Z	    title: '电流传感器la55-p'
2025-09-17T00:39:53.245038Z	  }
2025-09-17T00:39:53.245161Z	}
2025-09-17T00:39:53.245291Z	Products fetch result: {
2025-09-17T00:39:53.245478Z	  totalProducts: 3,
2025-09-17T00:39:53.245602Z	  fetchedProducts: 3,
2025-09-17T00:39:53.245704Z	  firstProduct: {
2025-09-17T00:39:53.245803Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-17T00:39:53.245976Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-17T00:39:53.246125Z	    _type: 'product',
2025-09-17T00:39:53.246283Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-17T00:39:53.246477Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-17T00:39:53.246632Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-17T00:39:53.246783Z	    image: null,
2025-09-17T00:39:53.246956Z	    inventory: {
2025-09-17T00:39:53.247093Z	      inStock: true,
2025-09-17T00:39:53.247262Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-17T00:39:53.247422Z	      quantity: 0,
2025-09-17T00:39:53.247623Z	      status: 'in_stock',
2025-09-17T00:39:53.247781Z	      warehouse: null
2025-09-17T00:39:53.247962Z	    },
2025-09-17T00:39:53.248131Z	    isActive: true,
2025-09-17T00:39:53.248332Z	    isFeatured: false,
2025-09-17T00:39:53.248483Z	    isNew: false,
2025-09-17T00:39:53.248627Z	    partNumber: 'la55-p',
2025-09-17T00:39:53.248743Z	    pricing: {
2025-09-17T00:39:53.248865Z	      currency: 'CNY',
2025-09-17T00:39:53.248985Z	      leadTime: null,
2025-09-17T00:39:53.249103Z	      moq: null,
2025-09-17T00:39:53.249215Z	      price: null,
2025-09-17T00:39:53.249354Z	      tiers: null
2025-09-17T00:39:53.249469Z	    },
2025-09-17T00:39:53.249592Z	    shortDescription: '电流传感器la55-p',
2025-09-17T00:39:53.249715Z	    slug: 'la55-p',
2025-09-17T00:39:53.249845Z	    title: '电流传感器la55-p'
2025-09-17T00:39:53.25Z	  }
2025-09-17T00:39:53.250135Z	}
2025-09-17T00:39:53.250248Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:53.250395Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:53.250501Z	Solutions fetch result: {
2025-09-17T00:39:53.250604Z	  totalSolutions: 1,
2025-09-17T00:39:53.250707Z	  fetchedSolutions: 1,
2025-09-17T00:39:53.250809Z	  firstSolution: {
2025-09-17T00:39:53.250913Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-17T00:39:53.251032Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-17T00:39:53.251141Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-17T00:39:53.251241Z	    complexity: 'medium',
2025-09-17T00:39:53.251371Z	    coverImage: null,
2025-09-17T00:39:53.251476Z	    description: [ [Object] ],
2025-09-17T00:39:53.251678Z	    isFeatured: false,
2025-09-17T00:39:53.252039Z	    isPublished: true,
2025-09-17T00:39:53.252342Z	    primaryBrand: {
2025-09-17T00:39:53.252653Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:53.2531Z	      logo: null,
2025-09-17T00:39:53.253402Z	      name: 'IXYS',
2025-09-17T00:39:53.253686Z	      slug: 'ixys'
2025-09-17T00:39:53.287668Z	    },
2025-09-17T00:39:53.287891Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-17T00:39:53.288134Z	    relatedBrands: null,
2025-09-17T00:39:53.288306Z	    slug: '99999',
2025-09-17T00:39:53.288437Z	    summary: '99999',
2025-09-17T00:39:53.288549Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:53.288652Z	    title: '99999',
2025-09-17T00:39:53.288751Z	    viewCount: 0
2025-09-17T00:39:53.288853Z	  }
2025-09-17T00:39:53.288966Z	}
2025-09-17T00:39:53.289067Z	Solutions fetch result: {
2025-09-17T00:39:53.28917Z	  totalSolutions: 1,
2025-09-17T00:39:53.289295Z	  fetchedSolutions: 1,
2025-09-17T00:39:53.289395Z	  firstSolution: {
2025-09-17T00:39:53.289493Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-17T00:39:53.289598Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-17T00:39:53.289702Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-17T00:39:53.289801Z	    complexity: 'medium',
2025-09-17T00:39:53.289901Z	    coverImage: null,
2025-09-17T00:39:53.290026Z	    description: [ [Object] ],
2025-09-17T00:39:53.290129Z	    isFeatured: false,
2025-09-17T00:39:53.290231Z	    isPublished: true,
2025-09-17T00:39:53.290359Z	    primaryBrand: {
2025-09-17T00:39:53.290471Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:53.290613Z	      logo: null,
2025-09-17T00:39:53.291144Z	      name: 'IXYS',
2025-09-17T00:39:53.29132Z	      slug: 'ixys'
2025-09-17T00:39:53.291446Z	    },
2025-09-17T00:39:53.291563Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-17T00:39:53.291673Z	    relatedBrands: null,
2025-09-17T00:39:53.291777Z	    slug: '99999',
2025-09-17T00:39:53.291889Z	    summary: '99999',
2025-09-17T00:39:53.292041Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:53.29216Z	    title: '99999',
2025-09-17T00:39:53.292326Z	    viewCount: 0
2025-09-17T00:39:53.292455Z	  }
2025-09-17T00:39:53.292591Z	}
2025-09-17T00:39:53.29271Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:53.292819Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:53.29295Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:53.293073Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:53.29318Z	✅ [getBrandData] Found brand: MediaTek
2025-09-17T00:39:53.293329Z	✅ [getBrandData] Found brand: MediaTek
2025-09-17T00:39:53.293453Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-17T00:39:53.293561Z	Fetching products with query: 
2025-09-17T00:39:53.293664Z	    {
2025-09-17T00:39:53.293776Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:53.294045Z	        
2025-09-17T00:39:53.294546Z	    _id,
2025-09-17T00:39:53.294962Z	    _type,
2025-09-17T00:39:53.295161Z	    partNumber,
2025-09-17T00:39:53.295433Z	    "slug": slug.current,
2025-09-17T00:39:53.295612Z	    title,
2025-09-17T00:39:53.295791Z	    shortDescription,
2025-09-17T00:39:53.295903Z	    image,
2025-09-17T00:39:53.296013Z	    brand->{
2025-09-17T00:39:53.296114Z	      name,
2025-09-17T00:39:53.296214Z	      "slug": slug.current,
2025-09-17T00:39:53.29633Z	      logo
2025-09-17T00:39:53.296431Z	    },
2025-09-17T00:39:53.296529Z	    category->{
2025-09-17T00:39:53.296631Z	      name,
2025-09-17T00:39:53.296753Z	      "slug": slug.current
2025-09-17T00:39:53.296894Z	    },
2025-09-17T00:39:53.297065Z	    pricing{
2025-09-17T00:39:53.297312Z	      currency,
2025-09-17T00:39:53.297507Z	      tiers[]{
2025-09-17T00:39:53.297721Z	        quantity,
2025-09-17T00:39:53.297878Z	        price,
2025-09-17T00:39:53.298034Z	        unit
2025-09-17T00:39:53.298174Z	      },
2025-09-17T00:39:53.298298Z	      moq,
2025-09-17T00:39:53.298408Z	      leadTime,
2025-09-17T00:39:53.298513Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:53.298619Z	      "price": tiers[0].price,
2025-09-17T00:39:53.298796Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:53.298904Z	    },
2025-09-17T00:39:53.299154Z	    inventory{
2025-09-17T00:39:53.29931Z	      quantity,
2025-09-17T00:39:53.299655Z	      status,
2025-09-17T00:39:53.299807Z	      warehouse,
2025-09-17T00:39:53.300013Z	      lastUpdated,
2025-09-17T00:39:53.300229Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:53.300441Z	      "inStock": status == "in_stock",
2025-09-17T00:39:53.300641Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:53.300794Z	    },
2025-09-17T00:39:53.300995Z	    isActive,
2025-09-17T00:39:53.301247Z	    isFeatured,
2025-09-17T00:39:53.301423Z	    isNew,
2025-09-17T00:39:53.30156Z	    _createdAt,
2025-09-17T00:39:53.301649Z	    _updatedAt
2025-09-17T00:39:53.301745Z	  
2025-09-17T00:39:53.301837Z	      },
2025-09-17T00:39:53.301927Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-17T00:39:53.302032Z	    }
2025-09-17T00:39:53.302168Z	  
2025-09-17T00:39:53.302289Z	Query parameters: {
2025-09-17T00:39:53.302398Z	  limit: 8,
2025-09-17T00:39:53.302499Z	  offset: 0,
2025-09-17T00:39:53.302609Z	  category: undefined,
2025-09-17T00:39:53.302732Z	  brand: 'pi',
2025-09-17T00:39:53.302841Z	  featured: undefined
2025-09-17T00:39:53.302947Z	}
2025-09-17T00:39:53.303055Z	Fetching solutions with query: 
2025-09-17T00:39:53.303158Z	    {
2025-09-17T00:39:53.30328Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:53.303402Z	        
2025-09-17T00:39:53.303504Z	    _id,
2025-09-17T00:39:53.30361Z	    title,
2025-09-17T00:39:53.303724Z	    "slug": slug.current,
2025-09-17T00:39:53.303908Z	    summary,
2025-09-17T00:39:53.304008Z	    description,
2025-09-17T00:39:53.304097Z	    coverImage,
2025-09-17T00:39:53.304187Z	    primaryBrand->{
2025-09-17T00:39:53.304312Z	      _id,
2025-09-17T00:39:53.304447Z	      name,
2025-09-17T00:39:53.304616Z	      "slug": slug.current,
2025-09-17T00:39:53.304734Z	      logo
2025-09-17T00:39:53.304836Z	    },
2025-09-17T00:39:53.304959Z	    relatedBrands[]->{
2025-09-17T00:39:53.305072Z	      _id,
2025-09-17T00:39:53.30517Z	      name,
2025-09-17T00:39:53.305282Z	      "slug": slug.current,
2025-09-17T00:39:53.305395Z	      logo
2025-09-17T00:39:53.305493Z	    },
2025-09-17T00:39:53.305586Z	    targetMarket,
2025-09-17T00:39:53.305711Z	    complexity,
2025-09-17T00:39:53.305875Z	    publishedAt,
2025-09-17T00:39:53.305996Z	    isPublished,
2025-09-17T00:39:53.306115Z	    isFeatured,
2025-09-17T00:39:53.306238Z	    viewCount,
2025-09-17T00:39:53.306361Z	    _createdAt,
2025-09-17T00:39:53.306465Z	    _updatedAt
2025-09-17T00:39:53.306559Z	  
2025-09-17T00:39:53.306649Z	      },
2025-09-17T00:39:53.306743Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-17T00:39:53.306842Z	    }
2025-09-17T00:39:53.306951Z	  
2025-09-17T00:39:53.307043Z	Query parameters: {
2025-09-17T00:39:53.307132Z	  limit: 4,
2025-09-17T00:39:53.307237Z	  offset: 0,
2025-09-17T00:39:53.307378Z	  targetMarket: undefined,
2025-09-17T00:39:53.307544Z	  brand: 'pi',
2025-09-17T00:39:53.307688Z	  featured: undefined
2025-09-17T00:39:53.307787Z	}
2025-09-17T00:39:53.3079Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-17T00:39:53.308006Z	Fetching products with query: 
2025-09-17T00:39:53.308106Z	    {
2025-09-17T00:39:53.308198Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:53.30832Z	        
2025-09-17T00:39:53.308426Z	    _id,
2025-09-17T00:39:53.30853Z	    _type,
2025-09-17T00:39:53.308631Z	    partNumber,
2025-09-17T00:39:53.308828Z	    "slug": slug.current,
2025-09-17T00:39:53.308974Z	    title,
2025-09-17T00:39:53.30918Z	    shortDescription,
2025-09-17T00:39:53.309402Z	    image,
2025-09-17T00:39:53.309565Z	    brand->{
2025-09-17T00:39:53.309715Z	      name,
2025-09-17T00:39:53.309875Z	      "slug": slug.current,
2025-09-17T00:39:53.309991Z	      logo
2025-09-17T00:39:53.31014Z	    },
2025-09-17T00:39:53.310243Z	    category->{
2025-09-17T00:39:53.310363Z	      name,
2025-09-17T00:39:53.310471Z	      "slug": slug.current
2025-09-17T00:39:53.310565Z	    },
2025-09-17T00:39:53.310668Z	    pricing{
2025-09-17T00:39:53.310774Z	      currency,
2025-09-17T00:39:53.31087Z	      tiers[]{
2025-09-17T00:39:53.310971Z	        quantity,
2025-09-17T00:39:53.311069Z	        price,
2025-09-17T00:39:53.311221Z	        unit
2025-09-17T00:39:53.31134Z	      },
2025-09-17T00:39:53.311439Z	      moq,
2025-09-17T00:39:53.311536Z	      leadTime,
2025-09-17T00:39:53.311634Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:53.311812Z	      "price": tiers[0].price,
2025-09-17T00:39:53.311943Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:53.312119Z	    },
2025-09-17T00:39:53.312321Z	    inventory{
2025-09-17T00:39:53.312722Z	      quantity,
2025-09-17T00:39:53.312843Z	      status,
2025-09-17T00:39:53.31316Z	      warehouse,
2025-09-17T00:39:53.313519Z	      lastUpdated,
2025-09-17T00:39:53.313848Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:53.314189Z	      "inStock": status == "in_stock",
2025-09-17T00:39:53.314507Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:53.314662Z	    },
2025-09-17T00:39:53.315188Z	    isActive,
2025-09-17T00:39:53.31553Z	    isFeatured,
2025-09-17T00:39:53.315847Z	    isNew,
2025-09-17T00:39:53.316183Z	    _createdAt,
2025-09-17T00:39:53.316329Z	    _updatedAt
2025-09-17T00:39:53.316439Z	  
2025-09-17T00:39:53.316539Z	      },
2025-09-17T00:39:53.316643Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-17T00:39:53.31701Z	    }
2025-09-17T00:39:53.317153Z	  
2025-09-17T00:39:53.317487Z	Query parameters: {
2025-09-17T00:39:53.317823Z	  limit: 8,
2025-09-17T00:39:53.318153Z	  offset: 0,
2025-09-17T00:39:53.318303Z	  category: undefined,
2025-09-17T00:39:53.318824Z	  brand: 'pi',
2025-09-17T00:39:53.318952Z	  featured: undefined
2025-09-17T00:39:53.319296Z	}
2025-09-17T00:39:53.31963Z	Fetching solutions with query: 
2025-09-17T00:39:53.319963Z	    {
2025-09-17T00:39:53.320094Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:53.320608Z	        
2025-09-17T00:39:53.321373Z	    _id,
2025-09-17T00:39:53.321534Z	    title,
2025-09-17T00:39:53.321858Z	    "slug": slug.current,
2025-09-17T00:39:53.321983Z	    summary,
2025-09-17T00:39:53.322235Z	    description,
2025-09-17T00:39:53.322552Z	    coverImage,
2025-09-17T00:39:53.322652Z	    primaryBrand->{
2025-09-17T00:39:53.32306Z	      _id,
2025-09-17T00:39:53.323245Z	      name,
2025-09-17T00:39:53.323403Z	      "slug": slug.current,
2025-09-17T00:39:53.323519Z	      logo
2025-09-17T00:39:53.323627Z	    },
2025-09-17T00:39:53.323753Z	    relatedBrands[]->{
2025-09-17T00:39:53.32385Z	      _id,
2025-09-17T00:39:53.323945Z	      name,
2025-09-17T00:39:53.324044Z	      "slug": slug.current,
2025-09-17T00:39:53.324136Z	      logo
2025-09-17T00:39:53.324227Z	    },
2025-09-17T00:39:53.324339Z	    targetMarket,
2025-09-17T00:39:53.324443Z	    complexity,
2025-09-17T00:39:53.324535Z	    publishedAt,
2025-09-17T00:39:53.324656Z	    isPublished,
2025-09-17T00:39:53.324761Z	    isFeatured,
2025-09-17T00:39:53.324853Z	    viewCount,
2025-09-17T00:39:53.324943Z	    _createdAt,
2025-09-17T00:39:53.325033Z	    _updatedAt
2025-09-17T00:39:53.325123Z	  
2025-09-17T00:39:53.325209Z	      },
2025-09-17T00:39:53.325318Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-17T00:39:53.325418Z	    }
2025-09-17T00:39:53.325507Z	  
2025-09-17T00:39:53.325595Z	Query parameters: {
2025-09-17T00:39:53.325689Z	  limit: 4,
2025-09-17T00:39:53.325779Z	  offset: 0,
2025-09-17T00:39:53.32587Z	  targetMarket: undefined,
2025-09-17T00:39:53.325964Z	  brand: 'pi',
2025-09-17T00:39:53.326058Z	  featured: undefined
2025-09-17T00:39:53.326187Z	}
2025-09-17T00:39:53.32633Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:53.32643Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:53.326528Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-17T00:39:53.32664Z	Fetching products with query: 
2025-09-17T00:39:53.326753Z	    {
2025-09-17T00:39:53.326855Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:53.326964Z	        
2025-09-17T00:39:53.327056Z	    _id,
2025-09-17T00:39:53.32715Z	    _type,
2025-09-17T00:39:53.327239Z	    partNumber,
2025-09-17T00:39:53.32736Z	    "slug": slug.current,
2025-09-17T00:39:53.327499Z	    title,
2025-09-17T00:39:53.327606Z	    shortDescription,
2025-09-17T00:39:53.327701Z	    image,
2025-09-17T00:39:53.327793Z	    brand->{
2025-09-17T00:39:53.327991Z	      name,
2025-09-17T00:39:53.328101Z	      "slug": slug.current,
2025-09-17T00:39:53.328201Z	      logo
2025-09-17T00:39:53.328518Z	    },
2025-09-17T00:39:53.328807Z	    category->{
2025-09-17T00:39:53.328973Z	      name,
2025-09-17T00:39:53.329137Z	      "slug": slug.current
2025-09-17T00:39:53.329263Z	    },
2025-09-17T00:39:53.329403Z	    pricing{
2025-09-17T00:39:53.329566Z	      currency,
2025-09-17T00:39:53.329674Z	      tiers[]{
2025-09-17T00:39:53.329781Z	        quantity,
2025-09-17T00:39:53.329936Z	        price,
2025-09-17T00:39:53.330051Z	        unit
2025-09-17T00:39:53.330154Z	      },
2025-09-17T00:39:53.330316Z	      moq,
2025-09-17T00:39:53.330426Z	      leadTime,
2025-09-17T00:39:53.330531Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:53.330625Z	      "price": tiers[0].price,
2025-09-17T00:39:53.330722Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:53.330823Z	    },
2025-09-17T00:39:53.330934Z	    inventory{
2025-09-17T00:39:53.331035Z	      quantity,
2025-09-17T00:39:53.331184Z	      status,
2025-09-17T00:39:53.331571Z	      warehouse,
2025-09-17T00:39:53.331697Z	      lastUpdated,
2025-09-17T00:39:53.331803Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:53.331959Z	      "inStock": status == "in_stock",
2025-09-17T00:39:53.33264Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:53.333Z	    },
2025-09-17T00:39:53.33314Z	    isActive,
2025-09-17T00:39:53.333682Z	    isFeatured,
2025-09-17T00:39:53.334024Z	    isNew,
2025-09-17T00:39:53.334163Z	    _createdAt,
2025-09-17T00:39:53.334641Z	    _updatedAt
2025-09-17T00:39:53.33499Z	  
2025-09-17T00:39:53.335296Z	      },
2025-09-17T00:39:53.335448Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-17T00:39:53.335591Z	    }
2025-09-17T00:39:53.335756Z	  
2025-09-17T00:39:53.335925Z	Query parameters: {
2025-09-17T00:39:53.336142Z	  limit: 8,
2025-09-17T00:39:53.336353Z	  offset: 0,
2025-09-17T00:39:53.336545Z	  category: undefined,
2025-09-17T00:39:53.336697Z	  brand: 'qualcomm',
2025-09-17T00:39:53.336903Z	  featured: undefined
2025-09-17T00:39:53.337106Z	}
2025-09-17T00:39:53.337244Z	Fetching solutions with query: 
2025-09-17T00:39:53.337376Z	    {
2025-09-17T00:39:53.337522Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:53.337714Z	        
2025-09-17T00:39:53.338026Z	    _id,
2025-09-17T00:39:53.338159Z	    title,
2025-09-17T00:39:53.338251Z	    "slug": slug.current,
2025-09-17T00:39:53.338369Z	    summary,
2025-09-17T00:39:53.338479Z	    description,
2025-09-17T00:39:53.338689Z	    coverImage,
2025-09-17T00:39:53.338845Z	    primaryBrand->{
2025-09-17T00:39:53.339083Z	      _id,
2025-09-17T00:39:53.339218Z	      name,
2025-09-17T00:39:53.339341Z	      "slug": slug.current,
2025-09-17T00:39:53.339459Z	      logo
2025-09-17T00:39:53.339746Z	    },
2025-09-17T00:39:53.340088Z	    relatedBrands[]->{
2025-09-17T00:39:53.340413Z	      _id,
2025-09-17T00:39:53.340537Z	      name,
2025-09-17T00:39:53.340935Z	      "slug": slug.current,
2025-09-17T00:39:53.341183Z	      logo
2025-09-17T00:39:53.341483Z	    },
2025-09-17T00:39:53.341765Z	    targetMarket,
2025-09-17T00:39:53.341856Z	    complexity,
2025-09-17T00:39:53.342091Z	    publishedAt,
2025-09-17T00:39:53.342449Z	    isPublished,
2025-09-17T00:39:53.342578Z	    isFeatured,
2025-09-17T00:39:53.342905Z	    viewCount,
2025-09-17T00:39:53.34299Z	    _createdAt,
2025-09-17T00:39:53.343072Z	    _updatedAt
2025-09-17T00:39:53.343169Z	  
2025-09-17T00:39:53.343454Z	      },
2025-09-17T00:39:53.343651Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-17T00:39:53.344074Z	    }
2025-09-17T00:39:53.34417Z	  
2025-09-17T00:39:53.344463Z	Query parameters: {
2025-09-17T00:39:53.344584Z	  limit: 4,
2025-09-17T00:39:53.345095Z	  offset: 0,
2025-09-17T00:39:53.345193Z	  targetMarket: undefined,
2025-09-17T00:39:53.345399Z	  brand: 'qualcomm',
2025-09-17T00:39:53.345482Z	  featured: undefined
2025-09-17T00:39:53.345543Z	}
2025-09-17T00:39:53.3456Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-17T00:39:53.345663Z	Fetching products with query: 
2025-09-17T00:39:53.345724Z	    {
2025-09-17T00:39:53.34578Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:53.345836Z	        
2025-09-17T00:39:53.345891Z	    _id,
2025-09-17T00:39:53.345953Z	    _type,
2025-09-17T00:39:53.346006Z	    partNumber,
2025-09-17T00:39:53.346058Z	    "slug": slug.current,
2025-09-17T00:39:53.346111Z	    title,
2025-09-17T00:39:53.346165Z	    shortDescription,
2025-09-17T00:39:53.346235Z	    image,
2025-09-17T00:39:53.346322Z	    brand->{
2025-09-17T00:39:53.346391Z	      name,
2025-09-17T00:39:53.346448Z	      "slug": slug.current,
2025-09-17T00:39:53.346506Z	      logo
2025-09-17T00:39:53.346561Z	    },
2025-09-17T00:39:53.346848Z	    category->{
2025-09-17T00:39:53.347019Z	      name,
2025-09-17T00:39:53.347201Z	      "slug": slug.current
2025-09-17T00:39:53.347384Z	    },
2025-09-17T00:39:53.34755Z	    pricing{
2025-09-17T00:39:53.347684Z	      currency,
2025-09-17T00:39:53.348089Z	      tiers[]{
2025-09-17T00:39:53.348379Z	        quantity,
2025-09-17T00:39:53.348509Z	        price,
2025-09-17T00:39:53.34861Z	        unit
2025-09-17T00:39:53.348702Z	      },
2025-09-17T00:39:53.348803Z	      moq,
2025-09-17T00:39:53.349191Z	      leadTime,
2025-09-17T00:39:53.349323Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:53.349611Z	      "price": tiers[0].price,
2025-09-17T00:39:53.349837Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:53.350102Z	    },
2025-09-17T00:39:53.350192Z	    inventory{
2025-09-17T00:39:53.350435Z	      quantity,
2025-09-17T00:39:53.350648Z	      status,
2025-09-17T00:39:53.350874Z	      warehouse,
2025-09-17T00:39:53.351044Z	      lastUpdated,
2025-09-17T00:39:53.351157Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:53.351219Z	      "inStock": status == "in_stock",
2025-09-17T00:39:53.351291Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:53.351497Z	    },
2025-09-17T00:39:53.35157Z	    isActive,
2025-09-17T00:39:53.351634Z	    isFeatured,
2025-09-17T00:39:53.351797Z	    isNew,
2025-09-17T00:39:53.351899Z	    _createdAt,
2025-09-17T00:39:53.352008Z	    _updatedAt
2025-09-17T00:39:53.352116Z	  
2025-09-17T00:39:53.352348Z	      },
2025-09-17T00:39:53.352444Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-17T00:39:53.352514Z	    }
2025-09-17T00:39:53.352683Z	  
2025-09-17T00:39:53.352748Z	Query parameters: {
2025-09-17T00:39:53.352812Z	  limit: 8,
2025-09-17T00:39:53.352981Z	  offset: 0,
2025-09-17T00:39:53.353143Z	  category: undefined,
2025-09-17T00:39:53.353226Z	  brand: 'qualcomm',
2025-09-17T00:39:53.353419Z	  featured: undefined
2025-09-17T00:39:53.353491Z	}
2025-09-17T00:39:53.35355Z	Fetching solutions with query: 
2025-09-17T00:39:53.353814Z	    {
2025-09-17T00:39:53.35406Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:53.35418Z	        
2025-09-17T00:39:53.354389Z	    _id,
2025-09-17T00:39:53.354558Z	    title,
2025-09-17T00:39:53.354801Z	    "slug": slug.current,
2025-09-17T00:39:53.354986Z	    summary,
2025-09-17T00:39:53.355098Z	    description,
2025-09-17T00:39:53.355395Z	    coverImage,
2025-09-17T00:39:53.355504Z	    primaryBrand->{
2025-09-17T00:39:53.38783Z	      _id,
2025-09-17T00:39:53.38799Z	      name,
2025-09-17T00:39:53.388089Z	      "slug": slug.current,
2025-09-17T00:39:53.388178Z	      logo
2025-09-17T00:39:53.388262Z	    },
2025-09-17T00:39:53.388391Z	    relatedBrands[]->{
2025-09-17T00:39:53.38848Z	      _id,
2025-09-17T00:39:53.388564Z	      name,
2025-09-17T00:39:53.388643Z	      "slug": slug.current,
2025-09-17T00:39:53.388758Z	      logo
2025-09-17T00:39:53.389027Z	    },
2025-09-17T00:39:53.389151Z	    targetMarket,
2025-09-17T00:39:53.389238Z	    complexity,
2025-09-17T00:39:53.389361Z	    publishedAt,
2025-09-17T00:39:53.38946Z	    isPublished,
2025-09-17T00:39:53.389556Z	    isFeatured,
2025-09-17T00:39:53.389646Z	    viewCount,
2025-09-17T00:39:53.389747Z	    _createdAt,
2025-09-17T00:39:53.389833Z	    _updatedAt
2025-09-17T00:39:53.389921Z	  
2025-09-17T00:39:53.39001Z	      },
2025-09-17T00:39:53.390095Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-17T00:39:53.390188Z	    }
2025-09-17T00:39:53.390299Z	  
2025-09-17T00:39:53.390406Z	Query parameters: {
2025-09-17T00:39:53.390505Z	  limit: 4,
2025-09-17T00:39:53.390658Z	  offset: 0,
2025-09-17T00:39:53.390772Z	  targetMarket: undefined,
2025-09-17T00:39:53.390871Z	  brand: 'qualcomm',
2025-09-17T00:39:53.390965Z	  featured: undefined
2025-09-17T00:39:53.39107Z	}
2025-09-17T00:39:53.39116Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-17T00:39:53.39126Z	Fetching products with query: 
2025-09-17T00:39:53.391376Z	    {
2025-09-17T00:39:53.391468Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:53.391566Z	        
2025-09-17T00:39:53.391709Z	    _id,
2025-09-17T00:39:53.391819Z	    _type,
2025-09-17T00:39:53.39191Z	    partNumber,
2025-09-17T00:39:53.392004Z	    "slug": slug.current,
2025-09-17T00:39:53.392103Z	    title,
2025-09-17T00:39:53.392189Z	    shortDescription,
2025-09-17T00:39:53.392291Z	    image,
2025-09-17T00:39:53.392396Z	    brand->{
2025-09-17T00:39:53.392492Z	      name,
2025-09-17T00:39:53.392618Z	      "slug": slug.current,
2025-09-17T00:39:53.392723Z	      logo
2025-09-17T00:39:53.392816Z	    },
2025-09-17T00:39:53.392908Z	    category->{
2025-09-17T00:39:53.392999Z	      name,
2025-09-17T00:39:53.393083Z	      "slug": slug.current
2025-09-17T00:39:53.393167Z	    },
2025-09-17T00:39:53.393316Z	    pricing{
2025-09-17T00:39:53.393427Z	      currency,
2025-09-17T00:39:53.393531Z	      tiers[]{
2025-09-17T00:39:53.393622Z	        quantity,
2025-09-17T00:39:53.393722Z	        price,
2025-09-17T00:39:53.393818Z	        unit
2025-09-17T00:39:53.393906Z	      },
2025-09-17T00:39:53.394008Z	      moq,
2025-09-17T00:39:53.394096Z	      leadTime,
2025-09-17T00:39:53.394195Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:53.394311Z	      "price": tiers[0].price,
2025-09-17T00:39:53.394402Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:53.394494Z	    },
2025-09-17T00:39:53.394587Z	    inventory{
2025-09-17T00:39:53.394692Z	      quantity,
2025-09-17T00:39:53.39479Z	      status,
2025-09-17T00:39:53.394907Z	      warehouse,
2025-09-17T00:39:53.394997Z	      lastUpdated,
2025-09-17T00:39:53.395103Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:53.395195Z	      "inStock": status == "in_stock",
2025-09-17T00:39:53.395297Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:53.395386Z	    },
2025-09-17T00:39:53.395471Z	    isActive,
2025-09-17T00:39:53.395567Z	    isFeatured,
2025-09-17T00:39:53.395654Z	    isNew,
2025-09-17T00:39:53.395748Z	    _createdAt,
2025-09-17T00:39:53.395832Z	    _updatedAt
2025-09-17T00:39:53.395914Z	  
2025-09-17T00:39:53.395998Z	      },
2025-09-17T00:39:53.396096Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-17T00:39:53.396204Z	    }
2025-09-17T00:39:53.396317Z	  
2025-09-17T00:39:53.396415Z	Query parameters: {
2025-09-17T00:39:53.396509Z	  limit: 8,
2025-09-17T00:39:53.396602Z	  offset: 0,
2025-09-17T00:39:53.396703Z	  category: undefined,
2025-09-17T00:39:53.3968Z	  brand: 'sanrex',
2025-09-17T00:39:53.396893Z	  featured: undefined
2025-09-17T00:39:53.396986Z	}
2025-09-17T00:39:53.397079Z	Fetching solutions with query: 
2025-09-17T00:39:53.397175Z	    {
2025-09-17T00:39:53.397282Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:53.397389Z	        
2025-09-17T00:39:53.397485Z	    _id,
2025-09-17T00:39:53.397581Z	    title,
2025-09-17T00:39:53.397684Z	    "slug": slug.current,
2025-09-17T00:39:53.397787Z	    summary,
2025-09-17T00:39:53.397877Z	    description,
2025-09-17T00:39:53.397971Z	    coverImage,
2025-09-17T00:39:53.398086Z	    primaryBrand->{
2025-09-17T00:39:53.398178Z	      _id,
2025-09-17T00:39:53.398283Z	      name,
2025-09-17T00:39:53.398382Z	      "slug": slug.current,
2025-09-17T00:39:53.398483Z	      logo
2025-09-17T00:39:53.398576Z	    },
2025-09-17T00:39:53.398679Z	    relatedBrands[]->{
2025-09-17T00:39:53.398793Z	      _id,
2025-09-17T00:39:53.398888Z	      name,
2025-09-17T00:39:53.398978Z	      "slug": slug.current,
2025-09-17T00:39:53.399069Z	      logo
2025-09-17T00:39:53.399162Z	    },
2025-09-17T00:39:53.399253Z	    targetMarket,
2025-09-17T00:39:53.399364Z	    complexity,
2025-09-17T00:39:53.399457Z	    publishedAt,
2025-09-17T00:39:53.399549Z	    isPublished,
2025-09-17T00:39:53.399641Z	    isFeatured,
2025-09-17T00:39:53.399756Z	    viewCount,
2025-09-17T00:39:53.399849Z	    _createdAt,
2025-09-17T00:39:53.399938Z	    _updatedAt
2025-09-17T00:39:53.400029Z	  
2025-09-17T00:39:53.400119Z	      },
2025-09-17T00:39:53.400208Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-17T00:39:53.400326Z	    }
2025-09-17T00:39:53.400422Z	  
2025-09-17T00:39:53.400517Z	Query parameters: {
2025-09-17T00:39:53.400605Z	  limit: 4,
2025-09-17T00:39:53.400751Z	  offset: 0,
2025-09-17T00:39:53.400853Z	  targetMarket: undefined,
2025-09-17T00:39:53.400949Z	  brand: 'sanrex',
2025-09-17T00:39:53.401044Z	  featured: undefined
2025-09-17T00:39:53.401136Z	}
2025-09-17T00:39:53.401235Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-17T00:39:53.40135Z	Fetching products with query: 
2025-09-17T00:39:53.401443Z	    {
2025-09-17T00:39:53.401533Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:53.401627Z	        
2025-09-17T00:39:53.401732Z	    _id,
2025-09-17T00:39:53.401825Z	    _type,
2025-09-17T00:39:53.401919Z	    partNumber,
2025-09-17T00:39:53.402029Z	    "slug": slug.current,
2025-09-17T00:39:53.402135Z	    title,
2025-09-17T00:39:53.402434Z	    shortDescription,
2025-09-17T00:39:53.402602Z	    image,
2025-09-17T00:39:53.402737Z	    brand->{
2025-09-17T00:39:53.402856Z	      name,
2025-09-17T00:39:53.402975Z	      "slug": slug.current,
2025-09-17T00:39:53.403085Z	      logo
2025-09-17T00:39:53.403187Z	    },
2025-09-17T00:39:53.403309Z	    category->{
2025-09-17T00:39:53.403425Z	      name,
2025-09-17T00:39:53.403524Z	      "slug": slug.current
2025-09-17T00:39:53.403626Z	    },
2025-09-17T00:39:53.403733Z	    pricing{
2025-09-17T00:39:53.403832Z	      currency,
2025-09-17T00:39:53.403938Z	      tiers[]{
2025-09-17T00:39:53.404039Z	        quantity,
2025-09-17T00:39:53.404136Z	        price,
2025-09-17T00:39:53.404232Z	        unit
2025-09-17T00:39:53.404357Z	      },
2025-09-17T00:39:53.404458Z	      moq,
2025-09-17T00:39:53.404553Z	      leadTime,
2025-09-17T00:39:53.404655Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:53.404762Z	      "price": tiers[0].price,
2025-09-17T00:39:53.404875Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:53.404987Z	    },
2025-09-17T00:39:53.405083Z	    inventory{
2025-09-17T00:39:53.40518Z	      quantity,
2025-09-17T00:39:53.405313Z	      status,
2025-09-17T00:39:53.405415Z	      warehouse,
2025-09-17T00:39:53.405511Z	      lastUpdated,
2025-09-17T00:39:53.405615Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:53.405718Z	      "inStock": status == "in_stock",
2025-09-17T00:39:53.405819Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:53.405934Z	    },
2025-09-17T00:39:53.406045Z	    isActive,
2025-09-17T00:39:53.406152Z	    isFeatured,
2025-09-17T00:39:53.406264Z	    isNew,
2025-09-17T00:39:53.406396Z	    _createdAt,
2025-09-17T00:39:53.406529Z	    _updatedAt
2025-09-17T00:39:53.406658Z	  
2025-09-17T00:39:53.40676Z	      },
2025-09-17T00:39:53.406865Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-17T00:39:53.40699Z	    }
2025-09-17T00:39:53.407089Z	  
2025-09-17T00:39:53.40718Z	Query parameters: {
2025-09-17T00:39:53.407301Z	  limit: 8,
2025-09-17T00:39:53.407394Z	  offset: 0,
2025-09-17T00:39:53.40748Z	  category: undefined,
2025-09-17T00:39:53.407571Z	  brand: 'sanrex',
2025-09-17T00:39:53.407655Z	  featured: undefined
2025-09-17T00:39:53.407743Z	}
2025-09-17T00:39:53.407827Z	Fetching solutions with query: 
2025-09-17T00:39:53.407919Z	    {
2025-09-17T00:39:53.408011Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:53.40811Z	        
2025-09-17T00:39:53.408211Z	    _id,
2025-09-17T00:39:53.408321Z	    title,
2025-09-17T00:39:53.408447Z	    "slug": slug.current,
2025-09-17T00:39:53.408555Z	    summary,
2025-09-17T00:39:53.408657Z	    description,
2025-09-17T00:39:53.408761Z	    coverImage,
2025-09-17T00:39:53.408864Z	    primaryBrand->{
2025-09-17T00:39:53.408978Z	      _id,
2025-09-17T00:39:53.409098Z	      name,
2025-09-17T00:39:53.40921Z	      "slug": slug.current,
2025-09-17T00:39:53.409351Z	      logo
2025-09-17T00:39:53.409462Z	    },
2025-09-17T00:39:53.409575Z	    relatedBrands[]->{
2025-09-17T00:39:53.409668Z	      _id,
2025-09-17T00:39:53.409765Z	      name,
2025-09-17T00:39:53.409858Z	      "slug": slug.current,
2025-09-17T00:39:53.410225Z	      logo
2025-09-17T00:39:53.411187Z	    },
2025-09-17T00:39:53.411544Z	    targetMarket,
2025-09-17T00:39:53.411868Z	    complexity,
2025-09-17T00:39:53.412172Z	    publishedAt,
2025-09-17T00:39:53.412641Z	    isPublished,
2025-09-17T00:39:53.413075Z	    isFeatured,
2025-09-17T00:39:53.413182Z	    viewCount,
2025-09-17T00:39:53.413323Z	    _createdAt,
2025-09-17T00:39:53.413676Z	    _updatedAt
2025-09-17T00:39:53.413994Z	  
2025-09-17T00:39:53.41433Z	      },
2025-09-17T00:39:53.414657Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-17T00:39:53.414792Z	    }
2025-09-17T00:39:53.414903Z	  
2025-09-17T00:39:53.415006Z	Query parameters: {
2025-09-17T00:39:53.415112Z	  limit: 4,
2025-09-17T00:39:53.415213Z	  offset: 0,
2025-09-17T00:39:53.415342Z	  targetMarket: undefined,
2025-09-17T00:39:53.41545Z	  brand: 'sanrex',
2025-09-17T00:39:53.415553Z	  featured: undefined
2025-09-17T00:39:53.415664Z	}
2025-09-17T00:39:53.416106Z	✅ [getBrandData] Found brand: Sanrex
2025-09-17T00:39:53.416222Z	✅ [getBrandData] Found brand: Sanrex
2025-09-17T00:39:53.416351Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-17T00:39:53.416461Z	Fetching products with query: 
2025-09-17T00:39:53.416563Z	    {
2025-09-17T00:39:53.416649Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:53.416763Z	        
2025-09-17T00:39:53.416873Z	    _id,
2025-09-17T00:39:53.41699Z	    _type,
2025-09-17T00:39:53.417094Z	    partNumber,
2025-09-17T00:39:53.417193Z	    "slug": slug.current,
2025-09-17T00:39:53.417313Z	    title,
2025-09-17T00:39:53.417427Z	    shortDescription,
2025-09-17T00:39:53.417539Z	    image,
2025-09-17T00:39:53.418222Z	    brand->{
2025-09-17T00:39:53.41854Z	      name,
2025-09-17T00:39:53.418816Z	      "slug": slug.current,
2025-09-17T00:39:53.419257Z	      logo
2025-09-17T00:39:53.419544Z	    },
2025-09-17T00:39:53.419678Z	    category->{
2025-09-17T00:39:53.419835Z	      name,
2025-09-17T00:39:53.420235Z	      "slug": slug.current
2025-09-17T00:39:53.420372Z	    },
2025-09-17T00:39:53.420858Z	    pricing{
2025-09-17T00:39:53.421037Z	      currency,
2025-09-17T00:39:53.421517Z	      tiers[]{
2025-09-17T00:39:53.421865Z	        quantity,
2025-09-17T00:39:53.422017Z	        price,
2025-09-17T00:39:53.42252Z	        unit
2025-09-17T00:39:53.422879Z	      },
2025-09-17T00:39:53.423228Z	      moq,
2025-09-17T00:39:53.423655Z	      leadTime,
2025-09-17T00:39:53.423773Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:53.423868Z	      "price": tiers[0].price,
2025-09-17T00:39:53.423969Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:53.424062Z	    },
2025-09-17T00:39:53.424143Z	    inventory{
2025-09-17T00:39:53.424239Z	      quantity,
2025-09-17T00:39:53.424358Z	      status,
2025-09-17T00:39:53.424461Z	      warehouse,
2025-09-17T00:39:53.424554Z	      lastUpdated,
2025-09-17T00:39:53.424978Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:53.425111Z	      "inStock": status == "in_stock",
2025-09-17T00:39:53.42522Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:53.425394Z	    },
2025-09-17T00:39:53.425576Z	    isActive,
2025-09-17T00:39:53.425839Z	    isFeatured,
2025-09-17T00:39:53.426109Z	    isNew,
2025-09-17T00:39:53.426262Z	    _createdAt,
2025-09-17T00:39:53.426411Z	    _updatedAt
2025-09-17T00:39:53.426518Z	  
2025-09-17T00:39:53.426693Z	      },
2025-09-17T00:39:53.426866Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-17T00:39:53.427005Z	    }
2025-09-17T00:39:53.427256Z	  
2025-09-17T00:39:53.427412Z	Query parameters: {
2025-09-17T00:39:53.427552Z	  limit: 8,
2025-09-17T00:39:53.427694Z	  offset: 0,
2025-09-17T00:39:53.42786Z	  category: undefined,
2025-09-17T00:39:53.428002Z	  brand: 'semikron',
2025-09-17T00:39:53.428254Z	  featured: undefined
2025-09-17T00:39:53.428444Z	}
2025-09-17T00:39:53.428552Z	Fetching solutions with query: 
2025-09-17T00:39:53.42872Z	    {
2025-09-17T00:39:53.428855Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:53.429002Z	        
2025-09-17T00:39:53.429102Z	    _id,
2025-09-17T00:39:53.429244Z	    title,
2025-09-17T00:39:53.429397Z	    "slug": slug.current,
2025-09-17T00:39:53.429478Z	    summary,
2025-09-17T00:39:53.429635Z	    description,
2025-09-17T00:39:53.429764Z	    coverImage,
2025-09-17T00:39:53.4299Z	    primaryBrand->{
2025-09-17T00:39:53.430014Z	      _id,
2025-09-17T00:39:53.430111Z	      name,
2025-09-17T00:39:53.43023Z	      "slug": slug.current,
2025-09-17T00:39:53.430381Z	      logo
2025-09-17T00:39:53.430809Z	    },
2025-09-17T00:39:53.430952Z	    relatedBrands[]->{
2025-09-17T00:39:53.431066Z	      _id,
2025-09-17T00:39:53.431174Z	      name,
2025-09-17T00:39:53.431294Z	      "slug": slug.current,
2025-09-17T00:39:53.431414Z	      logo
2025-09-17T00:39:53.431506Z	    },
2025-09-17T00:39:53.431596Z	    targetMarket,
2025-09-17T00:39:53.431683Z	    complexity,
2025-09-17T00:39:53.431765Z	    publishedAt,
2025-09-17T00:39:53.431837Z	    isPublished,
2025-09-17T00:39:53.431932Z	    isFeatured,
2025-09-17T00:39:53.432023Z	    viewCount,
2025-09-17T00:39:53.432107Z	    _createdAt,
2025-09-17T00:39:53.432193Z	    _updatedAt
2025-09-17T00:39:53.432299Z	  
2025-09-17T00:39:53.432391Z	      },
2025-09-17T00:39:53.432484Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-17T00:39:53.432641Z	    }
2025-09-17T00:39:53.432769Z	  
2025-09-17T00:39:53.432872Z	Query parameters: {
2025-09-17T00:39:53.432987Z	  limit: 4,
2025-09-17T00:39:53.433093Z	  offset: 0,
2025-09-17T00:39:53.433204Z	  targetMarket: undefined,
2025-09-17T00:39:53.433324Z	  brand: 'semikron',
2025-09-17T00:39:53.43342Z	  featured: undefined
2025-09-17T00:39:53.433517Z	}
2025-09-17T00:39:53.433625Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-17T00:39:53.433729Z	Fetching products with query: 
2025-09-17T00:39:53.433834Z	    {
2025-09-17T00:39:53.433938Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:53.434038Z	        
2025-09-17T00:39:53.434132Z	    _id,
2025-09-17T00:39:53.434225Z	    _type,
2025-09-17T00:39:53.434342Z	    partNumber,
2025-09-17T00:39:53.434446Z	    "slug": slug.current,
2025-09-17T00:39:53.434548Z	    title,
2025-09-17T00:39:53.434643Z	    shortDescription,
2025-09-17T00:39:53.434739Z	    image,
2025-09-17T00:39:53.43484Z	    brand->{
2025-09-17T00:39:53.434972Z	      name,
2025-09-17T00:39:53.435088Z	      "slug": slug.current,
2025-09-17T00:39:53.43519Z	      logo
2025-09-17T00:39:53.435311Z	    },
2025-09-17T00:39:53.435423Z	    category->{
2025-09-17T00:39:53.435569Z	      name,
2025-09-17T00:39:53.435753Z	      "slug": slug.current
2025-09-17T00:39:53.435869Z	    },
2025-09-17T00:39:53.435979Z	    pricing{
2025-09-17T00:39:53.43608Z	      currency,
2025-09-17T00:39:53.436195Z	      tiers[]{
2025-09-17T00:39:53.436332Z	        quantity,
2025-09-17T00:39:53.436441Z	        price,
2025-09-17T00:39:53.436541Z	        unit
2025-09-17T00:39:53.436642Z	      },
2025-09-17T00:39:53.436753Z	      moq,
2025-09-17T00:39:53.436849Z	      leadTime,
2025-09-17T00:39:53.436951Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:53.437093Z	      "price": tiers[0].price,
2025-09-17T00:39:53.437208Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:53.437383Z	    },
2025-09-17T00:39:53.437506Z	    inventory{
2025-09-17T00:39:53.437623Z	      quantity,
2025-09-17T00:39:53.438753Z	      status,
2025-09-17T00:39:53.439504Z	      warehouse,
2025-09-17T00:39:53.439763Z	      lastUpdated,
2025-09-17T00:39:53.439906Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:53.44002Z	      "inStock": status == "in_stock",
2025-09-17T00:39:53.440129Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:53.440237Z	    },
2025-09-17T00:39:53.440357Z	    isActive,
2025-09-17T00:39:53.440459Z	    isFeatured,
2025-09-17T00:39:53.440578Z	    isNew,
2025-09-17T00:39:53.440692Z	    _createdAt,
2025-09-17T00:39:53.440801Z	    _updatedAt
2025-09-17T00:39:53.440923Z	  
2025-09-17T00:39:53.44104Z	      },
2025-09-17T00:39:53.441146Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-17T00:39:53.441251Z	    }
2025-09-17T00:39:53.441393Z	  
2025-09-17T00:39:53.441496Z	Query parameters: {
2025-09-17T00:39:53.441595Z	  limit: 8,
2025-09-17T00:39:53.441708Z	  offset: 0,
2025-09-17T00:39:53.441808Z	  category: undefined,
2025-09-17T00:39:53.441903Z	  brand: 'semikron',
2025-09-17T00:39:53.442002Z	  featured: undefined
2025-09-17T00:39:53.4421Z	}
2025-09-17T00:39:53.442197Z	Fetching solutions with query: 
2025-09-17T00:39:53.442321Z	    {
2025-09-17T00:39:53.442427Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:53.442531Z	        
2025-09-17T00:39:53.442638Z	    _id,
2025-09-17T00:39:53.442779Z	    title,
2025-09-17T00:39:53.442888Z	    "slug": slug.current,
2025-09-17T00:39:53.443005Z	    summary,
2025-09-17T00:39:53.443114Z	    description,
2025-09-17T00:39:53.443212Z	    coverImage,
2025-09-17T00:39:53.443328Z	    primaryBrand->{
2025-09-17T00:39:53.443426Z	      _id,
2025-09-17T00:39:53.443531Z	      name,
2025-09-17T00:39:53.443874Z	      "slug": slug.current,
2025-09-17T00:39:53.443985Z	      logo
2025-09-17T00:39:53.444084Z	    },
2025-09-17T00:39:53.444185Z	    relatedBrands[]->{
2025-09-17T00:39:53.4443Z	      _id,
2025-09-17T00:39:53.444418Z	      name,
2025-09-17T00:39:53.444524Z	      "slug": slug.current,
2025-09-17T00:39:53.444657Z	      logo
2025-09-17T00:39:53.444773Z	    },
2025-09-17T00:39:53.444873Z	    targetMarket,
2025-09-17T00:39:53.444982Z	    complexity,
2025-09-17T00:39:53.445103Z	    publishedAt,
2025-09-17T00:39:53.445204Z	    isPublished,
2025-09-17T00:39:53.445338Z	    isFeatured,
2025-09-17T00:39:53.445453Z	    viewCount,
2025-09-17T00:39:53.445563Z	    _createdAt,
2025-09-17T00:39:53.445674Z	    _updatedAt
2025-09-17T00:39:53.445772Z	  
2025-09-17T00:39:53.445863Z	      },
2025-09-17T00:39:53.445953Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-17T00:39:53.446051Z	    }
2025-09-17T00:39:53.446145Z	  
2025-09-17T00:39:53.446248Z	Query parameters: {
2025-09-17T00:39:53.446362Z	  limit: 4,
2025-09-17T00:39:53.44646Z	  offset: 0,
2025-09-17T00:39:53.44657Z	  targetMarket: undefined,
2025-09-17T00:39:53.446682Z	  brand: 'semikron',
2025-09-17T00:39:53.446779Z	  featured: undefined
2025-09-17T00:39:53.446868Z	}
2025-09-17T00:39:53.446969Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:53.447066Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:53.447182Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-17T00:39:53.447303Z	Fetching products with query: 
2025-09-17T00:39:53.447396Z	    {
2025-09-17T00:39:53.447489Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:53.447581Z	        
2025-09-17T00:39:53.447682Z	    _id,
2025-09-17T00:39:53.447774Z	    _type,
2025-09-17T00:39:53.447885Z	    partNumber,
2025-09-17T00:39:53.447992Z	    "slug": slug.current,
2025-09-17T00:39:53.448115Z	    title,
2025-09-17T00:39:53.448226Z	    shortDescription,
2025-09-17T00:39:53.448371Z	    image,
2025-09-17T00:39:53.448495Z	    brand->{
2025-09-17T00:39:53.448595Z	      name,
2025-09-17T00:39:53.4487Z	      "slug": slug.current,
2025-09-17T00:39:53.448802Z	      logo
2025-09-17T00:39:53.4489Z	    },
2025-09-17T00:39:53.449002Z	    category->{
2025-09-17T00:39:53.449113Z	      name,
2025-09-17T00:39:53.449207Z	      "slug": slug.current
2025-09-17T00:39:53.449332Z	    },
2025-09-17T00:39:53.449437Z	    pricing{
2025-09-17T00:39:53.449533Z	      currency,
2025-09-17T00:39:53.449638Z	      tiers[]{
2025-09-17T00:39:53.449744Z	        quantity,
2025-09-17T00:39:53.449832Z	        price,
2025-09-17T00:39:53.449929Z	        unit
2025-09-17T00:39:53.450025Z	      },
2025-09-17T00:39:53.450114Z	      moq,
2025-09-17T00:39:53.450209Z	      leadTime,
2025-09-17T00:39:53.450338Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:53.450551Z	      "price": tiers[0].price,
2025-09-17T00:39:53.450736Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:53.450967Z	    },
2025-09-17T00:39:53.452239Z	    inventory{
2025-09-17T00:39:53.452622Z	      quantity,
2025-09-17T00:39:53.453079Z	      status,
2025-09-17T00:39:53.453406Z	      warehouse,
2025-09-17T00:39:53.453512Z	      lastUpdated,
2025-09-17T00:39:53.453599Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:53.453695Z	      "inStock": status == "in_stock",
2025-09-17T00:39:53.453797Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:53.453876Z	    },
2025-09-17T00:39:53.45396Z	    isActive,
2025-09-17T00:39:53.454049Z	    isFeatured,
2025-09-17T00:39:53.454128Z	    isNew,
2025-09-17T00:39:53.454209Z	    _createdAt,
2025-09-17T00:39:53.454309Z	    _updatedAt
2025-09-17T00:39:53.454398Z	  
2025-09-17T00:39:53.454484Z	      },
2025-09-17T00:39:53.454572Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-17T00:39:53.454669Z	    }
2025-09-17T00:39:53.454764Z	  
2025-09-17T00:39:53.455002Z	Query parameters: {
2025-09-17T00:39:53.45514Z	  limit: 8,
2025-09-17T00:39:53.455212Z	  offset: 0,
2025-09-17T00:39:53.455317Z	  category: undefined,
2025-09-17T00:39:53.455461Z	  brand: 'ncc',
2025-09-17T00:39:53.455565Z	  featured: undefined
2025-09-17T00:39:53.455626Z	}
2025-09-17T00:39:53.45568Z	Fetching solutions with query: 
2025-09-17T00:39:53.455742Z	    {
2025-09-17T00:39:53.455805Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:53.455863Z	        
2025-09-17T00:39:53.455916Z	    _id,
2025-09-17T00:39:53.455969Z	    title,
2025-09-17T00:39:53.456026Z	    "slug": slug.current,
2025-09-17T00:39:53.456079Z	    summary,
2025-09-17T00:39:53.456132Z	    description,
2025-09-17T00:39:53.456184Z	    coverImage,
2025-09-17T00:39:53.456236Z	    primaryBrand->{
2025-09-17T00:39:53.456321Z	      _id,
2025-09-17T00:39:53.456381Z	      name,
2025-09-17T00:39:53.456434Z	      "slug": slug.current,
2025-09-17T00:39:53.456496Z	      logo
2025-09-17T00:39:53.456553Z	    },
2025-09-17T00:39:53.456608Z	    relatedBrands[]->{
2025-09-17T00:39:53.456661Z	      _id,
2025-09-17T00:39:53.456714Z	      name,
2025-09-17T00:39:53.456775Z	      "slug": slug.current,
2025-09-17T00:39:53.45683Z	      logo
2025-09-17T00:39:53.456883Z	    },
2025-09-17T00:39:53.456936Z	    targetMarket,
2025-09-17T00:39:53.456992Z	    complexity,
2025-09-17T00:39:53.457044Z	    publishedAt,
2025-09-17T00:39:53.457096Z	    isPublished,
2025-09-17T00:39:53.45715Z	    isFeatured,
2025-09-17T00:39:53.457201Z	    viewCount,
2025-09-17T00:39:53.457253Z	    _createdAt,
2025-09-17T00:39:53.457357Z	    _updatedAt
2025-09-17T00:39:53.457418Z	  
2025-09-17T00:39:53.457471Z	      },
2025-09-17T00:39:53.457526Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-17T00:39:53.457581Z	    }
2025-09-17T00:39:53.457636Z	  
2025-09-17T00:39:53.457688Z	Query parameters: {
2025-09-17T00:39:53.457761Z	  limit: 4,
2025-09-17T00:39:53.457816Z	  offset: 0,
2025-09-17T00:39:53.457875Z	  targetMarket: undefined,
2025-09-17T00:39:53.457928Z	  brand: 'ncc',
2025-09-17T00:39:53.45798Z	  featured: undefined
2025-09-17T00:39:53.458045Z	}
2025-09-17T00:39:53.4581Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-17T00:39:53.458155Z	Fetching products with query: 
2025-09-17T00:39:53.458211Z	    {
2025-09-17T00:39:53.458264Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:53.488151Z	        
2025-09-17T00:39:53.48832Z	    _id,
2025-09-17T00:39:53.488439Z	    _type,
2025-09-17T00:39:53.488582Z	    partNumber,
2025-09-17T00:39:53.488691Z	    "slug": slug.current,
2025-09-17T00:39:53.488797Z	    title,
2025-09-17T00:39:53.488912Z	    shortDescription,
2025-09-17T00:39:53.48911Z	    image,
2025-09-17T00:39:53.489252Z	    brand->{
2025-09-17T00:39:53.489398Z	      name,
2025-09-17T00:39:53.489501Z	      "slug": slug.current,
2025-09-17T00:39:53.489599Z	      logo
2025-09-17T00:39:53.489716Z	    },
2025-09-17T00:39:53.48983Z	    category->{
2025-09-17T00:39:53.48995Z	      name,
2025-09-17T00:39:53.490065Z	      "slug": slug.current
2025-09-17T00:39:53.490161Z	    },
2025-09-17T00:39:53.49028Z	    pricing{
2025-09-17T00:39:53.490409Z	      currency,
2025-09-17T00:39:53.490532Z	      tiers[]{
2025-09-17T00:39:53.490639Z	        quantity,
2025-09-17T00:39:53.490748Z	        price,
2025-09-17T00:39:53.490851Z	        unit
2025-09-17T00:39:53.490965Z	      },
2025-09-17T00:39:53.491263Z	      moq,
2025-09-17T00:39:53.491444Z	      leadTime,
2025-09-17T00:39:53.49161Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:53.491788Z	      "price": tiers[0].price,
2025-09-17T00:39:53.491956Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:53.492108Z	    },
2025-09-17T00:39:53.492264Z	    inventory{
2025-09-17T00:39:53.492426Z	      quantity,
2025-09-17T00:39:53.492656Z	      status,
2025-09-17T00:39:53.492785Z	      warehouse,
2025-09-17T00:39:53.492872Z	      lastUpdated,
2025-09-17T00:39:53.492975Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:53.493292Z	      "inStock": status == "in_stock",
2025-09-17T00:39:53.493545Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:53.493691Z	    },
2025-09-17T00:39:53.493862Z	    isActive,
2025-09-17T00:39:53.494002Z	    isFeatured,
2025-09-17T00:39:53.494102Z	    isNew,
2025-09-17T00:39:53.494253Z	    _createdAt,
2025-09-17T00:39:53.494423Z	    _updatedAt
2025-09-17T00:39:53.49453Z	  
2025-09-17T00:39:53.494644Z	      },
2025-09-17T00:39:53.4948Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-17T00:39:53.494939Z	    }
2025-09-17T00:39:53.495082Z	  
2025-09-17T00:39:53.495216Z	Query parameters: {
2025-09-17T00:39:53.495352Z	  limit: 8,
2025-09-17T00:39:53.495512Z	  offset: 0,
2025-09-17T00:39:53.495652Z	  category: undefined,
2025-09-17T00:39:53.495813Z	  brand: 'ncc',
2025-09-17T00:39:53.495916Z	  featured: undefined
2025-09-17T00:39:53.496005Z	}
2025-09-17T00:39:53.496088Z	Fetching solutions with query: 
2025-09-17T00:39:53.496168Z	    {
2025-09-17T00:39:53.49626Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:53.49642Z	        
2025-09-17T00:39:53.496581Z	    _id,
2025-09-17T00:39:53.496747Z	    title,
2025-09-17T00:39:53.496846Z	    "slug": slug.current,
2025-09-17T00:39:53.496934Z	    summary,
2025-09-17T00:39:53.497022Z	    description,
2025-09-17T00:39:53.497106Z	    coverImage,
2025-09-17T00:39:53.49719Z	    primaryBrand->{
2025-09-17T00:39:53.497294Z	      _id,
2025-09-17T00:39:53.49739Z	      name,
2025-09-17T00:39:53.497485Z	      "slug": slug.current,
2025-09-17T00:39:53.497643Z	      logo
2025-09-17T00:39:53.497777Z	    },
2025-09-17T00:39:53.497896Z	    relatedBrands[]->{
2025-09-17T00:39:53.497995Z	      _id,
2025-09-17T00:39:53.498102Z	      name,
2025-09-17T00:39:53.49819Z	      "slug": slug.current,
2025-09-17T00:39:53.498289Z	      logo
2025-09-17T00:39:53.498394Z	    },
2025-09-17T00:39:53.498489Z	    targetMarket,
2025-09-17T00:39:53.498595Z	    complexity,
2025-09-17T00:39:53.4987Z	    publishedAt,
2025-09-17T00:39:53.498798Z	    isPublished,
2025-09-17T00:39:53.498894Z	    isFeatured,
2025-09-17T00:39:53.499006Z	    viewCount,
2025-09-17T00:39:53.499154Z	    _createdAt,
2025-09-17T00:39:53.499264Z	    _updatedAt
2025-09-17T00:39:53.499399Z	  
2025-09-17T00:39:53.499528Z	      },
2025-09-17T00:39:53.499625Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-17T00:39:53.499765Z	    }
2025-09-17T00:39:53.499883Z	  
2025-09-17T00:39:53.500023Z	Query parameters: {
2025-09-17T00:39:53.500147Z	  limit: 4,
2025-09-17T00:39:53.50032Z	  offset: 0,
2025-09-17T00:39:53.500451Z	  targetMarket: undefined,
2025-09-17T00:39:53.500574Z	  brand: 'ncc',
2025-09-17T00:39:53.500701Z	  featured: undefined
2025-09-17T00:39:53.500846Z	}
2025-09-17T00:39:53.500977Z	✅ [getBrandData] Found brand: Epcos
2025-09-17T00:39:53.501095Z	✅ [getBrandData] Found brand: Epcos
2025-09-17T00:39:53.501252Z	✅ [getBrandData] Found brand: PI
2025-09-17T00:39:53.501394Z	✅ [getBrandData] Found brand: PI
2025-09-17T00:39:53.501555Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:53.501704Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:53.501981Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:53.502128Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:53.598838Z	✅ [getBrandData] Found brand: Semikron
2025-09-17T00:39:53.599335Z	✅ [getBrandData] Found brand: Semikron
2025-09-17T00:39:53.599488Z	Products fetch result: {
2025-09-17T00:39:53.599786Z	  totalProducts: 1,
2025-09-17T00:39:53.599893Z	  fetchedProducts: 1,
2025-09-17T00:39:53.599964Z	  firstProduct: {
2025-09-17T00:39:53.600021Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-17T00:39:53.600374Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-17T00:39:53.600735Z	    _type: 'product',
2025-09-17T00:39:53.601124Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-17T00:39:53.601497Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-17T00:39:53.601696Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:53.602301Z	    image: null,
2025-09-17T00:39:53.602785Z	    inventory: {
2025-09-17T00:39:53.603755Z	      inStock: true,
2025-09-17T00:39:53.603968Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-17T00:39:53.604189Z	      quantity: 0,
2025-09-17T00:39:53.604367Z	      status: 'in_stock',
2025-09-17T00:39:53.604484Z	      warehouse: null
2025-09-17T00:39:53.604596Z	    },
2025-09-17T00:39:53.60471Z	    isActive: true,
2025-09-17T00:39:53.604817Z	    isFeatured: false,
2025-09-17T00:39:53.604931Z	    isNew: false,
2025-09-17T00:39:53.605043Z	    partNumber: 'SKKT106/16E',
2025-09-17T00:39:53.605155Z	    pricing: {
2025-09-17T00:39:53.605254Z	      currency: 'CNY',
2025-09-17T00:39:53.605388Z	      leadTime: null,
2025-09-17T00:39:53.60553Z	      moq: null,
2025-09-17T00:39:53.605702Z	      price: null,
2025-09-17T00:39:53.605862Z	      tiers: null
2025-09-17T00:39:53.606038Z	    },
2025-09-17T00:39:53.606212Z	    shortDescription: 'SKKT106/16E',
2025-09-17T00:39:53.60639Z	    slug: 'SKKT106/16E',
2025-09-17T00:39:53.606552Z	    title: 'SKKT106/16E'
2025-09-17T00:39:53.606744Z	  }
2025-09-17T00:39:53.606909Z	}
2025-09-17T00:39:53.607023Z	Products fetch result: {
2025-09-17T00:39:53.607123Z	  totalProducts: 1,
2025-09-17T00:39:53.60728Z	  fetchedProducts: 1,
2025-09-17T00:39:53.607495Z	  firstProduct: {
2025-09-17T00:39:53.60778Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-17T00:39:53.607962Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-17T00:39:53.608135Z	    _type: 'product',
2025-09-17T00:39:53.608694Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-17T00:39:53.608893Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-17T00:39:53.609045Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:53.609186Z	    image: null,
2025-09-17T00:39:53.609323Z	    inventory: {
2025-09-17T00:39:53.609435Z	      inStock: true,
2025-09-17T00:39:53.609546Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-17T00:39:53.609666Z	      quantity: 0,
2025-09-17T00:39:53.609774Z	      status: 'in_stock',
2025-09-17T00:39:53.609882Z	      warehouse: null
2025-09-17T00:39:53.609994Z	    },
2025-09-17T00:39:53.610169Z	    isActive: true,
2025-09-17T00:39:53.61031Z	    isFeatured: false,
2025-09-17T00:39:53.610429Z	    isNew: false,
2025-09-17T00:39:53.610539Z	    partNumber: 'SKKT106/16E',
2025-09-17T00:39:53.610648Z	    pricing: {
2025-09-17T00:39:53.610755Z	      currency: 'CNY',
2025-09-17T00:39:53.610878Z	      leadTime: null,
2025-09-17T00:39:53.611002Z	      moq: null,
2025-09-17T00:39:53.611105Z	      price: null,
2025-09-17T00:39:53.611211Z	      tiers: null
2025-09-17T00:39:53.611335Z	    },
2025-09-17T00:39:53.611438Z	    shortDescription: 'SKKT106/16E',
2025-09-17T00:39:53.611546Z	    slug: 'SKKT106/16E',
2025-09-17T00:39:53.611652Z	    title: 'SKKT106/16E'
2025-09-17T00:39:53.611758Z	  }
2025-09-17T00:39:53.611877Z	}
2025-09-17T00:39:53.612011Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-17T00:39:53.612115Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-17T00:39:53.61222Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:53.612347Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:53.612459Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:53.612596Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:53.612763Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:53.613538Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:53.61371Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:53.614169Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:53.614306Z	✅ [getBrandData] Found brand: ncc
2025-09-17T00:39:53.614409Z	✅ [getBrandData] Found brand: ncc
2025-09-17T00:39:53.614528Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:53.615037Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:53.615375Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-17T00:39:53.615706Z	Fetching products with query: 
2025-09-17T00:39:53.615826Z	    {
2025-09-17T00:39:53.615943Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:53.616053Z	        
2025-09-17T00:39:53.616151Z	    _id,
2025-09-17T00:39:53.616251Z	    _type,
2025-09-17T00:39:53.616368Z	    partNumber,
2025-09-17T00:39:53.61644Z	    "slug": slug.current,
2025-09-17T00:39:53.616498Z	    title,
2025-09-17T00:39:53.616556Z	    shortDescription,
2025-09-17T00:39:53.616647Z	    image,
2025-09-17T00:39:53.616756Z	    brand->{
2025-09-17T00:39:53.616885Z	      name,
2025-09-17T00:39:53.617057Z	      "slug": slug.current,
2025-09-17T00:39:53.617178Z	      logo
2025-09-17T00:39:53.618072Z	    },
2025-09-17T00:39:53.618218Z	    category->{
2025-09-17T00:39:53.618352Z	      name,
2025-09-17T00:39:53.618458Z	      "slug": slug.current
2025-09-17T00:39:53.618555Z	    },
2025-09-17T00:39:53.618652Z	    pricing{
2025-09-17T00:39:53.618746Z	      currency,
2025-09-17T00:39:53.618853Z	      tiers[]{
2025-09-17T00:39:53.618963Z	        quantity,
2025-09-17T00:39:53.61906Z	        price,
2025-09-17T00:39:53.619155Z	        unit
2025-09-17T00:39:53.619243Z	      },
2025-09-17T00:39:53.619499Z	      moq,
2025-09-17T00:39:53.619609Z	      leadTime,
2025-09-17T00:39:53.619738Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:53.619897Z	      "price": tiers[0].price,
2025-09-17T00:39:53.620043Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:53.621459Z	    },
2025-09-17T00:39:53.621597Z	    inventory{
2025-09-17T00:39:53.621714Z	      quantity,
2025-09-17T00:39:53.621835Z	      status,
2025-09-17T00:39:53.622007Z	      warehouse,
2025-09-17T00:39:53.622214Z	      lastUpdated,
2025-09-17T00:39:53.622356Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:53.622506Z	      "inStock": status == "in_stock",
2025-09-17T00:39:53.62263Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:53.622858Z	    },
2025-09-17T00:39:53.624394Z	    isActive,
2025-09-17T00:39:53.624686Z	    isFeatured,
2025-09-17T00:39:53.624972Z	    isNew,
2025-09-17T00:39:53.625115Z	    _createdAt,
2025-09-17T00:39:53.625214Z	    _updatedAt
2025-09-17T00:39:53.625341Z	  
2025-09-17T00:39:53.625446Z	      },
2025-09-17T00:39:53.625543Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-17T00:39:53.625641Z	    }
2025-09-17T00:39:53.625729Z	  
2025-09-17T00:39:53.625805Z	Query parameters: {
2025-09-17T00:39:53.625893Z	  limit: 8,
2025-09-17T00:39:53.625983Z	  offset: 0,
2025-09-17T00:39:53.626077Z	  category: undefined,
2025-09-17T00:39:53.62617Z	  brand: '英飞凌',
2025-09-17T00:39:53.626264Z	  featured: undefined
2025-09-17T00:39:53.626405Z	}
2025-09-17T00:39:53.626505Z	Fetching solutions with query: 
2025-09-17T00:39:53.62664Z	    {
2025-09-17T00:39:53.626802Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:53.62698Z	        
2025-09-17T00:39:53.62708Z	    _id,
2025-09-17T00:39:53.627174Z	    title,
2025-09-17T00:39:53.627266Z	    "slug": slug.current,
2025-09-17T00:39:53.627396Z	    summary,
2025-09-17T00:39:53.627498Z	    description,
2025-09-17T00:39:53.627599Z	    coverImage,
2025-09-17T00:39:53.627713Z	    primaryBrand->{
2025-09-17T00:39:53.627811Z	      _id,
2025-09-17T00:39:53.627902Z	      name,
2025-09-17T00:39:53.627996Z	      "slug": slug.current,
2025-09-17T00:39:53.62809Z	      logo
2025-09-17T00:39:53.628177Z	    },
2025-09-17T00:39:53.628292Z	    relatedBrands[]->{
2025-09-17T00:39:53.62843Z	      _id,
2025-09-17T00:39:53.628575Z	      name,
2025-09-17T00:39:53.628677Z	      "slug": slug.current,
2025-09-17T00:39:53.628784Z	      logo
2025-09-17T00:39:53.628871Z	    },
2025-09-17T00:39:53.628954Z	    targetMarket,
2025-09-17T00:39:53.629041Z	    complexity,
2025-09-17T00:39:53.629131Z	    publishedAt,
2025-09-17T00:39:53.629224Z	    isPublished,
2025-09-17T00:39:53.629348Z	    isFeatured,
2025-09-17T00:39:53.629444Z	    viewCount,
2025-09-17T00:39:53.629548Z	    _createdAt,
2025-09-17T00:39:53.629646Z	    _updatedAt
2025-09-17T00:39:53.62977Z	  
2025-09-17T00:39:53.629933Z	      },
2025-09-17T00:39:53.630186Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-17T00:39:53.631426Z	    }
2025-09-17T00:39:53.631559Z	  
2025-09-17T00:39:53.631789Z	Query parameters: {
2025-09-17T00:39:53.631881Z	  limit: 4,
2025-09-17T00:39:53.631997Z	  offset: 0,
2025-09-17T00:39:53.6321Z	  targetMarket: undefined,
2025-09-17T00:39:53.632204Z	  brand: '英飞凌',
2025-09-17T00:39:53.632349Z	  featured: undefined
2025-09-17T00:39:53.632462Z	}
2025-09-17T00:39:53.63261Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-17T00:39:53.632727Z	Fetching products with query: 
2025-09-17T00:39:53.632867Z	    {
2025-09-17T00:39:53.633001Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:53.633119Z	        
2025-09-17T00:39:53.633223Z	    _id,
2025-09-17T00:39:53.633355Z	    _type,
2025-09-17T00:39:53.633465Z	    partNumber,
2025-09-17T00:39:53.633569Z	    "slug": slug.current,
2025-09-17T00:39:53.633668Z	    title,
2025-09-17T00:39:53.633765Z	    shortDescription,
2025-09-17T00:39:53.633955Z	    image,
2025-09-17T00:39:53.634075Z	    brand->{
2025-09-17T00:39:53.634182Z	      name,
2025-09-17T00:39:53.63433Z	      "slug": slug.current,
2025-09-17T00:39:53.634444Z	      logo
2025-09-17T00:39:53.634547Z	    },
2025-09-17T00:39:53.634651Z	    category->{
2025-09-17T00:39:53.634756Z	      name,
2025-09-17T00:39:53.634856Z	      "slug": slug.current
2025-09-17T00:39:53.63497Z	    },
2025-09-17T00:39:53.635089Z	    pricing{
2025-09-17T00:39:53.635196Z	      currency,
2025-09-17T00:39:53.63536Z	      tiers[]{
2025-09-17T00:39:53.635482Z	        quantity,
2025-09-17T00:39:53.635595Z	        price,
2025-09-17T00:39:53.635704Z	        unit
2025-09-17T00:39:53.635805Z	      },
2025-09-17T00:39:53.635922Z	      moq,
2025-09-17T00:39:53.636033Z	      leadTime,
2025-09-17T00:39:53.636144Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:53.63625Z	      "price": tiers[0].price,
2025-09-17T00:39:53.636922Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:53.637055Z	    },
2025-09-17T00:39:53.637155Z	    inventory{
2025-09-17T00:39:53.637247Z	      quantity,
2025-09-17T00:39:53.637364Z	      status,
2025-09-17T00:39:53.637459Z	      warehouse,
2025-09-17T00:39:53.637552Z	      lastUpdated,
2025-09-17T00:39:53.637643Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:53.638102Z	      "inStock": status == "in_stock",
2025-09-17T00:39:53.638231Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:53.638365Z	    },
2025-09-17T00:39:53.638456Z	    isActive,
2025-09-17T00:39:53.638551Z	    isFeatured,
2025-09-17T00:39:53.638645Z	    isNew,
2025-09-17T00:39:53.638735Z	    _createdAt,
2025-09-17T00:39:53.638824Z	    _updatedAt
2025-09-17T00:39:53.63892Z	  
2025-09-17T00:39:53.639Z	      },
2025-09-17T00:39:53.63908Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-17T00:39:53.639168Z	    }
2025-09-17T00:39:53.639246Z	  
2025-09-17T00:39:53.639352Z	Query parameters: {
2025-09-17T00:39:53.639446Z	  limit: 8,
2025-09-17T00:39:53.639531Z	  offset: 0,
2025-09-17T00:39:53.639619Z	  category: undefined,
2025-09-17T00:39:53.639706Z	  brand: '英飞凌',
2025-09-17T00:39:53.639787Z	  featured: undefined
2025-09-17T00:39:53.639861Z	}
2025-09-17T00:39:53.639952Z	Fetching solutions with query: 
2025-09-17T00:39:53.640035Z	    {
2025-09-17T00:39:53.640123Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:53.640218Z	        
2025-09-17T00:39:53.640324Z	    _id,
2025-09-17T00:39:53.640412Z	    title,
2025-09-17T00:39:53.640502Z	    "slug": slug.current,
2025-09-17T00:39:53.641546Z	    summary,
2025-09-17T00:39:53.641706Z	    description,
2025-09-17T00:39:53.641832Z	    coverImage,
2025-09-17T00:39:53.641954Z	    primaryBrand->{
2025-09-17T00:39:53.642072Z	      _id,
2025-09-17T00:39:53.642182Z	      name,
2025-09-17T00:39:53.64231Z	      "slug": slug.current,
2025-09-17T00:39:53.642419Z	      logo
2025-09-17T00:39:53.642524Z	    },
2025-09-17T00:39:53.642632Z	    relatedBrands[]->{
2025-09-17T00:39:53.642737Z	      _id,
2025-09-17T00:39:53.642844Z	      name,
2025-09-17T00:39:53.643024Z	      "slug": slug.current,
2025-09-17T00:39:53.643141Z	      logo
2025-09-17T00:39:53.643256Z	    },
2025-09-17T00:39:53.643387Z	    targetMarket,
2025-09-17T00:39:53.643496Z	    complexity,
2025-09-17T00:39:53.645066Z	    publishedAt,
2025-09-17T00:39:53.645457Z	    isPublished,
2025-09-17T00:39:53.64562Z	    isFeatured,
2025-09-17T00:39:53.645742Z	    viewCount,
2025-09-17T00:39:53.645839Z	    _createdAt,
2025-09-17T00:39:53.645936Z	    _updatedAt
2025-09-17T00:39:53.646027Z	  
2025-09-17T00:39:53.646108Z	      },
2025-09-17T00:39:53.646191Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-17T00:39:53.6463Z	    }
2025-09-17T00:39:53.646383Z	  
2025-09-17T00:39:53.646463Z	Query parameters: {
2025-09-17T00:39:53.64654Z	  limit: 4,
2025-09-17T00:39:53.646621Z	  offset: 0,
2025-09-17T00:39:53.646702Z	  targetMarket: undefined,
2025-09-17T00:39:53.646784Z	  brand: '英飞凌',
2025-09-17T00:39:53.646863Z	  featured: undefined
2025-09-17T00:39:53.646955Z	}
2025-09-17T00:39:53.647047Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:53.647144Z	Fetching products with query: 
2025-09-17T00:39:53.647246Z	    {
2025-09-17T00:39:53.648044Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:53.648173Z	        
2025-09-17T00:39:53.648313Z	    _id,
2025-09-17T00:39:53.687695Z	    _type,
2025-09-17T00:39:53.687939Z	    partNumber,
2025-09-17T00:39:53.688045Z	    "slug": slug.current,
2025-09-17T00:39:53.688147Z	    title,
2025-09-17T00:39:53.688244Z	    shortDescription,
2025-09-17T00:39:53.689727Z	    image,
2025-09-17T00:39:53.690004Z	    brand->{
2025-09-17T00:39:53.690248Z	      name,
2025-09-17T00:39:53.690749Z	      "slug": slug.current,
2025-09-17T00:39:53.690891Z	      logo
2025-09-17T00:39:53.691055Z	    },
2025-09-17T00:39:53.69116Z	    category->{
2025-09-17T00:39:53.691388Z	      name,
2025-09-17T00:39:53.69149Z	      "slug": slug.current
2025-09-17T00:39:53.69206Z	    },
2025-09-17T00:39:53.694063Z	    pricing{
2025-09-17T00:39:53.694618Z	      currency,
2025-09-17T00:39:53.695369Z	      tiers[]{
2025-09-17T00:39:53.69563Z	        quantity,
2025-09-17T00:39:53.696036Z	        price,
2025-09-17T00:39:53.696348Z	        unit
2025-09-17T00:39:53.696669Z	      },
2025-09-17T00:39:53.696798Z	      moq,
2025-09-17T00:39:53.697055Z	      leadTime,
2025-09-17T00:39:53.697629Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:53.697747Z	      "price": tiers[0].price,
2025-09-17T00:39:53.698053Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:53.698465Z	    },
2025-09-17T00:39:53.698604Z	    inventory{
2025-09-17T00:39:53.699063Z	      quantity,
2025-09-17T00:39:53.69919Z	      status,
2025-09-17T00:39:53.699343Z	      warehouse,
2025-09-17T00:39:53.699617Z	      lastUpdated,
2025-09-17T00:39:53.699727Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:53.700003Z	      "inStock": status == "in_stock",
2025-09-17T00:39:53.700255Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:53.700941Z	    },
2025-09-17T00:39:53.701664Z	    isActive,
2025-09-17T00:39:53.70185Z	    isFeatured,
2025-09-17T00:39:53.702126Z	    isNew,
2025-09-17T00:39:53.70238Z	    _createdAt,
2025-09-17T00:39:53.702513Z	    _updatedAt
2025-09-17T00:39:53.702624Z	  
2025-09-17T00:39:53.702718Z	      },
2025-09-17T00:39:53.702814Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-17T00:39:53.702935Z	    }
2025-09-17T00:39:53.703061Z	  
2025-09-17T00:39:53.703163Z	Query parameters: {
2025-09-17T00:39:53.703624Z	  limit: 8,
2025-09-17T00:39:53.704045Z	  offset: 0,
2025-09-17T00:39:53.704199Z	  category: undefined,
2025-09-17T00:39:53.704707Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:39:53.705026Z	  featured: undefined
2025-09-17T00:39:53.705195Z	}
2025-09-17T00:39:53.705345Z	Fetching solutions with query: 
2025-09-17T00:39:53.705506Z	    {
2025-09-17T00:39:53.705664Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:53.705965Z	        
2025-09-17T00:39:53.706082Z	    _id,
2025-09-17T00:39:53.706306Z	    title,
2025-09-17T00:39:53.706464Z	    "slug": slug.current,
2025-09-17T00:39:53.706696Z	    summary,
2025-09-17T00:39:53.706909Z	    description,
2025-09-17T00:39:53.707065Z	    coverImage,
2025-09-17T00:39:53.707162Z	    primaryBrand->{
2025-09-17T00:39:53.707255Z	      _id,
2025-09-17T00:39:53.707491Z	      name,
2025-09-17T00:39:53.707608Z	      "slug": slug.current,
2025-09-17T00:39:53.708041Z	      logo
2025-09-17T00:39:53.708217Z	    },
2025-09-17T00:39:53.708377Z	    relatedBrands[]->{
2025-09-17T00:39:53.708554Z	      _id,
2025-09-17T00:39:53.708673Z	      name,
2025-09-17T00:39:53.708925Z	      "slug": slug.current,
2025-09-17T00:39:53.709125Z	      logo
2025-09-17T00:39:53.709264Z	    },
2025-09-17T00:39:53.709397Z	    targetMarket,
2025-09-17T00:39:53.709502Z	    complexity,
2025-09-17T00:39:53.709602Z	    publishedAt,
2025-09-17T00:39:53.709704Z	    isPublished,
2025-09-17T00:39:53.709824Z	    isFeatured,
2025-09-17T00:39:53.70994Z	    viewCount,
2025-09-17T00:39:53.710038Z	    _createdAt,
2025-09-17T00:39:53.710134Z	    _updatedAt
2025-09-17T00:39:53.710228Z	  
2025-09-17T00:39:53.710849Z	      },
2025-09-17T00:39:53.711009Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-17T00:39:53.711175Z	    }
2025-09-17T00:39:53.711568Z	  
2025-09-17T00:39:53.711708Z	Query parameters: {
2025-09-17T00:39:53.711814Z	  limit: 4,
2025-09-17T00:39:53.711951Z	  offset: 0,
2025-09-17T00:39:53.712051Z	  targetMarket: undefined,
2025-09-17T00:39:53.712145Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:39:53.712291Z	  featured: undefined
2025-09-17T00:39:53.712714Z	}
2025-09-17T00:39:53.712847Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:53.713024Z	Fetching products with query: 
2025-09-17T00:39:53.713136Z	    {
2025-09-17T00:39:53.713243Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:53.713393Z	        
2025-09-17T00:39:53.713529Z	    _id,
2025-09-17T00:39:53.713647Z	    _type,
2025-09-17T00:39:53.713755Z	    partNumber,
2025-09-17T00:39:53.713858Z	    "slug": slug.current,
2025-09-17T00:39:53.713975Z	    title,
2025-09-17T00:39:53.71407Z	    shortDescription,
2025-09-17T00:39:53.714154Z	    image,
2025-09-17T00:39:53.714234Z	    brand->{
2025-09-17T00:39:53.714347Z	      name,
2025-09-17T00:39:53.714456Z	      "slug": slug.current,
2025-09-17T00:39:53.714577Z	      logo
2025-09-17T00:39:53.714686Z	    },
2025-09-17T00:39:53.714796Z	    category->{
2025-09-17T00:39:53.714916Z	      name,
2025-09-17T00:39:53.715039Z	      "slug": slug.current
2025-09-17T00:39:53.71516Z	    },
2025-09-17T00:39:53.715288Z	    pricing{
2025-09-17T00:39:53.715407Z	      currency,
2025-09-17T00:39:53.715522Z	      tiers[]{
2025-09-17T00:39:53.715647Z	        quantity,
2025-09-17T00:39:53.715766Z	        price,
2025-09-17T00:39:53.715881Z	        unit
2025-09-17T00:39:53.71599Z	      },
2025-09-17T00:39:53.716074Z	      moq,
2025-09-17T00:39:53.716161Z	      leadTime,
2025-09-17T00:39:53.71629Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:53.716412Z	      "price": tiers[0].price,
2025-09-17T00:39:53.716531Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:53.716637Z	    },
2025-09-17T00:39:53.716754Z	    inventory{
2025-09-17T00:39:53.716865Z	      quantity,
2025-09-17T00:39:53.716982Z	      status,
2025-09-17T00:39:53.717084Z	      warehouse,
2025-09-17T00:39:53.717189Z	      lastUpdated,
2025-09-17T00:39:53.717295Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:53.717398Z	      "inStock": status == "in_stock",
2025-09-17T00:39:53.717583Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:53.717672Z	    },
2025-09-17T00:39:53.717875Z	    isActive,
2025-09-17T00:39:53.717966Z	    isFeatured,
2025-09-17T00:39:53.718198Z	    isNew,
2025-09-17T00:39:53.718419Z	    _createdAt,
2025-09-17T00:39:53.718601Z	    _updatedAt
2025-09-17T00:39:53.718914Z	  
2025-09-17T00:39:53.719097Z	      },
2025-09-17T00:39:53.719185Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-17T00:39:53.719339Z	    }
2025-09-17T00:39:53.719708Z	  
2025-09-17T00:39:53.720047Z	Query parameters: {
2025-09-17T00:39:53.720186Z	  limit: 8,
2025-09-17T00:39:53.72038Z	  offset: 0,
2025-09-17T00:39:53.720491Z	  category: undefined,
2025-09-17T00:39:53.720597Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:39:53.720704Z	  featured: undefined
2025-09-17T00:39:53.720843Z	}
2025-09-17T00:39:53.720946Z	Fetching solutions with query: 
2025-09-17T00:39:53.721107Z	    {
2025-09-17T00:39:53.721185Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:53.721303Z	        
2025-09-17T00:39:53.721556Z	    _id,
2025-09-17T00:39:53.721699Z	    title,
2025-09-17T00:39:53.721907Z	    "slug": slug.current,
2025-09-17T00:39:53.722006Z	    summary,
2025-09-17T00:39:53.722256Z	    description,
2025-09-17T00:39:53.722774Z	    coverImage,
2025-09-17T00:39:53.722904Z	    primaryBrand->{
2025-09-17T00:39:53.723056Z	      _id,
2025-09-17T00:39:53.723209Z	      name,
2025-09-17T00:39:53.723515Z	      "slug": slug.current,
2025-09-17T00:39:53.723673Z	      logo
2025-09-17T00:39:53.723765Z	    },
2025-09-17T00:39:53.723861Z	    relatedBrands[]->{
2025-09-17T00:39:53.723995Z	      _id,
2025-09-17T00:39:53.724128Z	      name,
2025-09-17T00:39:53.724297Z	      "slug": slug.current,
2025-09-17T00:39:53.724599Z	      logo
2025-09-17T00:39:53.724688Z	    },
2025-09-17T00:39:53.724747Z	    targetMarket,
2025-09-17T00:39:53.72482Z	    complexity,
2025-09-17T00:39:53.724947Z	    publishedAt,
2025-09-17T00:39:53.725071Z	    isPublished,
2025-09-17T00:39:53.725173Z	    isFeatured,
2025-09-17T00:39:53.725646Z	    viewCount,
2025-09-17T00:39:53.72573Z	    _createdAt,
2025-09-17T00:39:53.725792Z	    _updatedAt
2025-09-17T00:39:53.725848Z	  
2025-09-17T00:39:53.725947Z	      },
2025-09-17T00:39:53.726047Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-17T00:39:53.726123Z	    }
2025-09-17T00:39:53.726188Z	  
2025-09-17T00:39:53.726369Z	Query parameters: {
2025-09-17T00:39:53.726536Z	  limit: 4,
2025-09-17T00:39:53.726619Z	  offset: 0,
2025-09-17T00:39:53.72672Z	  targetMarket: undefined,
2025-09-17T00:39:53.726855Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:39:53.726931Z	  featured: undefined
2025-09-17T00:39:53.727009Z	}
2025-09-17T00:39:53.72707Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-17T00:39:53.727151Z	Fetching products with query: 
2025-09-17T00:39:53.727324Z	    {
2025-09-17T00:39:53.727402Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:53.727468Z	        
2025-09-17T00:39:53.727525Z	    _id,
2025-09-17T00:39:53.72762Z	    _type,
2025-09-17T00:39:53.727717Z	    partNumber,
2025-09-17T00:39:53.727809Z	    "slug": slug.current,
2025-09-17T00:39:53.727909Z	    title,
2025-09-17T00:39:53.728015Z	    shortDescription,
2025-09-17T00:39:53.728076Z	    image,
2025-09-17T00:39:53.728138Z	    brand->{
2025-09-17T00:39:53.728278Z	      name,
2025-09-17T00:39:53.728606Z	      "slug": slug.current,
2025-09-17T00:39:53.728728Z	      logo
2025-09-17T00:39:53.728828Z	    },
2025-09-17T00:39:53.72892Z	    category->{
2025-09-17T00:39:53.729044Z	      name,
2025-09-17T00:39:53.729148Z	      "slug": slug.current
2025-09-17T00:39:53.729256Z	    },
2025-09-17T00:39:53.729547Z	    pricing{
2025-09-17T00:39:53.729691Z	      currency,
2025-09-17T00:39:53.729779Z	      tiers[]{
2025-09-17T00:39:53.729896Z	        quantity,
2025-09-17T00:39:53.730054Z	        price,
2025-09-17T00:39:53.730133Z	        unit
2025-09-17T00:39:53.730198Z	      },
2025-09-17T00:39:53.730871Z	      moq,
2025-09-17T00:39:53.731048Z	      leadTime,
2025-09-17T00:39:53.731215Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:53.731604Z	      "price": tiers[0].price,
2025-09-17T00:39:53.731772Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:53.731934Z	    },
2025-09-17T00:39:53.73205Z	    inventory{
2025-09-17T00:39:53.732167Z	      quantity,
2025-09-17T00:39:53.732263Z	      status,
2025-09-17T00:39:53.732665Z	      warehouse,
2025-09-17T00:39:53.732768Z	      lastUpdated,
2025-09-17T00:39:53.732835Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:53.733045Z	      "inStock": status == "in_stock",
2025-09-17T00:39:53.733152Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:53.733261Z	    },
2025-09-17T00:39:53.73342Z	    isActive,
2025-09-17T00:39:53.733528Z	    isFeatured,
2025-09-17T00:39:53.733729Z	    isNew,
2025-09-17T00:39:53.733864Z	    _createdAt,
2025-09-17T00:39:53.733999Z	    _updatedAt
2025-09-17T00:39:53.734182Z	  
2025-09-17T00:39:53.734308Z	      },
2025-09-17T00:39:53.734542Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-17T00:39:53.734628Z	    }
2025-09-17T00:39:53.734762Z	  
2025-09-17T00:39:53.734929Z	Query parameters: {
2025-09-17T00:39:53.735097Z	  limit: 8,
2025-09-17T00:39:53.735313Z	  offset: 0,
2025-09-17T00:39:53.735394Z	  category: undefined,
2025-09-17T00:39:53.735489Z	  brand: 'Electronicon',
2025-09-17T00:39:53.735592Z	  featured: undefined
2025-09-17T00:39:53.735682Z	}
2025-09-17T00:39:53.735805Z	Fetching solutions with query: 
2025-09-17T00:39:53.735938Z	    {
2025-09-17T00:39:53.736091Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:53.736251Z	        
2025-09-17T00:39:53.736737Z	    _id,
2025-09-17T00:39:53.736845Z	    title,
2025-09-17T00:39:53.737006Z	    "slug": slug.current,
2025-09-17T00:39:53.737112Z	    summary,
2025-09-17T00:39:53.737208Z	    description,
2025-09-17T00:39:53.73734Z	    coverImage,
2025-09-17T00:39:53.737412Z	    primaryBrand->{
2025-09-17T00:39:53.737506Z	      _id,
2025-09-17T00:39:53.737595Z	      name,
2025-09-17T00:39:53.737666Z	      "slug": slug.current,
2025-09-17T00:39:53.737723Z	      logo
2025-09-17T00:39:53.737802Z	    },
2025-09-17T00:39:53.737889Z	    relatedBrands[]->{
2025-09-17T00:39:53.73797Z	      _id,
2025-09-17T00:39:53.738134Z	      name,
2025-09-17T00:39:53.740185Z	      "slug": slug.current,
2025-09-17T00:39:53.740282Z	      logo
2025-09-17T00:39:53.740363Z	    },
2025-09-17T00:39:53.740429Z	    targetMarket,
2025-09-17T00:39:53.740777Z	    complexity,
2025-09-17T00:39:53.740898Z	    publishedAt,
2025-09-17T00:39:53.741033Z	    isPublished,
2025-09-17T00:39:53.741138Z	    isFeatured,
2025-09-17T00:39:53.741288Z	    viewCount,
2025-09-17T00:39:53.741421Z	    _createdAt,
2025-09-17T00:39:53.741558Z	    _updatedAt
2025-09-17T00:39:53.741656Z	  
2025-09-17T00:39:53.741715Z	      },
2025-09-17T00:39:53.741876Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-17T00:39:53.742087Z	    }
2025-09-17T00:39:53.74221Z	  
2025-09-17T00:39:53.742348Z	Query parameters: {
2025-09-17T00:39:53.742624Z	  limit: 4,
2025-09-17T00:39:53.742707Z	  offset: 0,
2025-09-17T00:39:53.742772Z	  targetMarket: undefined,
2025-09-17T00:39:53.743053Z	  brand: 'Electronicon',
2025-09-17T00:39:53.743131Z	  featured: undefined
2025-09-17T00:39:53.7432Z	}
2025-09-17T00:39:53.743474Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-17T00:39:53.743563Z	Fetching products with query: 
2025-09-17T00:39:53.743695Z	    {
2025-09-17T00:39:53.743863Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:53.743975Z	        
2025-09-17T00:39:53.744411Z	    _id,
2025-09-17T00:39:53.744547Z	    _type,
2025-09-17T00:39:53.744682Z	    partNumber,
2025-09-17T00:39:53.744796Z	    "slug": slug.current,
2025-09-17T00:39:53.744927Z	    title,
2025-09-17T00:39:53.745034Z	    shortDescription,
2025-09-17T00:39:53.745176Z	    image,
2025-09-17T00:39:53.745283Z	    brand->{
2025-09-17T00:39:53.745394Z	      name,
2025-09-17T00:39:53.74549Z	      "slug": slug.current,
2025-09-17T00:39:53.745599Z	      logo
2025-09-17T00:39:53.745693Z	    },
2025-09-17T00:39:53.745841Z	    category->{
2025-09-17T00:39:53.74592Z	      name,
2025-09-17T00:39:53.746078Z	      "slug": slug.current
2025-09-17T00:39:53.746233Z	    },
2025-09-17T00:39:53.746409Z	    pricing{
2025-09-17T00:39:53.746516Z	      currency,
2025-09-17T00:39:53.746675Z	      tiers[]{
2025-09-17T00:39:53.746798Z	        quantity,
2025-09-17T00:39:53.746923Z	        price,
2025-09-17T00:39:53.747041Z	        unit
2025-09-17T00:39:53.74732Z	      },
2025-09-17T00:39:53.747406Z	      moq,
2025-09-17T00:39:53.747561Z	      leadTime,
2025-09-17T00:39:53.747643Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:53.747703Z	      "price": tiers[0].price,
2025-09-17T00:39:53.747836Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:53.747981Z	    },
2025-09-17T00:39:53.748125Z	    inventory{
2025-09-17T00:39:53.748257Z	      quantity,
2025-09-17T00:39:53.748384Z	      status,
2025-09-17T00:39:53.748504Z	      warehouse,
2025-09-17T00:39:53.748723Z	      lastUpdated,
2025-09-17T00:39:53.748803Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:53.748901Z	      "inStock": status == "in_stock",
2025-09-17T00:39:53.749073Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:53.749139Z	    },
2025-09-17T00:39:53.749353Z	    isActive,
2025-09-17T00:39:53.749504Z	    isFeatured,
2025-09-17T00:39:53.749677Z	    isNew,
2025-09-17T00:39:53.749823Z	    _createdAt,
2025-09-17T00:39:53.749915Z	    _updatedAt
2025-09-17T00:39:53.750042Z	  
2025-09-17T00:39:53.75021Z	      },
2025-09-17T00:39:53.750364Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-17T00:39:53.750518Z	    }
2025-09-17T00:39:53.750687Z	  
2025-09-17T00:39:53.750797Z	Query parameters: {
2025-09-17T00:39:53.750916Z	  limit: 8,
2025-09-17T00:39:53.751126Z	  offset: 0,
2025-09-17T00:39:53.751288Z	  category: undefined,
2025-09-17T00:39:53.751435Z	  brand: 'Electronicon',
2025-09-17T00:39:53.751569Z	  featured: undefined
2025-09-17T00:39:53.751732Z	}
2025-09-17T00:39:53.751838Z	Fetching solutions with query: 
2025-09-17T00:39:53.751936Z	    {
2025-09-17T00:39:53.752113Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:53.752222Z	        
2025-09-17T00:39:53.752326Z	    _id,
2025-09-17T00:39:53.752432Z	    title,
2025-09-17T00:39:53.752547Z	    "slug": slug.current,
2025-09-17T00:39:53.752644Z	    summary,
2025-09-17T00:39:53.752762Z	    description,
2025-09-17T00:39:53.752863Z	    coverImage,
2025-09-17T00:39:53.752953Z	    primaryBrand->{
2025-09-17T00:39:53.753059Z	      _id,
2025-09-17T00:39:53.75315Z	      name,
2025-09-17T00:39:53.753381Z	      "slug": slug.current,
2025-09-17T00:39:53.753619Z	      logo
2025-09-17T00:39:53.75371Z	    },
2025-09-17T00:39:53.75392Z	    relatedBrands[]->{
2025-09-17T00:39:53.754018Z	      _id,
2025-09-17T00:39:53.754116Z	      name,
2025-09-17T00:39:53.754215Z	      "slug": slug.current,
2025-09-17T00:39:53.754468Z	      logo
2025-09-17T00:39:53.754646Z	    },
2025-09-17T00:39:53.754796Z	    targetMarket,
2025-09-17T00:39:53.754918Z	    complexity,
2025-09-17T00:39:53.755044Z	    publishedAt,
2025-09-17T00:39:53.755151Z	    isPublished,
2025-09-17T00:39:53.755243Z	    isFeatured,
2025-09-17T00:39:53.755433Z	    viewCount,
2025-09-17T00:39:53.755534Z	    _createdAt,
2025-09-17T00:39:53.755645Z	    _updatedAt
2025-09-17T00:39:53.755742Z	  
2025-09-17T00:39:53.755854Z	      },
2025-09-17T00:39:53.755969Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-17T00:39:53.756072Z	    }
2025-09-17T00:39:53.756175Z	  
2025-09-17T00:39:53.756298Z	Query parameters: {
2025-09-17T00:39:53.756421Z	  limit: 4,
2025-09-17T00:39:53.756519Z	  offset: 0,
2025-09-17T00:39:53.756621Z	  targetMarket: undefined,
2025-09-17T00:39:53.756727Z	  brand: 'Electronicon',
2025-09-17T00:39:53.756827Z	  featured: undefined
2025-09-17T00:39:53.756938Z	}
2025-09-17T00:39:53.757041Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-17T00:39:53.757155Z	Fetching products with query: 
2025-09-17T00:39:53.757254Z	    {
2025-09-17T00:39:53.757374Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:53.757487Z	        
2025-09-17T00:39:53.757596Z	    _id,
2025-09-17T00:39:53.757701Z	    _type,
2025-09-17T00:39:53.757802Z	    partNumber,
2025-09-17T00:39:53.757902Z	    "slug": slug.current,
2025-09-17T00:39:53.758015Z	    title,
2025-09-17T00:39:53.758118Z	    shortDescription,
2025-09-17T00:39:53.758218Z	    image,
2025-09-17T00:39:53.758335Z	    brand->{
2025-09-17T00:39:53.75844Z	      name,
2025-09-17T00:39:53.758542Z	      "slug": slug.current,
2025-09-17T00:39:53.758646Z	      logo
2025-09-17T00:39:53.758749Z	    },
2025-09-17T00:39:53.758884Z	    category->{
2025-09-17T00:39:53.759005Z	      name,
2025-09-17T00:39:53.759113Z	      "slug": slug.current
2025-09-17T00:39:53.759214Z	    },
2025-09-17T00:39:53.759363Z	    pricing{
2025-09-17T00:39:53.759471Z	      currency,
2025-09-17T00:39:53.759574Z	      tiers[]{
2025-09-17T00:39:53.759673Z	        quantity,
2025-09-17T00:39:53.759764Z	        price,
2025-09-17T00:39:53.759845Z	        unit
2025-09-17T00:39:53.759945Z	      },
2025-09-17T00:39:53.760036Z	      moq,
2025-09-17T00:39:53.760128Z	      leadTime,
2025-09-17T00:39:53.760229Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:53.760353Z	      "price": tiers[0].price,
2025-09-17T00:39:53.760453Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:53.760548Z	    },
2025-09-17T00:39:53.760651Z	    inventory{
2025-09-17T00:39:53.760752Z	      quantity,
2025-09-17T00:39:53.760843Z	      status,
2025-09-17T00:39:53.760944Z	      warehouse,
2025-09-17T00:39:53.761047Z	      lastUpdated,
2025-09-17T00:39:53.761157Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:53.761261Z	      "inStock": status == "in_stock",
2025-09-17T00:39:53.761398Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:53.761504Z	    },
2025-09-17T00:39:53.761596Z	    isActive,
2025-09-17T00:39:53.761687Z	    isFeatured,
2025-09-17T00:39:53.761799Z	    isNew,
2025-09-17T00:39:53.761927Z	    _createdAt,
2025-09-17T00:39:53.76204Z	    _updatedAt
2025-09-17T00:39:53.762145Z	  
2025-09-17T00:39:53.76224Z	      },
2025-09-17T00:39:53.762361Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-17T00:39:53.762485Z	    }
2025-09-17T00:39:53.76262Z	  
2025-09-17T00:39:53.76275Z	Query parameters: {
2025-09-17T00:39:53.762853Z	  limit: 8,
2025-09-17T00:39:53.76297Z	  offset: 0,
2025-09-17T00:39:53.763068Z	  category: undefined,
2025-09-17T00:39:53.76316Z	  brand: 'cree',
2025-09-17T00:39:53.76325Z	  featured: undefined
2025-09-17T00:39:53.763367Z	}
2025-09-17T00:39:53.763462Z	Fetching solutions with query: 
2025-09-17T00:39:53.763552Z	    {
2025-09-17T00:39:53.763668Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:53.76377Z	        
2025-09-17T00:39:53.763871Z	    _id,
2025-09-17T00:39:53.763981Z	    title,
2025-09-17T00:39:53.764083Z	    "slug": slug.current,
2025-09-17T00:39:53.764178Z	    summary,
2025-09-17T00:39:53.764287Z	    description,
2025-09-17T00:39:53.764396Z	    coverImage,
2025-09-17T00:39:53.764508Z	    primaryBrand->{
2025-09-17T00:39:53.76461Z	      _id,
2025-09-17T00:39:53.764732Z	      name,
2025-09-17T00:39:53.764844Z	      "slug": slug.current,
2025-09-17T00:39:53.764952Z	      logo
2025-09-17T00:39:53.76505Z	    },
2025-09-17T00:39:53.765171Z	    relatedBrands[]->{
2025-09-17T00:39:53.765286Z	      _id,
2025-09-17T00:39:53.765394Z	      name,
2025-09-17T00:39:53.765486Z	      "slug": slug.current,
2025-09-17T00:39:53.765588Z	      logo
2025-09-17T00:39:53.7657Z	    },
2025-09-17T00:39:53.765804Z	    targetMarket,
2025-09-17T00:39:53.765905Z	    complexity,
2025-09-17T00:39:53.766022Z	    publishedAt,
2025-09-17T00:39:53.76614Z	    isPublished,
2025-09-17T00:39:53.766246Z	    isFeatured,
2025-09-17T00:39:53.766373Z	    viewCount,
2025-09-17T00:39:53.766468Z	    _createdAt,
2025-09-17T00:39:53.766574Z	    _updatedAt
2025-09-17T00:39:53.766685Z	  
2025-09-17T00:39:53.766792Z	      },
2025-09-17T00:39:53.766895Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-17T00:39:53.767008Z	    }
2025-09-17T00:39:53.767112Z	  
2025-09-17T00:39:53.767207Z	Query parameters: {
2025-09-17T00:39:53.767328Z	  limit: 4,
2025-09-17T00:39:53.767434Z	  offset: 0,
2025-09-17T00:39:53.767526Z	  targetMarket: undefined,
2025-09-17T00:39:53.76762Z	  brand: 'cree',
2025-09-17T00:39:53.767709Z	  featured: undefined
2025-09-17T00:39:53.767801Z	}
2025-09-17T00:39:53.767904Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-17T00:39:53.768024Z	Fetching products with query: 
2025-09-17T00:39:53.768129Z	    {
2025-09-17T00:39:53.768233Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:53.768354Z	        
2025-09-17T00:39:53.768456Z	    _id,
2025-09-17T00:39:53.768561Z	    _type,
2025-09-17T00:39:53.768657Z	    partNumber,
2025-09-17T00:39:53.76876Z	    "slug": slug.current,
2025-09-17T00:39:53.768864Z	    title,
2025-09-17T00:39:53.768971Z	    shortDescription,
2025-09-17T00:39:53.769084Z	    image,
2025-09-17T00:39:53.769187Z	    brand->{
2025-09-17T00:39:53.769311Z	      name,
2025-09-17T00:39:53.769418Z	      "slug": slug.current,
2025-09-17T00:39:53.769522Z	      logo
2025-09-17T00:39:53.769624Z	    },
2025-09-17T00:39:53.769719Z	    category->{
2025-09-17T00:39:53.769811Z	      name,
2025-09-17T00:39:53.769901Z	      "slug": slug.current
2025-09-17T00:39:53.770033Z	    },
2025-09-17T00:39:53.770147Z	    pricing{
2025-09-17T00:39:53.770248Z	      currency,
2025-09-17T00:39:53.770369Z	      tiers[]{
2025-09-17T00:39:53.770469Z	        quantity,
2025-09-17T00:39:53.770561Z	        price,
2025-09-17T00:39:53.770652Z	        unit
2025-09-17T00:39:53.770745Z	      },
2025-09-17T00:39:53.770853Z	      moq,
2025-09-17T00:39:53.77097Z	      leadTime,
2025-09-17T00:39:53.771066Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:53.771161Z	      "price": tiers[0].price,
2025-09-17T00:39:53.771288Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:53.771394Z	    },
2025-09-17T00:39:53.771496Z	    inventory{
2025-09-17T00:39:53.771599Z	      quantity,
2025-09-17T00:39:53.771711Z	      status,
2025-09-17T00:39:53.771817Z	      warehouse,
2025-09-17T00:39:53.771934Z	      lastUpdated,
2025-09-17T00:39:53.772037Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:53.772142Z	      "inStock": status == "in_stock",
2025-09-17T00:39:53.772241Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:53.772356Z	    },
2025-09-17T00:39:53.772457Z	    isActive,
2025-09-17T00:39:53.772576Z	    isFeatured,
2025-09-17T00:39:53.772673Z	    isNew,
2025-09-17T00:39:53.772767Z	    _createdAt,
2025-09-17T00:39:53.772881Z	    _updatedAt
2025-09-17T00:39:53.77299Z	  
2025-09-17T00:39:53.77308Z	      },
2025-09-17T00:39:53.773185Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-17T00:39:53.773313Z	    }
2025-09-17T00:39:53.77342Z	  
2025-09-17T00:39:53.773525Z	Query parameters: {
2025-09-17T00:39:53.773629Z	  limit: 8,
2025-09-17T00:39:53.773735Z	  offset: 0,
2025-09-17T00:39:53.77383Z	  category: undefined,
2025-09-17T00:39:53.773942Z	  brand: 'cree',
2025-09-17T00:39:53.774048Z	  featured: undefined
2025-09-17T00:39:53.774148Z	}
2025-09-17T00:39:53.774242Z	Fetching solutions with query: 
2025-09-17T00:39:53.774351Z	    {
2025-09-17T00:39:53.774454Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:53.774566Z	        
2025-09-17T00:39:53.77466Z	    _id,
2025-09-17T00:39:53.774755Z	    title,
2025-09-17T00:39:53.774863Z	    "slug": slug.current,
2025-09-17T00:39:53.774983Z	    summary,
2025-09-17T00:39:53.775083Z	    description,
2025-09-17T00:39:53.775185Z	    coverImage,
2025-09-17T00:39:53.775293Z	    primaryBrand->{
2025-09-17T00:39:53.775397Z	      _id,
2025-09-17T00:39:53.775506Z	      name,
2025-09-17T00:39:53.775606Z	      "slug": slug.current,
2025-09-17T00:39:53.775719Z	      logo
2025-09-17T00:39:53.775816Z	    },
2025-09-17T00:39:53.77594Z	    relatedBrands[]->{
2025-09-17T00:39:53.776049Z	      _id,
2025-09-17T00:39:53.77616Z	      name,
2025-09-17T00:39:53.776283Z	      "slug": slug.current,
2025-09-17T00:39:53.776387Z	      logo
2025-09-17T00:39:53.776485Z	    },
2025-09-17T00:39:53.776591Z	    targetMarket,
2025-09-17T00:39:53.77669Z	    complexity,
2025-09-17T00:39:53.776873Z	    publishedAt,
2025-09-17T00:39:53.777037Z	    isPublished,
2025-09-17T00:39:53.77724Z	    isFeatured,
2025-09-17T00:39:53.777446Z	    viewCount,
2025-09-17T00:39:53.777613Z	    _createdAt,
2025-09-17T00:39:53.777772Z	    _updatedAt
2025-09-17T00:39:53.77791Z	  
2025-09-17T00:39:53.778026Z	      },
2025-09-17T00:39:53.778159Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-17T00:39:53.778289Z	    }
2025-09-17T00:39:53.7784Z	  
2025-09-17T00:39:53.778684Z	Query parameters: {
2025-09-17T00:39:53.778857Z	  limit: 4,
2025-09-17T00:39:53.779028Z	  offset: 0,
2025-09-17T00:39:53.77915Z	  targetMarket: undefined,
2025-09-17T00:39:53.779344Z	  brand: 'cree',
2025-09-17T00:39:53.779472Z	  featured: undefined
2025-09-17T00:39:53.779607Z	}
2025-09-17T00:39:53.779806Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-17T00:39:53.780226Z	Fetching products with query: 
2025-09-17T00:39:53.780502Z	    {
2025-09-17T00:39:53.780655Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:53.780772Z	        
2025-09-17T00:39:53.781162Z	    _id,
2025-09-17T00:39:53.781301Z	    _type,
2025-09-17T00:39:53.78155Z	    partNumber,
2025-09-17T00:39:53.781616Z	    "slug": slug.current,
2025-09-17T00:39:53.781675Z	    title,
2025-09-17T00:39:53.781734Z	    shortDescription,
2025-09-17T00:39:53.781788Z	    image,
2025-09-17T00:39:53.781841Z	    brand->{
2025-09-17T00:39:53.781895Z	      name,
2025-09-17T00:39:53.781955Z	      "slug": slug.current,
2025-09-17T00:39:53.78201Z	      logo
2025-09-17T00:39:53.782066Z	    },
2025-09-17T00:39:53.782125Z	    category->{
2025-09-17T00:39:53.782191Z	      name,
2025-09-17T00:39:53.782248Z	      "slug": slug.current
2025-09-17T00:39:53.782337Z	    },
2025-09-17T00:39:53.782397Z	    pricing{
2025-09-17T00:39:53.782453Z	      currency,
2025-09-17T00:39:53.782506Z	      tiers[]{
2025-09-17T00:39:53.782558Z	        quantity,
2025-09-17T00:39:53.782611Z	        price,
2025-09-17T00:39:53.782667Z	        unit
2025-09-17T00:39:53.782721Z	      },
2025-09-17T00:39:53.782775Z	      moq,
2025-09-17T00:39:53.782828Z	      leadTime,
2025-09-17T00:39:53.782903Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:53.782977Z	      "price": tiers[0].price,
2025-09-17T00:39:53.787842Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:53.78795Z	    },
2025-09-17T00:39:53.788016Z	    inventory{
2025-09-17T00:39:53.788072Z	      quantity,
2025-09-17T00:39:53.788126Z	      status,
2025-09-17T00:39:53.788186Z	      warehouse,
2025-09-17T00:39:53.788259Z	      lastUpdated,
2025-09-17T00:39:53.788394Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:53.788471Z	      "inStock": status == "in_stock",
2025-09-17T00:39:53.788534Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:53.788592Z	    },
2025-09-17T00:39:53.788649Z	    isActive,
2025-09-17T00:39:53.788704Z	    isFeatured,
2025-09-17T00:39:53.788767Z	    isNew,
2025-09-17T00:39:53.788874Z	    _createdAt,
2025-09-17T00:39:53.789059Z	    _updatedAt
2025-09-17T00:39:53.789184Z	  
2025-09-17T00:39:53.789328Z	      },
2025-09-17T00:39:53.789448Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-17T00:39:53.789566Z	    }
2025-09-17T00:39:53.79Z	  
2025-09-17T00:39:53.790217Z	Query parameters: {
2025-09-17T00:39:53.79042Z	  limit: 8,
2025-09-17T00:39:53.790621Z	  offset: 0,
2025-09-17T00:39:53.790801Z	  category: undefined,
2025-09-17T00:39:53.791494Z	  brand: 'epcos',
2025-09-17T00:39:53.791634Z	  featured: undefined
2025-09-17T00:39:53.791754Z	}
2025-09-17T00:39:53.791862Z	Fetching solutions with query: 
2025-09-17T00:39:53.791983Z	    {
2025-09-17T00:39:53.792083Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:53.792208Z	        
2025-09-17T00:39:53.792357Z	    _id,
2025-09-17T00:39:53.79247Z	    title,
2025-09-17T00:39:53.79259Z	    "slug": slug.current,
2025-09-17T00:39:53.792671Z	    summary,
2025-09-17T00:39:53.792745Z	    description,
2025-09-17T00:39:53.792821Z	    coverImage,
2025-09-17T00:39:53.792893Z	    primaryBrand->{
2025-09-17T00:39:53.792984Z	      _id,
2025-09-17T00:39:53.793062Z	      name,
2025-09-17T00:39:53.793571Z	      "slug": slug.current,
2025-09-17T00:39:53.79395Z	      logo
2025-09-17T00:39:53.794098Z	    },
2025-09-17T00:39:53.794666Z	    relatedBrands[]->{
2025-09-17T00:39:53.795009Z	      _id,
2025-09-17T00:39:53.795361Z	      name,
2025-09-17T00:39:53.795497Z	      "slug": slug.current,
2025-09-17T00:39:53.796009Z	      logo
2025-09-17T00:39:53.796129Z	    },
2025-09-17T00:39:53.796236Z	    targetMarket,
2025-09-17T00:39:53.796365Z	    complexity,
2025-09-17T00:39:53.796742Z	    publishedAt,
2025-09-17T00:39:53.797088Z	    isPublished,
2025-09-17T00:39:53.797443Z	    isFeatured,
2025-09-17T00:39:53.797802Z	    viewCount,
2025-09-17T00:39:53.798141Z	    _createdAt,
2025-09-17T00:39:53.798471Z	    _updatedAt
2025-09-17T00:39:53.798618Z	  
2025-09-17T00:39:53.798734Z	      },
2025-09-17T00:39:53.798868Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-17T00:39:53.799283Z	    }
2025-09-17T00:39:53.79964Z	  
2025-09-17T00:39:53.800013Z	Query parameters: {
2025-09-17T00:39:53.800373Z	  limit: 4,
2025-09-17T00:39:53.800721Z	  offset: 0,
2025-09-17T00:39:53.801078Z	  targetMarket: undefined,
2025-09-17T00:39:53.801222Z	  brand: 'epcos',
2025-09-17T00:39:53.801649Z	  featured: undefined
2025-09-17T00:39:53.80222Z	}
2025-09-17T00:39:53.802577Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-17T00:39:53.80297Z	Fetching products with query: 
2025-09-17T00:39:53.803337Z	    {
2025-09-17T00:39:53.803656Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:53.804018Z	        
2025-09-17T00:39:53.804151Z	    _id,
2025-09-17T00:39:53.804262Z	    _type,
2025-09-17T00:39:53.804393Z	    partNumber,
2025-09-17T00:39:53.804513Z	    "slug": slug.current,
2025-09-17T00:39:53.804625Z	    title,
2025-09-17T00:39:53.804741Z	    shortDescription,
2025-09-17T00:39:53.804889Z	    image,
2025-09-17T00:39:53.805052Z	    brand->{
2025-09-17T00:39:53.805177Z	      name,
2025-09-17T00:39:53.805318Z	      "slug": slug.current,
2025-09-17T00:39:53.805449Z	      logo
2025-09-17T00:39:53.805558Z	    },
2025-09-17T00:39:53.805757Z	    category->{
2025-09-17T00:39:53.805933Z	      name,
2025-09-17T00:39:53.806042Z	      "slug": slug.current
2025-09-17T00:39:53.806142Z	    },
2025-09-17T00:39:53.80624Z	    pricing{
2025-09-17T00:39:53.80636Z	      currency,
2025-09-17T00:39:53.806449Z	      tiers[]{
2025-09-17T00:39:53.806538Z	        quantity,
2025-09-17T00:39:53.806628Z	        price,
2025-09-17T00:39:53.807321Z	        unit
2025-09-17T00:39:53.807769Z	      },
2025-09-17T00:39:53.80812Z	      moq,
2025-09-17T00:39:53.808435Z	      leadTime,
2025-09-17T00:39:53.808594Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:53.808789Z	      "price": tiers[0].price,
2025-09-17T00:39:53.808959Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:53.809155Z	    },
2025-09-17T00:39:53.809676Z	    inventory{
2025-09-17T00:39:53.809936Z	      quantity,
2025-09-17T00:39:53.810245Z	      status,
2025-09-17T00:39:53.811165Z	      warehouse,
2025-09-17T00:39:53.811567Z	      lastUpdated,
2025-09-17T00:39:53.811934Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:53.812319Z	      "inStock": status == "in_stock",
2025-09-17T00:39:53.812694Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:53.813088Z	    },
2025-09-17T00:39:53.813443Z	    isActive,
2025-09-17T00:39:53.813824Z	    isFeatured,
2025-09-17T00:39:53.814172Z	    isNew,
2025-09-17T00:39:53.814571Z	    _createdAt,
2025-09-17T00:39:53.814961Z	    _updatedAt
2025-09-17T00:39:53.815333Z	  
2025-09-17T00:39:53.815683Z	      },
2025-09-17T00:39:53.816006Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-17T00:39:53.816362Z	    }
2025-09-17T00:39:53.816509Z	  
2025-09-17T00:39:53.816617Z	Query parameters: {
2025-09-17T00:39:53.816745Z	  limit: 8,
2025-09-17T00:39:53.816844Z	  offset: 0,
2025-09-17T00:39:53.81694Z	  category: undefined,
2025-09-17T00:39:53.817034Z	  brand: 'epcos',
2025-09-17T00:39:53.817124Z	  featured: undefined
2025-09-17T00:39:53.817522Z	}
2025-09-17T00:39:53.817669Z	Fetching solutions with query: 
2025-09-17T00:39:53.818189Z	    {
2025-09-17T00:39:53.818571Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:53.818946Z	        
2025-09-17T00:39:53.819312Z	    _id,
2025-09-17T00:39:53.81968Z	    title,
2025-09-17T00:39:53.820036Z	    "slug": slug.current,
2025-09-17T00:39:53.820414Z	    summary,
2025-09-17T00:39:53.820811Z	    description,
2025-09-17T00:39:53.821027Z	    coverImage,
2025-09-17T00:39:53.821228Z	    primaryBrand->{
2025-09-17T00:39:53.821416Z	      _id,
2025-09-17T00:39:53.821569Z	      name,
2025-09-17T00:39:53.821684Z	      "slug": slug.current,
2025-09-17T00:39:53.821787Z	      logo
2025-09-17T00:39:53.821876Z	    },
2025-09-17T00:39:53.821955Z	    relatedBrands[]->{
2025-09-17T00:39:53.822367Z	      _id,
2025-09-17T00:39:53.8225Z	      name,
2025-09-17T00:39:53.822608Z	      "slug": slug.current,
2025-09-17T00:39:53.822706Z	      logo
2025-09-17T00:39:53.822806Z	    },
2025-09-17T00:39:53.822908Z	    targetMarket,
2025-09-17T00:39:53.823021Z	    complexity,
2025-09-17T00:39:53.823127Z	    publishedAt,
2025-09-17T00:39:53.823232Z	    isPublished,
2025-09-17T00:39:53.823365Z	    isFeatured,
2025-09-17T00:39:53.823458Z	    viewCount,
2025-09-17T00:39:53.82354Z	    _createdAt,
2025-09-17T00:39:53.82363Z	    _updatedAt
2025-09-17T00:39:53.823727Z	  
2025-09-17T00:39:53.823827Z	      },
2025-09-17T00:39:53.823932Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-17T00:39:53.824049Z	    }
2025-09-17T00:39:53.824145Z	  
2025-09-17T00:39:53.824236Z	Query parameters: {
2025-09-17T00:39:53.824358Z	  limit: 4,
2025-09-17T00:39:53.824457Z	  offset: 0,
2025-09-17T00:39:53.82456Z	  targetMarket: undefined,
2025-09-17T00:39:53.824651Z	  brand: 'epcos',
2025-09-17T00:39:53.82475Z	  featured: undefined
2025-09-17T00:39:53.824843Z	}
2025-09-17T00:39:53.824937Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:53.825261Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:53.825406Z	✅ [getBrandData] Found brand: Electronicon
2025-09-17T00:39:53.826305Z	✅ [getBrandData] Found brand: Electronicon
2025-09-17T00:39:53.826787Z	Products fetch result: {
2025-09-17T00:39:53.826957Z	  totalProducts: 2,
2025-09-17T00:39:53.827126Z	  fetchedProducts: 2,
2025-09-17T00:39:53.827327Z	  firstProduct: {
2025-09-17T00:39:53.82749Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-17T00:39:53.827644Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-17T00:39:53.827805Z	    _type: 'product',
2025-09-17T00:39:53.827966Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-17T00:39:53.828112Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-17T00:39:53.828279Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-17T00:39:53.828442Z	    image: null,
2025-09-17T00:39:53.828597Z	    inventory: {
2025-09-17T00:39:53.828744Z	      inStock: true,
2025-09-17T00:39:53.82896Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-17T00:39:53.829342Z	      quantity: 0,
2025-09-17T00:39:53.829685Z	      status: 'in_stock',
2025-09-17T00:39:53.830862Z	      warehouse: null
2025-09-17T00:39:53.831022Z	    },
2025-09-17T00:39:53.831621Z	    isActive: true,
2025-09-17T00:39:53.831924Z	    isFeatured: false,
2025-09-17T00:39:53.832133Z	    isNew: false,
2025-09-17T00:39:53.832374Z	    partNumber: '99999',
2025-09-17T00:39:53.832549Z	    pricing: {
2025-09-17T00:39:53.832777Z	      currency: 'CNY',
2025-09-17T00:39:53.833113Z	      leadTime: null,
2025-09-17T00:39:53.833359Z	      moq: null,
2025-09-17T00:39:53.833652Z	      price: null,
2025-09-17T00:39:53.83392Z	      tiers: null
2025-09-17T00:39:53.834123Z	    },
2025-09-17T00:39:53.834309Z	    shortDescription: null,
2025-09-17T00:39:53.834483Z	    slug: '99999',
2025-09-17T00:39:53.834608Z	    title: '99999'
2025-09-17T00:39:53.834774Z	  }
2025-09-17T00:39:53.834923Z	}
2025-09-17T00:39:53.835086Z	Products fetch result: {
2025-09-17T00:39:53.83529Z	  totalProducts: 2,
2025-09-17T00:39:53.835449Z	  fetchedProducts: 2,
2025-09-17T00:39:53.835632Z	  firstProduct: {
2025-09-17T00:39:53.835727Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-17T00:39:53.835845Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-17T00:39:53.835975Z	    _type: 'product',
2025-09-17T00:39:53.836085Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-17T00:39:53.836197Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-17T00:39:53.83635Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-17T00:39:53.836462Z	    image: null,
2025-09-17T00:39:53.836609Z	    inventory: {
2025-09-17T00:39:53.83673Z	      inStock: true,
2025-09-17T00:39:53.836872Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-17T00:39:53.837008Z	      quantity: 0,
2025-09-17T00:39:53.837142Z	      status: 'in_stock',
2025-09-17T00:39:53.837319Z	      warehouse: null
2025-09-17T00:39:53.837526Z	    },
2025-09-17T00:39:53.83766Z	    isActive: true,
2025-09-17T00:39:53.837807Z	    isFeatured: false,
2025-09-17T00:39:53.837946Z	    isNew: false,
2025-09-17T00:39:53.838131Z	    partNumber: '99999',
2025-09-17T00:39:53.838259Z	    pricing: {
2025-09-17T00:39:53.838376Z	      currency: 'CNY',
2025-09-17T00:39:53.838491Z	      leadTime: null,
2025-09-17T00:39:53.838605Z	      moq: null,
2025-09-17T00:39:53.838784Z	      price: null,
2025-09-17T00:39:53.838958Z	      tiers: null
2025-09-17T00:39:53.839185Z	    },
2025-09-17T00:39:53.839436Z	    shortDescription: null,
2025-09-17T00:39:53.839663Z	    slug: '99999',
2025-09-17T00:39:53.839896Z	    title: '99999'
2025-09-17T00:39:53.840112Z	  }
2025-09-17T00:39:53.84029Z	}
2025-09-17T00:39:53.840524Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:53.840764Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:53.840937Z	✅ [getBrandData] Found brand: Epcos
2025-09-17T00:39:53.84116Z	✅ [getBrandData] Found brand: Epcos
2025-09-17T00:39:53.841335Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:53.841531Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:53.841669Z	Products fetch result: {
2025-09-17T00:39:53.84187Z	  totalProducts: 4,
2025-09-17T00:39:53.84201Z	  fetchedProducts: 4,
2025-09-17T00:39:53.842233Z	  firstProduct: {
2025-09-17T00:39:53.842414Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-17T00:39:53.842586Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-17T00:39:53.842762Z	    _type: 'product',
2025-09-17T00:39:53.842918Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-17T00:39:53.843087Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-17T00:39:53.843254Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:53.843556Z	    image: null,
2025-09-17T00:39:53.84372Z	    inventory: {
2025-09-17T00:39:53.843864Z	      inStock: true,
2025-09-17T00:39:53.84404Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-17T00:39:53.844235Z	      quantity: 0,
2025-09-17T00:39:53.844397Z	      status: 'in_stock',
2025-09-17T00:39:53.844536Z	      warehouse: null
2025-09-17T00:39:53.844654Z	    },
2025-09-17T00:39:53.844774Z	    isActive: true,
2025-09-17T00:39:53.844887Z	    isFeatured: false,
2025-09-17T00:39:53.845019Z	    isNew: false,
2025-09-17T00:39:53.84513Z	    partNumber: '11111',
2025-09-17T00:39:53.84529Z	    pricing: {
2025-09-17T00:39:53.845399Z	      currency: 'CNY',
2025-09-17T00:39:53.845497Z	      leadTime: null,
2025-09-17T00:39:53.845601Z	      moq: null,
2025-09-17T00:39:53.845702Z	      price: null,
2025-09-17T00:39:53.845815Z	      tiers: null
2025-09-17T00:39:53.845924Z	    },
2025-09-17T00:39:53.846049Z	    shortDescription: '11111',
2025-09-17T00:39:53.84616Z	    slug: 'sic mosfet',
2025-09-17T00:39:53.846263Z	    title: '111111'
2025-09-17T00:39:53.846392Z	  }
2025-09-17T00:39:53.846498Z	}
2025-09-17T00:39:53.846594Z	Products fetch result: {
2025-09-17T00:39:53.846695Z	  totalProducts: 4,
2025-09-17T00:39:53.846802Z	  fetchedProducts: 4,
2025-09-17T00:39:53.846905Z	  firstProduct: {
2025-09-17T00:39:53.847004Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-17T00:39:53.847101Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-17T00:39:53.847206Z	    _type: 'product',
2025-09-17T00:39:53.847323Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-17T00:39:53.847432Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-17T00:39:53.847529Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:53.847635Z	    image: null,
2025-09-17T00:39:53.847726Z	    inventory: {
2025-09-17T00:39:53.847824Z	      inStock: true,
2025-09-17T00:39:53.847914Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-17T00:39:53.848038Z	      quantity: 0,
2025-09-17T00:39:53.848145Z	      status: 'in_stock',
2025-09-17T00:39:53.848235Z	      warehouse: null
2025-09-17T00:39:53.848327Z	    },
2025-09-17T00:39:53.848399Z	    isActive: true,
2025-09-17T00:39:53.848454Z	    isFeatured: false,
2025-09-17T00:39:53.848509Z	    isNew: false,
2025-09-17T00:39:53.848562Z	    partNumber: '11111',
2025-09-17T00:39:53.848685Z	    pricing: {
2025-09-17T00:39:53.848797Z	      currency: 'CNY',
2025-09-17T00:39:53.848893Z	      leadTime: null,
2025-09-17T00:39:53.848985Z	      moq: null,
2025-09-17T00:39:53.849333Z	      price: null,
2025-09-17T00:39:53.849461Z	      tiers: null
2025-09-17T00:39:53.849565Z	    },
2025-09-17T00:39:53.849657Z	    shortDescription: '11111',
2025-09-17T00:39:53.849747Z	    slug: 'sic mosfet',
2025-09-17T00:39:53.849894Z	    title: '111111'
2025-09-17T00:39:53.849964Z	  }
2025-09-17T00:39:53.850023Z	}
2025-09-17T00:39:53.85008Z	✅ [getBrandData] Found brand: CREE
2025-09-17T00:39:53.850143Z	✅ [getBrandData] Found brand: CREE
2025-09-17T00:39:53.8502Z	Solutions fetch result: {
2025-09-17T00:39:53.850253Z	  totalSolutions: 6,
2025-09-17T00:39:53.887576Z	  fetchedSolutions: 4,
2025-09-17T00:39:53.887716Z	  firstSolution: {
2025-09-17T00:39:53.887854Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-17T00:39:53.887986Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-17T00:39:53.888184Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-17T00:39:53.88839Z	    complexity: 'medium',
2025-09-17T00:39:53.888511Z	    coverImage: null,
2025-09-17T00:39:53.888693Z	    description: [ [Object] ],
2025-09-17T00:39:53.888797Z	    isFeatured: false,
2025-09-17T00:39:53.888998Z	    isPublished: true,
2025-09-17T00:39:53.889157Z	    primaryBrand: {
2025-09-17T00:39:53.889298Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:53.889551Z	      logo: null,
2025-09-17T00:39:53.889717Z	      name: 'CREE',
2025-09-17T00:39:53.889891Z	      slug: 'cree'
2025-09-17T00:39:53.890043Z	    },
2025-09-17T00:39:53.890137Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-17T00:39:53.890288Z	    relatedBrands: null,
2025-09-17T00:39:53.890421Z	    slug: '11111',
2025-09-17T00:39:53.890547Z	    summary: '11111',
2025-09-17T00:39:53.890662Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:53.890772Z	    title: '11111',
2025-09-17T00:39:53.890869Z	    viewCount: 0
2025-09-17T00:39:53.890972Z	  }
2025-09-17T00:39:53.891148Z	}
2025-09-17T00:39:53.891282Z	Solutions fetch result: {
2025-09-17T00:39:53.891408Z	  totalSolutions: 6,
2025-09-17T00:39:53.891579Z	  fetchedSolutions: 4,
2025-09-17T00:39:53.891769Z	  firstSolution: {
2025-09-17T00:39:53.891886Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-17T00:39:53.892Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-17T00:39:53.892108Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-17T00:39:53.89221Z	    complexity: 'medium',
2025-09-17T00:39:53.89234Z	    coverImage: null,
2025-09-17T00:39:53.892441Z	    description: [ [Object] ],
2025-09-17T00:39:53.892564Z	    isFeatured: false,
2025-09-17T00:39:53.892673Z	    isPublished: true,
2025-09-17T00:39:53.892772Z	    primaryBrand: {
2025-09-17T00:39:53.892939Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:53.893077Z	      logo: null,
2025-09-17T00:39:53.89322Z	      name: 'CREE',
2025-09-17T00:39:53.893359Z	      slug: 'cree'
2025-09-17T00:39:53.893502Z	    },
2025-09-17T00:39:53.893686Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-17T00:39:53.894024Z	    relatedBrands: null,
2025-09-17T00:39:53.894185Z	    slug: '11111',
2025-09-17T00:39:53.89431Z	    summary: '11111',
2025-09-17T00:39:53.894415Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:53.894532Z	    title: '11111',
2025-09-17T00:39:53.894766Z	    viewCount: 0
2025-09-17T00:39:53.894904Z	  }
2025-09-17T00:39:53.895002Z	}
2025-09-17T00:39:53.89509Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:53.895188Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:53.895326Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-17T00:39:53.895429Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-17T00:39:53.89552Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:53.895614Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:53.895714Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:53.895811Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:53.895914Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-17T00:39:53.89603Z	Fetching products with query: 
2025-09-17T00:39:53.896139Z	    {
2025-09-17T00:39:53.89624Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:53.896397Z	        
2025-09-17T00:39:53.896492Z	    _id,
2025-09-17T00:39:53.896616Z	    _type,
2025-09-17T00:39:53.896839Z	    partNumber,
2025-09-17T00:39:53.897069Z	    "slug": slug.current,
2025-09-17T00:39:53.897276Z	    title,
2025-09-17T00:39:53.897409Z	    shortDescription,
2025-09-17T00:39:53.897606Z	    image,
2025-09-17T00:39:53.897761Z	    brand->{
2025-09-17T00:39:53.897913Z	      name,
2025-09-17T00:39:53.898184Z	      "slug": slug.current,
2025-09-17T00:39:53.89843Z	      logo
2025-09-17T00:39:53.898677Z	    },
2025-09-17T00:39:53.899064Z	    category->{
2025-09-17T00:39:53.899196Z	      name,
2025-09-17T00:39:53.899548Z	      "slug": slug.current
2025-09-17T00:39:53.900515Z	    },
2025-09-17T00:39:53.900629Z	    pricing{
2025-09-17T00:39:53.900757Z	      currency,
2025-09-17T00:39:53.900871Z	      tiers[]{
2025-09-17T00:39:53.90113Z	        quantity,
2025-09-17T00:39:53.901251Z	        price,
2025-09-17T00:39:53.901417Z	        unit
2025-09-17T00:39:53.901525Z	      },
2025-09-17T00:39:53.901624Z	      moq,
2025-09-17T00:39:53.901778Z	      leadTime,
2025-09-17T00:39:53.902351Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:53.902503Z	      "price": tiers[0].price,
2025-09-17T00:39:53.902618Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:53.902782Z	    },
2025-09-17T00:39:53.903006Z	    inventory{
2025-09-17T00:39:53.903157Z	      quantity,
2025-09-17T00:39:53.903364Z	      status,
2025-09-17T00:39:53.903536Z	      warehouse,
2025-09-17T00:39:53.90373Z	      lastUpdated,
2025-09-17T00:39:53.90388Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:53.903989Z	      "inStock": status == "in_stock",
2025-09-17T00:39:53.904081Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:53.904176Z	    },
2025-09-17T00:39:53.904277Z	    isActive,
2025-09-17T00:39:53.904381Z	    isFeatured,
2025-09-17T00:39:53.90447Z	    isNew,
2025-09-17T00:39:53.904923Z	    _createdAt,
2025-09-17T00:39:53.905079Z	    _updatedAt
2025-09-17T00:39:53.905197Z	  
2025-09-17T00:39:53.905331Z	      },
2025-09-17T00:39:53.905466Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-17T00:39:53.906036Z	    }
2025-09-17T00:39:53.906298Z	  
2025-09-17T00:39:53.906447Z	Query parameters: {
2025-09-17T00:39:53.906551Z	  limit: 8,
2025-09-17T00:39:53.906857Z	  offset: 0,
2025-09-17T00:39:53.907114Z	  category: undefined,
2025-09-17T00:39:53.907385Z	  brand: 'lem',
2025-09-17T00:39:53.907526Z	  featured: undefined
2025-09-17T00:39:53.907662Z	}
2025-09-17T00:39:53.907843Z	Fetching solutions with query: 
2025-09-17T00:39:53.907979Z	    {
2025-09-17T00:39:53.908148Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:53.908432Z	        
2025-09-17T00:39:53.908778Z	    _id,
2025-09-17T00:39:53.90899Z	    title,
2025-09-17T00:39:53.909244Z	    "slug": slug.current,
2025-09-17T00:39:53.909468Z	    summary,
2025-09-17T00:39:53.90958Z	    description,
2025-09-17T00:39:53.909842Z	    coverImage,
2025-09-17T00:39:53.90995Z	    primaryBrand->{
2025-09-17T00:39:53.910188Z	      _id,
2025-09-17T00:39:53.910502Z	      name,
2025-09-17T00:39:53.910673Z	      "slug": slug.current,
2025-09-17T00:39:53.910857Z	      logo
2025-09-17T00:39:53.911056Z	    },
2025-09-17T00:39:53.911232Z	    relatedBrands[]->{
2025-09-17T00:39:53.911453Z	      _id,
2025-09-17T00:39:53.911614Z	      name,
2025-09-17T00:39:53.911798Z	      "slug": slug.current,
2025-09-17T00:39:53.911953Z	      logo
2025-09-17T00:39:53.9123Z	    },
2025-09-17T00:39:53.912713Z	    targetMarket,
2025-09-17T00:39:53.91303Z	    complexity,
2025-09-17T00:39:53.913363Z	    publishedAt,
2025-09-17T00:39:53.913715Z	    isPublished,
2025-09-17T00:39:53.914025Z	    isFeatured,
2025-09-17T00:39:53.914133Z	    viewCount,
2025-09-17T00:39:53.914194Z	    _createdAt,
2025-09-17T00:39:53.914249Z	    _updatedAt
2025-09-17T00:39:53.914356Z	  
2025-09-17T00:39:53.914451Z	      },
2025-09-17T00:39:53.914773Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-17T00:39:53.915093Z	    }
2025-09-17T00:39:53.915345Z	  
2025-09-17T00:39:53.91549Z	Query parameters: {
2025-09-17T00:39:53.915607Z	  limit: 4,
2025-09-17T00:39:53.915814Z	  offset: 0,
2025-09-17T00:39:53.915961Z	  targetMarket: undefined,
2025-09-17T00:39:53.916102Z	  brand: 'lem',
2025-09-17T00:39:53.916258Z	  featured: undefined
2025-09-17T00:39:53.916426Z	}
2025-09-17T00:39:53.916588Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-17T00:39:53.916754Z	Fetching products with query: 
2025-09-17T00:39:53.91718Z	    {
2025-09-17T00:39:53.917494Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:53.917687Z	        
2025-09-17T00:39:53.917854Z	    _id,
2025-09-17T00:39:53.918078Z	    _type,
2025-09-17T00:39:53.918533Z	    partNumber,
2025-09-17T00:39:53.918725Z	    "slug": slug.current,
2025-09-17T00:39:53.91888Z	    title,
2025-09-17T00:39:53.919049Z	    shortDescription,
2025-09-17T00:39:53.919334Z	    image,
2025-09-17T00:39:53.919478Z	    brand->{
2025-09-17T00:39:53.919648Z	      name,
2025-09-17T00:39:53.919805Z	      "slug": slug.current,
2025-09-17T00:39:53.919946Z	      logo
2025-09-17T00:39:53.920061Z	    },
2025-09-17T00:39:53.92017Z	    category->{
2025-09-17T00:39:53.920295Z	      name,
2025-09-17T00:39:53.920412Z	      "slug": slug.current
2025-09-17T00:39:53.920515Z	    },
2025-09-17T00:39:53.920619Z	    pricing{
2025-09-17T00:39:53.920751Z	      currency,
2025-09-17T00:39:53.920876Z	      tiers[]{
2025-09-17T00:39:53.920991Z	        quantity,
2025-09-17T00:39:53.921094Z	        price,
2025-09-17T00:39:53.921198Z	        unit
2025-09-17T00:39:53.921332Z	      },
2025-09-17T00:39:53.921456Z	      moq,
2025-09-17T00:39:53.921562Z	      leadTime,
2025-09-17T00:39:53.92167Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:53.921787Z	      "price": tiers[0].price,
2025-09-17T00:39:53.921903Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:53.922011Z	    },
2025-09-17T00:39:53.922118Z	    inventory{
2025-09-17T00:39:53.922229Z	      quantity,
2025-09-17T00:39:53.922396Z	      status,
2025-09-17T00:39:53.922509Z	      warehouse,
2025-09-17T00:39:53.922614Z	      lastUpdated,
2025-09-17T00:39:53.922734Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:53.92351Z	      "inStock": status == "in_stock",
2025-09-17T00:39:53.923745Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:53.923913Z	    },
2025-09-17T00:39:53.924029Z	    isActive,
2025-09-17T00:39:53.92429Z	    isFeatured,
2025-09-17T00:39:53.924531Z	    isNew,
2025-09-17T00:39:53.924776Z	    _createdAt,
2025-09-17T00:39:53.924912Z	    _updatedAt
2025-09-17T00:39:53.92513Z	  
2025-09-17T00:39:53.925247Z	      },
2025-09-17T00:39:53.925381Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-17T00:39:53.925499Z	    }
2025-09-17T00:39:53.925598Z	  
2025-09-17T00:39:53.925782Z	Query parameters: {
2025-09-17T00:39:53.926043Z	  limit: 8,
2025-09-17T00:39:53.92624Z	  offset: 0,
2025-09-17T00:39:53.92769Z	  category: undefined,
2025-09-17T00:39:53.927903Z	  brand: 'lem',
2025-09-17T00:39:53.928085Z	  featured: undefined
2025-09-17T00:39:53.928257Z	}
2025-09-17T00:39:53.928397Z	Fetching solutions with query: 
2025-09-17T00:39:53.928511Z	    {
2025-09-17T00:39:53.928612Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:53.928713Z	        
2025-09-17T00:39:53.928811Z	    _id,
2025-09-17T00:39:53.92891Z	    title,
2025-09-17T00:39:53.929052Z	    "slug": slug.current,
2025-09-17T00:39:53.929162Z	    summary,
2025-09-17T00:39:53.929283Z	    description,
2025-09-17T00:39:53.929389Z	    coverImage,
2025-09-17T00:39:53.929489Z	    primaryBrand->{
2025-09-17T00:39:53.929688Z	      _id,
2025-09-17T00:39:53.929803Z	      name,
2025-09-17T00:39:53.929912Z	      "slug": slug.current,
2025-09-17T00:39:53.930027Z	      logo
2025-09-17T00:39:53.930128Z	    },
2025-09-17T00:39:53.930228Z	    relatedBrands[]->{
2025-09-17T00:39:53.930381Z	      _id,
2025-09-17T00:39:53.930587Z	      name,
2025-09-17T00:39:53.930822Z	      "slug": slug.current,
2025-09-17T00:39:53.93097Z	      logo
2025-09-17T00:39:53.93111Z	    },
2025-09-17T00:39:53.931452Z	    targetMarket,
2025-09-17T00:39:53.932041Z	    complexity,
2025-09-17T00:39:53.932446Z	    publishedAt,
2025-09-17T00:39:53.932599Z	    isPublished,
2025-09-17T00:39:53.932718Z	    isFeatured,
2025-09-17T00:39:53.932827Z	    viewCount,
2025-09-17T00:39:53.933015Z	    _createdAt,
2025-09-17T00:39:53.933143Z	    _updatedAt
2025-09-17T00:39:53.933254Z	  
2025-09-17T00:39:53.933381Z	      },
2025-09-17T00:39:53.933908Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-17T00:39:53.93428Z	    }
2025-09-17T00:39:53.934612Z	  
2025-09-17T00:39:53.934937Z	Query parameters: {
2025-09-17T00:39:53.935106Z	  limit: 4,
2025-09-17T00:39:53.935263Z	  offset: 0,
2025-09-17T00:39:53.935469Z	  targetMarket: undefined,
2025-09-17T00:39:53.935859Z	  brand: 'lem',
2025-09-17T00:39:53.936182Z	  featured: undefined
2025-09-17T00:39:53.936509Z	}
2025-09-17T00:39:53.936659Z	✅ [getBrandData] Found brand: LEM
2025-09-17T00:39:53.937007Z	✅ [getBrandData] Found brand: LEM
2025-09-17T00:39:53.937122Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:53.937221Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:53.93735Z	Products fetch result: {
2025-09-17T00:39:53.937454Z	  totalProducts: 3,
2025-09-17T00:39:53.937548Z	  fetchedProducts: 3,
2025-09-17T00:39:53.937638Z	  firstProduct: {
2025-09-17T00:39:53.937739Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-17T00:39:53.937848Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-17T00:39:53.93794Z	    _type: 'product',
2025-09-17T00:39:53.938034Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-17T00:39:53.938127Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-17T00:39:53.938221Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-17T00:39:53.93834Z	    image: null,
2025-09-17T00:39:53.938808Z	    inventory: {
2025-09-17T00:39:53.938949Z	      inStock: true,
2025-09-17T00:39:53.939457Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-17T00:39:53.939598Z	      quantity: 0,
2025-09-17T00:39:53.94032Z	      status: 'in_stock',
2025-09-17T00:39:53.940454Z	      warehouse: null
2025-09-17T00:39:53.940554Z	    },
2025-09-17T00:39:53.940647Z	    isActive: true,
2025-09-17T00:39:53.94074Z	    isFeatured: false,
2025-09-17T00:39:53.940849Z	    isNew: false,
2025-09-17T00:39:53.94094Z	    partNumber: 'la55-p',
2025-09-17T00:39:53.941034Z	    pricing: {
2025-09-17T00:39:53.941125Z	      currency: 'CNY',
2025-09-17T00:39:53.941228Z	      leadTime: null,
2025-09-17T00:39:53.94135Z	      moq: null,
2025-09-17T00:39:53.941451Z	      price: null,
2025-09-17T00:39:53.941548Z	      tiers: null
2025-09-17T00:39:53.941644Z	    },
2025-09-17T00:39:53.941741Z	    shortDescription: '电流传感器la55-p',
2025-09-17T00:39:53.941849Z	    slug: 'la55-p',
2025-09-17T00:39:53.941946Z	    title: '电流传感器la55-p'
2025-09-17T00:39:53.942042Z	  }
2025-09-17T00:39:53.942133Z	}
2025-09-17T00:39:53.942223Z	Products fetch result: {
2025-09-17T00:39:53.943792Z	  totalProducts: 3,
2025-09-17T00:39:53.943892Z	  fetchedProducts: 3,
2025-09-17T00:39:53.943953Z	  firstProduct: {
2025-09-17T00:39:53.944011Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-17T00:39:53.944065Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-17T00:39:53.94412Z	    _type: 'product',
2025-09-17T00:39:53.944173Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-17T00:39:53.944228Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-17T00:39:53.944311Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-17T00:39:53.944386Z	    image: null,
2025-09-17T00:39:53.944442Z	    inventory: {
2025-09-17T00:39:53.944548Z	      inStock: true,
2025-09-17T00:39:53.944702Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-17T00:39:53.944804Z	      quantity: 0,
2025-09-17T00:39:53.944865Z	      status: 'in_stock',
2025-09-17T00:39:53.944928Z	      warehouse: null
2025-09-17T00:39:53.944985Z	    },
2025-09-17T00:39:53.945043Z	    isActive: true,
2025-09-17T00:39:53.945098Z	    isFeatured: false,
2025-09-17T00:39:53.945157Z	    isNew: false,
2025-09-17T00:39:53.945213Z	    partNumber: 'la55-p',
2025-09-17T00:39:53.987386Z	    pricing: {
2025-09-17T00:39:53.987714Z	      currency: 'CNY',
2025-09-17T00:39:53.987873Z	      leadTime: null,
2025-09-17T00:39:53.987995Z	      moq: null,
2025-09-17T00:39:53.988099Z	      price: null,
2025-09-17T00:39:53.98821Z	      tiers: null
2025-09-17T00:39:53.988346Z	    },
2025-09-17T00:39:53.988461Z	    shortDescription: '电流传感器la55-p',
2025-09-17T00:39:53.988576Z	    slug: 'la55-p',
2025-09-17T00:39:53.988672Z	    title: '电流传感器la55-p'
2025-09-17T00:39:53.98877Z	  }
2025-09-17T00:39:53.988864Z	}
2025-09-17T00:39:53.988968Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-17T00:39:53.98908Z	Fetching products with query: 
2025-09-17T00:39:53.989208Z	    {
2025-09-17T00:39:53.989326Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:53.989434Z	        
2025-09-17T00:39:53.991715Z	    _id,
2025-09-17T00:39:53.992024Z	    _type,
2025-09-17T00:39:53.992435Z	    partNumber,
2025-09-17T00:39:53.992633Z	    "slug": slug.current,
2025-09-17T00:39:53.993182Z	    title,
2025-09-17T00:39:53.993347Z	    shortDescription,
2025-09-17T00:39:53.993499Z	    image,
2025-09-17T00:39:53.993645Z	    brand->{
2025-09-17T00:39:53.993885Z	      name,
2025-09-17T00:39:53.994037Z	      "slug": slug.current,
2025-09-17T00:39:53.994167Z	      logo
2025-09-17T00:39:53.994334Z	    },
2025-09-17T00:39:53.994477Z	    category->{
2025-09-17T00:39:53.994621Z	      name,
2025-09-17T00:39:53.994771Z	      "slug": slug.current
2025-09-17T00:39:53.994923Z	    },
2025-09-17T00:39:53.995072Z	    pricing{
2025-09-17T00:39:53.995221Z	      currency,
2025-09-17T00:39:53.995382Z	      tiers[]{
2025-09-17T00:39:53.995517Z	        quantity,
2025-09-17T00:39:53.995658Z	        price,
2025-09-17T00:39:53.9958Z	        unit
2025-09-17T00:39:53.995941Z	      },
2025-09-17T00:39:53.996086Z	      moq,
2025-09-17T00:39:53.996205Z	      leadTime,
2025-09-17T00:39:53.996363Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:53.996507Z	      "price": tiers[0].price,
2025-09-17T00:39:53.996662Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:53.996797Z	    },
2025-09-17T00:39:53.99898Z	    inventory{
2025-09-17T00:39:54.003408Z	      quantity,
2025-09-17T00:39:54.00358Z	      status,
2025-09-17T00:39:54.003721Z	      warehouse,
2025-09-17T00:39:54.003843Z	      lastUpdated,
2025-09-17T00:39:54.003947Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:54.004065Z	      "inStock": status == "in_stock",
2025-09-17T00:39:54.00417Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:54.004286Z	    },
2025-09-17T00:39:54.004399Z	    isActive,
2025-09-17T00:39:54.004496Z	    isFeatured,
2025-09-17T00:39:54.004596Z	    isNew,
2025-09-17T00:39:54.00471Z	    _createdAt,
2025-09-17T00:39:54.004816Z	    _updatedAt
2025-09-17T00:39:54.004965Z	  
2025-09-17T00:39:54.005211Z	      },
2025-09-17T00:39:54.005393Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-17T00:39:54.005581Z	    }
2025-09-17T00:39:54.005754Z	  
2025-09-17T00:39:54.005876Z	Query parameters: {
2025-09-17T00:39:54.00599Z	  limit: 8,
2025-09-17T00:39:54.007039Z	  offset: 0,
2025-09-17T00:39:54.007189Z	  category: undefined,
2025-09-17T00:39:54.007322Z	  brand: 'ixys',
2025-09-17T00:39:54.007445Z	  featured: undefined
2025-09-17T00:39:54.007546Z	}
2025-09-17T00:39:54.007895Z	Fetching solutions with query: 
2025-09-17T00:39:54.008245Z	    {
2025-09-17T00:39:54.008402Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:54.008741Z	        
2025-09-17T00:39:54.008867Z	    _id,
2025-09-17T00:39:54.00905Z	    title,
2025-09-17T00:39:54.009182Z	    "slug": slug.current,
2025-09-17T00:39:54.009309Z	    summary,
2025-09-17T00:39:54.009416Z	    description,
2025-09-17T00:39:54.009525Z	    coverImage,
2025-09-17T00:39:54.009626Z	    primaryBrand->{
2025-09-17T00:39:54.009807Z	      _id,
2025-09-17T00:39:54.009935Z	      name,
2025-09-17T00:39:54.010037Z	      "slug": slug.current,
2025-09-17T00:39:54.010142Z	      logo
2025-09-17T00:39:54.010241Z	    },
2025-09-17T00:39:54.010363Z	    relatedBrands[]->{
2025-09-17T00:39:54.010464Z	      _id,
2025-09-17T00:39:54.010591Z	      name,
2025-09-17T00:39:54.010695Z	      "slug": slug.current,
2025-09-17T00:39:54.010801Z	      logo
2025-09-17T00:39:54.010911Z	    },
2025-09-17T00:39:54.011007Z	    targetMarket,
2025-09-17T00:39:54.011615Z	    complexity,
2025-09-17T00:39:54.011917Z	    publishedAt,
2025-09-17T00:39:54.012046Z	    isPublished,
2025-09-17T00:39:54.012154Z	    isFeatured,
2025-09-17T00:39:54.012263Z	    viewCount,
2025-09-17T00:39:54.012427Z	    _createdAt,
2025-09-17T00:39:54.012568Z	    _updatedAt
2025-09-17T00:39:54.012676Z	  
2025-09-17T00:39:54.012776Z	      },
2025-09-17T00:39:54.012874Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-17T00:39:54.012989Z	    }
2025-09-17T00:39:54.013088Z	  
2025-09-17T00:39:54.013186Z	Query parameters: {
2025-09-17T00:39:54.013304Z	  limit: 4,
2025-09-17T00:39:54.014033Z	  offset: 0,
2025-09-17T00:39:54.01416Z	  targetMarket: undefined,
2025-09-17T00:39:54.014261Z	  brand: 'ixys',
2025-09-17T00:39:54.014388Z	  featured: undefined
2025-09-17T00:39:54.014485Z	}
2025-09-17T00:39:54.014585Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-17T00:39:54.014746Z	Fetching products with query: 
2025-09-17T00:39:54.014882Z	    {
2025-09-17T00:39:54.014994Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:54.015093Z	        
2025-09-17T00:39:54.015176Z	    _id,
2025-09-17T00:39:54.015261Z	    _type,
2025-09-17T00:39:54.015368Z	    partNumber,
2025-09-17T00:39:54.015452Z	    "slug": slug.current,
2025-09-17T00:39:54.015538Z	    title,
2025-09-17T00:39:54.015621Z	    shortDescription,
2025-09-17T00:39:54.01572Z	    image,
2025-09-17T00:39:54.015805Z	    brand->{
2025-09-17T00:39:54.016371Z	      name,
2025-09-17T00:39:54.016493Z	      "slug": slug.current,
2025-09-17T00:39:54.016591Z	      logo
2025-09-17T00:39:54.01669Z	    },
2025-09-17T00:39:54.016784Z	    category->{
2025-09-17T00:39:54.016867Z	      name,
2025-09-17T00:39:54.016954Z	      "slug": slug.current
2025-09-17T00:39:54.017045Z	    },
2025-09-17T00:39:54.017133Z	    pricing{
2025-09-17T00:39:54.017223Z	      currency,
2025-09-17T00:39:54.017332Z	      tiers[]{
2025-09-17T00:39:54.017435Z	        quantity,
2025-09-17T00:39:54.017534Z	        price,
2025-09-17T00:39:54.017622Z	        unit
2025-09-17T00:39:54.01773Z	      },
2025-09-17T00:39:54.017809Z	      moq,
2025-09-17T00:39:54.017898Z	      leadTime,
2025-09-17T00:39:54.018Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:54.0181Z	      "price": tiers[0].price,
2025-09-17T00:39:54.018201Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:54.018328Z	    },
2025-09-17T00:39:54.018432Z	    inventory{
2025-09-17T00:39:54.01853Z	      quantity,
2025-09-17T00:39:54.018635Z	      status,
2025-09-17T00:39:54.018753Z	      warehouse,
2025-09-17T00:39:54.018848Z	      lastUpdated,
2025-09-17T00:39:54.018939Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:54.019044Z	      "inStock": status == "in_stock",
2025-09-17T00:39:54.019145Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:54.019282Z	    },
2025-09-17T00:39:54.019447Z	    isActive,
2025-09-17T00:39:54.019566Z	    isFeatured,
2025-09-17T00:39:54.019672Z	    isNew,
2025-09-17T00:39:54.019787Z	    _createdAt,
2025-09-17T00:39:54.019903Z	    _updatedAt
2025-09-17T00:39:54.020039Z	  
2025-09-17T00:39:54.021012Z	      },
2025-09-17T00:39:54.021163Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-17T00:39:54.021262Z	    }
2025-09-17T00:39:54.021548Z	  
2025-09-17T00:39:54.021789Z	Query parameters: {
2025-09-17T00:39:54.02192Z	  limit: 8,
2025-09-17T00:39:54.022028Z	  offset: 0,
2025-09-17T00:39:54.022186Z	  category: undefined,
2025-09-17T00:39:54.022315Z	  brand: 'ixys',
2025-09-17T00:39:54.022415Z	  featured: undefined
2025-09-17T00:39:54.022543Z	}
2025-09-17T00:39:54.023092Z	Fetching solutions with query: 
2025-09-17T00:39:54.023365Z	    {
2025-09-17T00:39:54.023562Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:54.023734Z	        
2025-09-17T00:39:54.023858Z	    _id,
2025-09-17T00:39:54.023987Z	    title,
2025-09-17T00:39:54.024148Z	    "slug": slug.current,
2025-09-17T00:39:54.02433Z	    summary,
2025-09-17T00:39:54.024493Z	    description,
2025-09-17T00:39:54.024641Z	    coverImage,
2025-09-17T00:39:54.024771Z	    primaryBrand->{
2025-09-17T00:39:54.024912Z	      _id,
2025-09-17T00:39:54.025032Z	      name,
2025-09-17T00:39:54.025164Z	      "slug": slug.current,
2025-09-17T00:39:54.025312Z	      logo
2025-09-17T00:39:54.025418Z	    },
2025-09-17T00:39:54.025563Z	    relatedBrands[]->{
2025-09-17T00:39:54.025711Z	      _id,
2025-09-17T00:39:54.025834Z	      name,
2025-09-17T00:39:54.025986Z	      "slug": slug.current,
2025-09-17T00:39:54.026106Z	      logo
2025-09-17T00:39:54.026248Z	    },
2025-09-17T00:39:54.026401Z	    targetMarket,
2025-09-17T00:39:54.026525Z	    complexity,
2025-09-17T00:39:54.026678Z	    publishedAt,
2025-09-17T00:39:54.026961Z	    isPublished,
2025-09-17T00:39:54.027153Z	    isFeatured,
2025-09-17T00:39:54.027432Z	    viewCount,
2025-09-17T00:39:54.027567Z	    _createdAt,
2025-09-17T00:39:54.027671Z	    _updatedAt
2025-09-17T00:39:54.027783Z	  
2025-09-17T00:39:54.027883Z	      },
2025-09-17T00:39:54.028033Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-17T00:39:54.028142Z	    }
2025-09-17T00:39:54.028237Z	  
2025-09-17T00:39:54.028347Z	Query parameters: {
2025-09-17T00:39:54.028441Z	  limit: 4,
2025-09-17T00:39:54.028534Z	  offset: 0,
2025-09-17T00:39:54.028625Z	  targetMarket: undefined,
2025-09-17T00:39:54.028716Z	  brand: 'ixys',
2025-09-17T00:39:54.028807Z	  featured: undefined
2025-09-17T00:39:54.028899Z	}
2025-09-17T00:39:54.029015Z	✅ [getBrandData] Found brand: IXYS
2025-09-17T00:39:54.029152Z	✅ [getBrandData] Found brand: IXYS
2025-09-17T00:39:54.029247Z	Solutions fetch result: {
2025-09-17T00:39:54.029364Z	  totalSolutions: 1,
2025-09-17T00:39:54.029457Z	  fetchedSolutions: 1,
2025-09-17T00:39:54.029546Z	  firstSolution: {
2025-09-17T00:39:54.029639Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-17T00:39:54.029734Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-17T00:39:54.029824Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-17T00:39:54.029923Z	    complexity: 'medium',
2025-09-17T00:39:54.030032Z	    coverImage: null,
2025-09-17T00:39:54.030125Z	    description: [ [Object] ],
2025-09-17T00:39:54.030215Z	    isFeatured: false,
2025-09-17T00:39:54.030333Z	    isPublished: true,
2025-09-17T00:39:54.030429Z	    primaryBrand: {
2025-09-17T00:39:54.030538Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:54.030638Z	      logo: null,
2025-09-17T00:39:54.030732Z	      name: 'IXYS',
2025-09-17T00:39:54.030823Z	      slug: 'ixys'
2025-09-17T00:39:54.030925Z	    },
2025-09-17T00:39:54.031019Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-17T00:39:54.031108Z	    relatedBrands: null,
2025-09-17T00:39:54.03122Z	    slug: '99999',
2025-09-17T00:39:54.031332Z	    summary: '99999',
2025-09-17T00:39:54.031425Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:54.03152Z	    title: '99999',
2025-09-17T00:39:54.031611Z	    viewCount: 0
2025-09-17T00:39:54.031716Z	  }
2025-09-17T00:39:54.031817Z	}
2025-09-17T00:39:54.031927Z	Solutions fetch result: {
2025-09-17T00:39:54.032023Z	  totalSolutions: 1,
2025-09-17T00:39:54.032118Z	  fetchedSolutions: 1,
2025-09-17T00:39:54.032208Z	  firstSolution: {
2025-09-17T00:39:54.032314Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-17T00:39:54.032413Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-17T00:39:54.032516Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-17T00:39:54.03264Z	    complexity: 'medium',
2025-09-17T00:39:54.032755Z	    coverImage: null,
2025-09-17T00:39:54.03283Z	    description: [ [Object] ],
2025-09-17T00:39:54.032912Z	    isFeatured: false,
2025-09-17T00:39:54.033045Z	    isPublished: true,
2025-09-17T00:39:54.033118Z	    primaryBrand: {
2025-09-17T00:39:54.033174Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:54.033231Z	      logo: null,
2025-09-17T00:39:54.033315Z	      name: 'IXYS',
2025-09-17T00:39:54.033386Z	      slug: 'ixys'
2025-09-17T00:39:54.033451Z	    },
2025-09-17T00:39:54.033509Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-17T00:39:54.033562Z	    relatedBrands: null,
2025-09-17T00:39:54.033616Z	    slug: '99999',
2025-09-17T00:39:54.033672Z	    summary: '99999',
2025-09-17T00:39:54.033726Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:54.033779Z	    title: '99999',
2025-09-17T00:39:54.033834Z	    viewCount: 0
2025-09-17T00:39:54.033886Z	  }
2025-09-17T00:39:54.033947Z	}
2025-09-17T00:39:54.033999Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:54.034055Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:54.034114Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-17T00:39:54.034173Z	Fetching products with query: 
2025-09-17T00:39:54.034227Z	    {
2025-09-17T00:39:54.034294Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:54.034355Z	        
2025-09-17T00:39:54.03441Z	    _id,
2025-09-17T00:39:54.034463Z	    _type,
2025-09-17T00:39:54.034518Z	    partNumber,
2025-09-17T00:39:54.034571Z	    "slug": slug.current,
2025-09-17T00:39:54.034624Z	    title,
2025-09-17T00:39:54.034676Z	    shortDescription,
2025-09-17T00:39:54.034729Z	    image,
2025-09-17T00:39:54.034783Z	    brand->{
2025-09-17T00:39:54.034838Z	      name,
2025-09-17T00:39:54.034891Z	      "slug": slug.current,
2025-09-17T00:39:54.034955Z	      logo
2025-09-17T00:39:54.035008Z	    },
2025-09-17T00:39:54.035078Z	    category->{
2025-09-17T00:39:54.035135Z	      name,
2025-09-17T00:39:54.035191Z	      "slug": slug.current
2025-09-17T00:39:54.035243Z	    },
2025-09-17T00:39:54.035329Z	    pricing{
2025-09-17T00:39:54.035389Z	      currency,
2025-09-17T00:39:54.035442Z	      tiers[]{
2025-09-17T00:39:54.035501Z	        quantity,
2025-09-17T00:39:54.035557Z	        price,
2025-09-17T00:39:54.035611Z	        unit
2025-09-17T00:39:54.035664Z	      },
2025-09-17T00:39:54.035719Z	      moq,
2025-09-17T00:39:54.035773Z	      leadTime,
2025-09-17T00:39:54.035828Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:54.035887Z	      "price": tiers[0].price,
2025-09-17T00:39:54.036012Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:54.036102Z	    },
2025-09-17T00:39:54.036158Z	    inventory{
2025-09-17T00:39:54.036213Z	      quantity,
2025-09-17T00:39:54.036279Z	      status,
2025-09-17T00:39:54.036341Z	      warehouse,
2025-09-17T00:39:54.036396Z	      lastUpdated,
2025-09-17T00:39:54.036452Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:54.036508Z	      "inStock": status == "in_stock",
2025-09-17T00:39:54.036564Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:54.036617Z	    },
2025-09-17T00:39:54.036674Z	    isActive,
2025-09-17T00:39:54.036727Z	    isFeatured,
2025-09-17T00:39:54.036781Z	    isNew,
2025-09-17T00:39:54.036843Z	    _createdAt,
2025-09-17T00:39:54.036911Z	    _updatedAt
2025-09-17T00:39:54.03697Z	  
2025-09-17T00:39:54.037026Z	      },
2025-09-17T00:39:54.037082Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-17T00:39:54.037143Z	    }
2025-09-17T00:39:54.037201Z	  
2025-09-17T00:39:54.037256Z	Query parameters: {
2025-09-17T00:39:54.037346Z	  limit: 8,
2025-09-17T00:39:54.037406Z	  offset: 0,
2025-09-17T00:39:54.037461Z	  category: undefined,
2025-09-17T00:39:54.037513Z	  brand: 'littelfuse',
2025-09-17T00:39:54.037569Z	  featured: undefined
2025-09-17T00:39:54.037622Z	}
2025-09-17T00:39:54.037679Z	Fetching solutions with query: 
2025-09-17T00:39:54.037737Z	    {
2025-09-17T00:39:54.037791Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:54.037853Z	        
2025-09-17T00:39:54.037915Z	    _id,
2025-09-17T00:39:54.03797Z	    title,
2025-09-17T00:39:54.038025Z	    "slug": slug.current,
2025-09-17T00:39:54.038081Z	    summary,
2025-09-17T00:39:54.039252Z	    description,
2025-09-17T00:39:54.039871Z	    coverImage,
2025-09-17T00:39:54.040094Z	    primaryBrand->{
2025-09-17T00:39:54.040214Z	      _id,
2025-09-17T00:39:54.04035Z	      name,
2025-09-17T00:39:54.040452Z	      "slug": slug.current,
2025-09-17T00:39:54.040554Z	      logo
2025-09-17T00:39:54.040701Z	    },
2025-09-17T00:39:54.040806Z	    relatedBrands[]->{
2025-09-17T00:39:54.040914Z	      _id,
2025-09-17T00:39:54.041032Z	      name,
2025-09-17T00:39:54.04115Z	      "slug": slug.current,
2025-09-17T00:39:54.041259Z	      logo
2025-09-17T00:39:54.041403Z	    },
2025-09-17T00:39:54.041631Z	    targetMarket,
2025-09-17T00:39:54.041785Z	    complexity,
2025-09-17T00:39:54.041888Z	    publishedAt,
2025-09-17T00:39:54.042005Z	    isPublished,
2025-09-17T00:39:54.04211Z	    isFeatured,
2025-09-17T00:39:54.042214Z	    viewCount,
2025-09-17T00:39:54.042348Z	    _createdAt,
2025-09-17T00:39:54.042459Z	    _updatedAt
2025-09-17T00:39:54.042559Z	  
2025-09-17T00:39:54.042655Z	      },
2025-09-17T00:39:54.042753Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-17T00:39:54.042864Z	    }
2025-09-17T00:39:54.042952Z	  
2025-09-17T00:39:54.04301Z	Query parameters: {
2025-09-17T00:39:54.043066Z	  limit: 4,
2025-09-17T00:39:54.043121Z	  offset: 0,
2025-09-17T00:39:54.043174Z	  targetMarket: undefined,
2025-09-17T00:39:54.043235Z	  brand: 'littelfuse',
2025-09-17T00:39:54.043322Z	  featured: undefined
2025-09-17T00:39:54.043382Z	}
2025-09-17T00:39:54.043445Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-17T00:39:54.043517Z	Fetching products with query: 
2025-09-17T00:39:54.043573Z	    {
2025-09-17T00:39:54.043627Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:54.043687Z	        
2025-09-17T00:39:54.043741Z	    _id,
2025-09-17T00:39:54.043795Z	    _type,
2025-09-17T00:39:54.043848Z	    partNumber,
2025-09-17T00:39:54.043906Z	    "slug": slug.current,
2025-09-17T00:39:54.043967Z	    title,
2025-09-17T00:39:54.044022Z	    shortDescription,
2025-09-17T00:39:54.044102Z	    image,
2025-09-17T00:39:54.044159Z	    brand->{
2025-09-17T00:39:54.044213Z	      name,
2025-09-17T00:39:54.04432Z	      "slug": slug.current,
2025-09-17T00:39:54.044411Z	      logo
2025-09-17T00:39:54.04451Z	    },
2025-09-17T00:39:54.04461Z	    category->{
2025-09-17T00:39:54.044709Z	      name,
2025-09-17T00:39:54.044805Z	      "slug": slug.current
2025-09-17T00:39:54.044915Z	    },
2025-09-17T00:39:54.045017Z	    pricing{
2025-09-17T00:39:54.045122Z	      currency,
2025-09-17T00:39:54.045204Z	      tiers[]{
2025-09-17T00:39:54.04532Z	        quantity,
2025-09-17T00:39:54.045447Z	        price,
2025-09-17T00:39:54.045557Z	        unit
2025-09-17T00:39:54.045662Z	      },
2025-09-17T00:39:54.045769Z	      moq,
2025-09-17T00:39:54.045891Z	      leadTime,
2025-09-17T00:39:54.046026Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:54.046294Z	      "price": tiers[0].price,
2025-09-17T00:39:54.046506Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:54.046666Z	    },
2025-09-17T00:39:54.046851Z	    inventory{
2025-09-17T00:39:54.046991Z	      quantity,
2025-09-17T00:39:54.047116Z	      status,
2025-09-17T00:39:54.047232Z	      warehouse,
2025-09-17T00:39:54.047343Z	      lastUpdated,
2025-09-17T00:39:54.047467Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:54.04759Z	      "inStock": status == "in_stock",
2025-09-17T00:39:54.047681Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:54.047781Z	    },
2025-09-17T00:39:54.04789Z	    isActive,
2025-09-17T00:39:54.048003Z	    isFeatured,
2025-09-17T00:39:54.048125Z	    isNew,
2025-09-17T00:39:54.048259Z	    _createdAt,
2025-09-17T00:39:54.048366Z	    _updatedAt
2025-09-17T00:39:54.048428Z	  
2025-09-17T00:39:54.048507Z	      },
2025-09-17T00:39:54.048621Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-17T00:39:54.048733Z	    }
2025-09-17T00:39:54.04881Z	  
2025-09-17T00:39:54.048892Z	Query parameters: {
2025-09-17T00:39:54.048986Z	  limit: 8,
2025-09-17T00:39:54.049094Z	  offset: 0,
2025-09-17T00:39:54.049179Z	  category: undefined,
2025-09-17T00:39:54.049292Z	  brand: 'littelfuse',
2025-09-17T00:39:54.049398Z	  featured: undefined
2025-09-17T00:39:54.049572Z	}
2025-09-17T00:39:54.049667Z	Fetching solutions with query: 
2025-09-17T00:39:54.049845Z	    {
2025-09-17T00:39:54.049946Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:54.050039Z	        
2025-09-17T00:39:54.0501Z	    _id,
2025-09-17T00:39:54.050156Z	    title,
2025-09-17T00:39:54.050214Z	    "slug": slug.current,
2025-09-17T00:39:54.050292Z	    summary,
2025-09-17T00:39:54.050364Z	    description,
2025-09-17T00:39:54.05042Z	    coverImage,
2025-09-17T00:39:54.050475Z	    primaryBrand->{
2025-09-17T00:39:54.050529Z	      _id,
2025-09-17T00:39:54.050584Z	      name,
2025-09-17T00:39:54.050638Z	      "slug": slug.current,
2025-09-17T00:39:54.050691Z	      logo
2025-09-17T00:39:54.050743Z	    },
2025-09-17T00:39:54.050799Z	    relatedBrands[]->{
2025-09-17T00:39:54.050853Z	      _id,
2025-09-17T00:39:54.050908Z	      name,
2025-09-17T00:39:54.050961Z	      "slug": slug.current,
2025-09-17T00:39:54.051021Z	      logo
2025-09-17T00:39:54.051076Z	    },
2025-09-17T00:39:54.051129Z	    targetMarket,
2025-09-17T00:39:54.051202Z	    complexity,
2025-09-17T00:39:54.051281Z	    publishedAt,
2025-09-17T00:39:54.051363Z	    isPublished,
2025-09-17T00:39:54.051423Z	    isFeatured,
2025-09-17T00:39:54.051477Z	    viewCount,
2025-09-17T00:39:54.051529Z	    _createdAt,
2025-09-17T00:39:54.051583Z	    _updatedAt
2025-09-17T00:39:54.051637Z	  
2025-09-17T00:39:54.051691Z	      },
2025-09-17T00:39:54.051745Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-17T00:39:54.051807Z	    }
2025-09-17T00:39:54.051862Z	  
2025-09-17T00:39:54.051915Z	Query parameters: {
2025-09-17T00:39:54.05197Z	  limit: 4,
2025-09-17T00:39:54.052029Z	  offset: 0,
2025-09-17T00:39:54.052083Z	  targetMarket: undefined,
2025-09-17T00:39:54.052136Z	  brand: 'littelfuse',
2025-09-17T00:39:54.052188Z	  featured: undefined
2025-09-17T00:39:54.052241Z	}
2025-09-17T00:39:54.087574Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-17T00:39:54.087771Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-17T00:39:54.087873Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:54.087996Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:54.08811Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:54.088215Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:54.088344Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:54.088439Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:54.088527Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:54.088628Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:54.088768Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:54.088881Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:54.088977Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-17T00:39:54.089077Z	Fetching products with query: 
2025-09-17T00:39:54.089181Z	    {
2025-09-17T00:39:54.0893Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:54.089408Z	        
2025-09-17T00:39:54.089536Z	    _id,
2025-09-17T00:39:54.089638Z	    _type,
2025-09-17T00:39:54.089749Z	    partNumber,
2025-09-17T00:39:54.08985Z	    "slug": slug.current,
2025-09-17T00:39:54.089955Z	    title,
2025-09-17T00:39:54.090052Z	    shortDescription,
2025-09-17T00:39:54.09015Z	    image,
2025-09-17T00:39:54.090251Z	    brand->{
2025-09-17T00:39:54.090369Z	      name,
2025-09-17T00:39:54.090476Z	      "slug": slug.current,
2025-09-17T00:39:54.090602Z	      logo
2025-09-17T00:39:54.090722Z	    },
2025-09-17T00:39:54.090834Z	    category->{
2025-09-17T00:39:54.090944Z	      name,
2025-09-17T00:39:54.091039Z	      "slug": slug.current
2025-09-17T00:39:54.091135Z	    },
2025-09-17T00:39:54.091233Z	    pricing{
2025-09-17T00:39:54.091375Z	      currency,
2025-09-17T00:39:54.091473Z	      tiers[]{
2025-09-17T00:39:54.09157Z	        quantity,
2025-09-17T00:39:54.091672Z	        price,
2025-09-17T00:39:54.091768Z	        unit
2025-09-17T00:39:54.091869Z	      },
2025-09-17T00:39:54.091963Z	      moq,
2025-09-17T00:39:54.092249Z	      leadTime,
2025-09-17T00:39:54.092408Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:54.092554Z	      "price": tiers[0].price,
2025-09-17T00:39:54.09266Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:54.092774Z	    },
2025-09-17T00:39:54.092874Z	    inventory{
2025-09-17T00:39:54.092969Z	      quantity,
2025-09-17T00:39:54.093063Z	      status,
2025-09-17T00:39:54.093165Z	      warehouse,
2025-09-17T00:39:54.093281Z	      lastUpdated,
2025-09-17T00:39:54.093403Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:54.093529Z	      "inStock": status == "in_stock",
2025-09-17T00:39:54.093638Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:54.093746Z	    },
2025-09-17T00:39:54.093832Z	    isActive,
2025-09-17T00:39:54.093921Z	    isFeatured,
2025-09-17T00:39:54.094023Z	    isNew,
2025-09-17T00:39:54.09413Z	    _createdAt,
2025-09-17T00:39:54.094232Z	    _updatedAt
2025-09-17T00:39:54.09437Z	  
2025-09-17T00:39:54.09448Z	      },
2025-09-17T00:39:54.09459Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-17T00:39:54.09472Z	    }
2025-09-17T00:39:54.094831Z	  
2025-09-17T00:39:54.094939Z	Query parameters: {
2025-09-17T00:39:54.095046Z	  limit: 8,
2025-09-17T00:39:54.095147Z	  offset: 0,
2025-09-17T00:39:54.095237Z	  category: undefined,
2025-09-17T00:39:54.095359Z	  brand: 'mediatek',
2025-09-17T00:39:54.095474Z	  featured: undefined
2025-09-17T00:39:54.095576Z	}
2025-09-17T00:39:54.095678Z	Fetching solutions with query: 
2025-09-17T00:39:54.095805Z	    {
2025-09-17T00:39:54.095908Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:54.096016Z	        
2025-09-17T00:39:54.096131Z	    _id,
2025-09-17T00:39:54.096232Z	    title,
2025-09-17T00:39:54.09635Z	    "slug": slug.current,
2025-09-17T00:39:54.096476Z	    summary,
2025-09-17T00:39:54.096569Z	    description,
2025-09-17T00:39:54.096678Z	    coverImage,
2025-09-17T00:39:54.096805Z	    primaryBrand->{
2025-09-17T00:39:54.096907Z	      _id,
2025-09-17T00:39:54.097005Z	      name,
2025-09-17T00:39:54.097111Z	      "slug": slug.current,
2025-09-17T00:39:54.09721Z	      logo
2025-09-17T00:39:54.097336Z	    },
2025-09-17T00:39:54.097444Z	    relatedBrands[]->{
2025-09-17T00:39:54.097543Z	      _id,
2025-09-17T00:39:54.097637Z	      name,
2025-09-17T00:39:54.097743Z	      "slug": slug.current,
2025-09-17T00:39:54.097851Z	      logo
2025-09-17T00:39:54.097959Z	    },
2025-09-17T00:39:54.098071Z	    targetMarket,
2025-09-17T00:39:54.098174Z	    complexity,
2025-09-17T00:39:54.098286Z	    publishedAt,
2025-09-17T00:39:54.098395Z	    isPublished,
2025-09-17T00:39:54.098503Z	    isFeatured,
2025-09-17T00:39:54.098591Z	    viewCount,
2025-09-17T00:39:54.0987Z	    _createdAt,
2025-09-17T00:39:54.098805Z	    _updatedAt
2025-09-17T00:39:54.099063Z	  
2025-09-17T00:39:54.099198Z	      },
2025-09-17T00:39:54.099335Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-17T00:39:54.09944Z	    }
2025-09-17T00:39:54.099534Z	  
2025-09-17T00:39:54.099643Z	Query parameters: {
2025-09-17T00:39:54.099736Z	  limit: 4,
2025-09-17T00:39:54.099829Z	  offset: 0,
2025-09-17T00:39:54.099938Z	  targetMarket: undefined,
2025-09-17T00:39:54.100044Z	  brand: 'mediatek',
2025-09-17T00:39:54.100143Z	  featured: undefined
2025-09-17T00:39:54.100254Z	}
2025-09-17T00:39:54.100379Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-17T00:39:54.100479Z	Fetching products with query: 
2025-09-17T00:39:54.100589Z	    {
2025-09-17T00:39:54.100693Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:54.100814Z	        
2025-09-17T00:39:54.100926Z	    _id,
2025-09-17T00:39:54.101042Z	    _type,
2025-09-17T00:39:54.101153Z	    partNumber,
2025-09-17T00:39:54.101252Z	    "slug": slug.current,
2025-09-17T00:39:54.101364Z	    title,
2025-09-17T00:39:54.101468Z	    shortDescription,
2025-09-17T00:39:54.101571Z	    image,
2025-09-17T00:39:54.101665Z	    brand->{
2025-09-17T00:39:54.10177Z	      name,
2025-09-17T00:39:54.101867Z	      "slug": slug.current,
2025-09-17T00:39:54.101968Z	      logo
2025-09-17T00:39:54.102082Z	    },
2025-09-17T00:39:54.102186Z	    category->{
2025-09-17T00:39:54.102308Z	      name,
2025-09-17T00:39:54.102406Z	      "slug": slug.current
2025-09-17T00:39:54.102515Z	    },
2025-09-17T00:39:54.102615Z	    pricing{
2025-09-17T00:39:54.102708Z	      currency,
2025-09-17T00:39:54.102833Z	      tiers[]{
2025-09-17T00:39:54.10295Z	        quantity,
2025-09-17T00:39:54.103067Z	        price,
2025-09-17T00:39:54.103179Z	        unit
2025-09-17T00:39:54.103312Z	      },
2025-09-17T00:39:54.103424Z	      moq,
2025-09-17T00:39:54.103521Z	      leadTime,
2025-09-17T00:39:54.103626Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:54.103723Z	      "price": tiers[0].price,
2025-09-17T00:39:54.10383Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:54.103926Z	    },
2025-09-17T00:39:54.104028Z	    inventory{
2025-09-17T00:39:54.104141Z	      quantity,
2025-09-17T00:39:54.104253Z	      status,
2025-09-17T00:39:54.104376Z	      warehouse,
2025-09-17T00:39:54.104484Z	      lastUpdated,
2025-09-17T00:39:54.104594Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:54.104705Z	      "inStock": status == "in_stock",
2025-09-17T00:39:54.104805Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:54.104899Z	    },
2025-09-17T00:39:54.105001Z	    isActive,
2025-09-17T00:39:54.105108Z	    isFeatured,
2025-09-17T00:39:54.105203Z	    isNew,
2025-09-17T00:39:54.105324Z	    _createdAt,
2025-09-17T00:39:54.105433Z	    _updatedAt
2025-09-17T00:39:54.105542Z	  
2025-09-17T00:39:54.105645Z	      },
2025-09-17T00:39:54.105747Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-17T00:39:54.105854Z	    }
2025-09-17T00:39:54.105955Z	  
2025-09-17T00:39:54.106061Z	Query parameters: {
2025-09-17T00:39:54.106157Z	  limit: 8,
2025-09-17T00:39:54.106252Z	  offset: 0,
2025-09-17T00:39:54.106353Z	  category: undefined,
2025-09-17T00:39:54.106444Z	  brand: 'mediatek',
2025-09-17T00:39:54.10654Z	  featured: undefined
2025-09-17T00:39:54.106798Z	}
2025-09-17T00:39:54.106909Z	Fetching solutions with query: 
2025-09-17T00:39:54.107237Z	    {
2025-09-17T00:39:54.107363Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:54.107482Z	        
2025-09-17T00:39:54.107712Z	    _id,
2025-09-17T00:39:54.107828Z	    title,
2025-09-17T00:39:54.107921Z	    "slug": slug.current,
2025-09-17T00:39:54.10803Z	    summary,
2025-09-17T00:39:54.108123Z	    description,
2025-09-17T00:39:54.108196Z	    coverImage,
2025-09-17T00:39:54.10831Z	    primaryBrand->{
2025-09-17T00:39:54.108408Z	      _id,
2025-09-17T00:39:54.108483Z	      name,
2025-09-17T00:39:54.10854Z	      "slug": slug.current,
2025-09-17T00:39:54.108602Z	      logo
2025-09-17T00:39:54.108882Z	    },
2025-09-17T00:39:54.108964Z	    relatedBrands[]->{
2025-09-17T00:39:54.109045Z	      _id,
2025-09-17T00:39:54.109417Z	      name,
2025-09-17T00:39:54.109501Z	      "slug": slug.current,
2025-09-17T00:39:54.109659Z	      logo
2025-09-17T00:39:54.10976Z	    },
2025-09-17T00:39:54.109896Z	    targetMarket,
2025-09-17T00:39:54.10998Z	    complexity,
2025-09-17T00:39:54.110134Z	    publishedAt,
2025-09-17T00:39:54.110216Z	    isPublished,
2025-09-17T00:39:54.110375Z	    isFeatured,
2025-09-17T00:39:54.110524Z	    viewCount,
2025-09-17T00:39:54.110598Z	    _createdAt,
2025-09-17T00:39:54.110745Z	    _updatedAt
2025-09-17T00:39:54.110885Z	  
2025-09-17T00:39:54.110971Z	      },
2025-09-17T00:39:54.1111Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-17T00:39:54.111185Z	    }
2025-09-17T00:39:54.111247Z	  
2025-09-17T00:39:54.11142Z	Query parameters: {
2025-09-17T00:39:54.111555Z	  limit: 4,
2025-09-17T00:39:54.111684Z	  offset: 0,
2025-09-17T00:39:54.111782Z	  targetMarket: undefined,
2025-09-17T00:39:54.111915Z	  brand: 'mediatek',
2025-09-17T00:39:54.112004Z	  featured: undefined
2025-09-17T00:39:54.112144Z	}
2025-09-17T00:39:54.112236Z	✅ [getBrandData] Found brand: MediaTek
2025-09-17T00:39:54.112402Z	✅ [getBrandData] Found brand: MediaTek
2025-09-17T00:39:54.112476Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:54.112669Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:54.112767Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-17T00:39:54.112872Z	Fetching products with query: 
2025-09-17T00:39:54.112964Z	    {
2025-09-17T00:39:54.113066Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:54.113138Z	        
2025-09-17T00:39:54.11325Z	    _id,
2025-09-17T00:39:54.113354Z	    _type,
2025-09-17T00:39:54.113433Z	    partNumber,
2025-09-17T00:39:54.113501Z	    "slug": slug.current,
2025-09-17T00:39:54.11357Z	    title,
2025-09-17T00:39:54.113639Z	    shortDescription,
2025-09-17T00:39:54.113694Z	    image,
2025-09-17T00:39:54.113755Z	    brand->{
2025-09-17T00:39:54.113836Z	      name,
2025-09-17T00:39:54.113899Z	      "slug": slug.current,
2025-09-17T00:39:54.11399Z	      logo
2025-09-17T00:39:54.114112Z	    },
2025-09-17T00:39:54.114217Z	    category->{
2025-09-17T00:39:54.114336Z	      name,
2025-09-17T00:39:54.114489Z	      "slug": slug.current
2025-09-17T00:39:54.114637Z	    },
2025-09-17T00:39:54.114742Z	    pricing{
2025-09-17T00:39:54.114848Z	      currency,
2025-09-17T00:39:54.114945Z	      tiers[]{
2025-09-17T00:39:54.11506Z	        quantity,
2025-09-17T00:39:54.115169Z	        price,
2025-09-17T00:39:54.115343Z	        unit
2025-09-17T00:39:54.11543Z	      },
2025-09-17T00:39:54.115581Z	      moq,
2025-09-17T00:39:54.115658Z	      leadTime,
2025-09-17T00:39:54.115784Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:54.115903Z	      "price": tiers[0].price,
2025-09-17T00:39:54.116001Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:54.116109Z	    },
2025-09-17T00:39:54.116195Z	    inventory{
2025-09-17T00:39:54.116298Z	      quantity,
2025-09-17T00:39:54.116377Z	      status,
2025-09-17T00:39:54.116519Z	      warehouse,
2025-09-17T00:39:54.116624Z	      lastUpdated,
2025-09-17T00:39:54.116727Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:54.116831Z	      "inStock": status == "in_stock",
2025-09-17T00:39:54.116923Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:54.117025Z	    },
2025-09-17T00:39:54.11712Z	    isActive,
2025-09-17T00:39:54.117213Z	    isFeatured,
2025-09-17T00:39:54.117323Z	    isNew,
2025-09-17T00:39:54.117425Z	    _createdAt,
2025-09-17T00:39:54.117536Z	    _updatedAt
2025-09-17T00:39:54.117662Z	  
2025-09-17T00:39:54.11777Z	      },
2025-09-17T00:39:54.117874Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-17T00:39:54.117987Z	    }
2025-09-17T00:39:54.118072Z	  
2025-09-17T00:39:54.118132Z	Query parameters: {
2025-09-17T00:39:54.118189Z	  limit: 8,
2025-09-17T00:39:54.118378Z	  offset: 0,
2025-09-17T00:39:54.118544Z	  category: undefined,
2025-09-17T00:39:54.11865Z	  brand: 'pi',
2025-09-17T00:39:54.118743Z	  featured: undefined
2025-09-17T00:39:54.118851Z	}
2025-09-17T00:39:54.118971Z	Fetching solutions with query: 
2025-09-17T00:39:54.119067Z	    {
2025-09-17T00:39:54.119247Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:54.119376Z	        
2025-09-17T00:39:54.119518Z	    _id,
2025-09-17T00:39:54.119705Z	    title,
2025-09-17T00:39:54.119833Z	    "slug": slug.current,
2025-09-17T00:39:54.119936Z	    summary,
2025-09-17T00:39:54.120162Z	    description,
2025-09-17T00:39:54.120341Z	    coverImage,
2025-09-17T00:39:54.120453Z	    primaryBrand->{
2025-09-17T00:39:54.120653Z	      _id,
2025-09-17T00:39:54.120843Z	      name,
2025-09-17T00:39:54.120994Z	      "slug": slug.current,
2025-09-17T00:39:54.121312Z	      logo
2025-09-17T00:39:54.121466Z	    },
2025-09-17T00:39:54.121677Z	    relatedBrands[]->{
2025-09-17T00:39:54.121903Z	      _id,
2025-09-17T00:39:54.122032Z	      name,
2025-09-17T00:39:54.122178Z	      "slug": slug.current,
2025-09-17T00:39:54.122332Z	      logo
2025-09-17T00:39:54.12245Z	    },
2025-09-17T00:39:54.122566Z	    targetMarket,
2025-09-17T00:39:54.122749Z	    complexity,
2025-09-17T00:39:54.12294Z	    publishedAt,
2025-09-17T00:39:54.123129Z	    isPublished,
2025-09-17T00:39:54.123325Z	    isFeatured,
2025-09-17T00:39:54.123478Z	    viewCount,
2025-09-17T00:39:54.123584Z	    _createdAt,
2025-09-17T00:39:54.123673Z	    _updatedAt
2025-09-17T00:39:54.123762Z	  
2025-09-17T00:39:54.123873Z	      },
2025-09-17T00:39:54.124132Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-17T00:39:54.124217Z	    }
2025-09-17T00:39:54.124343Z	  
2025-09-17T00:39:54.124457Z	Query parameters: {
2025-09-17T00:39:54.124573Z	  limit: 4,
2025-09-17T00:39:54.124676Z	  offset: 0,
2025-09-17T00:39:54.124772Z	  targetMarket: undefined,
2025-09-17T00:39:54.124871Z	  brand: 'pi',
2025-09-17T00:39:54.124982Z	  featured: undefined
2025-09-17T00:39:54.125074Z	}
2025-09-17T00:39:54.125174Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-17T00:39:54.125306Z	Fetching products with query: 
2025-09-17T00:39:54.125414Z	    {
2025-09-17T00:39:54.125569Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:54.125745Z	        
2025-09-17T00:39:54.125948Z	    _id,
2025-09-17T00:39:54.126071Z	    _type,
2025-09-17T00:39:54.126182Z	    partNumber,
2025-09-17T00:39:54.126308Z	    "slug": slug.current,
2025-09-17T00:39:54.126413Z	    title,
2025-09-17T00:39:54.12652Z	    shortDescription,
2025-09-17T00:39:54.12663Z	    image,
2025-09-17T00:39:54.126749Z	    brand->{
2025-09-17T00:39:54.126848Z	      name,
2025-09-17T00:39:54.126947Z	      "slug": slug.current,
2025-09-17T00:39:54.127049Z	      logo
2025-09-17T00:39:54.127158Z	    },
2025-09-17T00:39:54.127287Z	    category->{
2025-09-17T00:39:54.127402Z	      name,
2025-09-17T00:39:54.127505Z	      "slug": slug.current
2025-09-17T00:39:54.127608Z	    },
2025-09-17T00:39:54.127727Z	    pricing{
2025-09-17T00:39:54.127834Z	      currency,
2025-09-17T00:39:54.127942Z	      tiers[]{
2025-09-17T00:39:54.128045Z	        quantity,
2025-09-17T00:39:54.128147Z	        price,
2025-09-17T00:39:54.128259Z	        unit
2025-09-17T00:39:54.12842Z	      },
2025-09-17T00:39:54.128558Z	      moq,
2025-09-17T00:39:54.128744Z	      leadTime,
2025-09-17T00:39:54.128884Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:54.129036Z	      "price": tiers[0].price,
2025-09-17T00:39:54.132463Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:54.132677Z	    },
2025-09-17T00:39:54.132801Z	    inventory{
2025-09-17T00:39:54.13292Z	      quantity,
2025-09-17T00:39:54.133033Z	      status,
2025-09-17T00:39:54.13314Z	      warehouse,
2025-09-17T00:39:54.133244Z	      lastUpdated,
2025-09-17T00:39:54.133406Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:54.133532Z	      "inStock": status == "in_stock",
2025-09-17T00:39:54.133646Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:54.133765Z	    },
2025-09-17T00:39:54.133872Z	    isActive,
2025-09-17T00:39:54.133977Z	    isFeatured,
2025-09-17T00:39:54.134085Z	    isNew,
2025-09-17T00:39:54.13419Z	    _createdAt,
2025-09-17T00:39:54.13432Z	    _updatedAt
2025-09-17T00:39:54.134541Z	  
2025-09-17T00:39:54.134813Z	      },
2025-09-17T00:39:54.134978Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-17T00:39:54.135129Z	    }
2025-09-17T00:39:54.135238Z	  
2025-09-17T00:39:54.135365Z	Query parameters: {
2025-09-17T00:39:54.135475Z	  limit: 8,
2025-09-17T00:39:54.135582Z	  offset: 0,
2025-09-17T00:39:54.135685Z	  category: undefined,
2025-09-17T00:39:54.135782Z	  brand: 'pi',
2025-09-17T00:39:54.135881Z	  featured: undefined
2025-09-17T00:39:54.13603Z	}
2025-09-17T00:39:54.136197Z	Fetching solutions with query: 
2025-09-17T00:39:54.136342Z	    {
2025-09-17T00:39:54.136488Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:54.136619Z	        
2025-09-17T00:39:54.13674Z	    _id,
2025-09-17T00:39:54.136863Z	    title,
2025-09-17T00:39:54.136959Z	    "slug": slug.current,
2025-09-17T00:39:54.13706Z	    summary,
2025-09-17T00:39:54.137167Z	    description,
2025-09-17T00:39:54.137293Z	    coverImage,
2025-09-17T00:39:54.137406Z	    primaryBrand->{
2025-09-17T00:39:54.137528Z	      _id,
2025-09-17T00:39:54.137637Z	      name,
2025-09-17T00:39:54.137742Z	      "slug": slug.current,
2025-09-17T00:39:54.13787Z	      logo
2025-09-17T00:39:54.137976Z	    },
2025-09-17T00:39:54.138071Z	    relatedBrands[]->{
2025-09-17T00:39:54.138171Z	      _id,
2025-09-17T00:39:54.138288Z	      name,
2025-09-17T00:39:54.138398Z	      "slug": slug.current,
2025-09-17T00:39:54.138499Z	      logo
2025-09-17T00:39:54.138609Z	    },
2025-09-17T00:39:54.138715Z	    targetMarket,
2025-09-17T00:39:54.138845Z	    complexity,
2025-09-17T00:39:54.13895Z	    publishedAt,
2025-09-17T00:39:54.139058Z	    isPublished,
2025-09-17T00:39:54.139166Z	    isFeatured,
2025-09-17T00:39:54.139287Z	    viewCount,
2025-09-17T00:39:54.1394Z	    _createdAt,
2025-09-17T00:39:54.139505Z	    _updatedAt
2025-09-17T00:39:54.139609Z	  
2025-09-17T00:39:54.139718Z	      },
2025-09-17T00:39:54.139834Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-17T00:39:54.139945Z	    }
2025-09-17T00:39:54.140095Z	  
2025-09-17T00:39:54.140224Z	Query parameters: {
2025-09-17T00:39:54.140353Z	  limit: 4,
2025-09-17T00:39:54.140456Z	  offset: 0,
2025-09-17T00:39:54.140549Z	  targetMarket: undefined,
2025-09-17T00:39:54.140644Z	  brand: 'pi',
2025-09-17T00:39:54.140743Z	  featured: undefined
2025-09-17T00:39:54.140859Z	}
2025-09-17T00:39:54.140961Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-17T00:39:54.141069Z	Fetching products with query: 
2025-09-17T00:39:54.141175Z	    {
2025-09-17T00:39:54.141316Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:54.141442Z	        
2025-09-17T00:39:54.141556Z	    _id,
2025-09-17T00:39:54.141684Z	    _type,
2025-09-17T00:39:54.141814Z	    partNumber,
2025-09-17T00:39:54.141927Z	    "slug": slug.current,
2025-09-17T00:39:54.142032Z	    title,
2025-09-17T00:39:54.142131Z	    shortDescription,
2025-09-17T00:39:54.142222Z	    image,
2025-09-17T00:39:54.142341Z	    brand->{
2025-09-17T00:39:54.142448Z	      name,
2025-09-17T00:39:54.142723Z	      "slug": slug.current,
2025-09-17T00:39:54.144007Z	      logo
2025-09-17T00:39:54.144133Z	    },
2025-09-17T00:39:54.144223Z	    category->{
2025-09-17T00:39:54.144339Z	      name,
2025-09-17T00:39:54.144441Z	      "slug": slug.current
2025-09-17T00:39:54.145004Z	    },
2025-09-17T00:39:54.145118Z	    pricing{
2025-09-17T00:39:54.145775Z	      currency,
2025-09-17T00:39:54.145932Z	      tiers[]{
2025-09-17T00:39:54.146054Z	        quantity,
2025-09-17T00:39:54.146183Z	        price,
2025-09-17T00:39:54.146315Z	        unit
2025-09-17T00:39:54.146459Z	      },
2025-09-17T00:39:54.146621Z	      moq,
2025-09-17T00:39:54.147355Z	      leadTime,
2025-09-17T00:39:54.147503Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:54.147632Z	      "price": tiers[0].price,
2025-09-17T00:39:54.147753Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:54.147913Z	    },
2025-09-17T00:39:54.148135Z	    inventory{
2025-09-17T00:39:54.148321Z	      quantity,
2025-09-17T00:39:54.1485Z	      status,
2025-09-17T00:39:54.148668Z	      warehouse,
2025-09-17T00:39:54.148831Z	      lastUpdated,
2025-09-17T00:39:54.149007Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:54.149173Z	      "inStock": status == "in_stock",
2025-09-17T00:39:54.149342Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:54.149509Z	    },
2025-09-17T00:39:54.149678Z	    isActive,
2025-09-17T00:39:54.149851Z	    isFeatured,
2025-09-17T00:39:54.15017Z	    isNew,
2025-09-17T00:39:54.150341Z	    _createdAt,
2025-09-17T00:39:54.150498Z	    _updatedAt
2025-09-17T00:39:54.15066Z	  
2025-09-17T00:39:54.150839Z	      },
2025-09-17T00:39:54.15104Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-17T00:39:54.15121Z	    }
2025-09-17T00:39:54.151388Z	  
2025-09-17T00:39:54.151548Z	Query parameters: {
2025-09-17T00:39:54.151821Z	  limit: 8,
2025-09-17T00:39:54.151972Z	  offset: 0,
2025-09-17T00:39:54.152083Z	  category: undefined,
2025-09-17T00:39:54.152245Z	  brand: 'qualcomm',
2025-09-17T00:39:54.152424Z	  featured: undefined
2025-09-17T00:39:54.152882Z	}
2025-09-17T00:39:54.153325Z	Fetching solutions with query: 
2025-09-17T00:39:54.153733Z	    {
2025-09-17T00:39:54.153941Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:54.154121Z	        
2025-09-17T00:39:54.154244Z	    _id,
2025-09-17T00:39:54.154375Z	    title,
2025-09-17T00:39:54.154483Z	    "slug": slug.current,
2025-09-17T00:39:54.154594Z	    summary,
2025-09-17T00:39:54.1547Z	    description,
2025-09-17T00:39:54.154804Z	    coverImage,
2025-09-17T00:39:54.154921Z	    primaryBrand->{
2025-09-17T00:39:54.155041Z	      _id,
2025-09-17T00:39:54.155146Z	      name,
2025-09-17T00:39:54.155252Z	      "slug": slug.current,
2025-09-17T00:39:54.155385Z	      logo
2025-09-17T00:39:54.155515Z	    },
2025-09-17T00:39:54.155628Z	    relatedBrands[]->{
2025-09-17T00:39:54.155739Z	      _id,
2025-09-17T00:39:54.155846Z	      name,
2025-09-17T00:39:54.155963Z	      "slug": slug.current,
2025-09-17T00:39:54.15607Z	      logo
2025-09-17T00:39:54.156199Z	    },
2025-09-17T00:39:54.156342Z	    targetMarket,
2025-09-17T00:39:54.156616Z	    complexity,
2025-09-17T00:39:54.156797Z	    publishedAt,
2025-09-17T00:39:54.156932Z	    isPublished,
2025-09-17T00:39:54.15704Z	    isFeatured,
2025-09-17T00:39:54.157231Z	    viewCount,
2025-09-17T00:39:54.157369Z	    _createdAt,
2025-09-17T00:39:54.157481Z	    _updatedAt
2025-09-17T00:39:54.157595Z	  
2025-09-17T00:39:54.157696Z	      },
2025-09-17T00:39:54.157819Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-17T00:39:54.157941Z	    }
2025-09-17T00:39:54.158047Z	  
2025-09-17T00:39:54.158153Z	Query parameters: {
2025-09-17T00:39:54.158282Z	  limit: 4,
2025-09-17T00:39:54.158398Z	  offset: 0,
2025-09-17T00:39:54.158512Z	  targetMarket: undefined,
2025-09-17T00:39:54.158664Z	  brand: 'qualcomm',
2025-09-17T00:39:54.15882Z	  featured: undefined
2025-09-17T00:39:54.158939Z	}
2025-09-17T00:39:54.196531Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-17T00:39:54.196806Z	Fetching products with query: 
2025-09-17T00:39:54.196937Z	    {
2025-09-17T00:39:54.198571Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:54.198754Z	        
2025-09-17T00:39:54.19888Z	    _id,
2025-09-17T00:39:54.199012Z	    _type,
2025-09-17T00:39:54.199197Z	    partNumber,
2025-09-17T00:39:54.199325Z	    "slug": slug.current,
2025-09-17T00:39:54.199431Z	    title,
2025-09-17T00:39:54.199529Z	    shortDescription,
2025-09-17T00:39:54.199637Z	    image,
2025-09-17T00:39:54.19974Z	    brand->{
2025-09-17T00:39:54.199835Z	      name,
2025-09-17T00:39:54.199941Z	      "slug": slug.current,
2025-09-17T00:39:54.200037Z	      logo
2025-09-17T00:39:54.200332Z	    },
2025-09-17T00:39:54.200463Z	    category->{
2025-09-17T00:39:54.200569Z	      name,
2025-09-17T00:39:54.20067Z	      "slug": slug.current
2025-09-17T00:39:54.200762Z	    },
2025-09-17T00:39:54.200861Z	    pricing{
2025-09-17T00:39:54.200979Z	      currency,
2025-09-17T00:39:54.201079Z	      tiers[]{
2025-09-17T00:39:54.201181Z	        quantity,
2025-09-17T00:39:54.201291Z	        price,
2025-09-17T00:39:54.20139Z	        unit
2025-09-17T00:39:54.20148Z	      },
2025-09-17T00:39:54.201583Z	      moq,
2025-09-17T00:39:54.201679Z	      leadTime,
2025-09-17T00:39:54.201783Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:54.201884Z	      "price": tiers[0].price,
2025-09-17T00:39:54.20199Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:54.202084Z	    },
2025-09-17T00:39:54.202178Z	    inventory{
2025-09-17T00:39:54.202292Z	      quantity,
2025-09-17T00:39:54.2024Z	      status,
2025-09-17T00:39:54.202515Z	      warehouse,
2025-09-17T00:39:54.202611Z	      lastUpdated,
2025-09-17T00:39:54.202707Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:54.202803Z	      "inStock": status == "in_stock",
2025-09-17T00:39:54.202894Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:54.203Z	    },
2025-09-17T00:39:54.203092Z	    isActive,
2025-09-17T00:39:54.203188Z	    isFeatured,
2025-09-17T00:39:54.203295Z	    isNew,
2025-09-17T00:39:54.203419Z	    _createdAt,
2025-09-17T00:39:54.203523Z	    _updatedAt
2025-09-17T00:39:54.203625Z	  
2025-09-17T00:39:54.203719Z	      },
2025-09-17T00:39:54.206409Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-17T00:39:54.206589Z	    }
2025-09-17T00:39:54.206717Z	  
2025-09-17T00:39:54.206835Z	Query parameters: {
2025-09-17T00:39:54.206946Z	  limit: 8,
2025-09-17T00:39:54.207054Z	  offset: 0,
2025-09-17T00:39:54.207162Z	  category: undefined,
2025-09-17T00:39:54.207302Z	  brand: 'qualcomm',
2025-09-17T00:39:54.20741Z	  featured: undefined
2025-09-17T00:39:54.207534Z	}
2025-09-17T00:39:54.207645Z	Fetching solutions with query: 
2025-09-17T00:39:54.207747Z	    {
2025-09-17T00:39:54.207838Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:54.207947Z	        
2025-09-17T00:39:54.208048Z	    _id,
2025-09-17T00:39:54.208143Z	    title,
2025-09-17T00:39:54.208232Z	    "slug": slug.current,
2025-09-17T00:39:54.208339Z	    summary,
2025-09-17T00:39:54.208425Z	    description,
2025-09-17T00:39:54.208512Z	    coverImage,
2025-09-17T00:39:54.208615Z	    primaryBrand->{
2025-09-17T00:39:54.208731Z	      _id,
2025-09-17T00:39:54.20884Z	      name,
2025-09-17T00:39:54.208949Z	      "slug": slug.current,
2025-09-17T00:39:54.209057Z	      logo
2025-09-17T00:39:54.209154Z	    },
2025-09-17T00:39:54.209248Z	    relatedBrands[]->{
2025-09-17T00:39:54.209376Z	      _id,
2025-09-17T00:39:54.209478Z	      name,
2025-09-17T00:39:54.209582Z	      "slug": slug.current,
2025-09-17T00:39:54.2097Z	      logo
2025-09-17T00:39:54.2098Z	    },
2025-09-17T00:39:54.209893Z	    targetMarket,
2025-09-17T00:39:54.209992Z	    complexity,
2025-09-17T00:39:54.210094Z	    publishedAt,
2025-09-17T00:39:54.21019Z	    isPublished,
2025-09-17T00:39:54.210312Z	    isFeatured,
2025-09-17T00:39:54.210422Z	    viewCount,
2025-09-17T00:39:54.21053Z	    _createdAt,
2025-09-17T00:39:54.210627Z	    _updatedAt
2025-09-17T00:39:54.212173Z	  
2025-09-17T00:39:54.213794Z	      },
2025-09-17T00:39:54.214124Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-17T00:39:54.214413Z	    }
2025-09-17T00:39:54.214564Z	  
2025-09-17T00:39:54.214676Z	Query parameters: {
2025-09-17T00:39:54.214876Z	  limit: 4,
2025-09-17T00:39:54.215032Z	  offset: 0,
2025-09-17T00:39:54.215183Z	  targetMarket: undefined,
2025-09-17T00:39:54.215313Z	  brand: 'qualcomm',
2025-09-17T00:39:54.215427Z	  featured: undefined
2025-09-17T00:39:54.215526Z	}
2025-09-17T00:39:54.215619Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-17T00:39:54.21571Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-17T00:39:54.215797Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:54.215891Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:54.215997Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:54.216089Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:54.216183Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:54.216292Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:54.216443Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:54.216784Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:54.216989Z	✅ [getBrandData] Found brand: PI
2025-09-17T00:39:54.217147Z	✅ [getBrandData] Found brand: PI
2025-09-17T00:39:54.217258Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:54.21738Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:54.217479Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-17T00:39:54.217579Z	Fetching products with query: 
2025-09-17T00:39:54.217693Z	    {
2025-09-17T00:39:54.217801Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:54.217923Z	        
2025-09-17T00:39:54.218033Z	    _id,
2025-09-17T00:39:54.218149Z	    _type,
2025-09-17T00:39:54.218249Z	    partNumber,
2025-09-17T00:39:54.21854Z	    "slug": slug.current,
2025-09-17T00:39:54.218702Z	    title,
2025-09-17T00:39:54.219026Z	    shortDescription,
2025-09-17T00:39:54.219362Z	    image,
2025-09-17T00:39:54.219496Z	    brand->{
2025-09-17T00:39:54.219826Z	      name,
2025-09-17T00:39:54.220153Z	      "slug": slug.current,
2025-09-17T00:39:54.220515Z	      logo
2025-09-17T00:39:54.220663Z	    },
2025-09-17T00:39:54.220836Z	    category->{
2025-09-17T00:39:54.220954Z	      name,
2025-09-17T00:39:54.221067Z	      "slug": slug.current
2025-09-17T00:39:54.221174Z	    },
2025-09-17T00:39:54.221291Z	    pricing{
2025-09-17T00:39:54.221392Z	      currency,
2025-09-17T00:39:54.221489Z	      tiers[]{
2025-09-17T00:39:54.221586Z	        quantity,
2025-09-17T00:39:54.2217Z	        price,
2025-09-17T00:39:54.221916Z	        unit
2025-09-17T00:39:54.222082Z	      },
2025-09-17T00:39:54.222345Z	      moq,
2025-09-17T00:39:54.223783Z	      leadTime,
2025-09-17T00:39:54.223964Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:54.224141Z	      "price": tiers[0].price,
2025-09-17T00:39:54.224327Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:54.224566Z	    },
2025-09-17T00:39:54.224779Z	    inventory{
2025-09-17T00:39:54.224942Z	      quantity,
2025-09-17T00:39:54.225072Z	      status,
2025-09-17T00:39:54.225202Z	      warehouse,
2025-09-17T00:39:54.22533Z	      lastUpdated,
2025-09-17T00:39:54.22543Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:54.225522Z	      "inStock": status == "in_stock",
2025-09-17T00:39:54.225616Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:54.225713Z	    },
2025-09-17T00:39:54.225811Z	    isActive,
2025-09-17T00:39:54.225904Z	    isFeatured,
2025-09-17T00:39:54.226016Z	    isNew,
2025-09-17T00:39:54.226111Z	    _createdAt,
2025-09-17T00:39:54.226209Z	    _updatedAt
2025-09-17T00:39:54.226341Z	  
2025-09-17T00:39:54.22645Z	      },
2025-09-17T00:39:54.226578Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-17T00:39:54.226707Z	    }
2025-09-17T00:39:54.22681Z	  
2025-09-17T00:39:54.22691Z	Query parameters: {
2025-09-17T00:39:54.227005Z	  limit: 8,
2025-09-17T00:39:54.227091Z	  offset: 0,
2025-09-17T00:39:54.227185Z	  category: undefined,
2025-09-17T00:39:54.227301Z	  brand: 'semikron',
2025-09-17T00:39:54.227406Z	  featured: undefined
2025-09-17T00:39:54.227508Z	}
2025-09-17T00:39:54.227605Z	Fetching solutions with query: 
2025-09-17T00:39:54.227725Z	    {
2025-09-17T00:39:54.227834Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:54.227948Z	        
2025-09-17T00:39:54.228052Z	    _id,
2025-09-17T00:39:54.228202Z	    title,
2025-09-17T00:39:54.228394Z	    "slug": slug.current,
2025-09-17T00:39:54.228512Z	    summary,
2025-09-17T00:39:54.228783Z	    description,
2025-09-17T00:39:54.228955Z	    coverImage,
2025-09-17T00:39:54.22908Z	    primaryBrand->{
2025-09-17T00:39:54.229193Z	      _id,
2025-09-17T00:39:54.229323Z	      name,
2025-09-17T00:39:54.22943Z	      "slug": slug.current,
2025-09-17T00:39:54.229562Z	      logo
2025-09-17T00:39:54.229682Z	    },
2025-09-17T00:39:54.230024Z	    relatedBrands[]->{
2025-09-17T00:39:54.230408Z	      _id,
2025-09-17T00:39:54.23067Z	      name,
2025-09-17T00:39:54.23088Z	      "slug": slug.current,
2025-09-17T00:39:54.231043Z	      logo
2025-09-17T00:39:54.231322Z	    },
2025-09-17T00:39:54.231493Z	    targetMarket,
2025-09-17T00:39:54.231652Z	    complexity,
2025-09-17T00:39:54.231796Z	    publishedAt,
2025-09-17T00:39:54.23199Z	    isPublished,
2025-09-17T00:39:54.232139Z	    isFeatured,
2025-09-17T00:39:54.232244Z	    viewCount,
2025-09-17T00:39:54.232362Z	    _createdAt,
2025-09-17T00:39:54.232464Z	    _updatedAt
2025-09-17T00:39:54.232592Z	  
2025-09-17T00:39:54.232812Z	      },
2025-09-17T00:39:54.233028Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-17T00:39:54.233135Z	    }
2025-09-17T00:39:54.233239Z	  
2025-09-17T00:39:54.23336Z	Query parameters: {
2025-09-17T00:39:54.233472Z	  limit: 4,
2025-09-17T00:39:54.233557Z	  offset: 0,
2025-09-17T00:39:54.233616Z	  targetMarket: undefined,
2025-09-17T00:39:54.233674Z	  brand: 'semikron',
2025-09-17T00:39:54.233761Z	  featured: undefined
2025-09-17T00:39:54.233867Z	}
2025-09-17T00:39:54.233971Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-17T00:39:54.234074Z	Fetching products with query: 
2025-09-17T00:39:54.23417Z	    {
2025-09-17T00:39:54.235094Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:54.23524Z	        
2025-09-17T00:39:54.235384Z	    _id,
2025-09-17T00:39:54.235486Z	    _type,
2025-09-17T00:39:54.235583Z	    partNumber,
2025-09-17T00:39:54.235694Z	    "slug": slug.current,
2025-09-17T00:39:54.235801Z	    title,
2025-09-17T00:39:54.235901Z	    shortDescription,
2025-09-17T00:39:54.236006Z	    image,
2025-09-17T00:39:54.236148Z	    brand->{
2025-09-17T00:39:54.236353Z	      name,
2025-09-17T00:39:54.236546Z	      "slug": slug.current,
2025-09-17T00:39:54.236684Z	      logo
2025-09-17T00:39:54.237528Z	    },
2025-09-17T00:39:54.237715Z	    category->{
2025-09-17T00:39:54.237839Z	      name,
2025-09-17T00:39:54.237949Z	      "slug": slug.current
2025-09-17T00:39:54.238054Z	    },
2025-09-17T00:39:54.23816Z	    pricing{
2025-09-17T00:39:54.238259Z	      currency,
2025-09-17T00:39:54.2384Z	      tiers[]{
2025-09-17T00:39:54.2385Z	        quantity,
2025-09-17T00:39:54.287596Z	        price,
2025-09-17T00:39:54.287978Z	        unit
2025-09-17T00:39:54.29199Z	      },
2025-09-17T00:39:54.292476Z	      moq,
2025-09-17T00:39:54.292649Z	      leadTime,
2025-09-17T00:39:54.293356Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:54.293711Z	      "price": tiers[0].price,
2025-09-17T00:39:54.293913Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:54.294128Z	    },
2025-09-17T00:39:54.294293Z	    inventory{
2025-09-17T00:39:54.294517Z	      quantity,
2025-09-17T00:39:54.294686Z	      status,
2025-09-17T00:39:54.294819Z	      warehouse,
2025-09-17T00:39:54.295008Z	      lastUpdated,
2025-09-17T00:39:54.296188Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:54.296448Z	      "inStock": status == "in_stock",
2025-09-17T00:39:54.29684Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:54.296997Z	    },
2025-09-17T00:39:54.297175Z	    isActive,
2025-09-17T00:39:54.297311Z	    isFeatured,
2025-09-17T00:39:54.297429Z	    isNew,
2025-09-17T00:39:54.297564Z	    _createdAt,
2025-09-17T00:39:54.297792Z	    _updatedAt
2025-09-17T00:39:54.29797Z	  
2025-09-17T00:39:54.298278Z	      },
2025-09-17T00:39:54.298528Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-17T00:39:54.298724Z	    }
2025-09-17T00:39:54.298882Z	  
2025-09-17T00:39:54.299049Z	Query parameters: {
2025-09-17T00:39:54.299221Z	  limit: 8,
2025-09-17T00:39:54.299424Z	  offset: 0,
2025-09-17T00:39:54.299574Z	  category: undefined,
2025-09-17T00:39:54.299771Z	  brand: 'semikron',
2025-09-17T00:39:54.299938Z	  featured: undefined
2025-09-17T00:39:54.300095Z	}
2025-09-17T00:39:54.300251Z	Fetching solutions with query: 
2025-09-17T00:39:54.300438Z	    {
2025-09-17T00:39:54.300594Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:54.300783Z	        
2025-09-17T00:39:54.300956Z	    _id,
2025-09-17T00:39:54.301122Z	    title,
2025-09-17T00:39:54.301312Z	    "slug": slug.current,
2025-09-17T00:39:54.301477Z	    summary,
2025-09-17T00:39:54.301642Z	    description,
2025-09-17T00:39:54.301802Z	    coverImage,
2025-09-17T00:39:54.301981Z	    primaryBrand->{
2025-09-17T00:39:54.302138Z	      _id,
2025-09-17T00:39:54.30231Z	      name,
2025-09-17T00:39:54.302468Z	      "slug": slug.current,
2025-09-17T00:39:54.302626Z	      logo
2025-09-17T00:39:54.302799Z	    },
2025-09-17T00:39:54.30296Z	    relatedBrands[]->{
2025-09-17T00:39:54.303106Z	      _id,
2025-09-17T00:39:54.303263Z	      name,
2025-09-17T00:39:54.303407Z	      "slug": slug.current,
2025-09-17T00:39:54.303559Z	      logo
2025-09-17T00:39:54.303731Z	    },
2025-09-17T00:39:54.303891Z	    targetMarket,
2025-09-17T00:39:54.304048Z	    complexity,
2025-09-17T00:39:54.304171Z	    publishedAt,
2025-09-17T00:39:54.304379Z	    isPublished,
2025-09-17T00:39:54.304526Z	    isFeatured,
2025-09-17T00:39:54.304649Z	    viewCount,
2025-09-17T00:39:54.30475Z	    _createdAt,
2025-09-17T00:39:54.304852Z	    _updatedAt
2025-09-17T00:39:54.311412Z	  
2025-09-17T00:39:54.311562Z	      },
2025-09-17T00:39:54.311669Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-17T00:39:54.31182Z	    }
2025-09-17T00:39:54.311993Z	  
2025-09-17T00:39:54.312102Z	Query parameters: {
2025-09-17T00:39:54.312225Z	  limit: 4,
2025-09-17T00:39:54.312393Z	  offset: 0,
2025-09-17T00:39:54.312501Z	  targetMarket: undefined,
2025-09-17T00:39:54.312633Z	  brand: 'semikron',
2025-09-17T00:39:54.312771Z	  featured: undefined
2025-09-17T00:39:54.312872Z	}
2025-09-17T00:39:54.312976Z	Products fetch result: {
2025-09-17T00:39:54.313076Z	  totalProducts: 1,
2025-09-17T00:39:54.313177Z	  fetchedProducts: 1,
2025-09-17T00:39:54.313293Z	  firstProduct: {
2025-09-17T00:39:54.313405Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-17T00:39:54.31351Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-17T00:39:54.313961Z	    _type: 'product',
2025-09-17T00:39:54.31424Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-17T00:39:54.314461Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-17T00:39:54.314672Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:54.314793Z	    image: null,
2025-09-17T00:39:54.314891Z	    inventory: {
2025-09-17T00:39:54.31499Z	      inStock: true,
2025-09-17T00:39:54.315081Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-17T00:39:54.315168Z	      quantity: 0,
2025-09-17T00:39:54.315259Z	      status: 'in_stock',
2025-09-17T00:39:54.315377Z	      warehouse: null
2025-09-17T00:39:54.315477Z	    },
2025-09-17T00:39:54.315565Z	    isActive: true,
2025-09-17T00:39:54.315651Z	    isFeatured: false,
2025-09-17T00:39:54.315747Z	    isNew: false,
2025-09-17T00:39:54.315844Z	    partNumber: 'SKKT106/16E',
2025-09-17T00:39:54.315939Z	    pricing: {
2025-09-17T00:39:54.316027Z	      currency: 'CNY',
2025-09-17T00:39:54.316117Z	      leadTime: null,
2025-09-17T00:39:54.316205Z	      moq: null,
2025-09-17T00:39:54.316669Z	      price: null,
2025-09-17T00:39:54.316787Z	      tiers: null
2025-09-17T00:39:54.317091Z	    },
2025-09-17T00:39:54.317427Z	    shortDescription: 'SKKT106/16E',
2025-09-17T00:39:54.317746Z	    slug: 'SKKT106/16E',
2025-09-17T00:39:54.317847Z	    title: 'SKKT106/16E'
2025-09-17T00:39:54.317944Z	  }
2025-09-17T00:39:54.318245Z	}
2025-09-17T00:39:54.318381Z	Products fetch result: {
2025-09-17T00:39:54.318493Z	  totalProducts: 1,
2025-09-17T00:39:54.3186Z	  fetchedProducts: 1,
2025-09-17T00:39:54.318706Z	  firstProduct: {
2025-09-17T00:39:54.318811Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-17T00:39:54.31892Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-17T00:39:54.319023Z	    _type: 'product',
2025-09-17T00:39:54.319106Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-17T00:39:54.319192Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-17T00:39:54.319325Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:54.319438Z	    image: null,
2025-09-17T00:39:54.319535Z	    inventory: {
2025-09-17T00:39:54.319623Z	      inStock: true,
2025-09-17T00:39:54.319719Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-17T00:39:54.319812Z	      quantity: 0,
2025-09-17T00:39:54.319909Z	      status: 'in_stock',
2025-09-17T00:39:54.319997Z	      warehouse: null
2025-09-17T00:39:54.320083Z	    },
2025-09-17T00:39:54.320167Z	    isActive: true,
2025-09-17T00:39:54.320263Z	    isFeatured: false,
2025-09-17T00:39:54.320376Z	    isNew: false,
2025-09-17T00:39:54.320463Z	    partNumber: 'SKKT106/16E',
2025-09-17T00:39:54.32055Z	    pricing: {
2025-09-17T00:39:54.320635Z	      currency: 'CNY',
2025-09-17T00:39:54.32073Z	      leadTime: null,
2025-09-17T00:39:54.320821Z	      moq: null,
2025-09-17T00:39:54.320957Z	      price: null,
2025-09-17T00:39:54.321125Z	      tiers: null
2025-09-17T00:39:54.321238Z	    },
2025-09-17T00:39:54.321375Z	    shortDescription: 'SKKT106/16E',
2025-09-17T00:39:54.321485Z	    slug: 'SKKT106/16E',
2025-09-17T00:39:54.321586Z	    title: 'SKKT106/16E'
2025-09-17T00:39:54.321704Z	  }
2025-09-17T00:39:54.321805Z	}
2025-09-17T00:39:54.321902Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:54.322004Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:54.322102Z	✅ [getBrandData] Found brand: Semikron
2025-09-17T00:39:54.322199Z	✅ [getBrandData] Found brand: Semikron
2025-09-17T00:39:54.322329Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-17T00:39:54.322449Z	Fetching products with query: 
2025-09-17T00:39:54.32262Z	    {
2025-09-17T00:39:54.324135Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:54.32452Z	        
2025-09-17T00:39:54.324737Z	    _id,
2025-09-17T00:39:54.325086Z	    _type,
2025-09-17T00:39:54.325357Z	    partNumber,
2025-09-17T00:39:54.326586Z	    "slug": slug.current,
2025-09-17T00:39:54.327155Z	    title,
2025-09-17T00:39:54.327326Z	    shortDescription,
2025-09-17T00:39:54.327706Z	    image,
2025-09-17T00:39:54.32788Z	    brand->{
2025-09-17T00:39:54.328341Z	      name,
2025-09-17T00:39:54.32846Z	      "slug": slug.current,
2025-09-17T00:39:54.328564Z	      logo
2025-09-17T00:39:54.329049Z	    },
2025-09-17T00:39:54.329163Z	    category->{
2025-09-17T00:39:54.329293Z	      name,
2025-09-17T00:39:54.32946Z	      "slug": slug.current
2025-09-17T00:39:54.32958Z	    },
2025-09-17T00:39:54.329688Z	    pricing{
2025-09-17T00:39:54.32979Z	      currency,
2025-09-17T00:39:54.330157Z	      tiers[]{
2025-09-17T00:39:54.330358Z	        quantity,
2025-09-17T00:39:54.330594Z	        price,
2025-09-17T00:39:54.330901Z	        unit
2025-09-17T00:39:54.331067Z	      },
2025-09-17T00:39:54.331191Z	      moq,
2025-09-17T00:39:54.331338Z	      leadTime,
2025-09-17T00:39:54.331583Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:54.331719Z	      "price": tiers[0].price,
2025-09-17T00:39:54.331828Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:54.331937Z	    },
2025-09-17T00:39:54.332047Z	    inventory{
2025-09-17T00:39:54.332154Z	      quantity,
2025-09-17T00:39:54.332263Z	      status,
2025-09-17T00:39:54.332472Z	      warehouse,
2025-09-17T00:39:54.332644Z	      lastUpdated,
2025-09-17T00:39:54.332785Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:54.33289Z	      "inStock": status == "in_stock",
2025-09-17T00:39:54.33315Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:54.333414Z	    },
2025-09-17T00:39:54.333575Z	    isActive,
2025-09-17T00:39:54.333745Z	    isFeatured,
2025-09-17T00:39:54.333886Z	    isNew,
2025-09-17T00:39:54.333999Z	    _createdAt,
2025-09-17T00:39:54.334172Z	    _updatedAt
2025-09-17T00:39:54.334455Z	  
2025-09-17T00:39:54.334694Z	      },
2025-09-17T00:39:54.334816Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-17T00:39:54.33493Z	    }
2025-09-17T00:39:54.33503Z	  
2025-09-17T00:39:54.335125Z	Query parameters: {
2025-09-17T00:39:54.335232Z	  limit: 8,
2025-09-17T00:39:54.33538Z	  offset: 0,
2025-09-17T00:39:54.335487Z	  category: undefined,
2025-09-17T00:39:54.33574Z	  brand: 'sanrex',
2025-09-17T00:39:54.335873Z	  featured: undefined
2025-09-17T00:39:54.335993Z	}
2025-09-17T00:39:54.336094Z	Fetching solutions with query: 
2025-09-17T00:39:54.336186Z	    {
2025-09-17T00:39:54.336306Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:54.336419Z	        
2025-09-17T00:39:54.336539Z	    _id,
2025-09-17T00:39:54.336666Z	    title,
2025-09-17T00:39:54.336808Z	    "slug": slug.current,
2025-09-17T00:39:54.336935Z	    summary,
2025-09-17T00:39:54.337051Z	    description,
2025-09-17T00:39:54.337154Z	    coverImage,
2025-09-17T00:39:54.337259Z	    primaryBrand->{
2025-09-17T00:39:54.33746Z	      _id,
2025-09-17T00:39:54.337603Z	      name,
2025-09-17T00:39:54.337813Z	      "slug": slug.current,
2025-09-17T00:39:54.337963Z	      logo
2025-09-17T00:39:54.338117Z	    },
2025-09-17T00:39:54.338257Z	    relatedBrands[]->{
2025-09-17T00:39:54.338384Z	      _id,
2025-09-17T00:39:54.338487Z	      name,
2025-09-17T00:39:54.338588Z	      "slug": slug.current,
2025-09-17T00:39:54.338684Z	      logo
2025-09-17T00:39:54.338779Z	    },
2025-09-17T00:39:54.338874Z	    targetMarket,
2025-09-17T00:39:54.339009Z	    complexity,
2025-09-17T00:39:54.339133Z	    publishedAt,
2025-09-17T00:39:54.339306Z	    isPublished,
2025-09-17T00:39:54.339579Z	    isFeatured,
2025-09-17T00:39:54.339789Z	    viewCount,
2025-09-17T00:39:54.339927Z	    _createdAt,
2025-09-17T00:39:54.34004Z	    _updatedAt
2025-09-17T00:39:54.340145Z	  
2025-09-17T00:39:54.340247Z	      },
2025-09-17T00:39:54.340374Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-17T00:39:54.340485Z	    }
2025-09-17T00:39:54.340604Z	  
2025-09-17T00:39:54.340771Z	Query parameters: {
2025-09-17T00:39:54.340909Z	  limit: 4,
2025-09-17T00:39:54.341105Z	  offset: 0,
2025-09-17T00:39:54.341225Z	  targetMarket: undefined,
2025-09-17T00:39:54.341366Z	  brand: 'sanrex',
2025-09-17T00:39:54.341584Z	  featured: undefined
2025-09-17T00:39:54.341883Z	}
2025-09-17T00:39:54.342142Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-17T00:39:54.342293Z	Fetching products with query: 
2025-09-17T00:39:54.3424Z	    {
2025-09-17T00:39:54.342491Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:54.34259Z	        
2025-09-17T00:39:54.343119Z	    _id,
2025-09-17T00:39:54.34344Z	    _type,
2025-09-17T00:39:54.343541Z	    partNumber,
2025-09-17T00:39:54.343604Z	    "slug": slug.current,
2025-09-17T00:39:54.343673Z	    title,
2025-09-17T00:39:54.344029Z	    shortDescription,
2025-09-17T00:39:54.344095Z	    image,
2025-09-17T00:39:54.34415Z	    brand->{
2025-09-17T00:39:54.344204Z	      name,
2025-09-17T00:39:54.344257Z	      "slug": slug.current,
2025-09-17T00:39:54.344347Z	      logo
2025-09-17T00:39:54.344404Z	    },
2025-09-17T00:39:54.344495Z	    category->{
2025-09-17T00:39:54.344553Z	      name,
2025-09-17T00:39:54.344609Z	      "slug": slug.current
2025-09-17T00:39:54.344678Z	    },
2025-09-17T00:39:54.344732Z	    pricing{
2025-09-17T00:39:54.344784Z	      currency,
2025-09-17T00:39:54.344838Z	      tiers[]{
2025-09-17T00:39:54.344892Z	        quantity,
2025-09-17T00:39:54.344954Z	        price,
2025-09-17T00:39:54.345014Z	        unit
2025-09-17T00:39:54.345072Z	      },
2025-09-17T00:39:54.345125Z	      moq,
2025-09-17T00:39:54.34518Z	      leadTime,
2025-09-17T00:39:54.345252Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:54.3876Z	      "price": tiers[0].price,
2025-09-17T00:39:54.387854Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:54.38804Z	    },
2025-09-17T00:39:54.388226Z	    inventory{
2025-09-17T00:39:54.388401Z	      quantity,
2025-09-17T00:39:54.388558Z	      status,
2025-09-17T00:39:54.388713Z	      warehouse,
2025-09-17T00:39:54.388893Z	      lastUpdated,
2025-09-17T00:39:54.389095Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:54.389234Z	      "inStock": status == "in_stock",
2025-09-17T00:39:54.389423Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:54.38959Z	    },
2025-09-17T00:39:54.389822Z	    isActive,
2025-09-17T00:39:54.392133Z	    isFeatured,
2025-09-17T00:39:54.392759Z	    isNew,
2025-09-17T00:39:54.39322Z	    _createdAt,
2025-09-17T00:39:54.393917Z	    _updatedAt
2025-09-17T00:39:54.394211Z	  
2025-09-17T00:39:54.394899Z	      },
2025-09-17T00:39:54.395429Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-17T00:39:54.395957Z	    }
2025-09-17T00:39:54.396085Z	  
2025-09-17T00:39:54.396196Z	Query parameters: {
2025-09-17T00:39:54.396402Z	  limit: 8,
2025-09-17T00:39:54.396561Z	  offset: 0,
2025-09-17T00:39:54.396724Z	  category: undefined,
2025-09-17T00:39:54.396932Z	  brand: 'sanrex',
2025-09-17T00:39:54.397124Z	  featured: undefined
2025-09-17T00:39:54.397242Z	}
2025-09-17T00:39:54.397367Z	Fetching solutions with query: 
2025-09-17T00:39:54.397483Z	    {
2025-09-17T00:39:54.397593Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:54.397785Z	        
2025-09-17T00:39:54.398012Z	    _id,
2025-09-17T00:39:54.398142Z	    title,
2025-09-17T00:39:54.39825Z	    "slug": slug.current,
2025-09-17T00:39:54.398515Z	    summary,
2025-09-17T00:39:54.39873Z	    description,
2025-09-17T00:39:54.398902Z	    coverImage,
2025-09-17T00:39:54.399071Z	    primaryBrand->{
2025-09-17T00:39:54.399248Z	      _id,
2025-09-17T00:39:54.399445Z	      name,
2025-09-17T00:39:54.399602Z	      "slug": slug.current,
2025-09-17T00:39:54.399761Z	      logo
2025-09-17T00:39:54.399895Z	    },
2025-09-17T00:39:54.400037Z	    relatedBrands[]->{
2025-09-17T00:39:54.400164Z	      _id,
2025-09-17T00:39:54.400308Z	      name,
2025-09-17T00:39:54.40062Z	      "slug": slug.current,
2025-09-17T00:39:54.400821Z	      logo
2025-09-17T00:39:54.40099Z	    },
2025-09-17T00:39:54.401294Z	    targetMarket,
2025-09-17T00:39:54.40149Z	    complexity,
2025-09-17T00:39:54.401672Z	    publishedAt,
2025-09-17T00:39:54.401821Z	    isPublished,
2025-09-17T00:39:54.402016Z	    isFeatured,
2025-09-17T00:39:54.402202Z	    viewCount,
2025-09-17T00:39:54.402364Z	    _createdAt,
2025-09-17T00:39:54.402564Z	    _updatedAt
2025-09-17T00:39:54.40274Z	  
2025-09-17T00:39:54.40289Z	      },
2025-09-17T00:39:54.403013Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-17T00:39:54.403126Z	    }
2025-09-17T00:39:54.403424Z	  
2025-09-17T00:39:54.40356Z	Query parameters: {
2025-09-17T00:39:54.403742Z	  limit: 4,
2025-09-17T00:39:54.403866Z	  offset: 0,
2025-09-17T00:39:54.403981Z	  targetMarket: undefined,
2025-09-17T00:39:54.404096Z	  brand: 'sanrex',
2025-09-17T00:39:54.40424Z	  featured: undefined
2025-09-17T00:39:54.404431Z	}
2025-09-17T00:39:54.404528Z	✅ [getBrandData] Found brand: Sanrex
2025-09-17T00:39:54.404622Z	✅ [getBrandData] Found brand: Sanrex
2025-09-17T00:39:54.404715Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:54.404827Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:54.405007Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:54.405194Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:54.405688Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:54.405954Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:54.406077Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:54.406189Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-17T00:39:54.406441Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:39:54.406621Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619) {
2025-09-17T00:39:54.406778Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:39:54.406913Z	}
2025-09-17T00:39:54.407048Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:54.407553Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-17T00:39:54.407733Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:39:54.408053Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619) {
2025-09-17T00:39:54.408296Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:39:54.408483Z	}
2025-09-17T00:39:54.408594Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-17T00:39:54.408735Z	Fetching products with query: 
2025-09-17T00:39:54.408846Z	    {
2025-09-17T00:39:54.408946Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:54.409057Z	        
2025-09-17T00:39:54.409155Z	    _id,
2025-09-17T00:39:54.409225Z	    _type,
2025-09-17T00:39:54.409324Z	    partNumber,
2025-09-17T00:39:54.409428Z	    "slug": slug.current,
2025-09-17T00:39:54.409505Z	    title,
2025-09-17T00:39:54.409576Z	    shortDescription,
2025-09-17T00:39:54.40966Z	    image,
2025-09-17T00:39:54.409769Z	    brand->{
2025-09-17T00:39:54.409925Z	      name,
2025-09-17T00:39:54.41011Z	      "slug": slug.current,
2025-09-17T00:39:54.410224Z	      logo
2025-09-17T00:39:54.410339Z	    },
2025-09-17T00:39:54.410439Z	    category->{
2025-09-17T00:39:54.410534Z	      name,
2025-09-17T00:39:54.410676Z	      "slug": slug.current
2025-09-17T00:39:54.410788Z	    },
2025-09-17T00:39:54.410913Z	    pricing{
2025-09-17T00:39:54.411106Z	      currency,
2025-09-17T00:39:54.411211Z	      tiers[]{
2025-09-17T00:39:54.411334Z	        quantity,
2025-09-17T00:39:54.411444Z	        price,
2025-09-17T00:39:54.41156Z	        unit
2025-09-17T00:39:54.411764Z	      },
2025-09-17T00:39:54.412064Z	      moq,
2025-09-17T00:39:54.412294Z	      leadTime,
2025-09-17T00:39:54.412509Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:54.412671Z	      "price": tiers[0].price,
2025-09-17T00:39:54.412803Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:54.41303Z	    },
2025-09-17T00:39:54.413175Z	    inventory{
2025-09-17T00:39:54.413358Z	      quantity,
2025-09-17T00:39:54.413489Z	      status,
2025-09-17T00:39:54.413601Z	      warehouse,
2025-09-17T00:39:54.413735Z	      lastUpdated,
2025-09-17T00:39:54.414086Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:54.414234Z	      "inStock": status == "in_stock",
2025-09-17T00:39:54.41437Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:54.414485Z	    },
2025-09-17T00:39:54.414593Z	    isActive,
2025-09-17T00:39:54.414724Z	    isFeatured,
2025-09-17T00:39:54.414836Z	    isNew,
2025-09-17T00:39:54.414941Z	    _createdAt,
2025-09-17T00:39:54.415045Z	    _updatedAt
2025-09-17T00:39:54.415151Z	  
2025-09-17T00:39:54.415256Z	      },
2025-09-17T00:39:54.4154Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-17T00:39:54.415533Z	    }
2025-09-17T00:39:54.415675Z	  
2025-09-17T00:39:54.415797Z	Query parameters: {
2025-09-17T00:39:54.415921Z	  limit: 8,
2025-09-17T00:39:54.41603Z	  offset: 0,
2025-09-17T00:39:54.421585Z	  category: undefined,
2025-09-17T00:39:54.422014Z	  brand: '英飞凌',
2025-09-17T00:39:54.4222Z	  featured: undefined
2025-09-17T00:39:54.422402Z	}
2025-09-17T00:39:54.422528Z	Fetching solutions with query: 
2025-09-17T00:39:54.422694Z	    {
2025-09-17T00:39:54.422811Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:54.42294Z	        
2025-09-17T00:39:54.423043Z	    _id,
2025-09-17T00:39:54.423312Z	    title,
2025-09-17T00:39:54.423429Z	    "slug": slug.current,
2025-09-17T00:39:54.42353Z	    summary,
2025-09-17T00:39:54.423625Z	    description,
2025-09-17T00:39:54.423803Z	    coverImage,
2025-09-17T00:39:54.423956Z	    primaryBrand->{
2025-09-17T00:39:54.424144Z	      _id,
2025-09-17T00:39:54.424287Z	      name,
2025-09-17T00:39:54.42458Z	      "slug": slug.current,
2025-09-17T00:39:54.424723Z	      logo
2025-09-17T00:39:54.424835Z	    },
2025-09-17T00:39:54.42495Z	    relatedBrands[]->{
2025-09-17T00:39:54.42505Z	      _id,
2025-09-17T00:39:54.425145Z	      name,
2025-09-17T00:39:54.425251Z	      "slug": slug.current,
2025-09-17T00:39:54.425382Z	      logo
2025-09-17T00:39:54.425488Z	    },
2025-09-17T00:39:54.425589Z	    targetMarket,
2025-09-17T00:39:54.425692Z	    complexity,
2025-09-17T00:39:54.425793Z	    publishedAt,
2025-09-17T00:39:54.425888Z	    isPublished,
2025-09-17T00:39:54.42601Z	    isFeatured,
2025-09-17T00:39:54.426115Z	    viewCount,
2025-09-17T00:39:54.426216Z	    _createdAt,
2025-09-17T00:39:54.426567Z	    _updatedAt
2025-09-17T00:39:54.426745Z	  
2025-09-17T00:39:54.426905Z	      },
2025-09-17T00:39:54.427144Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-17T00:39:54.427318Z	    }
2025-09-17T00:39:54.427477Z	  
2025-09-17T00:39:54.427825Z	Query parameters: {
2025-09-17T00:39:54.42797Z	  limit: 4,
2025-09-17T00:39:54.428311Z	  offset: 0,
2025-09-17T00:39:54.428595Z	  targetMarket: undefined,
2025-09-17T00:39:54.428707Z	  brand: '英飞凌',
2025-09-17T00:39:54.428815Z	  featured: undefined
2025-09-17T00:39:54.428925Z	}
2025-09-17T00:39:54.429036Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-17T00:39:54.429141Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:54.429249Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:54.429396Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-17T00:39:54.429507Z	Fetching products with query: 
2025-09-17T00:39:54.429608Z	    {
2025-09-17T00:39:54.42972Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:54.429839Z	        
2025-09-17T00:39:54.429971Z	    _id,
2025-09-17T00:39:54.430087Z	    _type,
2025-09-17T00:39:54.430193Z	    partNumber,
2025-09-17T00:39:54.430313Z	    "slug": slug.current,
2025-09-17T00:39:54.430413Z	    title,
2025-09-17T00:39:54.430516Z	    shortDescription,
2025-09-17T00:39:54.430626Z	    image,
2025-09-17T00:39:54.430732Z	    brand->{
2025-09-17T00:39:54.430838Z	      name,
2025-09-17T00:39:54.430955Z	      "slug": slug.current,
2025-09-17T00:39:54.431063Z	      logo
2025-09-17T00:39:54.431162Z	    },
2025-09-17T00:39:54.431281Z	    category->{
2025-09-17T00:39:54.431406Z	      name,
2025-09-17T00:39:54.431515Z	      "slug": slug.current
2025-09-17T00:39:54.431628Z	    },
2025-09-17T00:39:54.431733Z	    pricing{
2025-09-17T00:39:54.43183Z	      currency,
2025-09-17T00:39:54.431945Z	      tiers[]{
2025-09-17T00:39:54.432052Z	        quantity,
2025-09-17T00:39:54.432154Z	        price,
2025-09-17T00:39:54.43226Z	        unit
2025-09-17T00:39:54.432397Z	      },
2025-09-17T00:39:54.432505Z	      moq,
2025-09-17T00:39:54.43263Z	      leadTime,
2025-09-17T00:39:54.432744Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:54.432858Z	      "price": tiers[0].price,
2025-09-17T00:39:54.432962Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:54.433077Z	    },
2025-09-17T00:39:54.433216Z	    inventory{
2025-09-17T00:39:54.433368Z	      quantity,
2025-09-17T00:39:54.433472Z	      status,
2025-09-17T00:39:54.433575Z	      warehouse,
2025-09-17T00:39:54.433678Z	      lastUpdated,
2025-09-17T00:39:54.433806Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:54.433933Z	      "inStock": status == "in_stock",
2025-09-17T00:39:54.434049Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:54.434159Z	    },
2025-09-17T00:39:54.434279Z	    isActive,
2025-09-17T00:39:54.434392Z	    isFeatured,
2025-09-17T00:39:54.43455Z	    isNew,
2025-09-17T00:39:54.435346Z	    _createdAt,
2025-09-17T00:39:54.435732Z	    _updatedAt
2025-09-17T00:39:54.43613Z	  
2025-09-17T00:39:54.436527Z	      },
2025-09-17T00:39:54.436826Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-17T00:39:54.438407Z	    }
2025-09-17T00:39:54.439081Z	  
2025-09-17T00:39:54.439238Z	Query parameters: {
2025-09-17T00:39:54.439384Z	  limit: 8,
2025-09-17T00:39:54.439502Z	  offset: 0,
2025-09-17T00:39:54.439613Z	  category: undefined,
2025-09-17T00:39:54.439764Z	  brand: '英飞凌',
2025-09-17T00:39:54.439878Z	  featured: undefined
2025-09-17T00:39:54.439998Z	}
2025-09-17T00:39:54.440099Z	Fetching solutions with query: 
2025-09-17T00:39:54.440648Z	    {
2025-09-17T00:39:54.440827Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:54.441032Z	        
2025-09-17T00:39:54.441133Z	    _id,
2025-09-17T00:39:54.441223Z	    title,
2025-09-17T00:39:54.441371Z	    "slug": slug.current,
2025-09-17T00:39:54.441475Z	    summary,
2025-09-17T00:39:54.441646Z	    description,
2025-09-17T00:39:54.442806Z	    coverImage,
2025-09-17T00:39:54.442965Z	    primaryBrand->{
2025-09-17T00:39:54.443077Z	      _id,
2025-09-17T00:39:54.443182Z	      name,
2025-09-17T00:39:54.443301Z	      "slug": slug.current,
2025-09-17T00:39:54.443397Z	      logo
2025-09-17T00:39:54.446387Z	    },
2025-09-17T00:39:54.446485Z	    relatedBrands[]->{
2025-09-17T00:39:54.446551Z	      _id,
2025-09-17T00:39:54.446607Z	      name,
2025-09-17T00:39:54.44668Z	      "slug": slug.current,
2025-09-17T00:39:54.446746Z	      logo
2025-09-17T00:39:54.446801Z	    },
2025-09-17T00:39:54.446854Z	    targetMarket,
2025-09-17T00:39:54.44691Z	    complexity,
2025-09-17T00:39:54.446965Z	    publishedAt,
2025-09-17T00:39:54.447018Z	    isPublished,
2025-09-17T00:39:54.44707Z	    isFeatured,
2025-09-17T00:39:54.447122Z	    viewCount,
2025-09-17T00:39:54.447175Z	    _createdAt,
2025-09-17T00:39:54.447234Z	    _updatedAt
2025-09-17T00:39:54.487661Z	  
2025-09-17T00:39:54.487964Z	      },
2025-09-17T00:39:54.488109Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-17T00:39:54.488418Z	    }
2025-09-17T00:39:54.488541Z	  
2025-09-17T00:39:54.488633Z	Query parameters: {
2025-09-17T00:39:54.488728Z	  limit: 4,
2025-09-17T00:39:54.488818Z	  offset: 0,
2025-09-17T00:39:54.488902Z	  targetMarket: undefined,
2025-09-17T00:39:54.489013Z	  brand: '英飞凌',
2025-09-17T00:39:54.489113Z	  featured: undefined
2025-09-17T00:39:54.48921Z	}
2025-09-17T00:39:54.489338Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-17T00:39:54.489434Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:54.489521Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:54.489608Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-17T00:39:54.489695Z	Fetching products with query: 
2025-09-17T00:39:54.489788Z	    {
2025-09-17T00:39:54.489878Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:54.489995Z	        
2025-09-17T00:39:54.490087Z	    _id,
2025-09-17T00:39:54.490172Z	    _type,
2025-09-17T00:39:54.490283Z	    partNumber,
2025-09-17T00:39:54.490385Z	    "slug": slug.current,
2025-09-17T00:39:54.490478Z	    title,
2025-09-17T00:39:54.49056Z	    shortDescription,
2025-09-17T00:39:54.49065Z	    image,
2025-09-17T00:39:54.490741Z	    brand->{
2025-09-17T00:39:54.49083Z	      name,
2025-09-17T00:39:54.490919Z	      "slug": slug.current,
2025-09-17T00:39:54.491126Z	      logo
2025-09-17T00:39:54.491233Z	    },
2025-09-17T00:39:54.491347Z	    category->{
2025-09-17T00:39:54.491441Z	      name,
2025-09-17T00:39:54.491526Z	      "slug": slug.current
2025-09-17T00:39:54.491625Z	    },
2025-09-17T00:39:54.491723Z	    pricing{
2025-09-17T00:39:54.491823Z	      currency,
2025-09-17T00:39:54.49193Z	      tiers[]{
2025-09-17T00:39:54.492032Z	        quantity,
2025-09-17T00:39:54.492129Z	        price,
2025-09-17T00:39:54.492237Z	        unit
2025-09-17T00:39:54.492348Z	      },
2025-09-17T00:39:54.492444Z	      moq,
2025-09-17T00:39:54.492555Z	      leadTime,
2025-09-17T00:39:54.492653Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:54.492746Z	      "price": tiers[0].price,
2025-09-17T00:39:54.492838Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:54.492948Z	    },
2025-09-17T00:39:54.493041Z	    inventory{
2025-09-17T00:39:54.493128Z	      quantity,
2025-09-17T00:39:54.493214Z	      status,
2025-09-17T00:39:54.493355Z	      warehouse,
2025-09-17T00:39:54.494846Z	      lastUpdated,
2025-09-17T00:39:54.494985Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:54.495767Z	      "inStock": status == "in_stock",
2025-09-17T00:39:54.495902Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:54.496023Z	    },
2025-09-17T00:39:54.496117Z	    isActive,
2025-09-17T00:39:54.496202Z	    isFeatured,
2025-09-17T00:39:54.496308Z	    isNew,
2025-09-17T00:39:54.496402Z	    _createdAt,
2025-09-17T00:39:54.496493Z	    _updatedAt
2025-09-17T00:39:54.496582Z	  
2025-09-17T00:39:54.49667Z	      },
2025-09-17T00:39:54.49676Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-17T00:39:54.49686Z	    }
2025-09-17T00:39:54.496962Z	  
2025-09-17T00:39:54.497051Z	Query parameters: {
2025-09-17T00:39:54.49714Z	  limit: 8,
2025-09-17T00:39:54.497229Z	  offset: 0,
2025-09-17T00:39:54.497335Z	  category: undefined,
2025-09-17T00:39:54.49742Z	  brand: 'ncc',
2025-09-17T00:39:54.497502Z	  featured: undefined
2025-09-17T00:39:54.497584Z	}
2025-09-17T00:39:54.497665Z	Fetching solutions with query: 
2025-09-17T00:39:54.497751Z	    {
2025-09-17T00:39:54.497838Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:54.497928Z	        
2025-09-17T00:39:54.498018Z	    _id,
2025-09-17T00:39:54.498111Z	    title,
2025-09-17T00:39:54.4982Z	    "slug": slug.current,
2025-09-17T00:39:54.498304Z	    summary,
2025-09-17T00:39:54.498397Z	    description,
2025-09-17T00:39:54.498482Z	    coverImage,
2025-09-17T00:39:54.498568Z	    primaryBrand->{
2025-09-17T00:39:54.498654Z	      _id,
2025-09-17T00:39:54.498741Z	      name,
2025-09-17T00:39:54.498823Z	      "slug": slug.current,
2025-09-17T00:39:54.498907Z	      logo
2025-09-17T00:39:54.499018Z	    },
2025-09-17T00:39:54.499103Z	    relatedBrands[]->{
2025-09-17T00:39:54.499194Z	      _id,
2025-09-17T00:39:54.499304Z	      name,
2025-09-17T00:39:54.499402Z	      "slug": slug.current,
2025-09-17T00:39:54.499491Z	      logo
2025-09-17T00:39:54.499578Z	    },
2025-09-17T00:39:54.499673Z	    targetMarket,
2025-09-17T00:39:54.499764Z	    complexity,
2025-09-17T00:39:54.499851Z	    publishedAt,
2025-09-17T00:39:54.499944Z	    isPublished,
2025-09-17T00:39:54.500034Z	    isFeatured,
2025-09-17T00:39:54.500126Z	    viewCount,
2025-09-17T00:39:54.500215Z	    _createdAt,
2025-09-17T00:39:54.500318Z	    _updatedAt
2025-09-17T00:39:54.500538Z	  
2025-09-17T00:39:54.509448Z	      },
2025-09-17T00:39:54.509893Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-17T00:39:54.510191Z	    }
2025-09-17T00:39:54.510408Z	  
2025-09-17T00:39:54.510615Z	Query parameters: {
2025-09-17T00:39:54.510798Z	  limit: 4,
2025-09-17T00:39:54.511106Z	  offset: 0,
2025-09-17T00:39:54.511492Z	  targetMarket: undefined,
2025-09-17T00:39:54.511846Z	  brand: 'ncc',
2025-09-17T00:39:54.51206Z	  featured: undefined
2025-09-17T00:39:54.516519Z	}
2025-09-17T00:39:54.516698Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-17T00:39:54.516866Z	Fetching products with query: 
2025-09-17T00:39:54.516987Z	    {
2025-09-17T00:39:54.517098Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:54.517206Z	        
2025-09-17T00:39:54.517333Z	    _id,
2025-09-17T00:39:54.517445Z	    _type,
2025-09-17T00:39:54.519307Z	    partNumber,
2025-09-17T00:39:54.519534Z	    "slug": slug.current,
2025-09-17T00:39:54.519717Z	    title,
2025-09-17T00:39:54.519911Z	    shortDescription,
2025-09-17T00:39:54.520024Z	    image,
2025-09-17T00:39:54.52094Z	    brand->{
2025-09-17T00:39:54.521094Z	      name,
2025-09-17T00:39:54.521206Z	      "slug": slug.current,
2025-09-17T00:39:54.521341Z	      logo
2025-09-17T00:39:54.52145Z	    },
2025-09-17T00:39:54.521558Z	    category->{
2025-09-17T00:39:54.521676Z	      name,
2025-09-17T00:39:54.521797Z	      "slug": slug.current
2025-09-17T00:39:54.522555Z	    },
2025-09-17T00:39:54.522723Z	    pricing{
2025-09-17T00:39:54.522863Z	      currency,
2025-09-17T00:39:54.522988Z	      tiers[]{
2025-09-17T00:39:54.523438Z	        quantity,
2025-09-17T00:39:54.523553Z	        price,
2025-09-17T00:39:54.523644Z	        unit
2025-09-17T00:39:54.523732Z	      },
2025-09-17T00:39:54.523818Z	      moq,
2025-09-17T00:39:54.523915Z	      leadTime,
2025-09-17T00:39:54.524002Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:54.52409Z	      "price": tiers[0].price,
2025-09-17T00:39:54.524174Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:54.524258Z	    },
2025-09-17T00:39:54.524365Z	    inventory{
2025-09-17T00:39:54.525145Z	      quantity,
2025-09-17T00:39:54.525519Z	      status,
2025-09-17T00:39:54.525852Z	      warehouse,
2025-09-17T00:39:54.526023Z	      lastUpdated,
2025-09-17T00:39:54.526139Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:54.52651Z	      "inStock": status == "in_stock",
2025-09-17T00:39:54.526886Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:54.52724Z	    },
2025-09-17T00:39:54.527393Z	    isActive,
2025-09-17T00:39:54.527496Z	    isFeatured,
2025-09-17T00:39:54.527602Z	    isNew,
2025-09-17T00:39:54.527707Z	    _createdAt,
2025-09-17T00:39:54.52781Z	    _updatedAt
2025-09-17T00:39:54.527911Z	  
2025-09-17T00:39:54.52803Z	      },
2025-09-17T00:39:54.528135Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-17T00:39:54.528282Z	    }
2025-09-17T00:39:54.528755Z	  
2025-09-17T00:39:54.528906Z	Query parameters: {
2025-09-17T00:39:54.529031Z	  limit: 8,
2025-09-17T00:39:54.529426Z	  offset: 0,
2025-09-17T00:39:54.529558Z	  category: undefined,
2025-09-17T00:39:54.529668Z	  brand: 'ncc',
2025-09-17T00:39:54.529775Z	  featured: undefined
2025-09-17T00:39:54.529878Z	}
2025-09-17T00:39:54.529989Z	Fetching solutions with query: 
2025-09-17T00:39:54.530095Z	    {
2025-09-17T00:39:54.530316Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:54.530461Z	        
2025-09-17T00:39:54.530585Z	    _id,
2025-09-17T00:39:54.530847Z	    title,
2025-09-17T00:39:54.530968Z	    "slug": slug.current,
2025-09-17T00:39:54.531101Z	    summary,
2025-09-17T00:39:54.531259Z	    description,
2025-09-17T00:39:54.5314Z	    coverImage,
2025-09-17T00:39:54.531496Z	    primaryBrand->{
2025-09-17T00:39:54.531585Z	      _id,
2025-09-17T00:39:54.531692Z	      name,
2025-09-17T00:39:54.533481Z	      "slug": slug.current,
2025-09-17T00:39:54.533606Z	      logo
2025-09-17T00:39:54.533733Z	    },
2025-09-17T00:39:54.533829Z	    relatedBrands[]->{
2025-09-17T00:39:54.53392Z	      _id,
2025-09-17T00:39:54.534009Z	      name,
2025-09-17T00:39:54.534092Z	      "slug": slug.current,
2025-09-17T00:39:54.534175Z	      logo
2025-09-17T00:39:54.534321Z	    },
2025-09-17T00:39:54.53593Z	    targetMarket,
2025-09-17T00:39:54.536069Z	    complexity,
2025-09-17T00:39:54.536173Z	    publishedAt,
2025-09-17T00:39:54.536282Z	    isPublished,
2025-09-17T00:39:54.536399Z	    isFeatured,
2025-09-17T00:39:54.536496Z	    viewCount,
2025-09-17T00:39:54.536598Z	    _createdAt,
2025-09-17T00:39:54.536705Z	    _updatedAt
2025-09-17T00:39:54.536806Z	  
2025-09-17T00:39:54.536903Z	      },
2025-09-17T00:39:54.537001Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-17T00:39:54.537104Z	    }
2025-09-17T00:39:54.537201Z	  
2025-09-17T00:39:54.537319Z	Query parameters: {
2025-09-17T00:39:54.53742Z	  limit: 4,
2025-09-17T00:39:54.537522Z	  offset: 0,
2025-09-17T00:39:54.537609Z	  targetMarket: undefined,
2025-09-17T00:39:54.537715Z	  brand: 'ncc',
2025-09-17T00:39:54.537798Z	  featured: undefined
2025-09-17T00:39:54.537855Z	}
2025-09-17T00:39:54.537912Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-17T00:39:54.53797Z	Fetching products with query: 
2025-09-17T00:39:54.538023Z	    {
2025-09-17T00:39:54.538077Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:54.538145Z	        
2025-09-17T00:39:54.538212Z	    _id,
2025-09-17T00:39:54.538283Z	    _type,
2025-09-17T00:39:54.538362Z	    partNumber,
2025-09-17T00:39:54.538417Z	    "slug": slug.current,
2025-09-17T00:39:54.538481Z	    title,
2025-09-17T00:39:54.538535Z	    shortDescription,
2025-09-17T00:39:54.538589Z	    image,
2025-09-17T00:39:54.538642Z	    brand->{
2025-09-17T00:39:54.538703Z	      name,
2025-09-17T00:39:54.538757Z	      "slug": slug.current,
2025-09-17T00:39:54.538812Z	      logo
2025-09-17T00:39:54.538869Z	    },
2025-09-17T00:39:54.538925Z	    category->{
2025-09-17T00:39:54.538977Z	      name,
2025-09-17T00:39:54.539033Z	      "slug": slug.current
2025-09-17T00:39:54.539086Z	    },
2025-09-17T00:39:54.53914Z	    pricing{
2025-09-17T00:39:54.539192Z	      currency,
2025-09-17T00:39:54.539244Z	      tiers[]{
2025-09-17T00:39:54.539328Z	        quantity,
2025-09-17T00:39:54.539386Z	        price,
2025-09-17T00:39:54.53944Z	        unit
2025-09-17T00:39:54.539495Z	      },
2025-09-17T00:39:54.539548Z	      moq,
2025-09-17T00:39:54.5396Z	      leadTime,
2025-09-17T00:39:54.539659Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:54.539716Z	      "price": tiers[0].price,
2025-09-17T00:39:54.539776Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:54.539831Z	    },
2025-09-17T00:39:54.539883Z	    inventory{
2025-09-17T00:39:54.539938Z	      quantity,
2025-09-17T00:39:54.539991Z	      status,
2025-09-17T00:39:54.540042Z	      warehouse,
2025-09-17T00:39:54.540094Z	      lastUpdated,
2025-09-17T00:39:54.540153Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:54.540206Z	      "inStock": status == "in_stock",
2025-09-17T00:39:54.540259Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:54.540359Z	    },
2025-09-17T00:39:54.540418Z	    isActive,
2025-09-17T00:39:54.540472Z	    isFeatured,
2025-09-17T00:39:54.540526Z	    isNew,
2025-09-17T00:39:54.54058Z	    _createdAt,
2025-09-17T00:39:54.540632Z	    _updatedAt
2025-09-17T00:39:54.540694Z	  
2025-09-17T00:39:54.540748Z	      },
2025-09-17T00:39:54.540802Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-17T00:39:54.540863Z	    }
2025-09-17T00:39:54.540919Z	  
2025-09-17T00:39:54.540977Z	Query parameters: {
2025-09-17T00:39:54.541032Z	  limit: 8,
2025-09-17T00:39:54.541085Z	  offset: 0,
2025-09-17T00:39:54.541137Z	  category: undefined,
2025-09-17T00:39:54.541191Z	  brand: 'cree',
2025-09-17T00:39:54.541244Z	  featured: undefined
2025-09-17T00:39:54.541325Z	}
2025-09-17T00:39:54.541383Z	Fetching solutions with query: 
2025-09-17T00:39:54.541437Z	    {
2025-09-17T00:39:54.541501Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:54.541572Z	        
2025-09-17T00:39:54.541628Z	    _id,
2025-09-17T00:39:54.541689Z	    title,
2025-09-17T00:39:54.541743Z	    "slug": slug.current,
2025-09-17T00:39:54.541795Z	    summary,
2025-09-17T00:39:54.54185Z	    description,
2025-09-17T00:39:54.541903Z	    coverImage,
2025-09-17T00:39:54.541959Z	    primaryBrand->{
2025-09-17T00:39:54.542011Z	      _id,
2025-09-17T00:39:54.542063Z	      name,
2025-09-17T00:39:54.542115Z	      "slug": slug.current,
2025-09-17T00:39:54.542167Z	      logo
2025-09-17T00:39:54.54222Z	    },
2025-09-17T00:39:54.587479Z	    relatedBrands[]->{
2025-09-17T00:39:54.587751Z	      _id,
2025-09-17T00:39:54.587971Z	      name,
2025-09-17T00:39:54.588127Z	      "slug": slug.current,
2025-09-17T00:39:54.588229Z	      logo
2025-09-17T00:39:54.588349Z	    },
2025-09-17T00:39:54.588445Z	    targetMarket,
2025-09-17T00:39:54.588594Z	    complexity,
2025-09-17T00:39:54.588701Z	    publishedAt,
2025-09-17T00:39:54.58885Z	    isPublished,
2025-09-17T00:39:54.589086Z	    isFeatured,
2025-09-17T00:39:54.589316Z	    viewCount,
2025-09-17T00:39:54.589529Z	    _createdAt,
2025-09-17T00:39:54.589728Z	    _updatedAt
2025-09-17T00:39:54.58982Z	  
2025-09-17T00:39:54.58988Z	      },
2025-09-17T00:39:54.589948Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-17T00:39:54.590013Z	    }
2025-09-17T00:39:54.590072Z	  
2025-09-17T00:39:54.590134Z	Query parameters: {
2025-09-17T00:39:54.590197Z	  limit: 4,
2025-09-17T00:39:54.590258Z	  offset: 0,
2025-09-17T00:39:54.590354Z	  targetMarket: undefined,
2025-09-17T00:39:54.590417Z	  brand: 'cree',
2025-09-17T00:39:54.590513Z	  featured: undefined
2025-09-17T00:39:54.590577Z	}
2025-09-17T00:39:54.590635Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-17T00:39:54.590698Z	Fetching products with query: 
2025-09-17T00:39:54.590755Z	    {
2025-09-17T00:39:54.590851Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:54.591025Z	        
2025-09-17T00:39:54.591145Z	    _id,
2025-09-17T00:39:54.591257Z	    _type,
2025-09-17T00:39:54.591474Z	    partNumber,
2025-09-17T00:39:54.591589Z	    "slug": slug.current,
2025-09-17T00:39:54.591697Z	    title,
2025-09-17T00:39:54.591792Z	    shortDescription,
2025-09-17T00:39:54.591884Z	    image,
2025-09-17T00:39:54.59199Z	    brand->{
2025-09-17T00:39:54.592081Z	      name,
2025-09-17T00:39:54.592217Z	      "slug": slug.current,
2025-09-17T00:39:54.592378Z	      logo
2025-09-17T00:39:54.592504Z	    },
2025-09-17T00:39:54.592631Z	    category->{
2025-09-17T00:39:54.592735Z	      name,
2025-09-17T00:39:54.592847Z	      "slug": slug.current
2025-09-17T00:39:54.593008Z	    },
2025-09-17T00:39:54.593115Z	    pricing{
2025-09-17T00:39:54.593195Z	      currency,
2025-09-17T00:39:54.593374Z	      tiers[]{
2025-09-17T00:39:54.593479Z	        quantity,
2025-09-17T00:39:54.59358Z	        price,
2025-09-17T00:39:54.593698Z	        unit
2025-09-17T00:39:54.593815Z	      },
2025-09-17T00:39:54.593964Z	      moq,
2025-09-17T00:39:54.594065Z	      leadTime,
2025-09-17T00:39:54.59418Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:54.594321Z	      "price": tiers[0].price,
2025-09-17T00:39:54.594451Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:54.594644Z	    },
2025-09-17T00:39:54.594792Z	    inventory{
2025-09-17T00:39:54.594896Z	      quantity,
2025-09-17T00:39:54.594999Z	      status,
2025-09-17T00:39:54.595112Z	      warehouse,
2025-09-17T00:39:54.595305Z	      lastUpdated,
2025-09-17T00:39:54.595438Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:54.595549Z	      "inStock": status == "in_stock",
2025-09-17T00:39:54.595652Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:54.595745Z	    },
2025-09-17T00:39:54.595846Z	    isActive,
2025-09-17T00:39:54.595945Z	    isFeatured,
2025-09-17T00:39:54.596039Z	    isNew,
2025-09-17T00:39:54.596132Z	    _createdAt,
2025-09-17T00:39:54.596425Z	    _updatedAt
2025-09-17T00:39:54.596533Z	  
2025-09-17T00:39:54.596723Z	      },
2025-09-17T00:39:54.596807Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-17T00:39:54.596921Z	    }
2025-09-17T00:39:54.597084Z	  
2025-09-17T00:39:54.597167Z	Query parameters: {
2025-09-17T00:39:54.597248Z	  limit: 8,
2025-09-17T00:39:54.597396Z	  offset: 0,
2025-09-17T00:39:54.597536Z	  category: undefined,
2025-09-17T00:39:54.597626Z	  brand: 'cree',
2025-09-17T00:39:54.597773Z	  featured: undefined
2025-09-17T00:39:54.597921Z	}
2025-09-17T00:39:54.598071Z	Fetching solutions with query: 
2025-09-17T00:39:54.59819Z	    {
2025-09-17T00:39:54.598333Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:54.598454Z	        
2025-09-17T00:39:54.598568Z	    _id,
2025-09-17T00:39:54.598694Z	    title,
2025-09-17T00:39:54.598809Z	    "slug": slug.current,
2025-09-17T00:39:54.59892Z	    summary,
2025-09-17T00:39:54.59904Z	    description,
2025-09-17T00:39:54.599158Z	    coverImage,
2025-09-17T00:39:54.599456Z	    primaryBrand->{
2025-09-17T00:39:54.599749Z	      _id,
2025-09-17T00:39:54.599876Z	      name,
2025-09-17T00:39:54.599984Z	      "slug": slug.current,
2025-09-17T00:39:54.600135Z	      logo
2025-09-17T00:39:54.600393Z	    },
2025-09-17T00:39:54.600508Z	    relatedBrands[]->{
2025-09-17T00:39:54.600802Z	      _id,
2025-09-17T00:39:54.600909Z	      name,
2025-09-17T00:39:54.601207Z	      "slug": slug.current,
2025-09-17T00:39:54.60142Z	      logo
2025-09-17T00:39:54.601533Z	    },
2025-09-17T00:39:54.601805Z	    targetMarket,
2025-09-17T00:39:54.601995Z	    complexity,
2025-09-17T00:39:54.602096Z	    publishedAt,
2025-09-17T00:39:54.602395Z	    isPublished,
2025-09-17T00:39:54.602575Z	    isFeatured,
2025-09-17T00:39:54.602771Z	    viewCount,
2025-09-17T00:39:54.603006Z	    _createdAt,
2025-09-17T00:39:54.603109Z	    _updatedAt
2025-09-17T00:39:54.603451Z	  
2025-09-17T00:39:54.603669Z	      },
2025-09-17T00:39:54.603787Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-17T00:39:54.603895Z	    }
2025-09-17T00:39:54.604002Z	  
2025-09-17T00:39:54.604095Z	Query parameters: {
2025-09-17T00:39:54.604566Z	  limit: 4,
2025-09-17T00:39:54.604814Z	  offset: 0,
2025-09-17T00:39:54.605113Z	  targetMarket: undefined,
2025-09-17T00:39:54.605377Z	  brand: 'cree',
2025-09-17T00:39:54.605597Z	  featured: undefined
2025-09-17T00:39:54.605798Z	}
2025-09-17T00:39:54.605923Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:54.606192Z	Fetching products with query: 
2025-09-17T00:39:54.606489Z	    {
2025-09-17T00:39:54.606723Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:54.60694Z	        
2025-09-17T00:39:54.607162Z	    _id,
2025-09-17T00:39:54.607431Z	    _type,
2025-09-17T00:39:54.607544Z	    partNumber,
2025-09-17T00:39:54.607771Z	    "slug": slug.current,
2025-09-17T00:39:54.607937Z	    title,
2025-09-17T00:39:54.608205Z	    shortDescription,
2025-09-17T00:39:54.608354Z	    image,
2025-09-17T00:39:54.60849Z	    brand->{
2025-09-17T00:39:54.608599Z	      name,
2025-09-17T00:39:54.608721Z	      "slug": slug.current,
2025-09-17T00:39:54.608823Z	      logo
2025-09-17T00:39:54.608924Z	    },
2025-09-17T00:39:54.60903Z	    category->{
2025-09-17T00:39:54.60916Z	      name,
2025-09-17T00:39:54.609354Z	      "slug": slug.current
2025-09-17T00:39:54.609492Z	    },
2025-09-17T00:39:54.609604Z	    pricing{
2025-09-17T00:39:54.609728Z	      currency,
2025-09-17T00:39:54.609838Z	      tiers[]{
2025-09-17T00:39:54.610103Z	        quantity,
2025-09-17T00:39:54.61023Z	        price,
2025-09-17T00:39:54.610365Z	        unit
2025-09-17T00:39:54.610494Z	      },
2025-09-17T00:39:54.610606Z	      moq,
2025-09-17T00:39:54.610729Z	      leadTime,
2025-09-17T00:39:54.610838Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:54.610948Z	      "price": tiers[0].price,
2025-09-17T00:39:54.61105Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:54.611178Z	    },
2025-09-17T00:39:54.611492Z	    inventory{
2025-09-17T00:39:54.611626Z	      quantity,
2025-09-17T00:39:54.611745Z	      status,
2025-09-17T00:39:54.611861Z	      warehouse,
2025-09-17T00:39:54.611967Z	      lastUpdated,
2025-09-17T00:39:54.612074Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:54.612183Z	      "inStock": status == "in_stock",
2025-09-17T00:39:54.612331Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:54.612446Z	    },
2025-09-17T00:39:54.612582Z	    isActive,
2025-09-17T00:39:54.612707Z	    isFeatured,
2025-09-17T00:39:54.612817Z	    isNew,
2025-09-17T00:39:54.612919Z	    _createdAt,
2025-09-17T00:39:54.613013Z	    _updatedAt
2025-09-17T00:39:54.613113Z	  
2025-09-17T00:39:54.614709Z	      },
2025-09-17T00:39:54.614922Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-17T00:39:54.61507Z	    }
2025-09-17T00:39:54.615193Z	  
2025-09-17T00:39:54.61534Z	Query parameters: {
2025-09-17T00:39:54.615454Z	  limit: 8,
2025-09-17T00:39:54.615962Z	  offset: 0,
2025-09-17T00:39:54.61611Z	  category: undefined,
2025-09-17T00:39:54.616234Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:39:54.616388Z	  featured: undefined
2025-09-17T00:39:54.61758Z	}
2025-09-17T00:39:54.617755Z	Fetching solutions with query: 
2025-09-17T00:39:54.617877Z	    {
2025-09-17T00:39:54.617993Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:54.618107Z	        
2025-09-17T00:39:54.618204Z	    _id,
2025-09-17T00:39:54.618318Z	    title,
2025-09-17T00:39:54.618437Z	    "slug": slug.current,
2025-09-17T00:39:54.61854Z	    summary,
2025-09-17T00:39:54.618632Z	    description,
2025-09-17T00:39:54.618859Z	    coverImage,
2025-09-17T00:39:54.619015Z	    primaryBrand->{
2025-09-17T00:39:54.619179Z	      _id,
2025-09-17T00:39:54.619328Z	      name,
2025-09-17T00:39:54.61953Z	      "slug": slug.current,
2025-09-17T00:39:54.619824Z	      logo
2025-09-17T00:39:54.620363Z	    },
2025-09-17T00:39:54.620682Z	    relatedBrands[]->{
2025-09-17T00:39:54.621131Z	      _id,
2025-09-17T00:39:54.621344Z	      name,
2025-09-17T00:39:54.621554Z	      "slug": slug.current,
2025-09-17T00:39:54.621996Z	      logo
2025-09-17T00:39:54.622433Z	    },
2025-09-17T00:39:54.622875Z	    targetMarket,
2025-09-17T00:39:54.62304Z	    complexity,
2025-09-17T00:39:54.623224Z	    publishedAt,
2025-09-17T00:39:54.623742Z	    isPublished,
2025-09-17T00:39:54.623857Z	    isFeatured,
2025-09-17T00:39:54.623968Z	    viewCount,
2025-09-17T00:39:54.624068Z	    _createdAt,
2025-09-17T00:39:54.624178Z	    _updatedAt
2025-09-17T00:39:54.624311Z	  
2025-09-17T00:39:54.624431Z	      },
2025-09-17T00:39:54.624662Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-17T00:39:54.62519Z	    }
2025-09-17T00:39:54.625533Z	  
2025-09-17T00:39:54.625684Z	Query parameters: {
2025-09-17T00:39:54.625802Z	  limit: 4,
2025-09-17T00:39:54.625933Z	  offset: 0,
2025-09-17T00:39:54.626043Z	  targetMarket: undefined,
2025-09-17T00:39:54.626152Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:39:54.626255Z	  featured: undefined
2025-09-17T00:39:54.626394Z	}
2025-09-17T00:39:54.626518Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:54.626628Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:54.627672Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:54.627851Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:54.627986Z	Fetching products with query: 
2025-09-17T00:39:54.628095Z	    {
2025-09-17T00:39:54.628201Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:54.628338Z	        
2025-09-17T00:39:54.628453Z	    _id,
2025-09-17T00:39:54.628564Z	    _type,
2025-09-17T00:39:54.628659Z	    partNumber,
2025-09-17T00:39:54.628754Z	    "slug": slug.current,
2025-09-17T00:39:54.628937Z	    title,
2025-09-17T00:39:54.629076Z	    shortDescription,
2025-09-17T00:39:54.629192Z	    image,
2025-09-17T00:39:54.62932Z	    brand->{
2025-09-17T00:39:54.62943Z	      name,
2025-09-17T00:39:54.629585Z	      "slug": slug.current,
2025-09-17T00:39:54.629867Z	      logo
2025-09-17T00:39:54.630018Z	    },
2025-09-17T00:39:54.63014Z	    category->{
2025-09-17T00:39:54.630248Z	      name,
2025-09-17T00:39:54.630388Z	      "slug": slug.current
2025-09-17T00:39:54.630497Z	    },
2025-09-17T00:39:54.630601Z	    pricing{
2025-09-17T00:39:54.630708Z	      currency,
2025-09-17T00:39:54.630806Z	      tiers[]{
2025-09-17T00:39:54.63091Z	        quantity,
2025-09-17T00:39:54.631013Z	        price,
2025-09-17T00:39:54.631111Z	        unit
2025-09-17T00:39:54.631214Z	      },
2025-09-17T00:39:54.631352Z	      moq,
2025-09-17T00:39:54.631478Z	      leadTime,
2025-09-17T00:39:54.631593Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:54.631701Z	      "price": tiers[0].price,
2025-09-17T00:39:54.631802Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:54.631916Z	    },
2025-09-17T00:39:54.632026Z	    inventory{
2025-09-17T00:39:54.632257Z	      quantity,
2025-09-17T00:39:54.632385Z	      status,
2025-09-17T00:39:54.632486Z	      warehouse,
2025-09-17T00:39:54.632596Z	      lastUpdated,
2025-09-17T00:39:54.632695Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:54.632846Z	      "inStock": status == "in_stock",
2025-09-17T00:39:54.633056Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:54.633181Z	    },
2025-09-17T00:39:54.633329Z	    isActive,
2025-09-17T00:39:54.633444Z	    isFeatured,
2025-09-17T00:39:54.633548Z	    isNew,
2025-09-17T00:39:54.633764Z	    _createdAt,
2025-09-17T00:39:54.634006Z	    _updatedAt
2025-09-17T00:39:54.634179Z	  
2025-09-17T00:39:54.634861Z	      },
2025-09-17T00:39:54.635013Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-17T00:39:54.635121Z	    }
2025-09-17T00:39:54.635223Z	  
2025-09-17T00:39:54.635346Z	Query parameters: {
2025-09-17T00:39:54.635446Z	  limit: 8,
2025-09-17T00:39:54.635536Z	  offset: 0,
2025-09-17T00:39:54.635632Z	  category: undefined,
2025-09-17T00:39:54.63575Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:39:54.635833Z	  featured: undefined
2025-09-17T00:39:54.635918Z	}
2025-09-17T00:39:54.635999Z	Fetching solutions with query: 
2025-09-17T00:39:54.636085Z	    {
2025-09-17T00:39:54.636171Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:54.636253Z	        
2025-09-17T00:39:54.636364Z	    _id,
2025-09-17T00:39:54.636452Z	    title,
2025-09-17T00:39:54.636531Z	    "slug": slug.current,
2025-09-17T00:39:54.636607Z	    summary,
2025-09-17T00:39:54.636705Z	    description,
2025-09-17T00:39:54.636791Z	    coverImage,
2025-09-17T00:39:54.636871Z	    primaryBrand->{
2025-09-17T00:39:54.636955Z	      _id,
2025-09-17T00:39:54.637043Z	      name,
2025-09-17T00:39:54.637124Z	      "slug": slug.current,
2025-09-17T00:39:54.637204Z	      logo
2025-09-17T00:39:54.637299Z	    },
2025-09-17T00:39:54.637382Z	    relatedBrands[]->{
2025-09-17T00:39:54.637462Z	      _id,
2025-09-17T00:39:54.637539Z	      name,
2025-09-17T00:39:54.637617Z	      "slug": slug.current,
2025-09-17T00:39:54.637708Z	      logo
2025-09-17T00:39:54.637918Z	    },
2025-09-17T00:39:54.638077Z	    targetMarket,
2025-09-17T00:39:54.638188Z	    complexity,
2025-09-17T00:39:54.638304Z	    publishedAt,
2025-09-17T00:39:54.638543Z	    isPublished,
2025-09-17T00:39:54.638686Z	    isFeatured,
2025-09-17T00:39:54.638787Z	    viewCount,
2025-09-17T00:39:54.638893Z	    _createdAt,
2025-09-17T00:39:54.638985Z	    _updatedAt
2025-09-17T00:39:54.63907Z	  
2025-09-17T00:39:54.639153Z	      },
2025-09-17T00:39:54.639233Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-17T00:39:54.639344Z	    }
2025-09-17T00:39:54.63944Z	  
2025-09-17T00:39:54.639531Z	Query parameters: {
2025-09-17T00:39:54.639619Z	  limit: 4,
2025-09-17T00:39:54.639714Z	  offset: 0,
2025-09-17T00:39:54.639797Z	  targetMarket: undefined,
2025-09-17T00:39:54.639877Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:39:54.639991Z	  featured: undefined
2025-09-17T00:39:54.64017Z	}
2025-09-17T00:39:54.64031Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:54.640432Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:54.640533Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:54.640647Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-17T00:39:54.64074Z	Fetching products with query: 
2025-09-17T00:39:54.640842Z	    {
2025-09-17T00:39:54.640948Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:54.641054Z	        
2025-09-17T00:39:54.641151Z	    _id,
2025-09-17T00:39:54.641251Z	    _type,
2025-09-17T00:39:54.641364Z	    partNumber,
2025-09-17T00:39:54.641453Z	    "slug": slug.current,
2025-09-17T00:39:54.641541Z	    title,
2025-09-17T00:39:54.641629Z	    shortDescription,
2025-09-17T00:39:54.641719Z	    image,
2025-09-17T00:39:54.641809Z	    brand->{
2025-09-17T00:39:54.641896Z	      name,
2025-09-17T00:39:54.641999Z	      "slug": slug.current,
2025-09-17T00:39:54.642086Z	      logo
2025-09-17T00:39:54.64217Z	    },
2025-09-17T00:39:54.642254Z	    category->{
2025-09-17T00:39:54.642725Z	      name,
2025-09-17T00:39:54.642894Z	      "slug": slug.current
2025-09-17T00:39:54.643058Z	    },
2025-09-17T00:39:54.643184Z	    pricing{
2025-09-17T00:39:54.643328Z	      currency,
2025-09-17T00:39:54.643462Z	      tiers[]{
2025-09-17T00:39:54.644628Z	        quantity,
2025-09-17T00:39:54.644755Z	        price,
2025-09-17T00:39:54.644858Z	        unit
2025-09-17T00:39:54.644965Z	      },
2025-09-17T00:39:54.645063Z	      moq,
2025-09-17T00:39:54.645165Z	      leadTime,
2025-09-17T00:39:54.645264Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:54.645421Z	      "price": tiers[0].price,
2025-09-17T00:39:54.645535Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:54.645606Z	    },
2025-09-17T00:39:54.645665Z	    inventory{
2025-09-17T00:39:54.64572Z	      quantity,
2025-09-17T00:39:54.645776Z	      status,
2025-09-17T00:39:54.64583Z	      warehouse,
2025-09-17T00:39:54.645882Z	      lastUpdated,
2025-09-17T00:39:54.645944Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:54.645999Z	      "inStock": status == "in_stock",
2025-09-17T00:39:54.646051Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:54.646106Z	    },
2025-09-17T00:39:54.646176Z	    isActive,
2025-09-17T00:39:54.646228Z	    isFeatured,
2025-09-17T00:39:54.687441Z	    isNew,
2025-09-17T00:39:54.687581Z	    _createdAt,
2025-09-17T00:39:54.687645Z	    _updatedAt
2025-09-17T00:39:54.687722Z	  
2025-09-17T00:39:54.687777Z	      },
2025-09-17T00:39:54.687832Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-17T00:39:54.687893Z	    }
2025-09-17T00:39:54.687962Z	  
2025-09-17T00:39:54.688021Z	Query parameters: {
2025-09-17T00:39:54.688078Z	  limit: 8,
2025-09-17T00:39:54.688132Z	  offset: 0,
2025-09-17T00:39:54.688187Z	  category: undefined,
2025-09-17T00:39:54.688242Z	  brand: 'epcos',
2025-09-17T00:39:54.688798Z	  featured: undefined
2025-09-17T00:39:54.688958Z	}
2025-09-17T00:39:54.689031Z	Fetching solutions with query: 
2025-09-17T00:39:54.689088Z	    {
2025-09-17T00:39:54.689144Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:54.689303Z	        
2025-09-17T00:39:54.689689Z	    _id,
2025-09-17T00:39:54.690493Z	    title,
2025-09-17T00:39:54.691038Z	    "slug": slug.current,
2025-09-17T00:39:54.691383Z	    summary,
2025-09-17T00:39:54.691769Z	    description,
2025-09-17T00:39:54.692093Z	    coverImage,
2025-09-17T00:39:54.692486Z	    primaryBrand->{
2025-09-17T00:39:54.694568Z	      _id,
2025-09-17T00:39:54.694946Z	      name,
2025-09-17T00:39:54.695976Z	      "slug": slug.current,
2025-09-17T00:39:54.697484Z	      logo
2025-09-17T00:39:54.697648Z	    },
2025-09-17T00:39:54.69776Z	    relatedBrands[]->{
2025-09-17T00:39:54.69792Z	      _id,
2025-09-17T00:39:54.698068Z	      name,
2025-09-17T00:39:54.698173Z	      "slug": slug.current,
2025-09-17T00:39:54.698287Z	      logo
2025-09-17T00:39:54.698395Z	    },
2025-09-17T00:39:54.698483Z	    targetMarket,
2025-09-17T00:39:54.698561Z	    complexity,
2025-09-17T00:39:54.698647Z	    publishedAt,
2025-09-17T00:39:54.69874Z	    isPublished,
2025-09-17T00:39:54.698861Z	    isFeatured,
2025-09-17T00:39:54.698991Z	    viewCount,
2025-09-17T00:39:54.699106Z	    _createdAt,
2025-09-17T00:39:54.699207Z	    _updatedAt
2025-09-17T00:39:54.699331Z	  
2025-09-17T00:39:54.699428Z	      },
2025-09-17T00:39:54.699555Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-17T00:39:54.699681Z	    }
2025-09-17T00:39:54.699749Z	  
2025-09-17T00:39:54.699808Z	Query parameters: {
2025-09-17T00:39:54.699863Z	  limit: 4,
2025-09-17T00:39:54.69993Z	  offset: 0,
2025-09-17T00:39:54.699996Z	  targetMarket: undefined,
2025-09-17T00:39:54.70005Z	  brand: 'epcos',
2025-09-17T00:39:54.700103Z	  featured: undefined
2025-09-17T00:39:54.700157Z	}
2025-09-17T00:39:54.700212Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-17T00:39:54.700285Z	Fetching products with query: 
2025-09-17T00:39:54.700351Z	    {
2025-09-17T00:39:54.700407Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:54.700463Z	        
2025-09-17T00:39:54.700518Z	    _id,
2025-09-17T00:39:54.70057Z	    _type,
2025-09-17T00:39:54.700624Z	    partNumber,
2025-09-17T00:39:54.700679Z	    "slug": slug.current,
2025-09-17T00:39:54.700733Z	    title,
2025-09-17T00:39:54.700792Z	    shortDescription,
2025-09-17T00:39:54.700846Z	    image,
2025-09-17T00:39:54.700901Z	    brand->{
2025-09-17T00:39:54.7037Z	      name,
2025-09-17T00:39:54.703849Z	      "slug": slug.current,
2025-09-17T00:39:54.70392Z	      logo
2025-09-17T00:39:54.703978Z	    },
2025-09-17T00:39:54.704032Z	    category->{
2025-09-17T00:39:54.704085Z	      name,
2025-09-17T00:39:54.704149Z	      "slug": slug.current
2025-09-17T00:39:54.707854Z	    },
2025-09-17T00:39:54.708062Z	    pricing{
2025-09-17T00:39:54.708223Z	      currency,
2025-09-17T00:39:54.708399Z	      tiers[]{
2025-09-17T00:39:54.708617Z	        quantity,
2025-09-17T00:39:54.708762Z	        price,
2025-09-17T00:39:54.70894Z	        unit
2025-09-17T00:39:54.709054Z	      },
2025-09-17T00:39:54.709215Z	      moq,
2025-09-17T00:39:54.709336Z	      leadTime,
2025-09-17T00:39:54.709438Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:54.709542Z	      "price": tiers[0].price,
2025-09-17T00:39:54.70964Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:54.709745Z	    },
2025-09-17T00:39:54.709857Z	    inventory{
2025-09-17T00:39:54.709969Z	      quantity,
2025-09-17T00:39:54.710066Z	      status,
2025-09-17T00:39:54.71034Z	      warehouse,
2025-09-17T00:39:54.710471Z	      lastUpdated,
2025-09-17T00:39:54.710568Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:54.710677Z	      "inStock": status == "in_stock",
2025-09-17T00:39:54.710768Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:54.710855Z	    },
2025-09-17T00:39:54.710977Z	    isActive,
2025-09-17T00:39:54.711078Z	    isFeatured,
2025-09-17T00:39:54.711174Z	    isNew,
2025-09-17T00:39:54.711758Z	    _createdAt,
2025-09-17T00:39:54.711892Z	    _updatedAt
2025-09-17T00:39:54.712052Z	  
2025-09-17T00:39:54.712153Z	      },
2025-09-17T00:39:54.712246Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-17T00:39:54.712717Z	    }
2025-09-17T00:39:54.712842Z	  
2025-09-17T00:39:54.71298Z	Query parameters: {
2025-09-17T00:39:54.713119Z	  limit: 8,
2025-09-17T00:39:54.713229Z	  offset: 0,
2025-09-17T00:39:54.713632Z	  category: undefined,
2025-09-17T00:39:54.713772Z	  brand: 'epcos',
2025-09-17T00:39:54.713919Z	  featured: undefined
2025-09-17T00:39:54.714102Z	}
2025-09-17T00:39:54.714211Z	Fetching solutions with query: 
2025-09-17T00:39:54.718443Z	    {
2025-09-17T00:39:54.71858Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:54.718706Z	        
2025-09-17T00:39:54.718805Z	    _id,
2025-09-17T00:39:54.719027Z	    title,
2025-09-17T00:39:54.719153Z	    "slug": slug.current,
2025-09-17T00:39:54.719283Z	    summary,
2025-09-17T00:39:54.71947Z	    description,
2025-09-17T00:39:54.719586Z	    coverImage,
2025-09-17T00:39:54.719681Z	    primaryBrand->{
2025-09-17T00:39:54.719819Z	      _id,
2025-09-17T00:39:54.720733Z	      name,
2025-09-17T00:39:54.720911Z	      "slug": slug.current,
2025-09-17T00:39:54.721814Z	      logo
2025-09-17T00:39:54.721957Z	    },
2025-09-17T00:39:54.722111Z	    relatedBrands[]->{
2025-09-17T00:39:54.722324Z	      _id,
2025-09-17T00:39:54.722488Z	      name,
2025-09-17T00:39:54.722602Z	      "slug": slug.current,
2025-09-17T00:39:54.722752Z	      logo
2025-09-17T00:39:54.723258Z	    },
2025-09-17T00:39:54.723422Z	    targetMarket,
2025-09-17T00:39:54.723536Z	    complexity,
2025-09-17T00:39:54.723643Z	    publishedAt,
2025-09-17T00:39:54.723822Z	    isPublished,
2025-09-17T00:39:54.724022Z	    isFeatured,
2025-09-17T00:39:54.72416Z	    viewCount,
2025-09-17T00:39:54.724519Z	    _createdAt,
2025-09-17T00:39:54.724618Z	    _updatedAt
2025-09-17T00:39:54.724828Z	  
2025-09-17T00:39:54.724941Z	      },
2025-09-17T00:39:54.725477Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-17T00:39:54.725757Z	    }
2025-09-17T00:39:54.725903Z	  
2025-09-17T00:39:54.726046Z	Query parameters: {
2025-09-17T00:39:54.72615Z	  limit: 4,
2025-09-17T00:39:54.72645Z	  offset: 0,
2025-09-17T00:39:54.726635Z	  targetMarket: undefined,
2025-09-17T00:39:54.726787Z	  brand: 'epcos',
2025-09-17T00:39:54.72691Z	  featured: undefined
2025-09-17T00:39:54.727085Z	}
2025-09-17T00:39:54.727189Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-17T00:39:54.727339Z	Fetching products with query: 
2025-09-17T00:39:54.727456Z	    {
2025-09-17T00:39:54.727559Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:54.727671Z	        
2025-09-17T00:39:54.727762Z	    _id,
2025-09-17T00:39:54.727869Z	    _type,
2025-09-17T00:39:54.727992Z	    partNumber,
2025-09-17T00:39:54.728152Z	    "slug": slug.current,
2025-09-17T00:39:54.728394Z	    title,
2025-09-17T00:39:54.728535Z	    shortDescription,
2025-09-17T00:39:54.728642Z	    image,
2025-09-17T00:39:54.728753Z	    brand->{
2025-09-17T00:39:54.728851Z	      name,
2025-09-17T00:39:54.728946Z	      "slug": slug.current,
2025-09-17T00:39:54.729065Z	      logo
2025-09-17T00:39:54.72916Z	    },
2025-09-17T00:39:54.729253Z	    category->{
2025-09-17T00:39:54.729372Z	      name,
2025-09-17T00:39:54.729485Z	      "slug": slug.current
2025-09-17T00:39:54.729591Z	    },
2025-09-17T00:39:54.729702Z	    pricing{
2025-09-17T00:39:54.729803Z	      currency,
2025-09-17T00:39:54.729901Z	      tiers[]{
2025-09-17T00:39:54.730005Z	        quantity,
2025-09-17T00:39:54.730098Z	        price,
2025-09-17T00:39:54.730208Z	        unit
2025-09-17T00:39:54.730336Z	      },
2025-09-17T00:39:54.730441Z	      moq,
2025-09-17T00:39:54.730534Z	      leadTime,
2025-09-17T00:39:54.730638Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:54.730771Z	      "price": tiers[0].price,
2025-09-17T00:39:54.730876Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:54.730987Z	    },
2025-09-17T00:39:54.731087Z	    inventory{
2025-09-17T00:39:54.731188Z	      quantity,
2025-09-17T00:39:54.731305Z	      status,
2025-09-17T00:39:54.731462Z	      warehouse,
2025-09-17T00:39:54.731643Z	      lastUpdated,
2025-09-17T00:39:54.73178Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:54.731916Z	      "inStock": status == "in_stock",
2025-09-17T00:39:54.732029Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:54.732176Z	    },
2025-09-17T00:39:54.732334Z	    isActive,
2025-09-17T00:39:54.732539Z	    isFeatured,
2025-09-17T00:39:54.732715Z	    isNew,
2025-09-17T00:39:54.732892Z	    _createdAt,
2025-09-17T00:39:54.733011Z	    _updatedAt
2025-09-17T00:39:54.733244Z	  
2025-09-17T00:39:54.733363Z	      },
2025-09-17T00:39:54.733481Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-17T00:39:54.733761Z	    }
2025-09-17T00:39:54.733835Z	  
2025-09-17T00:39:54.7339Z	Query parameters: {
2025-09-17T00:39:54.733964Z	  limit: 8,
2025-09-17T00:39:54.734032Z	  offset: 0,
2025-09-17T00:39:54.734088Z	  category: undefined,
2025-09-17T00:39:54.734143Z	  brand: 'ixys',
2025-09-17T00:39:54.734198Z	  featured: undefined
2025-09-17T00:39:54.734253Z	}
2025-09-17T00:39:54.734486Z	Fetching solutions with query: 
2025-09-17T00:39:54.734575Z	    {
2025-09-17T00:39:54.734634Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:54.734701Z	        
2025-09-17T00:39:54.734771Z	    _id,
2025-09-17T00:39:54.734841Z	    title,
2025-09-17T00:39:54.734904Z	    "slug": slug.current,
2025-09-17T00:39:54.73497Z	    summary,
2025-09-17T00:39:54.735031Z	    description,
2025-09-17T00:39:54.735092Z	    coverImage,
2025-09-17T00:39:54.735147Z	    primaryBrand->{
2025-09-17T00:39:54.735202Z	      _id,
2025-09-17T00:39:54.735256Z	      name,
2025-09-17T00:39:54.73535Z	      "slug": slug.current,
2025-09-17T00:39:54.735417Z	      logo
2025-09-17T00:39:54.735472Z	    },
2025-09-17T00:39:54.735527Z	    relatedBrands[]->{
2025-09-17T00:39:54.735587Z	      _id,
2025-09-17T00:39:54.735655Z	      name,
2025-09-17T00:39:54.73572Z	      "slug": slug.current,
2025-09-17T00:39:54.735775Z	      logo
2025-09-17T00:39:54.735829Z	    },
2025-09-17T00:39:54.735884Z	    targetMarket,
2025-09-17T00:39:54.735946Z	    complexity,
2025-09-17T00:39:54.736007Z	    publishedAt,
2025-09-17T00:39:54.736068Z	    isPublished,
2025-09-17T00:39:54.736157Z	    isFeatured,
2025-09-17T00:39:54.736226Z	    viewCount,
2025-09-17T00:39:54.736313Z	    _createdAt,
2025-09-17T00:39:54.73641Z	    _updatedAt
2025-09-17T00:39:54.736478Z	  
2025-09-17T00:39:54.736566Z	      },
2025-09-17T00:39:54.736657Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-17T00:39:54.736727Z	    }
2025-09-17T00:39:54.736789Z	  
2025-09-17T00:39:54.736844Z	Query parameters: {
2025-09-17T00:39:54.73698Z	  limit: 4,
2025-09-17T00:39:54.73717Z	  offset: 0,
2025-09-17T00:39:54.737412Z	  targetMarket: undefined,
2025-09-17T00:39:54.737771Z	  brand: 'ixys',
2025-09-17T00:39:54.737898Z	  featured: undefined
2025-09-17T00:39:54.738035Z	}
2025-09-17T00:39:54.738117Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-17T00:39:54.738198Z	Fetching products with query: 
2025-09-17T00:39:54.738524Z	    {
2025-09-17T00:39:54.738682Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:54.73878Z	        
2025-09-17T00:39:54.738905Z	    _id,
2025-09-17T00:39:54.738984Z	    _type,
2025-09-17T00:39:54.73908Z	    partNumber,
2025-09-17T00:39:54.739179Z	    "slug": slug.current,
2025-09-17T00:39:54.739296Z	    title,
2025-09-17T00:39:54.739395Z	    shortDescription,
2025-09-17T00:39:54.73958Z	    image,
2025-09-17T00:39:54.739694Z	    brand->{
2025-09-17T00:39:54.73986Z	      name,
2025-09-17T00:39:54.739982Z	      "slug": slug.current,
2025-09-17T00:39:54.74008Z	      logo
2025-09-17T00:39:54.740255Z	    },
2025-09-17T00:39:54.740431Z	    category->{
2025-09-17T00:39:54.740518Z	      name,
2025-09-17T00:39:54.740675Z	      "slug": slug.current
2025-09-17T00:39:54.740752Z	    },
2025-09-17T00:39:54.74087Z	    pricing{
2025-09-17T00:39:54.741062Z	      currency,
2025-09-17T00:39:54.741228Z	      tiers[]{
2025-09-17T00:39:54.74161Z	        quantity,
2025-09-17T00:39:54.741847Z	        price,
2025-09-17T00:39:54.742109Z	        unit
2025-09-17T00:39:54.742531Z	      },
2025-09-17T00:39:54.74267Z	      moq,
2025-09-17T00:39:54.74278Z	      leadTime,
2025-09-17T00:39:54.742873Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:54.742967Z	      "price": tiers[0].price,
2025-09-17T00:39:54.743068Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:54.743169Z	    },
2025-09-17T00:39:54.743285Z	    inventory{
2025-09-17T00:39:54.743433Z	      quantity,
2025-09-17T00:39:54.743519Z	      status,
2025-09-17T00:39:54.743678Z	      warehouse,
2025-09-17T00:39:54.743911Z	      lastUpdated,
2025-09-17T00:39:54.744033Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:54.74417Z	      "inStock": status == "in_stock",
2025-09-17T00:39:54.744293Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:54.744432Z	    },
2025-09-17T00:39:54.744619Z	    isActive,
2025-09-17T00:39:54.744705Z	    isFeatured,
2025-09-17T00:39:54.744766Z	    isNew,
2025-09-17T00:39:54.744821Z	    _createdAt,
2025-09-17T00:39:54.744879Z	    _updatedAt
2025-09-17T00:39:54.744954Z	  
2025-09-17T00:39:54.745014Z	      },
2025-09-17T00:39:54.745079Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-17T00:39:54.745155Z	    }
2025-09-17T00:39:54.745222Z	  
2025-09-17T00:39:54.745361Z	Query parameters: {
2025-09-17T00:39:54.74549Z	  limit: 8,
2025-09-17T00:39:54.745638Z	  offset: 0,
2025-09-17T00:39:54.745762Z	  category: undefined,
2025-09-17T00:39:54.74588Z	  brand: 'ixys',
2025-09-17T00:39:54.746Z	  featured: undefined
2025-09-17T00:39:54.746106Z	}
2025-09-17T00:39:54.746224Z	Fetching solutions with query: 
2025-09-17T00:39:54.746375Z	    {
2025-09-17T00:39:54.746491Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:54.746595Z	        
2025-09-17T00:39:54.746706Z	    _id,
2025-09-17T00:39:54.746813Z	    title,
2025-09-17T00:39:54.747094Z	    "slug": slug.current,
2025-09-17T00:39:54.747184Z	    summary,
2025-09-17T00:39:54.747251Z	    description,
2025-09-17T00:39:54.747341Z	    coverImage,
2025-09-17T00:39:54.7474Z	    primaryBrand->{
2025-09-17T00:39:54.747462Z	      _id,
2025-09-17T00:39:54.747519Z	      name,
2025-09-17T00:39:54.747575Z	      "slug": slug.current,
2025-09-17T00:39:54.747633Z	      logo
2025-09-17T00:39:54.747691Z	    },
2025-09-17T00:39:54.747745Z	    relatedBrands[]->{
2025-09-17T00:39:54.747807Z	      _id,
2025-09-17T00:39:54.748129Z	      name,
2025-09-17T00:39:54.7482Z	      "slug": slug.current,
2025-09-17T00:39:54.748257Z	      logo
2025-09-17T00:39:54.748431Z	    },
2025-09-17T00:39:54.74856Z	    targetMarket,
2025-09-17T00:39:54.74866Z	    complexity,
2025-09-17T00:39:54.748757Z	    publishedAt,
2025-09-17T00:39:54.748856Z	    isPublished,
2025-09-17T00:39:54.748944Z	    isFeatured,
2025-09-17T00:39:54.749038Z	    viewCount,
2025-09-17T00:39:54.749126Z	    _createdAt,
2025-09-17T00:39:54.749235Z	    _updatedAt
2025-09-17T00:39:54.749368Z	  
2025-09-17T00:39:54.750422Z	      },
2025-09-17T00:39:54.750586Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-17T00:39:54.750723Z	    }
2025-09-17T00:39:54.750847Z	  
2025-09-17T00:39:54.750959Z	Query parameters: {
2025-09-17T00:39:54.751059Z	  limit: 4,
2025-09-17T00:39:54.751162Z	  offset: 0,
2025-09-17T00:39:54.751289Z	  targetMarket: undefined,
2025-09-17T00:39:54.751436Z	  brand: 'ixys',
2025-09-17T00:39:54.751574Z	  featured: undefined
2025-09-17T00:39:54.751688Z	}
2025-09-17T00:39:54.751791Z	✅ [getBrandData] Found brand: IXYS
2025-09-17T00:39:54.751899Z	✅ [getBrandData] Found brand: IXYS
2025-09-17T00:39:54.752012Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:54.752118Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:54.752226Z	Solutions fetch result: {
2025-09-17T00:39:54.752998Z	  totalSolutions: 1,
2025-09-17T00:39:54.75316Z	  fetchedSolutions: 1,
2025-09-17T00:39:54.753308Z	  firstSolution: {
2025-09-17T00:39:54.753422Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-17T00:39:54.753533Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-17T00:39:54.753648Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-17T00:39:54.75376Z	    complexity: 'medium',
2025-09-17T00:39:54.753899Z	    coverImage: null,
2025-09-17T00:39:54.754054Z	    description: [ [Object] ],
2025-09-17T00:39:54.754214Z	    isFeatured: false,
2025-09-17T00:39:54.754359Z	    isPublished: true,
2025-09-17T00:39:54.754471Z	    primaryBrand: {
2025-09-17T00:39:54.754581Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:54.754687Z	      logo: null,
2025-09-17T00:39:54.754798Z	      name: 'IXYS',
2025-09-17T00:39:54.754916Z	      slug: 'ixys'
2025-09-17T00:39:54.755023Z	    },
2025-09-17T00:39:54.755127Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-17T00:39:54.755231Z	    relatedBrands: null,
2025-09-17T00:39:54.755359Z	    slug: '99999',
2025-09-17T00:39:54.755464Z	    summary: '99999',
2025-09-17T00:39:54.755567Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:54.755671Z	    title: '99999',
2025-09-17T00:39:54.755774Z	    viewCount: 0
2025-09-17T00:39:54.755873Z	  }
2025-09-17T00:39:54.755982Z	}
2025-09-17T00:39:54.756081Z	Solutions fetch result: {
2025-09-17T00:39:54.756185Z	  totalSolutions: 1,
2025-09-17T00:39:54.756312Z	  fetchedSolutions: 1,
2025-09-17T00:39:54.756416Z	  firstSolution: {
2025-09-17T00:39:54.756517Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-17T00:39:54.756608Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-17T00:39:54.756702Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-17T00:39:54.756805Z	    complexity: 'medium',
2025-09-17T00:39:54.756914Z	    coverImage: null,
2025-09-17T00:39:54.757025Z	    description: [ [Object] ],
2025-09-17T00:39:54.757133Z	    isFeatured: false,
2025-09-17T00:39:54.757232Z	    isPublished: true,
2025-09-17T00:39:54.757349Z	    primaryBrand: {
2025-09-17T00:39:54.75746Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:54.757565Z	      logo: null,
2025-09-17T00:39:54.757667Z	      name: 'IXYS',
2025-09-17T00:39:54.757765Z	      slug: 'ixys'
2025-09-17T00:39:54.757863Z	    },
2025-09-17T00:39:54.757981Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-17T00:39:54.758085Z	    relatedBrands: null,
2025-09-17T00:39:54.758193Z	    slug: '99999',
2025-09-17T00:39:54.758317Z	    summary: '99999',
2025-09-17T00:39:54.758424Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:54.758532Z	    title: '99999',
2025-09-17T00:39:54.758635Z	    viewCount: 0
2025-09-17T00:39:54.758744Z	  }
2025-09-17T00:39:54.758842Z	}
2025-09-17T00:39:54.758949Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-17T00:39:54.759061Z	Fetching products with query: 
2025-09-17T00:39:54.759165Z	    {
2025-09-17T00:39:54.759262Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:54.759389Z	        
2025-09-17T00:39:54.759494Z	    _id,
2025-09-17T00:39:54.75959Z	    _type,
2025-09-17T00:39:54.759699Z	    partNumber,
2025-09-17T00:39:54.759833Z	    "slug": slug.current,
2025-09-17T00:39:54.759954Z	    title,
2025-09-17T00:39:54.760061Z	    shortDescription,
2025-09-17T00:39:54.760167Z	    image,
2025-09-17T00:39:54.760279Z	    brand->{
2025-09-17T00:39:54.760502Z	      name,
2025-09-17T00:39:54.78782Z	      "slug": slug.current,
2025-09-17T00:39:54.788213Z	      logo
2025-09-17T00:39:54.788389Z	    },
2025-09-17T00:39:54.788508Z	    category->{
2025-09-17T00:39:54.788633Z	      name,
2025-09-17T00:39:54.788784Z	      "slug": slug.current
2025-09-17T00:39:54.789025Z	    },
2025-09-17T00:39:54.789209Z	    pricing{
2025-09-17T00:39:54.789827Z	      currency,
2025-09-17T00:39:54.790016Z	      tiers[]{
2025-09-17T00:39:54.79013Z	        quantity,
2025-09-17T00:39:54.790297Z	        price,
2025-09-17T00:39:54.790449Z	        unit
2025-09-17T00:39:54.790579Z	      },
2025-09-17T00:39:54.79069Z	      moq,
2025-09-17T00:39:54.790797Z	      leadTime,
2025-09-17T00:39:54.790906Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:54.791032Z	      "price": tiers[0].price,
2025-09-17T00:39:54.791135Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:54.791234Z	    },
2025-09-17T00:39:54.791355Z	    inventory{
2025-09-17T00:39:54.791471Z	      quantity,
2025-09-17T00:39:54.791615Z	      status,
2025-09-17T00:39:54.791819Z	      warehouse,
2025-09-17T00:39:54.791987Z	      lastUpdated,
2025-09-17T00:39:54.792142Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:54.792306Z	      "inStock": status == "in_stock",
2025-09-17T00:39:54.792448Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:54.792657Z	    },
2025-09-17T00:39:54.792812Z	    isActive,
2025-09-17T00:39:54.792965Z	    isFeatured,
2025-09-17T00:39:54.793081Z	    isNew,
2025-09-17T00:39:54.793188Z	    _createdAt,
2025-09-17T00:39:54.79331Z	    _updatedAt
2025-09-17T00:39:54.793421Z	  
2025-09-17T00:39:54.793523Z	      },
2025-09-17T00:39:54.793619Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-17T00:39:54.793769Z	    }
2025-09-17T00:39:54.793873Z	  
2025-09-17T00:39:54.793995Z	Query parameters: {
2025-09-17T00:39:54.794097Z	  limit: 8,
2025-09-17T00:39:54.794202Z	  offset: 0,
2025-09-17T00:39:54.794333Z	  category: undefined,
2025-09-17T00:39:54.79445Z	  brand: 'Electronicon',
2025-09-17T00:39:54.79457Z	  featured: undefined
2025-09-17T00:39:54.794668Z	}
2025-09-17T00:39:54.794766Z	Fetching solutions with query: 
2025-09-17T00:39:54.794862Z	    {
2025-09-17T00:39:54.79499Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:54.795128Z	        
2025-09-17T00:39:54.795236Z	    _id,
2025-09-17T00:39:54.795354Z	    title,
2025-09-17T00:39:54.79545Z	    "slug": slug.current,
2025-09-17T00:39:54.795543Z	    summary,
2025-09-17T00:39:54.79563Z	    description,
2025-09-17T00:39:54.795721Z	    coverImage,
2025-09-17T00:39:54.796172Z	    primaryBrand->{
2025-09-17T00:39:54.796315Z	      _id,
2025-09-17T00:39:54.796499Z	      name,
2025-09-17T00:39:54.796653Z	      "slug": slug.current,
2025-09-17T00:39:54.796766Z	      logo
2025-09-17T00:39:54.796987Z	    },
2025-09-17T00:39:54.797251Z	    relatedBrands[]->{
2025-09-17T00:39:54.797528Z	      _id,
2025-09-17T00:39:54.797713Z	      name,
2025-09-17T00:39:54.797849Z	      "slug": slug.current,
2025-09-17T00:39:54.797965Z	      logo
2025-09-17T00:39:54.798074Z	    },
2025-09-17T00:39:54.798302Z	    targetMarket,
2025-09-17T00:39:54.798465Z	    complexity,
2025-09-17T00:39:54.798578Z	    publishedAt,
2025-09-17T00:39:54.79869Z	    isPublished,
2025-09-17T00:39:54.798797Z	    isFeatured,
2025-09-17T00:39:54.798904Z	    viewCount,
2025-09-17T00:39:54.799004Z	    _createdAt,
2025-09-17T00:39:54.799098Z	    _updatedAt
2025-09-17T00:39:54.799209Z	  
2025-09-17T00:39:54.79934Z	      },
2025-09-17T00:39:54.799628Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-17T00:39:54.799869Z	    }
2025-09-17T00:39:54.800019Z	  
2025-09-17T00:39:54.800139Z	Query parameters: {
2025-09-17T00:39:54.800249Z	  limit: 4,
2025-09-17T00:39:54.800389Z	  offset: 0,
2025-09-17T00:39:54.800505Z	  targetMarket: undefined,
2025-09-17T00:39:54.800849Z	  brand: 'Electronicon',
2025-09-17T00:39:54.801186Z	  featured: undefined
2025-09-17T00:39:54.801378Z	}
2025-09-17T00:39:54.801545Z	✅ [getBrandData] Found brand: Electronicon
2025-09-17T00:39:54.801727Z	Products fetch result: {
2025-09-17T00:39:54.80189Z	  totalProducts: 2,
2025-09-17T00:39:54.802047Z	  fetchedProducts: 2,
2025-09-17T00:39:54.802205Z	  firstProduct: {
2025-09-17T00:39:54.802388Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-17T00:39:54.804137Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-17T00:39:54.804345Z	    _type: 'product',
2025-09-17T00:39:54.804481Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-17T00:39:54.804644Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-17T00:39:54.804842Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-17T00:39:54.804999Z	    image: null,
2025-09-17T00:39:54.805136Z	    inventory: {
2025-09-17T00:39:54.805313Z	      inStock: true,
2025-09-17T00:39:54.805465Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-17T00:39:54.805613Z	      quantity: 0,
2025-09-17T00:39:54.805749Z	      status: 'in_stock',
2025-09-17T00:39:54.805911Z	      warehouse: null
2025-09-17T00:39:54.80607Z	    },
2025-09-17T00:39:54.806212Z	    isActive: true,
2025-09-17T00:39:54.806376Z	    isFeatured: false,
2025-09-17T00:39:54.806529Z	    isNew: false,
2025-09-17T00:39:54.806671Z	    partNumber: '99999',
2025-09-17T00:39:54.80682Z	    pricing: {
2025-09-17T00:39:54.806971Z	      currency: 'CNY',
2025-09-17T00:39:54.807105Z	      leadTime: null,
2025-09-17T00:39:54.807216Z	      moq: null,
2025-09-17T00:39:54.80736Z	      price: null,
2025-09-17T00:39:54.8075Z	      tiers: null
2025-09-17T00:39:54.807621Z	    },
2025-09-17T00:39:54.807765Z	    shortDescription: null,
2025-09-17T00:39:54.807899Z	    slug: '99999',
2025-09-17T00:39:54.808019Z	    title: '99999'
2025-09-17T00:39:54.808161Z	  }
2025-09-17T00:39:54.808302Z	}
2025-09-17T00:39:54.808456Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:54.808584Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-17T00:39:54.808905Z	Fetching products with query: 
2025-09-17T00:39:54.814214Z	    {
2025-09-17T00:39:54.81437Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:54.814477Z	        
2025-09-17T00:39:54.814574Z	    _id,
2025-09-17T00:39:54.814664Z	    _type,
2025-09-17T00:39:54.814762Z	    partNumber,
2025-09-17T00:39:54.814865Z	    "slug": slug.current,
2025-09-17T00:39:54.814971Z	    title,
2025-09-17T00:39:54.815113Z	    shortDescription,
2025-09-17T00:39:54.815257Z	    image,
2025-09-17T00:39:54.815406Z	    brand->{
2025-09-17T00:39:54.815534Z	      name,
2025-09-17T00:39:54.81563Z	      "slug": slug.current,
2025-09-17T00:39:54.815722Z	      logo
2025-09-17T00:39:54.815821Z	    },
2025-09-17T00:39:54.815985Z	    category->{
2025-09-17T00:39:54.816101Z	      name,
2025-09-17T00:39:54.816208Z	      "slug": slug.current
2025-09-17T00:39:54.816341Z	    },
2025-09-17T00:39:54.816499Z	    pricing{
2025-09-17T00:39:54.816648Z	      currency,
2025-09-17T00:39:54.816768Z	      tiers[]{
2025-09-17T00:39:54.816866Z	        quantity,
2025-09-17T00:39:54.816978Z	        price,
2025-09-17T00:39:54.81708Z	        unit
2025-09-17T00:39:54.817173Z	      },
2025-09-17T00:39:54.817294Z	      moq,
2025-09-17T00:39:54.817432Z	      leadTime,
2025-09-17T00:39:54.817582Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:54.817719Z	      "price": tiers[0].price,
2025-09-17T00:39:54.817825Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:54.817985Z	    },
2025-09-17T00:39:54.818191Z	    inventory{
2025-09-17T00:39:54.818498Z	      quantity,
2025-09-17T00:39:54.818607Z	      status,
2025-09-17T00:39:54.81875Z	      warehouse,
2025-09-17T00:39:54.819043Z	      lastUpdated,
2025-09-17T00:39:54.819154Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:54.81926Z	      "inStock": status == "in_stock",
2025-09-17T00:39:54.819385Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:54.819483Z	    },
2025-09-17T00:39:54.819586Z	    isActive,
2025-09-17T00:39:54.819697Z	    isFeatured,
2025-09-17T00:39:54.819799Z	    isNew,
2025-09-17T00:39:54.819909Z	    _createdAt,
2025-09-17T00:39:54.820442Z	    _updatedAt
2025-09-17T00:39:54.821111Z	  
2025-09-17T00:39:54.821352Z	      },
2025-09-17T00:39:54.821583Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-17T00:39:54.821832Z	    }
2025-09-17T00:39:54.82197Z	  
2025-09-17T00:39:54.822074Z	Query parameters: {
2025-09-17T00:39:54.822177Z	  limit: 8,
2025-09-17T00:39:54.823148Z	  offset: 0,
2025-09-17T00:39:54.827033Z	  category: undefined,
2025-09-17T00:39:54.827193Z	  brand: 'Electronicon',
2025-09-17T00:39:54.827337Z	  featured: undefined
2025-09-17T00:39:54.827448Z	}
2025-09-17T00:39:54.827592Z	Fetching solutions with query: 
2025-09-17T00:39:54.827823Z	    {
2025-09-17T00:39:54.827967Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:54.828089Z	        
2025-09-17T00:39:54.828192Z	    _id,
2025-09-17T00:39:54.828352Z	    title,
2025-09-17T00:39:54.829391Z	    "slug": slug.current,
2025-09-17T00:39:54.829936Z	    summary,
2025-09-17T00:39:54.830092Z	    description,
2025-09-17T00:39:54.830164Z	    coverImage,
2025-09-17T00:39:54.830222Z	    primaryBrand->{
2025-09-17T00:39:54.830314Z	      _id,
2025-09-17T00:39:54.83068Z	      name,
2025-09-17T00:39:54.830839Z	      "slug": slug.current,
2025-09-17T00:39:54.831025Z	      logo
2025-09-17T00:39:54.83115Z	    },
2025-09-17T00:39:54.831278Z	    relatedBrands[]->{
2025-09-17T00:39:54.832538Z	      _id,
2025-09-17T00:39:54.832673Z	      name,
2025-09-17T00:39:54.832779Z	      "slug": slug.current,
2025-09-17T00:39:54.833004Z	      logo
2025-09-17T00:39:54.833407Z	    },
2025-09-17T00:39:54.83359Z	    targetMarket,
2025-09-17T00:39:54.833724Z	    complexity,
2025-09-17T00:39:54.833867Z	    publishedAt,
2025-09-17T00:39:54.834011Z	    isPublished,
2025-09-17T00:39:54.834224Z	    isFeatured,
2025-09-17T00:39:54.835888Z	    viewCount,
2025-09-17T00:39:54.836081Z	    _createdAt,
2025-09-17T00:39:54.836244Z	    _updatedAt
2025-09-17T00:39:54.836376Z	  
2025-09-17T00:39:54.841622Z	      },
2025-09-17T00:39:54.841854Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-17T00:39:54.842104Z	    }
2025-09-17T00:39:54.842348Z	  
2025-09-17T00:39:54.842564Z	Query parameters: {
2025-09-17T00:39:54.842854Z	  limit: 4,
2025-09-17T00:39:54.843001Z	  offset: 0,
2025-09-17T00:39:54.843103Z	  targetMarket: undefined,
2025-09-17T00:39:54.8432Z	  brand: 'Electronicon',
2025-09-17T00:39:54.843305Z	  featured: undefined
2025-09-17T00:39:54.843402Z	}
2025-09-17T00:39:54.843491Z	✅ [getBrandData] Found brand: Electronicon
2025-09-17T00:39:54.843594Z	Products fetch result: {
2025-09-17T00:39:54.843681Z	  totalProducts: 2,
2025-09-17T00:39:54.843868Z	  fetchedProducts: 2,
2025-09-17T00:39:54.843986Z	  firstProduct: {
2025-09-17T00:39:54.844143Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-17T00:39:54.844279Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-17T00:39:54.844414Z	    _type: 'product',
2025-09-17T00:39:54.844798Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-17T00:39:54.845035Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-17T00:39:54.84524Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-17T00:39:54.845575Z	    image: null,
2025-09-17T00:39:54.845709Z	    inventory: {
2025-09-17T00:39:54.84591Z	      inStock: true,
2025-09-17T00:39:54.846077Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-17T00:39:54.846759Z	      quantity: 0,
2025-09-17T00:39:54.846834Z	      status: 'in_stock',
2025-09-17T00:39:54.846892Z	      warehouse: null
2025-09-17T00:39:54.846952Z	    },
2025-09-17T00:39:54.84701Z	    isActive: true,
2025-09-17T00:39:54.847065Z	    isFeatured: false,
2025-09-17T00:39:54.84713Z	    isNew: false,
2025-09-17T00:39:54.847185Z	    partNumber: '99999',
2025-09-17T00:39:54.887516Z	    pricing: {
2025-09-17T00:39:54.887737Z	      currency: 'CNY',
2025-09-17T00:39:54.887819Z	      leadTime: null,
2025-09-17T00:39:54.887889Z	      moq: null,
2025-09-17T00:39:54.887961Z	      price: null,
2025-09-17T00:39:54.88803Z	      tiers: null
2025-09-17T00:39:54.888108Z	    },
2025-09-17T00:39:54.888171Z	    shortDescription: null,
2025-09-17T00:39:54.888225Z	    slug: '99999',
2025-09-17T00:39:54.888302Z	    title: '99999'
2025-09-17T00:39:54.88837Z	  }
2025-09-17T00:39:54.888424Z	}
2025-09-17T00:39:54.888487Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:54.888552Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:54.888607Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:54.888667Z	✅ [getBrandData] Found brand: ncc
2025-09-17T00:39:54.888733Z	✅ [getBrandData] Found brand: ncc
2025-09-17T00:39:54.888788Z	Products fetch result: {
2025-09-17T00:39:54.88885Z	  totalProducts: 4,
2025-09-17T00:39:54.888909Z	  fetchedProducts: 4,
2025-09-17T00:39:54.88897Z	  firstProduct: {
2025-09-17T00:39:54.889052Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-17T00:39:54.889113Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-17T00:39:54.889167Z	    _type: 'product',
2025-09-17T00:39:54.889229Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-17T00:39:54.8893Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-17T00:39:54.88936Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:54.889423Z	    image: null,
2025-09-17T00:39:54.889479Z	    inventory: {
2025-09-17T00:39:54.889536Z	      inStock: true,
2025-09-17T00:39:54.889591Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-17T00:39:54.889645Z	      quantity: 0,
2025-09-17T00:39:54.889707Z	      status: 'in_stock',
2025-09-17T00:39:54.889761Z	      warehouse: null
2025-09-17T00:39:54.889815Z	    },
2025-09-17T00:39:54.889868Z	    isActive: true,
2025-09-17T00:39:54.889922Z	    isFeatured: false,
2025-09-17T00:39:54.889983Z	    isNew: false,
2025-09-17T00:39:54.890038Z	    partNumber: '11111',
2025-09-17T00:39:54.89009Z	    pricing: {
2025-09-17T00:39:54.890143Z	      currency: 'CNY',
2025-09-17T00:39:54.890197Z	      leadTime: null,
2025-09-17T00:39:54.890257Z	      moq: null,
2025-09-17T00:39:54.890397Z	      price: null,
2025-09-17T00:39:54.890551Z	      tiers: null
2025-09-17T00:39:54.89087Z	    },
2025-09-17T00:39:54.890953Z	    shortDescription: '11111',
2025-09-17T00:39:54.891173Z	    slug: 'sic mosfet',
2025-09-17T00:39:54.891386Z	    title: '111111'
2025-09-17T00:39:54.89151Z	  }
2025-09-17T00:39:54.891616Z	}
2025-09-17T00:39:54.891744Z	Products fetch result: {
2025-09-17T00:39:54.891827Z	  totalProducts: 4,
2025-09-17T00:39:54.891883Z	  fetchedProducts: 4,
2025-09-17T00:39:54.891948Z	  firstProduct: {
2025-09-17T00:39:54.892018Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-17T00:39:54.892074Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-17T00:39:54.892127Z	    _type: 'product',
2025-09-17T00:39:54.89218Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-17T00:39:54.892233Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-17T00:39:54.892313Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:54.892387Z	    image: null,
2025-09-17T00:39:54.892448Z	    inventory: {
2025-09-17T00:39:54.892503Z	      inStock: true,
2025-09-17T00:39:54.892571Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-17T00:39:54.892626Z	      quantity: 0,
2025-09-17T00:39:54.892683Z	      status: 'in_stock',
2025-09-17T00:39:54.892738Z	      warehouse: null
2025-09-17T00:39:54.89279Z	    },
2025-09-17T00:39:54.892842Z	    isActive: true,
2025-09-17T00:39:54.892895Z	    isFeatured: false,
2025-09-17T00:39:54.892955Z	    isNew: false,
2025-09-17T00:39:54.893497Z	    partNumber: '11111',
2025-09-17T00:39:54.893584Z	    pricing: {
2025-09-17T00:39:54.893643Z	      currency: 'CNY',
2025-09-17T00:39:54.893747Z	      leadTime: null,
2025-09-17T00:39:54.893816Z	      moq: null,
2025-09-17T00:39:54.89387Z	      price: null,
2025-09-17T00:39:54.893938Z	      tiers: null
2025-09-17T00:39:54.893999Z	    },
2025-09-17T00:39:54.894053Z	    shortDescription: '11111',
2025-09-17T00:39:54.894106Z	    slug: 'sic mosfet',
2025-09-17T00:39:54.894159Z	    title: '111111'
2025-09-17T00:39:54.894213Z	  }
2025-09-17T00:39:54.894278Z	}
2025-09-17T00:39:54.894417Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:54.894518Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:54.89473Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:54.895147Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-17T00:39:54.895456Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:39:54.895637Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619)
2025-09-17T00:39:54.89579Z	    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-09-17T00:39:54.895913Z	    at runNextTicks (node:internal/process/task_queues:64:3)
2025-09-17T00:39:54.896031Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-17T00:39:54.896091Z	    at process.processTimers (node:internal/timers:512:7) {
2025-09-17T00:39:54.896146Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:39:54.896213Z	}
2025-09-17T00:39:54.896325Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:54.896743Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:54.89695Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-17T00:39:54.897082Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:39:54.897209Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619)
2025-09-17T00:39:54.897347Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-17T00:39:54.897469Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:39:54.897574Z	}
2025-09-17T00:39:54.897678Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:54.897793Z	Solutions fetch result: {
2025-09-17T00:39:54.897914Z	  totalSolutions: 6,
2025-09-17T00:39:54.898025Z	  fetchedSolutions: 4,
2025-09-17T00:39:54.898128Z	  firstSolution: {
2025-09-17T00:39:54.898217Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-17T00:39:54.898337Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-17T00:39:54.898737Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-17T00:39:54.899034Z	    complexity: 'medium',
2025-09-17T00:39:54.899223Z	    coverImage: null,
2025-09-17T00:39:54.899391Z	    description: [ [Object] ],
2025-09-17T00:39:54.899505Z	    isFeatured: false,
2025-09-17T00:39:54.899646Z	    isPublished: true,
2025-09-17T00:39:54.899761Z	    primaryBrand: {
2025-09-17T00:39:54.899888Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:54.900016Z	      logo: null,
2025-09-17T00:39:54.900168Z	      name: 'CREE',
2025-09-17T00:39:54.900313Z	      slug: 'cree'
2025-09-17T00:39:54.900447Z	    },
2025-09-17T00:39:54.900567Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-17T00:39:54.900704Z	    relatedBrands: null,
2025-09-17T00:39:54.900932Z	    slug: '11111',
2025-09-17T00:39:54.901101Z	    summary: '11111',
2025-09-17T00:39:54.901246Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:54.901412Z	    title: '11111',
2025-09-17T00:39:54.901536Z	    viewCount: 0
2025-09-17T00:39:54.901641Z	  }
2025-09-17T00:39:54.901732Z	}
2025-09-17T00:39:54.901822Z	Solutions fetch result: {
2025-09-17T00:39:54.901916Z	  totalSolutions: 6,
2025-09-17T00:39:54.902007Z	  fetchedSolutions: 4,
2025-09-17T00:39:54.902092Z	  firstSolution: {
2025-09-17T00:39:54.902178Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-17T00:39:54.902284Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-17T00:39:54.902387Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-17T00:39:54.902635Z	    complexity: 'medium',
2025-09-17T00:39:54.902793Z	    coverImage: null,
2025-09-17T00:39:54.902966Z	    description: [ [Object] ],
2025-09-17T00:39:54.903841Z	    isFeatured: false,
2025-09-17T00:39:54.904223Z	    isPublished: true,
2025-09-17T00:39:54.904553Z	    primaryBrand: {
2025-09-17T00:39:54.904689Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:54.904916Z	      logo: null,
2025-09-17T00:39:54.905086Z	      name: 'CREE',
2025-09-17T00:39:54.905229Z	      slug: 'cree'
2025-09-17T00:39:54.905455Z	    },
2025-09-17T00:39:54.905704Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-17T00:39:54.905796Z	    relatedBrands: null,
2025-09-17T00:39:54.905862Z	    slug: '11111',
2025-09-17T00:39:54.905925Z	    summary: '11111',
2025-09-17T00:39:54.905985Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:54.90604Z	    title: '11111',
2025-09-17T00:39:54.906093Z	    viewCount: 0
2025-09-17T00:39:54.906156Z	  }
2025-09-17T00:39:54.906212Z	}
2025-09-17T00:39:54.906278Z	✅ [getBrandData] Found brand: CREE
2025-09-17T00:39:54.906369Z	✅ [getBrandData] Found brand: Epcos
2025-09-17T00:39:54.906428Z	✅ [getBrandData] Found brand: Epcos
2025-09-17T00:39:54.906482Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:54.906536Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:54.906589Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:54.908428Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:54.908499Z	✅ [getBrandData] Found brand: CREE
2025-09-17T00:39:54.908616Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-17T00:39:54.908706Z	Fetching products with query: 
2025-09-17T00:39:54.908773Z	    {
2025-09-17T00:39:54.908963Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:54.909258Z	        
2025-09-17T00:39:54.909555Z	    _id,
2025-09-17T00:39:54.909879Z	    _type,
2025-09-17T00:39:54.910138Z	    partNumber,
2025-09-17T00:39:54.910467Z	    "slug": slug.current,
2025-09-17T00:39:54.910686Z	    title,
2025-09-17T00:39:54.910952Z	    shortDescription,
2025-09-17T00:39:54.911173Z	    image,
2025-09-17T00:39:54.911445Z	    brand->{
2025-09-17T00:39:54.911712Z	      name,
2025-09-17T00:39:54.911985Z	      "slug": slug.current,
2025-09-17T00:39:54.912186Z	      logo
2025-09-17T00:39:54.912332Z	    },
2025-09-17T00:39:54.912452Z	    category->{
2025-09-17T00:39:54.912592Z	      name,
2025-09-17T00:39:54.912705Z	      "slug": slug.current
2025-09-17T00:39:54.912814Z	    },
2025-09-17T00:39:54.912915Z	    pricing{
2025-09-17T00:39:54.913026Z	      currency,
2025-09-17T00:39:54.91312Z	      tiers[]{
2025-09-17T00:39:54.913201Z	        quantity,
2025-09-17T00:39:54.913359Z	        price,
2025-09-17T00:39:54.913459Z	        unit
2025-09-17T00:39:54.913554Z	      },
2025-09-17T00:39:54.913655Z	      moq,
2025-09-17T00:39:54.913751Z	      leadTime,
2025-09-17T00:39:54.913841Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:54.913928Z	      "price": tiers[0].price,
2025-09-17T00:39:54.914031Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:54.914122Z	    },
2025-09-17T00:39:54.914213Z	    inventory{
2025-09-17T00:39:54.914849Z	      quantity,
2025-09-17T00:39:54.91504Z	      status,
2025-09-17T00:39:54.915182Z	      warehouse,
2025-09-17T00:39:54.915311Z	      lastUpdated,
2025-09-17T00:39:54.915418Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:54.915634Z	      "inStock": status == "in_stock",
2025-09-17T00:39:54.915758Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:54.915895Z	    },
2025-09-17T00:39:54.916051Z	    isActive,
2025-09-17T00:39:54.923056Z	    isFeatured,
2025-09-17T00:39:54.923207Z	    isNew,
2025-09-17T00:39:54.923335Z	    _createdAt,
2025-09-17T00:39:54.923436Z	    _updatedAt
2025-09-17T00:39:54.923538Z	  
2025-09-17T00:39:54.923624Z	      },
2025-09-17T00:39:54.923713Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-17T00:39:54.92381Z	    }
2025-09-17T00:39:54.923897Z	  
2025-09-17T00:39:54.923987Z	Query parameters: {
2025-09-17T00:39:54.92407Z	  limit: 8,
2025-09-17T00:39:54.924152Z	  offset: 0,
2025-09-17T00:39:54.924236Z	  category: undefined,
2025-09-17T00:39:54.924358Z	  brand: 'lem',
2025-09-17T00:39:54.92446Z	  featured: undefined
2025-09-17T00:39:54.92456Z	}
2025-09-17T00:39:54.924659Z	Fetching solutions with query: 
2025-09-17T00:39:54.924776Z	    {
2025-09-17T00:39:54.924879Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:54.924983Z	        
2025-09-17T00:39:54.925081Z	    _id,
2025-09-17T00:39:54.925178Z	    title,
2025-09-17T00:39:54.925286Z	    "slug": slug.current,
2025-09-17T00:39:54.925379Z	    summary,
2025-09-17T00:39:54.92547Z	    description,
2025-09-17T00:39:54.925555Z	    coverImage,
2025-09-17T00:39:54.925649Z	    primaryBrand->{
2025-09-17T00:39:54.925746Z	      _id,
2025-09-17T00:39:54.925841Z	      name,
2025-09-17T00:39:54.925946Z	      "slug": slug.current,
2025-09-17T00:39:54.926044Z	      logo
2025-09-17T00:39:54.926137Z	    },
2025-09-17T00:39:54.926234Z	    relatedBrands[]->{
2025-09-17T00:39:54.926348Z	      _id,
2025-09-17T00:39:54.926441Z	      name,
2025-09-17T00:39:54.926534Z	      "slug": slug.current,
2025-09-17T00:39:54.926624Z	      logo
2025-09-17T00:39:54.926725Z	    },
2025-09-17T00:39:54.926825Z	    targetMarket,
2025-09-17T00:39:54.926924Z	    complexity,
2025-09-17T00:39:54.927032Z	    publishedAt,
2025-09-17T00:39:54.927125Z	    isPublished,
2025-09-17T00:39:54.927215Z	    isFeatured,
2025-09-17T00:39:54.927334Z	    viewCount,
2025-09-17T00:39:54.927441Z	    _createdAt,
2025-09-17T00:39:54.927538Z	    _updatedAt
2025-09-17T00:39:54.927634Z	  
2025-09-17T00:39:54.927726Z	      },
2025-09-17T00:39:54.927826Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-17T00:39:54.927921Z	    }
2025-09-17T00:39:54.928025Z	  
2025-09-17T00:39:54.928116Z	Query parameters: {
2025-09-17T00:39:54.928204Z	  limit: 4,
2025-09-17T00:39:54.928312Z	  offset: 0,
2025-09-17T00:39:54.928404Z	  targetMarket: undefined,
2025-09-17T00:39:54.928491Z	  brand: 'lem',
2025-09-17T00:39:54.928582Z	  featured: undefined
2025-09-17T00:39:54.928669Z	}
2025-09-17T00:39:54.928758Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-17T00:39:54.928856Z	Fetching products with query: 
2025-09-17T00:39:54.928959Z	    {
2025-09-17T00:39:54.929052Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:54.929153Z	        
2025-09-17T00:39:54.929245Z	    _id,
2025-09-17T00:39:54.929354Z	    _type,
2025-09-17T00:39:54.929444Z	    partNumber,
2025-09-17T00:39:54.929529Z	    "slug": slug.current,
2025-09-17T00:39:54.929936Z	    title,
2025-09-17T00:39:54.930101Z	    shortDescription,
2025-09-17T00:39:54.930224Z	    image,
2025-09-17T00:39:54.930368Z	    brand->{
2025-09-17T00:39:54.930489Z	      name,
2025-09-17T00:39:54.930644Z	      "slug": slug.current,
2025-09-17T00:39:54.930774Z	      logo
2025-09-17T00:39:54.930883Z	    },
2025-09-17T00:39:54.930984Z	    category->{
2025-09-17T00:39:54.931088Z	      name,
2025-09-17T00:39:54.931242Z	      "slug": slug.current
2025-09-17T00:39:54.931417Z	    },
2025-09-17T00:39:54.931525Z	    pricing{
2025-09-17T00:39:54.931626Z	      currency,
2025-09-17T00:39:54.931752Z	      tiers[]{
2025-09-17T00:39:54.931856Z	        quantity,
2025-09-17T00:39:54.931951Z	        price,
2025-09-17T00:39:54.932051Z	        unit
2025-09-17T00:39:54.932152Z	      },
2025-09-17T00:39:54.93225Z	      moq,
2025-09-17T00:39:54.932378Z	      leadTime,
2025-09-17T00:39:54.932482Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:54.932604Z	      "price": tiers[0].price,
2025-09-17T00:39:54.932714Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:54.932811Z	    },
2025-09-17T00:39:54.932914Z	    inventory{
2025-09-17T00:39:54.933019Z	      quantity,
2025-09-17T00:39:54.933122Z	      status,
2025-09-17T00:39:54.933237Z	      warehouse,
2025-09-17T00:39:54.933362Z	      lastUpdated,
2025-09-17T00:39:54.933468Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:54.933576Z	      "inStock": status == "in_stock",
2025-09-17T00:39:54.933697Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:54.933798Z	    },
2025-09-17T00:39:54.933897Z	    isActive,
2025-09-17T00:39:54.934011Z	    isFeatured,
2025-09-17T00:39:54.93412Z	    isNew,
2025-09-17T00:39:54.934224Z	    _createdAt,
2025-09-17T00:39:54.934364Z	    _updatedAt
2025-09-17T00:39:54.934473Z	  
2025-09-17T00:39:54.93458Z	      },
2025-09-17T00:39:54.934693Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-17T00:39:54.934809Z	    }
2025-09-17T00:39:54.934912Z	  
2025-09-17T00:39:54.935018Z	Query parameters: {
2025-09-17T00:39:54.935125Z	  limit: 8,
2025-09-17T00:39:54.935229Z	  offset: 0,
2025-09-17T00:39:54.935523Z	  category: undefined,
2025-09-17T00:39:54.935798Z	  brand: 'lem',
2025-09-17T00:39:54.936647Z	  featured: undefined
2025-09-17T00:39:54.936818Z	}
2025-09-17T00:39:54.937501Z	Fetching solutions with query: 
2025-09-17T00:39:54.937906Z	    {
2025-09-17T00:39:54.938254Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:54.944456Z	        
2025-09-17T00:39:54.944615Z	    _id,
2025-09-17T00:39:54.944834Z	    title,
2025-09-17T00:39:54.944998Z	    "slug": slug.current,
2025-09-17T00:39:54.945099Z	    summary,
2025-09-17T00:39:54.945189Z	    description,
2025-09-17T00:39:54.945335Z	    coverImage,
2025-09-17T00:39:54.945437Z	    primaryBrand->{
2025-09-17T00:39:54.945533Z	      _id,
2025-09-17T00:39:54.945629Z	      name,
2025-09-17T00:39:54.945722Z	      "slug": slug.current,
2025-09-17T00:39:54.945812Z	      logo
2025-09-17T00:39:54.945912Z	    },
2025-09-17T00:39:54.946001Z	    relatedBrands[]->{
2025-09-17T00:39:54.946086Z	      _id,
2025-09-17T00:39:54.946185Z	      name,
2025-09-17T00:39:54.946302Z	      "slug": slug.current,
2025-09-17T00:39:54.946393Z	      logo
2025-09-17T00:39:54.950089Z	    },
2025-09-17T00:39:54.950238Z	    targetMarket,
2025-09-17T00:39:54.95037Z	    complexity,
2025-09-17T00:39:54.950474Z	    publishedAt,
2025-09-17T00:39:54.950569Z	    isPublished,
2025-09-17T00:39:54.950668Z	    isFeatured,
2025-09-17T00:39:54.950762Z	    viewCount,
2025-09-17T00:39:54.950853Z	    _createdAt,
2025-09-17T00:39:54.950954Z	    _updatedAt
2025-09-17T00:39:54.951066Z	  
2025-09-17T00:39:54.951162Z	      },
2025-09-17T00:39:54.951297Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-17T00:39:54.951501Z	    }
2025-09-17T00:39:54.95161Z	  
2025-09-17T00:39:54.951726Z	Query parameters: {
2025-09-17T00:39:54.951837Z	  limit: 4,
2025-09-17T00:39:54.951934Z	  offset: 0,
2025-09-17T00:39:54.952038Z	  targetMarket: undefined,
2025-09-17T00:39:54.95213Z	  brand: 'lem',
2025-09-17T00:39:54.952215Z	  featured: undefined
2025-09-17T00:39:54.952324Z	}
2025-09-17T00:39:54.952424Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-17T00:39:54.952521Z	Fetching products with query: 
2025-09-17T00:39:54.952681Z	    {
2025-09-17T00:39:54.952795Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:54.952892Z	        
2025-09-17T00:39:54.952988Z	    _id,
2025-09-17T00:39:54.953087Z	    _type,
2025-09-17T00:39:54.95318Z	    partNumber,
2025-09-17T00:39:54.953286Z	    "slug": slug.current,
2025-09-17T00:39:54.953384Z	    title,
2025-09-17T00:39:54.953477Z	    shortDescription,
2025-09-17T00:39:54.953573Z	    image,
2025-09-17T00:39:54.953748Z	    brand->{
2025-09-17T00:39:54.953828Z	      name,
2025-09-17T00:39:54.953888Z	      "slug": slug.current,
2025-09-17T00:39:54.953946Z	      logo
2025-09-17T00:39:54.953999Z	    },
2025-09-17T00:39:54.954052Z	    category->{
2025-09-17T00:39:54.954108Z	      name,
2025-09-17T00:39:54.95416Z	      "slug": slug.current
2025-09-17T00:39:54.954212Z	    },
2025-09-17T00:39:54.954264Z	    pricing{
2025-09-17T00:39:54.954351Z	      currency,
2025-09-17T00:39:54.954407Z	      tiers[]{
2025-09-17T00:39:54.954461Z	        quantity,
2025-09-17T00:39:54.954514Z	        price,
2025-09-17T00:39:54.954593Z	        unit
2025-09-17T00:39:54.954661Z	      },
2025-09-17T00:39:54.954717Z	      moq,
2025-09-17T00:39:54.95477Z	      leadTime,
2025-09-17T00:39:54.954826Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:54.954882Z	      "price": tiers[0].price,
2025-09-17T00:39:54.954939Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:54.954998Z	    },
2025-09-17T00:39:54.955053Z	    inventory{
2025-09-17T00:39:54.955107Z	      quantity,
2025-09-17T00:39:54.955161Z	      status,
2025-09-17T00:39:54.955214Z	      warehouse,
2025-09-17T00:39:54.987426Z	      lastUpdated,
2025-09-17T00:39:54.988035Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:54.98818Z	      "inStock": status == "in_stock",
2025-09-17T00:39:54.988339Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:54.988488Z	    },
2025-09-17T00:39:54.988694Z	    isActive,
2025-09-17T00:39:54.988879Z	    isFeatured,
2025-09-17T00:39:54.989003Z	    isNew,
2025-09-17T00:39:54.989099Z	    _createdAt,
2025-09-17T00:39:54.989191Z	    _updatedAt
2025-09-17T00:39:54.989306Z	  
2025-09-17T00:39:54.989415Z	      },
2025-09-17T00:39:54.989502Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-17T00:39:54.989599Z	    }
2025-09-17T00:39:54.989698Z	  
2025-09-17T00:39:54.989802Z	Query parameters: {
2025-09-17T00:39:54.989895Z	  limit: 8,
2025-09-17T00:39:54.989989Z	  offset: 0,
2025-09-17T00:39:54.990154Z	  category: undefined,
2025-09-17T00:39:54.990259Z	  brand: 'mediatek',
2025-09-17T00:39:54.990406Z	  featured: undefined
2025-09-17T00:39:54.990577Z	}
2025-09-17T00:39:54.990756Z	Fetching solutions with query: 
2025-09-17T00:39:54.990895Z	    {
2025-09-17T00:39:54.991087Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:54.991312Z	        
2025-09-17T00:39:54.991453Z	    _id,
2025-09-17T00:39:54.991655Z	    title,
2025-09-17T00:39:54.99177Z	    "slug": slug.current,
2025-09-17T00:39:54.991862Z	    summary,
2025-09-17T00:39:54.991946Z	    description,
2025-09-17T00:39:54.99203Z	    coverImage,
2025-09-17T00:39:54.992128Z	    primaryBrand->{
2025-09-17T00:39:54.992237Z	      _id,
2025-09-17T00:39:54.99237Z	      name,
2025-09-17T00:39:54.992472Z	      "slug": slug.current,
2025-09-17T00:39:54.992577Z	      logo
2025-09-17T00:39:54.992671Z	    },
2025-09-17T00:39:54.992776Z	    relatedBrands[]->{
2025-09-17T00:39:54.99286Z	      _id,
2025-09-17T00:39:54.992949Z	      name,
2025-09-17T00:39:54.993032Z	      "slug": slug.current,
2025-09-17T00:39:54.993136Z	      logo
2025-09-17T00:39:54.993224Z	    },
2025-09-17T00:39:54.993328Z	    targetMarket,
2025-09-17T00:39:54.993506Z	    complexity,
2025-09-17T00:39:54.993623Z	    publishedAt,
2025-09-17T00:39:54.993768Z	    isPublished,
2025-09-17T00:39:54.993954Z	    isFeatured,
2025-09-17T00:39:54.994158Z	    viewCount,
2025-09-17T00:39:54.994382Z	    _createdAt,
2025-09-17T00:39:54.994511Z	    _updatedAt
2025-09-17T00:39:54.994644Z	  
2025-09-17T00:39:54.99476Z	      },
2025-09-17T00:39:54.994861Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-17T00:39:54.994962Z	    }
2025-09-17T00:39:54.995062Z	  
2025-09-17T00:39:54.995168Z	Query parameters: {
2025-09-17T00:39:54.995256Z	  limit: 4,
2025-09-17T00:39:54.995369Z	  offset: 0,
2025-09-17T00:39:54.99546Z	  targetMarket: undefined,
2025-09-17T00:39:54.995555Z	  brand: 'mediatek',
2025-09-17T00:39:54.995649Z	  featured: undefined
2025-09-17T00:39:54.995754Z	}
2025-09-17T00:39:54.995906Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-17T00:39:54.996086Z	Fetching products with query: 
2025-09-17T00:39:54.996205Z	    {
2025-09-17T00:39:54.996339Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:54.996447Z	        
2025-09-17T00:39:54.996539Z	    _id,
2025-09-17T00:39:54.996642Z	    _type,
2025-09-17T00:39:54.996735Z	    partNumber,
2025-09-17T00:39:54.99682Z	    "slug": slug.current,
2025-09-17T00:39:54.996907Z	    title,
2025-09-17T00:39:54.997015Z	    shortDescription,
2025-09-17T00:39:54.997116Z	    image,
2025-09-17T00:39:54.997258Z	    brand->{
2025-09-17T00:39:54.997391Z	      name,
2025-09-17T00:39:54.997498Z	      "slug": slug.current,
2025-09-17T00:39:54.997602Z	      logo
2025-09-17T00:39:54.997709Z	    },
2025-09-17T00:39:54.997995Z	    category->{
2025-09-17T00:39:55.001697Z	      name,
2025-09-17T00:39:55.001857Z	      "slug": slug.current
2025-09-17T00:39:55.001974Z	    },
2025-09-17T00:39:55.002081Z	    pricing{
2025-09-17T00:39:55.002178Z	      currency,
2025-09-17T00:39:55.002282Z	      tiers[]{
2025-09-17T00:39:55.002383Z	        quantity,
2025-09-17T00:39:55.002474Z	        price,
2025-09-17T00:39:55.002562Z	        unit
2025-09-17T00:39:55.002647Z	      },
2025-09-17T00:39:55.002751Z	      moq,
2025-09-17T00:39:55.002836Z	      leadTime,
2025-09-17T00:39:55.002923Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:55.003014Z	      "price": tiers[0].price,
2025-09-17T00:39:55.003098Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:55.003183Z	    },
2025-09-17T00:39:55.00331Z	    inventory{
2025-09-17T00:39:55.00351Z	      quantity,
2025-09-17T00:39:55.003635Z	      status,
2025-09-17T00:39:55.003778Z	      warehouse,
2025-09-17T00:39:55.003945Z	      lastUpdated,
2025-09-17T00:39:55.004125Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:55.004284Z	      "inStock": status == "in_stock",
2025-09-17T00:39:55.004381Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:55.004478Z	    },
2025-09-17T00:39:55.004586Z	    isActive,
2025-09-17T00:39:55.004699Z	    isFeatured,
2025-09-17T00:39:55.004796Z	    isNew,
2025-09-17T00:39:55.004888Z	    _createdAt,
2025-09-17T00:39:55.004978Z	    _updatedAt
2025-09-17T00:39:55.005067Z	  
2025-09-17T00:39:55.005154Z	      },
2025-09-17T00:39:55.005241Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-17T00:39:55.005358Z	    }
2025-09-17T00:39:55.005453Z	  
2025-09-17T00:39:55.005543Z	Query parameters: {
2025-09-17T00:39:55.005666Z	  limit: 8,
2025-09-17T00:39:55.005762Z	  offset: 0,
2025-09-17T00:39:55.005885Z	  category: undefined,
2025-09-17T00:39:55.005978Z	  brand: 'mediatek',
2025-09-17T00:39:55.00607Z	  featured: undefined
2025-09-17T00:39:55.006157Z	}
2025-09-17T00:39:55.006253Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-17T00:39:55.006445Z	Fetching products with query: 
2025-09-17T00:39:55.006596Z	    {
2025-09-17T00:39:55.006698Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:55.0068Z	        
2025-09-17T00:39:55.006896Z	    _id,
2025-09-17T00:39:55.006985Z	    _type,
2025-09-17T00:39:55.007076Z	    partNumber,
2025-09-17T00:39:55.007168Z	    "slug": slug.current,
2025-09-17T00:39:55.007257Z	    title,
2025-09-17T00:39:55.007683Z	    shortDescription,
2025-09-17T00:39:55.007832Z	    image,
2025-09-17T00:39:55.007939Z	    brand->{
2025-09-17T00:39:55.008034Z	      name,
2025-09-17T00:39:55.008161Z	      "slug": slug.current,
2025-09-17T00:39:55.008358Z	      logo
2025-09-17T00:39:55.008519Z	    },
2025-09-17T00:39:55.00863Z	    category->{
2025-09-17T00:39:55.009145Z	      name,
2025-09-17T00:39:55.009292Z	      "slug": slug.current
2025-09-17T00:39:55.009406Z	    },
2025-09-17T00:39:55.009503Z	    pricing{
2025-09-17T00:39:55.009599Z	      currency,
2025-09-17T00:39:55.009691Z	      tiers[]{
2025-09-17T00:39:55.009794Z	        quantity,
2025-09-17T00:39:55.009918Z	        price,
2025-09-17T00:39:55.010028Z	        unit
2025-09-17T00:39:55.010125Z	      },
2025-09-17T00:39:55.012135Z	      moq,
2025-09-17T00:39:55.012296Z	      leadTime,
2025-09-17T00:39:55.012416Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:55.012563Z	      "price": tiers[0].price,
2025-09-17T00:39:55.012749Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:55.012939Z	    },
2025-09-17T00:39:55.013106Z	    inventory{
2025-09-17T00:39:55.013218Z	      quantity,
2025-09-17T00:39:55.013335Z	      status,
2025-09-17T00:39:55.013696Z	      warehouse,
2025-09-17T00:39:55.015534Z	      lastUpdated,
2025-09-17T00:39:55.015669Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:55.015744Z	      "inStock": status == "in_stock",
2025-09-17T00:39:55.015802Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:55.015857Z	    },
2025-09-17T00:39:55.015916Z	    isActive,
2025-09-17T00:39:55.015974Z	    isFeatured,
2025-09-17T00:39:55.016028Z	    isNew,
2025-09-17T00:39:55.016085Z	    _createdAt,
2025-09-17T00:39:55.016195Z	    _updatedAt
2025-09-17T00:39:55.01648Z	  
2025-09-17T00:39:55.016867Z	      },
2025-09-17T00:39:55.017806Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-17T00:39:55.018422Z	    }
2025-09-17T00:39:55.018645Z	  
2025-09-17T00:39:55.018825Z	Query parameters: {
2025-09-17T00:39:55.019041Z	  limit: 8,
2025-09-17T00:39:55.019248Z	  offset: 0,
2025-09-17T00:39:55.019447Z	  category: undefined,
2025-09-17T00:39:55.019564Z	  brand: 'pi',
2025-09-17T00:39:55.019738Z	  featured: undefined
2025-09-17T00:39:55.019965Z	}
2025-09-17T00:39:55.020156Z	Fetching solutions with query: 
2025-09-17T00:39:55.020364Z	    {
2025-09-17T00:39:55.020527Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:55.02071Z	        
2025-09-17T00:39:55.020868Z	    _id,
2025-09-17T00:39:55.021034Z	    title,
2025-09-17T00:39:55.021192Z	    "slug": slug.current,
2025-09-17T00:39:55.021352Z	    summary,
2025-09-17T00:39:55.021486Z	    description,
2025-09-17T00:39:55.021646Z	    coverImage,
2025-09-17T00:39:55.021862Z	    primaryBrand->{
2025-09-17T00:39:55.022038Z	      _id,
2025-09-17T00:39:55.022204Z	      name,
2025-09-17T00:39:55.022391Z	      "slug": slug.current,
2025-09-17T00:39:55.022541Z	      logo
2025-09-17T00:39:55.02266Z	    },
2025-09-17T00:39:55.022766Z	    relatedBrands[]->{
2025-09-17T00:39:55.022868Z	      _id,
2025-09-17T00:39:55.023396Z	      name,
2025-09-17T00:39:55.023609Z	      "slug": slug.current,
2025-09-17T00:39:55.023795Z	      logo
2025-09-17T00:39:55.024127Z	    },
2025-09-17T00:39:55.024512Z	    targetMarket,
2025-09-17T00:39:55.033177Z	    complexity,
2025-09-17T00:39:55.033427Z	    publishedAt,
2025-09-17T00:39:55.033561Z	    isPublished,
2025-09-17T00:39:55.033676Z	    isFeatured,
2025-09-17T00:39:55.033824Z	    viewCount,
2025-09-17T00:39:55.033958Z	    _createdAt,
2025-09-17T00:39:55.034077Z	    _updatedAt
2025-09-17T00:39:55.034192Z	  
2025-09-17T00:39:55.034321Z	      },
2025-09-17T00:39:55.034431Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-17T00:39:55.034547Z	    }
2025-09-17T00:39:55.034658Z	  
2025-09-17T00:39:55.034768Z	Query parameters: {
2025-09-17T00:39:55.034871Z	  limit: 4,
2025-09-17T00:39:55.034985Z	  offset: 0,
2025-09-17T00:39:55.035088Z	  targetMarket: undefined,
2025-09-17T00:39:55.03519Z	  brand: 'pi',
2025-09-17T00:39:55.035306Z	  featured: undefined
2025-09-17T00:39:55.035415Z	}
2025-09-17T00:39:55.035525Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-17T00:39:55.035636Z	Fetching products with query: 
2025-09-17T00:39:55.035746Z	    {
2025-09-17T00:39:55.035849Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:55.035972Z	        
2025-09-17T00:39:55.036077Z	    _id,
2025-09-17T00:39:55.036179Z	    _type,
2025-09-17T00:39:55.036298Z	    partNumber,
2025-09-17T00:39:55.036442Z	    "slug": slug.current,
2025-09-17T00:39:55.036558Z	    title,
2025-09-17T00:39:55.036662Z	    shortDescription,
2025-09-17T00:39:55.036767Z	    image,
2025-09-17T00:39:55.03687Z	    brand->{
2025-09-17T00:39:55.036978Z	      name,
2025-09-17T00:39:55.037087Z	      "slug": slug.current,
2025-09-17T00:39:55.037194Z	      logo
2025-09-17T00:39:55.037323Z	    },
2025-09-17T00:39:55.037438Z	    category->{
2025-09-17T00:39:55.037944Z	      name,
2025-09-17T00:39:55.038448Z	      "slug": slug.current
2025-09-17T00:39:55.038682Z	    },
2025-09-17T00:39:55.039009Z	    pricing{
2025-09-17T00:39:55.040033Z	      currency,
2025-09-17T00:39:55.040184Z	      tiers[]{
2025-09-17T00:39:55.040312Z	        quantity,
2025-09-17T00:39:55.040417Z	        price,
2025-09-17T00:39:55.040512Z	        unit
2025-09-17T00:39:55.040606Z	      },
2025-09-17T00:39:55.040711Z	      moq,
2025-09-17T00:39:55.04081Z	      leadTime,
2025-09-17T00:39:55.040933Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:55.041057Z	      "price": tiers[0].price,
2025-09-17T00:39:55.041168Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:55.041448Z	    },
2025-09-17T00:39:55.041574Z	    inventory{
2025-09-17T00:39:55.041722Z	      quantity,
2025-09-17T00:39:55.041866Z	      status,
2025-09-17T00:39:55.042075Z	      warehouse,
2025-09-17T00:39:55.042227Z	      lastUpdated,
2025-09-17T00:39:55.042448Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:55.042637Z	      "inStock": status == "in_stock",
2025-09-17T00:39:55.042837Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:55.043Z	    },
2025-09-17T00:39:55.043396Z	    isActive,
2025-09-17T00:39:55.043607Z	    isFeatured,
2025-09-17T00:39:55.043978Z	    isNew,
2025-09-17T00:39:55.045594Z	    _createdAt,
2025-09-17T00:39:55.045862Z	    _updatedAt
2025-09-17T00:39:55.046017Z	  
2025-09-17T00:39:55.04613Z	      },
2025-09-17T00:39:55.046239Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-17T00:39:55.046388Z	    }
2025-09-17T00:39:55.046745Z	  
2025-09-17T00:39:55.046875Z	Query parameters: {
2025-09-17T00:39:55.046985Z	  limit: 8,
2025-09-17T00:39:55.047122Z	  offset: 0,
2025-09-17T00:39:55.047226Z	  category: undefined,
2025-09-17T00:39:55.047354Z	  brand: 'pi',
2025-09-17T00:39:55.047463Z	  featured: undefined
2025-09-17T00:39:55.047576Z	}
2025-09-17T00:39:55.047684Z	Fetching solutions with query: 
2025-09-17T00:39:55.047789Z	    {
2025-09-17T00:39:55.047919Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:55.08794Z	        
2025-09-17T00:39:55.088098Z	    _id,
2025-09-17T00:39:55.088215Z	    title,
2025-09-17T00:39:55.088356Z	    "slug": slug.current,
2025-09-17T00:39:55.088524Z	    summary,
2025-09-17T00:39:55.088638Z	    description,
2025-09-17T00:39:55.088736Z	    coverImage,
2025-09-17T00:39:55.088821Z	    primaryBrand->{
2025-09-17T00:39:55.088906Z	      _id,
2025-09-17T00:39:55.089015Z	      name,
2025-09-17T00:39:55.089105Z	      "slug": slug.current,
2025-09-17T00:39:55.089194Z	      logo
2025-09-17T00:39:55.089294Z	    },
2025-09-17T00:39:55.089395Z	    relatedBrands[]->{
2025-09-17T00:39:55.089545Z	      _id,
2025-09-17T00:39:55.089723Z	      name,
2025-09-17T00:39:55.089833Z	      "slug": slug.current,
2025-09-17T00:39:55.089945Z	      logo
2025-09-17T00:39:55.09004Z	    },
2025-09-17T00:39:55.090141Z	    targetMarket,
2025-09-17T00:39:55.09023Z	    complexity,
2025-09-17T00:39:55.090346Z	    publishedAt,
2025-09-17T00:39:55.09044Z	    isPublished,
2025-09-17T00:39:55.090531Z	    isFeatured,
2025-09-17T00:39:55.090618Z	    viewCount,
2025-09-17T00:39:55.090718Z	    _createdAt,
2025-09-17T00:39:55.090816Z	    _updatedAt
2025-09-17T00:39:55.090906Z	  
2025-09-17T00:39:55.090999Z	      },
2025-09-17T00:39:55.091095Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-17T00:39:55.091182Z	    }
2025-09-17T00:39:55.091279Z	  
2025-09-17T00:39:55.091378Z	Query parameters: {
2025-09-17T00:39:55.091473Z	  limit: 4,
2025-09-17T00:39:55.091597Z	  offset: 0,
2025-09-17T00:39:55.091719Z	  targetMarket: undefined,
2025-09-17T00:39:55.091819Z	  brand: 'pi',
2025-09-17T00:39:55.09191Z	  featured: undefined
2025-09-17T00:39:55.092002Z	}
2025-09-17T00:39:55.09823Z	✅ [getBrandData] Found brand: PI
2025-09-17T00:39:55.098453Z	✅ [getBrandData] Found brand: PI
2025-09-17T00:39:55.098583Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:55.098708Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:55.098825Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-17T00:39:55.098949Z	Fetching products with query: 
2025-09-17T00:39:55.099066Z	    {
2025-09-17T00:39:55.099186Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:55.099309Z	        
2025-09-17T00:39:55.099419Z	    _id,
2025-09-17T00:39:55.099521Z	    _type,
2025-09-17T00:39:55.099625Z	    partNumber,
2025-09-17T00:39:55.099726Z	    "slug": slug.current,
2025-09-17T00:39:55.09983Z	    title,
2025-09-17T00:39:55.099952Z	    shortDescription,
2025-09-17T00:39:55.100065Z	    image,
2025-09-17T00:39:55.100171Z	    brand->{
2025-09-17T00:39:55.100304Z	      name,
2025-09-17T00:39:55.10176Z	      "slug": slug.current,
2025-09-17T00:39:55.10191Z	      logo
2025-09-17T00:39:55.102027Z	    },
2025-09-17T00:39:55.102127Z	    category->{
2025-09-17T00:39:55.102222Z	      name,
2025-09-17T00:39:55.102376Z	      "slug": slug.current
2025-09-17T00:39:55.102489Z	    },
2025-09-17T00:39:55.102582Z	    pricing{
2025-09-17T00:39:55.102678Z	      currency,
2025-09-17T00:39:55.107759Z	      tiers[]{
2025-09-17T00:39:55.107924Z	        quantity,
2025-09-17T00:39:55.108039Z	        price,
2025-09-17T00:39:55.10813Z	        unit
2025-09-17T00:39:55.108217Z	      },
2025-09-17T00:39:55.108325Z	      moq,
2025-09-17T00:39:55.108416Z	      leadTime,
2025-09-17T00:39:55.1085Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:55.10859Z	      "price": tiers[0].price,
2025-09-17T00:39:55.108681Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:55.108774Z	    },
2025-09-17T00:39:55.108861Z	    inventory{
2025-09-17T00:39:55.108963Z	      quantity,
2025-09-17T00:39:55.109059Z	      status,
2025-09-17T00:39:55.109151Z	      warehouse,
2025-09-17T00:39:55.109244Z	      lastUpdated,
2025-09-17T00:39:55.109362Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:55.109474Z	      "inStock": status == "in_stock",
2025-09-17T00:39:55.10958Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:55.109709Z	    },
2025-09-17T00:39:55.109804Z	    isActive,
2025-09-17T00:39:55.109923Z	    isFeatured,
2025-09-17T00:39:55.110032Z	    isNew,
2025-09-17T00:39:55.11013Z	    _createdAt,
2025-09-17T00:39:55.11023Z	    _updatedAt
2025-09-17T00:39:55.110428Z	  
2025-09-17T00:39:55.110662Z	      },
2025-09-17T00:39:55.110793Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-17T00:39:55.110904Z	    }
2025-09-17T00:39:55.111018Z	  
2025-09-17T00:39:55.111119Z	Query parameters: {
2025-09-17T00:39:55.111223Z	  limit: 8,
2025-09-17T00:39:55.11135Z	  offset: 0,
2025-09-17T00:39:55.111446Z	  category: undefined,
2025-09-17T00:39:55.111532Z	  brand: 'littelfuse',
2025-09-17T00:39:55.111618Z	  featured: undefined
2025-09-17T00:39:55.111703Z	}
2025-09-17T00:39:55.111815Z	Fetching solutions with query: 
2025-09-17T00:39:55.111903Z	    {
2025-09-17T00:39:55.112021Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:55.112125Z	        
2025-09-17T00:39:55.112225Z	    _id,
2025-09-17T00:39:55.112348Z	    title,
2025-09-17T00:39:55.112446Z	    "slug": slug.current,
2025-09-17T00:39:55.112553Z	    summary,
2025-09-17T00:39:55.112704Z	    description,
2025-09-17T00:39:55.112844Z	    coverImage,
2025-09-17T00:39:55.113037Z	    primaryBrand->{
2025-09-17T00:39:55.113151Z	      _id,
2025-09-17T00:39:55.113248Z	      name,
2025-09-17T00:39:55.113369Z	      "slug": slug.current,
2025-09-17T00:39:55.113469Z	      logo
2025-09-17T00:39:55.11357Z	    },
2025-09-17T00:39:55.1137Z	    relatedBrands[]->{
2025-09-17T00:39:55.11437Z	      _id,
2025-09-17T00:39:55.114561Z	      name,
2025-09-17T00:39:55.114759Z	      "slug": slug.current,
2025-09-17T00:39:55.11498Z	      logo
2025-09-17T00:39:55.115126Z	    },
2025-09-17T00:39:55.115355Z	    targetMarket,
2025-09-17T00:39:55.115488Z	    complexity,
2025-09-17T00:39:55.115595Z	    publishedAt,
2025-09-17T00:39:55.115701Z	    isPublished,
2025-09-17T00:39:55.115793Z	    isFeatured,
2025-09-17T00:39:55.11589Z	    viewCount,
2025-09-17T00:39:55.116411Z	    _createdAt,
2025-09-17T00:39:55.116575Z	    _updatedAt
2025-09-17T00:39:55.116711Z	  
2025-09-17T00:39:55.116825Z	      },
2025-09-17T00:39:55.117186Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-17T00:39:55.117328Z	    }
2025-09-17T00:39:55.117439Z	  
2025-09-17T00:39:55.117534Z	Query parameters: {
2025-09-17T00:39:55.117642Z	  limit: 4,
2025-09-17T00:39:55.118018Z	  offset: 0,
2025-09-17T00:39:55.118146Z	  targetMarket: undefined,
2025-09-17T00:39:55.118245Z	  brand: 'littelfuse',
2025-09-17T00:39:55.118361Z	  featured: undefined
2025-09-17T00:39:55.118482Z	}
2025-09-17T00:39:55.118592Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-17T00:39:55.118719Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:55.118817Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:55.11891Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-17T00:39:55.119019Z	Fetching products with query: 
2025-09-17T00:39:55.119118Z	    {
2025-09-17T00:39:55.119224Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:55.119354Z	        
2025-09-17T00:39:55.119462Z	    _id,
2025-09-17T00:39:55.119564Z	    _type,
2025-09-17T00:39:55.119684Z	    partNumber,
2025-09-17T00:39:55.121062Z	    "slug": slug.current,
2025-09-17T00:39:55.121293Z	    title,
2025-09-17T00:39:55.121463Z	    shortDescription,
2025-09-17T00:39:55.121616Z	    image,
2025-09-17T00:39:55.12174Z	    brand->{
2025-09-17T00:39:55.122095Z	      name,
2025-09-17T00:39:55.122259Z	      "slug": slug.current,
2025-09-17T00:39:55.126842Z	      logo
2025-09-17T00:39:55.126972Z	    },
2025-09-17T00:39:55.127092Z	    category->{
2025-09-17T00:39:55.127204Z	      name,
2025-09-17T00:39:55.127343Z	      "slug": slug.current
2025-09-17T00:39:55.127459Z	    },
2025-09-17T00:39:55.127561Z	    pricing{
2025-09-17T00:39:55.12778Z	      currency,
2025-09-17T00:39:55.128002Z	      tiers[]{
2025-09-17T00:39:55.128494Z	        quantity,
2025-09-17T00:39:55.128639Z	        price,
2025-09-17T00:39:55.128789Z	        unit
2025-09-17T00:39:55.128907Z	      },
2025-09-17T00:39:55.129029Z	      moq,
2025-09-17T00:39:55.129137Z	      leadTime,
2025-09-17T00:39:55.129295Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:55.129421Z	      "price": tiers[0].price,
2025-09-17T00:39:55.129518Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:55.129637Z	    },
2025-09-17T00:39:55.129753Z	    inventory{
2025-09-17T00:39:55.129852Z	      quantity,
2025-09-17T00:39:55.129953Z	      status,
2025-09-17T00:39:55.130047Z	      warehouse,
2025-09-17T00:39:55.130184Z	      lastUpdated,
2025-09-17T00:39:55.130364Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:55.130544Z	      "inStock": status == "in_stock",
2025-09-17T00:39:55.131102Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:55.131222Z	    },
2025-09-17T00:39:55.131342Z	    isActive,
2025-09-17T00:39:55.131446Z	    isFeatured,
2025-09-17T00:39:55.131582Z	    isNew,
2025-09-17T00:39:55.131818Z	    _createdAt,
2025-09-17T00:39:55.131981Z	    _updatedAt
2025-09-17T00:39:55.132201Z	  
2025-09-17T00:39:55.132388Z	      },
2025-09-17T00:39:55.132536Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-17T00:39:55.13265Z	    }
2025-09-17T00:39:55.13354Z	  
2025-09-17T00:39:55.133675Z	Query parameters: {
2025-09-17T00:39:55.133832Z	  limit: 8,
2025-09-17T00:39:55.134134Z	  offset: 0,
2025-09-17T00:39:55.134328Z	  category: undefined,
2025-09-17T00:39:55.13472Z	  brand: 'littelfuse',
2025-09-17T00:39:55.135199Z	  featured: undefined
2025-09-17T00:39:55.135554Z	}
2025-09-17T00:39:55.135691Z	Fetching solutions with query: 
2025-09-17T00:39:55.135811Z	    {
2025-09-17T00:39:55.135935Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:55.13607Z	        
2025-09-17T00:39:55.136204Z	    _id,
2025-09-17T00:39:55.136428Z	    title,
2025-09-17T00:39:55.136594Z	    "slug": slug.current,
2025-09-17T00:39:55.137421Z	    summary,
2025-09-17T00:39:55.137591Z	    description,
2025-09-17T00:39:55.137707Z	    coverImage,
2025-09-17T00:39:55.137801Z	    primaryBrand->{
2025-09-17T00:39:55.137863Z	      _id,
2025-09-17T00:39:55.137929Z	      name,
2025-09-17T00:39:55.137985Z	      "slug": slug.current,
2025-09-17T00:39:55.138041Z	      logo
2025-09-17T00:39:55.138095Z	    },
2025-09-17T00:39:55.138148Z	    relatedBrands[]->{
2025-09-17T00:39:55.138202Z	      _id,
2025-09-17T00:39:55.138259Z	      name,
2025-09-17T00:39:55.13837Z	      "slug": slug.current,
2025-09-17T00:39:55.138437Z	      logo
2025-09-17T00:39:55.138492Z	    },
2025-09-17T00:39:55.138553Z	    targetMarket,
2025-09-17T00:39:55.187987Z	    complexity,
2025-09-17T00:39:55.188404Z	    publishedAt,
2025-09-17T00:39:55.188553Z	    isPublished,
2025-09-17T00:39:55.188684Z	    isFeatured,
2025-09-17T00:39:55.188788Z	    viewCount,
2025-09-17T00:39:55.188888Z	    _createdAt,
2025-09-17T00:39:55.18898Z	    _updatedAt
2025-09-17T00:39:55.189083Z	  
2025-09-17T00:39:55.189168Z	      },
2025-09-17T00:39:55.189383Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-17T00:39:55.191301Z	    }
2025-09-17T00:39:55.19148Z	  
2025-09-17T00:39:55.192262Z	Query parameters: {
2025-09-17T00:39:55.192479Z	  limit: 4,
2025-09-17T00:39:55.192627Z	  offset: 0,
2025-09-17T00:39:55.192751Z	  targetMarket: undefined,
2025-09-17T00:39:55.192852Z	  brand: 'littelfuse',
2025-09-17T00:39:55.192948Z	  featured: undefined
2025-09-17T00:39:55.193054Z	}
2025-09-17T00:39:55.193154Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-17T00:39:55.193253Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:55.193426Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:55.193849Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:55.194227Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:55.194563Z	Fetching solutions with query: 
2025-09-17T00:39:55.19468Z	    {
2025-09-17T00:39:55.194758Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:55.194853Z	        
2025-09-17T00:39:55.195026Z	    _id,
2025-09-17T00:39:55.195936Z	    title,
2025-09-17T00:39:55.196063Z	    "slug": slug.current,
2025-09-17T00:39:55.196181Z	    summary,
2025-09-17T00:39:55.196537Z	    description,
2025-09-17T00:39:55.196718Z	    coverImage,
2025-09-17T00:39:55.196836Z	    primaryBrand->{
2025-09-17T00:39:55.196948Z	      _id,
2025-09-17T00:39:55.19706Z	      name,
2025-09-17T00:39:55.197166Z	      "slug": slug.current,
2025-09-17T00:39:55.197284Z	      logo
2025-09-17T00:39:55.197396Z	    },
2025-09-17T00:39:55.197492Z	    relatedBrands[]->{
2025-09-17T00:39:55.198018Z	      _id,
2025-09-17T00:39:55.198156Z	      name,
2025-09-17T00:39:55.198662Z	      "slug": slug.current,
2025-09-17T00:39:55.198899Z	      logo
2025-09-17T00:39:55.199066Z	    },
2025-09-17T00:39:55.199225Z	    targetMarket,
2025-09-17T00:39:55.199462Z	    complexity,
2025-09-17T00:39:55.19969Z	    publishedAt,
2025-09-17T00:39:55.200053Z	    isPublished,
2025-09-17T00:39:55.20021Z	    isFeatured,
2025-09-17T00:39:55.200395Z	    viewCount,
2025-09-17T00:39:55.200756Z	    _createdAt,
2025-09-17T00:39:55.201099Z	    _updatedAt
2025-09-17T00:39:55.201239Z	  
2025-09-17T00:39:55.201378Z	      },
2025-09-17T00:39:55.201484Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-17T00:39:55.20188Z	    }
2025-09-17T00:39:55.202245Z	  
2025-09-17T00:39:55.202416Z	Query parameters: {
2025-09-17T00:39:55.20257Z	  limit: 4,
2025-09-17T00:39:55.202804Z	  offset: 0,
2025-09-17T00:39:55.20297Z	  targetMarket: undefined,
2025-09-17T00:39:55.203138Z	  brand: 'mediatek',
2025-09-17T00:39:55.203325Z	  featured: undefined
2025-09-17T00:39:55.203791Z	}
2025-09-17T00:39:55.204054Z	✅ [getBrandData] Found brand: MediaTek
2025-09-17T00:39:55.20425Z	✅ [getBrandData] Found brand: MediaTek
2025-09-17T00:39:55.204529Z	✅ [getBrandData] Found brand: LEM
2025-09-17T00:39:55.204734Z	✅ [getBrandData] Found brand: LEM
2025-09-17T00:39:55.205123Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:55.205511Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:55.205687Z	Products fetch result: {
2025-09-17T00:39:55.205831Z	  totalProducts: 3,
2025-09-17T00:39:55.206235Z	  fetchedProducts: 3,
2025-09-17T00:39:55.206548Z	  firstProduct: {
2025-09-17T00:39:55.20674Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-17T00:39:55.206903Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-17T00:39:55.207019Z	    _type: 'product',
2025-09-17T00:39:55.207276Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-17T00:39:55.207458Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-17T00:39:55.207577Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-17T00:39:55.207692Z	    image: null,
2025-09-17T00:39:55.207795Z	    inventory: {
2025-09-17T00:39:55.207894Z	      inStock: true,
2025-09-17T00:39:55.207985Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-17T00:39:55.208106Z	      quantity: 0,
2025-09-17T00:39:55.208207Z	      status: 'in_stock',
2025-09-17T00:39:55.208324Z	      warehouse: null
2025-09-17T00:39:55.208451Z	    },
2025-09-17T00:39:55.208571Z	    isActive: true,
2025-09-17T00:39:55.208733Z	    isFeatured: false,
2025-09-17T00:39:55.208956Z	    isNew: false,
2025-09-17T00:39:55.209081Z	    partNumber: 'la55-p',
2025-09-17T00:39:55.209182Z	    pricing: {
2025-09-17T00:39:55.209409Z	      currency: 'CNY',
2025-09-17T00:39:55.209658Z	      leadTime: null,
2025-09-17T00:39:55.209939Z	      moq: null,
2025-09-17T00:39:55.210194Z	      price: null,
2025-09-17T00:39:55.211729Z	      tiers: null
2025-09-17T00:39:55.211977Z	    },
2025-09-17T00:39:55.213317Z	    shortDescription: '电流传感器la55-p',
2025-09-17T00:39:55.213513Z	    slug: 'la55-p',
2025-09-17T00:39:55.21373Z	    title: '电流传感器la55-p'
2025-09-17T00:39:55.213813Z	  }
2025-09-17T00:39:55.213872Z	}
2025-09-17T00:39:55.213935Z	Products fetch result: {
2025-09-17T00:39:55.215716Z	  totalProducts: 3,
2025-09-17T00:39:55.215898Z	  fetchedProducts: 3,
2025-09-17T00:39:55.216101Z	  firstProduct: {
2025-09-17T00:39:55.216348Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-17T00:39:55.216678Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-17T00:39:55.216859Z	    _type: 'product',
2025-09-17T00:39:55.217009Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-17T00:39:55.217124Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-17T00:39:55.21723Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-17T00:39:55.217631Z	    image: null,
2025-09-17T00:39:55.217751Z	    inventory: {
2025-09-17T00:39:55.21788Z	      inStock: true,
2025-09-17T00:39:55.218005Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-17T00:39:55.218123Z	      quantity: 0,
2025-09-17T00:39:55.218506Z	      status: 'in_stock',
2025-09-17T00:39:55.218866Z	      warehouse: null
2025-09-17T00:39:55.219193Z	    },
2025-09-17T00:39:55.219562Z	    isActive: true,
2025-09-17T00:39:55.219918Z	    isFeatured: false,
2025-09-17T00:39:55.220287Z	    isNew: false,
2025-09-17T00:39:55.220419Z	    partNumber: 'la55-p',
2025-09-17T00:39:55.220531Z	    pricing: {
2025-09-17T00:39:55.22064Z	      currency: 'CNY',
2025-09-17T00:39:55.220754Z	      leadTime: null,
2025-09-17T00:39:55.221118Z	      moq: null,
2025-09-17T00:39:55.221484Z	      price: null,
2025-09-17T00:39:55.221618Z	      tiers: null
2025-09-17T00:39:55.22172Z	    },
2025-09-17T00:39:55.221903Z	    shortDescription: '电流传感器la55-p',
2025-09-17T00:39:55.222112Z	    slug: 'la55-p',
2025-09-17T00:39:55.222287Z	    title: '电流传感器la55-p'
2025-09-17T00:39:55.222434Z	  }
2025-09-17T00:39:55.222549Z	}
2025-09-17T00:39:55.222705Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-17T00:39:55.223033Z	Fetching products with query: 
2025-09-17T00:39:55.22315Z	    {
2025-09-17T00:39:55.223412Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:55.223594Z	        
2025-09-17T00:39:55.22383Z	    _id,
2025-09-17T00:39:55.22408Z	    _type,
2025-09-17T00:39:55.224309Z	    partNumber,
2025-09-17T00:39:55.224712Z	    "slug": slug.current,
2025-09-17T00:39:55.224887Z	    title,
2025-09-17T00:39:55.225489Z	    shortDescription,
2025-09-17T00:39:55.226442Z	    image,
2025-09-17T00:39:55.226579Z	    brand->{
2025-09-17T00:39:55.22671Z	      name,
2025-09-17T00:39:55.226826Z	      "slug": slug.current,
2025-09-17T00:39:55.226929Z	      logo
2025-09-17T00:39:55.227034Z	    },
2025-09-17T00:39:55.227147Z	    category->{
2025-09-17T00:39:55.227254Z	      name,
2025-09-17T00:39:55.227379Z	      "slug": slug.current
2025-09-17T00:39:55.227476Z	    },
2025-09-17T00:39:55.227571Z	    pricing{
2025-09-17T00:39:55.22773Z	      currency,
2025-09-17T00:39:55.227843Z	      tiers[]{
2025-09-17T00:39:55.227951Z	        quantity,
2025-09-17T00:39:55.228053Z	        price,
2025-09-17T00:39:55.228148Z	        unit
2025-09-17T00:39:55.228242Z	      },
2025-09-17T00:39:55.228364Z	      moq,
2025-09-17T00:39:55.228464Z	      leadTime,
2025-09-17T00:39:55.228564Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:55.228669Z	      "price": tiers[0].price,
2025-09-17T00:39:55.22877Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:55.228873Z	    },
2025-09-17T00:39:55.22901Z	    inventory{
2025-09-17T00:39:55.229146Z	      quantity,
2025-09-17T00:39:55.229291Z	      status,
2025-09-17T00:39:55.229425Z	      warehouse,
2025-09-17T00:39:55.230505Z	      lastUpdated,
2025-09-17T00:39:55.230637Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:55.230765Z	      "inStock": status == "in_stock",
2025-09-17T00:39:55.230886Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:55.23099Z	    },
2025-09-17T00:39:55.231086Z	    isActive,
2025-09-17T00:39:55.231215Z	    isFeatured,
2025-09-17T00:39:55.231415Z	    isNew,
2025-09-17T00:39:55.231546Z	    _createdAt,
2025-09-17T00:39:55.231673Z	    _updatedAt
2025-09-17T00:39:55.231789Z	  
2025-09-17T00:39:55.231915Z	      },
2025-09-17T00:39:55.232032Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-17T00:39:55.232144Z	    }
2025-09-17T00:39:55.232249Z	  
2025-09-17T00:39:55.232417Z	Query parameters: {
2025-09-17T00:39:55.232588Z	  limit: 8,
2025-09-17T00:39:55.23302Z	  offset: 0,
2025-09-17T00:39:55.233554Z	  category: undefined,
2025-09-17T00:39:55.233701Z	  brand: 'qualcomm',
2025-09-17T00:39:55.233821Z	  featured: undefined
2025-09-17T00:39:55.233914Z	}
2025-09-17T00:39:55.234025Z	Fetching solutions with query: 
2025-09-17T00:39:55.234134Z	    {
2025-09-17T00:39:55.234234Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:55.23435Z	        
2025-09-17T00:39:55.234677Z	    _id,
2025-09-17T00:39:55.23483Z	    title,
2025-09-17T00:39:55.234947Z	    "slug": slug.current,
2025-09-17T00:39:55.23504Z	    summary,
2025-09-17T00:39:55.235141Z	    description,
2025-09-17T00:39:55.235229Z	    coverImage,
2025-09-17T00:39:55.235922Z	    primaryBrand->{
2025-09-17T00:39:55.236527Z	      _id,
2025-09-17T00:39:55.236763Z	      name,
2025-09-17T00:39:55.236924Z	      "slug": slug.current,
2025-09-17T00:39:55.237727Z	      logo
2025-09-17T00:39:55.237838Z	    },
2025-09-17T00:39:55.237971Z	    relatedBrands[]->{
2025-09-17T00:39:55.238221Z	      _id,
2025-09-17T00:39:55.238384Z	      name,
2025-09-17T00:39:55.238587Z	      "slug": slug.current,
2025-09-17T00:39:55.238758Z	      logo
2025-09-17T00:39:55.238925Z	    },
2025-09-17T00:39:55.239052Z	    targetMarket,
2025-09-17T00:39:55.239124Z	    complexity,
2025-09-17T00:39:55.239187Z	    publishedAt,
2025-09-17T00:39:55.239244Z	    isPublished,
2025-09-17T00:39:55.239332Z	    isFeatured,
2025-09-17T00:39:55.239392Z	    viewCount,
2025-09-17T00:39:55.239447Z	    _createdAt,
2025-09-17T00:39:55.2395Z	    _updatedAt
2025-09-17T00:39:55.239553Z	  
2025-09-17T00:39:55.239608Z	      },
2025-09-17T00:39:55.239665Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-17T00:39:55.23973Z	    }
2025-09-17T00:39:55.239828Z	  
2025-09-17T00:39:55.239978Z	Query parameters: {
2025-09-17T00:39:55.240098Z	  limit: 4,
2025-09-17T00:39:55.240236Z	  offset: 0,
2025-09-17T00:39:55.240525Z	  targetMarket: undefined,
2025-09-17T00:39:55.241697Z	  brand: 'qualcomm',
2025-09-17T00:39:55.241841Z	  featured: undefined
2025-09-17T00:39:55.241964Z	}
2025-09-17T00:39:55.242211Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-17T00:39:55.242942Z	Fetching products with query: 
2025-09-17T00:39:55.243062Z	    {
2025-09-17T00:39:55.243184Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:55.243323Z	        
2025-09-17T00:39:55.243432Z	    _id,
2025-09-17T00:39:55.243532Z	    _type,
2025-09-17T00:39:55.243656Z	    partNumber,
2025-09-17T00:39:55.243772Z	    "slug": slug.current,
2025-09-17T00:39:55.243872Z	    title,
2025-09-17T00:39:55.243968Z	    shortDescription,
2025-09-17T00:39:55.244063Z	    image,
2025-09-17T00:39:55.244158Z	    brand->{
2025-09-17T00:39:55.244255Z	      name,
2025-09-17T00:39:55.244372Z	      "slug": slug.current,
2025-09-17T00:39:55.244461Z	      logo
2025-09-17T00:39:55.244544Z	    },
2025-09-17T00:39:55.244623Z	    category->{
2025-09-17T00:39:55.244718Z	      name,
2025-09-17T00:39:55.244822Z	      "slug": slug.current
2025-09-17T00:39:55.245182Z	    },
2025-09-17T00:39:55.245315Z	    pricing{
2025-09-17T00:39:55.245391Z	      currency,
2025-09-17T00:39:55.245447Z	      tiers[]{
2025-09-17T00:39:55.245502Z	        quantity,
2025-09-17T00:39:55.245558Z	        price,
2025-09-17T00:39:55.245611Z	        unit
2025-09-17T00:39:55.245679Z	      },
2025-09-17T00:39:55.245736Z	      moq,
2025-09-17T00:39:55.245792Z	      leadTime,
2025-09-17T00:39:55.245847Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:55.245904Z	      "price": tiers[0].price,
2025-09-17T00:39:55.245989Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:55.246189Z	    },
2025-09-17T00:39:55.246368Z	    inventory{
2025-09-17T00:39:55.246565Z	      quantity,
2025-09-17T00:39:55.246745Z	      status,
2025-09-17T00:39:55.24693Z	      warehouse,
2025-09-17T00:39:55.247095Z	      lastUpdated,
2025-09-17T00:39:55.247262Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:55.247531Z	      "inStock": status == "in_stock",
2025-09-17T00:39:55.247665Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:55.247792Z	    },
2025-09-17T00:39:55.248034Z	    isActive,
2025-09-17T00:39:55.248187Z	    isFeatured,
2025-09-17T00:39:55.248351Z	    isNew,
2025-09-17T00:39:55.248473Z	    _createdAt,
2025-09-17T00:39:55.261362Z	    _updatedAt
2025-09-17T00:39:55.261493Z	  
2025-09-17T00:39:55.261602Z	      },
2025-09-17T00:39:55.261785Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-17T00:39:55.26301Z	    }
2025-09-17T00:39:55.263151Z	  
2025-09-17T00:39:55.263265Z	Query parameters: {
2025-09-17T00:39:55.263395Z	  limit: 8,
2025-09-17T00:39:55.263507Z	  offset: 0,
2025-09-17T00:39:55.263608Z	  category: undefined,
2025-09-17T00:39:55.263728Z	  brand: 'qualcomm',
2025-09-17T00:39:55.263832Z	  featured: undefined
2025-09-17T00:39:55.263929Z	}
2025-09-17T00:39:55.264025Z	Fetching solutions with query: 
2025-09-17T00:39:55.264123Z	    {
2025-09-17T00:39:55.264225Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:55.287479Z	        
2025-09-17T00:39:55.287638Z	    _id,
2025-09-17T00:39:55.287786Z	    title,
2025-09-17T00:39:55.288078Z	    "slug": slug.current,
2025-09-17T00:39:55.288284Z	    summary,
2025-09-17T00:39:55.288448Z	    description,
2025-09-17T00:39:55.28858Z	    coverImage,
2025-09-17T00:39:55.28874Z	    primaryBrand->{
2025-09-17T00:39:55.28889Z	      _id,
2025-09-17T00:39:55.289041Z	      name,
2025-09-17T00:39:55.289178Z	      "slug": slug.current,
2025-09-17T00:39:55.289359Z	      logo
2025-09-17T00:39:55.289496Z	    },
2025-09-17T00:39:55.289604Z	    relatedBrands[]->{
2025-09-17T00:39:55.289753Z	      _id,
2025-09-17T00:39:55.289887Z	      name,
2025-09-17T00:39:55.290051Z	      "slug": slug.current,
2025-09-17T00:39:55.290227Z	      logo
2025-09-17T00:39:55.290393Z	    },
2025-09-17T00:39:55.290538Z	    targetMarket,
2025-09-17T00:39:55.290715Z	    complexity,
2025-09-17T00:39:55.29085Z	    publishedAt,
2025-09-17T00:39:55.290979Z	    isPublished,
2025-09-17T00:39:55.291143Z	    isFeatured,
2025-09-17T00:39:55.291298Z	    viewCount,
2025-09-17T00:39:55.291431Z	    _createdAt,
2025-09-17T00:39:55.291584Z	    _updatedAt
2025-09-17T00:39:55.29171Z	  
2025-09-17T00:39:55.291846Z	      },
2025-09-17T00:39:55.291964Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-17T00:39:55.292079Z	    }
2025-09-17T00:39:55.292215Z	  
2025-09-17T00:39:55.292391Z	Query parameters: {
2025-09-17T00:39:55.292556Z	  limit: 4,
2025-09-17T00:39:55.292724Z	  offset: 0,
2025-09-17T00:39:55.292858Z	  targetMarket: undefined,
2025-09-17T00:39:55.293018Z	  brand: 'qualcomm',
2025-09-17T00:39:55.293165Z	  featured: undefined
2025-09-17T00:39:55.293322Z	}
2025-09-17T00:39:55.293454Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-17T00:39:55.293614Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-17T00:39:55.293823Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:55.294015Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:55.294231Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:55.294393Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:55.294549Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:55.294744Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:55.294907Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:55.29523Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:55.304927Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-17T00:39:55.305447Z	Fetching products with query: 
2025-09-17T00:39:55.305629Z	    {
2025-09-17T00:39:55.305858Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:55.306093Z	        
2025-09-17T00:39:55.306273Z	    _id,
2025-09-17T00:39:55.306476Z	    _type,
2025-09-17T00:39:55.306633Z	    partNumber,
2025-09-17T00:39:55.30755Z	    "slug": slug.current,
2025-09-17T00:39:55.308078Z	    title,
2025-09-17T00:39:55.308566Z	    shortDescription,
2025-09-17T00:39:55.309086Z	    image,
2025-09-17T00:39:55.309643Z	    brand->{
2025-09-17T00:39:55.310142Z	      name,
2025-09-17T00:39:55.310827Z	      "slug": slug.current,
2025-09-17T00:39:55.311333Z	      logo
2025-09-17T00:39:55.311987Z	    },
2025-09-17T00:39:55.312158Z	    category->{
2025-09-17T00:39:55.312279Z	      name,
2025-09-17T00:39:55.312402Z	      "slug": slug.current
2025-09-17T00:39:55.312546Z	    },
2025-09-17T00:39:55.313284Z	    pricing{
2025-09-17T00:39:55.313424Z	      currency,
2025-09-17T00:39:55.313525Z	      tiers[]{
2025-09-17T00:39:55.313617Z	        quantity,
2025-09-17T00:39:55.313703Z	        price,
2025-09-17T00:39:55.313786Z	        unit
2025-09-17T00:39:55.31387Z	      },
2025-09-17T00:39:55.313964Z	      moq,
2025-09-17T00:39:55.314055Z	      leadTime,
2025-09-17T00:39:55.314155Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:55.314252Z	      "price": tiers[0].price,
2025-09-17T00:39:55.314377Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:55.314488Z	    },
2025-09-17T00:39:55.314614Z	    inventory{
2025-09-17T00:39:55.314715Z	      quantity,
2025-09-17T00:39:55.314814Z	      status,
2025-09-17T00:39:55.31491Z	      warehouse,
2025-09-17T00:39:55.315009Z	      lastUpdated,
2025-09-17T00:39:55.315099Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:55.3152Z	      "inStock": status == "in_stock",
2025-09-17T00:39:55.3153Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:55.315393Z	    },
2025-09-17T00:39:55.315516Z	    isActive,
2025-09-17T00:39:55.315623Z	    isFeatured,
2025-09-17T00:39:55.316434Z	    isNew,
2025-09-17T00:39:55.316684Z	    _createdAt,
2025-09-17T00:39:55.316913Z	    _updatedAt
2025-09-17T00:39:55.317075Z	  
2025-09-17T00:39:55.317224Z	      },
2025-09-17T00:39:55.317355Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-17T00:39:55.317524Z	    }
2025-09-17T00:39:55.317705Z	  
2025-09-17T00:39:55.317862Z	Query parameters: {
2025-09-17T00:39:55.318063Z	  limit: 8,
2025-09-17T00:39:55.318212Z	  offset: 0,
2025-09-17T00:39:55.318339Z	  category: undefined,
2025-09-17T00:39:55.318448Z	  brand: 'sanrex',
2025-09-17T00:39:55.318549Z	  featured: undefined
2025-09-17T00:39:55.31872Z	}
2025-09-17T00:39:55.318833Z	Fetching solutions with query: 
2025-09-17T00:39:55.318951Z	    {
2025-09-17T00:39:55.320027Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:55.320253Z	        
2025-09-17T00:39:55.321399Z	    _id,
2025-09-17T00:39:55.3217Z	    title,
2025-09-17T00:39:55.321893Z	    "slug": slug.current,
2025-09-17T00:39:55.322064Z	    summary,
2025-09-17T00:39:55.322181Z	    description,
2025-09-17T00:39:55.3223Z	    coverImage,
2025-09-17T00:39:55.322406Z	    primaryBrand->{
2025-09-17T00:39:55.32252Z	      _id,
2025-09-17T00:39:55.322624Z	      name,
2025-09-17T00:39:55.322737Z	      "slug": slug.current,
2025-09-17T00:39:55.322979Z	      logo
2025-09-17T00:39:55.323102Z	    },
2025-09-17T00:39:55.32323Z	    relatedBrands[]->{
2025-09-17T00:39:55.323439Z	      _id,
2025-09-17T00:39:55.323592Z	      name,
2025-09-17T00:39:55.323834Z	      "slug": slug.current,
2025-09-17T00:39:55.325119Z	      logo
2025-09-17T00:39:55.325619Z	    },
2025-09-17T00:39:55.326413Z	    targetMarket,
2025-09-17T00:39:55.326545Z	    complexity,
2025-09-17T00:39:55.326703Z	    publishedAt,
2025-09-17T00:39:55.326831Z	    isPublished,
2025-09-17T00:39:55.326983Z	    isFeatured,
2025-09-17T00:39:55.327116Z	    viewCount,
2025-09-17T00:39:55.3273Z	    _createdAt,
2025-09-17T00:39:55.327414Z	    _updatedAt
2025-09-17T00:39:55.327588Z	  
2025-09-17T00:39:55.327696Z	      },
2025-09-17T00:39:55.327796Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-17T00:39:55.327977Z	    }
2025-09-17T00:39:55.328139Z	  
2025-09-17T00:39:55.328256Z	Query parameters: {
2025-09-17T00:39:55.328405Z	  limit: 4,
2025-09-17T00:39:55.328518Z	  offset: 0,
2025-09-17T00:39:55.328624Z	  targetMarket: undefined,
2025-09-17T00:39:55.328739Z	  brand: 'sanrex',
2025-09-17T00:39:55.328869Z	  featured: undefined
2025-09-17T00:39:55.328995Z	}
2025-09-17T00:39:55.329115Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-17T00:39:55.329223Z	Fetching products with query: 
2025-09-17T00:39:55.329348Z	    {
2025-09-17T00:39:55.329456Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:55.329565Z	        
2025-09-17T00:39:55.329669Z	    _id,
2025-09-17T00:39:55.329771Z	    _type,
2025-09-17T00:39:55.329878Z	    partNumber,
2025-09-17T00:39:55.329986Z	    "slug": slug.current,
2025-09-17T00:39:55.330129Z	    title,
2025-09-17T00:39:55.33024Z	    shortDescription,
2025-09-17T00:39:55.330368Z	    image,
2025-09-17T00:39:55.330476Z	    brand->{
2025-09-17T00:39:55.330603Z	      name,
2025-09-17T00:39:55.330793Z	      "slug": slug.current,
2025-09-17T00:39:55.330934Z	      logo
2025-09-17T00:39:55.331047Z	    },
2025-09-17T00:39:55.331157Z	    category->{
2025-09-17T00:39:55.331279Z	      name,
2025-09-17T00:39:55.331391Z	      "slug": slug.current
2025-09-17T00:39:55.331495Z	    },
2025-09-17T00:39:55.331773Z	    pricing{
2025-09-17T00:39:55.331896Z	      currency,
2025-09-17T00:39:55.332052Z	      tiers[]{
2025-09-17T00:39:55.332154Z	        quantity,
2025-09-17T00:39:55.332238Z	        price,
2025-09-17T00:39:55.332343Z	        unit
2025-09-17T00:39:55.332429Z	      },
2025-09-17T00:39:55.332516Z	      moq,
2025-09-17T00:39:55.332625Z	      leadTime,
2025-09-17T00:39:55.332722Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:55.332823Z	      "price": tiers[0].price,
2025-09-17T00:39:55.332955Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:55.333149Z	    },
2025-09-17T00:39:55.333264Z	    inventory{
2025-09-17T00:39:55.333392Z	      quantity,
2025-09-17T00:39:55.333501Z	      status,
2025-09-17T00:39:55.333598Z	      warehouse,
2025-09-17T00:39:55.333787Z	      lastUpdated,
2025-09-17T00:39:55.333943Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:55.334057Z	      "inStock": status == "in_stock",
2025-09-17T00:39:55.334169Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:55.334381Z	    },
2025-09-17T00:39:55.334534Z	    isActive,
2025-09-17T00:39:55.334646Z	    isFeatured,
2025-09-17T00:39:55.334902Z	    isNew,
2025-09-17T00:39:55.335133Z	    _createdAt,
2025-09-17T00:39:55.335383Z	    _updatedAt
2025-09-17T00:39:55.335555Z	  
2025-09-17T00:39:55.335743Z	      },
2025-09-17T00:39:55.335945Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-17T00:39:55.336093Z	    }
2025-09-17T00:39:55.336315Z	  
2025-09-17T00:39:55.336512Z	Query parameters: {
2025-09-17T00:39:55.336725Z	  limit: 8,
2025-09-17T00:39:55.336862Z	  offset: 0,
2025-09-17T00:39:55.336986Z	  category: undefined,
2025-09-17T00:39:55.337141Z	  brand: 'sanrex',
2025-09-17T00:39:55.337334Z	  featured: undefined
2025-09-17T00:39:55.337484Z	}
2025-09-17T00:39:55.337622Z	Fetching solutions with query: 
2025-09-17T00:39:55.337759Z	    {
2025-09-17T00:39:55.337896Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:55.338036Z	        
2025-09-17T00:39:55.338232Z	    _id,
2025-09-17T00:39:55.338405Z	    title,
2025-09-17T00:39:55.338601Z	    "slug": slug.current,
2025-09-17T00:39:55.338771Z	    summary,
2025-09-17T00:39:55.338968Z	    description,
2025-09-17T00:39:55.339119Z	    coverImage,
2025-09-17T00:39:55.339313Z	    primaryBrand->{
2025-09-17T00:39:55.339481Z	      _id,
2025-09-17T00:39:55.339635Z	      name,
2025-09-17T00:39:55.339748Z	      "slug": slug.current,
2025-09-17T00:39:55.339896Z	      logo
2025-09-17T00:39:55.340037Z	    },
2025-09-17T00:39:55.340171Z	    relatedBrands[]->{
2025-09-17T00:39:55.340358Z	      _id,
2025-09-17T00:39:55.340507Z	      name,
2025-09-17T00:39:55.340656Z	      "slug": slug.current,
2025-09-17T00:39:55.340818Z	      logo
2025-09-17T00:39:55.340972Z	    },
2025-09-17T00:39:55.341151Z	    targetMarket,
2025-09-17T00:39:55.341389Z	    complexity,
2025-09-17T00:39:55.341531Z	    publishedAt,
2025-09-17T00:39:55.34166Z	    isPublished,
2025-09-17T00:39:55.341763Z	    isFeatured,
2025-09-17T00:39:55.341888Z	    viewCount,
2025-09-17T00:39:55.342002Z	    _createdAt,
2025-09-17T00:39:55.342114Z	    _updatedAt
2025-09-17T00:39:55.342239Z	  
2025-09-17T00:39:55.34236Z	      },
2025-09-17T00:39:55.342461Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-17T00:39:55.342558Z	    }
2025-09-17T00:39:55.342652Z	  
2025-09-17T00:39:55.342743Z	Query parameters: {
2025-09-17T00:39:55.342845Z	  limit: 4,
2025-09-17T00:39:55.342978Z	  offset: 0,
2025-09-17T00:39:55.343078Z	  targetMarket: undefined,
2025-09-17T00:39:55.343176Z	  brand: 'sanrex',
2025-09-17T00:39:55.343292Z	  featured: undefined
2025-09-17T00:39:55.343406Z	}
2025-09-17T00:39:55.343478Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-17T00:39:55.343539Z	Fetching products with query: 
2025-09-17T00:39:55.343599Z	    {
2025-09-17T00:39:55.343655Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:55.343711Z	        
2025-09-17T00:39:55.343778Z	    _id,
2025-09-17T00:39:55.34386Z	    _type,
2025-09-17T00:39:55.343925Z	    partNumber,
2025-09-17T00:39:55.343982Z	    "slug": slug.current,
2025-09-17T00:39:55.344054Z	    title,
2025-09-17T00:39:55.344123Z	    shortDescription,
2025-09-17T00:39:55.344191Z	    image,
2025-09-17T00:39:55.344337Z	    brand->{
2025-09-17T00:39:55.344429Z	      name,
2025-09-17T00:39:55.344517Z	      "slug": slug.current,
2025-09-17T00:39:55.344615Z	      logo
2025-09-17T00:39:55.344702Z	    },
2025-09-17T00:39:55.344785Z	    category->{
2025-09-17T00:39:55.344865Z	      name,
2025-09-17T00:39:55.34496Z	      "slug": slug.current
2025-09-17T00:39:55.34505Z	    },
2025-09-17T00:39:55.345139Z	    pricing{
2025-09-17T00:39:55.345233Z	      currency,
2025-09-17T00:39:55.345339Z	      tiers[]{
2025-09-17T00:39:55.34542Z	        quantity,
2025-09-17T00:39:55.345498Z	        price,
2025-09-17T00:39:55.345574Z	        unit
2025-09-17T00:39:55.345649Z	      },
2025-09-17T00:39:55.345727Z	      moq,
2025-09-17T00:39:55.345856Z	      leadTime,
2025-09-17T00:39:55.346041Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:55.346204Z	      "price": tiers[0].price,
2025-09-17T00:39:55.346352Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:55.346462Z	    },
2025-09-17T00:39:55.346565Z	    inventory{
2025-09-17T00:39:55.346857Z	      quantity,
2025-09-17T00:39:55.347085Z	      status,
2025-09-17T00:39:55.347182Z	      warehouse,
2025-09-17T00:39:55.347252Z	      lastUpdated,
2025-09-17T00:39:55.347364Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:55.347436Z	      "inStock": status == "in_stock",
2025-09-17T00:39:55.347498Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:55.347555Z	    },
2025-09-17T00:39:55.347961Z	    isActive,
2025-09-17T00:39:55.348048Z	    isFeatured,
2025-09-17T00:39:55.348105Z	    isNew,
2025-09-17T00:39:55.348163Z	    _createdAt,
2025-09-17T00:39:55.34822Z	    _updatedAt
2025-09-17T00:39:55.387425Z	  
2025-09-17T00:39:55.388213Z	      },
2025-09-17T00:39:55.388736Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-17T00:39:55.389197Z	    }
2025-09-17T00:39:55.389361Z	  
2025-09-17T00:39:55.389503Z	Query parameters: {
2025-09-17T00:39:55.389693Z	  limit: 8,
2025-09-17T00:39:55.389925Z	  offset: 0,
2025-09-17T00:39:55.390114Z	  category: undefined,
2025-09-17T00:39:55.390255Z	  brand: 'semikron',
2025-09-17T00:39:55.390378Z	  featured: undefined
2025-09-17T00:39:55.390568Z	}
2025-09-17T00:39:55.390754Z	Fetching solutions with query: 
2025-09-17T00:39:55.390893Z	    {
2025-09-17T00:39:55.391157Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:55.391426Z	        
2025-09-17T00:39:55.391539Z	    _id,
2025-09-17T00:39:55.392004Z	    title,
2025-09-17T00:39:55.392156Z	    "slug": slug.current,
2025-09-17T00:39:55.392536Z	    summary,
2025-09-17T00:39:55.392661Z	    description,
2025-09-17T00:39:55.392779Z	    coverImage,
2025-09-17T00:39:55.392918Z	    primaryBrand->{
2025-09-17T00:39:55.39302Z	      _id,
2025-09-17T00:39:55.393118Z	      name,
2025-09-17T00:39:55.393211Z	      "slug": slug.current,
2025-09-17T00:39:55.393358Z	      logo
2025-09-17T00:39:55.393465Z	    },
2025-09-17T00:39:55.393559Z	    relatedBrands[]->{
2025-09-17T00:39:55.393646Z	      _id,
2025-09-17T00:39:55.393749Z	      name,
2025-09-17T00:39:55.393882Z	      "slug": slug.current,
2025-09-17T00:39:55.393979Z	      logo
2025-09-17T00:39:55.394074Z	    },
2025-09-17T00:39:55.394175Z	    targetMarket,
2025-09-17T00:39:55.394284Z	    complexity,
2025-09-17T00:39:55.394393Z	    publishedAt,
2025-09-17T00:39:55.394493Z	    isPublished,
2025-09-17T00:39:55.394587Z	    isFeatured,
2025-09-17T00:39:55.394682Z	    viewCount,
2025-09-17T00:39:55.394781Z	    _createdAt,
2025-09-17T00:39:55.39487Z	    _updatedAt
2025-09-17T00:39:55.394963Z	  
2025-09-17T00:39:55.395058Z	      },
2025-09-17T00:39:55.39515Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-17T00:39:55.395248Z	    }
2025-09-17T00:39:55.395366Z	  
2025-09-17T00:39:55.395492Z	Query parameters: {
2025-09-17T00:39:55.395592Z	  limit: 4,
2025-09-17T00:39:55.395682Z	  offset: 0,
2025-09-17T00:39:55.3958Z	  targetMarket: undefined,
2025-09-17T00:39:55.395889Z	  brand: 'semikron',
2025-09-17T00:39:55.39651Z	  featured: undefined
2025-09-17T00:39:55.396651Z	}
2025-09-17T00:39:55.396772Z	✅ [getBrandData] Found brand: Semikron
2025-09-17T00:39:55.396884Z	Products fetch result: {
2025-09-17T00:39:55.396982Z	  totalProducts: 1,
2025-09-17T00:39:55.397077Z	  fetchedProducts: 1,
2025-09-17T00:39:55.397181Z	  firstProduct: {
2025-09-17T00:39:55.398Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-17T00:39:55.398155Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-17T00:39:55.398607Z	    _type: 'product',
2025-09-17T00:39:55.398732Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-17T00:39:55.398832Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-17T00:39:55.398941Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:55.399063Z	    image: null,
2025-09-17T00:39:55.399189Z	    inventory: {
2025-09-17T00:39:55.39933Z	      inStock: true,
2025-09-17T00:39:55.399435Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-17T00:39:55.39953Z	      quantity: 0,
2025-09-17T00:39:55.399651Z	      status: 'in_stock',
2025-09-17T00:39:55.399779Z	      warehouse: null
2025-09-17T00:39:55.399887Z	    },
2025-09-17T00:39:55.399993Z	    isActive: true,
2025-09-17T00:39:55.400105Z	    isFeatured: false,
2025-09-17T00:39:55.400214Z	    isNew: false,
2025-09-17T00:39:55.400336Z	    partNumber: 'SKKT106/16E',
2025-09-17T00:39:55.400442Z	    pricing: {
2025-09-17T00:39:55.400543Z	      currency: 'CNY',
2025-09-17T00:39:55.400645Z	      leadTime: null,
2025-09-17T00:39:55.400761Z	      moq: null,
2025-09-17T00:39:55.400867Z	      price: null,
2025-09-17T00:39:55.400977Z	      tiers: null
2025-09-17T00:39:55.401092Z	    },
2025-09-17T00:39:55.401192Z	    shortDescription: 'SKKT106/16E',
2025-09-17T00:39:55.401311Z	    slug: 'SKKT106/16E',
2025-09-17T00:39:55.401418Z	    title: 'SKKT106/16E'
2025-09-17T00:39:55.401555Z	  }
2025-09-17T00:39:55.401673Z	}
2025-09-17T00:39:55.401781Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:55.401882Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:55.401993Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:55.402098Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-17T00:39:55.402208Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:39:55.402349Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619) {
2025-09-17T00:39:55.40246Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:39:55.402556Z	}
2025-09-17T00:39:55.402669Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:55.402782Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:55.402902Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-17T00:39:55.40301Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:39:55.403123Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619) {
2025-09-17T00:39:55.403231Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:39:55.403364Z	}
2025-09-17T00:39:55.403482Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-17T00:39:55.403606Z	Fetching products with query: 
2025-09-17T00:39:55.403733Z	    {
2025-09-17T00:39:55.403844Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:55.403952Z	        
2025-09-17T00:39:55.404055Z	    _id,
2025-09-17T00:39:55.40416Z	    _type,
2025-09-17T00:39:55.404281Z	    partNumber,
2025-09-17T00:39:55.404398Z	    "slug": slug.current,
2025-09-17T00:39:55.404504Z	    title,
2025-09-17T00:39:55.404616Z	    shortDescription,
2025-09-17T00:39:55.404727Z	    image,
2025-09-17T00:39:55.404822Z	    brand->{
2025-09-17T00:39:55.404929Z	      name,
2025-09-17T00:39:55.405329Z	      "slug": slug.current,
2025-09-17T00:39:55.405739Z	      logo
2025-09-17T00:39:55.406015Z	    },
2025-09-17T00:39:55.40633Z	    category->{
2025-09-17T00:39:55.406677Z	      name,
2025-09-17T00:39:55.406829Z	      "slug": slug.current
2025-09-17T00:39:55.40715Z	    },
2025-09-17T00:39:55.40747Z	    pricing{
2025-09-17T00:39:55.407645Z	      currency,
2025-09-17T00:39:55.407821Z	      tiers[]{
2025-09-17T00:39:55.40799Z	        quantity,
2025-09-17T00:39:55.408144Z	        price,
2025-09-17T00:39:55.408304Z	        unit
2025-09-17T00:39:55.408457Z	      },
2025-09-17T00:39:55.408612Z	      moq,
2025-09-17T00:39:55.408786Z	      leadTime,
2025-09-17T00:39:55.411398Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:55.411759Z	      "price": tiers[0].price,
2025-09-17T00:39:55.412035Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:55.412336Z	    },
2025-09-17T00:39:55.41255Z	    inventory{
2025-09-17T00:39:55.41274Z	      quantity,
2025-09-17T00:39:55.413317Z	      status,
2025-09-17T00:39:55.413464Z	      warehouse,
2025-09-17T00:39:55.41356Z	      lastUpdated,
2025-09-17T00:39:55.413796Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:55.413946Z	      "inStock": status == "in_stock",
2025-09-17T00:39:55.41409Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:55.414201Z	    },
2025-09-17T00:39:55.414319Z	    isActive,
2025-09-17T00:39:55.414427Z	    isFeatured,
2025-09-17T00:39:55.414528Z	    isNew,
2025-09-17T00:39:55.414638Z	    _createdAt,
2025-09-17T00:39:55.414746Z	    _updatedAt
2025-09-17T00:39:55.414852Z	  
2025-09-17T00:39:55.414991Z	      },
2025-09-17T00:39:55.415104Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-17T00:39:55.415212Z	    }
2025-09-17T00:39:55.415334Z	  
2025-09-17T00:39:55.415441Z	Query parameters: {
2025-09-17T00:39:55.415551Z	  limit: 8,
2025-09-17T00:39:55.415658Z	  offset: 0,
2025-09-17T00:39:55.415801Z	  category: undefined,
2025-09-17T00:39:55.416257Z	  brand: 'semikron',
2025-09-17T00:39:55.41644Z	  featured: undefined
2025-09-17T00:39:55.416686Z	}
2025-09-17T00:39:55.416874Z	Fetching solutions with query: 
2025-09-17T00:39:55.417251Z	    {
2025-09-17T00:39:55.418072Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:55.418248Z	        
2025-09-17T00:39:55.418421Z	    _id,
2025-09-17T00:39:55.418555Z	    title,
2025-09-17T00:39:55.418675Z	    "slug": slug.current,
2025-09-17T00:39:55.419517Z	    summary,
2025-09-17T00:39:55.419662Z	    description,
2025-09-17T00:39:55.419773Z	    coverImage,
2025-09-17T00:39:55.419885Z	    primaryBrand->{
2025-09-17T00:39:55.419999Z	      _id,
2025-09-17T00:39:55.420101Z	      name,
2025-09-17T00:39:55.420401Z	      "slug": slug.current,
2025-09-17T00:39:55.420636Z	      logo
2025-09-17T00:39:55.427625Z	    },
2025-09-17T00:39:55.428057Z	    relatedBrands[]->{
2025-09-17T00:39:55.428431Z	      _id,
2025-09-17T00:39:55.428775Z	      name,
2025-09-17T00:39:55.429126Z	      "slug": slug.current,
2025-09-17T00:39:55.429509Z	      logo
2025-09-17T00:39:55.429645Z	    },
2025-09-17T00:39:55.430013Z	    targetMarket,
2025-09-17T00:39:55.430354Z	    complexity,
2025-09-17T00:39:55.430686Z	    publishedAt,
2025-09-17T00:39:55.431022Z	    isPublished,
2025-09-17T00:39:55.431366Z	    isFeatured,
2025-09-17T00:39:55.431717Z	    viewCount,
2025-09-17T00:39:55.432068Z	    _createdAt,
2025-09-17T00:39:55.432402Z	    _updatedAt
2025-09-17T00:39:55.432542Z	  
2025-09-17T00:39:55.432662Z	      },
2025-09-17T00:39:55.432781Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-17T00:39:55.433157Z	    }
2025-09-17T00:39:55.433314Z	  
2025-09-17T00:39:55.433435Z	Query parameters: {
2025-09-17T00:39:55.433783Z	  limit: 4,
2025-09-17T00:39:55.433901Z	  offset: 0,
2025-09-17T00:39:55.434017Z	  targetMarket: undefined,
2025-09-17T00:39:55.434122Z	  brand: 'semikron',
2025-09-17T00:39:55.434213Z	  featured: undefined
2025-09-17T00:39:55.434368Z	}
2025-09-17T00:39:55.434534Z	✅ [getBrandData] Found brand: Semikron
2025-09-17T00:39:55.434698Z	Products fetch result: {
2025-09-17T00:39:55.435091Z	  totalProducts: 1,
2025-09-17T00:39:55.435211Z	  fetchedProducts: 1,
2025-09-17T00:39:55.435342Z	  firstProduct: {
2025-09-17T00:39:55.435445Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-17T00:39:55.435532Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-17T00:39:55.435618Z	    _type: 'product',
2025-09-17T00:39:55.436599Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-17T00:39:55.436745Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-17T00:39:55.436861Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:55.436953Z	    image: null,
2025-09-17T00:39:55.437038Z	    inventory: {
2025-09-17T00:39:55.437122Z	      inStock: true,
2025-09-17T00:39:55.437203Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-17T00:39:55.437307Z	      quantity: 0,
2025-09-17T00:39:55.437404Z	      status: 'in_stock',
2025-09-17T00:39:55.437499Z	      warehouse: null
2025-09-17T00:39:55.437611Z	    },
2025-09-17T00:39:55.437734Z	    isActive: true,
2025-09-17T00:39:55.437838Z	    isFeatured: false,
2025-09-17T00:39:55.437934Z	    isNew: false,
2025-09-17T00:39:55.438101Z	    partNumber: 'SKKT106/16E',
2025-09-17T00:39:55.438206Z	    pricing: {
2025-09-17T00:39:55.438341Z	      currency: 'CNY',
2025-09-17T00:39:55.438459Z	      leadTime: null,
2025-09-17T00:39:55.438571Z	      moq: null,
2025-09-17T00:39:55.438688Z	      price: null,
2025-09-17T00:39:55.438793Z	      tiers: null
2025-09-17T00:39:55.438893Z	    },
2025-09-17T00:39:55.438979Z	    shortDescription: 'SKKT106/16E',
2025-09-17T00:39:55.439063Z	    slug: 'SKKT106/16E',
2025-09-17T00:39:55.439155Z	    title: 'SKKT106/16E'
2025-09-17T00:39:55.439255Z	  }
2025-09-17T00:39:55.439389Z	}
2025-09-17T00:39:55.439504Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:55.439611Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:55.439742Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:55.439852Z	✅ [getBrandData] Found brand: Sanrex
2025-09-17T00:39:55.439959Z	✅ [getBrandData] Found brand: Sanrex
2025-09-17T00:39:55.440059Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:55.440161Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:55.440258Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-17T00:39:55.487488Z	Fetching products with query: 
2025-09-17T00:39:55.488118Z	    {
2025-09-17T00:39:55.48837Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:55.488548Z	        
2025-09-17T00:39:55.488661Z	    _id,
2025-09-17T00:39:55.488765Z	    _type,
2025-09-17T00:39:55.488862Z	    partNumber,
2025-09-17T00:39:55.488952Z	    "slug": slug.current,
2025-09-17T00:39:55.489066Z	    title,
2025-09-17T00:39:55.489164Z	    shortDescription,
2025-09-17T00:39:55.489253Z	    image,
2025-09-17T00:39:55.489372Z	    brand->{
2025-09-17T00:39:55.489563Z	      name,
2025-09-17T00:39:55.48969Z	      "slug": slug.current,
2025-09-17T00:39:55.489788Z	      logo
2025-09-17T00:39:55.48989Z	    },
2025-09-17T00:39:55.490029Z	    category->{
2025-09-17T00:39:55.490133Z	      name,
2025-09-17T00:39:55.490224Z	      "slug": slug.current
2025-09-17T00:39:55.49037Z	    },
2025-09-17T00:39:55.49046Z	    pricing{
2025-09-17T00:39:55.490549Z	      currency,
2025-09-17T00:39:55.490634Z	      tiers[]{
2025-09-17T00:39:55.490737Z	        quantity,
2025-09-17T00:39:55.49083Z	        price,
2025-09-17T00:39:55.490916Z	        unit
2025-09-17T00:39:55.491005Z	      },
2025-09-17T00:39:55.491105Z	      moq,
2025-09-17T00:39:55.491197Z	      leadTime,
2025-09-17T00:39:55.491302Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:55.491396Z	      "price": tiers[0].price,
2025-09-17T00:39:55.491483Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:55.491571Z	    },
2025-09-17T00:39:55.491693Z	    inventory{
2025-09-17T00:39:55.491786Z	      quantity,
2025-09-17T00:39:55.491882Z	      status,
2025-09-17T00:39:55.491977Z	      warehouse,
2025-09-17T00:39:55.492062Z	      lastUpdated,
2025-09-17T00:39:55.492316Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:55.492448Z	      "inStock": status == "in_stock",
2025-09-17T00:39:55.492578Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:55.492688Z	    },
2025-09-17T00:39:55.492783Z	    isActive,
2025-09-17T00:39:55.492935Z	    isFeatured,
2025-09-17T00:39:55.493036Z	    isNew,
2025-09-17T00:39:55.493131Z	    _createdAt,
2025-09-17T00:39:55.493227Z	    _updatedAt
2025-09-17T00:39:55.493366Z	  
2025-09-17T00:39:55.493463Z	      },
2025-09-17T00:39:55.493547Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-17T00:39:55.493639Z	    }
2025-09-17T00:39:55.493756Z	  
2025-09-17T00:39:55.493849Z	Query parameters: {
2025-09-17T00:39:55.493947Z	  limit: 8,
2025-09-17T00:39:55.494046Z	  offset: 0,
2025-09-17T00:39:55.494154Z	  category: undefined,
2025-09-17T00:39:55.494323Z	  brand: 'ncc',
2025-09-17T00:39:55.494555Z	  featured: undefined
2025-09-17T00:39:55.494674Z	}
2025-09-17T00:39:55.49478Z	Fetching solutions with query: 
2025-09-17T00:39:55.494879Z	    {
2025-09-17T00:39:55.494984Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:55.495087Z	        
2025-09-17T00:39:55.495189Z	    _id,
2025-09-17T00:39:55.495312Z	    title,
2025-09-17T00:39:55.495411Z	    "slug": slug.current,
2025-09-17T00:39:55.495534Z	    summary,
2025-09-17T00:39:55.495698Z	    description,
2025-09-17T00:39:55.495805Z	    coverImage,
2025-09-17T00:39:55.495946Z	    primaryBrand->{
2025-09-17T00:39:55.496062Z	      _id,
2025-09-17T00:39:55.496213Z	      name,
2025-09-17T00:39:55.49634Z	      "slug": slug.current,
2025-09-17T00:39:55.496455Z	      logo
2025-09-17T00:39:55.496569Z	    },
2025-09-17T00:39:55.496744Z	    relatedBrands[]->{
2025-09-17T00:39:55.496904Z	      _id,
2025-09-17T00:39:55.497045Z	      name,
2025-09-17T00:39:55.497145Z	      "slug": slug.current,
2025-09-17T00:39:55.497234Z	      logo
2025-09-17T00:39:55.497356Z	    },
2025-09-17T00:39:55.497568Z	    targetMarket,
2025-09-17T00:39:55.497688Z	    complexity,
2025-09-17T00:39:55.497842Z	    publishedAt,
2025-09-17T00:39:55.498033Z	    isPublished,
2025-09-17T00:39:55.498169Z	    isFeatured,
2025-09-17T00:39:55.498295Z	    viewCount,
2025-09-17T00:39:55.498406Z	    _createdAt,
2025-09-17T00:39:55.498528Z	    _updatedAt
2025-09-17T00:39:55.498631Z	  
2025-09-17T00:39:55.498739Z	      },
2025-09-17T00:39:55.498834Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-17T00:39:55.498937Z	    }
2025-09-17T00:39:55.499051Z	  
2025-09-17T00:39:55.499167Z	Query parameters: {
2025-09-17T00:39:55.499287Z	  limit: 4,
2025-09-17T00:39:55.499401Z	  offset: 0,
2025-09-17T00:39:55.499498Z	  targetMarket: undefined,
2025-09-17T00:39:55.499601Z	  brand: 'ncc',
2025-09-17T00:39:55.49971Z	  featured: undefined
2025-09-17T00:39:55.499815Z	}
2025-09-17T00:39:55.499919Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-17T00:39:55.500029Z	Fetching products with query: 
2025-09-17T00:39:55.500141Z	    {
2025-09-17T00:39:55.500243Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:55.500381Z	        
2025-09-17T00:39:55.500484Z	    _id,
2025-09-17T00:39:55.500597Z	    _type,
2025-09-17T00:39:55.500709Z	    partNumber,
2025-09-17T00:39:55.500824Z	    "slug": slug.current,
2025-09-17T00:39:55.500939Z	    title,
2025-09-17T00:39:55.501044Z	    shortDescription,
2025-09-17T00:39:55.501144Z	    image,
2025-09-17T00:39:55.501245Z	    brand->{
2025-09-17T00:39:55.501357Z	      name,
2025-09-17T00:39:55.501442Z	      "slug": slug.current,
2025-09-17T00:39:55.501525Z	      logo
2025-09-17T00:39:55.501606Z	    },
2025-09-17T00:39:55.50167Z	    category->{
2025-09-17T00:39:55.501727Z	      name,
2025-09-17T00:39:55.501788Z	      "slug": slug.current
2025-09-17T00:39:55.501872Z	    },
2025-09-17T00:39:55.501954Z	    pricing{
2025-09-17T00:39:55.502061Z	      currency,
2025-09-17T00:39:55.502152Z	      tiers[]{
2025-09-17T00:39:55.502237Z	        quantity,
2025-09-17T00:39:55.502351Z	        price,
2025-09-17T00:39:55.502451Z	        unit
2025-09-17T00:39:55.502543Z	      },
2025-09-17T00:39:55.502646Z	      moq,
2025-09-17T00:39:55.50276Z	      leadTime,
2025-09-17T00:39:55.502854Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:55.502948Z	      "price": tiers[0].price,
2025-09-17T00:39:55.503051Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:55.503143Z	    },
2025-09-17T00:39:55.503239Z	    inventory{
2025-09-17T00:39:55.503347Z	      quantity,
2025-09-17T00:39:55.503442Z	      status,
2025-09-17T00:39:55.503533Z	      warehouse,
2025-09-17T00:39:55.503627Z	      lastUpdated,
2025-09-17T00:39:55.503724Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:55.503851Z	      "inStock": status == "in_stock",
2025-09-17T00:39:55.503952Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:55.504048Z	    },
2025-09-17T00:39:55.504146Z	    isActive,
2025-09-17T00:39:55.504249Z	    isFeatured,
2025-09-17T00:39:55.504357Z	    isNew,
2025-09-17T00:39:55.504443Z	    _createdAt,
2025-09-17T00:39:55.504566Z	    _updatedAt
2025-09-17T00:39:55.504691Z	  
2025-09-17T00:39:55.504791Z	      },
2025-09-17T00:39:55.504884Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-17T00:39:55.505001Z	    }
2025-09-17T00:39:55.505104Z	  
2025-09-17T00:39:55.505202Z	Query parameters: {
2025-09-17T00:39:55.505309Z	  limit: 8,
2025-09-17T00:39:55.505409Z	  offset: 0,
2025-09-17T00:39:55.505502Z	  category: undefined,
2025-09-17T00:39:55.505802Z	  brand: 'ncc',
2025-09-17T00:39:55.505928Z	  featured: undefined
2025-09-17T00:39:55.506035Z	}
2025-09-17T00:39:55.506135Z	Fetching solutions with query: 
2025-09-17T00:39:55.506234Z	    {
2025-09-17T00:39:55.50637Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:55.506478Z	        
2025-09-17T00:39:55.506579Z	    _id,
2025-09-17T00:39:55.506692Z	    title,
2025-09-17T00:39:55.506789Z	    "slug": slug.current,
2025-09-17T00:39:55.506885Z	    summary,
2025-09-17T00:39:55.506994Z	    description,
2025-09-17T00:39:55.507095Z	    coverImage,
2025-09-17T00:39:55.507199Z	    primaryBrand->{
2025-09-17T00:39:55.507312Z	      _id,
2025-09-17T00:39:55.507408Z	      name,
2025-09-17T00:39:55.507508Z	      "slug": slug.current,
2025-09-17T00:39:55.507599Z	      logo
2025-09-17T00:39:55.507706Z	    },
2025-09-17T00:39:55.507799Z	    relatedBrands[]->{
2025-09-17T00:39:55.507888Z	      _id,
2025-09-17T00:39:55.507975Z	      name,
2025-09-17T00:39:55.508061Z	      "slug": slug.current,
2025-09-17T00:39:55.508151Z	      logo
2025-09-17T00:39:55.508239Z	    },
2025-09-17T00:39:55.508349Z	    targetMarket,
2025-09-17T00:39:55.50844Z	    complexity,
2025-09-17T00:39:55.50853Z	    publishedAt,
2025-09-17T00:39:55.50862Z	    isPublished,
2025-09-17T00:39:55.508726Z	    isFeatured,
2025-09-17T00:39:55.508818Z	    viewCount,
2025-09-17T00:39:55.508903Z	    _createdAt,
2025-09-17T00:39:55.508986Z	    _updatedAt
2025-09-17T00:39:55.509084Z	  
2025-09-17T00:39:55.50917Z	      },
2025-09-17T00:39:55.509251Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-17T00:39:55.509366Z	    }
2025-09-17T00:39:55.50946Z	  
2025-09-17T00:39:55.509568Z	Query parameters: {
2025-09-17T00:39:55.509669Z	  limit: 4,
2025-09-17T00:39:55.509759Z	  offset: 0,
2025-09-17T00:39:55.509854Z	  targetMarket: undefined,
2025-09-17T00:39:55.509945Z	  brand: 'ncc',
2025-09-17T00:39:55.510036Z	  featured: undefined
2025-09-17T00:39:55.510149Z	}
2025-09-17T00:39:55.51025Z	✅ [getBrandData] Found brand: ncc
2025-09-17T00:39:55.514888Z	✅ [getBrandData] Found brand: ncc
2025-09-17T00:39:55.5155Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:55.516165Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:55.517843Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:55.518153Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:55.518484Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-17T00:39:55.518869Z	Fetching products with query: 
2025-09-17T00:39:55.519002Z	    {
2025-09-17T00:39:55.519122Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:55.519253Z	        
2025-09-17T00:39:55.52007Z	    _id,
2025-09-17T00:39:55.520432Z	    _type,
2025-09-17T00:39:55.52062Z	    partNumber,
2025-09-17T00:39:55.520788Z	    "slug": slug.current,
2025-09-17T00:39:55.52235Z	    title,
2025-09-17T00:39:55.522512Z	    shortDescription,
2025-09-17T00:39:55.522626Z	    image,
2025-09-17T00:39:55.522731Z	    brand->{
2025-09-17T00:39:55.522836Z	      name,
2025-09-17T00:39:55.522953Z	      "slug": slug.current,
2025-09-17T00:39:55.523052Z	      logo
2025-09-17T00:39:55.523147Z	    },
2025-09-17T00:39:55.523239Z	    category->{
2025-09-17T00:39:55.523356Z	      name,
2025-09-17T00:39:55.525682Z	      "slug": slug.current
2025-09-17T00:39:55.525849Z	    },
2025-09-17T00:39:55.525968Z	    pricing{
2025-09-17T00:39:55.526303Z	      currency,
2025-09-17T00:39:55.526446Z	      tiers[]{
2025-09-17T00:39:55.526555Z	        quantity,
2025-09-17T00:39:55.526656Z	        price,
2025-09-17T00:39:55.526773Z	        unit
2025-09-17T00:39:55.527064Z	      },
2025-09-17T00:39:55.527309Z	      moq,
2025-09-17T00:39:55.527445Z	      leadTime,
2025-09-17T00:39:55.527556Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:55.527666Z	      "price": tiers[0].price,
2025-09-17T00:39:55.527801Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:55.527961Z	    },
2025-09-17T00:39:55.528344Z	    inventory{
2025-09-17T00:39:55.528497Z	      quantity,
2025-09-17T00:39:55.528623Z	      status,
2025-09-17T00:39:55.528749Z	      warehouse,
2025-09-17T00:39:55.529125Z	      lastUpdated,
2025-09-17T00:39:55.529243Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:55.529745Z	      "inStock": status == "in_stock",
2025-09-17T00:39:55.529841Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:55.529915Z	    },
2025-09-17T00:39:55.529986Z	    isActive,
2025-09-17T00:39:55.530071Z	    isFeatured,
2025-09-17T00:39:55.530143Z	    isNew,
2025-09-17T00:39:55.530212Z	    _createdAt,
2025-09-17T00:39:55.53055Z	    _updatedAt
2025-09-17T00:39:55.530855Z	  
2025-09-17T00:39:55.531111Z	      },
2025-09-17T00:39:55.531413Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-17T00:39:55.531504Z	    }
2025-09-17T00:39:55.531789Z	  
2025-09-17T00:39:55.532112Z	Query parameters: {
2025-09-17T00:39:55.532291Z	  limit: 8,
2025-09-17T00:39:55.532477Z	  offset: 0,
2025-09-17T00:39:55.532721Z	  category: undefined,
2025-09-17T00:39:55.532902Z	  brand: '英飞凌',
2025-09-17T00:39:55.533202Z	  featured: undefined
2025-09-17T00:39:55.533589Z	}
2025-09-17T00:39:55.533776Z	Fetching solutions with query: 
2025-09-17T00:39:55.533902Z	    {
2025-09-17T00:39:55.533971Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:55.534122Z	        
2025-09-17T00:39:55.534228Z	    _id,
2025-09-17T00:39:55.534365Z	    title,
2025-09-17T00:39:55.534494Z	    "slug": slug.current,
2025-09-17T00:39:55.534618Z	    summary,
2025-09-17T00:39:55.534765Z	    description,
2025-09-17T00:39:55.534924Z	    coverImage,
2025-09-17T00:39:55.535204Z	    primaryBrand->{
2025-09-17T00:39:55.535493Z	      _id,
2025-09-17T00:39:55.535635Z	      name,
2025-09-17T00:39:55.535747Z	      "slug": slug.current,
2025-09-17T00:39:55.53585Z	      logo
2025-09-17T00:39:55.535944Z	    },
2025-09-17T00:39:55.536044Z	    relatedBrands[]->{
2025-09-17T00:39:55.536151Z	      _id,
2025-09-17T00:39:55.536264Z	      name,
2025-09-17T00:39:55.536389Z	      "slug": slug.current,
2025-09-17T00:39:55.536492Z	      logo
2025-09-17T00:39:55.53659Z	    },
2025-09-17T00:39:55.536688Z	    targetMarket,
2025-09-17T00:39:55.53678Z	    complexity,
2025-09-17T00:39:55.536873Z	    publishedAt,
2025-09-17T00:39:55.536964Z	    isPublished,
2025-09-17T00:39:55.537076Z	    isFeatured,
2025-09-17T00:39:55.537173Z	    viewCount,
2025-09-17T00:39:55.537283Z	    _createdAt,
2025-09-17T00:39:55.537392Z	    _updatedAt
2025-09-17T00:39:55.537494Z	  
2025-09-17T00:39:55.537607Z	      },
2025-09-17T00:39:55.537704Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-17T00:39:55.537806Z	    }
2025-09-17T00:39:55.537916Z	  
2025-09-17T00:39:55.538021Z	Query parameters: {
2025-09-17T00:39:55.538126Z	  limit: 4,
2025-09-17T00:39:55.538227Z	  offset: 0,
2025-09-17T00:39:55.538356Z	  targetMarket: undefined,
2025-09-17T00:39:55.538476Z	  brand: '英飞凌',
2025-09-17T00:39:55.538583Z	  featured: undefined
2025-09-17T00:39:55.538679Z	}
2025-09-17T00:39:55.538793Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-17T00:39:55.538899Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:55.539009Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:55.539102Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-17T00:39:55.539204Z	Fetching products with query: 
2025-09-17T00:39:55.539311Z	    {
2025-09-17T00:39:55.539418Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:55.539526Z	        
2025-09-17T00:39:55.539617Z	    _id,
2025-09-17T00:39:55.539708Z	    _type,
2025-09-17T00:39:55.539802Z	    partNumber,
2025-09-17T00:39:55.5399Z	    "slug": slug.current,
2025-09-17T00:39:55.540026Z	    title,
2025-09-17T00:39:55.540128Z	    shortDescription,
2025-09-17T00:39:55.540216Z	    image,
2025-09-17T00:39:55.540346Z	    brand->{
2025-09-17T00:39:55.540444Z	      name,
2025-09-17T00:39:55.540532Z	      "slug": slug.current,
2025-09-17T00:39:55.540622Z	      logo
2025-09-17T00:39:55.540706Z	    },
2025-09-17T00:39:55.540792Z	    category->{
2025-09-17T00:39:55.540884Z	      name,
2025-09-17T00:39:55.540976Z	      "slug": slug.current
2025-09-17T00:39:55.54107Z	    },
2025-09-17T00:39:55.541154Z	    pricing{
2025-09-17T00:39:55.541236Z	      currency,
2025-09-17T00:39:55.541353Z	      tiers[]{
2025-09-17T00:39:55.541448Z	        quantity,
2025-09-17T00:39:55.541539Z	        price,
2025-09-17T00:39:55.541624Z	        unit
2025-09-17T00:39:55.541708Z	      },
2025-09-17T00:39:55.541792Z	      moq,
2025-09-17T00:39:55.541873Z	      leadTime,
2025-09-17T00:39:55.541956Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:55.542172Z	      "price": tiers[0].price,
2025-09-17T00:39:55.542321Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:55.542444Z	    },
2025-09-17T00:39:55.542555Z	    inventory{
2025-09-17T00:39:55.542659Z	      quantity,
2025-09-17T00:39:55.542765Z	      status,
2025-09-17T00:39:55.542882Z	      warehouse,
2025-09-17T00:39:55.542996Z	      lastUpdated,
2025-09-17T00:39:55.543154Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:55.543413Z	      "inStock": status == "in_stock",
2025-09-17T00:39:55.543528Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:55.54371Z	    },
2025-09-17T00:39:55.543774Z	    isActive,
2025-09-17T00:39:55.543896Z	    isFeatured,
2025-09-17T00:39:55.543968Z	    isNew,
2025-09-17T00:39:55.544025Z	    _createdAt,
2025-09-17T00:39:55.544081Z	    _updatedAt
2025-09-17T00:39:55.544151Z	  
2025-09-17T00:39:55.54421Z	      },
2025-09-17T00:39:55.587355Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-17T00:39:55.587757Z	    }
2025-09-17T00:39:55.587935Z	  
2025-09-17T00:39:55.588042Z	Query parameters: {
2025-09-17T00:39:55.588144Z	  limit: 8,
2025-09-17T00:39:55.588296Z	  offset: 0,
2025-09-17T00:39:55.588387Z	  category: undefined,
2025-09-17T00:39:55.588664Z	  brand: '英飞凌',
2025-09-17T00:39:55.588806Z	  featured: undefined
2025-09-17T00:39:55.589057Z	}
2025-09-17T00:39:55.589188Z	Fetching solutions with query: 
2025-09-17T00:39:55.589418Z	    {
2025-09-17T00:39:55.589616Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:55.589783Z	        
2025-09-17T00:39:55.589945Z	    _id,
2025-09-17T00:39:55.590086Z	    title,
2025-09-17T00:39:55.590157Z	    "slug": slug.current,
2025-09-17T00:39:55.590288Z	    summary,
2025-09-17T00:39:55.590378Z	    description,
2025-09-17T00:39:55.590725Z	    coverImage,
2025-09-17T00:39:55.590799Z	    primaryBrand->{
2025-09-17T00:39:55.59086Z	      _id,
2025-09-17T00:39:55.591047Z	      name,
2025-09-17T00:39:55.591127Z	      "slug": slug.current,
2025-09-17T00:39:55.59131Z	      logo
2025-09-17T00:39:55.591482Z	    },
2025-09-17T00:39:55.591755Z	    relatedBrands[]->{
2025-09-17T00:39:55.591993Z	      _id,
2025-09-17T00:39:55.592199Z	      name,
2025-09-17T00:39:55.592449Z	      "slug": slug.current,
2025-09-17T00:39:55.59255Z	      logo
2025-09-17T00:39:55.592612Z	    },
2025-09-17T00:39:55.592836Z	    targetMarket,
2025-09-17T00:39:55.592912Z	    complexity,
2025-09-17T00:39:55.593067Z	    publishedAt,
2025-09-17T00:39:55.593311Z	    isPublished,
2025-09-17T00:39:55.593591Z	    isFeatured,
2025-09-17T00:39:55.593838Z	    viewCount,
2025-09-17T00:39:55.594072Z	    _createdAt,
2025-09-17T00:39:55.594316Z	    _updatedAt
2025-09-17T00:39:55.594401Z	  
2025-09-17T00:39:55.594626Z	      },
2025-09-17T00:39:55.594906Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-17T00:39:55.595161Z	    }
2025-09-17T00:39:55.595247Z	  
2025-09-17T00:39:55.595497Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-17T00:39:55.595629Z	Fetching products with query: 
2025-09-17T00:39:55.59596Z	    {
2025-09-17T00:39:55.59604Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:55.596151Z	        
2025-09-17T00:39:55.596531Z	    _id,
2025-09-17T00:39:55.596761Z	    _type,
2025-09-17T00:39:55.596953Z	    partNumber,
2025-09-17T00:39:55.597119Z	    "slug": slug.current,
2025-09-17T00:39:55.597321Z	    title,
2025-09-17T00:39:55.597401Z	    shortDescription,
2025-09-17T00:39:55.597545Z	    image,
2025-09-17T00:39:55.597637Z	    brand->{
2025-09-17T00:39:55.597882Z	      name,
2025-09-17T00:39:55.598074Z	      "slug": slug.current,
2025-09-17T00:39:55.598204Z	      logo
2025-09-17T00:39:55.598344Z	    },
2025-09-17T00:39:55.598448Z	    category->{
2025-09-17T00:39:55.598585Z	      name,
2025-09-17T00:39:55.59874Z	      "slug": slug.current
2025-09-17T00:39:55.598841Z	    },
2025-09-17T00:39:55.599155Z	    pricing{
2025-09-17T00:39:55.599232Z	      currency,
2025-09-17T00:39:55.599367Z	      tiers[]{
2025-09-17T00:39:55.599473Z	        quantity,
2025-09-17T00:39:55.599615Z	        price,
2025-09-17T00:39:55.599826Z	        unit
2025-09-17T00:39:55.600001Z	      },
2025-09-17T00:39:55.600162Z	      moq,
2025-09-17T00:39:55.600506Z	      leadTime,
2025-09-17T00:39:55.600671Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:55.600759Z	      "price": tiers[0].price,
2025-09-17T00:39:55.600884Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:55.600975Z	    },
2025-09-17T00:39:55.601091Z	    inventory{
2025-09-17T00:39:55.601206Z	      quantity,
2025-09-17T00:39:55.601357Z	      status,
2025-09-17T00:39:55.601481Z	      warehouse,
2025-09-17T00:39:55.601618Z	      lastUpdated,
2025-09-17T00:39:55.601772Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:55.601945Z	      "inStock": status == "in_stock",
2025-09-17T00:39:55.602056Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:55.602156Z	    },
2025-09-17T00:39:55.602362Z	    isActive,
2025-09-17T00:39:55.602543Z	    isFeatured,
2025-09-17T00:39:55.602809Z	    isNew,
2025-09-17T00:39:55.602891Z	    _createdAt,
2025-09-17T00:39:55.603117Z	    _updatedAt
2025-09-17T00:39:55.603224Z	  
2025-09-17T00:39:55.603654Z	      },
2025-09-17T00:39:55.603964Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-17T00:39:55.604239Z	    }
2025-09-17T00:39:55.60451Z	  
2025-09-17T00:39:55.604604Z	Query parameters: {
2025-09-17T00:39:55.604846Z	  limit: 8,
2025-09-17T00:39:55.604926Z	  offset: 0,
2025-09-17T00:39:55.605158Z	  category: undefined,
2025-09-17T00:39:55.605411Z	  brand: 'epcos',
2025-09-17T00:39:55.605509Z	  featured: undefined
2025-09-17T00:39:55.605753Z	}
2025-09-17T00:39:55.605994Z	Fetching solutions with query: 
2025-09-17T00:39:55.606229Z	    {
2025-09-17T00:39:55.606416Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:55.606589Z	        
2025-09-17T00:39:55.606693Z	    _id,
2025-09-17T00:39:55.606789Z	    title,
2025-09-17T00:39:55.606908Z	    "slug": slug.current,
2025-09-17T00:39:55.607016Z	    summary,
2025-09-17T00:39:55.607106Z	    description,
2025-09-17T00:39:55.607204Z	    coverImage,
2025-09-17T00:39:55.607334Z	    primaryBrand->{
2025-09-17T00:39:55.607443Z	      _id,
2025-09-17T00:39:55.607538Z	      name,
2025-09-17T00:39:55.60767Z	      "slug": slug.current,
2025-09-17T00:39:55.607805Z	      logo
2025-09-17T00:39:55.607925Z	    },
2025-09-17T00:39:55.608065Z	    relatedBrands[]->{
2025-09-17T00:39:55.608225Z	      _id,
2025-09-17T00:39:55.608395Z	      name,
2025-09-17T00:39:55.608519Z	      "slug": slug.current,
2025-09-17T00:39:55.608588Z	      logo
2025-09-17T00:39:55.608698Z	    },
2025-09-17T00:39:55.608825Z	    targetMarket,
2025-09-17T00:39:55.608956Z	    complexity,
2025-09-17T00:39:55.609026Z	    publishedAt,
2025-09-17T00:39:55.60916Z	    isPublished,
2025-09-17T00:39:55.609322Z	    isFeatured,
2025-09-17T00:39:55.609489Z	    viewCount,
2025-09-17T00:39:55.609641Z	    _createdAt,
2025-09-17T00:39:55.609753Z	    _updatedAt
2025-09-17T00:39:55.609856Z	  
2025-09-17T00:39:55.60996Z	      },
2025-09-17T00:39:55.610055Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-17T00:39:55.61016Z	    }
2025-09-17T00:39:55.610256Z	  
2025-09-17T00:39:55.610381Z	Query parameters: {
2025-09-17T00:39:55.610469Z	  limit: 4,
2025-09-17T00:39:55.610567Z	  offset: 0,
2025-09-17T00:39:55.610654Z	  targetMarket: undefined,
2025-09-17T00:39:55.61076Z	  brand: 'epcos',
2025-09-17T00:39:55.610847Z	  featured: undefined
2025-09-17T00:39:55.610972Z	}
2025-09-17T00:39:55.611078Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-17T00:39:55.611182Z	Fetching products with query: 
2025-09-17T00:39:55.611292Z	    {
2025-09-17T00:39:55.611389Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:55.611484Z	        
2025-09-17T00:39:55.61159Z	    _id,
2025-09-17T00:39:55.611694Z	    _type,
2025-09-17T00:39:55.611779Z	    partNumber,
2025-09-17T00:39:55.611879Z	    "slug": slug.current,
2025-09-17T00:39:55.611955Z	    title,
2025-09-17T00:39:55.61204Z	    shortDescription,
2025-09-17T00:39:55.612135Z	    image,
2025-09-17T00:39:55.612231Z	    brand->{
2025-09-17T00:39:55.612339Z	      name,
2025-09-17T00:39:55.612448Z	      "slug": slug.current,
2025-09-17T00:39:55.612567Z	      logo
2025-09-17T00:39:55.612677Z	    },
2025-09-17T00:39:55.612815Z	    category->{
2025-09-17T00:39:55.612932Z	      name,
2025-09-17T00:39:55.613053Z	      "slug": slug.current
2025-09-17T00:39:55.613157Z	    },
2025-09-17T00:39:55.613291Z	    pricing{
2025-09-17T00:39:55.613419Z	      currency,
2025-09-17T00:39:55.613571Z	      tiers[]{
2025-09-17T00:39:55.613709Z	        quantity,
2025-09-17T00:39:55.61387Z	        price,
2025-09-17T00:39:55.613972Z	        unit
2025-09-17T00:39:55.614085Z	      },
2025-09-17T00:39:55.614179Z	      moq,
2025-09-17T00:39:55.614292Z	      leadTime,
2025-09-17T00:39:55.614393Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:55.614488Z	      "price": tiers[0].price,
2025-09-17T00:39:55.614578Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:55.614653Z	    },
2025-09-17T00:39:55.614733Z	    inventory{
2025-09-17T00:39:55.614801Z	      quantity,
2025-09-17T00:39:55.614901Z	      status,
2025-09-17T00:39:55.614983Z	      warehouse,
2025-09-17T00:39:55.615061Z	      lastUpdated,
2025-09-17T00:39:55.615136Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:55.615194Z	      "inStock": status == "in_stock",
2025-09-17T00:39:55.61525Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:55.615447Z	    },
2025-09-17T00:39:55.615556Z	    isActive,
2025-09-17T00:39:55.615776Z	    isFeatured,
2025-09-17T00:39:55.615934Z	    isNew,
2025-09-17T00:39:55.616019Z	    _createdAt,
2025-09-17T00:39:55.61613Z	    _updatedAt
2025-09-17T00:39:55.616326Z	  
2025-09-17T00:39:55.6164Z	      },
2025-09-17T00:39:55.616522Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-17T00:39:55.616693Z	    }
2025-09-17T00:39:55.616763Z	  
2025-09-17T00:39:55.616855Z	Query parameters: {
2025-09-17T00:39:55.616951Z	  limit: 8,
2025-09-17T00:39:55.617093Z	  offset: 0,
2025-09-17T00:39:55.617166Z	  category: undefined,
2025-09-17T00:39:55.617391Z	  brand: 'cree',
2025-09-17T00:39:55.617564Z	  featured: undefined
2025-09-17T00:39:55.6177Z	}
2025-09-17T00:39:55.617853Z	Fetching solutions with query: 
2025-09-17T00:39:55.617999Z	    {
2025-09-17T00:39:55.618123Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:55.618252Z	        
2025-09-17T00:39:55.618366Z	    _id,
2025-09-17T00:39:55.618539Z	    title,
2025-09-17T00:39:55.618846Z	    "slug": slug.current,
2025-09-17T00:39:55.619113Z	    summary,
2025-09-17T00:39:55.619278Z	    description,
2025-09-17T00:39:55.619402Z	    coverImage,
2025-09-17T00:39:55.61955Z	    primaryBrand->{
2025-09-17T00:39:55.619621Z	      _id,
2025-09-17T00:39:55.619808Z	      name,
2025-09-17T00:39:55.619952Z	      "slug": slug.current,
2025-09-17T00:39:55.620039Z	      logo
2025-09-17T00:39:55.6201Z	    },
2025-09-17T00:39:55.620256Z	    relatedBrands[]->{
2025-09-17T00:39:55.620408Z	      _id,
2025-09-17T00:39:55.620532Z	      name,
2025-09-17T00:39:55.620631Z	      "slug": slug.current,
2025-09-17T00:39:55.620748Z	      logo
2025-09-17T00:39:55.620854Z	    },
2025-09-17T00:39:55.620946Z	    targetMarket,
2025-09-17T00:39:55.621049Z	    complexity,
2025-09-17T00:39:55.621146Z	    publishedAt,
2025-09-17T00:39:55.62125Z	    isPublished,
2025-09-17T00:39:55.621377Z	    isFeatured,
2025-09-17T00:39:55.621529Z	    viewCount,
2025-09-17T00:39:55.621609Z	    _createdAt,
2025-09-17T00:39:55.621708Z	    _updatedAt
2025-09-17T00:39:55.621803Z	  
2025-09-17T00:39:55.621932Z	      },
2025-09-17T00:39:55.622052Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-17T00:39:55.622155Z	    }
2025-09-17T00:39:55.622254Z	  
2025-09-17T00:39:55.622379Z	Query parameters: {
2025-09-17T00:39:55.622453Z	  limit: 4,
2025-09-17T00:39:55.622608Z	  offset: 0,
2025-09-17T00:39:55.622742Z	  targetMarket: undefined,
2025-09-17T00:39:55.622908Z	  brand: 'cree',
2025-09-17T00:39:55.62305Z	  featured: undefined
2025-09-17T00:39:55.623168Z	}
2025-09-17T00:39:55.623307Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-17T00:39:55.623433Z	Fetching products with query: 
2025-09-17T00:39:55.623568Z	    {
2025-09-17T00:39:55.623715Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:55.623795Z	        
2025-09-17T00:39:55.623922Z	    _id,
2025-09-17T00:39:55.624065Z	    _type,
2025-09-17T00:39:55.624164Z	    partNumber,
2025-09-17T00:39:55.624323Z	    "slug": slug.current,
2025-09-17T00:39:55.624426Z	    title,
2025-09-17T00:39:55.624599Z	    shortDescription,
2025-09-17T00:39:55.624723Z	    image,
2025-09-17T00:39:55.62483Z	    brand->{
2025-09-17T00:39:55.624933Z	      name,
2025-09-17T00:39:55.62509Z	      "slug": slug.current,
2025-09-17T00:39:55.625209Z	      logo
2025-09-17T00:39:55.625421Z	    },
2025-09-17T00:39:55.625569Z	    category->{
2025-09-17T00:39:55.62569Z	      name,
2025-09-17T00:39:55.6258Z	      "slug": slug.current
2025-09-17T00:39:55.625919Z	    },
2025-09-17T00:39:55.62604Z	    pricing{
2025-09-17T00:39:55.62616Z	      currency,
2025-09-17T00:39:55.626285Z	      tiers[]{
2025-09-17T00:39:55.626401Z	        quantity,
2025-09-17T00:39:55.62652Z	        price,
2025-09-17T00:39:55.626632Z	        unit
2025-09-17T00:39:55.626747Z	      },
2025-09-17T00:39:55.626953Z	      moq,
2025-09-17T00:39:55.627097Z	      leadTime,
2025-09-17T00:39:55.627204Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:55.627342Z	      "price": tiers[0].price,
2025-09-17T00:39:55.627458Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:55.627565Z	    },
2025-09-17T00:39:55.627667Z	    inventory{
2025-09-17T00:39:55.627782Z	      quantity,
2025-09-17T00:39:55.627891Z	      status,
2025-09-17T00:39:55.628002Z	      warehouse,
2025-09-17T00:39:55.628121Z	      lastUpdated,
2025-09-17T00:39:55.628226Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:55.628366Z	      "inStock": status == "in_stock",
2025-09-17T00:39:55.628484Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:55.6286Z	    },
2025-09-17T00:39:55.628721Z	    isActive,
2025-09-17T00:39:55.628838Z	    isFeatured,
2025-09-17T00:39:55.628948Z	    isNew,
2025-09-17T00:39:55.629064Z	    _createdAt,
2025-09-17T00:39:55.629177Z	    _updatedAt
2025-09-17T00:39:55.629304Z	  
2025-09-17T00:39:55.629416Z	      },
2025-09-17T00:39:55.629529Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-17T00:39:55.629645Z	    }
2025-09-17T00:39:55.629766Z	  
2025-09-17T00:39:55.629884Z	Query parameters: {
2025-09-17T00:39:55.629989Z	  limit: 8,
2025-09-17T00:39:55.6301Z	  offset: 0,
2025-09-17T00:39:55.630205Z	  category: undefined,
2025-09-17T00:39:55.630333Z	  brand: 'cree',
2025-09-17T00:39:55.630443Z	  featured: undefined
2025-09-17T00:39:55.630544Z	}
2025-09-17T00:39:55.630644Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-17T00:39:55.630746Z	Fetching products with query: 
2025-09-17T00:39:55.630844Z	    {
2025-09-17T00:39:55.630956Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:55.631095Z	        
2025-09-17T00:39:55.631207Z	    _id,
2025-09-17T00:39:55.631335Z	    _type,
2025-09-17T00:39:55.631436Z	    partNumber,
2025-09-17T00:39:55.631534Z	    "slug": slug.current,
2025-09-17T00:39:55.631647Z	    title,
2025-09-17T00:39:55.631761Z	    shortDescription,
2025-09-17T00:39:55.631873Z	    image,
2025-09-17T00:39:55.632007Z	    b❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:55.632127Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:55.632246Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-17T00:39:55.632372Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:39:55.632479Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619)
2025-09-17T00:39:55.632599Z	    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-09-17T00:39:55.632733Z	    at runNextTicks (node:internal/process/task_queues:64:3)
2025-09-17T00:39:55.632849Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-17T00:39:55.632963Z	    at process.processTimers (node:internal/timers:512:7) {
2025-09-17T00:39:55.633078Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:39:55.633186Z	}
2025-09-17T00:39:55.633313Z	rand->{
2025-09-17T00:39:55.633423Z	      name,
2025-09-17T00:39:55.633538Z	      "slug": slug.current,
2025-09-17T00:39:55.633648Z	      logo
2025-09-17T00:39:55.633847Z	    },
2025-09-17T00:39:55.634084Z	    category->{
2025-09-17T00:39:55.634211Z	      name,
2025-09-17T00:39:55.634338Z	      "slug": slug.current
2025-09-17T00:39:55.634446Z	    },
2025-09-17T00:39:55.634559Z	    pricing{
2025-09-17T00:39:55.634674Z	      currency,
2025-09-17T00:39:55.634782Z	      tiers[]{
2025-09-17T00:39:55.634888Z	        quantity,
2025-09-17T00:39:55.635005Z	        price,
2025-09-17T00:39:55.635128Z	        unit
2025-09-17T00:39:55.635236Z	      },
2025-09-17T00:39:55.635368Z	      moq,
2025-09-17T00:39:55.635476Z	      leadTime,
2025-09-17T00:39:55.635591Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:55.635708Z	      "price": tiers[0].price,
2025-09-17T00:39:55.635824Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:55.635929Z	    },
2025-09-17T00:39:55.63604Z	    inventory{
2025-09-17T00:39:55.636148Z	      quantity,
2025-09-17T00:39:55.636247Z	      status,
2025-09-17T00:39:55.636368Z	      warehouse,
2025-09-17T00:39:55.636476Z	      lastUpdated,
2025-09-17T00:39:55.636574Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:55.636703Z	      "inStock": status == "in_stock",
2025-09-17T00:39:55.636813Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:55.636921Z	    },
2025-09-17T00:39:55.637028Z	    isActive,
2025-09-17T00:39:55.637133Z	    isFeatured,
2025-09-17T00:39:55.637232Z	    isNew,
2025-09-17T00:39:55.637351Z	    _createdAt,
2025-09-17T00:39:55.637466Z	    _updatedAt
2025-09-17T00:39:55.637576Z	  
2025-09-17T00:39:55.637684Z	      },
2025-09-17T00:39:55.637797Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-17T00:39:55.637896Z	    }
2025-09-17T00:39:55.637994Z	  
2025-09-17T00:39:55.638106Z	Query parameters: {
2025-09-17T00:39:55.638211Z	  limit: 8,
2025-09-17T00:39:55.638326Z	  offset: 0,
2025-09-17T00:39:55.638427Z	  category: undefined,
2025-09-17T00:39:55.63852Z	  brand: 'Electronicon',
2025-09-17T00:39:55.63861Z	  featured: undefined
2025-09-17T00:39:55.638695Z	}
2025-09-17T00:39:55.638802Z	Fetching solutions with query: 
2025-09-17T00:39:55.638901Z	    {
2025-09-17T00:39:55.639003Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:55.639139Z	        
2025-09-17T00:39:55.639243Z	    _id,
2025-09-17T00:39:55.639362Z	    title,
2025-09-17T00:39:55.639462Z	    "slug": slug.current,
2025-09-17T00:39:55.639557Z	    summary,
2025-09-17T00:39:55.639644Z	    description,
2025-09-17T00:39:55.639741Z	    coverImage,
2025-09-17T00:39:55.639837Z	    primaryBrand->{
2025-09-17T00:39:55.639928Z	      _id,
2025-09-17T00:39:55.640033Z	      name,
2025-09-17T00:39:55.640135Z	      "slug": slug.current,
2025-09-17T00:39:55.640234Z	      logo
2025-09-17T00:39:55.640365Z	    },
2025-09-17T00:39:55.640485Z	    relatedBrands[]->{
2025-09-17T00:39:55.64058Z	      _id,
2025-09-17T00:39:55.640668Z	      name,
2025-09-17T00:39:55.640755Z	      "slug": slug.current,
2025-09-17T00:39:55.640843Z	      logo
2025-09-17T00:39:55.640941Z	    },
2025-09-17T00:39:55.641055Z	    targetMarket,
2025-09-17T00:39:55.641159Z	    complexity,
2025-09-17T00:39:55.64126Z	    publishedAt,
2025-09-17T00:39:55.641373Z	    isPublished,
2025-09-17T00:39:55.641467Z	    isFeatured,
2025-09-17T00:39:55.641557Z	    viewCount,
2025-09-17T00:39:55.641653Z	    _createdAt,
2025-09-17T00:39:55.641747Z	    _updatedAt
2025-09-17T00:39:55.641837Z	  
2025-09-17T00:39:55.641927Z	      },
2025-09-17T00:39:55.642041Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-17T00:39:55.642145Z	    }
2025-09-17T00:39:55.642241Z	  
2025-09-17T00:39:55.642354Z	Query parameters: {
2025-09-17T00:39:55.642445Z	  limit: 4,
2025-09-17T00:39:55.64253Z	  offset: 0,
2025-09-17T00:39:55.642618Z	  targetMarket: undefined,
2025-09-17T00:39:55.642715Z	  brand: 'Electronicon',
2025-09-17T00:39:55.642806Z	  featured: undefined
2025-09-17T00:39:55.642909Z	}
2025-09-17T00:39:55.643004Z	Query parameters: {
2025-09-17T00:39:55.643103Z	  limit: 4,
2025-09-17T00:39:55.643198Z	  offset: 0,
2025-09-17T00:39:55.64331Z	  targetMarket: undefined,
2025-09-17T00:39:55.643418Z	  brand: '英飞凌',
2025-09-17T00:39:55.643516Z	  featured: undefined
2025-09-17T00:39:55.643614Z	}
2025-09-17T00:39:55.643714Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:55.643816Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:55.643928Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-17T00:39:55.644043Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:39:55.644152Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619)
2025-09-17T00:39:55.644253Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-17T00:39:55.64438Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:39:55.64447Z	}
2025-09-17T00:39:55.64457Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:55.644699Z	Fetching products with query: 
2025-09-17T00:39:55.644814Z	    {
2025-09-17T00:39:55.644921Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:55.645033Z	        
2025-09-17T00:39:55.645134Z	    _id,
2025-09-17T00:39:55.645244Z	    _type,
2025-09-17T00:39:55.645368Z	    partNumber,
2025-09-17T00:39:55.645472Z	    "slug": slug.current,
2025-09-17T00:39:55.645567Z	    title,
2025-09-17T00:39:55.645672Z	    shortDescription,
2025-09-17T00:39:55.645777Z	    image,
2025-09-17T00:39:55.645882Z	    brand->{
2025-09-17T00:39:55.645994Z	      name,
2025-09-17T00:39:55.64611Z	      "slug": slug.current,
2025-09-17T00:39:55.646205Z	      logo
2025-09-17T00:39:55.646316Z	    },
2025-09-17T00:39:55.646421Z	    category->{
2025-09-17T00:39:55.64654Z	      name,
2025-09-17T00:39:55.646652Z	      "slug": slug.current
2025-09-17T00:39:55.646755Z	    },
2025-09-17T00:39:55.646855Z	    pricing{
2025-09-17T00:39:55.646959Z	      currency,
2025-09-17T00:39:55.647071Z	      tiers[]{
2025-09-17T00:39:55.647169Z	        quantity,
2025-09-17T00:39:55.647302Z	        price,
2025-09-17T00:39:55.647403Z	        unit
2025-09-17T00:39:55.647489Z	      },
2025-09-17T00:39:55.64757Z	      moq,
2025-09-17T00:39:55.647659Z	      leadTime,
2025-09-17T00:39:55.647748Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:55.647844Z	      "price": tiers[0].price,
2025-09-17T00:39:55.647911Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:55.647966Z	    },
2025-09-17T00:39:55.648027Z	    inventory{
2025-09-17T00:39:55.648091Z	      quantity,
2025-09-17T00:39:55.648146Z	      status,
2025-09-17T00:39:55.648202Z	      warehouse,
2025-09-17T00:39:55.648255Z	      lastUpdated,
2025-09-17T00:39:55.648372Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:55.648472Z	      "inStock": status == "in_stock",
2025-09-17T00:39:55.648572Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:55.64865Z	    },
2025-09-17T00:39:55.648731Z	    isActive,
2025-09-17T00:39:55.648812Z	    isFeatured,
2025-09-17T00:39:55.648909Z	    isNew,
2025-09-17T00:39:55.648999Z	    _createdAt,
2025-09-17T00:39:55.649091Z	    _updatedAt
2025-09-17T00:39:55.649169Z	  
2025-09-17T00:39:55.649252Z	      },
2025-09-17T00:39:55.649361Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-17T00:39:55.64946Z	    }
2025-09-17T00:39:55.649657Z	  
2025-09-17T00:39:55.649825Z	Query parameters: {
2025-09-17T00:39:55.649944Z	  limit: 8,
2025-09-17T00:39:55.650111Z	  offset: 0,
2025-09-17T00:39:55.650336Z	  category: undefined,
2025-09-17T00:39:55.650428Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:39:55.65053Z	  featured: undefined
2025-09-17T00:39:55.650651Z	}
2025-09-17T00:39:55.650751Z	Fetching solutions with query: 
2025-09-17T00:39:55.650849Z	    {
2025-09-17T00:39:55.650954Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:55.651056Z	        
2025-09-17T00:39:55.651127Z	    _id,
2025-09-17T00:39:55.65119Z	    title,
2025-09-17T00:39:55.651346Z	    "slug": slug.current,
2025-09-17T00:39:55.651467Z	    summary,
2025-09-17T00:39:55.651577Z	    description,
2025-09-17T00:39:55.651716Z	    coverImage,
2025-09-17T00:39:55.651838Z	    primaryBrand->{
2025-09-17T00:39:55.651946Z	      _id,
2025-09-17T00:39:55.652046Z	      name,
2025-09-17T00:39:55.652175Z	      "slug": slug.current,
2025-09-17T00:39:55.652336Z	      logo
2025-09-17T00:39:55.652507Z	    },
2025-09-17T00:39:55.652666Z	    relatedBrands[]->{
2025-09-17T00:39:55.652848Z	      _id,
2025-09-17T00:39:55.652985Z	      name,
2025-09-17T00:39:55.653168Z	      "slug": slug.current,
2025-09-17T00:39:55.653412Z	      logo
2025-09-17T00:39:55.653562Z	    },
2025-09-17T00:39:55.654035Z	    targetMarket,
2025-09-17T00:39:55.6542Z	    complexity,
2025-09-17T00:39:55.654424Z	    publishedAt,
2025-09-17T00:39:55.65465Z	    isPublished,
2025-09-17T00:39:55.654794Z	    isFeatured,
2025-09-17T00:39:55.654962Z	    viewCount,
2025-09-17T00:39:55.655121Z	    _createdAt,
2025-09-17T00:39:55.6552Z	    _updatedAt
2025-09-17T00:39:55.655335Z	  
2025-09-17T00:39:55.65545Z	      },
2025-09-17T00:39:55.655593Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-17T00:39:55.655699Z	    }
2025-09-17T00:39:55.655813Z	  
2025-09-17T00:39:55.655918Z	Query parameters: {
2025-09-17T00:39:55.656023Z	  limit: 4,
2025-09-17T00:39:55.656123Z	  offset: 0,
2025-09-17T00:39:55.656209Z	  targetMarket: undefined,
2025-09-17T00:39:55.656308Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:39:55.65645Z	  featured: undefined
2025-09-17T00:39:55.65662Z	}
2025-09-17T00:39:55.65678Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-17T00:39:55.656969Z	Fetching solutions with query: 
2025-09-17T00:39:55.65705Z	    {
2025-09-17T00:39:55.657166Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:55.657246Z	        
2025-09-17T00:39:55.657358Z	    _id,
2025-09-17T00:39:55.657451Z	    title,
2025-09-17T00:39:55.657686Z	    "slug": slug.current,
2025-09-17T00:39:55.657966Z	    summary,
2025-09-17T00:39:55.658232Z	    description,
2025-09-17T00:39:55.658484Z	    coverImage,
2025-09-17T00:39:55.658633Z	    primaryBrand->{
2025-09-17T00:39:55.658733Z	      _id,
2025-09-17T00:39:55.658828Z	      name,
2025-09-17T00:39:55.658931Z	      "slug": slug.current,
2025-09-17T00:39:55.659144Z	      logo
2025-09-17T00:39:55.659258Z	    },
2025-09-17T00:39:55.659475Z	    relatedBrands[]->{
2025-09-17T00:39:55.659576Z	      _id,
2025-09-17T00:39:55.659675Z	      name,
2025-09-17T00:39:55.65977Z	      "slug": slug.current,
2025-09-17T00:39:55.659862Z	      logo
2025-09-17T00:39:55.659949Z	    },
2025-09-17T00:39:55.660209Z	    targetMarket,
2025-09-17T00:39:55.66035Z	    complexity,
2025-09-17T00:39:55.660463Z	    publishedAt,
2025-09-17T00:39:55.66068Z	    isPublished,
2025-09-17T00:39:55.660753Z	    isFeatured,
2025-09-17T00:39:55.660932Z	    viewCount,
2025-09-17T00:39:55.661247Z	    _createdAt,
2025-09-17T00:39:55.661363Z	    _updatedAt
2025-09-17T00:39:55.661619Z	  
2025-09-17T00:39:55.661709Z	      },
2025-09-17T00:39:55.661859Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-17T00:39:55.66198Z	    }
2025-09-17T00:39:55.662084Z	  
2025-09-17T00:39:55.662175Z	Query parameters: {
2025-09-17T00:39:55.662327Z	  limit: 4,
2025-09-17T00:39:55.662433Z	  offset: 0,
2025-09-17T00:39:55.66252Z	  targetMarket: undefined,
2025-09-17T00:39:55.662608Z	  brand: 'cree',
2025-09-17T00:39:55.66275Z	  featured: undefined
2025-09-17T00:39:55.662895Z	}
2025-09-17T00:39:55.663139Z	Fetching products with query: 
2025-09-17T00:39:55.663226Z	    {
2025-09-17T00:39:55.663386Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:55.663537Z	        
2025-09-17T00:39:55.663648Z	    _id,
2025-09-17T00:39:55.663748Z	    _type,
2025-09-17T00:39:55.663877Z	    partNumber,
2025-09-17T00:39:55.664043Z	    "slug": slug.current,
2025-09-17T00:39:55.664115Z	    title,
2025-09-17T00:39:55.664326Z	    shortDescription,
2025-09-17T00:39:55.664467Z	    image,
2025-09-17T00:39:55.664565Z	    brand->{
2025-09-17T00:39:55.664686Z	      name,
2025-09-17T00:39:55.664817Z	      "slug": slug.current,
2025-09-17T00:39:55.664994Z	      logo
2025-09-17T00:39:55.665135Z	    },
2025-09-17T00:39:55.665428Z	    category->{
2025-09-17T00:39:55.665595Z	      name,
2025-09-17T00:39:55.665767Z	      "slug": slug.current
2025-09-17T00:39:55.665927Z	    },
2025-09-17T00:39:55.666047Z	    pricing{
2025-09-17T00:39:55.666144Z	      currency,
2025-09-17T00:39:55.666252Z	      tiers[]{
2025-09-17T00:39:55.666373Z	        quantity,
2025-09-17T00:39:55.666469Z	        price,
2025-09-17T00:39:55.666571Z	        unit
2025-09-17T00:39:55.666662Z	      },
2025-09-17T00:39:55.666753Z	      moq,
2025-09-17T00:39:55.666872Z	      leadTime,
2025-09-17T00:39:55.667Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:55.667109Z	      "price": tiers[0].price,
2025-09-17T00:39:55.667212Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:55.667323Z	    },
2025-09-17T00:39:55.667431Z	    inventory{
2025-09-17T00:39:55.667554Z	      quantity,
2025-09-17T00:39:55.667671Z	      status,
2025-09-17T00:39:55.66778Z	      warehouse,
2025-09-17T00:39:55.667883Z	      lastUpdated,
2025-09-17T00:39:55.667992Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:55.668089Z	      "inStock": status == "in_stock",
2025-09-17T00:39:55.668198Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:55.668318Z	    },
2025-09-17T00:39:55.668423Z	    isActive,
2025-09-17T00:39:55.668523Z	    isFeatured,
2025-09-17T00:39:55.668624Z	    isNew,
2025-09-17T00:39:55.668719Z	    _createdAt,
2025-09-17T00:39:55.668823Z	    _updatedAt
2025-09-17T00:39:55.669025Z	  
2025-09-17T00:39:55.66915Z	      },
2025-09-17T00:39:55.669263Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-17T00:39:55.669394Z	    }
2025-09-17T00:39:55.669503Z	  
2025-09-17T00:39:55.669627Z	Query parameters: {
2025-09-17T00:39:55.669725Z	  limit: 8,
2025-09-17T00:39:55.669836Z	  offset: 0,
2025-09-17T00:39:55.66995Z	  category: undefined,
2025-09-17T00:39:55.670055Z	  brand: 'Electronicon',
2025-09-17T00:39:55.670157Z	  featured: undefined
2025-09-17T00:39:55.670259Z	}
2025-09-17T00:39:55.670381Z	✅ [getBrandData] Found brand: Epcos
2025-09-17T00:39:55.670486Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:55.670586Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:55.670707Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-17T00:39:55.67083Z	Fetching products with query: 
2025-09-17T00:39:55.670962Z	    {
2025-09-17T00:39:55.671083Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:55.671207Z	        
2025-09-17T00:39:55.671329Z	    _id,
2025-09-17T00:39:55.671573Z	    _type,
2025-09-17T00:39:55.671723Z	    partNumber,
2025-09-17T00:39:55.671824Z	    "slug": slug.current,
2025-09-17T00:39:55.671953Z	    title,
2025-09-17T00:39:55.672038Z	    shortDescription,
2025-09-17T00:39:55.672163Z	    image,
2025-09-17T00:39:55.672289Z	    brand->{
2025-09-17T00:39:55.672413Z	      name,
2025-09-17T00:39:55.672492Z	      "slug": slug.current,
2025-09-17T00:39:55.672589Z	      logo
2025-09-17T00:39:55.672704Z	    },
2025-09-17T00:39:55.672806Z	    category->{
2025-09-17T00:39:55.672904Z	      name,
2025-09-17T00:39:55.673023Z	      "slug": slug.current
2025-09-17T00:39:55.673121Z	    },
2025-09-17T00:39:55.673214Z	    pricing{
2025-09-17T00:39:55.673349Z	      currency,
2025-09-17T00:39:55.673469Z	      tiers[]{
2025-09-17T00:39:55.673563Z	        quantity,
2025-09-17T00:39:55.673669Z	        price,
2025-09-17T00:39:55.673766Z	        unit
2025-09-17T00:39:55.67386Z	      },
2025-09-17T00:39:55.673972Z	      moq,
2025-09-17T00:39:55.674078Z	      leadTime,
2025-09-17T00:39:55.674186Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:55.674308Z	      "price": tiers[0].price,
2025-09-17T00:39:55.674416Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:55.674514Z	    },
2025-09-17T00:39:55.674625Z	    inventory{
2025-09-17T00:39:55.67474Z	      quantity,
2025-09-17T00:39:55.674844Z	      status,
2025-09-17T00:39:55.675034Z	      warehouse,
2025-09-17T00:39:55.675132Z	      lastUpdated,
2025-09-17T00:39:55.675231Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:55.675386Z	      "inStock": status == "in_stock",
2025-09-17T00:39:55.675515Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:55.675642Z	    },
2025-09-17T00:39:55.675823Z	    isActive,
2025-09-17T00:39:55.675904Z	    isFeatured,
2025-09-17T00:39:55.675969Z	    isNew,
2025-09-17T00:39:55.676092Z	    _createdAt,
2025-09-17T00:39:55.676251Z	    _updatedAt
2025-09-17T00:39:55.676415Z	  
2025-09-17T00:39:55.676547Z	      },
2025-09-17T00:39:55.676645Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-17T00:39:55.676764Z	    }
2025-09-17T00:39:55.677077Z	  
2025-09-17T00:39:55.677181Z	Query parameters: {
2025-09-17T00:39:55.677468Z	  limit: 8,
2025-09-17T00:39:55.677585Z	  offset: 0,
2025-09-17T00:39:55.677697Z	  category: undefined,
2025-09-17T00:39:55.677808Z	  brand: 'epcos',
2025-09-17T00:39:55.67796Z	  featured: undefined
2025-09-17T00:39:55.678228Z	}
2025-09-17T00:39:55.678489Z	Fetching solutions with query: 
2025-09-17T00:39:55.67857Z	    {
2025-09-17T00:39:55.678893Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:55.679Z	        
2025-09-17T00:39:55.679123Z	    _id,
2025-09-17T00:39:55.67921Z	    title,
2025-09-17T00:39:55.679291Z	    "slug": slug.current,
2025-09-17T00:39:55.679386Z	    summary,
2025-09-17T00:39:55.679495Z	    description,
2025-09-17T00:39:55.679595Z	    coverImage,
2025-09-17T00:39:55.679733Z	    primaryBrand->{
2025-09-17T00:39:55.679916Z	      _id,
2025-09-17T00:39:55.680094Z	      name,
2025-09-17T00:39:55.680251Z	      "slug": slug.current,
2025-09-17T00:39:55.680434Z	      logo
2025-09-17T00:39:55.680642Z	    },
2025-09-17T00:39:55.680717Z	    relatedBrands[]->{
2025-09-17T00:39:55.680779Z	      _id,
2025-09-17T00:39:55.680843Z	      name,
2025-09-17T00:39:55.680899Z	      "slug": slug.current,
2025-09-17T00:39:55.68121Z	      logo
2025-09-17T00:39:55.681372Z	    },
2025-09-17T00:39:55.681448Z	    targetMarket,
2025-09-17T00:39:55.681506Z	    complexity,
2025-09-17T00:39:55.681562Z	    publishedAt,
2025-09-17T00:39:55.681617Z	    isPublished,
2025-09-17T00:39:55.681679Z	    isFeatured,
2025-09-17T00:39:55.681733Z	    viewCount,
2025-09-17T00:39:55.681787Z	    _createdAt,
2025-09-17T00:39:55.68184Z	    _updatedAt
2025-09-17T00:39:55.681893Z	  
2025-09-17T00:39:55.681958Z	      },
2025-09-17T00:39:55.682088Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-17T00:39:55.682481Z	    }
2025-09-17T00:39:55.682565Z	  
2025-09-17T00:39:55.682773Z	Query parameters: {
2025-09-17T00:39:55.682862Z	  limit: 4,
2025-09-17T00:39:55.683083Z	  offset: 0,
2025-09-17T00:39:55.683202Z	  targetMarket: undefined,
2025-09-17T00:39:55.68334Z	  brand: 'epcos',
2025-09-17T00:39:55.68347Z	  featured: undefined
2025-09-17T00:39:55.683601Z	}
2025-09-17T00:39:55.683739Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:55.683866Z	Fetching products with query: 
2025-09-17T00:39:55.684014Z	    {
2025-09-17T00:39:55.684172Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:55.684326Z	        
2025-09-17T00:39:55.684451Z	    _id,
2025-09-17T00:39:55.684561Z	    _type,
2025-09-17T00:39:55.68468Z	    partNumber,
2025-09-17T00:39:55.684798Z	    "slug": slug.current,
2025-09-17T00:39:55.684913Z	    title,
2025-09-17T00:39:55.68503Z	    shortDescription,
2025-09-17T00:39:55.685143Z	    image,
2025-09-17T00:39:55.685253Z	    brand->{
2025-09-17T00:39:55.685379Z	      name,
2025-09-17T00:39:55.685491Z	      "slug": slug.current,
2025-09-17T00:39:55.685591Z	      logo
2025-09-17T00:39:55.685716Z	    },
2025-09-17T00:39:55.685847Z	    category->{
2025-09-17T00:39:55.68595Z	      name,
2025-09-17T00:39:55.686059Z	      "slug": slug.current
2025-09-17T00:39:55.686201Z	    },
2025-09-17T00:39:55.686348Z	    pricing{
2025-09-17T00:39:55.68646Z	      currency,
2025-09-17T00:39:55.686567Z	      tiers[]{
2025-09-17T00:39:55.686691Z	        quantity,
2025-09-17T00:39:55.686808Z	        price,
2025-09-17T00:39:55.686922Z	        unit
2025-09-17T00:39:55.687025Z	      },
2025-09-17T00:39:55.687133Z	      moq,
2025-09-17T00:39:55.687231Z	      leadTime,
2025-09-17T00:39:55.687361Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:55.68747Z	      "price": tiers[0].price,
2025-09-17T00:39:55.687574Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:55.687696Z	    },
2025-09-17T00:39:55.687807Z	    inventory{
2025-09-17T00:39:55.687907Z	      quantity,
2025-09-17T00:39:55.688009Z	      status,
2025-09-17T00:39:55.688117Z	      warehouse,
2025-09-17T00:39:55.68822Z	      lastUpdated,
2025-09-17T00:39:55.688356Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:55.688474Z	      "inStock": status == "in_stock",
2025-09-17T00:39:55.688584Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:55.688703Z	    },
2025-09-17T00:39:55.688817Z	    isActive,
2025-09-17T00:39:55.688931Z	    isFeatured,
2025-09-17T00:39:55.689032Z	    isNew,
2025-09-17T00:39:55.689148Z	    _createdAt,
2025-09-17T00:39:55.68925Z	    _updatedAt
2025-09-17T00:39:55.689823Z	  
2025-09-17T00:39:55.68996Z	      },
2025-09-17T00:39:55.690067Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-17T00:39:55.69017Z	    }
2025-09-17T00:39:55.690294Z	  
2025-09-17T00:39:55.690658Z	Query parameters: {
2025-09-17T00:39:55.690802Z	  limit: 8,
2025-09-17T00:39:55.690918Z	  offset: 0,
2025-09-17T00:39:55.691028Z	  category: undefined,
2025-09-17T00:39:55.69115Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:39:55.691282Z	  featured: undefined
2025-09-17T00:39:55.691797Z	}
2025-09-17T00:39:55.691938Z	Fetching solutions with query: 
2025-09-17T00:39:55.692051Z	    {
2025-09-17T00:39:55.69216Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:55.692287Z	        
2025-09-17T00:39:55.692404Z	    _id,
2025-09-17T00:39:55.692506Z	    title,
2025-09-17T00:39:55.692637Z	    "slug": slug.current,
2025-09-17T00:39:55.692771Z	    summary,
2025-09-17T00:39:55.69288Z	    description,
2025-09-17T00:39:55.692986Z	    coverImage,
2025-09-17T00:39:55.693085Z	    primaryBrand->{
2025-09-17T00:39:55.693191Z	      _id,
2025-09-17T00:39:55.693385Z	      name,
2025-09-17T00:39:55.693494Z	      "slug": slug.current,
2025-09-17T00:39:55.693617Z	      logo
2025-09-17T00:39:55.693736Z	    },
2025-09-17T00:39:55.693849Z	    relatedBrands[]->{
2025-09-17T00:39:55.693957Z	      _id,
2025-09-17T00:39:55.694068Z	      name,
2025-09-17T00:39:55.694173Z	      "slug": slug.current,
2025-09-17T00:39:55.694307Z	      logo
2025-09-17T00:39:55.694425Z	    },
2025-09-17T00:39:55.694534Z	    targetMarket,
2025-09-17T00:39:55.69464Z	    complexity,
2025-09-17T00:39:55.694762Z	    publishedAt,
2025-09-17T00:39:55.694862Z	    isPublished,
2025-09-17T00:39:55.694985Z	    isFeatured,
2025-09-17T00:39:55.695096Z	    viewCount,
2025-09-17T00:39:55.695201Z	    _createdAt,
2025-09-17T00:39:55.695325Z	    _updatedAt
2025-09-17T00:39:55.695436Z	  
2025-09-17T00:39:55.695535Z	      },
2025-09-17T00:39:55.695641Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-17T00:39:55.695772Z	    }
2025-09-17T00:39:55.695879Z	  
2025-09-17T00:39:55.695989Z	Query parameters: {
2025-09-17T00:39:55.696095Z	  limit: 4,
2025-09-17T00:39:55.696206Z	  offset: 0,
2025-09-17T00:39:55.696339Z	  targetMarket: undefined,
2025-09-17T00:39:55.696455Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:39:55.69657Z	  featured: undefined
2025-09-17T00:39:55.696692Z	}
2025-09-17T00:39:55.696804Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-17T00:39:55.696912Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:55.697027Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:55.697135Z	Fetching solutions with query: 
2025-09-17T00:39:55.697233Z	    {
2025-09-17T00:39:55.697353Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:55.697476Z	        
2025-09-17T00:39:55.697587Z	    _id,
2025-09-17T00:39:55.697717Z	    title,
2025-09-17T00:39:55.697819Z	    "slug": slug.current,
2025-09-17T00:39:55.697916Z	    summary,
2025-09-17T00:39:55.698026Z	    description,
2025-09-17T00:39:55.698133Z	    coverImage,
2025-09-17T00:39:55.698236Z	    primaryBrand->{
2025-09-17T00:39:55.698579Z	      _id,
2025-09-17T00:39:55.698746Z	      name,
2025-09-17T00:39:55.698861Z	      "slug": slug.current,
2025-09-17T00:39:55.699094Z	      logo
2025-09-17T00:39:55.699308Z	    },
2025-09-17T00:39:55.699449Z	    relatedBrands[]->{
2025-09-17T00:39:55.699623Z	      _id,
2025-09-17T00:39:55.699768Z	      name,
2025-09-17T00:39:55.699927Z	      "slug": slug.current,
2025-09-17T00:39:55.700047Z	      logo
2025-09-17T00:39:55.700203Z	    },
2025-09-17T00:39:55.700421Z	    targetMarket,
2025-09-17T00:39:55.700631Z	    complexity,
2025-09-17T00:39:55.700781Z	    publishedAt,
2025-09-17T00:39:55.700961Z	    isPublished,
2025-09-17T00:39:55.701105Z	    isFeatured,
2025-09-17T00:39:55.701287Z	    viewCount,
2025-09-17T00:39:55.701577Z	    _createdAt,
2025-09-17T00:39:55.701722Z	    _updatedAt
2025-09-17T00:39:55.701864Z	  
2025-09-17T00:39:55.701984Z	      },
2025-09-17T00:39:55.702108Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-17T00:39:55.702212Z	    }
2025-09-17T00:39:55.70233Z	  
2025-09-17T00:39:55.702437Z	Query parameters: {
2025-09-17T00:39:55.702534Z	  limit: 4,
2025-09-17T00:39:55.702635Z	  offset: 0,
2025-09-17T00:39:55.70273Z	  targetMarket: undefined,
2025-09-17T00:39:55.702833Z	  brand: 'Electronicon',
2025-09-17T00:39:55.702928Z	  featured: undefined
2025-09-17T00:39:55.703037Z	}
2025-09-17T00:39:55.703129Z	Products fetch result: {
2025-09-17T00:39:55.703223Z	  totalProducts: 2,
2025-09-17T00:39:55.70334Z	  fetchedProducts: 2,
2025-09-17T00:39:55.703444Z	  firstProduct: {
2025-09-17T00:39:55.703546Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-17T00:39:55.703638Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-17T00:39:55.703732Z	    _type: 'product',
2025-09-17T00:39:55.70383Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-17T00:39:55.703918Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-17T00:39:55.704016Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-17T00:39:55.704113Z	    image: null,
2025-09-17T00:39:55.704203Z	    inventory: {
2025-09-17T00:39:55.704402Z	      inStock: true,
2025-09-17T00:39:55.704595Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-17T00:39:55.704882Z	      quantity: 0,
2025-09-17T00:39:55.705058Z	      status: 'in_stock',
2025-09-17T00:39:55.705186Z	      warehouse: null
2025-09-17T00:39:55.705332Z	    },
2025-09-17T00:39:55.705436Z	    isActive: true,
2025-09-17T00:39:55.705527Z	    isFeatured: false,
2025-09-17T00:39:55.705618Z	    isNew: false,
2025-09-17T00:39:55.705709Z	    partNumber: '99999',
2025-09-17T00:39:55.705799Z	    pricing: {
2025-09-17T00:39:55.705896Z	      currency: 'CNY',
2025-09-17T00:39:55.705985Z	      leadTime: null,
2025-09-17T00:39:55.706083Z	      moq: null,
2025-09-17T00:39:55.706175Z	      price: null,
2025-09-17T00:39:55.706263Z	      tiers: null
2025-09-17T00:39:55.706373Z	    },
2025-09-17T00:39:55.706465Z	    shortDescription: null,
2025-09-17T00:39:55.706555Z	    slug: '99999',
2025-09-17T00:39:55.706647Z	    title: '99999'
2025-09-17T00:39:55.706731Z	  }
2025-09-17T00:39:55.706813Z	}
2025-09-17T00:39:55.706895Z	Products fetch result: {
2025-09-17T00:39:55.706975Z	  totalProducts: 2,
2025-09-17T00:39:55.707066Z	  fetchedProducts: 2,
2025-09-17T00:39:55.707163Z	  firstProduct: {
2025-09-17T00:39:55.707264Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-17T00:39:55.707614Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-17T00:39:55.707732Z	    _type: 'product',
2025-09-17T00:39:55.707845Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-17T00:39:55.708071Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-17T00:39:55.708176Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-17T00:39:55.708292Z	    image: null,
2025-09-17T00:39:55.708426Z	    inventory: {
2025-09-17T00:39:55.708532Z	      inStock: true,
2025-09-17T00:39:55.708653Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-17T00:39:55.708758Z	      quantity: 0,
2025-09-17T00:39:55.708854Z	      status: 'in_stock',
2025-09-17T00:39:55.708952Z	      warehouse: null
2025-09-17T00:39:55.709768Z	    },
2025-09-17T00:39:55.709876Z	    isActive: true,
2025-09-17T00:39:55.709965Z	    isFeatured: false,
2025-09-17T00:39:55.710093Z	    isNew: false,
2025-09-17T00:39:55.710199Z	    partNumber: '99999',
2025-09-17T00:39:55.710421Z	    pricing: {
2025-09-17T00:39:55.710527Z	      currency: 'CNY',
2025-09-17T00:39:55.710615Z	      leadTime: null,
2025-09-17T00:39:55.710704Z	      moq: null,
2025-09-17T00:39:55.710801Z	      price: null,
2025-09-17T00:39:55.7109Z	      tiers: null
2025-09-17T00:39:55.711003Z	    },
2025-09-17T00:39:55.711091Z	    shortDescription: null,
2025-09-17T00:39:55.711175Z	    slug: '99999',
2025-09-17T00:39:55.711256Z	    title: '99999'
2025-09-17T00:39:55.711366Z	  }
2025-09-17T00:39:55.711454Z	}
2025-09-17T00:39:55.711544Z	✅ [getBrandData] Found brand: Electronicon
2025-09-17T00:39:55.711631Z	✅ [getBrandData] Found brand: Electronicon
2025-09-17T00:39:55.711716Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:55.711831Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:55.711931Z	✅ [getBrandData] Found brand: CREE
2025-09-17T00:39:55.712043Z	✅ [getBrandData] Found brand: CREE
2025-09-17T00:39:55.712553Z	Solutions fetch result: {
2025-09-17T00:39:55.712686Z	  totalSolutions: 6,
2025-09-17T00:39:55.712812Z	  fetchedSolutions: 4,
2025-09-17T00:39:55.713044Z	  firstSolution: {
2025-09-17T00:39:55.713175Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-17T00:39:55.713353Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-17T00:39:55.713475Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-17T00:39:55.713603Z	    complexity: 'medium',
2025-09-17T00:39:55.713714Z	    coverImage: null,
2025-09-17T00:39:55.713833Z	    description: [ [Object] ],
2025-09-17T00:39:55.713931Z	    isFeatured: false,
2025-09-17T00:39:55.714055Z	    isPublished: true,
2025-09-17T00:39:55.714166Z	    primaryBrand: {
2025-09-17T00:39:55.714313Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:55.714585Z	      logo: null,
2025-09-17T00:39:55.715047Z	      name: 'CREE',
2025-09-17T00:39:55.716042Z	      slug: 'cree'
2025-09-17T00:39:55.716936Z	    },
2025-09-17T00:39:55.724379Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-17T00:39:55.724544Z	    relatedBrands: null,
2025-09-17T00:39:55.724674Z	    slug: '11111',
2025-09-17T00:39:55.724794Z	    summary: '11111',
2025-09-17T00:39:55.724895Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:55.725017Z	    title: '11111',
2025-09-17T00:39:55.725123Z	    viewCount: 0
2025-09-17T00:39:55.725304Z	  }
2025-09-17T00:39:55.725426Z	}
2025-09-17T00:39:55.725539Z	Solutions fetch result: {
2025-09-17T00:39:55.725646Z	  totalSolutions: 6,
2025-09-17T00:39:55.725746Z	  fetchedSolutions: 4,
2025-09-17T00:39:55.725837Z	  firstSolution: {
2025-09-17T00:39:55.725934Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-17T00:39:55.726048Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-17T00:39:55.726387Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-17T00:39:55.726516Z	    complexity: 'medium',
2025-09-17T00:39:55.726678Z	    coverImage: null,
2025-09-17T00:39:55.726833Z	    description: [ [Object] ],
2025-09-17T00:39:55.727004Z	    isFeatured: false,
2025-09-17T00:39:55.727101Z	    isPublished: true,
2025-09-17T00:39:55.72719Z	    primaryBrand: {
2025-09-17T00:39:55.727329Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:55.728248Z	      logo: null,
2025-09-17T00:39:55.728749Z	      name: 'CREE',
2025-09-17T00:39:55.728946Z	      slug: 'cree'
2025-09-17T00:39:55.729087Z	    },
2025-09-17T00:39:55.729261Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-17T00:39:55.729406Z	    relatedBrands: null,
2025-09-17T00:39:55.72953Z	    slug: '11111',
2025-09-17T00:39:55.729644Z	    summary: '11111',
2025-09-17T00:39:55.729791Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:55.729891Z	    title: '11111',
2025-09-17T00:39:55.730092Z	    viewCount: 0
2025-09-17T00:39:55.730199Z	  }
2025-09-17T00:39:55.730345Z	}
2025-09-17T00:39:55.730495Z	Products fetch result: {
2025-09-17T00:39:55.730642Z	  totalProducts: 4,
2025-09-17T00:39:55.73076Z	  fetchedProducts: 4,
2025-09-17T00:39:55.730922Z	  firstProduct: {
2025-09-17T00:39:55.731042Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-17T00:39:55.731143Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-17T00:39:55.731237Z	    _type: 'product',
2025-09-17T00:39:55.73137Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-17T00:39:55.731491Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-17T00:39:55.731597Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:55.731701Z	    image: null,
2025-09-17T00:39:55.731806Z	    inventory: {
2025-09-17T00:39:55.731918Z	      inStock: true,
2025-09-17T00:39:55.732018Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-17T00:39:55.732113Z	      quantity: 0,
2025-09-17T00:39:55.732233Z	      status: 'in_stock',
2025-09-17T00:39:55.73244Z	      warehouse: null
2025-09-17T00:39:55.732597Z	    },
2025-09-17T00:39:55.73275Z	    isActive: true,
2025-09-17T00:39:55.732898Z	    isFeatured: false,
2025-09-17T00:39:55.733064Z	    isNew: false,
2025-09-17T00:39:55.733201Z	    partNumber: '11111',
2025-09-17T00:39:55.733336Z	    pricing: {
2025-09-17T00:39:55.733426Z	      currency: 'CNY',
2025-09-17T00:39:55.733556Z	      leadTime: null,
2025-09-17T00:39:55.733663Z	      moq: null,
2025-09-17T00:39:55.733778Z	      price: null,
2025-09-17T00:39:55.733916Z	      tiers: null
2025-09-17T00:39:55.734026Z	    },
2025-09-17T00:39:55.734136Z	    shortDescription: '11111',
2025-09-17T00:39:55.734282Z	    slug: 'sic mosfet',
2025-09-17T00:39:55.734806Z	    title: '111111'
2025-09-17T00:39:55.734997Z	  }
2025-09-17T00:39:55.735081Z	}
2025-09-17T00:39:55.735176Z	Products fetch result: {
2025-09-17T00:39:55.735419Z	  totalProducts: 4,
2025-09-17T00:39:55.735604Z	  fetchedProducts: 4,
2025-09-17T00:39:55.73574Z	  firstProduct: {
2025-09-17T00:39:55.735884Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-17T00:39:55.736017Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-17T00:39:55.736136Z	    _type: 'product',
2025-09-17T00:39:55.736345Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-17T00:39:55.736539Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-17T00:39:55.736667Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:55.736799Z	    image: null,
2025-09-17T00:39:55.736924Z	    inventory: {
2025-09-17T00:39:55.73707Z	      inStock: true,
2025-09-17T00:39:55.737192Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-17T00:39:55.737492Z	      quantity: 0,
2025-09-17T00:39:55.737643Z	      status: 'in_stock',
2025-09-17T00:39:55.737769Z	      warehouse: null
2025-09-17T00:39:55.737909Z	    },
2025-09-17T00:39:55.738024Z	    isActive: true,
2025-09-17T00:39:55.738142Z	    isFeatured: false,
2025-09-17T00:39:55.738263Z	    isNew: false,
2025-09-17T00:39:55.738735Z	    partNumber: '11111',
2025-09-17T00:39:55.738848Z	    pricing: {
2025-09-17T00:39:55.738986Z	      currency: 'CNY',
2025-09-17T00:39:55.739109Z	      leadTime: null,
2025-09-17T00:39:55.739224Z	      moq: null,
2025-09-17T00:39:55.739348Z	      price: null,
2025-09-17T00:39:55.739479Z	      tiers: null
2025-09-17T00:39:55.739594Z	    },
2025-09-17T00:39:55.739714Z	    shortDescription: '11111',
2025-09-17T00:39:55.739829Z	    slug: 'sic mosfet',
2025-09-17T00:39:55.739962Z	    title: '111111'
2025-09-17T00:39:55.740065Z	  }
2025-09-17T00:39:55.740175Z	}
2025-09-17T00:39:55.74031Z	✅ [getBrandData] Found brand: Epcos
2025-09-17T00:39:55.740558Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:55.740655Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:55.740825Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-17T00:39:55.741011Z	Fetching products with query: 
2025-09-17T00:39:55.741135Z	    {
2025-09-17T00:39:55.74124Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:55.74135Z	        
2025-09-17T00:39:55.741414Z	    _id,
2025-09-17T00:39:55.741478Z	    _type,
2025-09-17T00:39:55.741544Z	    partNumber,
2025-09-17T00:39:55.741601Z	    "slug": slug.current,
2025-09-17T00:39:55.741655Z	    title,
2025-09-17T00:39:55.741708Z	    shortDescription,
2025-09-17T00:39:55.741765Z	    image,
2025-09-17T00:39:55.741818Z	    brand->{
2025-09-17T00:39:55.741872Z	      name,
2025-09-17T00:39:55.742092Z	      "slug": slug.current,
2025-09-17T00:39:55.742205Z	      logo
2025-09-17T00:39:55.742287Z	    },
2025-09-17T00:39:55.742515Z	    category->{
2025-09-17T00:39:55.742644Z	      name,
2025-09-17T00:39:55.742809Z	      "slug": slug.current
2025-09-17T00:39:55.742914Z	    },
2025-09-17T00:39:55.742973Z	    pricing{
2025-09-17T00:39:55.743041Z	      currency,
2025-09-17T00:39:55.743096Z	      tiers[]{
2025-09-17T00:39:55.743149Z	        quantity,
2025-09-17T00:39:55.743201Z	        price,
2025-09-17T00:39:55.743351Z	        unit
2025-09-17T00:39:55.743416Z	      },
2025-09-17T00:39:55.74347Z	      moq,
2025-09-17T00:39:55.743523Z	      leadTime,
2025-09-17T00:39:55.743577Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:55.743695Z	      "price": tiers[0].price,
2025-09-17T00:39:55.743821Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:55.74397Z	    },
2025-09-17T00:39:55.744084Z	    inventory{
2025-09-17T00:39:55.744144Z	      quantity,
2025-09-17T00:39:55.744259Z	      status,
2025-09-17T00:39:55.744395Z	      warehouse,
2025-09-17T00:39:55.74455Z	      lastUpdated,
2025-09-17T00:39:55.744689Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:55.744813Z	      "inStock": status == "in_stock",
2025-09-17T00:39:55.744891Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:55.745006Z	    },
2025-09-17T00:39:55.745065Z	    isActive,
2025-09-17T00:39:55.745119Z	    isFeatured,
2025-09-17T00:39:55.745209Z	    isNew,
2025-09-17T00:39:55.745281Z	    _createdAt,
2025-09-17T00:39:55.745361Z	    _updatedAt
2025-09-17T00:39:55.745491Z	  
2025-09-17T00:39:55.745552Z	      },
2025-09-17T00:39:55.745606Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-17T00:39:55.745672Z	    }
2025-09-17T00:39:55.745725Z	  
2025-09-17T00:39:55.745829Z	Query parameters: {
2025-09-17T00:39:55.745894Z	  limit: 8,
2025-09-17T00:39:55.74596Z	  offset: 0,
2025-09-17T00:39:55.746026Z	  category: undefined,
2025-09-17T00:39:55.746084Z	  brand: 'lem',
2025-09-17T00:39:55.746165Z	  featured: undefined
2025-09-17T00:39:55.74623Z	}
2025-09-17T00:39:55.746321Z	Fetching solutions with query: 
2025-09-17T00:39:55.74639Z	    {
2025-09-17T00:39:55.746446Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:55.746562Z	        
2025-09-17T00:39:55.746619Z	    _id,
2025-09-17T00:39:55.746672Z	    title,
2025-09-17T00:39:55.746725Z	    "slug": slug.current,
2025-09-17T00:39:55.746831Z	    summary,
2025-09-17T00:39:55.746894Z	    description,
2025-09-17T00:39:55.74695Z	    coverImage,
2025-09-17T00:39:55.74702Z	    primaryBrand->{
2025-09-17T00:39:55.747077Z	      _id,
2025-09-17T00:39:55.747134Z	      name,
2025-09-17T00:39:55.747215Z	      "slug": slug.current,
2025-09-17T00:39:55.747285Z	      logo
2025-09-17T00:39:55.747357Z	    },
2025-09-17T00:39:55.747438Z	    relatedBrands[]->{
2025-09-17T00:39:55.747549Z	      _id,
2025-09-17T00:39:55.747605Z	      name,
2025-09-17T00:39:55.747658Z	      "slug": slug.current,
2025-09-17T00:39:55.747741Z	      logo
2025-09-17T00:39:55.747856Z	    },
2025-09-17T00:39:55.747915Z	    targetMarket,
2025-09-17T00:39:55.747982Z	    complexity,
2025-09-17T00:39:55.748039Z	    publishedAt,
2025-09-17T00:39:55.748096Z	    isPublished,
2025-09-17T00:39:55.748178Z	    isFeatured,
2025-09-17T00:39:55.748241Z	    viewCount,
2025-09-17T00:39:55.748345Z	    _createdAt,
2025-09-17T00:39:55.748406Z	    _updatedAt
2025-09-17T00:39:55.748471Z	  
2025-09-17T00:39:55.748526Z	      },
2025-09-17T00:39:55.74858Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-17T00:39:55.74864Z	    }
2025-09-17T00:39:55.748693Z	  
2025-09-17T00:39:55.749799Z	Query parameters: {
2025-09-17T00:39:55.750128Z	  limit: 4,
2025-09-17T00:39:55.75044Z	  offset: 0,
2025-09-17T00:39:55.750532Z	  targetMarket: undefined,
2025-09-17T00:39:55.750594Z	  brand: 'lem',
2025-09-17T00:39:55.75065Z	  featured: undefined
2025-09-17T00:39:55.750974Z	}
2025-09-17T00:39:55.751099Z	✅ [getBrandData] Found brand: LEM
2025-09-17T00:39:55.7512Z	Products fetch result: {
2025-09-17T00:39:55.751293Z	  totalProducts: 3,
2025-09-17T00:39:55.751637Z	  fetchedProducts: 3,
2025-09-17T00:39:55.751826Z	  firstProduct: {
2025-09-17T00:39:55.75204Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-17T00:39:55.752129Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-17T00:39:55.752195Z	    _type: 'product',
2025-09-17T00:39:55.752257Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-17T00:39:55.752371Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-17T00:39:55.765465Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-17T00:39:55.765535Z	    image: null,
2025-09-17T00:39:55.765596Z	    inventory: {
2025-09-17T00:39:55.765658Z	      inStock: true,
2025-09-17T00:39:55.76584Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-17T00:39:55.765903Z	      quantity: 0,
2025-09-17T00:39:55.76596Z	      status: 'in_stock',
2025-09-17T00:39:55.766027Z	      warehouse: null
2025-09-17T00:39:55.766085Z	    },
2025-09-17T00:39:55.766154Z	    isActive: true,
2025-09-17T00:39:55.766224Z	    isFeatured: false,
2025-09-17T00:39:55.766324Z	    isNew: false,
2025-09-17T00:39:55.766395Z	    partNumber: 'la55-p',
2025-09-17T00:39:55.766451Z	    pricing: {
2025-09-17T00:39:55.766505Z	      currency: 'CNY',
2025-09-17T00:39:55.766562Z	      leadTime: null,
2025-09-17T00:39:55.766626Z	      moq: null,
2025-09-17T00:39:55.766685Z	      price: null,
2025-09-17T00:39:55.766743Z	      tiers: null
2025-09-17T00:39:55.766805Z	    },
2025-09-17T00:39:55.766866Z	    shortDescription: '电流传感器la55-p',
2025-09-17T00:39:55.766932Z	    slug: 'la55-p',
2025-09-17T00:39:55.766994Z	    title: '电流传感器la55-p'
2025-09-17T00:39:55.767056Z	  }
2025-09-17T00:39:55.767115Z	}
2025-09-17T00:39:55.76717Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:55.767226Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-17T00:39:55.767317Z	Fetching products with query: 
2025-09-17T00:39:55.767395Z	    {
2025-09-17T00:39:55.76746Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:55.767524Z	        
2025-09-17T00:39:55.767579Z	    _id,
2025-09-17T00:39:55.767636Z	    _type,
2025-09-17T00:39:55.767693Z	    partNumber,
2025-09-17T00:39:55.76775Z	    "slug": slug.current,
2025-09-17T00:39:55.767805Z	    title,
2025-09-17T00:39:55.767858Z	    shortDescription,
2025-09-17T00:39:55.767912Z	    image,
2025-09-17T00:39:55.767966Z	    brand->{
2025-09-17T00:39:55.768031Z	      name,
2025-09-17T00:39:55.768086Z	      "slug": slug.current,
2025-09-17T00:39:55.768141Z	      logo
2025-09-17T00:39:55.768195Z	    },
2025-09-17T00:39:55.768256Z	    category->{
2025-09-17T00:39:55.768339Z	      name,
2025-09-17T00:39:55.77131Z	      "slug": slug.current
2025-09-17T00:39:55.771497Z	    },
2025-09-17T00:39:55.771679Z	    pricing{
2025-09-17T00:39:55.772013Z	      currency,
2025-09-17T00:39:55.772112Z	      tiers[]{
2025-09-17T00:39:55.772172Z	        quantity,
2025-09-17T00:39:55.772232Z	        price,
2025-09-17T00:39:55.772318Z	        unit
2025-09-17T00:39:55.772388Z	      },
2025-09-17T00:39:55.772443Z	      moq,
2025-09-17T00:39:55.772521Z	      leadTime,
2025-09-17T00:39:55.772601Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:55.772729Z	      "price": tiers[0].price,
2025-09-17T00:39:55.772785Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:55.77284Z	    },
2025-09-17T00:39:55.772893Z	    inventory{
2025-09-17T00:39:55.772952Z	      quantity,
2025-09-17T00:39:55.773006Z	      status,
2025-09-17T00:39:55.773062Z	      warehouse,
2025-09-17T00:39:55.773116Z	      lastUpdated,
2025-09-17T00:39:55.773171Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:55.773226Z	      "inStock": status == "in_stock",
2025-09-17T00:39:55.773312Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:55.773391Z	    },
2025-09-17T00:39:55.773459Z	    isActive,
2025-09-17T00:39:55.77352Z	    isFeatured,
2025-09-17T00:39:55.773582Z	    isNew,
2025-09-17T00:39:55.773636Z	    _createdAt,
2025-09-17T00:39:55.773692Z	    _updatedAt
2025-09-17T00:39:55.773766Z	  
2025-09-17T00:39:55.773823Z	      },
2025-09-17T00:39:55.773877Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-17T00:39:55.773944Z	    }
2025-09-17T00:39:55.774005Z	  
2025-09-17T00:39:55.774062Z	Query parameters: {
2025-09-17T00:39:55.774118Z	  limit: 8,
2025-09-17T00:39:55.774175Z	  offset: 0,
2025-09-17T00:39:55.774243Z	  category: undefined,
2025-09-17T00:39:55.774326Z	  brand: 'lem',
2025-09-17T00:39:55.774387Z	  featured: undefined
2025-09-17T00:39:55.774447Z	}
2025-09-17T00:39:55.774501Z	Fetching solutions with query: 
2025-09-17T00:39:55.774557Z	    {
2025-09-17T00:39:55.774611Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:55.774672Z	        
2025-09-17T00:39:55.774727Z	    _id,
2025-09-17T00:39:55.774785Z	    title,
2025-09-17T00:39:55.774838Z	    "slug": slug.current,
2025-09-17T00:39:55.774892Z	    summary,
2025-09-17T00:39:55.774953Z	    description,
2025-09-17T00:39:55.775009Z	    coverImage,
2025-09-17T00:39:55.775063Z	    primaryBrand->{
2025-09-17T00:39:55.77512Z	      _id,
2025-09-17T00:39:55.775172Z	      name,
2025-09-17T00:39:55.775225Z	      "slug": slug.current,
2025-09-17T00:39:55.775347Z	      logo
2025-09-17T00:39:55.775417Z	    },
2025-09-17T00:39:55.77553Z	    relatedBrands[]->{
2025-09-17T00:39:55.775622Z	      _id,
2025-09-17T00:39:55.775685Z	      name,
2025-09-17T00:39:55.775741Z	      "slug": slug.current,
2025-09-17T00:39:55.775795Z	      logo
2025-09-17T00:39:55.775847Z	    },
2025-09-17T00:39:55.775905Z	    targetMarket,
2025-09-17T00:39:55.77596Z	    complexity,
2025-09-17T00:39:55.776027Z	    publishedAt,
2025-09-17T00:39:55.776093Z	    isPublished,
2025-09-17T00:39:55.776147Z	    isFeatured,
2025-09-17T00:39:55.776201Z	    viewCount,
2025-09-17T00:39:55.776259Z	    _createdAt,
2025-09-17T00:39:55.776328Z	    _updatedAt
2025-09-17T00:39:55.776383Z	  
2025-09-17T00:39:55.776437Z	      },
2025-09-17T00:39:55.77649Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-17T00:39:55.776546Z	    }
2025-09-17T00:39:55.776605Z	  
2025-09-17T00:39:55.776658Z	Query parameters: {
2025-09-17T00:39:55.776715Z	  limit: 4,
2025-09-17T00:39:55.776772Z	  offset: 0,
2025-09-17T00:39:55.776825Z	  targetMarket: undefined,
2025-09-17T00:39:55.776879Z	  brand: 'lem',
2025-09-17T00:39:55.776939Z	  featured: undefined
2025-09-17T00:39:55.776992Z	}
2025-09-17T00:39:55.777046Z	✅ [getBrandData] Found brand: LEM
2025-09-17T00:39:55.777102Z	Products fetch result: {
2025-09-17T00:39:55.777156Z	  totalProducts: 3,
2025-09-17T00:39:55.777208Z	  fetchedProducts: 3,
2025-09-17T00:39:55.77726Z	  firstProduct: {
2025-09-17T00:39:55.787476Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-17T00:39:55.787636Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-17T00:39:55.787767Z	    _type: 'product',
2025-09-17T00:39:55.787889Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-17T00:39:55.788012Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-17T00:39:55.788124Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-17T00:39:55.78822Z	    image: null,
2025-09-17T00:39:55.788338Z	    inventory: {
2025-09-17T00:39:55.788452Z	      inStock: true,
2025-09-17T00:39:55.788555Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-17T00:39:55.788649Z	      quantity: 0,
2025-09-17T00:39:55.788745Z	      status: 'in_stock',
2025-09-17T00:39:55.788839Z	      warehouse: null
2025-09-17T00:39:55.78894Z	    },
2025-09-17T00:39:55.789041Z	    isActive: true,
2025-09-17T00:39:55.789144Z	    isFeatured: false,
2025-09-17T00:39:55.789232Z	    isNew: false,
2025-09-17T00:39:55.789348Z	    partNumber: 'la55-p',
2025-09-17T00:39:55.789443Z	    pricing: {
2025-09-17T00:39:55.789536Z	      currency: 'CNY',
2025-09-17T00:39:55.789633Z	      leadTime: null,
2025-09-17T00:39:55.789725Z	      moq: null,
2025-09-17T00:39:55.789816Z	      price: null,
2025-09-17T00:39:55.789929Z	      tiers: null
2025-09-17T00:39:55.790019Z	    },
2025-09-17T00:39:55.790132Z	    shortDescription: '电流传感器la55-p',
2025-09-17T00:39:55.790234Z	    slug: 'la55-p',
2025-09-17T00:39:55.790431Z	    title: '电流传感器la55-p'
2025-09-17T00:39:55.790537Z	  }
2025-09-17T00:39:55.790641Z	}
2025-09-17T00:39:55.790734Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:55.790839Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:55.790965Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:55.791062Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:55.791167Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:55.79128Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:55.791401Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:55.791511Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-17T00:39:55.791608Z	Fetching products with query: 
2025-09-17T00:39:55.791695Z	    {
2025-09-17T00:39:55.791791Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:55.791893Z	        
2025-09-17T00:39:55.792098Z	    _id,
2025-09-17T00:39:55.792217Z	    _type,
2025-09-17T00:39:55.79234Z	    partNumber,
2025-09-17T00:39:55.792441Z	    "slug": slug.current,
2025-09-17T00:39:55.792547Z	    title,
2025-09-17T00:39:55.79264Z	    shortDescription,
2025-09-17T00:39:55.792709Z	    image,
2025-09-17T00:39:55.792771Z	    brand->{
2025-09-17T00:39:55.792832Z	      name,
2025-09-17T00:39:55.792902Z	      "slug": slug.current,
2025-09-17T00:39:55.793Z	      logo
2025-09-17T00:39:55.793077Z	    },
2025-09-17T00:39:55.79317Z	    category->{
2025-09-17T00:39:55.793262Z	      name,
2025-09-17T00:39:55.79338Z	      "slug": slug.current
2025-09-17T00:39:55.793514Z	    },
2025-09-17T00:39:55.793615Z	    pricing{
2025-09-17T00:39:55.793733Z	      currency,
2025-09-17T00:39:55.793835Z	      tiers[]{
2025-09-17T00:39:55.793943Z	        quantity,
2025-09-17T00:39:55.794044Z	        price,
2025-09-17T00:39:55.794145Z	        unit
2025-09-17T00:39:55.79423Z	      },
2025-09-17T00:39:55.794336Z	      moq,
2025-09-17T00:39:55.794409Z	      leadTime,
2025-09-17T00:39:55.794509Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:55.794609Z	      "price": tiers[0].price,
2025-09-17T00:39:55.794747Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:55.794851Z	    },
2025-09-17T00:39:55.794955Z	    inventory{
2025-09-17T00:39:55.795067Z	      quantity,
2025-09-17T00:39:55.795169Z	      status,
2025-09-17T00:39:55.795262Z	      warehouse,
2025-09-17T00:39:55.795387Z	      lastUpdated,
2025-09-17T00:39:55.795485Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:55.795577Z	      "inStock": status == "in_stock",
2025-09-17T00:39:55.795647Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:55.795733Z	    },
2025-09-17T00:39:55.795801Z	    isActive,
2025-09-17T00:39:55.79592Z	    isFeatured,
2025-09-17T00:39:55.796013Z	    isNew,
2025-09-17T00:39:55.796108Z	    _createdAt,
2025-09-17T00:39:55.796202Z	    _updatedAt
2025-09-17T00:39:55.796308Z	  
2025-09-17T00:39:55.796413Z	      },
2025-09-17T00:39:55.796505Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-17T00:39:55.7966Z	    }
2025-09-17T00:39:55.796704Z	  
2025-09-17T00:39:55.796789Z	Query parameters: {
2025-09-17T00:39:55.796867Z	  limit: 8,
2025-09-17T00:39:55.797244Z	  offset: 0,
2025-09-17T00:39:55.797383Z	  category: undefined,
2025-09-17T00:39:55.797493Z	  brand: 'ixys',
2025-09-17T00:39:55.79759Z	  featured: undefined
2025-09-17T00:39:55.797841Z	}
2025-09-17T00:39:55.797985Z	Fetching solutions with query: 
2025-09-17T00:39:55.79815Z	    {
2025-09-17T00:39:55.798257Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:55.798378Z	        
2025-09-17T00:39:55.798472Z	    _id,
2025-09-17T00:39:55.798546Z	    title,
2025-09-17T00:39:55.798633Z	    "slug": slug.current,
2025-09-17T00:39:55.798726Z	    summary,
2025-09-17T00:39:55.798827Z	    description,
2025-09-17T00:39:55.798934Z	    coverImage,
2025-09-17T00:39:55.799028Z	    primaryBrand->{
2025-09-17T00:39:55.799139Z	      _id,
2025-09-17T00:39:55.799238Z	      name,
2025-09-17T00:39:55.799348Z	      "slug": slug.current,
2025-09-17T00:39:55.799451Z	      logo
2025-09-17T00:39:55.799542Z	    },
2025-09-17T00:39:55.79965Z	    relatedBrands[]->{
2025-09-17T00:39:55.799726Z	      _id,
2025-09-17T00:39:55.799806Z	      name,
2025-09-17T00:39:55.799907Z	      "slug": slug.current,
2025-09-17T00:39:55.800014Z	      logo
2025-09-17T00:39:55.800115Z	    },
2025-09-17T00:39:55.800204Z	    targetMarket,
2025-09-17T00:39:55.800372Z	    complexity,
2025-09-17T00:39:55.800492Z	    publishedAt,
2025-09-17T00:39:55.800595Z	    isPublished,
2025-09-17T00:39:55.800659Z	    isFeatured,
2025-09-17T00:39:55.800716Z	    viewCount,
2025-09-17T00:39:55.800772Z	    _createdAt,
2025-09-17T00:39:55.800867Z	    _updatedAt
2025-09-17T00:39:55.800964Z	  
2025-09-17T00:39:55.801056Z	      },
2025-09-17T00:39:55.801148Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-17T00:39:55.801254Z	    }
2025-09-17T00:39:55.801362Z	  
2025-09-17T00:39:55.80146Z	Query parameters: {
2025-09-17T00:39:55.801552Z	  limit: 4,
2025-09-17T00:39:55.801665Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:55.801807Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:55.801965Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-17T00:39:55.802074Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:39:55.802172Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619) {
2025-09-17T00:39:55.80229Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:39:55.802412Z	}
2025-09-17T00:39:55.802522Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:55.80262Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:55.802719Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-17T00:39:55.802818Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:39:55.802883Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619) {
2025-09-17T00:39:55.80295Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:39:55.803009Z	}
2025-09-17T00:39:55.803065Z	  offset: 0,
2025-09-17T00:39:55.803134Z	  targetMarket: undefined,
2025-09-17T00:39:55.803227Z	  brand: 'ixys',
2025-09-17T00:39:55.803347Z	  featured: undefined
2025-09-17T00:39:55.804219Z	}
2025-09-17T00:39:55.804445Z	✅ [getBrandData] Found brand: IXYS
2025-09-17T00:39:55.804518Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:55.804577Z	Solutions fetch result: {
2025-09-17T00:39:55.804633Z	  totalSolutions: 1,
2025-09-17T00:39:55.804692Z	  fetchedSolutions: 1,
2025-09-17T00:39:55.80475Z	  firstSolution: {
2025-09-17T00:39:55.804804Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-17T00:39:55.804868Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-17T00:39:55.804937Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-17T00:39:55.804994Z	    complexity: 'medium',
2025-09-17T00:39:55.805055Z	    coverImage: null,
2025-09-17T00:39:55.805112Z	    description: [ [Object] ],
2025-09-17T00:39:55.805167Z	    isFeatured: false,
2025-09-17T00:39:55.80522Z	    isPublished: true,
2025-09-17T00:39:55.805295Z	    primaryBrand: {
2025-09-17T00:39:55.805363Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:55.805419Z	      logo: null,
2025-09-17T00:39:55.805474Z	      name: 'IXYS',
2025-09-17T00:39:55.805527Z	      slug: 'ixys'
2025-09-17T00:39:55.80558Z	    },
2025-09-17T00:39:55.805635Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-17T00:39:55.805691Z	    relatedBrands: null,
2025-09-17T00:39:55.805745Z	    slug: '99999',
2025-09-17T00:39:55.805799Z	    summary: '99999',
2025-09-17T00:39:55.805852Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:55.805914Z	    title: '99999',
2025-09-17T00:39:55.805977Z	    viewCount: 0
2025-09-17T00:39:55.806031Z	  }
2025-09-17T00:39:55.806084Z	}
2025-09-17T00:39:55.80614Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-17T00:39:55.806196Z	Fetching products with query: 
2025-09-17T00:39:55.80625Z	    {
2025-09-17T00:39:55.80633Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:55.806433Z	        
2025-09-17T00:39:55.806582Z	    _id,
2025-09-17T00:39:55.807245Z	    _type,
2025-09-17T00:39:55.807403Z	    partNumber,
2025-09-17T00:39:55.807479Z	    "slug": slug.current,
2025-09-17T00:39:55.807538Z	    title,
2025-09-17T00:39:55.807595Z	    shortDescription,
2025-09-17T00:39:55.80766Z	    image,
2025-09-17T00:39:55.807724Z	    brand->{
2025-09-17T00:39:55.807781Z	      name,
2025-09-17T00:39:55.807835Z	      "slug": slug.current,
2025-09-17T00:39:55.807889Z	      logo
2025-09-17T00:39:55.80796Z	    },
2025-09-17T00:39:55.808021Z	    category->{
2025-09-17T00:39:55.808087Z	      name,
2025-09-17T00:39:55.808153Z	      "slug": slug.current
2025-09-17T00:39:55.808211Z	    },
2025-09-17T00:39:55.80829Z	    pricing{
2025-09-17T00:39:55.808404Z	      currency,
2025-09-17T00:39:55.808498Z	      tiers[]{
2025-09-17T00:39:55.8086Z	        quantity,
2025-09-17T00:39:55.808732Z	        price,
2025-09-17T00:39:55.808872Z	        unit
2025-09-17T00:39:55.809Z	      },
2025-09-17T00:39:55.809124Z	      moq,
2025-09-17T00:39:55.809246Z	      leadTime,
2025-09-17T00:39:55.809373Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:55.809469Z	      "price": tiers[0].price,
2025-09-17T00:39:55.80959Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:55.809694Z	    },
2025-09-17T00:39:55.809799Z	    inventory{
2025-09-17T00:39:55.809901Z	      quantity,
2025-09-17T00:39:55.810015Z	      status,
2025-09-17T00:39:55.810114Z	      warehouse,
2025-09-17T00:39:55.810213Z	      lastUpdated,
2025-09-17T00:39:55.810329Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:55.810432Z	      "inStock": status == "in_stock",
2025-09-17T00:39:55.810523Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:55.810636Z	    },
2025-09-17T00:39:55.810709Z	    isActive,
2025-09-17T00:39:55.810765Z	    isFeatured,
2025-09-17T00:39:55.810849Z	    isNew,
2025-09-17T00:39:55.81095Z	    _createdAt,
2025-09-17T00:39:55.811127Z	    _updatedAt
2025-09-17T00:39:55.811374Z	  
2025-09-17T00:39:55.811511Z	      },
2025-09-17T00:39:55.811772Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-17T00:39:55.811857Z	    }
2025-09-17T00:39:55.812006Z	  
2025-09-17T00:39:55.81219Z	Query parameters: {
2025-09-17T00:39:55.812354Z	  limit: 8,
2025-09-17T00:39:55.812497Z	  offset: 0,
2025-09-17T00:39:55.812637Z	  category: undefined,
2025-09-17T00:39:55.81282Z	  brand: 'ixys',
2025-09-17T00:39:55.812908Z	  featured: undefined
2025-09-17T00:39:55.812971Z	}
2025-09-17T00:39:55.813031Z	Fetching solutions with query: 
2025-09-17T00:39:55.813101Z	    {
2025-09-17T00:39:55.813159Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:55.813239Z	        
2025-09-17T00:39:55.813327Z	    _id,
2025-09-17T00:39:55.813389Z	    title,
2025-09-17T00:39:55.813447Z	    "slug": slug.current,
2025-09-17T00:39:55.813505Z	    summary,
2025-09-17T00:39:55.813559Z	    description,
2025-09-17T00:39:55.813614Z	    coverImage,
2025-09-17T00:39:55.813674Z	    primaryBrand->{
2025-09-17T00:39:55.813729Z	      _id,
2025-09-17T00:39:55.813792Z	      name,
2025-09-17T00:39:55.813847Z	      "slug": slug.current,
2025-09-17T00:39:55.813907Z	      logo
2025-09-17T00:39:55.813963Z	    },
2025-09-17T00:39:55.814016Z	    relatedBrands[]->{
2025-09-17T00:39:55.814071Z	      _id,
2025-09-17T00:39:55.814127Z	      name,
2025-09-17T00:39:55.81418Z	      "slug": slug.current,
2025-09-17T00:39:55.814233Z	      logo
2025-09-17T00:39:55.814308Z	    },
2025-09-17T00:39:55.814378Z	    targetMarket,
2025-09-17T00:39:55.814439Z	    complexity,
2025-09-17T00:39:55.814494Z	    publishedAt,
2025-09-17T00:39:55.814554Z	    isPublished,
2025-09-17T00:39:55.81461Z	    isFeatured,
2025-09-17T00:39:55.814671Z	    viewCount,
2025-09-17T00:39:55.814727Z	    _createdAt,
2025-09-17T00:39:55.814783Z	    _updatedAt
2025-09-17T00:39:55.814839Z	  
2025-09-17T00:39:55.814894Z	      },
2025-09-17T00:39:55.814957Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-17T00:39:55.815017Z	    }
2025-09-17T00:39:55.815071Z	  
2025-09-17T00:39:55.815131Z	Query parameters: {
2025-09-17T00:39:55.815187Z	  limit: 4,
2025-09-17T00:39:55.815248Z	  offset: 0,
2025-09-17T00:39:55.815402Z	  targetMarket: undefined,
2025-09-17T00:39:55.815586Z	  brand: 'ixys',
2025-09-17T00:39:55.815735Z	  featured: undefined
2025-09-17T00:39:55.815847Z	}
2025-09-17T00:39:55.816034Z	✅ [getBrandData] Found brand: IXYS
2025-09-17T00:39:55.816185Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:55.816309Z	Solutions fetch result: {
2025-09-17T00:39:55.81642Z	  totalSolutions: 1,
2025-09-17T00:39:55.816642Z	  fetchedSolutions: 1,
2025-09-17T00:39:55.816784Z	  firstSolution: {
2025-09-17T00:39:55.816968Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-17T00:39:55.817088Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-17T00:39:55.817158Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-17T00:39:55.817216Z	    complexity: 'medium',
2025-09-17T00:39:55.817301Z	    coverImage: null,
2025-09-17T00:39:55.817365Z	    description: [ [Object] ],
2025-09-17T00:39:55.817425Z	    isFeatured: false,
2025-09-17T00:39:55.817491Z	    isPublished: true,
2025-09-17T00:39:55.817549Z	    primaryBrand: {
2025-09-17T00:39:55.817604Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:55.817663Z	      logo: null,
2025-09-17T00:39:55.817729Z	      name: 'IXYS',
2025-09-17T00:39:55.817786Z	      slug: 'ixys'
2025-09-17T00:39:55.817859Z	    },
2025-09-17T00:39:55.817921Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-17T00:39:55.817978Z	    relatedBrands: null,
2025-09-17T00:39:55.818032Z	    slug: '99999',
2025-09-17T00:39:55.818094Z	    summary: '99999',
2025-09-17T00:39:55.818148Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:55.818302Z	    title: '99999',
2025-09-17T00:39:55.818471Z	    viewCount: 0
2025-09-17T00:39:55.81859Z	  }
2025-09-17T00:39:55.818728Z	}
2025-09-17T00:39:55.818839Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-17T00:39:55.818955Z	Fetching products with query: 
2025-09-17T00:39:55.819067Z	    {
2025-09-17T00:39:55.819164Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:55.81928Z	        
2025-09-17T00:39:55.819396Z	    _id,
2025-09-17T00:39:55.819475Z	    _type,
2025-09-17T00:39:55.819545Z	    partNumber,
2025-09-17T00:39:55.819649Z	    "slug": slug.current,
2025-09-17T00:39:55.819758Z	    title,
2025-09-17T00:39:55.819866Z	    shortDescription,
2025-09-17T00:39:55.819965Z	    image,
2025-09-17T00:39:55.82006Z	    brand->{
2025-09-17T00:39:55.820163Z	      name,
2025-09-17T00:39:55.820257Z	      "slug": slug.current,
2025-09-17T00:39:55.820382Z	      logo
2025-09-17T00:39:55.820485Z	    },
2025-09-17T00:39:55.820583Z	    category->{
2025-09-17T00:39:55.820687Z	      name,
2025-09-17T00:39:55.820794Z	      "slug": slug.current
2025-09-17T00:39:55.820873Z	    },
2025-09-17T00:39:55.820955Z	    pricing{
2025-09-17T00:39:55.821093Z	      currency,
2025-09-17T00:39:55.821286Z	      tiers[]{
2025-09-17T00:39:55.821425Z	        quantity,
2025-09-17T00:39:55.821545Z	        price,
2025-09-17T00:39:55.82174Z	        unit
2025-09-17T00:39:55.821817Z	      },
2025-09-17T00:39:55.821924Z	      moq,
2025-09-17T00:39:55.822029Z	      leadTime,
2025-09-17T00:39:55.822177Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:55.822258Z	      "price": tiers[0].price,
2025-09-17T00:39:55.822398Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:55.822618Z	    },
2025-09-17T00:39:55.822728Z	    inventory{
2025-09-17T00:39:55.822962Z	      quantity,
2025-09-17T00:39:55.823068Z	      status,
2025-09-17T00:39:55.82317Z	      warehouse,
2025-09-17T00:39:55.823282Z	      lastUpdated,
2025-09-17T00:39:55.823374Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:55.823453Z	      "inStock": status == "in_stock",
2025-09-17T00:39:55.823511Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:55.823568Z	    },
2025-09-17T00:39:55.823623Z	    isActive,
2025-09-17T00:39:55.823684Z	    isFeatured,
2025-09-17T00:39:55.823738Z	    isNew,
2025-09-17T00:39:55.82379Z	    _createdAt,
2025-09-17T00:39:55.823843Z	    _updatedAt
2025-09-17T00:39:55.823895Z	  
2025-09-17T00:39:55.823954Z	      },
2025-09-17T00:39:55.824006Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-17T00:39:55.824065Z	    }
2025-09-17T00:39:55.824119Z	  
2025-09-17T00:39:55.824172Z	Query parameters: {
2025-09-17T00:39:55.824224Z	  limit: 8,
2025-09-17T00:39:55.824297Z	  offset: 0,
2025-09-17T00:39:55.824363Z	  category: undefined,
2025-09-17T00:39:55.824418Z	  brand: 'littelfuse',
2025-09-17T00:39:55.824472Z	  featured: undefined
2025-09-17T00:39:55.824524Z	}
2025-09-17T00:39:55.824577Z	Fetching solutions with query: 
2025-09-17T00:39:55.824637Z	    {
2025-09-17T00:39:55.824699Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:55.82476Z	        
2025-09-17T00:39:55.824814Z	    _id,
2025-09-17T00:39:55.824866Z	    title,
2025-09-17T00:39:55.824919Z	    "slug": slug.current,
2025-09-17T00:39:55.824972Z	    summary,
2025-09-17T00:39:55.825024Z	    description,
2025-09-17T00:39:55.825076Z	    coverImage,
2025-09-17T00:39:55.825128Z	    primaryBrand->{
2025-09-17T00:39:55.82518Z	      _id,
2025-09-17T00:39:55.825232Z	      name,
2025-09-17T00:39:55.825299Z	      "slug": slug.current,
2025-09-17T00:39:55.825356Z	      logo
2025-09-17T00:39:55.825409Z	    },
2025-09-17T00:39:55.825462Z	    relatedBrands[]->{
2025-09-17T00:39:55.825515Z	      _id,
2025-09-17T00:39:55.825567Z	      name,
2025-09-17T00:39:55.825621Z	      "slug": slug.current,
2025-09-17T00:39:55.825689Z	      logo
2025-09-17T00:39:55.825743Z	    },
2025-09-17T00:39:55.825799Z	    targetMarket,
2025-09-17T00:39:55.82586Z	    complexity,
2025-09-17T00:39:55.825916Z	    publishedAt,
2025-09-17T00:39:55.82597Z	    isPublished,
2025-09-17T00:39:55.826023Z	    isFeatured,
2025-09-17T00:39:55.826075Z	    viewCount,
2025-09-17T00:39:55.826128Z	    _createdAt,
2025-09-17T00:39:55.82618Z	    _updatedAt
2025-09-17T00:39:55.826232Z	  
2025-09-17T00:39:55.826365Z	      },
2025-09-17T00:39:55.826428Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-17T00:39:55.826484Z	    }
2025-09-17T00:39:55.826537Z	  
2025-09-17T00:39:55.82659Z	Query parameters: {
2025-09-17T00:39:55.826669Z	  limit: 4,
2025-09-17T00:39:55.826731Z	  offset: 0,
2025-09-17T00:39:55.826785Z	  targetMarket: undefined,
2025-09-17T00:39:55.826839Z	  brand: 'littelfuse',
2025-09-17T00:39:55.826892Z	  featured: undefined
2025-09-17T00:39:55.826946Z	}
2025-09-17T00:39:55.82709Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-17T00:39:55.827191Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:55.827258Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:55.827351Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-17T00:39:55.827415Z	Fetching products with query: 
2025-09-17T00:39:55.827472Z	    {
2025-09-17T00:39:55.827531Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:55.827656Z	        
2025-09-17T00:39:55.827781Z	    _id,
2025-09-17T00:39:55.827933Z	    _type,
2025-09-17T00:39:55.828035Z	    partNumber,
2025-09-17T00:39:55.828094Z	    "slug": slug.current,
2025-09-17T00:39:55.828151Z	    title,
2025-09-17T00:39:55.828216Z	    shortDescription,
2025-09-17T00:39:55.828281Z	    image,
2025-09-17T00:39:55.82834Z	    brand->{
2025-09-17T00:39:55.828396Z	      name,
2025-09-17T00:39:55.828751Z	      "slug": slug.current,
2025-09-17T00:39:55.828875Z	      logo
2025-09-17T00:39:55.828974Z	    },
2025-09-17T00:39:55.829071Z	    category->{
2025-09-17T00:39:55.829169Z	      name,
2025-09-17T00:39:55.829299Z	      "slug": slug.current
2025-09-17T00:39:55.829417Z	    },
2025-09-17T00:39:55.829516Z	    pricing{
2025-09-17T00:39:55.829626Z	      currency,
2025-09-17T00:39:55.829734Z	      tiers[]{
2025-09-17T00:39:55.829901Z	        quantity,
2025-09-17T00:39:55.830003Z	        price,
2025-09-17T00:39:55.830094Z	        unit
2025-09-17T00:39:55.830198Z	      },
2025-09-17T00:39:55.830315Z	      moq,
2025-09-17T00:39:55.830418Z	      leadTime,
2025-09-17T00:39:55.830519Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:55.830624Z	      "price": tiers[0].price,
2025-09-17T00:39:55.830738Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:55.830838Z	    },
2025-09-17T00:39:55.83093Z	    inventory{
2025-09-17T00:39:55.831018Z	      quantity,
2025-09-17T00:39:55.831116Z	      status,
2025-09-17T00:39:55.831217Z	      warehouse,
2025-09-17T00:39:55.831336Z	      lastUpdated,
2025-09-17T00:39:55.831432Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:55.831494Z	      "inStock": status == "in_stock",
2025-09-17T00:39:55.831549Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:55.83161Z	    },
2025-09-17T00:39:55.831672Z	    isActive,
2025-09-17T00:39:55.831736Z	    isFeatured,
2025-09-17T00:39:55.831796Z	    isNew,
2025-09-17T00:39:55.831852Z	    _createdAt,
2025-09-17T00:39:55.831906Z	    _updatedAt
2025-09-17T00:39:55.83196Z	  
2025-09-17T00:39:55.832014Z	      },
2025-09-17T00:39:55.832066Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-17T00:39:55.832119Z	    }
2025-09-17T00:39:55.832173Z	  
2025-09-17T00:39:55.832225Z	Query parameters: {
2025-09-17T00:39:55.832303Z	  limit: 8,
2025-09-17T00:39:55.83239Z	  offset: 0,
2025-09-17T00:39:55.832474Z	  category: undefined,
2025-09-17T00:39:55.83255Z	  brand: 'littelfuse',
2025-09-17T00:39:55.832646Z	  featured: undefined
2025-09-17T00:39:55.832752Z	}
2025-09-17T00:39:55.83285Z	Fetching solutions with query: 
2025-09-17T00:39:55.833238Z	    {
2025-09-17T00:39:55.833448Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:55.833709Z	        
2025-09-17T00:39:55.833857Z	    _id,
2025-09-17T00:39:55.834233Z	    title,
2025-09-17T00:39:55.834545Z	    "slug": slug.current,
2025-09-17T00:39:55.834651Z	    summary,
2025-09-17T00:39:55.834807Z	    description,
2025-09-17T00:39:55.834938Z	    coverImage,
2025-09-17T00:39:55.835017Z	    primaryBrand->{
2025-09-17T00:39:55.835074Z	      _id,
2025-09-17T00:39:55.835347Z	      name,
2025-09-17T00:39:55.835448Z	      "slug": slug.current,
2025-09-17T00:39:55.835678Z	      logo
2025-09-17T00:39:55.835758Z	    },
2025-09-17T00:39:55.835957Z	    relatedBrands[]->{
2025-09-17T00:39:55.836045Z	      _id,
2025-09-17T00:39:55.836243Z	      name,
2025-09-17T00:39:55.836446Z	      "slug": slug.current,
2025-09-17T00:39:55.836531Z	      logo
2025-09-17T00:39:55.836614Z	    },
2025-09-17T00:39:55.836891Z	    targetMarket,
2025-09-17T00:39:55.83714Z	    complexity,
2025-09-17T00:39:55.837256Z	    publishedAt,
2025-09-17T00:39:55.837364Z	    isPublished,
2025-09-17T00:39:55.837467Z	    isFeatured,
2025-09-17T00:39:55.837574Z	    viewCount,
2025-09-17T00:39:55.837752Z	    _createdAt,
2025-09-17T00:39:55.837862Z	    _updatedAt
2025-09-17T00:39:55.837964Z	  
2025-09-17T00:39:55.838063Z	      },
2025-09-17T00:39:55.838146Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-17T00:39:55.83829Z	    }
2025-09-17T00:39:55.838442Z	  
2025-09-17T00:39:55.838518Z	Query parameters: {
2025-09-17T00:39:55.838575Z	  limit: 4,
2025-09-17T00:39:55.838734Z	  offset: 0,
2025-09-17T00:39:55.838818Z	  targetMarket: undefined,
2025-09-17T00:39:55.838943Z	  brand: 'littelfuse',
2025-09-17T00:39:55.839078Z	  featured: undefined
2025-09-17T00:39:55.839248Z	}
2025-09-17T00:39:55.839421Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-17T00:39:55.839526Z	Fetching products with query: 
2025-09-17T00:39:55.839621Z	    {
2025-09-17T00:39:55.839718Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:55.839822Z	        
2025-09-17T00:39:55.839923Z	    _id,
2025-09-17T00:39:55.840023Z	    _type,
2025-09-17T00:39:55.840171Z	    partNumber,
2025-09-17T00:39:55.840348Z	    "slug": slug.current,
2025-09-17T00:39:55.840524Z	    title,
2025-09-17T00:39:55.840761Z	    shortDescription,
2025-09-17T00:39:55.840832Z	    image,
2025-09-17T00:39:55.840915Z	    brand->{
2025-09-17T00:39:55.84125Z	      name,
2025-09-17T00:39:55.841507Z	      "slug": slug.current,
2025-09-17T00:39:55.841757Z	      logo
2025-09-17T00:39:55.841853Z	    },
2025-09-17T00:39:55.841919Z	    category->{
2025-09-17T00:39:55.842127Z	      name,
2025-09-17T00:39:55.84225Z	      "slug": slug.current
2025-09-17T00:39:55.842399Z	    },
2025-09-17T00:39:55.842517Z	    pricing{
2025-09-17T00:39:55.842638Z	      currency,
2025-09-17T00:39:55.843357Z	      tiers[]{
2025-09-17T00:39:55.843494Z	        quantity,
2025-09-17T00:39:55.843593Z	        price,
2025-09-17T00:39:55.843686Z	        unit
2025-09-17T00:39:55.843775Z	      },
2025-09-17T00:39:55.843869Z	      moq,
2025-09-17T00:39:55.843965Z	      leadTime,
2025-09-17T00:39:55.844075Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:55.844175Z	      "price": tiers[0].price,
2025-09-17T00:39:55.844264Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:55.844379Z	    },
2025-09-17T00:39:55.844723Z	    inventory{
2025-09-17T00:39:55.844957Z	      quantity,
2025-09-17T00:39:55.845057Z	      status,
2025-09-17T00:39:55.845163Z	      warehouse,
2025-09-17T00:39:55.845287Z	      lastUpdated,
2025-09-17T00:39:55.845621Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:55.84573Z	      "inStock": status == "in_stock",
2025-09-17T00:39:55.845823Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:55.84592Z	    },
2025-09-17T00:39:55.846122Z	    isActive,
2025-09-17T00:39:55.846199Z	    isFeatured,
2025-09-17T00:39:55.846331Z	    isNew,
2025-09-17T00:39:55.846475Z	    _createdAt,
2025-09-17T00:39:55.846623Z	    _updatedAt
2025-09-17T00:39:55.846725Z	  
2025-09-17T00:39:55.846834Z	      },
2025-09-17T00:39:55.851184Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-17T00:39:55.852073Z	    }
2025-09-17T00:39:55.852536Z	  
2025-09-17T00:39:55.852668Z	Query parameters: {
2025-09-17T00:39:55.852855Z	  limit: 8,
2025-09-17T00:39:55.85305Z	  offset: 0,
2025-09-17T00:39:55.853185Z	  category: undefined,
2025-09-17T00:39:55.853305Z	  brand: 'pi',
2025-09-17T00:39:55.853408Z	  featured: undefined
2025-09-17T00:39:55.853529Z	}
2025-09-17T00:39:55.853663Z	Fetching solutions with query: 
2025-09-17T00:39:55.853792Z	    {
2025-09-17T00:39:55.853901Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:55.854011Z	        
2025-09-17T00:39:55.854116Z	    _id,
2025-09-17T00:39:55.854215Z	    title,
2025-09-17T00:39:55.854323Z	    "slug": slug.current,
2025-09-17T00:39:55.85443Z	    summary,
2025-09-17T00:39:55.854547Z	    description,
2025-09-17T00:39:55.854646Z	    coverImage,
2025-09-17T00:39:55.854752Z	    primaryBrand->{
2025-09-17T00:39:55.854878Z	      _id,
2025-09-17T00:39:55.855011Z	      name,
2025-09-17T00:39:55.855147Z	      "slug": slug.current,
2025-09-17T00:39:55.855431Z	      logo
2025-09-17T00:39:55.855707Z	    },
2025-09-17T00:39:55.855863Z	    relatedBrands[]->{
2025-09-17T00:39:55.85603Z	      _id,
2025-09-17T00:39:55.856146Z	      name,
2025-09-17T00:39:55.8568Z	      "slug": slug.current,
2025-09-17T00:39:55.856927Z	      logo
2025-09-17T00:39:55.857035Z	    },
2025-09-17T00:39:55.857147Z	    targetMarket,
2025-09-17T00:39:55.857246Z	    complexity,
2025-09-17T00:39:55.857351Z	    publishedAt,
2025-09-17T00:39:55.857437Z	    isPublished,
2025-09-17T00:39:55.857557Z	    isFeatured,
2025-09-17T00:39:55.857647Z	    viewCount,
2025-09-17T00:39:55.857716Z	    _createdAt,
2025-09-17T00:39:55.857771Z	    _updatedAt
2025-09-17T00:39:55.857831Z	  
2025-09-17T00:39:55.857907Z	      },
2025-09-17T00:39:55.857971Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-17T00:39:55.85803Z	    }
2025-09-17T00:39:55.858111Z	  
2025-09-17T00:39:55.858184Z	Query parameters: {
2025-09-17T00:39:55.858351Z	  limit: 4,
2025-09-17T00:39:55.85843Z	  offset: 0,
2025-09-17T00:39:55.858521Z	  targetMarket: undefined,
2025-09-17T00:39:55.858658Z	  brand: 'pi',
2025-09-17T00:39:55.858782Z	  featured: undefined
2025-09-17T00:39:55.858931Z	}
2025-09-17T00:39:55.859035Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-17T00:39:55.85913Z	Fetching products with query: 
2025-09-17T00:39:55.859234Z	    {
2025-09-17T00:39:55.859355Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:55.859449Z	        
2025-09-17T00:39:55.859541Z	    _id,
2025-09-17T00:39:55.859635Z	    _type,
2025-09-17T00:39:55.859746Z	    partNumber,
2025-09-17T00:39:55.859849Z	    "slug": slug.current,
2025-09-17T00:39:55.859961Z	    title,
2025-09-17T00:39:55.860066Z	    shortDescription,
2025-09-17T00:39:55.860133Z	    image,
2025-09-17T00:39:55.860276Z	    brand->{
2025-09-17T00:39:55.860433Z	      name,
2025-09-17T00:39:55.860549Z	      "slug": slug.current,
2025-09-17T00:39:55.86063Z	      logo
2025-09-17T00:39:55.860737Z	    },
2025-09-17T00:39:55.860846Z	    category->{
2025-09-17T00:39:55.860952Z	      name,
2025-09-17T00:39:55.861043Z	      "slug": slug.current
2025-09-17T00:39:55.861139Z	    },
2025-09-17T00:39:55.86123Z	    pricing{
2025-09-17T00:39:55.861342Z	      currency,
2025-09-17T00:39:55.861472Z	      tiers[]{
2025-09-17T00:39:55.861593Z	        quantity,
2025-09-17T00:39:55.861732Z	        price,
2025-09-17T00:39:55.86186Z	        unit
2025-09-17T00:39:55.861976Z	      },
2025-09-17T00:39:55.862189Z	      moq,
2025-09-17T00:39:55.862377Z	      leadTime,
2025-09-17T00:39:55.86278Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:55.862879Z	      "price": tiers[0].price,
2025-09-17T00:39:55.862948Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:55.863043Z	    },
2025-09-17T00:39:55.863144Z	    inventory{
2025-09-17T00:39:55.863252Z	      quantity,
2025-09-17T00:39:55.863388Z	      status,
2025-09-17T00:39:55.863491Z	      warehouse,
2025-09-17T00:39:55.863551Z	      lastUpdated,
2025-09-17T00:39:55.863618Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:55.863879Z	      "inStock": status == "in_stock",
2025-09-17T00:39:55.863947Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:55.864011Z	    },
2025-09-17T00:39:55.864065Z	    isActive,
2025-09-17T00:39:55.864119Z	    isFeatured,
2025-09-17T00:39:55.864221Z	    isNew,
2025-09-17T00:39:55.864319Z	    _createdAt,
2025-09-17T00:39:55.864383Z	    _updatedAt
2025-09-17T00:39:55.864438Z	  
2025-09-17T00:39:55.864492Z	      },
2025-09-17T00:39:55.864546Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-17T00:39:55.864604Z	    }
2025-09-17T00:39:55.86466Z	  
2025-09-17T00:39:55.864713Z	Query parameters: {
2025-09-17T00:39:55.864766Z	  limit: 8,
2025-09-17T00:39:55.864818Z	  offset: 0,
2025-09-17T00:39:55.86487Z	  category: undefined,
2025-09-17T00:39:55.864922Z	  brand: 'pi',
2025-09-17T00:39:55.864983Z	  featured: undefined
2025-09-17T00:39:55.865036Z	}
2025-09-17T00:39:55.865089Z	Fetching solutions with query: 
2025-09-17T00:39:55.865141Z	    {
2025-09-17T00:39:55.865195Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:55.865293Z	        
2025-09-17T00:39:55.865402Z	    _id,
2025-09-17T00:39:55.865499Z	    title,
2025-09-17T00:39:55.865592Z	    "slug": slug.current,
2025-09-17T00:39:55.865684Z	    summary,
2025-09-17T00:39:55.86578Z	    description,
2025-09-17T00:39:55.865877Z	    coverImage,
2025-09-17T00:39:55.865988Z	    primaryBrand->{
2025-09-17T00:39:55.866088Z	      _id,
2025-09-17T00:39:55.866184Z	      name,
2025-09-17T00:39:55.866417Z	      "slug": slug.current,
2025-09-17T00:39:55.866661Z	      logo
2025-09-17T00:39:55.866881Z	    },
2025-09-17T00:39:55.86709Z	    relatedBrands[]->{
2025-09-17T00:39:55.867319Z	      _id,
2025-09-17T00:39:55.867471Z	      name,
2025-09-17T00:39:55.867709Z	      "slug": slug.current,
2025-09-17T00:39:55.867896Z	      logo
2025-09-17T00:39:55.868076Z	    },
2025-09-17T00:39:55.86824Z	    targetMarket,
2025-09-17T00:39:55.868431Z	    complexity,
2025-09-17T00:39:55.868656Z	    publishedAt,
2025-09-17T00:39:55.868908Z	    isPublished,
2025-09-17T00:39:55.869122Z	    isFeatured,
2025-09-17T00:39:55.869379Z	    viewCount,
2025-09-17T00:39:55.869722Z	    _createdAt,
2025-09-17T00:39:55.870009Z	    _updatedAt
2025-09-17T00:39:55.870282Z	  
2025-09-17T00:39:55.870601Z	      },
2025-09-17T00:39:55.871603Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-17T00:39:55.871772Z	    }
2025-09-17T00:39:55.871893Z	  
2025-09-17T00:39:55.872002Z	Query parameters: {
2025-09-17T00:39:55.872106Z	  limit: 4,
2025-09-17T00:39:55.872215Z	  offset: 0,
2025-09-17T00:39:55.872336Z	  targetMarket: undefined,
2025-09-17T00:39:55.87245Z	  brand: 'pi',
2025-09-17T00:39:55.872603Z	  featured: undefined
2025-09-17T00:39:55.872818Z	}
2025-09-17T00:39:55.872937Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-17T00:39:55.873045Z	Fetching products with query: 
2025-09-17T00:39:55.873477Z	    {
2025-09-17T00:39:55.87361Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:55.873723Z	        
2025-09-17T00:39:55.873824Z	    _id,
2025-09-17T00:39:55.873926Z	    _type,
2025-09-17T00:39:55.874046Z	    partNumber,
2025-09-17T00:39:55.874151Z	    "slug": slug.current,
2025-09-17T00:39:55.874258Z	    title,
2025-09-17T00:39:55.874386Z	    shortDescription,
2025-09-17T00:39:55.874503Z	    image,
2025-09-17T00:39:55.87461Z	    brand->{
2025-09-17T00:39:55.874718Z	      name,
2025-09-17T00:39:55.87482Z	      "slug": slug.current,
2025-09-17T00:39:55.874909Z	      logo
2025-09-17T00:39:55.875002Z	    },
2025-09-17T00:39:55.875128Z	    category->{
2025-09-17T00:39:55.875225Z	      name,
2025-09-17T00:39:55.875358Z	      "slug": slug.current
2025-09-17T00:39:55.87548Z	    },
2025-09-17T00:39:55.875613Z	    pricing{
2025-09-17T00:39:55.875715Z	      currency,
2025-09-17T00:39:55.875819Z	      tiers[]{
2025-09-17T00:39:55.875926Z	        quantity,
2025-09-17T00:39:55.876042Z	        price,
2025-09-17T00:39:55.876153Z	        unit
2025-09-17T00:39:55.876253Z	      },
2025-09-17T00:39:55.876376Z	      moq,
2025-09-17T00:39:55.876479Z	      leadTime,
2025-09-17T00:39:55.876582Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:55.876692Z	      "price": tiers[0].price,
2025-09-17T00:39:55.876794Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:55.876906Z	    },
2025-09-17T00:39:55.877004Z	    inventory{
2025-09-17T00:39:55.877108Z	      quantity,
2025-09-17T00:39:55.877205Z	      status,
2025-09-17T00:39:55.877326Z	      warehouse,
2025-09-17T00:39:55.877495Z	      lastUpdated,
2025-09-17T00:39:55.878754Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:55.87899Z	      "inStock": status == "in_stock",
2025-09-17T00:39:55.87921Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:55.879407Z	    },
2025-09-17T00:39:55.879592Z	    isActive,
2025-09-17T00:39:55.879804Z	    isFeatured,
2025-09-17T00:39:55.879997Z	    isNew,
2025-09-17T00:39:55.880169Z	    _createdAt,
2025-09-17T00:39:55.880334Z	    _updatedAt
2025-09-17T00:39:55.880507Z	  
2025-09-17T00:39:55.880671Z	      },
2025-09-17T00:39:55.880925Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-17T00:39:55.881135Z	    }
2025-09-17T00:39:55.8813Z	  
2025-09-17T00:39:55.881466Z	Query parameters: {
2025-09-17T00:39:55.88163Z	  limit: 8,
2025-09-17T00:39:55.881785Z	  offset: 0,
2025-09-17T00:39:55.88213Z	  category: undefined,
2025-09-17T00:39:55.882294Z	  brand: 'mediatek',
2025-09-17T00:39:55.882417Z	  featured: undefined
2025-09-17T00:39:55.882534Z	}
2025-09-17T00:39:55.882657Z	Fetching solutions with query: 
2025-09-17T00:39:55.88278Z	    {
2025-09-17T00:39:55.882886Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:55.883001Z	        
2025-09-17T00:39:55.883129Z	    _id,
2025-09-17T00:39:55.883241Z	    title,
2025-09-17T00:39:55.883374Z	    "slug": slug.current,
2025-09-17T00:39:55.883483Z	    summary,
2025-09-17T00:39:55.883589Z	    description,
2025-09-17T00:39:55.883675Z	    coverImage,
2025-09-17T00:39:55.883753Z	    primaryBrand->{
2025-09-17T00:39:55.883839Z	      _id,
2025-09-17T00:39:55.883922Z	      name,
2025-09-17T00:39:55.884004Z	      "slug": slug.current,
2025-09-17T00:39:55.884141Z	      logo
2025-09-17T00:39:55.88426Z	    },
2025-09-17T00:39:55.884393Z	    relatedBrands[]->{
2025-09-17T00:39:55.884518Z	      _id,
2025-09-17T00:39:55.884618Z	      name,
2025-09-17T00:39:55.884742Z	      "slug": slug.current,
2025-09-17T00:39:55.884878Z	      logo
2025-09-17T00:39:55.884991Z	    },
2025-09-17T00:39:55.885107Z	    targetMarket,
2025-09-17T00:39:55.885211Z	    complexity,
2025-09-17T00:39:55.885346Z	    publishedAt,
2025-09-17T00:39:55.88547Z	    isPublished,
2025-09-17T00:39:55.885586Z	    isFeatured,
2025-09-17T00:39:55.885701Z	    viewCount,
2025-09-17T00:39:55.885814Z	    _createdAt,
2025-09-17T00:39:55.885918Z	    _updatedAt
2025-09-17T00:39:55.886029Z	  
2025-09-17T00:39:55.886141Z	      },
2025-09-17T00:39:55.886264Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediate❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:55.88643Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:55.886538Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-17T00:39:55.886654Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:39:55.886768Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619) {
2025-09-17T00:39:55.886881Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:39:55.886997Z	}
2025-09-17T00:39:55.887124Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:55.887242Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:55.887374Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-17T00:39:55.88749Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:39:55.887694Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619) {
2025-09-17T00:39:55.887829Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:39:55.887934Z	}
2025-09-17T00:39:55.888049Z	k")])
2025-09-17T00:39:55.888155Z	    }
2025-09-17T00:39:55.88826Z	  
2025-09-17T00:39:55.88839Z	Query parameters: {
2025-09-17T00:39:55.888497Z	  limit: 4,
2025-09-17T00:39:55.888603Z	  offset: 0,
2025-09-17T00:39:55.888705Z	  targetMarket: undefined,
2025-09-17T00:39:55.888806Z	  brand: 'mediatek',
2025-09-17T00:39:55.88892Z	  featured: undefined
2025-09-17T00:39:55.889038Z	}
2025-09-17T00:39:55.889131Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-17T00:39:55.889223Z	Fetching products with query: 
2025-09-17T00:39:55.88933Z	    {
2025-09-17T00:39:55.889421Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:55.889514Z	        
2025-09-17T00:39:55.8896Z	    _id,
2025-09-17T00:39:55.889686Z	    _type,
2025-09-17T00:39:55.889771Z	    partNumber,
2025-09-17T00:39:55.88994Z	    "slug": slug.current,
2025-09-17T00:39:55.890073Z	    title,
2025-09-17T00:39:55.890186Z	    shortDescription,
2025-09-17T00:39:55.890322Z	    image,
2025-09-17T00:39:55.890445Z	    brand->{
2025-09-17T00:39:55.890557Z	      name,
2025-09-17T00:39:55.89066Z	      "slug": slug.current,
2025-09-17T00:39:55.890765Z	      logo
2025-09-17T00:39:55.890859Z	    },
2025-09-17T00:39:55.890961Z	    category->{
2025-09-17T00:39:55.891063Z	      name,
2025-09-17T00:39:55.891156Z	      "slug": slug.current
2025-09-17T00:39:55.891711Z	    },
2025-09-17T00:39:55.891873Z	    pricing{
2025-09-17T00:39:55.891975Z	      currency,
2025-09-17T00:39:55.892101Z	      tiers[]{
2025-09-17T00:39:55.892194Z	        quantity,
2025-09-17T00:39:55.892252Z	        price,
2025-09-17T00:39:55.892367Z	        unit
2025-09-17T00:39:55.892464Z	      },
2025-09-17T00:39:55.892565Z	      moq,
2025-09-17T00:39:55.892664Z	      leadTime,
2025-09-17T00:39:55.892742Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:55.892829Z	      "price": tiers[0].price,
2025-09-17T00:39:55.892926Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:55.893054Z	    },
2025-09-17T00:39:55.893162Z	    inventory{
2025-09-17T00:39:55.893282Z	      quantity,
2025-09-17T00:39:55.893399Z	      status,
2025-09-17T00:39:55.893507Z	      warehouse,
2025-09-17T00:39:55.893618Z	      lastUpdated,
2025-09-17T00:39:55.893732Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:55.893849Z	      "inStock": status == "in_stock",
2025-09-17T00:39:55.893977Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:55.894097Z	    },
2025-09-17T00:39:55.894206Z	    isActive,
2025-09-17T00:39:55.89433Z	    isFeatured,
2025-09-17T00:39:55.894446Z	    isNew,
2025-09-17T00:39:55.894554Z	    _createdAt,
2025-09-17T00:39:55.894658Z	    _updatedAt
2025-09-17T00:39:55.894753Z	  
2025-09-17T00:39:55.894849Z	      },
2025-09-17T00:39:55.894941Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-17T00:39:55.89506Z	    }
2025-09-17T00:39:55.895162Z	  
2025-09-17T00:39:55.895257Z	Query parameters: {
2025-09-17T00:39:55.895368Z	  limit: 8,
2025-09-17T00:39:55.895729Z	  offset: 0,
2025-09-17T00:39:55.896159Z	  category: undefined,
2025-09-17T00:39:55.896404Z	  brand: 'mediatek',
2025-09-17T00:39:55.896604Z	  featured: undefined
2025-09-17T00:39:55.896765Z	}
2025-09-17T00:39:55.896948Z	Fetching solutions with query: 
2025-09-17T00:39:55.897098Z	    {
2025-09-17T00:39:55.897258Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:55.897429Z	        
2025-09-17T00:39:55.897552Z	    _id,
2025-09-17T00:39:55.897657Z	    title,
2025-09-17T00:39:55.897757Z	    "slug": slug.current,
2025-09-17T00:39:55.897862Z	    summary,
2025-09-17T00:39:55.897996Z	    description,
2025-09-17T00:39:55.898101Z	    coverImage,
2025-09-17T00:39:55.898212Z	    primaryBrand->{
2025-09-17T00:39:55.898344Z	      _id,
2025-09-17T00:39:55.898461Z	      name,
2025-09-17T00:39:55.898598Z	      "slug": slug.current,
2025-09-17T00:39:55.898708Z	      logo
2025-09-17T00:39:55.898819Z	    },
2025-09-17T00:39:55.898928Z	    relatedBrands[]->{
2025-09-17T00:39:55.899054Z	      _id,
2025-09-17T00:39:55.89917Z	      name,
2025-09-17T00:39:55.899311Z	      "slug": slug.current,
2025-09-17T00:39:55.899429Z	      logo
2025-09-17T00:39:55.899581Z	    },
2025-09-17T00:39:55.899696Z	    targetMarket,
2025-09-17T00:39:55.899794Z	    complexity,
2025-09-17T00:39:55.899893Z	    publishedAt,
2025-09-17T00:39:55.899997Z	    isPublished,
2025-09-17T00:39:55.900101Z	    isFeatured,
2025-09-17T00:39:55.900213Z	    viewCount,
2025-09-17T00:39:55.900347Z	    _createdAt,
2025-09-17T00:39:55.900457Z	    _updatedAt
2025-09-17T00:39:55.900557Z	  
2025-09-17T00:39:55.900649Z	      },
2025-09-17T00:39:55.900744Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-17T00:39:55.900839Z	    }
2025-09-17T00:39:55.900936Z	  
2025-09-17T00:39:55.90105Z	Query parameters: {
2025-09-17T00:39:55.901156Z	  limit: 4,
2025-09-17T00:39:55.90128Z	  offset: 0,
2025-09-17T00:39:55.90141Z	  targetMarket: undefined,
2025-09-17T00:39:55.901536Z	  brand: 'mediatek',
2025-09-17T00:39:55.901649Z	  featured: undefined
2025-09-17T00:39:55.901749Z	}
2025-09-17T00:39:55.901859Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-17T00:39:55.901973Z	Fetching products with query: 
2025-09-17T00:39:55.902114Z	    {
2025-09-17T00:39:55.902221Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:55.902346Z	        
2025-09-17T00:39:55.902499Z	    _id,
2025-09-17T00:39:55.902649Z	    _type,
2025-09-17T00:39:55.902766Z	    partNumber,
2025-09-17T00:39:55.902882Z	    "slug": slug.current,
2025-09-17T00:39:55.903007Z	    title,
2025-09-17T00:39:55.903116Z	    shortDescription,
2025-09-17T00:39:55.903214Z	    image,
2025-09-17T00:39:55.90336Z	    brand->{
2025-09-17T00:39:55.903466Z	      name,
2025-09-17T00:39:55.903561Z	      "slug": slug.current,
2025-09-17T00:39:55.903658Z	      logo
2025-09-17T00:39:55.903758Z	    },
2025-09-17T00:39:55.903999Z	    category->{
2025-09-17T00:39:55.90414Z	      name,
2025-09-17T00:39:55.90425Z	      "slug": slug.current
2025-09-17T00:39:55.904383Z	    },
2025-09-17T00:39:55.904491Z	    pricing{
2025-09-17T00:39:55.904598Z	      currency,
2025-09-17T00:39:55.904707Z	      tiers[]{
2025-09-17T00:39:55.905183Z	        quantity,
2025-09-17T00:39:55.906654Z	        price,
2025-09-17T00:39:55.906819Z	        unit
2025-09-17T00:39:55.906923Z	      },
2025-09-17T00:39:55.907018Z	      moq,
2025-09-17T00:39:55.907112Z	      leadTime,
2025-09-17T00:39:55.907216Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:55.907342Z	      "price": tiers[0].price,
2025-09-17T00:39:55.907449Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:55.907549Z	    },
2025-09-17T00:39:55.90765Z	    inventory{
2025-09-17T00:39:55.907775Z	      quantity,
2025-09-17T00:39:55.907878Z	      status,
2025-09-17T00:39:55.90798Z	      warehouse,
2025-09-17T00:39:55.908079Z	      lastUpdated,
2025-09-17T00:39:55.90819Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:55.90831Z	      "inStock": status == "in_stock",
2025-09-17T00:39:55.908408Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:55.908504Z	    },
2025-09-17T00:39:55.908605Z	    isActive,
2025-09-17T00:39:55.908723Z	    isFeatured,
2025-09-17T00:39:55.908827Z	    isNew,
2025-09-17T00:39:55.908938Z	    _createdAt,
2025-09-17T00:39:55.909042Z	    _updatedAt
2025-09-17T00:39:55.909141Z	  
2025-09-17T00:39:55.909232Z	      },
2025-09-17T00:39:55.909348Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-17T00:39:55.909446Z	    }
2025-09-17T00:39:55.909529Z	  
2025-09-17T00:39:55.909609Z	Query parameters: {
2025-09-17T00:39:55.909709Z	  limit: 8,
2025-09-17T00:39:55.9098Z	  offset: 0,
2025-09-17T00:39:55.90989Z	  category: undefined,
2025-09-17T00:39:55.909979Z	  brand: 'qualcomm',
2025-09-17T00:39:55.910364Z	  featured: undefined
2025-09-17T00:39:55.910624Z	}
2025-09-17T00:39:55.911143Z	Fetching solutions with query: 
2025-09-17T00:39:55.911285Z	    {
2025-09-17T00:39:55.911384Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:55.911561Z	        
2025-09-17T00:39:55.911674Z	    _id,
2025-09-17T00:39:55.911797Z	    title,
2025-09-17T00:39:55.911902Z	    "slug": slug.current,
2025-09-17T00:39:55.912002Z	    summary,
2025-09-17T00:39:55.912107Z	    description,
2025-09-17T00:39:55.912209Z	    coverImage,
2025-09-17T00:39:55.912336Z	    primaryBrand->{
2025-09-17T00:39:55.912503Z	      _id,
2025-09-17T00:39:55.912628Z	      name,
2025-09-17T00:39:55.912783Z	      "slug": slug.current,
2025-09-17T00:39:55.912893Z	      logo
2025-09-17T00:39:55.912995Z	    },
2025-09-17T00:39:55.913099Z	    relatedBrands[]->{
2025-09-17T00:39:55.913214Z	      _id,
2025-09-17T00:39:55.913923Z	      name,
2025-09-17T00:39:55.914167Z	      "slug": slug.current,
2025-09-17T00:39:55.91432Z	      logo
2025-09-17T00:39:55.914543Z	    },
2025-09-17T00:39:55.914758Z	    targetMarket,
2025-09-17T00:39:55.914974Z	    complexity,
2025-09-17T00:39:55.915303Z	    publishedAt,
2025-09-17T00:39:55.915469Z	    isPublished,
2025-09-17T00:39:55.915779Z	    isFeatured,
2025-09-17T00:39:55.91593Z	    viewCount,
2025-09-17T00:39:55.916261Z	    _createdAt,
2025-09-17T00:39:55.916451Z	    _updatedAt
2025-09-17T00:39:55.916781Z	  
2025-09-17T00:39:55.91726Z	      },
2025-09-17T00:39:55.917687Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-17T00:39:55.917836Z	    }
2025-09-17T00:39:55.917951Z	  
2025-09-17T00:39:55.918067Z	Query parameters: {
2025-09-17T00:39:55.918178Z	  limit: 4,
2025-09-17T00:39:55.9183Z	  offset: 0,
2025-09-17T00:39:55.918411Z	  targetMarket: undefined,
2025-09-17T00:39:55.918517Z	  brand: 'qualcomm',
2025-09-17T00:39:55.918864Z	  featured: undefined
2025-09-17T00:39:55.919183Z	}
2025-09-17T00:39:55.91946Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-17T00:39:55.919599Z	Fetching products with query: 
2025-09-17T00:39:55.9197Z	    {
2025-09-17T00:39:55.919816Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:55.919926Z	        
2025-09-17T00:39:55.920028Z	    _id,
2025-09-17T00:39:55.920144Z	    _type,
2025-09-17T00:39:55.920254Z	    partNumber,
2025-09-17T00:39:55.920417Z	    "slug": slug.current,
2025-09-17T00:39:55.92052Z	    title,
2025-09-17T00:39:55.920627Z	    shortDescription,
2025-09-17T00:39:55.920726Z	    image,
2025-09-17T00:39:55.920821Z	    brand->{
2025-09-17T00:39:55.920925Z	      name,
2025-09-17T00:39:55.921028Z	      "slug": slug.current,
2025-09-17T00:39:55.921155Z	      logo
2025-09-17T00:39:55.921275Z	    },
2025-09-17T00:39:55.921377Z	    category->{
2025-09-17T00:39:55.921688Z	      name,
2025-09-17T00:39:55.921938Z	      "slug": slug.current
2025-09-17T00:39:55.922067Z	    },
2025-09-17T00:39:55.922214Z	    pricing{
2025-09-17T00:39:55.922345Z	      currency,
2025-09-17T00:39:55.92253Z	      tiers[]{
2025-09-17T00:39:55.922714Z	        quantity,
2025-09-17T00:39:55.922883Z	        price,
2025-09-17T00:39:55.922985Z	        unit
2025-09-17T00:39:55.923163Z	      },
2025-09-17T00:39:55.923287Z	      moq,
2025-09-17T00:39:55.923467Z	      leadTime,
2025-09-17T00:39:55.923676Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:55.923834Z	      "price": tiers[0].price,
2025-09-17T00:39:55.924008Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:55.924167Z	    },
2025-09-17T00:39:55.924329Z	    inventory{
2025-09-17T00:39:55.924503Z	      quantity,
2025-09-17T00:39:55.925002Z	      status,
2025-09-17T00:39:55.925361Z	      warehouse,
2025-09-17T00:39:55.925758Z	      lastUpdated,
2025-09-17T00:39:55.926118Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:55.926503Z	      "inStock": status == "in_stock",
2025-09-17T00:39:55.926929Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:55.92724Z	    },
2025-09-17T00:39:55.927433Z	    isActive,
2025-09-17T00:39:55.927557Z	    isFeatured,
2025-09-17T00:39:55.927657Z	    isNew,
2025-09-17T00:39:55.927794Z	    _createdAt,
2025-09-17T00:39:55.927957Z	    _updatedAt
2025-09-17T00:39:55.92807Z	  
2025-09-17T00:39:55.928165Z	      },
2025-09-17T00:39:55.928282Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-17T00:39:55.928418Z	    }
2025-09-17T00:39:55.92852Z	  
2025-09-17T00:39:55.928618Z	Query parameters: {
2025-09-17T00:39:55.928766Z	  limit: 8,
2025-09-17T00:39:55.929325Z	  offset: 0,
2025-09-17T00:39:55.929571Z	  category: undefined,
2025-09-17T00:39:55.92985Z	  brand: 'qualcomm',
2025-09-17T00:39:55.930063Z	  featured: undefined
2025-09-17T00:39:55.930313Z	}
2025-09-17T00:39:55.930478Z	Fetching solutions with query: 
2025-09-17T00:39:55.930615Z	    {
2025-09-17T00:39:55.930761Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:55.93099Z	        
2025-09-17T00:39:55.931109Z	    _id,
2025-09-17T00:39:55.931207Z	    title,
2025-09-17T00:39:55.931326Z	    "slug": slug.current,
2025-09-17T00:39:55.931434Z	    summary,
2025-09-17T00:39:55.931532Z	    description,
2025-09-17T00:39:55.931629Z	    coverImage,
2025-09-17T00:39:55.931738Z	    primaryBrand->{
2025-09-17T00:39:55.931838Z	      _id,
2025-09-17T00:39:55.932013Z	      name,
2025-09-17T00:39:55.932365Z	      "slug": slug.current,
2025-09-17T00:39:55.932639Z	      logo
2025-09-17T00:39:55.93299Z	    },
2025-09-17T00:39:55.933238Z	    relatedBrands[]->{
2025-09-17T00:39:55.933397Z	      _id,
2025-09-17T00:39:55.933509Z	      name,
2025-09-17T00:39:55.933825Z	      "slug": slug.current,
2025-09-17T00:39:55.933922Z	      logo
2025-09-17T00:39:55.93402Z	    },
2025-09-17T00:39:55.934116Z	    targetMarket,
2025-09-17T00:39:55.934226Z	    complexity,
2025-09-17T00:39:55.93436Z	    publishedAt,
2025-09-17T00:39:55.934469Z	    isPublished,
2025-09-17T00:39:55.934573Z	    isFeatured,
2025-09-17T00:39:55.934675Z	    viewCount,
2025-09-17T00:39:55.934781Z	    _createdAt,
2025-09-17T00:39:55.934888Z	    _updatedAt
2025-09-17T00:39:55.935004Z	  
2025-09-17T00:39:55.935116Z	      },
2025-09-17T00:39:55.935225Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-17T00:39:55.935356Z	    }
2025-09-17T00:39:55.93546Z	  
2025-09-17T00:39:55.935559Z	Query parameters: {
2025-09-17T00:39:55.935654Z	  limit: 4,
2025-09-17T00:39:55.93575Z	  offset: 0,
2025-09-17T00:39:55.935844Z	  targetMarket: undefined,
2025-09-17T00:39:55.935937Z	  brand: 'qualcomm',
2025-09-17T00:39:55.936047Z	  featured: undefined
2025-09-17T00:39:55.936144Z	}
2025-09-17T00:39:55.93624Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-17T00:39:55.936354Z	Fetching products with query: 
2025-09-17T00:39:55.936462Z	    {
2025-09-17T00:39:55.936574Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:55.936678Z	        
2025-09-17T00:39:55.936793Z	    _id,
2025-09-17T00:39:55.936936Z	    _type,
2025-09-17T00:39:55.937073Z	    partNumber,
2025-09-17T00:39:55.937336Z	    "slug": slug.current,
2025-09-17T00:39:55.93754Z	    title,
2025-09-17T00:39:55.937786Z	    shortDescription,
2025-09-17T00:39:55.938404Z	    image,
2025-09-17T00:39:55.938665Z	    brand->{
2025-09-17T00:39:55.939107Z	      name,
2025-09-17T00:39:55.939387Z	      "slug": slug.current,
2025-09-17T00:39:55.939546Z	      logo
2025-09-17T00:39:55.939676Z	    },
2025-09-17T00:39:55.939806Z	    category->{
2025-09-17T00:39:55.939935Z	      name,
2025-09-17T00:39:55.940051Z	      "slug": slug.current
2025-09-17T00:39:55.940152Z	    },
2025-09-17T00:39:55.940256Z	    pricing{
2025-09-17T00:39:55.940397Z	      currency,
2025-09-17T00:39:55.940513Z	      tiers[]{
2025-09-17T00:39:55.940625Z	        quantity,
2025-09-17T00:39:55.940734Z	        price,
2025-09-17T00:39:55.940839Z	        unit
2025-09-17T00:39:55.940959Z	      },
2025-09-17T00:39:55.941068Z	      moq,
2025-09-17T00:39:55.94117Z	      leadTime,
2025-09-17T00:39:55.941282Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:55.941406Z	      "price": tiers[0].price,
2025-09-17T00:39:55.941625Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:55.942141Z	    },
2025-09-17T00:39:55.942546Z	    inventory{
2025-09-17T00:39:55.9427Z	      quantity,
2025-09-17T00:39:55.942815Z	      status,
2025-09-17T00:39:55.942925Z	      warehouse,
2025-09-17T00:39:55.943042Z	      lastUpdated,
2025-09-17T00:39:55.943146Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:55.943254Z	      "inStock": status == "in_stock",
2025-09-17T00:39:55.943377Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:55.943489Z	    },
2025-09-17T00:39:55.943596Z	    isActive,
2025-09-17T00:39:55.943702Z	    isFeatured,
2025-09-17T00:39:55.943831Z	    isNew,
2025-09-17T00:39:55.944087Z	    _createdAt,
2025-09-17T00:39:55.944212Z	    _updatedAt
2025-09-17T00:39:55.944349Z	  
2025-09-17T00:39:55.944467Z	      },
2025-09-17T00:39:55.944576Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-17T00:39:55.944696Z	    }
2025-09-17T00:39:55.944801Z	  
2025-09-17T00:39:55.944913Z	Query parameters: {
2025-09-17T00:39:55.94502Z	  limit: 8,
2025-09-17T00:39:55.945121Z	  offset: 0,
2025-09-17T00:39:55.945225Z	  category: undefined,
2025-09-17T00:39:55.945358Z	  brand: 'semikron',
2025-09-17T00:39:55.94546Z	  featured: undefined
2025-09-17T00:39:55.945562Z	}
2025-09-17T00:39:55.945862Z	Fetching solutions with query: 
2025-09-17T00:39:55.946003Z	    {
2025-09-17T00:39:55.94616Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:55.946374Z	        
2025-09-17T00:39:55.946913Z	    _id,
2025-09-17T00:39:55.94722Z	    title,
2025-09-17T00:39:55.947368Z	    "slug": slug.current,
2025-09-17T00:39:55.947476Z	    summary,
2025-09-17T00:39:55.947585Z	    description,
2025-09-17T00:39:55.947862Z	    coverImage,
2025-09-17T00:39:55.94798Z	    primaryBrand->{
2025-09-17T00:39:55.948174Z	      _id,
2025-09-17T00:39:55.948289Z	      name,
2025-09-17T00:39:55.948388Z	      "slug": slug.current,
2025-09-17T00:39:55.948451Z	      logo
2025-09-17T00:39:55.948507Z	    },
2025-09-17T00:39:55.948564Z	    relatedBrands[]->{
2025-09-17T00:39:55.948617Z	      _id,
2025-09-17T00:39:55.948671Z	      name,
2025-09-17T00:39:55.948731Z	      "slug": slug.current,
2025-09-17T00:39:55.948788Z	      logo
2025-09-17T00:39:55.948842Z	    },
2025-09-17T00:39:55.948898Z	    targetMarket,
2025-09-17T00:39:55.948953Z	    complexity,
2025-09-17T00:39:55.94901Z	    publishedAt,
2025-09-17T00:39:55.949063Z	    isPublished,
2025-09-17T00:39:55.949116Z	    isFeatured,
2025-09-17T00:39:55.94917Z	    viewCount,
2025-09-17T00:39:55.949222Z	    _createdAt,
2025-09-17T00:39:55.98759Z	    _updatedAt
2025-09-17T00:39:55.988033Z	  
2025-09-17T00:39:55.988183Z	      },
2025-09-17T00:39:55.98834Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-17T00:39:55.988499Z	    }
2025-09-17T00:39:55.988611Z	  
2025-09-17T00:39:55.988725Z	Query parameters: {
2025-09-17T00:39:55.989032Z	  limit: 4,
2025-09-17T00:39:55.989151Z	  offset: 0,
2025-09-17T00:39:55.989308Z	  targetMarket: undefined,
2025-09-17T00:39:55.989409Z	  brand: 'semikron',
2025-09-17T00:39:55.989537Z	  featured: undefined
2025-09-17T00:39:55.989819Z	}
2025-09-17T00:39:55.98996Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-17T00:39:55.990081Z	Fetching products with query: 
2025-09-17T00:39:55.990183Z	    {
2025-09-17T00:39:55.990305Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:55.99042Z	        
2025-09-17T00:39:55.990691Z	    _id,
2025-09-17T00:39:55.990813Z	    _type,
2025-09-17T00:39:55.99091Z	    partNumber,
2025-09-17T00:39:55.991019Z	    "slug": slug.current,
2025-09-17T00:39:55.991196Z	    title,
2025-09-17T00:39:55.994389Z	    shortDescription,
2025-09-17T00:39:55.994767Z	    image,
2025-09-17T00:39:55.996679Z	    brand->{
2025-09-17T00:39:55.997025Z	      name,
2025-09-17T00:39:55.997347Z	      "slug": slug.current,
2025-09-17T00:39:55.997485Z	      logo
2025-09-17T00:39:55.997602Z	    },
2025-09-17T00:39:55.997695Z	    category->{
2025-09-17T00:39:55.998032Z	      name,
2025-09-17T00:39:55.998422Z	      "slug": slug.current
2025-09-17T00:39:55.99881Z	    },
2025-09-17T00:39:55.999073Z	    pricing{
2025-09-17T00:39:55.999311Z	      currency,
2025-09-17T00:39:55.999475Z	      tiers[]{
2025-09-17T00:39:55.999593Z	        quantity,
2025-09-17T00:39:55.999693Z	        price,
2025-09-17T00:39:55.999792Z	        unit
2025-09-17T00:39:56.000197Z	      },
2025-09-17T00:39:56.00082Z	      moq,
2025-09-17T00:39:56.000959Z	      leadTime,
2025-09-17T00:39:56.001074Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.00118Z	      "price": tiers[0].price,
2025-09-17T00:39:56.001833Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.002174Z	    },
2025-09-17T00:39:56.002524Z	    inventory{
2025-09-17T00:39:56.002949Z	      quantity,
2025-09-17T00:39:56.003294Z	      status,
2025-09-17T00:39:56.003611Z	      warehouse,
2025-09-17T00:39:56.003756Z	      lastUpdated,
2025-09-17T00:39:56.004241Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.004565Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.004697Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.004983Z	    },
2025-09-17T00:39:56.005153Z	    isActive,
2025-09-17T00:39:56.005287Z	    isFeatured,
2025-09-17T00:39:56.005423Z	    isNew,
2025-09-17T00:39:56.005524Z	    _createdAt,
2025-09-17T00:39:56.005643Z	    _updatedAt
2025-09-17T00:39:56.005773Z	  
2025-09-17T00:39:56.00587Z	      },
2025-09-17T00:39:56.005971Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-17T00:39:56.006074Z	    }
2025-09-17T00:39:56.00616Z	  
2025-09-17T00:39:56.006251Z	Query parameters: {
2025-09-17T00:39:56.006365Z	  limit: 8,
2025-09-17T00:39:56.006481Z	  offset: 0,
2025-09-17T00:39:56.006587Z	  category: undefined,
2025-09-17T00:39:56.006704Z	  brand: 'semikron',
2025-09-17T00:39:56.006804Z	  featured: undefined
2025-09-17T00:39:56.006901Z	}
2025-09-17T00:39:56.007004Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-17T00:39:56.007105Z	Fetching products with query: 
2025-09-17T00:39:56.007222Z	    {
2025-09-17T00:39:56.007345Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.00745Z	        
2025-09-17T00:39:56.00757Z	    _id,
2025-09-17T00:39:56.007641Z	    _type,
2025-09-17T00:39:56.007725Z	    partNumber,
2025-09-17T00:39:56.007799Z	    "slug": slug.current,
2025-09-17T00:39:56.007978Z	    title,
2025-09-17T00:39:56.008233Z	    shortDescription,
2025-09-17T00:39:56.00847Z	    image,
2025-09-17T00:39:56.00858Z	    brand->{
2025-09-17T00:39:56.008856Z	      name,
2025-09-17T00:39:56.008963Z	      "slug": slug.current,
2025-09-17T00:39:56.009174Z	      logo
2025-09-17T00:39:56.009347Z	    },
2025-09-17T00:39:56.009448Z	    category->{
2025-09-17T00:39:56.009619Z	      name,
2025-09-17T00:39:56.00972Z	      "slug": slug.current
2025-09-17T00:39:56.009869Z	    },
2025-09-17T00:39:56.009974Z	    pricing{
2025-09-17T00:39:56.010073Z	      currency,
2025-09-17T00:39:56.010218Z	      tiers[]{
2025-09-17T00:39:56.01037Z	        quantity,
2025-09-17T00:39:56.01051Z	        price,
2025-09-17T00:39:56.010646Z	        unit
2025-09-17T00:39:56.010875Z	      },
2025-09-17T00:39:56.011057Z	      moq,
2025-09-17T00:39:56.011176Z	      leadTime,
2025-09-17T00:39:56.011309Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.011433Z	      "price": tiers[0].price,
2025-09-17T00:39:56.011551Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.011713Z	    },
2025-09-17T00:39:56.011824Z	    inventory{
2025-09-17T00:39:56.01192Z	      quantity,
2025-09-17T00:39:56.0121Z	      status,
2025-09-17T00:39:56.012383Z	      warehouse,
2025-09-17T00:39:56.012457Z	      lastUpdated,
2025-09-17T00:39:56.012519Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.012592Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.012649Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.012719Z	    },
2025-09-17T00:39:56.012789Z	    isActive,
2025-09-17T00:39:56.012844Z	    isFeatured,
2025-09-17T00:39:56.0129Z	    isNew,
2025-09-17T00:39:56.012959Z	    _createdAt,
2025-09-17T00:39:56.013207Z	    _updatedAt
2025-09-17T00:39:56.013477Z	  
2025-09-17T00:39:56.013609Z	      },
2025-09-17T00:39:56.013741Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-17T00:39:56.01387Z	    }
2025-09-17T00:39:56.013971Z	  
2025-09-17T00:39:56.014072Z	Query parameters: {
2025-09-17T00:39:56.01417Z	  limit: 8,
2025-09-17T00:39:56.014262Z	  offset: 0,
2025-09-17T00:39:56.014449Z	  category: undefined,
2025-09-17T00:39:56.014576Z	  brand: 'ncc',
2025-09-17T00:39:56.014699Z	  featured: undefined
2025-09-17T00:39:56.014812Z	}
2025-09-17T00:39:56.014918Z	Fetching solutions with query: 
2025-09-17T00:39:56.015024Z	    {
2025-09-17T00:39:56.015122Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.015226Z	        
2025-09-17T00:39:56.015339Z	    _id,
2025-09-17T00:39:56.01542Z	    title,
2025-09-17T00:39:56.015477Z	    "slug": slug.current,
2025-09-17T00:39:56.015559Z	    summary,
2025-09-17T00:39:56.01563Z	    description,
2025-09-17T00:39:56.015694Z	    coverImage,
2025-09-17T00:39:56.01576Z	    primaryBrand->{
2025-09-17T00:39:56.015815Z	      _id,
2025-09-17T00:39:56.015884Z	      name,
2025-09-17T00:39:56.015983Z	      "slug": slug.current,
2025-09-17T00:39:56.016083Z	      logo
2025-09-17T00:39:56.016151Z	    },
2025-09-17T00:39:56.01624Z	    relatedBrands[]->{
2025-09-17T00:39:56.016363Z	      _id,
2025-09-17T00:39:56.016472Z	      name,
2025-09-17T00:39:56.016567Z	      "slug": slug.current,
2025-09-17T00:39:56.016678Z	      logo
2025-09-17T00:39:56.016762Z	    },
2025-09-17T00:39:56.016849Z	    targetMarket,
2025-09-17T00:39:56.016908Z	    complexity,
2025-09-17T00:39:56.016989Z	    publishedAt,
2025-09-17T00:39:56.017084Z	    isPublished,
2025-09-17T00:39:56.017187Z	    isFeatured,
2025-09-17T00:39:56.017353Z	    viewCount,
2025-09-17T00:39:56.017491Z	    _createdAt,
2025-09-17T00:39:56.017617Z	    _updatedAt
2025-09-17T00:39:56.017764Z	  
2025-09-17T00:39:56.017877Z	      },
2025-09-17T00:39:56.018122Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-17T00:39:56.018489Z	    }
2025-09-17T00:39:56.018653Z	  
2025-09-17T00:39:56.018789Z	Query parameters: {
2025-09-17T00:39:56.018903Z	  limit: 4,
2025-09-17T00:39:56.019005Z	  offset: 0,
2025-09-17T00:39:56.019094Z	  targetMarket: undefined,
2025-09-17T00:39:56.019185Z	  brand: 'ncc',
2025-09-17T00:39:56.01931Z	  featured: undefined
2025-09-17T00:39:56.019393Z	}
2025-09-17T00:39:56.019452Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.019508Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.019562Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.019616Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.019678Z	✅ [getBrandData] Found brand: PI
2025-09-17T00:39:56.019828Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-17T00:39:56.020076Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.020217Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.020336Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-17T00:39:56.020444Z	Fetching products with query: 
2025-09-17T00:39:56.020549Z	    {
2025-09-17T00:39:56.020642Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.020739Z	        
2025-09-17T00:39:56.020916Z	    _id,
2025-09-17T00:39:56.021055Z	    _type,
2025-09-17T00:39:56.02117Z	    partNumber,
2025-09-17T00:39:56.021306Z	    "slug": slug.current,
2025-09-17T00:39:56.02142Z	    title,
2025-09-17T00:39:56.021538Z	    shortDescription,
2025-09-17T00:39:56.021637Z	    image,
2025-09-17T00:39:56.021735Z	    brand->{
2025-09-17T00:39:56.021831Z	      name,
2025-09-17T00:39:56.021948Z	      "slug": slug.current,
2025-09-17T00:39:56.022134Z	      logo
2025-09-17T00:39:56.022212Z	    },
2025-09-17T00:39:56.02238Z	    category->{
2025-09-17T00:39:56.022533Z	      name,
2025-09-17T00:39:56.022631Z	      "slug": slug.current
2025-09-17T00:39:56.022737Z	    },
2025-09-17T00:39:56.022837Z	    pricing{
2025-09-17T00:39:56.022899Z	      currency,
2025-09-17T00:39:56.02296Z	      tiers[]{
2025-09-17T00:39:56.023015Z	        quantity,
2025-09-17T00:39:56.023068Z	        price,
2025-09-17T00:39:56.023122Z	        unit
2025-09-17T00:39:56.023197Z	      },
2025-09-17T00:39:56.023286Z	      moq,
2025-09-17T00:39:56.023367Z	      leadTime,
2025-09-17T00:39:56.023427Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.023489Z	      "price": tiers[0].price,
2025-09-17T00:39:56.023547Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.023691Z	    },
2025-09-17T00:39:56.023764Z	    inventory{
2025-09-17T00:39:56.023823Z	      quantity,
2025-09-17T00:39:56.023878Z	      status,
2025-09-17T00:39:56.023936Z	      warehouse,
2025-09-17T00:39:56.02399Z	      lastUpdated,
2025-09-17T00:39:56.024046Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.024117Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.024175Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.02423Z	    },
2025-09-17T00:39:56.024309Z	    isActive,
2025-09-17T00:39:56.024371Z	    isFeatured,
2025-09-17T00:39:56.024466Z	    isNew,
2025-09-17T00:39:56.024639Z	    _createdAt,
2025-09-17T00:39:56.024798Z	    _updatedAt
2025-09-17T00:39:56.024875Z	  
2025-09-17T00:39:56.024975Z	      },
2025-09-17T00:39:56.025373Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-17T00:39:56.025467Z	    }
2025-09-17T00:39:56.025601Z	  
2025-09-17T00:39:56.025741Z	Query parameters: {
2025-09-17T00:39:56.025819Z	  limit: 8,
2025-09-17T00:39:56.025947Z	  offset: 0,
2025-09-17T00:39:56.026032Z	  category: undefined,
2025-09-17T00:39:56.026158Z	  brand: 'sanrex',
2025-09-17T00:39:56.026336Z	  featured: undefined
2025-09-17T00:39:56.026482Z	}
2025-09-17T00:39:56.026643Z	Fetching solutions with query: 
2025-09-17T00:39:56.026747Z	    {
2025-09-17T00:39:56.02687Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.027034Z	        
2025-09-17T00:39:56.027199Z	    _id,
2025-09-17T00:39:56.027348Z	    title,
2025-09-17T00:39:56.027455Z	    "slug": slug.current,
2025-09-17T00:39:56.027612Z	    summary,
2025-09-17T00:39:56.027871Z	    description,
2025-09-17T00:39:56.028031Z	    coverImage,
2025-09-17T00:39:56.028179Z	    primaryBrand->{
2025-09-17T00:39:56.028315Z	      _id,
2025-09-17T00:39:56.028448Z	      name,
2025-09-17T00:39:56.028568Z	      "slug": slug.current,
2025-09-17T00:39:56.028648Z	      logo
2025-09-17T00:39:56.028756Z	    },
2025-09-17T00:39:56.028879Z	    relatedBrands[]->{
2025-09-17T00:39:56.028983Z	      _id,
2025-09-17T00:39:56.029077Z	      name,
2025-09-17T00:39:56.029167Z	      "slug": slug.current,
2025-09-17T00:39:56.02926Z	      logo
2025-09-17T00:39:56.029384Z	    },
2025-09-17T00:39:56.02948Z	    targetMarket,
2025-09-17T00:39:56.029586Z	    complexity,
2025-09-17T00:39:56.029726Z	    publishedAt,
2025-09-17T00:39:56.029924Z	    isPublished,
2025-09-17T00:39:56.030096Z	    isFeatured,
2025-09-17T00:39:56.030238Z	    viewCount,
2025-09-17T00:39:56.030374Z	    _createdAt,
2025-09-17T00:39:56.030491Z	    _updatedAt
2025-09-17T00:39:56.030587Z	  
2025-09-17T00:39:56.030668Z	      },
2025-09-17T00:39:56.03077Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-17T00:39:56.03089Z	    }
2025-09-17T00:39:56.031063Z	  
2025-09-17T00:39:56.031135Z	Query parameters: {
2025-09-17T00:39:56.031224Z	  limit: 4,
2025-09-17T00:39:56.031356Z	  offset: 0,
2025-09-17T00:39:56.031442Z	  targetMarket: undefined,
2025-09-17T00:39:56.03161Z	  brand: 'sanrex',
2025-09-17T00:39:56.031716Z	  featured: undefined
2025-09-17T00:39:56.031823Z	}
2025-09-17T00:39:56.031924Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-17T00:39:56.03206Z	Fetching products with query: 
2025-09-17T00:39:56.032159Z	    {
2025-09-17T00:39:56.032255Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.032452Z	        
2025-09-17T00:39:56.032569Z	    _id,
2025-09-17T00:39:56.032699Z	    _type,
2025-09-17T00:39:56.032829Z	    partNumber,
2025-09-17T00:39:56.032999Z	    "slug": slug.current,
2025-09-17T00:39:56.033077Z	    title,
2025-09-17T00:39:56.03318Z	    shortDescription,
2025-09-17T00:39:56.033327Z	    image,
2025-09-17T00:39:56.033413Z	    brand->{
2025-09-17T00:39:56.033529Z	      name,
2025-09-17T00:39:56.03365Z	      "slug": slug.current,
2025-09-17T00:39:56.033745Z	      logo
2025-09-17T00:39:56.033886Z	    },
2025-09-17T00:39:56.033993Z	    category->{
2025-09-17T00:39:56.034086Z	      name,
2025-09-17T00:39:56.034186Z	      "slug": slug.current
2025-09-17T00:39:56.034258Z	    },
2025-09-17T00:39:56.034369Z	    pricing{
2025-09-17T00:39:56.034437Z	      currency,
2025-09-17T00:39:56.034494Z	      tiers[]{
2025-09-17T00:39:56.034564Z	        quantity,
2025-09-17T00:39:56.034673Z	        price,
2025-09-17T00:39:56.034775Z	        unit
2025-09-17T00:39:56.034891Z	      },
2025-09-17T00:39:56.035012Z	      moq,
2025-09-17T00:39:56.035187Z	      leadTime,
2025-09-17T00:39:56.035586Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.03568Z	      "price": tiers[0].price,
2025-09-17T00:39:56.035814Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.035911Z	    },
2025-09-17T00:39:56.035981Z	    inventory{
2025-09-17T00:39:56.036126Z	      quantity,
2025-09-17T00:39:56.036287Z	      status,
2025-09-17T00:39:56.036383Z	      warehouse,
2025-09-17T00:39:56.036549Z	      lastUpdated,
2025-09-17T00:39:56.036779Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.037224Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.037384Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.037777Z	    },
2025-09-17T00:39:56.037875Z	    isActive,
2025-09-17T00:39:56.037946Z	    isFeatured,
2025-09-17T00:39:56.038009Z	    isNew,
2025-09-17T00:39:56.038065Z	    _createdAt,
2025-09-17T00:39:56.038131Z	    _updatedAt
2025-09-17T00:39:56.038185Z	  
2025-09-17T00:39:56.03824Z	      },
2025-09-17T00:39:56.038404Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-17T00:39:56.038629Z	    }
2025-09-17T00:39:56.038742Z	  
2025-09-17T00:39:56.038844Z	Query parameters: {
2025-09-17T00:39:56.03903Z	  limit: 8,
2025-09-17T00:39:56.039121Z	  offset: 0,
2025-09-17T00:39:56.039181Z	  category: undefined,
2025-09-17T00:39:56.03924Z	  brand: 'sanrex',
2025-09-17T00:39:56.039335Z	  featured: undefined
2025-09-17T00:39:56.039571Z	}
2025-09-17T00:39:56.039741Z	Fetching solutions with query: 
2025-09-17T00:39:56.039874Z	    {
2025-09-17T00:39:56.039967Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.040091Z	        
2025-09-17T00:39:56.040198Z	    _id,
2025-09-17T00:39:56.040339Z	    title,
2025-09-17T00:39:56.04048Z	    "slug": slug.current,
2025-09-17T00:39:56.040612Z	    summary,
2025-09-17T00:39:56.040729Z	    description,
2025-09-17T00:39:56.040842Z	    coverImage,
2025-09-17T00:39:56.04097Z	    primaryBrand->{
2025-09-17T00:39:56.0411Z	      _id,
2025-09-17T00:39:56.041219Z	      name,
2025-09-17T00:39:56.041361Z	      "slug": slug.current,
2025-09-17T00:39:56.041512Z	      logo
2025-09-17T00:39:56.041618Z	    },
2025-09-17T00:39:56.041784Z	    relatedBrands[]->{
2025-09-17T00:39:56.041897Z	      _id,
2025-09-17T00:39:56.042107Z	      name,
2025-09-17T00:39:56.042251Z	      "slug": slug.current,
2025-09-17T00:39:56.042387Z	      logo
2025-09-17T00:39:56.042499Z	    },
2025-09-17T00:39:56.042653Z	    targetMarket,
2025-09-17T00:39:56.042765Z	    complexity,
2025-09-17T00:39:56.042884Z	    publishedAt,
2025-09-17T00:39:56.04303Z	    isPublished,
2025-09-17T00:39:56.043161Z	    isFeatured,
2025-09-17T00:39:56.043298Z	    viewCount,
2025-09-17T00:39:56.043501Z	    _createdAt,
2025-09-17T00:39:56.044024Z	    _updatedAt
2025-09-17T00:39:56.044287Z	  
2025-09-17T00:39:56.045408Z	      },
2025-09-17T00:39:56.045551Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-17T00:39:56.04568Z	    }
2025-09-17T00:39:56.045802Z	  
2025-09-17T00:39:56.045904Z	Query parameters: {
2025-09-17T00:39:56.046011Z	  limit: 4,
2025-09-17T00:39:56.046114Z	  offset: 0,
2025-09-17T00:39:56.046222Z	  targetMarket: undefined,
2025-09-17T00:39:56.046384Z	  brand: 'sanrex',
2025-09-17T00:39:56.046494Z	  featured: undefined
2025-09-17T00:39:56.046597Z	}
2025-09-17T00:39:56.046713Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.046833Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.04695Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.047072Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.047176Z	✅ [getBrandData] Found brand: MediaTek
2025-09-17T00:39:56.047327Z	✅ [getBrandData] Found brand: MediaTek
2025-09-17T00:39:56.047438Z	Fetching solutions with query: 
2025-09-17T00:39:56.047545Z	    {
2025-09-17T00:39:56.047654Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.047779Z	        
2025-09-17T00:39:56.04788Z	    _id,
2025-09-17T00:39:56.047979Z	    title,
2025-09-17T00:39:56.048077Z	    "slug": slug.current,
2025-09-17T00:39:56.048179Z	    summary,
2025-09-17T00:39:56.048341Z	    description,
2025-09-17T00:39:56.04846Z	    coverImage,
2025-09-17T00:39:56.048575Z	    primaryBrand->{
2025-09-17T00:39:56.048683Z	      _id,
2025-09-17T00:39:56.048811Z	      name,
2025-09-17T00:39:56.048914Z	      "slug": slug.current,
2025-09-17T00:39:56.049015Z	      logo
2025-09-17T00:39:56.04912Z	    },
2025-09-17T00:39:56.049225Z	    relatedBrands[]->{
2025-09-17T00:39:56.049352Z	      _id,
2025-09-17T00:39:56.049466Z	      name,
2025-09-17T00:39:56.049591Z	      "slug": slug.current,
2025-09-17T00:39:56.049994Z	      logo
2025-09-17T00:39:56.050116Z	    },
2025-09-17T00:39:56.050233Z	    targetMarket,
2025-09-17T00:39:56.050372Z	    complexity,
2025-09-17T00:39:56.050477Z	    publishedAt,
2025-09-17T00:39:56.050583Z	    isPublished,
2025-09-17T00:39:56.050763Z	    isFeatured,
2025-09-17T00:39:56.050899Z	    viewCount,
2025-09-17T00:39:56.05101Z	    _createdAt,
2025-09-17T00:39:56.051115Z	    _updatedAt
2025-09-17T00:39:56.051217Z	  
2025-09-17T00:39:56.051357Z	      },
2025-09-17T00:39:56.051468Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-17T00:39:56.051582Z	    }
2025-09-17T00:39:56.051697Z	  
2025-09-17T00:39:56.051805Z	Query parameters: {
2025-09-17T00:39:56.051909Z	  limit: 4,
2025-09-17T00:39:56.052023Z	  offset: 0,
2025-09-17T00:39:56.052127Z	  targetMarket: undefined,
2025-09-17T00:39:56.052224Z	  brand: 'semikron',
2025-09-17T00:39:56.052346Z	  featured: undefined
2025-09-17T00:39:56.052446Z	}
2025-09-17T00:39:56.052611Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-17T00:39:56.05274Z	Fetching products with query: 
2025-09-17T00:39:56.052843Z	    {
2025-09-17T00:39:56.052952Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.054126Z	        
2025-09-17T00:39:56.054477Z	    _id,
2025-09-17T00:39:56.054657Z	    _type,
2025-09-17T00:39:56.054795Z	    partNumber,
2025-09-17T00:39:56.055104Z	    "slug": slug.current,
2025-09-17T00:39:56.05523Z	    title,
2025-09-17T00:39:56.055367Z	    shortDescription,
2025-09-17T00:39:56.055496Z	    image,
2025-09-17T00:39:56.055614Z	    brand->{
2025-09-17T00:39:56.055724Z	      name,
2025-09-17T00:39:56.055837Z	      "slug": slug.current,
2025-09-17T00:39:56.055963Z	      logo
2025-09-17T00:39:56.056074Z	    },
2025-09-17T00:39:56.056473Z	    category->{
2025-09-17T00:39:56.056608Z	      name,
2025-09-17T00:39:56.057083Z	      "slug": slug.current
2025-09-17T00:39:56.057223Z	    },
2025-09-17T00:39:56.057528Z	    pricing{
2025-09-17T00:39:56.057858Z	      currency,
2025-09-17T00:39:56.059804Z	      tiers[]{
2025-09-17T00:39:56.059953Z	        quantity,
2025-09-17T00:39:56.06007Z	        price,
2025-09-17T00:39:56.060179Z	        unit
2025-09-17T00:39:56.087779Z	      },
2025-09-17T00:39:56.088006Z	      moq,
2025-09-17T00:39:56.088132Z	      leadTime,
2025-09-17T00:39:56.088248Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.088388Z	      "price": tiers[0].price,
2025-09-17T00:39:56.088496Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.088604Z	    },
2025-09-17T00:39:56.08873Z	    inventory{
2025-09-17T00:39:56.08884Z	      quantity,
2025-09-17T00:39:56.088949Z	      status,
2025-09-17T00:39:56.089309Z	      warehouse,
2025-09-17T00:39:56.089561Z	      lastUpdated,
2025-09-17T00:39:56.092116Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.092248Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.092382Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.092494Z	    },
2025-09-17T00:39:56.092617Z	    isActive,
2025-09-17T00:39:56.092731Z	    isFeatured,
2025-09-17T00:39:56.092937Z	    isNew,
2025-09-17T00:39:56.093296Z	    _createdAt,
2025-09-17T00:39:56.093443Z	    _updatedAt
2025-09-17T00:39:56.093691Z	  
2025-09-17T00:39:56.093894Z	      },
2025-09-17T00:39:56.094122Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-17T00:39:56.094243Z	    }
2025-09-17T00:39:56.094374Z	  
2025-09-17T00:39:56.094612Z	Query parameters: {
2025-09-17T00:39:56.094728Z	  limit: 8,
2025-09-17T00:39:56.094833Z	  offset: 0,
2025-09-17T00:39:56.094944Z	  category: undefined,
2025-09-17T00:39:56.095066Z	  brand: 'ncc',
2025-09-17T00:39:56.095182Z	  featured: undefined
2025-09-17T00:39:56.095312Z	}
2025-09-17T00:39:56.095421Z	Fetching solutions with query: 
2025-09-17T00:39:56.095654Z	    {
2025-09-17T00:39:56.09587Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.096027Z	        
2025-09-17T00:39:56.096143Z	    _id,
2025-09-17T00:39:56.096254Z	    title,
2025-09-17T00:39:56.096384Z	    "slug": slug.current,
2025-09-17T00:39:56.096486Z	    summary,
2025-09-17T00:39:56.096575Z	    description,
2025-09-17T00:39:56.096673Z	    coverImage,
2025-09-17T00:39:56.096962Z	    primaryBrand->{
2025-09-17T00:39:56.09713Z	      _id,
2025-09-17T00:39:56.097257Z	      name,
2025-09-17T00:39:56.097401Z	      "slug": slug.current,
2025-09-17T00:39:56.097516Z	      logo
2025-09-17T00:39:56.09764Z	    },
2025-09-17T00:39:56.097794Z	    relatedBrands[]->{
2025-09-17T00:39:56.09791Z	      _id,
2025-09-17T00:39:56.098077Z	      name,
2025-09-17T00:39:56.09832Z	      "slug": slug.current,
2025-09-17T00:39:56.098513Z	      logo
2025-09-17T00:39:56.098673Z	    },
2025-09-17T00:39:56.098796Z	    targetMarket,
2025-09-17T00:39:56.099068Z	    complexity,
2025-09-17T00:39:56.099222Z	    publishedAt,
2025-09-17T00:39:56.099498Z	    isPublished,
2025-09-17T00:39:56.099622Z	    isFeatured,
2025-09-17T00:39:56.099782Z	    viewCount,
2025-09-17T00:39:56.099929Z	    _createdAt,
2025-09-17T00:39:56.100118Z	    _updatedAt
2025-09-17T00:39:56.100366Z	  
2025-09-17T00:39:56.100873Z	      },
2025-09-17T00:39:56.101148Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-17T00:39:56.101421Z	    }
2025-09-17T00:39:56.10171Z	  
2025-09-17T00:39:56.101856Z	Query parameters: {
2025-09-17T00:39:56.103484Z	  limit: 4,
2025-09-17T00:39:56.103614Z	  offset: 0,
2025-09-17T00:39:56.103732Z	  targetMarket: undefined,
2025-09-17T00:39:56.103874Z	  brand: 'ncc',
2025-09-17T00:39:56.104043Z	  featured: undefined
2025-09-17T00:39:56.104196Z	}
2025-09-17T00:39:56.104333Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.104451Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.10456Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.104682Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.104806Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.104913Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-17T00:39:56.105018Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-17T00:39:56.105129Z	✅ [getBrandData] Found brand: PI
2025-09-17T00:39:56.105239Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.10541Z	✅ [getBrandData] Found brand: ncc
2025-09-17T00:39:56.105522Z	✅ [getBrandData] Found brand: ncc
2025-09-17T00:39:56.105643Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.105797Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.105913Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.10603Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.106144Z	✅ [getBrandData] Found brand: Sanrex
2025-09-17T00:39:56.10625Z	✅ [getBrandData] Found brand: Sanrex
2025-09-17T00:39:56.106376Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.106492Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.106602Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.10672Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.106835Z	Products fetch result: {
2025-09-17T00:39:56.106955Z	  totalProducts: 1,
2025-09-17T00:39:56.10706Z	  fetchedProducts: 1,
2025-09-17T00:39:56.107168Z	  firstProduct: {
2025-09-17T00:39:56.107301Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-17T00:39:56.107562Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-17T00:39:56.107685Z	    _type: 'product',
2025-09-17T00:39:56.107799Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-17T00:39:56.108087Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-17T00:39:56.108447Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:56.108927Z	    image: null,
2025-09-17T00:39:56.10908Z	    inventory: {
2025-09-17T00:39:56.109249Z	      inStock: true,
2025-09-17T00:39:56.109938Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-17T00:39:56.111329Z	      quantity: 0,
2025-09-17T00:39:56.111487Z	      status: 'in_stock',
2025-09-17T00:39:56.111606Z	      warehouse: null
2025-09-17T00:39:56.112376Z	    },
2025-09-17T00:39:56.112635Z	    isActive: true,
2025-09-17T00:39:56.113016Z	    isFeatured: false,
2025-09-17T00:39:56.113155Z	    isNew: false,
2025-09-17T00:39:56.114655Z	    partNumber: 'SKKT106/16E',
2025-09-17T00:39:56.114869Z	    pricing: {
2025-09-17T00:39:56.11502Z	      currency: 'CNY',
2025-09-17T00:39:56.115159Z	      leadTime: null,
2025-09-17T00:39:56.115259Z	      moq: null,
2025-09-17T00:39:56.115851Z	      price: null,
2025-09-17T00:39:56.115982Z	      tiers: null
2025-09-17T00:39:56.116156Z	    },
2025-09-17T00:39:56.116428Z	    shortDescription: 'SKKT106/16E',
2025-09-17T00:39:56.116594Z	    slug: 'SKKT106/16E',
2025-09-17T00:39:56.116706Z	    title: 'SKKT106/16E'
2025-09-17T00:39:56.116827Z	  }
2025-09-17T00:39:56.116934Z	}
2025-09-17T00:39:56.117042Z	Products fetch result: {
2025-09-17T00:39:56.117145Z	  totalProducts: 1,
2025-09-17T00:39:56.117245Z	  fetchedProducts: 1,
2025-09-17T00:39:56.117358Z	  firstProduct: {
2025-09-17T00:39:56.117452Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-17T00:39:56.117567Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-17T00:39:56.117662Z	    _type: 'product',
2025-09-17T00:39:56.117756Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-17T00:39:56.11788Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-17T00:39:56.118323Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:56.119196Z	    image: null,
2025-09-17T00:39:56.119389Z	    inventory: {
2025-09-17T00:39:56.119568Z	      inStock: true,
2025-09-17T00:39:56.119711Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-17T00:39:56.119798Z	      quantity: 0,
2025-09-17T00:39:56.119883Z	      status: 'in_stock',
2025-09-17T00:39:56.119993Z	      warehouse: null
2025-09-17T00:39:56.120137Z	    },
2025-09-17T00:39:56.120384Z	    isActive: true,
2025-09-17T00:39:56.120686Z	    isFeatured: false,
2025-09-17T00:39:56.120882Z	    isNew: false,
2025-09-17T00:39:56.121048Z	    partNumber: 'SKKT106/16E',
2025-09-17T00:39:56.121279Z	    pricing: {
2025-09-17T00:39:56.121452Z	      currency: 'CNY',
2025-09-17T00:39:56.121654Z	      leadTime: null,
2025-09-17T00:39:56.121766Z	      moq: null,
2025-09-17T00:39:56.121915Z	      price: null,
2025-09-17T00:39:56.122056Z	      tiers: null
2025-09-17T00:39:56.122165Z	    },
2025-09-17T00:39:56.122418Z	    shortDescription: 'SKKT106/16E',
2025-09-17T00:39:56.12256Z	    slug: 'SKKT106/16E',
2025-09-17T00:39:56.122987Z	    title: 'SKKT106/16E'
2025-09-17T00:39:56.123104Z	  }
2025-09-17T00:39:56.12346Z	}
2025-09-17T00:39:56.123606Z	✅ [getBrandData] Found brand: Semikron
2025-09-17T00:39:56.123724Z	✅ [getBrandData] Found brand: Semikron
2025-09-17T00:39:56.123851Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-17T00:39:56.123973Z	Fetching products with query: 
2025-09-17T00:39:56.12407Z	    {
2025-09-17T00:39:56.12418Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.124339Z	        
2025-09-17T00:39:56.124444Z	    _id,
2025-09-17T00:39:56.124545Z	    _type,
2025-09-17T00:39:56.124637Z	    partNumber,
2025-09-17T00:39:56.124735Z	    "slug": slug.current,
2025-09-17T00:39:56.124826Z	    title,
2025-09-17T00:39:56.124938Z	    shortDescription,
2025-09-17T00:39:56.125042Z	    image,
2025-09-17T00:39:56.125144Z	    brand->{
2025-09-17T00:39:56.125236Z	      name,
2025-09-17T00:39:56.12535Z	      "slug": slug.current,
2025-09-17T00:39:56.125442Z	      logo
2025-09-17T00:39:56.125538Z	    },
2025-09-17T00:39:56.125635Z	    category->{
2025-09-17T00:39:56.125738Z	      name,
2025-09-17T00:39:56.125839Z	      "slug": slug.current
2025-09-17T00:39:56.125957Z	    },
2025-09-17T00:39:56.126053Z	    pricing{
2025-09-17T00:39:56.126149Z	      currency,
2025-09-17T00:39:56.12624Z	      tiers[]{
2025-09-17T00:39:56.126475Z	        quantity,
2025-09-17T00:39:56.126594Z	        price,
2025-09-17T00:39:56.126739Z	        unit
2025-09-17T00:39:56.126845Z	      },
2025-09-17T00:39:56.126945Z	      moq,
2025-09-17T00:39:56.127052Z	      leadTime,
2025-09-17T00:39:56.127137Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.127219Z	      "price": tiers[0].price,
2025-09-17T00:39:56.127345Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.127446Z	    },
2025-09-17T00:39:56.127549Z	    inventory{
2025-09-17T00:39:56.127659Z	      quantity,
2025-09-17T00:39:56.127764Z	      status,
2025-09-17T00:39:56.127863Z	      warehouse,
2025-09-17T00:39:56.128075Z	      lastUpdated,
2025-09-17T00:39:56.128181Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.128297Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.128405Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.128523Z	    },
2025-09-17T00:39:56.12863Z	    isActive,
2025-09-17T00:39:56.128752Z	    isFeatured,
2025-09-17T00:39:56.128865Z	    isNew,
2025-09-17T00:39:56.128978Z	    _createdAt,
2025-09-17T00:39:56.129092Z	    _updatedAt
2025-09-17T00:39:56.12919Z	  
2025-09-17T00:39:56.129311Z	      },
2025-09-17T00:39:56.12945Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-17T00:39:56.129563Z	    }
2025-09-17T00:39:56.129673Z	  
2025-09-17T00:39:56.129813Z	Query parameters: {
2025-09-17T00:39:56.129926Z	  limit: 8,
2025-09-17T00:39:56.130037Z	  offset: 0,
2025-09-17T00:39:56.130141Z	  category: undefined,
2025-09-17T00:39:56.130245Z	  brand: '英飞凌',
2025-09-17T00:39:56.130388Z	  featured: undefined
2025-09-17T00:39:56.130495Z	}
2025-09-17T00:39:56.130592Z	Fetching solutions with query: 
2025-09-17T00:39:56.130703Z	    {
2025-09-17T00:39:56.130808Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.130935Z	        
2025-09-17T00:39:56.131044Z	    _id,
2025-09-17T00:39:56.131141Z	    title,
2025-09-17T00:39:56.131233Z	    "slug": slug.current,
2025-09-17T00:39:56.131361Z	    summary,
2025-09-17T00:39:56.131463Z	    description,
2025-09-17T00:39:56.131566Z	    coverImage,
2025-09-17T00:39:56.131671Z	    primaryBrand->{
2025-09-17T00:39:56.131761Z	      _id,
2025-09-17T00:39:56.131843Z	      name,
2025-09-17T00:39:56.131938Z	      "slug": slug.current,
2025-09-17T00:39:56.132049Z	      logo
2025-09-17T00:39:56.132143Z	    },
2025-09-17T00:39:56.132247Z	    relatedBrands[]->{
2025-09-17T00:39:56.132367Z	      _id,
2025-09-17T00:39:56.132518Z	      name,
2025-09-17T00:39:56.132662Z	      "slug": slug.current,
2025-09-17T00:39:56.132772Z	      logo
2025-09-17T00:39:56.132868Z	    },
2025-09-17T00:39:56.132962Z	    targetMarket,
2025-09-17T00:39:56.133069Z	    complexity,
2025-09-17T00:39:56.133177Z	    publishedAt,
2025-09-17T00:39:56.133289Z	    isPublished,
2025-09-17T00:39:56.133493Z	    isFeatured,
2025-09-17T00:39:56.133588Z	    viewCount,
2025-09-17T00:39:56.133688Z	    _createdAt,
2025-09-17T00:39:56.133808Z	    _updatedAt
2025-09-17T00:39:56.1339Z	  
2025-09-17T00:39:56.133989Z	      },
2025-09-17T00:39:56.134085Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-17T00:39:56.134185Z	    }
2025-09-17T00:39:56.134293Z	  
2025-09-17T00:39:56.134383Z	Query parameters: {
2025-09-17T00:39:56.134468Z	  limit: 4,
2025-09-17T00:39:56.134551Z	  offset: 0,
2025-09-17T00:39:56.134712Z	  targetMarket: undefined,
2025-09-17T00:39:56.134822Z	  brand: '英飞凌',
2025-09-17T00:39:56.134926Z	  featured: undefined
2025-09-17T00:39:56.13503Z	}
2025-09-17T00:39:56.135131Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-17T00:39:56.135233Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.135383Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.135497Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:56.135612Z	Fetching products with query: 
2025-09-17T00:39:56.13572Z	    {
2025-09-17T00:39:56.13581Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.135899Z	        
2025-09-17T00:39:56.13599Z	    _id,
2025-09-17T00:39:56.136075Z	    _type,
2025-09-17T00:39:56.13617Z	    partNumber,
2025-09-17T00:39:56.136506Z	    "slug": slug.current,
2025-09-17T00:39:56.136758Z	    title,
2025-09-17T00:39:56.136858Z	    shortDescription,
2025-09-17T00:39:56.137116Z	    image,
2025-09-17T00:39:56.137405Z	    brand->{
2025-09-17T00:39:56.137492Z	      name,
2025-09-17T00:39:56.137619Z	      "slug": slug.current,
2025-09-17T00:39:56.137817Z	      logo
2025-09-17T00:39:56.138064Z	    },
2025-09-17T00:39:56.138209Z	    category->{
2025-09-17T00:39:56.138459Z	      name,
2025-09-17T00:39:56.138732Z	      "slug": slug.current
2025-09-17T00:39:56.138896Z	    },
2025-09-17T00:39:56.139005Z	    pricing{
2025-09-17T00:39:56.139105Z	      currency,
2025-09-17T00:39:56.139216Z	      tiers[]{
2025-09-17T00:39:56.139358Z	        quantity,
2025-09-17T00:39:56.13953Z	        price,
2025-09-17T00:39:56.139725Z	        unit
2025-09-17T00:39:56.139848Z	      },
2025-09-17T00:39:56.139955Z	      moq,
2025-09-17T00:39:56.140093Z	      leadTime,
2025-09-17T00:39:56.140221Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.140427Z	      "price": tiers[0].price,
2025-09-17T00:39:56.140558Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.140719Z	    },
2025-09-17T00:39:56.140874Z	    inventory{
2025-09-17T00:39:56.141448Z	      quantity,
2025-09-17T00:39:56.141594Z	      status,
2025-09-17T00:39:56.141886Z	      warehouse,
2025-09-17T00:39:56.142067Z	      lastUpdated,
2025-09-17T00:39:56.142185Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.142319Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.142489Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.142625Z	    },
2025-09-17T00:39:56.14274Z	    isActive,
2025-09-17T00:39:56.142891Z	    isFeatured,
2025-09-17T00:39:56.142984Z	    isNew,
2025-09-17T00:39:56.143049Z	    _createdAt,
2025-09-17T00:39:56.143241Z	    _updatedAt
2025-09-17T00:39:56.143374Z	  
2025-09-17T00:39:56.143637Z	      },
2025-09-17T00:39:56.143757Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-17T00:39:56.143859Z	    }
2025-09-17T00:39:56.144004Z	  
2025-09-17T00:39:56.14416Z	Query parameters: {
2025-09-17T00:39:56.144299Z	  limit: 8,
2025-09-17T00:39:56.144411Z	  offset: 0,
2025-09-17T00:39:56.144632Z	  category: undefined,
2025-09-17T00:39:56.144729Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:39:56.144796Z	  featured: undefined
2025-09-17T00:39:56.144914Z	}
2025-09-17T00:39:56.145079Z	Fetching solutions with query: 
2025-09-17T00:39:56.145213Z	    {
2025-09-17T00:39:56.14533Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.145852Z	        
2025-09-17T00:39:56.145931Z	    _id,
2025-09-17T00:39:56.145994Z	    title,
2025-09-17T00:39:56.146049Z	    "slug": slug.current,
2025-09-17T00:39:56.146126Z	    summary,
2025-09-17T00:39:56.146184Z	    description,
2025-09-17T00:39:56.146238Z	    coverImage,
2025-09-17T00:39:56.146325Z	    primaryBrand->{
2025-09-17T00:39:56.146387Z	      _id,
2025-09-17T00:39:56.146442Z	      name,
2025-09-17T00:39:56.146514Z	      "slug": slug.current,
2025-09-17T00:39:56.146696Z	      logo
2025-09-17T00:39:56.146796Z	    },
2025-09-17T00:39:56.1469Z	    relatedBrands[]->{
2025-09-17T00:39:56.147044Z	      _id,
2025-09-17T00:39:56.147142Z	      name,
2025-09-17T00:39:56.147238Z	      "slug": slug.current,
2025-09-17T00:39:56.147387Z	      logo
2025-09-17T00:39:56.147498Z	    },
2025-09-17T00:39:56.147671Z	    targetMarket,
2025-09-17T00:39:56.14779Z	    complexity,
2025-09-17T00:39:56.14789Z	    publishedAt,
2025-09-17T00:39:56.147989Z	    isPublished,
2025-09-17T00:39:56.148104Z	    isFeatured,
2025-09-17T00:39:56.148191Z	    viewCount,
2025-09-17T00:39:56.148288Z	    _createdAt,
2025-09-17T00:39:56.148382Z	    _updatedAt
2025-09-17T00:39:56.148475Z	  
2025-09-17T00:39:56.14857Z	      },
2025-09-17T00:39:56.148658Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-17T00:39:56.148769Z	    }
2025-09-17T00:39:56.148863Z	  
2025-09-17T00:39:56.148959Z	Query parameters: {
2025-09-17T00:39:56.149048Z	  limit: 4,
2025-09-17T00:39:56.14915Z	  offset: 0,
2025-09-17T00:39:56.149243Z	  targetMarket: undefined,
2025-09-17T00:39:56.149362Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:39:56.149461Z	  featured: undefined
2025-09-17T00:39:56.149554Z	}
2025-09-17T00:39:56.149648Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:56.149746Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.149978Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.150096Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-17T00:39:56.150205Z	Fetching products with query: 
2025-09-17T00:39:56.150338Z	    {
2025-09-17T00:39:56.150441Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.15055Z	        
2025-09-17T00:39:56.150781Z	    _id,
2025-09-17T00:39:56.150908Z	    _type,
2025-09-17T00:39:56.151029Z	    partNumber,
2025-09-17T00:39:56.151131Z	    "slug": slug.current,
2025-09-17T00:39:56.151234Z	    title,
2025-09-17T00:39:56.151356Z	    shortDescription,
2025-09-17T00:39:56.151463Z	    image,
2025-09-17T00:39:56.151571Z	    brand->{
2025-09-17T00:39:56.151674Z	      name,
2025-09-17T00:39:56.151774Z	      "slug": slug.current,
2025-09-17T00:39:56.151873Z	      logo
2025-09-17T00:39:56.151974Z	    },
2025-09-17T00:39:56.152086Z	    category->{
2025-09-17T00:39:56.152188Z	      name,
2025-09-17T00:39:56.152296Z	      "slug": slug.current
2025-09-17T00:39:56.152399Z	    },
2025-09-17T00:39:56.1525Z	    pricing{
2025-09-17T00:39:56.152621Z	      currency,
2025-09-17T00:39:56.152727Z	      tiers[]{
2025-09-17T00:39:56.152829Z	        quantity,
2025-09-17T00:39:56.152931Z	        price,
2025-09-17T00:39:56.153034Z	        unit
2025-09-17T00:39:56.153128Z	      },
2025-09-17T00:39:56.153227Z	      moq,
2025-09-17T00:39:56.153346Z	      leadTime,
2025-09-17T00:39:56.153573Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.153699Z	      "price": tiers[0].price,
2025-09-17T00:39:56.153802Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.153899Z	    },
2025-09-17T00:39:56.154005Z	    inventory{
2025-09-17T00:39:56.154099Z	      quantity,
2025-09-17T00:39:56.154211Z	      status,
2025-09-17T00:39:56.15433Z	      warehouse,
2025-09-17T00:39:56.154464Z	      lastUpdated,
2025-09-17T00:39:56.154581Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.154694Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.154799Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.154899Z	    },
2025-09-17T00:39:56.155002Z	    isActive,
2025-09-17T00:39:56.155105Z	    isFeatured,
2025-09-17T00:39:56.155208Z	    isNew,
2025-09-17T00:39:56.155334Z	    _createdAt,
2025-09-17T00:39:56.155442Z	    _updatedAt
2025-09-17T00:39:56.155543Z	  
2025-09-17T00:39:56.155638Z	      },
2025-09-17T00:39:56.155867Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-17T00:39:56.156001Z	    }
2025-09-17T00:39:56.15611Z	  
2025-09-17T00:39:56.156207Z	Query parameters: {
2025-09-17T00:39:56.156327Z	  limit: 8,
2025-09-17T00:39:56.156425Z	  offset: 0,
2025-09-17T00:39:56.156518Z	  category: undefined,
2025-09-17T00:39:56.156609Z	  brand: 'ixys',
2025-09-17T00:39:56.1567Z	  featured: undefined
2025-09-17T00:39:56.156792Z	}
2025-09-17T00:39:56.156893Z	Fetching solutions with query: 
2025-09-17T00:39:56.157001Z	    {
2025-09-17T00:39:56.157127Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.157237Z	        
2025-09-17T00:39:56.157356Z	    _id,
2025-09-17T00:39:56.15745Z	    title,
2025-09-17T00:39:56.157539Z	    "slug": slug.current,
2025-09-17T00:39:56.157651Z	    summary,
2025-09-17T00:39:56.157753Z	    description,
2025-09-17T00:39:56.157845Z	    coverImage,
2025-09-17T00:39:56.157945Z	    primaryBrand->{
2025-09-17T00:39:56.158057Z	      _id,
2025-09-17T00:39:56.158157Z	      name,
2025-09-17T00:39:56.158278Z	      "slug": slug.current,
2025-09-17T00:39:56.158386Z	      logo
2025-09-17T00:39:56.158492Z	    },
2025-09-17T00:39:56.158594Z	    relatedBrands[]->{
2025-09-17T00:39:56.158686Z	      _id,
2025-09-17T00:39:56.15881Z	      name,
2025-09-17T00:39:56.158913Z	      "slug": slug.current,
2025-09-17T00:39:56.15913Z	      logo
2025-09-17T00:39:56.159251Z	    },
2025-09-17T00:39:56.159373Z	    targetMarket,
2025-09-17T00:39:56.159483Z	    complexity,
2025-09-17T00:39:56.15959Z	    publishedAt,
2025-09-17T00:39:56.159729Z	    isPublished,
2025-09-17T00:39:56.159841Z	    isFeatured,
2025-09-17T00:39:56.159948Z	    viewCount,
2025-09-17T00:39:56.160071Z	    _createdAt,
2025-09-17T00:39:56.160317Z	    _updatedAt
2025-09-17T00:39:56.160405Z	  
2025-09-17T00:39:56.160702Z	      },
2025-09-17T00:39:56.160828Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-17T00:39:56.160944Z	    }
2025-09-17T00:39:56.161012Z	  
2025-09-17T00:39:56.161068Z	Query parameters: {
2025-09-17T00:39:56.161162Z	  limit: 4,
2025-09-17T00:39:56.161308Z	  offset: 0,
2025-09-17T00:39:56.161396Z	  targetMarket: undefined,
2025-09-17T00:39:56.161495Z	  brand: 'ixys',
2025-09-17T00:39:56.187571Z	  featured: undefined
2025-09-17T00:39:56.187685Z	}
2025-09-17T00:39:56.187786Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-17T00:39:56.187891Z	Fetching products with query: 
2025-09-17T00:39:56.187997Z	    {
2025-09-17T00:39:56.188108Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.188208Z	        
2025-09-17T00:39:56.188323Z	    _id,
2025-09-17T00:39:56.188436Z	    _type,
2025-09-17T00:39:56.188541Z	    partNumber,
2025-09-17T00:39:56.188655Z	    "slug": slug.current,
2025-09-17T00:39:56.18876Z	    title,
2025-09-17T00:39:56.188865Z	    shortDescription,
2025-09-17T00:39:56.188978Z	    image,
2025-09-17T00:39:56.189076Z	    brand->{
2025-09-17T00:39:56.189171Z	      name,
2025-09-17T00:39:56.189281Z	      "slug": slug.current,
2025-09-17T00:39:56.189383Z	      logo
2025-09-17T00:39:56.189478Z	    },
2025-09-17T00:39:56.189567Z	    category->{
2025-09-17T00:39:56.189659Z	      name,
2025-09-17T00:39:56.189777Z	      "slug": slug.current
2025-09-17T00:39:56.189888Z	    },
2025-09-17T00:39:56.190003Z	    pricing{
2025-09-17T00:39:56.190129Z	      currency,
2025-09-17T00:39:56.190341Z	      tiers[]{
2025-09-17T00:39:56.190465Z	        quantity,
2025-09-17T00:39:56.190567Z	        price,
2025-09-17T00:39:56.190725Z	        unit
2025-09-17T00:39:56.190829Z	      },
2025-09-17T00:39:56.190924Z	      moq,
2025-09-17T00:39:56.191102Z	      leadTime,
2025-09-17T00:39:56.19121Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.191313Z	      "price": tiers[0].price,
2025-09-17T00:39:56.191426Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.191574Z	    },
2025-09-17T00:39:56.191684Z	    inventory{
2025-09-17T00:39:56.191808Z	      quantity,
2025-09-17T00:39:56.19192Z	      status,
2025-09-17T00:39:56.19203Z	      warehouse,
2025-09-17T00:39:56.192137Z	      lastUpdated,
2025-09-17T00:39:56.192251Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.19243Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.192571Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.192711Z	    },
2025-09-17T00:39:56.192792Z	    isActive,
2025-09-17T00:39:56.192883Z	    isFeatured,
2025-09-17T00:39:56.193075Z	    isNew,
2025-09-17T00:39:56.193208Z	    _createdAt,
2025-09-17T00:39:56.193365Z	    _updatedAt
2025-09-17T00:39:56.193467Z	  
2025-09-17T00:39:56.1936Z	      },
2025-09-17T00:39:56.193717Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-17T00:39:56.193875Z	    }
2025-09-17T00:39:56.193987Z	  
2025-09-17T00:39:56.194171Z	Query parameters: {
2025-09-17T00:39:56.194416Z	  limit: 8,
2025-09-17T00:39:56.194611Z	  offset: 0,
2025-09-17T00:39:56.194731Z	  category: undefined,
2025-09-17T00:39:56.194914Z	  brand: 'cree',
2025-09-17T00:39:56.195059Z	  featured: undefined
2025-09-17T00:39:56.195299Z	}
2025-09-17T00:39:56.195426Z	Fetching solutions with query: 
2025-09-17T00:39:56.195611Z	    {
2025-09-17T00:39:56.195832Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.19603Z	        
2025-09-17T00:39:56.196478Z	    _id,
2025-09-17T00:39:56.196583Z	    title,
2025-09-17T00:39:56.196709Z	    "slug": slug.current,
2025-09-17T00:39:56.196875Z	    summary,
2025-09-17T00:39:56.19703Z	    description,
2025-09-17T00:39:56.197342Z	    coverImage,
2025-09-17T00:39:56.197616Z	    primaryBrand->{
2025-09-17T00:39:56.197698Z	      _id,
2025-09-17T00:39:56.197767Z	      name,
2025-09-17T00:39:56.197823Z	      "slug": slug.current,
2025-09-17T00:39:56.197935Z	      logo
2025-09-17T00:39:56.198069Z	    },
2025-09-17T00:39:56.1982Z	    relatedBrands[]->{
2025-09-17T00:39:56.198351Z	      _id,
2025-09-17T00:39:56.19858Z	      name,
2025-09-17T00:39:56.198938Z	      "slug": slug.current,
2025-09-17T00:39:56.199026Z	      logo
2025-09-17T00:39:56.19925Z	    },
2025-09-17T00:39:56.19939Z	    targetMarket,
2025-09-17T00:39:56.199776Z	    complexity,
2025-09-17T00:39:56.199862Z	    publishedAt,
2025-09-17T00:39:56.199943Z	    isPublished,
2025-09-17T00:39:56.200043Z	    isFeatured,
2025-09-17T00:39:56.200147Z	    viewCount,
2025-09-17T00:39:56.200238Z	    _createdAt,
2025-09-17T00:39:56.200366Z	    _updatedAt
2025-09-17T00:39:56.200556Z	  
2025-09-17T00:39:56.200681Z	      },
2025-09-17T00:39:56.200883Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-17T00:39:56.200989Z	    }
2025-09-17T00:39:56.2012Z	  
2025-09-17T00:39:56.201384Z	Query parameters: {
2025-09-17T00:39:56.201478Z	  limit: 4,
2025-09-17T00:39:56.201613Z	  offset: 0,
2025-09-17T00:39:56.201723Z	  targetMarket: undefined,
2025-09-17T00:39:56.201818Z	  brand: 'cree',
2025-09-17T00:39:56.201939Z	  featured: undefined
2025-09-17T00:39:56.202054Z	}
2025-09-17T00:39:56.20216Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-17T00:39:56.202242Z	Fetching products with query: 
2025-09-17T00:39:56.202355Z	    {
2025-09-17T00:39:56.202474Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.202585Z	        
2025-09-17T00:39:56.202693Z	    _id,
2025-09-17T00:39:56.202782Z	    _type,
2025-09-17T00:39:56.202889Z	    partNumber,
2025-09-17T00:39:56.203035Z	    "slug": slug.current,
2025-09-17T00:39:56.203141Z	    title,
2025-09-17T00:39:56.203247Z	    shortDescription,
2025-09-17T00:39:56.203394Z	    image,
2025-09-17T00:39:56.203518Z	    brand->{
2025-09-17T00:39:56.20368Z	      name,
2025-09-17T00:39:56.203809Z	      "slug": slug.current,
2025-09-17T00:39:56.20398Z	      logo
2025-09-17T00:39:56.204135Z	    },
2025-09-17T00:39:56.204243Z	    category->{
2025-09-17T00:39:56.204416Z	      name,
2025-09-17T00:39:56.204545Z	      "slug": slug.current
2025-09-17T00:39:56.204629Z	    },
2025-09-17T00:39:56.204896Z	    pricing{
2025-09-17T00:39:56.205038Z	      currency,
2025-09-17T00:39:56.20515Z	      tiers[]{
2025-09-17T00:39:56.205283Z	        quantity,
2025-09-17T00:39:56.205388Z	        price,
2025-09-17T00:39:56.205622Z	        unit
2025-09-17T00:39:56.205913Z	      },
2025-09-17T00:39:56.205994Z	      moq,
2025-09-17T00:39:56.206078Z	      leadTime,
2025-09-17T00:39:56.206442Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.206532Z	      "price": tiers[0].price,
2025-09-17T00:39:56.206633Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.206886Z	    },
2025-09-17T00:39:56.207011Z	    inventory{
2025-09-17T00:39:56.207111Z	      quantity,
2025-09-17T00:39:56.207214Z	      status,
2025-09-17T00:39:56.207323Z	      warehouse,
2025-09-17T00:39:56.207432Z	      lastUpdated,
2025-09-17T00:39:56.207539Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.207664Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.207742Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.207806Z	    },
2025-09-17T00:39:56.207892Z	    isActive,
2025-09-17T00:39:56.207983Z	    isFeatured,
2025-09-17T00:39:56.208051Z	    isNew,
2025-09-17T00:39:56.208108Z	    _createdAt,
2025-09-17T00:39:56.208164Z	    _updatedAt
2025-09-17T00:39:56.208286Z	  
2025-09-17T00:39:56.208444Z	      },
2025-09-17T00:39:56.208565Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-17T00:39:56.208665Z	    }
2025-09-17T00:39:56.208778Z	  
2025-09-17T00:39:56.208866Z	Query parameters: {
2025-09-17T00:39:56.208982Z	  limit: 8,
2025-09-17T00:39:56.209074Z	  offset: 0,
2025-09-17T00:39:56.209166Z	  category: undefined,
2025-09-17T00:39:56.209257Z	  brand: 'epcos',
2025-09-17T00:39:56.209369Z	  featured: undefined
2025-09-17T00:39:56.209476Z	}
2025-09-17T00:39:56.209617Z	Fetching solutions with query: 
2025-09-17T00:39:56.209687Z	    {
2025-09-17T00:39:56.209759Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.209826Z	        
2025-09-17T00:39:56.21Z	    _id,
2025-09-17T00:39:56.210099Z	    title,
2025-09-17T00:39:56.210232Z	    "slug": slug.current,
2025-09-17T00:39:56.210354Z	    summary,
2025-09-17T00:39:56.210446Z	    description,
2025-09-17T00:39:56.210572Z	    coverImage,
2025-09-17T00:39:56.210744Z	    primaryBrand->{
2025-09-17T00:39:56.210858Z	      _id,
2025-09-17T00:39:56.211029Z	      name,
2025-09-17T00:39:56.211165Z	      "slug": slug.current,
2025-09-17T00:39:56.211293Z	      logo
2025-09-17T00:39:56.21141Z	    },
2025-09-17T00:39:56.211485Z	    relatedBrands[]->{
2025-09-17T00:39:56.211652Z	      _id,
2025-09-17T00:39:56.211833Z	      name,
2025-09-17T00:39:56.211963Z	      "slug": slug.current,
2025-09-17T00:39:56.212131Z	      logo
2025-09-17T00:39:56.212292Z	    },
2025-09-17T00:39:56.212384Z	    targetMarket,
2025-09-17T00:39:56.212593Z	    complexity,
2025-09-17T00:39:56.212756Z	    publishedAt,
2025-09-17T00:39:56.213047Z	    isPublished,
2025-09-17T00:39:56.213127Z	    isFeatured,
2025-09-17T00:39:56.213388Z	    viewCount,
2025-09-17T00:39:56.213486Z	    _createdAt,
2025-09-17T00:39:56.213624Z	    _updatedAt
2025-09-17T00:39:56.213746Z	  
2025-09-17T00:39:56.213847Z	      },
2025-09-17T00:39:56.213954Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-17T00:39:56.214094Z	    }
2025-09-17T00:39:56.21424Z	  
2025-09-17T00:39:56.214358Z	Query parameters: {
2025-09-17T00:39:56.214521Z	  limit: 4,
2025-09-17T00:39:56.214671Z	  offset: 0,
2025-09-17T00:39:56.214826Z	  targetMarket: undefined,
2025-09-17T00:39:56.214911Z	  brand: 'epcos',
2025-09-17T00:39:56.215055Z	  featured: undefined
2025-09-17T00:39:56.215166Z	}
2025-09-17T00:39:56.215247Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-17T00:39:56.215357Z	Fetching products with query: 
2025-09-17T00:39:56.215421Z	    {
2025-09-17T00:39:56.215494Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.215562Z	        
2025-09-17T00:39:56.215632Z	    _id,
2025-09-17T00:39:56.215723Z	    _type,
2025-09-17T00:39:56.215811Z	    partNumber,
2025-09-17T00:39:56.215904Z	    "slug": slug.current,
2025-09-17T00:39:56.215994Z	    title,
2025-09-17T00:39:56.21609Z	    shortDescription,
2025-09-17T00:39:56.216193Z	    image,
2025-09-17T00:39:56.216299Z	    brand->{
2025-09-17T00:39:56.216393Z	      name,
2025-09-17T00:39:56.216484Z	      "slug": slug.current,
2025-09-17T00:39:56.21658Z	      logo
2025-09-17T00:39:56.216684Z	    },
2025-09-17T00:39:56.216794Z	    category->{
2025-09-17T00:39:56.216888Z	      name,
2025-09-17T00:39:56.216979Z	      "slug": slug.current
2025-09-17T00:39:56.217072Z	    },
2025-09-17T00:39:56.217174Z	    pricing{
2025-09-17T00:39:56.217265Z	      currency,
2025-09-17T00:39:56.217382Z	      tiers[]{
2025-09-17T00:39:56.217478Z	        quantity,
2025-09-17T00:39:56.217581Z	        price,
2025-09-17T00:39:56.217687Z	        unit
2025-09-17T00:39:56.217806Z	      },
2025-09-17T00:39:56.217909Z	      moq,
2025-09-17T00:39:56.218005Z	      leadTime,
2025-09-17T00:39:56.2181Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.218213Z	      "price": tiers[0].price,
2025-09-17T00:39:56.218333Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.21844Z	    },
2025-09-17T00:39:56.218543Z	    inventory{
2025-09-17T00:39:56.218649Z	      quantity,
2025-09-17T00:39:56.218761Z	      status,
2025-09-17T00:39:56.218863Z	      warehouse,
2025-09-17T00:39:56.218964Z	      lastUpdated,
2025-09-17T00:39:56.219067Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.219163Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.219278Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.219407Z	    },
2025-09-17T00:39:56.219527Z	    isActive,
2025-09-17T00:39:56.219628Z	    isFeatured,
2025-09-17T00:39:56.219741Z	    isNew,
2025-09-17T00:39:56.21984Z	    _createdAt,
2025-09-17T00:39:56.219945Z	    _updatedAt
2025-09-17T00:39:56.22005Z	  
2025-09-17T00:39:56.220151Z	      },
2025-09-17T00:39:56.220281Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-17T00:39:56.220384Z	    }
2025-09-17T00:39:56.220498Z	  
2025-09-17T00:39:56.2206Z	Query parameters: {
2025-09-17T00:39:56.220716Z	  limit: 8,
2025-09-17T00:39:56.220823Z	  offset: 0,
2025-09-17T00:39:56.220931Z	  category: undefined,
2025-09-17T00:39:56.221035Z	  brand: 'epcos',
2025-09-17T00:39:56.221136Z	  featured: undefined
2025-09-17T00:39:56.221254Z	}
2025-09-17T00:39:56.221375Z	Fetching solutions with query: 
2025-09-17T00:39:56.221478Z	    {
2025-09-17T00:39:56.221583Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.221691Z	        
2025-09-17T00:39:56.221805Z	    _id,
2025-09-17T00:39:56.221901Z	    title,
2025-09-17T00:39:56.221993Z	    "slug": slug.current,
2025-09-17T00:39:56.222085Z	    summary,
2025-09-17T00:39:56.222185Z	    description,
2025-09-17T00:39:56.222306Z	    coverImage,
2025-09-17T00:39:56.222413Z	    primaryBrand->{
2025-09-17T00:39:56.222509Z	      _id,
2025-09-17T00:39:56.222602Z	      name,
2025-09-17T00:39:56.222692Z	      "slug": slug.current,
2025-09-17T00:39:56.222806Z	      logo
2025-09-17T00:39:56.222898Z	    },
2025-09-17T00:39:56.222993Z	    relatedBrands[]->{
2025-09-17T00:39:56.223093Z	      _id,
2025-09-17T00:39:56.223185Z	      name,
2025-09-17T00:39:56.22329Z	      "slug": slug.current,
2025-09-17T00:39:56.223395Z	      logo
2025-09-17T00:39:56.223496Z	    },
2025-09-17T00:39:56.223598Z	    targetMarket,
2025-09-17T00:39:56.223712Z	    complexity,
2025-09-17T00:39:56.223815Z	    publishedAt,
2025-09-17T00:39:56.223914Z	    isPublished,
2025-09-17T00:39:56.224015Z	    isFeatured,
2025-09-17T00:39:56.224116Z	    viewCount,
2025-09-17T00:39:56.224239Z	    _createdAt,
2025-09-17T00:39:56.224447Z	    _updatedAt
2025-09-17T00:39:56.224705Z	  
2025-09-17T00:39:56.224869Z	      },
2025-09-17T00:39:56.224956Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-17T00:39:56.225028Z	    }
2025-09-17T00:39:56.225164Z	  
2025-09-17T00:39:56.22524Z	Query parameters: {
2025-09-17T00:39:56.225364Z	  limit: 4,
2025-09-17T00:39:56.225478Z	  offset: 0,
2025-09-17T00:39:56.225619Z	  targetMarket: undefined,
2025-09-17T00:39:56.225722Z	  brand: 'epcos',
2025-09-17T00:39:56.225833Z	  featured: undefined
2025-09-17T00:39:56.22593Z	}
2025-09-17T00:39:56.226034Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.226132Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.226228Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.226359Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.226465Z	✅ [getBrandData] Found brand: Epcos
2025-09-17T00:39:56.22658Z	✅ [getBrandData] Found brand: Epcos
2025-09-17T00:39:56.226653Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-17T00:39:56.226739Z	Fetching products with query: 
2025-09-17T00:39:56.226852Z	    {
2025-09-17T00:39:56.226997Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.227143Z	        
2025-09-17T00:39:56.227306Z	    _id,
2025-09-17T00:39:56.227393Z	    _type,
2025-09-17T00:39:56.227511Z	    partNumber,
2025-09-17T00:39:56.227634Z	    "slug": slug.current,
2025-09-17T00:39:56.227735Z	    title,
2025-09-17T00:39:56.227831Z	    shortDescription,
2025-09-17T00:39:56.227923Z	    image,
2025-09-17T00:39:56.228028Z	    brand->{
2025-09-17T00:39:56.228095Z	      name,
2025-09-17T00:39:56.228177Z	      "slug": slug.current,
2025-09-17T00:39:56.22832Z	      logo
2025-09-17T00:39:56.228425Z	    },
2025-09-17T00:39:56.228533Z	    category->{
2025-09-17T00:39:56.228639Z	      name,
2025-09-17T00:39:56.228741Z	      "slug": slug.current
2025-09-17T00:39:56.228838Z	    },
2025-09-17T00:39:56.228928Z	    pricing{
2025-09-17T00:39:56.229039Z	      currency,
2025-09-17T00:39:56.229135Z	      tiers[]{
2025-09-17T00:39:56.229229Z	        quantity,
2025-09-17T00:39:56.229344Z	        price,
2025-09-17T00:39:56.229447Z	        unit
2025-09-17T00:39:56.229542Z	      },
2025-09-17T00:39:56.229635Z	      moq,
2025-09-17T00:39:56.229732Z	      leadTime,
2025-09-17T00:39:56.229836Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.229942Z	      "price": tiers[0].price,
2025-09-17T00:39:56.230053Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.230149Z	    },
2025-09-17T00:39:56.230243Z	    inventory{
2025-09-17T00:39:56.230366Z	      quantity,
2025-09-17T00:39:56.230475Z	      status,
2025-09-17T00:39:56.230573Z	      warehouse,
2025-09-17T00:39:56.230667Z	      lastUpdated,
2025-09-17T00:39:56.230764Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.23087Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.230992Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.231149Z	    },
2025-09-17T00:39:56.23123Z	    isActive,
2025-09-17T00:39:56.231362Z	    isFeatured,
2025-09-17T00:39:56.231511Z	    isNew,
2025-09-17T00:39:56.231624Z	    _createdAt,
2025-09-17T00:39:56.231746Z	    _updatedAt
2025-09-17T00:39:56.231887Z	  
2025-09-17T00:39:56.232026Z	      },
2025-09-17T00:39:56.232186Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-17T00:39:56.23231Z	    }
2025-09-17T00:39:56.232476Z	  
2025-09-17T00:39:56.232633Z	Query parameters: {
2025-09-17T00:39:56.232771Z	  limit: 8,
2025-09-17T00:39:56.232912Z	  offset: 0,
2025-09-17T00:39:56.233038Z	  category: undefined,
2025-09-17T00:39:56.233185Z	  brand: 'pi',
2025-09-17T00:39:56.233336Z	  featured: undefined
2025-09-17T00:39:56.233508Z	}
2025-09-17T00:39:56.233589Z	Fetching solutions with query: 
2025-09-17T00:39:56.233694Z	    {
2025-09-17T00:39:56.233793Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.233894Z	        
2025-09-17T00:39:56.234001Z	    _id,
2025-09-17T00:39:56.234099Z	    title,
2025-09-17T00:39:56.234258Z	    "slug": slug.current,
2025-09-17T00:39:56.234412Z	    summary,
2025-09-17T00:39:56.234511Z	    description,
2025-09-17T00:39:56.234617Z	    coverImage,
2025-09-17T00:39:56.234726Z	    primaryBrand->{
2025-09-17T00:39:56.234834Z	      _id,
2025-09-17T00:39:56.234967Z	      name,
2025-09-17T00:39:56.23506Z	      "slug": slug.current,
2025-09-17T00:39:56.235234Z	      logo
2025-09-17T00:39:56.235362Z	    },
2025-09-17T00:39:56.235483Z	    relatedBrands[]->{
2025-09-17T00:39:56.23558Z	      _id,
2025-09-17T00:39:56.235678Z	      name,
2025-09-17T00:39:56.235781Z	      "slug": slug.current,
2025-09-17T00:39:56.235898Z	      logo
2025-09-17T00:39:56.236039Z	    },
2025-09-17T00:39:56.236161Z	    targetMarket,
2025-09-17T00:39:56.236306Z	    complexity,
2025-09-17T00:39:56.236422Z	    publishedAt,
2025-09-17T00:39:56.236523Z	    isPublished,
2025-09-17T00:39:56.236656Z	    isFeatured,
2025-09-17T00:39:56.236791Z	    viewCount,
2025-09-17T00:39:56.236872Z	    _createdAt,
2025-09-17T00:39:56.236928Z	    _updatedAt
2025-09-17T00:39:56.237287Z	  
2025-09-17T00:39:56.237653Z	      },
2025-09-17T00:39:56.237785Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-17T00:39:56.237926Z	    }
2025-09-17T00:39:56.238033Z	  
2025-09-17T00:39:56.238127Z	Query parameters: {
2025-09-17T00:39:56.238241Z	  limit: 4,
2025-09-17T00:39:56.238358Z	  offset: 0,
2025-09-17T00:39:56.238482Z	  targetMarket: undefined,
2025-09-17T00:39:56.238642Z	  brand: 'pi',
2025-09-17T00:39:56.238734Z	  featured: undefined
2025-09-17T00:39:56.238859Z	}
2025-09-17T00:39:56.238965Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-17T00:39:56.239096Z	Fetching products with query: 
2025-09-17T00:39:56.239178Z	    {
2025-09-17T00:39:56.239312Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.239474Z	        
2025-09-17T00:39:56.239671Z	    _id,
2025-09-17T00:39:56.239836Z	    _type,
2025-09-17T00:39:56.239999Z	    partNumber,
2025-09-17T00:39:56.24014Z	    "slug": slug.current,
2025-09-17T00:39:56.240263Z	    title,
2025-09-17T00:39:56.240373Z	    shortDescription,
2025-09-17T00:39:56.240521Z	    image,
2025-09-17T00:39:56.24063Z	    brand->{
2025-09-17T00:39:56.240801Z	      name,
2025-09-17T00:39:56.240916Z	      "slug": slug.current,
2025-09-17T00:39:56.241031Z	      logo
2025-09-17T00:39:56.241135Z	    },
2025-09-17T00:39:56.241239Z	    category->{
2025-09-17T00:39:56.241356Z	      name,
2025-09-17T00:39:56.241456Z	      "slug": slug.current
2025-09-17T00:39:56.241552Z	    },
2025-09-17T00:39:56.241642Z	    pricing{
2025-09-17T00:39:56.241734Z	      currency,
2025-09-17T00:39:56.24183Z	      tiers[]{
2025-09-17T00:39:56.241889Z	        quantity,
2025-09-17T00:39:56.241975Z	        price,
2025-09-17T00:39:56.242161Z	        unit
2025-09-17T00:39:56.24235Z	      },
2025-09-17T00:39:56.242545Z	      moq,
2025-09-17T00:39:56.242677Z	      leadTime,
2025-09-17T00:39:56.242802Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.242944Z	      "price": tiers[0].price,
2025-09-17T00:39:56.24317Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.243293Z	    },
2025-09-17T00:39:56.243454Z	    inventory{
2025-09-17T00:39:56.243669Z	      quantity,
2025-09-17T00:39:56.243772Z	      status,
2025-09-17T00:39:56.243876Z	      warehouse,
2025-09-17T00:39:56.243983Z	      lastUpdated,
2025-09-17T00:39:56.244115Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.244219Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.244352Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.244449Z	    },
2025-09-17T00:39:56.244551Z	    isActive,
2025-09-17T00:39:56.244671Z	    isFeatured,
2025-09-17T00:39:56.244784Z	    isNew,
2025-09-17T00:39:56.244893Z	    _createdAt,
2025-09-17T00:39:56.245034Z	    _updatedAt
2025-09-17T00:39:56.245145Z	  
2025-09-17T00:39:56.245219Z	      },
2025-09-17T00:39:56.245418Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-17T00:39:56.245547Z	    }
2025-09-17T00:39:56.245661Z	  
2025-09-17T00:39:56.245827Z	Query parameters: {
2025-09-17T00:39:56.2459Z	  limit: 8,
2025-09-17T00:39:56.246051Z	  offset: 0,
2025-09-17T00:39:56.24625Z	  category: undefined,
2025-09-17T00:39:56.246426Z	  brand: 'pi',
2025-09-17T00:39:56.246562Z	  featured: undefined
2025-09-17T00:39:56.246712Z	}
2025-09-17T00:39:56.246852Z	Fetching solutions with query: 
2025-09-17T00:39:56.246969Z	    {
2025-09-17T00:39:56.247092Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.247187Z	        
2025-09-17T00:39:56.247288Z	    _id,
2025-09-17T00:39:56.247395Z	    title,
2025-09-17T00:39:56.247488Z	    "slug": slug.current,
2025-09-17T00:39:56.247591Z	    summary,
2025-09-17T00:39:56.247707Z	    description,
2025-09-17T00:39:56.247813Z	    coverImage,
2025-09-17T00:39:56.247908Z	    primaryBrand->{
2025-09-17T00:39:56.248007Z	      _id,
2025-09-17T00:39:56.248107Z	      name,
2025-09-17T00:39:56.248194Z	      "slug": slug.current,
2025-09-17T00:39:56.248289Z	      logo
2025-09-17T00:39:56.248384Z	    },
2025-09-17T00:39:56.248471Z	    relatedBrands[]->{
2025-09-17T00:39:56.248559Z	      _id,
2025-09-17T00:39:56.248643Z	      name,
2025-09-17T00:39:56.248736Z	      "slug": slug.current,
2025-09-17T00:39:56.248821Z	      logo
2025-09-17T00:39:56.248907Z	    },
2025-09-17T00:39:56.249005Z	    targetMarket,
2025-09-17T00:39:56.249112Z	    complexity,
2025-09-17T00:39:56.249208Z	    publishedAt,
2025-09-17T00:39:56.249331Z	    isPublished,
2025-09-17T00:39:56.249435Z	    isFeatured,
2025-09-17T00:39:56.249527Z	    viewCount,
2025-09-17T00:39:56.249617Z	    _createdAt,
2025-09-17T00:39:56.24972Z	    _updatedAt
2025-09-17T00:39:56.249822Z	  
2025-09-17T00:39:56.249919Z	      },
2025-09-17T00:39:56.250018Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-17T00:39:56.250322Z	    }
2025-09-17T00:39:56.250447Z	  
2025-09-17T00:39:56.250586Z	Query parameters: {
2025-09-17T00:39:56.25078Z	  limit: 4,
2025-09-17T00:39:56.250904Z	  offset: 0,
2025-09-17T00:39:56.251034Z	  targetMarket: undefined,
2025-09-17T00:39:56.251144Z	  brand: 'pi',
2025-09-17T00:39:56.251285Z	  featured: undefined
2025-09-17T00:39:56.251404Z	}
2025-09-17T00:39:56.251515Z	✅ [getBrandData] Found brand: PI
2025-09-17T00:39:56.251618Z	✅ [getBrandData] Found brand: PI
2025-09-17T00:39:56.251715Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.251846Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.251968Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.252069Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.25218Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-17T00:39:56.252308Z	Fetching products with query: 
2025-09-17T00:39:56.252416Z	    {
2025-09-17T00:39:56.252514Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.25263Z	        
2025-09-17T00:39:56.252733Z	    _id,
2025-09-17T00:39:56.252833Z	    _type,
2025-09-17T00:39:56.25295Z	    partNumber,
2025-09-17T00:39:56.253039Z	    "slug": slug.current,
2025-09-17T00:39:56.253125Z	    title,
2025-09-17T00:39:56.253222Z	    shortDescription,
2025-09-17T00:39:56.253332Z	    image,
2025-09-17T00:39:56.253433Z	    brand->{
2025-09-17T00:39:56.253869Z	      name,
2025-09-17T00:39:56.25401Z	      "slug": slug.current,
2025-09-17T00:39:56.254112Z	      logo
2025-09-17T00:39:56.254203Z	    },
2025-09-17T00:39:56.254316Z	    category->{
2025-09-17T00:39:56.254415Z	      name,
2025-09-17T00:39:56.254508Z	      "slug": slug.current
2025-09-17T00:39:56.254631Z	    },
2025-09-17T00:39:56.254737Z	    pricing{
2025-09-17T00:39:56.254839Z	      currency,
2025-09-17T00:39:56.254967Z	      tiers[]{
2025-09-17T00:39:56.255071Z	        quantity,
2025-09-17T00:39:56.255171Z	        price,
2025-09-17T00:39:56.255288Z	        unit
2025-09-17T00:39:56.255386Z	      },
2025-09-17T00:39:56.255482Z	      moq,
2025-09-17T00:39:56.255584Z	      leadTime,
2025-09-17T00:39:56.255686Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.255797Z	      "price": tiers[0].price,
2025-09-17T00:39:56.255897Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.256013Z	    },
2025-09-17T00:39:56.256102Z	    inventory{
2025-09-17T00:39:56.256191Z	      quantity,
2025-09-17T00:39:56.256304Z	      status,
2025-09-17T00:39:56.256406Z	      warehouse,
2025-09-17T00:39:56.256501Z	      lastUpdated,
2025-09-17T00:39:56.2566Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.256698Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.256786Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.256897Z	    },
2025-09-17T00:39:56.257004Z	    isActive,
2025-09-17T00:39:56.257106Z	    isFeatured,
2025-09-17T00:39:56.257204Z	    isNew,
2025-09-17T00:39:56.257324Z	    _createdAt,
2025-09-17T00:39:56.257435Z	    _updatedAt
2025-09-17T00:39:56.25753Z	  
2025-09-17T00:39:56.257641Z	      },
2025-09-17T00:39:56.257744Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-17T00:39:56.257843Z	    }
2025-09-17T00:39:56.257952Z	  
2025-09-17T00:39:56.258057Z	Query parameters: {
2025-09-17T00:39:56.258151Z	  limit: 8,
2025-09-17T00:39:56.258241Z	  offset: 0,
2025-09-17T00:39:56.258369Z	  category: undefined,
2025-09-17T00:39:56.258473Z	  brand: 'Electronicon',
2025-09-17T00:39:56.25858Z	  featured: undefined
2025-09-17T00:39:56.258677Z	}
2025-09-17T00:39:56.258778Z	Fetching solutions with query: 
2025-09-17T00:39:56.258875Z	    {
2025-09-17T00:39:56.25898Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.259088Z	        
2025-09-17T00:39:56.259191Z	    _id,
2025-09-17T00:39:56.259307Z	    title,
2025-09-17T00:39:56.259405Z	    "slug": slug.current,
2025-09-17T00:39:56.259512Z	    summary,
2025-09-17T00:39:56.259623Z	    description,
2025-09-17T00:39:56.259729Z	    coverImage,
2025-09-17T00:39:56.259816Z	    primaryBrand->{
2025-09-17T00:39:56.259918Z	      _id,
2025-09-17T00:39:56.260024Z	      name,
2025-09-17T00:39:56.260119Z	      "slug": slug.current,
2025-09-17T00:39:56.260207Z	      logo
2025-09-17T00:39:56.260326Z	    },
2025-09-17T00:39:56.260423Z	    relatedBrands[]->{
2025-09-17T00:39:56.26052Z	      _id,
2025-09-17T00:39:56.260618Z	      name,
2025-09-17T00:39:56.260731Z	      "slug": slug.current,
2025-09-17T00:39:56.260839Z	      logo
2025-09-17T00:39:56.260944Z	    },
2025-09-17T00:39:56.261046Z	    targetMarket,
2025-09-17T00:39:56.261151Z	    complexity,
2025-09-17T00:39:56.261255Z	    publishedAt,
2025-09-17T00:39:56.261378Z	    isPublished,
2025-09-17T00:39:56.26148Z	    isFeatured,
2025-09-17T00:39:56.261573Z	    viewCount,
2025-09-17T00:39:56.261662Z	    _createdAt,
2025-09-17T00:39:56.261758Z	    _updatedAt
2025-09-17T00:39:56.261848Z	  
2025-09-17T00:39:56.261955Z	      },
2025-09-17T00:39:56.262062Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-17T00:39:56.262169Z	    }
2025-09-17T00:39:56.262303Z	  
2025-09-17T00:39:56.262412Z	Query parameters: {
2025-09-17T00:39:56.262505Z	  limit: 4,
2025-09-17T00:39:56.262594Z	  offset: 0,
2025-09-17T00:39:56.26268Z	  targetMarket: undefined,
2025-09-17T00:39:56.262769Z	  brand: 'Electronicon',
2025-09-17T00:39:56.262856Z	  featured: undefined
2025-09-17T00:39:56.262957Z	}
2025-09-17T00:39:56.263066Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-17T00:39:56.26316Z	Fetching products with query: 
2025-09-17T00:39:56.26325Z	    {
2025-09-17T00:39:56.263362Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.263463Z	        
2025-09-17T00:39:56.263561Z	    _id,
2025-09-17T00:39:56.263665Z	    _type,
2025-09-17T00:39:56.26376Z	    partNumber,
2025-09-17T00:39:56.263849Z	    "slug": slug.current,
2025-09-17T00:39:56.263947Z	    title,
2025-09-17T00:39:56.264044Z	    shortDescription,
2025-09-17T00:39:56.264142Z	    image,
2025-09-17T00:39:56.264249Z	    brand->{
2025-09-17T00:39:56.264372Z	      name,
2025-09-17T00:39:56.264471Z	      "slug": slug.current,
2025-09-17T00:39:56.264568Z	      logo
2025-09-17T00:39:56.264671Z	    },
2025-09-17T00:39:56.264781Z	    category->{
2025-09-17T00:39:56.26489Z	      name,
2025-09-17T00:39:56.265012Z	      "slug": slug.current
2025-09-17T00:39:56.265118Z	    },
2025-09-17T00:39:56.265223Z	    pricing{
2025-09-17T00:39:56.26534Z	      currency,
2025-09-17T00:39:56.265469Z	      tiers[]{
2025-09-17T00:39:56.265573Z	        quantity,
2025-09-17T00:39:56.265682Z	        price,
2025-09-17T00:39:56.265789Z	        unit
2025-09-17T00:39:56.265893Z	      },
2025-09-17T00:39:56.266016Z	      moq,
2025-09-17T00:39:56.266124Z	      leadTime,
2025-09-17T00:39:56.266228Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.266356Z	      "price": tiers[0].price,
2025-09-17T00:39:56.266461Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.266585Z	    },
2025-09-17T00:39:56.266694Z	    inventory{
2025-09-17T00:39:56.2668Z	      quantity,
2025-09-17T00:39:56.266927Z	      status,
2025-09-17T00:39:56.267042Z	      warehouse,
2025-09-17T00:39:56.267159Z	      lastUpdated,
2025-09-17T00:39:56.267281Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.267401Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.267513Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.267609Z	    },
2025-09-17T00:39:56.267717Z	    isActive,
2025-09-17T00:39:56.26782Z	    isFeatured,
2025-09-17T00:39:56.26793Z	    isNew,
2025-09-17T00:39:56.268049Z	    _createdAt,
2025-09-17T00:39:56.268155Z	    _updatedAt
2025-09-17T00:39:56.268246Z	  
2025-09-17T00:39:56.268362Z	      },
2025-09-17T00:39:56.268467Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-17T00:39:56.268575Z	    }
2025-09-17T00:39:56.268693Z	  
2025-09-17T00:39:56.2688Z	Query parameters: {
2025-09-17T00:39:56.268896Z	  limit: 8,
2025-09-17T00:39:56.269018Z	  offset: 0,
2025-09-17T00:39:56.269118Z	  category: undefined,
2025-09-17T00:39:56.269206Z	  brand: 'Electronicon',
2025-09-17T00:39:56.269314Z	  featured: undefined
2025-09-17T00:39:56.269427Z	}
2025-09-17T00:39:56.269526Z	Fetching solutions with query: 
2025-09-17T00:39:56.269631Z	    {
2025-09-17T00:39:56.269739Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.269953Z	        
2025-09-17T00:39:56.270076Z	    _id,
2025-09-17T00:39:56.270185Z	    title,
2025-09-17T00:39:56.270328Z	    "slug": slug.current,
2025-09-17T00:39:56.270435Z	    summary,
2025-09-17T00:39:56.27053Z	    description,
2025-09-17T00:39:56.270669Z	    coverImage,
2025-09-17T00:39:56.270781Z	    primaryBrand->{
2025-09-17T00:39:56.270881Z	      _id,
2025-09-17T00:39:56.270987Z	      name,
2025-09-17T00:39:56.271094Z	      "slug": slug.current,
2025-09-17T00:39:56.2712Z	      logo
2025-09-17T00:39:56.271329Z	    },
2025-09-17T00:39:56.271436Z	    relatedBrands[]->{
2025-09-17T00:39:56.27154Z	      _id,
2025-09-17T00:39:56.271647Z	      name,
2025-09-17T00:39:56.271747Z	      "slug": slug.current,
2025-09-17T00:39:56.27184Z	      logo
2025-09-17T00:39:56.271941Z	    },
2025-09-17T00:39:56.272041Z	    targetMarket,
2025-09-17T00:39:56.27214Z	    complexity,
2025-09-17T00:39:56.272231Z	    publishedAt,
2025-09-17T00:39:56.272344Z	    isPublished,
2025-09-17T00:39:56.272441Z	    isFeatured,
2025-09-17T00:39:56.272685Z	    viewCount,
2025-09-17T00:39:56.272803Z	    _createdAt,
2025-09-17T00:39:56.272977Z	    _updatedAt
2025-09-17T00:39:56.273094Z	  
2025-09-17T00:39:56.273309Z	      },
2025-09-17T00:39:56.27343Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-17T00:39:56.273625Z	    }
2025-09-17T00:39:56.273792Z	  
2025-09-17T00:39:56.273922Z	Query parameters: {
2025-09-17T00:39:56.274024Z	  limit: 4,
2025-09-17T00:39:56.274124Z	  offset: 0,
2025-09-17T00:39:56.274223Z	  targetMarket: undefined,
2025-09-17T00:39:56.274336Z	  brand: 'Electronicon',
2025-09-17T00:39:56.274432Z	  featured: undefined
2025-09-17T00:39:56.274544Z	}
2025-09-17T00:39:56.274648Z	✅ [getBrandData] Found brand: Electronicon
2025-09-17T00:39:56.274757Z	✅ [getBrandData] Found brand: Electronicon
2025-09-17T00:39:56.274869Z	Products fetch result: {
2025-09-17T00:39:56.27499Z	  totalProducts: 2,
2025-09-17T00:39:56.275092Z	  fetchedProducts: 2,
2025-09-17T00:39:56.275185Z	  firstProduct: {
2025-09-17T00:39:56.275309Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-17T00:39:56.275419Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-17T00:39:56.275523Z	    _type: 'product',
2025-09-17T00:39:56.275623Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-17T00:39:56.275717Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-17T00:39:56.275811Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-17T00:39:56.275932Z	    image: null,
2025-09-17T00:39:56.276054Z	    inventory: {
2025-09-17T00:39:56.276157Z	      inStock: true,
2025-09-17T00:39:56.276264Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-17T00:39:56.276385Z	      quantity: 0,
2025-09-17T00:39:56.276489Z	      status: 'in_stock',
2025-09-17T00:39:56.276599Z	      warehouse: null
2025-09-17T00:39:56.276705Z	    },
2025-09-17T00:39:56.276822Z	    isActive: true,
2025-09-17T00:39:56.276933Z	    isFeatured: false,
2025-09-17T00:39:56.277034Z	    isNew: false,
2025-09-17T00:39:56.277128Z	    partNumber: '99999',
2025-09-17T00:39:56.277219Z	    pricing: {
2025-09-17T00:39:56.277342Z	      currency: 'CNY',
2025-09-17T00:39:56.277443Z	      leadTime: null,
2025-09-17T00:39:56.27754Z	      moq: null,
2025-09-17T00:39:56.277631Z	      price: null,
2025-09-17T00:39:56.27773Z	      tiers: null
2025-09-17T00:39:56.277838Z	    },
2025-09-17T00:39:56.277968Z	    shortDescription: null,
2025-09-17T00:39:56.278076Z	    slug: '99999',
2025-09-17T00:39:56.27818Z	    title: '99999'
2025-09-17T00:39:56.27829Z	  }
2025-09-17T00:39:56.278404Z	}
2025-09-17T00:39:56.27851Z	Products fetch result: {
2025-09-17T00:39:56.278613Z	  totalProducts: 2,
2025-09-17T00:39:56.278713Z	  fetchedProducts: 2,
2025-09-17T00:39:56.278812Z	  firstProduct: {
2025-09-17T00:39:56.278917Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-17T00:39:56.279014Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-17T00:39:56.279113Z	    _type: 'product',
2025-09-17T00:39:56.279228Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-17T00:39:56.279357Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-17T00:39:56.279459Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-17T00:39:56.279562Z	    image: null,
2025-09-17T00:39:56.279662Z	    inventory: {
2025-09-17T00:39:56.279765Z	      inStock: true,
2025-09-17T00:39:56.279868Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-17T00:39:56.279988Z	      quantity: 0,
2025-09-17T00:39:56.280088Z	      status: 'in_stock',
2025-09-17T00:39:56.280188Z	      warehouse: null
2025-09-17T00:39:56.280303Z	    },
2025-09-17T00:39:56.280412Z	    isActive: true,
2025-09-17T00:39:56.280525Z	    isFeatured: false,
2025-09-17T00:39:56.280626Z	    isNew: false,
2025-09-17T00:39:56.280733Z	    partNumber: '99999',
2025-09-17T00:39:56.280835Z	    pricing: {
2025-09-17T00:39:56.280946Z	      currency: 'CNY',
2025-09-17T00:39:56.281045Z	      leadTime: null,
2025-09-17T00:39:56.281149Z	      moq: null,
2025-09-17T00:39:56.281292Z	      price: null,
2025-09-17T00:39:56.2814Z	      tiers: null
2025-09-17T00:39:56.281506Z	    },
2025-09-17T00:39:56.281608Z	    shortDescription: null,
2025-09-17T00:39:56.281711Z	    slug: '99999',
2025-09-17T00:39:56.281811Z	    title: '99999'
2025-09-17T00:39:56.281927Z	  }
2025-09-17T00:39:56.282029Z	}
2025-09-17T00:39:56.282131Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.282233Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.282352Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-17T00:39:56.282457Z	Fetching products with query: 
2025-09-17T00:39:56.282556Z	    {
2025-09-17T00:39:56.282663Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.282762Z	        
2025-09-17T00:39:56.282861Z	    _id,
2025-09-17T00:39:56.282967Z	    _type,
2025-09-17T00:39:56.2831Z	    partNumber,
2025-09-17T00:39:56.283219Z	    "slug": slug.current,
2025-09-17T00:39:56.283346Z	    title,
2025-09-17T00:39:56.28345Z	    shortDescription,
2025-09-17T00:39:56.283554Z	    image,
2025-09-17T00:39:56.283655Z	    brand->{
2025-09-17T00:39:56.28377Z	      name,
2025-09-17T00:39:56.283878Z	      "slug": slug.current,
2025-09-17T00:39:56.283989Z	      logo
2025-09-17T00:39:56.284096Z	    },
2025-09-17T00:39:56.284199Z	    category->{
2025-09-17T00:39:56.284325Z	      name,
2025-09-17T00:39:56.284431Z	      "slug": slug.current
2025-09-17T00:39:56.284529Z	    },
2025-09-17T00:39:56.284627Z	    pricing{
2025-09-17T00:39:56.284725Z	      currency,
2025-09-17T00:39:56.284819Z	      tiers[]{
2025-09-17T00:39:56.284929Z	        quantity,
2025-09-17T00:39:56.285029Z	        price,
2025-09-17T00:39:56.285127Z	        unit
2025-09-17T00:39:56.285223Z	      },
2025-09-17T00:39:56.285341Z	      moq,
2025-09-17T00:39:56.28544Z	      leadTime,
2025-09-17T00:39:56.28557Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.285686Z	      "price": tiers[0].price,
2025-09-17T00:39:56.285788Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.285889Z	    },
2025-09-17T00:39:56.286003Z	    inventory{
2025-09-17T00:39:56.2861Z	      quantity,
2025-09-17T00:39:56.286189Z	      status,
2025-09-17T00:39:56.286333Z	      warehouse,
2025-09-17T00:39:56.28643Z	      lastUpdated,
2025-09-17T00:39:56.286522Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.286624Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.286738Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.286843Z	    },
2025-09-17T00:39:56.286953Z	    isActive,
2025-09-17T00:39:56.287049Z	    isFeatured,
2025-09-17T00:39:56.287148Z	    isNew,
2025-09-17T00:39:56.287251Z	    _createdAt,
2025-09-17T00:39:56.287375Z	    _updatedAt
2025-09-17T00:39:56.28748Z	  
2025-09-17T00:39:56.287581Z	      },
2025-09-17T00:39:56.287675Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-17T00:39:56.287797Z	    }
2025-09-17T00:39:56.287903Z	  
2025-09-17T00:39:56.288007Z	Query parameters: {
2025-09-17T00:39:56.288102Z	  limit: 8,
2025-09-17T00:39:56.288184Z	  offset: 0,
2025-09-17T00:39:56.288278Z	  category: undefined,
2025-09-17T00:39:56.288379Z	  brand: 'qualcomm',
2025-09-17T00:39:56.288468Z	  featured: undefined
2025-09-17T00:39:56.288556Z	}
2025-09-17T00:39:56.288632Z	Fetching solutions with query: 
2025-09-17T00:39:56.288725Z	    {
2025-09-17T00:39:56.28885Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.288965Z	        
2025-09-17T00:39:56.289092Z	    _id,
2025-09-17T00:39:56.289197Z	    title,
2025-09-17T00:39:56.289315Z	    "slug": slug.current,
2025-09-17T00:39:56.289423Z	    summary,
2025-09-17T00:39:56.289542Z	    description,
2025-09-17T00:39:56.289644Z	    coverImage,
2025-09-17T00:39:56.289743Z	    primaryBrand->{
2025-09-17T00:39:56.28984Z	      _id,
2025-09-17T00:39:56.289946Z	      name,
2025-09-17T00:39:56.290048Z	      "slug": slug.current,
2025-09-17T00:39:56.290155Z	      logo
2025-09-17T00:39:56.290255Z	    },
2025-09-17T00:39:56.290375Z	    relatedBrands[]->{
2025-09-17T00:39:56.290484Z	      _id,
2025-09-17T00:39:56.290581Z	      name,
2025-09-17T00:39:56.290684Z	      "slug": slug.current,
2025-09-17T00:39:56.290787Z	      logo
2025-09-17T00:39:56.290886Z	    },
2025-09-17T00:39:56.290992Z	    targetMarket,
2025-09-17T00:39:56.291081Z	    complexity,
2025-09-17T00:39:56.291171Z	    publishedAt,
2025-09-17T00:39:56.291295Z	    isPublished,
2025-09-17T00:39:56.291404Z	    isFeatured,
2025-09-17T00:39:56.29151Z	    viewCount,
2025-09-17T00:39:56.29161Z	    _createdAt,
2025-09-17T00:39:56.291709Z	    _updatedAt
2025-09-17T00:39:56.291801Z	  
2025-09-17T00:39:56.291894Z	      },
2025-09-17T00:39:56.291996Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-17T00:39:56.292089Z	    }
2025-09-17T00:39:56.292176Z	  
2025-09-17T00:39:56.292263Z	Query parameters: {
2025-09-17T00:39:56.292381Z	  limit: 4,
2025-09-17T00:39:56.292491Z	  offset: 0,
2025-09-17T00:39:56.292606Z	  targetMarket: undefined,
2025-09-17T00:39:56.29271Z	  brand: 'qualcomm',
2025-09-17T00:39:56.292813Z	  featured: undefined
2025-09-17T00:39:56.292926Z	}
2025-09-17T00:39:56.293029Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-17T00:39:56.293129Z	Fetching products with query: 
2025-09-17T00:39:56.29322Z	    {
2025-09-17T00:39:56.293343Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.29346Z	        
2025-09-17T00:39:56.293566Z	    _id,
2025-09-17T00:39:56.293665Z	    _type,
2025-09-17T00:39:56.293767Z	    partNumber,
2025-09-17T00:39:56.293863Z	    "slug": slug.current,
2025-09-17T00:39:56.293975Z	    title,
2025-09-17T00:39:56.294069Z	    shortDescription,
2025-09-17T00:39:56.294169Z	    image,
2025-09-17T00:39:56.29428Z	    brand->{
2025-09-17T00:39:56.294389Z	      name,
2025-09-17T00:39:56.294488Z	      "slug": slug.current,
2025-09-17T00:39:56.294607Z	      logo
2025-09-17T00:39:56.294709Z	    },
2025-09-17T00:39:56.294809Z	    category->{
2025-09-17T00:39:56.294916Z	      name,
2025-09-17T00:39:56.29502Z	      "slug": slug.current
2025-09-17T00:39:56.295121Z	    },
2025-09-17T00:39:56.295232Z	    pricing{
2025-09-17T00:39:56.29535Z	      currency,
2025-09-17T00:39:56.295453Z	      tiers[]{
2025-09-17T00:39:56.29557Z	        quantity,
2025-09-17T00:39:56.29568Z	        price,
2025-09-17T00:39:56.29578Z	        unit
2025-09-17T00:39:56.295893Z	      },
2025-09-17T00:39:56.296007Z	      moq,
2025-09-17T00:39:56.296134Z	      leadTime,
2025-09-17T00:39:56.296242Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.296384Z	      "price": tiers[0].price,
2025-09-17T00:39:56.296499Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.296602Z	    },
2025-09-17T00:39:56.296697Z	    inventory{
2025-09-17T00:39:56.296798Z	      quantity,
2025-09-17T00:39:56.296906Z	      status,
2025-09-17T00:39:56.297017Z	      warehouse,
2025-09-17T00:39:56.297118Z	      lastUpdated,
2025-09-17T00:39:56.29722Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.297353Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.297464Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.297573Z	    },
2025-09-17T00:39:56.297678Z	    isActive,
2025-09-17T00:39:56.297778Z	    isFeatured,
2025-09-17T00:39:56.297884Z	    isNew,
2025-09-17T00:39:56.29814Z	    _createdAt,
2025-09-17T00:39:56.298312Z	    _updatedAt
2025-09-17T00:39:56.298432Z	  
2025-09-17T00:39:56.298543Z	      },
2025-09-17T00:39:56.298639Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-17T00:39:56.298758Z	    }
2025-09-17T00:39:56.298886Z	  
2025-09-17T00:39:56.299006Z	Query parameters: {
2025-09-17T00:39:56.299112Z	  limit: 8,
2025-09-17T00:39:56.299208Z	  offset: 0,
2025-09-17T00:39:56.299319Z	  category: undefined,
2025-09-17T00:39:56.29943Z	  brand: 'qualcomm',
2025-09-17T00:39:56.299538Z	  featured: undefined
2025-09-17T00:39:56.299641Z	}
2025-09-17T00:39:56.299752Z	Fetching solutions with query: 
2025-09-17T00:39:56.299858Z	    {
2025-09-17T00:39:56.299968Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.300074Z	        
2025-09-17T00:39:56.300176Z	    _id,
2025-09-17T00:39:56.300302Z	    title,
2025-09-17T00:39:56.300408Z	    "slug": slug.current,
2025-09-17T00:39:56.300514Z	    summary,
2025-09-17T00:39:56.30061Z	    description,
2025-09-17T00:39:56.30071Z	    coverImage,
2025-09-17T00:39:56.300815Z	    primaryBrand->{
2025-09-17T00:39:56.300936Z	      _id,
2025-09-17T00:39:56.301046Z	      name,
2025-09-17T00:39:56.301145Z	      "slug": slug.current,
2025-09-17T00:39:56.301234Z	      logo
2025-09-17T00:39:56.30134Z	    },
2025-09-17T00:39:56.301432Z	    relatedBrands[]->{
2025-09-17T00:39:56.301522Z	      _id,
2025-09-17T00:39:56.301624Z	      name,
2025-09-17T00:39:56.301743Z	      "slug": slug.current,
2025-09-17T00:39:56.301852Z	      logo
2025-09-17T00:39:56.301988Z	    },
2025-09-17T00:39:56.302097Z	    targetMarket,
2025-09-17T00:39:56.302205Z	    complexity,
2025-09-17T00:39:56.302326Z	    publishedAt,
2025-09-17T00:39:56.302427Z	    isPublished,
2025-09-17T00:39:56.302524Z	    isFeatured,
2025-09-17T00:39:56.302617Z	    viewCount,
2025-09-17T00:39:56.302714Z	    _createdAt,
2025-09-17T00:39:56.302817Z	    _updatedAt
2025-09-17T00:39:56.302939Z	  
2025-09-17T00:39:56.303049Z	      },
2025-09-17T00:39:56.303141Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-17T00:39:56.303248Z	    }
2025-09-17T00:39:56.303372Z	  
2025-09-17T00:39:56.303475Z	Query parameters: {
2025-09-17T00:39:56.303565Z	  limit: 4,
2025-09-17T00:39:56.303669Z	  offset: 0,
2025-09-17T00:39:56.30377Z	  targetMarket: undefined,
2025-09-17T00:39:56.303865Z	  brand: 'qualcomm',
2025-09-17T00:39:56.303981Z	  featured: undefined
2025-09-17T00:39:56.304084Z	}
2025-09-17T00:39:56.304186Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-17T00:39:56.304316Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-17T00:39:56.304438Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.304555Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.304653Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.304746Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.304849Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-17T00:39:56.304965Z	Fetching products with query: 
2025-09-17T00:39:56.305065Z	    {
2025-09-17T00:39:56.305159Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.30525Z	        
2025-09-17T00:39:56.305369Z	    _id,
2025-09-17T00:39:56.305469Z	    _type,
2025-09-17T00:39:56.305573Z	    partNumber,
2025-09-17T00:39:56.305687Z	    "slug": slug.current,
2025-09-17T00:39:56.305788Z	    title,
2025-09-17T00:39:56.305911Z	    shortDescription,
2025-09-17T00:39:56.306017Z	    image,
2025-09-17T00:39:56.306115Z	    brand->{
2025-09-17T00:39:56.306211Z	      name,
2025-09-17T00:39:56.306333Z	      "slug": slug.current,
2025-09-17T00:39:56.306443Z	      logo
2025-09-17T00:39:56.306534Z	    },
2025-09-17T00:39:56.306641Z	    category->{
2025-09-17T00:39:56.306747Z	      name,
2025-09-17T00:39:56.306851Z	      "slug": slug.current
2025-09-17T00:39:56.306959Z	    },
2025-09-17T00:39:56.307057Z	    pricing{
2025-09-17T00:39:56.30716Z	      currency,
2025-09-17T00:39:56.307258Z	      tiers[]{
2025-09-17T00:39:56.307391Z	        quantity,
2025-09-17T00:39:56.307501Z	        price,
2025-09-17T00:39:56.307592Z	        unit
2025-09-17T00:39:56.307692Z	      },
2025-09-17T00:39:56.307803Z	      moq,
2025-09-17T00:39:56.307909Z	      leadTime,
2025-09-17T00:39:56.30803Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.30813Z	      "price": tiers[0].price,
2025-09-17T00:39:56.30824Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.308359Z	    },
2025-09-17T00:39:56.308468Z	    inventory{
2025-09-17T00:39:56.308568Z	      quantity,
2025-09-17T00:39:56.308667Z	      status,
2025-09-17T00:39:56.308773Z	      warehouse,
2025-09-17T00:39:56.30887Z	      lastUpdated,
2025-09-17T00:39:56.308982Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.309093Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.309199Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.309326Z	    },
2025-09-17T00:39:56.30943Z	    isActive,
2025-09-17T00:39:56.309533Z	    isFeatured,
2025-09-17T00:39:56.309641Z	    isNew,
2025-09-17T00:39:56.309743Z	    _createdAt,
2025-09-17T00:39:56.309832Z	    _updatedAt
2025-09-17T00:39:56.309945Z	  
2025-09-17T00:39:56.310051Z	      },
2025-09-17T00:39:56.310157Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-17T00:39:56.310263Z	    }
2025-09-17T00:39:56.310383Z	  
2025-09-17T00:39:56.310479Z	Query parameters: {
2025-09-17T00:39:56.310591Z	  limit: 8,
2025-09-17T00:39:56.310696Z	  offset: 0,
2025-09-17T00:39:56.31079Z	  category: undefined,
2025-09-17T00:39:56.31089Z	  brand: 'Electronicon',
2025-09-17T00:39:56.310994Z	  featured: undefined
2025-09-17T00:39:56.311087Z	}
2025-09-17T00:39:56.311178Z	Fetching solutions with query: 
2025-09-17T00:39:56.311294Z	    {
2025-09-17T00:39:56.311388Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.311498Z	        
2025-09-17T00:39:56.311591Z	    _id,
2025-09-17T00:39:56.311687Z	    title,
2025-09-17T00:39:56.311786Z	    "slug": slug.current,
2025-09-17T00:39:56.311884Z	    summary,
2025-09-17T00:39:56.311991Z	    description,
2025-09-17T00:39:56.312093Z	    coverImage,
2025-09-17T00:39:56.312191Z	    primaryBrand->{
2025-09-17T00:39:56.312302Z	      _id,
2025-09-17T00:39:56.312399Z	      name,
2025-09-17T00:39:56.312505Z	      "slug": slug.current,
2025-09-17T00:39:56.312626Z	      logo
2025-09-17T00:39:56.312728Z	    },
2025-09-17T00:39:56.312832Z	    relatedBrands[]->{
2025-09-17T00:39:56.312938Z	      _id,
2025-09-17T00:39:56.313052Z	      name,
2025-09-17T00:39:56.313155Z	      "slug": slug.current,
2025-09-17T00:39:56.313256Z	      logo
2025-09-17T00:39:56.313374Z	    },
2025-09-17T00:39:56.313466Z	    targetMarket,
2025-09-17T00:39:56.313564Z	    complexity,
2025-09-17T00:39:56.313662Z	    publishedAt,
2025-09-17T00:39:56.313764Z	    isPublished,
2025-09-17T00:39:56.313863Z	    isFeatured,
2025-09-17T00:39:56.313963Z	    viewCount,
2025-09-17T00:39:56.314054Z	    _createdAt,
2025-09-17T00:39:56.314155Z	    _updatedAt
2025-09-17T00:39:56.314253Z	  
2025-09-17T00:39:56.314394Z	      },
2025-09-17T00:39:56.314495Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-17T00:39:56.314588Z	    }
2025-09-17T00:39:56.314688Z	  
2025-09-17T00:39:56.314794Z	Query parameters: {
2025-09-17T00:39:56.314908Z	  limit: 4,
2025-09-17T00:39:56.315024Z	  offset: 0,
2025-09-17T00:39:56.31513Z	  targetMarket: undefined,
2025-09-17T00:39:56.315229Z	  brand: 'Electronicon',
2025-09-17T00:39:56.315336Z	  featured: undefined
2025-09-17T00:39:56.315426Z	}
2025-09-17T00:39:56.315513Z	✅ [getBrandData] Found brand: Electronicon
2025-09-17T00:39:56.315604Z	Products fetch result: {
2025-09-17T00:39:56.315701Z	  totalProducts: 2,
2025-09-17T00:39:56.315816Z	  fetchedProducts: 2,
2025-09-17T00:39:56.315925Z	  firstProduct: {
2025-09-17T00:39:56.316024Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-17T00:39:56.316128Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-17T00:39:56.316241Z	    _type: 'product',
2025-09-17T00:39:56.316359Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-17T00:39:56.316458Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-17T00:39:56.316558Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-17T00:39:56.316662Z	    image: null,
2025-09-17T00:39:56.316757Z	    inventory: {
2025-09-17T00:39:56.316893Z	      inStock: true,
2025-09-17T00:39:56.317113Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-17T00:39:56.317296Z	      quantity: 0,
2025-09-17T00:39:56.317453Z	      status: 'in_stock',
2025-09-17T00:39:56.317577Z	      warehouse: null
2025-09-17T00:39:56.317692Z	    },
2025-09-17T00:39:56.317845Z	    isActive: true,
2025-09-17T00:39:56.317946Z	    isFeatured: false,
2025-09-17T00:39:56.318063Z	    isNew: false,
2025-09-17T00:39:56.318166Z	    partNumber: '99999',
2025-09-17T00:39:56.318308Z	    pricing: {
2025-09-17T00:39:56.31841Z	      currency: 'CNY',
2025-09-17T00:39:56.318503Z	      leadTime: null,
2025-09-17T00:39:56.318602Z	      moq: null,
2025-09-17T00:39:56.318699Z	      price: null,
2025-09-17T00:39:56.318792Z	      tiers: null
2025-09-17T00:39:56.31889Z	    },
2025-09-17T00:39:56.31906Z	    shortDescription: null,
2025-09-17T00:39:56.319142Z	    slug: '99999',
2025-09-17T00:39:56.319302Z	    title: '99999'
2025-09-17T00:39:56.319419Z	  }
2025-09-17T00:39:56.319517Z	}
2025-09-17T00:39:56.31962Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.319714Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-17T00:39:56.319818Z	Fetching products with query: 
2025-09-17T00:39:56.319913Z	    {
2025-09-17T00:39:56.320027Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.320139Z	        
2025-09-17T00:39:56.320248Z	    _id,
2025-09-17T00:39:56.320407Z	    _type,
2025-09-17T00:39:56.320492Z	    partNumber,
2025-09-17T00:39:56.320622Z	    "slug": slug.current,
2025-09-17T00:39:56.32071Z	    title,
2025-09-17T00:39:56.320837Z	    shortDescription,
2025-09-17T00:39:56.321026Z	    image,
2025-09-17T00:39:56.321162Z	    brand->{
2025-09-17T00:39:56.321259Z	      name,
2025-09-17T00:39:56.321363Z	      "slug": slug.current,
2025-09-17T00:39:56.321519Z	      logo
2025-09-17T00:39:56.321641Z	    },
2025-09-17T00:39:56.321753Z	    category->{
2025-09-17T00:39:56.321894Z	      name,
2025-09-17T00:39:56.322026Z	      "slug": slug.current
2025-09-17T00:39:56.322146Z	    },
2025-09-17T00:39:56.322256Z	    pricing{
2025-09-17T00:39:56.32241Z	      currency,
2025-09-17T00:39:56.322509Z	      tiers[]{
2025-09-17T00:39:56.322602Z	        quantity,
2025-09-17T00:39:56.322706Z	        price,
2025-09-17T00:39:56.322815Z	        unit
2025-09-17T00:39:56.322938Z	      },
2025-09-17T00:39:56.323052Z	      moq,
2025-09-17T00:39:56.32317Z	      leadTime,
2025-09-17T00:39:56.323314Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.323431Z	      "price": tiers[0].price,
2025-09-17T00:39:56.323531Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.323668Z	    },
2025-09-17T00:39:56.323841Z	    inventory{
2025-09-17T00:39:56.323984Z	      quantity,
2025-09-17T00:39:56.32412Z	      status,
2025-09-17T00:39:56.324242Z	      warehouse,
2025-09-17T00:39:56.324403Z	      lastUpdated,
2025-09-17T00:39:56.324532Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.324684Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.324814Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.324944Z	    },
2025-09-17T00:39:56.325071Z	    isActive,
2025-09-17T00:39:56.325194Z	    isFeatured,
2025-09-17T00:39:56.325334Z	    isNew,
2025-09-17T00:39:56.325457Z	    _createdAt,
2025-09-17T00:39:56.325562Z	    _updatedAt
2025-09-17T00:39:56.32567Z	  
2025-09-17T00:39:56.325779Z	      },
2025-09-17T00:39:56.325894Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-17T00:39:56.326009Z	    }
2025-09-17T00:39:56.326117Z	  
2025-09-17T00:39:56.326243Z	Query parameters: {
2025-09-17T00:39:56.32638Z	  limit: 8,
2025-09-17T00:39:56.326493Z	  offset: 0,
2025-09-17T00:39:56.326603Z	  category: undefined,
2025-09-17T00:39:56.326715Z	  brand: 'Electronicon',
2025-09-17T00:39:56.326826Z	  featured: undefined
2025-09-17T00:39:56.327097Z	}
2025-09-17T00:39:56.327222Z	Fetching solutions with query: 
2025-09-17T00:39:56.327363Z	    {
2025-09-17T00:39:56.327478Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.327602Z	        
2025-09-17T00:39:56.327763Z	    _id,
2025-09-17T00:39:56.327887Z	    title,
2025-09-17T00:39:56.327995Z	    "slug": slug.current,
2025-09-17T00:39:56.328098Z	    summary,
2025-09-17T00:39:56.328208Z	    description,
2025-09-17T00:39:56.32834Z	    coverImage,
2025-09-17T00:39:56.328453Z	    primaryBrand->{
2025-09-17T00:39:56.328562Z	      _id,
2025-09-17T00:39:56.32868Z	      name,
2025-09-17T00:39:56.328797Z	      "slug": slug.current,
2025-09-17T00:39:56.328904Z	      logo
2025-09-17T00:39:56.329006Z	    },
2025-09-17T00:39:56.329116Z	    relatedBrands[]->{
2025-09-17T00:39:56.329221Z	      _id,
2025-09-17T00:39:56.329343Z	      name,
2025-09-17T00:39:56.329443Z	      "slug": slug.current,
2025-09-17T00:39:56.329546Z	      logo
2025-09-17T00:39:56.329647Z	    },
2025-09-17T00:39:56.330305Z	    targetMarket,
2025-09-17T00:39:56.330473Z	    complexity,
2025-09-17T00:39:56.330729Z	    publishedAt,
2025-09-17T00:39:56.330827Z	    isPublished,
2025-09-17T00:39:56.330995Z	    isFeatured,
2025-09-17T00:39:56.331193Z	    viewCount,
2025-09-17T00:39:56.331297Z	    _createdAt,
2025-09-17T00:39:56.331614Z	    _updatedAt
2025-09-17T00:39:56.331828Z	  
2025-09-17T00:39:56.331914Z	      },
2025-09-17T00:39:56.332095Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-17T00:39:56.332303Z	    }
2025-09-17T00:39:56.332396Z	  
2025-09-17T00:39:56.332589Z	Query parameters: {
2025-09-17T00:39:56.332836Z	  limit: 4,
2025-09-17T00:39:56.333043Z	  offset: 0,
2025-09-17T00:39:56.33314Z	  targetMarket: undefined,
2025-09-17T00:39:56.333347Z	  brand: 'Electronicon',
2025-09-17T00:39:56.333427Z	  featured: undefined
2025-09-17T00:39:56.333578Z	}
2025-09-17T00:39:56.333808Z	✅ [getBrandData] Found brand: Electronicon
2025-09-17T00:39:56.333896Z	Products fetch result: {
2025-09-17T00:39:56.33407Z	  totalProducts: 2,
2025-09-17T00:39:56.334285Z	  fetchedProducts: 2,
2025-09-17T00:39:56.334482Z	  firstProduct: {
2025-09-17T00:39:56.334665Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-17T00:39:56.334867Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-17T00:39:56.335061Z	    _type: 'product',
2025-09-17T00:39:56.335154Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-17T00:39:56.335331Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-17T00:39:56.335536Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-17T00:39:56.33569Z	    image: null,
2025-09-17T00:39:56.335882Z	    inventory: {
2025-09-17T00:39:56.335966Z	      inStock: true,
2025-09-17T00:39:56.33626Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-17T00:39:56.336503Z	      quantity: 0,
2025-09-17T00:39:56.336657Z	      status: 'in_stock',
2025-09-17T00:39:56.336789Z	      warehouse: null
2025-09-17T00:39:56.336919Z	    },
2025-09-17T00:39:56.337058Z	    isActive: true,
2025-09-17T00:39:56.337192Z	    isFeatured: false,
2025-09-17T00:39:56.337338Z	    isNew: false,
2025-09-17T00:39:56.337456Z	    partNumber: '99999',
2025-09-17T00:39:56.337576Z	    pricing: {
2025-09-17T00:39:56.337697Z	      currency: 'CNY',
2025-09-17T00:39:56.337805Z	      leadTime: null,
2025-09-17T00:39:56.337915Z	      moq: null,
2025-09-17T00:39:56.33805Z	      price: null,
2025-09-17T00:39:56.338169Z	      tiers: null
2025-09-17T00:39:56.338309Z	    },
2025-09-17T00:39:56.338432Z	    shortDescription: null,
2025-09-17T00:39:56.33855Z	    slug: '99999',
2025-09-17T00:39:56.338675Z	    title: '99999'
2025-09-17T00:39:56.338801Z	  }
2025-09-17T00:39:56.338909Z	}
2025-09-17T00:39:56.339041Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.339165Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-17T00:39:56.339298Z	Fetching products with query: 
2025-09-17T00:39:56.339424Z	    {
2025-09-17T00:39:56.339544Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.339657Z	        
2025-09-17T00:39:56.339783Z	    _id,
2025-09-17T00:39:56.339892Z	    _type,
2025-09-17T00:39:56.340017Z	    partNumber,
2025-09-17T00:39:56.34015Z	    "slug": slug.current,
2025-09-17T00:39:56.340289Z	    title,
2025-09-17T00:39:56.340406Z	    shortDescription,
2025-09-17T00:39:56.340522Z	    image,
2025-09-17T00:39:56.340649Z	    brand->{
2025-09-17T00:39:56.340769Z	      name,
2025-09-17T00:39:56.340891Z	      "slug": slug.current,
2025-09-17T00:39:56.341012Z	      logo
2025-09-17T00:39:56.341139Z	    },
2025-09-17T00:39:56.34128Z	    category->{
2025-09-17T00:39:56.341406Z	      name,
2025-09-17T00:39:56.341532Z	      "slug": slug.current
2025-09-17T00:39:56.341664Z	    },
2025-09-17T00:39:56.341799Z	    pricing{
2025-09-17T00:39:56.341923Z	      currency,
2025-09-17T00:39:56.342027Z	      tiers[]{
2025-09-17T00:39:56.342139Z	        quantity,
2025-09-17T00:39:56.342263Z	        price,
2025-09-17T00:39:56.34243Z	        unit
2025-09-17T00:39:56.342537Z	      },
2025-09-17T00:39:56.34263Z	      moq,
2025-09-17T00:39:56.342702Z	      leadTime,
2025-09-17T00:39:56.342857Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.343008Z	      "price": tiers[0].price,
2025-09-17T00:39:56.343114Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.343213Z	    },
2025-09-17T00:39:56.343332Z	    inventory{
2025-09-17T00:39:56.343431Z	      quantity,
2025-09-17T00:39:56.343524Z	      status,
2025-09-17T00:39:56.343623Z	      warehouse,
2025-09-17T00:39:56.34372Z	      lastUpdated,
2025-09-17T00:39:56.34382Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.343913Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.344044Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.344183Z	    },
2025-09-17T00:39:56.34432Z	    isActive,
2025-09-17T00:39:56.344468Z	    isFeatured,
2025-09-17T00:39:56.344603Z	    isNew,
2025-09-17T00:39:56.344754Z	    _createdAt,
2025-09-17T00:39:56.344889Z	    _updatedAt
2025-09-17T00:39:56.345004Z	  
2025-09-17T00:39:56.345104Z	      },
2025-09-17T00:39:56.345202Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-17T00:39:56.345313Z	    }
2025-09-17T00:39:56.345415Z	  
2025-09-17T00:39:56.345529Z	Query parameters: {
2025-09-17T00:39:56.345709Z	  limit: 8,
2025-09-17T00:39:56.345794Z	  offset: 0,
2025-09-17T00:39:56.34592Z	  category: undefined,
2025-09-17T00:39:56.346147Z	  brand: 'littelfuse',
2025-09-17T00:39:56.34625Z	  featured: undefined
2025-09-17T00:39:56.3465Z	}
2025-09-17T00:39:56.346579Z	Fetching solutions with query: 
2025-09-17T00:39:56.346706Z	    {
2025-09-17T00:39:56.346853Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.347019Z	        
2025-09-17T00:39:56.347147Z	    _id,
2025-09-17T00:39:56.34729Z	    title,
2025-09-17T00:39:56.34739Z	    "slug": slug.current,
2025-09-17T00:39:56.347475Z	    summary,
2025-09-17T00:39:56.347558Z	    description,
2025-09-17T00:39:56.347642Z	    coverImage,
2025-09-17T00:39:56.347728Z	    primaryBrand->{
2025-09-17T00:39:56.347903Z	      _id,
2025-09-17T00:39:56.347989Z	      name,
2025-09-17T00:39:56.348116Z	      "slug": slug.current,
2025-09-17T00:39:56.348306Z	      logo
2025-09-17T00:39:56.348426Z	    },
2025-09-17T00:39:56.348604Z	    relatedBrands[]->{
2025-09-17T00:39:56.348761Z	      _id,
2025-09-17T00:39:56.348908Z	      name,
2025-09-17T00:39:56.349091Z	      "slug": slug.current,
2025-09-17T00:39:56.349247Z	      logo
2025-09-17T00:39:56.349407Z	    },
2025-09-17T00:39:56.349557Z	    targetMarket,
2025-09-17T00:39:56.349706Z	    complexity,
2025-09-17T00:39:56.349844Z	    publishedAt,
2025-09-17T00:39:56.349982Z	    isPublished,
2025-09-17T00:39:56.350095Z	    isFeatured,
2025-09-17T00:39:56.350259Z	    viewCount,
2025-09-17T00:39:56.350448Z	    _createdAt,
2025-09-17T00:39:56.350526Z	    _updatedAt
2025-09-17T00:39:56.350584Z	  
2025-09-17T00:39:56.350638Z	      },
2025-09-17T00:39:56.350692Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-17T00:39:56.350754Z	    }
2025-09-17T00:39:56.350807Z	  
2025-09-17T00:39:56.350869Z	Query parameters: {
2025-09-17T00:39:56.35093Z	  limit: 4,
2025-09-17T00:39:56.35121Z	  offset: 0,
2025-09-17T00:39:56.351495Z	  targetMarket: undefined,
2025-09-17T00:39:56.351573Z	  brand: 'littelfuse',
2025-09-17T00:39:56.351712Z	  featured: undefined
2025-09-17T00:39:56.351894Z	}
2025-09-17T00:39:56.352119Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-17T00:39:56.352251Z	Fetching products with query: 
2025-09-17T00:39:56.352447Z	    {
2025-09-17T00:39:56.352642Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.35284Z	        
2025-09-17T00:39:56.353138Z	    _id,
2025-09-17T00:39:56.35336Z	    _type,
2025-09-17T00:39:56.353481Z	    partNumber,
2025-09-17T00:39:56.35359Z	    "slug": slug.current,
2025-09-17T00:39:56.3537Z	    title,
2025-09-17T00:39:56.353801Z	    shortDescription,
2025-09-17T00:39:56.353888Z	    image,
2025-09-17T00:39:56.353993Z	    brand->{
2025-09-17T00:39:56.354145Z	      name,
2025-09-17T00:39:56.354288Z	      "slug": slug.current,
2025-09-17T00:39:56.354566Z	      logo
2025-09-17T00:39:56.354822Z	    },
2025-09-17T00:39:56.354993Z	    category->{
2025-09-17T00:39:56.35516Z	      name,
2025-09-17T00:39:56.355275Z	      "slug": slug.current
2025-09-17T00:39:56.355382Z	    },
2025-09-17T00:39:56.35562Z	    pricing{
2025-09-17T00:39:56.355797Z	      currency,
2025-09-17T00:39:56.355957Z	      tiers[]{
2025-09-17T00:39:56.356213Z	        quantity,
2025-09-17T00:39:56.356461Z	        price,
2025-09-17T00:39:56.356608Z	        unit
2025-09-17T00:39:56.356755Z	      },
2025-09-17T00:39:56.356864Z	      moq,
2025-09-17T00:39:56.357045Z	      leadTime,
2025-09-17T00:39:56.357126Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.357186Z	      "price": tiers[0].price,
2025-09-17T00:39:56.357358Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.357485Z	    },
2025-09-17T00:39:56.357599Z	    inventory{
2025-09-17T00:39:56.357716Z	      quantity,
2025-09-17T00:39:56.357851Z	      status,
2025-09-17T00:39:56.357948Z	      warehouse,
2025-09-17T00:39:56.358053Z	      lastUpdated,
2025-09-17T00:39:56.358156Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.358259Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.358387Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.358479Z	    },
2025-09-17T00:39:56.358586Z	    isActive,
2025-09-17T00:39:56.358752Z	    isFeatured,
2025-09-17T00:39:56.358895Z	    isNew,
2025-09-17T00:39:56.359056Z	    _createdAt,
2025-09-17T00:39:56.359155Z	    _updatedAt
2025-09-17T00:39:56.359244Z	  
2025-09-17T00:39:56.359346Z	      },
2025-09-17T00:39:56.359441Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-17T00:39:56.359552Z	    }
2025-09-17T00:39:56.359647Z	  
2025-09-17T00:39:56.359759Z	Query parameters: {
2025-09-17T00:39:56.359867Z	  limit: 8,
2025-09-17T00:39:56.359974Z	  offset: 0,
2025-09-17T00:39:56.360096Z	  category: undefined,
2025-09-17T00:39:56.360203Z	  brand: 'littelfuse',
2025-09-17T00:39:56.360339Z	  featured: undefined
2025-09-17T00:39:56.360447Z	}
2025-09-17T00:39:56.360553Z	Fetching solutions with query: 
2025-09-17T00:39:56.360691Z	    {
2025-09-17T00:39:56.360819Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.360931Z	        
2025-09-17T00:39:56.361038Z	    _id,
2025-09-17T00:39:56.361144Z	    title,
2025-09-17T00:39:56.361247Z	    "slug": slug.current,
2025-09-17T00:39:56.361374Z	    summary,
2025-09-17T00:39:56.361472Z	    description,
2025-09-17T00:39:56.361574Z	    coverImage,
2025-09-17T00:39:56.361665Z	    primaryBrand->{
2025-09-17T00:39:56.36177Z	      _id,
2025-09-17T00:39:56.361861Z	      name,
2025-09-17T00:39:56.361961Z	      "slug": slug.current,
2025-09-17T00:39:56.362061Z	      logo
2025-09-17T00:39:56.362161Z	    },
2025-09-17T00:39:56.362294Z	    relatedBrands[]->{
2025-09-17T00:39:56.362401Z	      _id,
2025-09-17T00:39:56.362501Z	      name,
2025-09-17T00:39:56.362593Z	      "slug": slug.current,
2025-09-17T00:39:56.362682Z	      logo
2025-09-17T00:39:56.362793Z	    },
2025-09-17T00:39:56.362903Z	    targetMarket,
2025-09-17T00:39:56.363008Z	    complexity,
2025-09-17T00:39:56.36311Z	    publishedAt,
2025-09-17T00:39:56.363207Z	    isPublished,
2025-09-17T00:39:56.363333Z	    isFeatured,
2025-09-17T00:39:56.363435Z	    viewCount,
2025-09-17T00:39:56.363541Z	    _createdAt,
2025-09-17T00:39:56.363661Z	    _updatedAt
2025-09-17T00:39:56.363781Z	  
2025-09-17T00:39:56.363889Z	      },
2025-09-17T00:39:56.363994Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-17T00:39:56.364099Z	    }
2025-09-17T00:39:56.364196Z	  
2025-09-17T00:39:56.36431Z	Query parameters: {
2025-09-17T00:39:56.364455Z	  limit: 4,
2025-09-17T00:39:56.364552Z	  offset: 0,
2025-09-17T00:39:56.364636Z	  targetMarket: undefined,
2025-09-17T00:39:56.364755Z	  brand: 'littelfuse',
2025-09-17T00:39:56.364851Z	  featured: undefined
2025-09-17T00:39:56.364948Z	}
2025-09-17T00:39:56.365045Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.365142Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.36524Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.365398Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.365596Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-17T00:39:56.365802Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-17T00:39:56.365949Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:56.366084Z	Fetching products with query: 
2025-09-17T00:39:56.366202Z	    {
2025-09-17T00:39:56.366419Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.366625Z	        
2025-09-17T00:39:56.366703Z	    _id,
2025-09-17T00:39:56.366868Z	    _type,
2025-09-17T00:39:56.367012Z	    partNumber,
2025-09-17T00:39:56.367116Z	    "slug": slug.current,
2025-09-17T00:39:56.367221Z	    title,
2025-09-17T00:39:56.367453Z	    shortDescription,
2025-09-17T00:39:56.367754Z	    image,
2025-09-17T00:39:56.367871Z	    brand->{
2025-09-17T00:39:56.36799Z	      name,
2025-09-17T00:39:56.368188Z	      "slug": slug.current,
2025-09-17T00:39:56.373122Z	      logo
2025-09-17T00:39:56.373427Z	    },
2025-09-17T00:39:56.373571Z	    category->{
2025-09-17T00:39:56.373701Z	      name,
2025-09-17T00:39:56.373816Z	      "slug": slug.current
2025-09-17T00:39:56.373975Z	    },
2025-09-17T00:39:56.374103Z	    pricing{
2025-09-17T00:39:56.374203Z	      currency,
2025-09-17T00:39:56.374338Z	      tiers[]{
2025-09-17T00:39:56.374452Z	        quantity,
2025-09-17T00:39:56.374557Z	        price,
2025-09-17T00:39:56.374674Z	        unit
2025-09-17T00:39:56.374781Z	      },
2025-09-17T00:39:56.374887Z	      moq,
2025-09-17T00:39:56.375013Z	      leadTime,
2025-09-17T00:39:56.375139Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.375249Z	      "price": tiers[0].price,
2025-09-17T00:39:56.375407Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.37552Z	    },
2025-09-17T00:39:56.375619Z	    inventory{
2025-09-17T00:39:56.375717Z	      quantity,
2025-09-17T00:39:56.375837Z	      status,
2025-09-17T00:39:56.375951Z	      warehouse,
2025-09-17T00:39:56.376056Z	      lastUpdated,
2025-09-17T00:39:56.376158Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.376281Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.376431Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.376594Z	    },
2025-09-17T00:39:56.376715Z	    isActive,
2025-09-17T00:39:56.376843Z	    isFeatured,
2025-09-17T00:39:56.376949Z	    isNew,
2025-09-17T00:39:56.377063Z	    _createdAt,
2025-09-17T00:39:56.377178Z	    _updatedAt
2025-09-17T00:39:56.377446Z	  
2025-09-17T00:39:56.377727Z	      },
2025-09-17T00:39:56.378098Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-17T00:39:56.387552Z	    }
2025-09-17T00:39:56.387723Z	  
2025-09-17T00:39:56.38786Z	Query parameters: {
2025-09-17T00:39:56.387983Z	  limit: 8,
2025-09-17T00:39:56.388096Z	  offset: 0,
2025-09-17T00:39:56.3882Z	  category: undefined,
2025-09-17T00:39:56.388453Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:39:56.388577Z	  featured: undefined
2025-09-17T00:39:56.388674Z	}
2025-09-17T00:39:56.388776Z	Fetching solutions with query: 
2025-09-17T00:39:56.388879Z	    {
2025-09-17T00:39:56.388973Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.389075Z	        
2025-09-17T00:39:56.389182Z	    _id,
2025-09-17T00:39:56.389483Z	    title,
2025-09-17T00:39:56.389612Z	    "slug": slug.current,
2025-09-17T00:39:56.38972Z	    summary,
2025-09-17T00:39:56.389832Z	    description,
2025-09-17T00:39:56.389942Z	    coverImage,
2025-09-17T00:39:56.390148Z	    primaryBrand->{
2025-09-17T00:39:56.390264Z	      _id,
2025-09-17T00:39:56.390401Z	      name,
2025-09-17T00:39:56.390506Z	      "slug": slug.current,
2025-09-17T00:39:56.390602Z	      logo
2025-09-17T00:39:56.390696Z	    },
2025-09-17T00:39:56.390803Z	    relatedBrands[]->{
2025-09-17T00:39:56.390903Z	      _id,
2025-09-17T00:39:56.391001Z	      name,
2025-09-17T00:39:56.391114Z	      "slug": slug.current,
2025-09-17T00:39:56.391212Z	      logo
2025-09-17T00:39:56.391328Z	    },
2025-09-17T00:39:56.391429Z	    targetMarket,
2025-09-17T00:39:56.391525Z	    complexity,
2025-09-17T00:39:56.391619Z	    publishedAt,
2025-09-17T00:39:56.391743Z	    isPublished,
2025-09-17T00:39:56.391857Z	    isFeatured,
2025-09-17T00:39:56.391974Z	    viewCount,
2025-09-17T00:39:56.392072Z	    _createdAt,
2025-09-17T00:39:56.39217Z	    _updatedAt
2025-09-17T00:39:56.392284Z	  
2025-09-17T00:39:56.392384Z	      },
2025-09-17T00:39:56.392498Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-17T00:39:56.392625Z	    }
2025-09-17T00:39:56.392726Z	  
2025-09-17T00:39:56.392834Z	Query parameters: {
2025-09-17T00:39:56.392939Z	  limit: 4,
2025-09-17T00:39:56.393037Z	  offset: 0,
2025-09-17T00:39:56.393131Z	  targetMarket: undefined,
2025-09-17T00:39:56.393227Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:39:56.393353Z	  featured: undefined
2025-09-17T00:39:56.393481Z	}
2025-09-17T00:39:56.393588Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:56.393696Z	Fetching products with query: 
2025-09-17T00:39:56.393809Z	    {
2025-09-17T00:39:56.393912Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.394019Z	        
2025-09-17T00:39:56.394115Z	    _id,
2025-09-17T00:39:56.394207Z	    _type,
2025-09-17T00:39:56.394322Z	    partNumber,
2025-09-17T00:39:56.394454Z	    "slug": slug.current,
2025-09-17T00:39:56.394552Z	    title,
2025-09-17T00:39:56.394666Z	    shortDescription,
2025-09-17T00:39:56.394772Z	    image,
2025-09-17T00:39:56.394911Z	    brand->{
2025-09-17T00:39:56.395014Z	      name,
2025-09-17T00:39:56.395112Z	      "slug": slug.current,
2025-09-17T00:39:56.395208Z	      logo
2025-09-17T00:39:56.395321Z	    },
2025-09-17T00:39:56.395417Z	    category->{
2025-09-17T00:39:56.395509Z	      name,
2025-09-17T00:39:56.395603Z	      "slug": slug.current
2025-09-17T00:39:56.395701Z	    },
2025-09-17T00:39:56.395814Z	    pricing{
2025-09-17T00:39:56.395932Z	      currency,
2025-09-17T00:39:56.396024Z	      tiers[]{
2025-09-17T00:39:56.396119Z	        quantity,
2025-09-17T00:39:56.396237Z	        price,
2025-09-17T00:39:56.396354Z	        unit
2025-09-17T00:39:56.396474Z	      },
2025-09-17T00:39:56.396586Z	      moq,
2025-09-17T00:39:56.39668Z	      leadTime,
2025-09-17T00:39:56.39679Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.396897Z	      "price": tiers[0].price,
2025-09-17T00:39:56.39704Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.397153Z	    },
2025-09-17T00:39:56.397258Z	    inventory{
2025-09-17T00:39:56.39738Z	      quantity,
2025-09-17T00:39:56.397481Z	      status,
2025-09-17T00:39:56.3976Z	      warehouse,
2025-09-17T00:39:56.397692Z	      lastUpdated,
2025-09-17T00:39:56.397814Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.397925Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.398048Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.398146Z	    },
2025-09-17T00:39:56.398232Z	    isActive,
2025-09-17T00:39:56.398339Z	    isFeatured,
2025-09-17T00:39:56.399489Z	    isNew,
2025-09-17T00:39:56.399621Z	    _createdAt,
2025-09-17T00:39:56.399726Z	    _updatedAt
2025-09-17T00:39:56.399827Z	  
2025-09-17T00:39:56.399929Z	      },
2025-09-17T00:39:56.400037Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-17T00:39:56.40014Z	    }
2025-09-17T00:39:56.400249Z	  
2025-09-17T00:39:56.400372Z	Query parameters: {
2025-09-17T00:39:56.400475Z	  limit: 8,
2025-09-17T00:39:56.400579Z	  offset: 0,
2025-09-17T00:39:56.400678Z	  category: undefined,
2025-09-17T00:39:56.400778Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:39:56.40088Z	  featured: undefined
2025-09-17T00:39:56.400997Z	}
2025-09-17T00:39:56.401111Z	Fetching solutions with query: 
2025-09-17T00:39:56.401212Z	    {
2025-09-17T00:39:56.401349Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.40147Z	        
2025-09-17T00:39:56.401582Z	    _id,
2025-09-17T00:39:56.401688Z	    title,
2025-09-17T00:39:56.401787Z	    "slug": slug.current,
2025-09-17T00:39:56.401889Z	    summary,
2025-09-17T00:39:56.402006Z	    description,
2025-09-17T00:39:56.402107Z	    coverImage,
2025-09-17T00:39:56.402218Z	    primaryBr❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:56.40235Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:56.40247Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-17T00:39:56.402585Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:39:56.402698Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619)
2025-09-17T00:39:56.402798Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-17T00:39:56.402892Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:39:56.403002Z	}
2025-09-17T00:39:56.40311Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:56.403211Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:56.403336Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-17T00:39:56.403439Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:39:56.403547Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619)
2025-09-17T00:39:56.403651Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-17T00:39:56.403753Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:39:56.403872Z	}
2025-09-17T00:39:56.40397Z	and->{
2025-09-17T00:39:56.404082Z	      _id,
2025-09-17T00:39:56.404199Z	      name,
2025-09-17T00:39:56.404323Z	      "slug": slug.current,
2025-09-17T00:39:56.404433Z	      logo
2025-09-17T00:39:56.404532Z	    },
2025-09-17T00:39:56.404626Z	    relatedBrands[]->{
2025-09-17T00:39:56.40474Z	      _id,
2025-09-17T00:39:56.404845Z	      name,
2025-09-17T00:39:56.404942Z	      "slug": slug.current,
2025-09-17T00:39:56.405057Z	      logo
2025-09-17T00:39:56.405159Z	    },
2025-09-17T00:39:56.405254Z	    targetMarket,
2025-09-17T00:39:56.405382Z	    complexity,
2025-09-17T00:39:56.405485Z	    publishedAt,
2025-09-17T00:39:56.405582Z	    isPublished,
2025-09-17T00:39:56.405678Z	    isFeatured,
2025-09-17T00:39:56.405777Z	    viewCount,
2025-09-17T00:39:56.405875Z	    _createdAt,
2025-09-17T00:39:56.405976Z	    _updatedAt
2025-09-17T00:39:56.406082Z	  
2025-09-17T00:39:56.406177Z	      },
2025-09-17T00:39:56.406285Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-17T00:39:56.406397Z	    }
2025-09-17T00:39:56.406492Z	  
2025-09-17T00:39:56.406587Z	Query parameters: {
2025-09-17T00:39:56.406683Z	  limit: 4,
2025-09-17T00:39:56.406781Z	  offset: 0,
2025-09-17T00:39:56.406887Z	  targetMarket: undefined,
2025-09-17T00:39:56.406998Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:39:56.407106Z	  featured: undefined
2025-09-17T00:39:56.407204Z	}
2025-09-17T00:39:56.40733Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:56.407442Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:56.407545Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.407651Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.407751Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.407848Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.407947Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-17T00:39:56.408666Z	Fetching products with query: 
2025-09-17T00:39:56.408927Z	    {
2025-09-17T00:39:56.409077Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.409193Z	        
2025-09-17T00:39:56.409317Z	    _id,
2025-09-17T00:39:56.409436Z	    _type,
2025-09-17T00:39:56.409538Z	    partNumber,
2025-09-17T00:39:56.409632Z	    "slug": slug.current,
2025-09-17T00:39:56.409776Z	    title,
2025-09-17T00:39:56.410069Z	    shortDescription,
2025-09-17T00:39:56.410243Z	    image,
2025-09-17T00:39:56.410382Z	    brand->{
2025-09-17T00:39:56.410482Z	      name,
2025-09-17T00:39:56.410574Z	      "slug": slug.current,
2025-09-17T00:39:56.410761Z	      logo
2025-09-17T00:39:56.410939Z	    },
2025-09-17T00:39:56.411096Z	    category->{
2025-09-17T00:39:56.411238Z	      name,
2025-09-17T00:39:56.411415Z	      "slug": slug.current
2025-09-17T00:39:56.411699Z	    },
2025-09-17T00:39:56.41184Z	    pricing{
2025-09-17T00:39:56.411942Z	      currency,
2025-09-17T00:39:56.412038Z	      tiers[]{
2025-09-17T00:39:56.412131Z	        quantity,
2025-09-17T00:39:56.412376Z	        price,
2025-09-17T00:39:56.412493Z	        unit
2025-09-17T00:39:56.412615Z	      },
2025-09-17T00:39:56.412717Z	      moq,
2025-09-17T00:39:56.413185Z	      leadTime,
2025-09-17T00:39:56.413425Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.413573Z	      "price": tiers[0].price,
2025-09-17T00:39:56.413707Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.413836Z	    },
2025-09-17T00:39:56.413939Z	    inventory{
2025-09-17T00:39:56.414072Z	      quantity,
2025-09-17T00:39:56.414182Z	      status,
2025-09-17T00:39:56.414317Z	      warehouse,
2025-09-17T00:39:56.414428Z	      lastUpdated,
2025-09-17T00:39:56.414533Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.414668Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.414773Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.414871Z	    },
2025-09-17T00:39:56.414977Z	    isActive,
2025-09-17T00:39:56.41508Z	    isFeatured,
2025-09-17T00:39:56.415184Z	    isNew,
2025-09-17T00:39:56.415327Z	    _createdAt,
2025-09-17T00:39:56.415449Z	    _updatedAt
2025-09-17T00:39:56.415563Z	  
2025-09-17T00:39:56.415685Z	      },
2025-09-17T00:39:56.415793Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-17T00:39:56.415896Z	    }
2025-09-17T00:39:56.415991Z	  
2025-09-17T00:39:56.416099Z	Query parameters: {
2025-09-17T00:39:56.416208Z	  limit: 8,
2025-09-17T00:39:56.416327Z	  offset: 0,
2025-09-17T00:39:56.41644Z	  category: undefined,
2025-09-17T00:39:56.41654Z	  brand: 'mediatek',
2025-09-17T00:39:56.416651Z	  featured: undefined
2025-09-17T00:39:56.416855Z	}
2025-09-17T00:39:56.417308Z	Fetching solutions with query: 
2025-09-17T00:39:56.417473Z	    {
2025-09-17T00:39:56.417596Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.417754Z	        
2025-09-17T00:39:56.417967Z	    _id,
2025-09-17T00:39:56.418093Z	    title,
2025-09-17T00:39:56.418221Z	    "slug": slug.current,
2025-09-17T00:39:56.418429Z	    summary,
2025-09-17T00:39:56.41867Z	    description,
2025-09-17T00:39:56.418865Z	    coverImage,
2025-09-17T00:39:56.419085Z	    primaryBrand->{
2025-09-17T00:39:56.41928Z	      _id,
2025-09-17T00:39:56.419516Z	      name,
2025-09-17T00:39:56.419705Z	      "slug": slug.current,
2025-09-17T00:39:56.419872Z	      logo
2025-09-17T00:39:56.42006Z	    },
2025-09-17T00:39:56.42016Z	    relatedBrands[]->{
2025-09-17T00:39:56.420344Z	      _id,
2025-09-17T00:39:56.420505Z	      name,
2025-09-17T00:39:56.420691Z	      "slug": slug.current,
2025-09-17T00:39:56.420875Z	      logo
2025-09-17T00:39:56.42105Z	    },
2025-09-17T00:39:56.421163Z	    targetMarket,
2025-09-17T00:39:56.421388Z	    complexity,
2025-09-17T00:39:56.421492Z	    publishedAt,
2025-09-17T00:39:56.421674Z	    isPublished,
2025-09-17T00:39:56.421836Z	    isFeatured,
2025-09-17T00:39:56.422013Z	    viewCount,
2025-09-17T00:39:56.422175Z	    _createdAt,
2025-09-17T00:39:56.42235Z	    _updatedAt
2025-09-17T00:39:56.422461Z	  
2025-09-17T00:39:56.422584Z	      },
2025-09-17T00:39:56.422687Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-17T00:39:56.422796Z	    }
2025-09-17T00:39:56.422889Z	  
2025-09-17T00:39:56.42299Z	Query parameters: {
2025-09-17T00:39:56.423198Z	  limit: 4,
2025-09-17T00:39:56.423344Z	  offset: 0,
2025-09-17T00:39:56.423519Z	  targetMarket: undefined,
2025-09-17T00:39:56.423666Z	  brand: 'mediatek',
2025-09-17T00:39:56.423793Z	  featured: undefined
2025-09-17T00:39:56.423931Z	}
2025-09-17T00:39:56.424123Z	✅ [getBrandData] Found brand: MediaTek
2025-09-17T00:39:56.424299Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.424498Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.42469Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-17T00:39:56.424819Z	Fetching products with query: 
2025-09-17T00:39:56.42494Z	    {
2025-09-17T00:39:56.425032Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.425134Z	        
2025-09-17T00:39:56.425242Z	    _id,
2025-09-17T00:39:56.425357Z	    _type,
2025-09-17T00:39:56.425462Z	    partNumber,
2025-09-17T00:39:56.425561Z	    "slug": slug.current,
2025-09-17T00:39:56.425651Z	    title,
2025-09-17T00:39:56.425718Z	    shortDescription,
2025-09-17T00:39:56.4258Z	    image,
2025-09-17T00:39:56.425888Z	    brand->{
2025-09-17T00:39:56.426104Z	      name,
2025-09-17T00:39:56.426241Z	      "slug": slug.current,
2025-09-17T00:39:56.426353Z	      logo
2025-09-17T00:39:56.426514Z	    },
2025-09-17T00:39:56.426622Z	    category->{
2025-09-17T00:39:56.426733Z	      name,
2025-09-17T00:39:56.4269Z	      "slug": slug.current
2025-09-17T00:39:56.42698Z	    },
2025-09-17T00:39:56.427041Z	    pricing{
2025-09-17T00:39:56.427169Z	      currency,
2025-09-17T00:39:56.427307Z	      tiers[]{
2025-09-17T00:39:56.427381Z	        quantity,
2025-09-17T00:39:56.427461Z	        price,
2025-09-17T00:39:56.427592Z	        unit
2025-09-17T00:39:56.427706Z	      },
2025-09-17T00:39:56.427815Z	      moq,
2025-09-17T00:39:56.427912Z	      leadTime,
2025-09-17T00:39:56.428016Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.428119Z	      "price": tiers[0].price,
2025-09-17T00:39:56.42822Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.428359Z	    },
2025-09-17T00:39:56.428459Z	    inventory{
2025-09-17T00:39:56.428555Z	      quantity,
2025-09-17T00:39:56.42866Z	      status,
2025-09-17T00:39:56.428766Z	      warehouse,
2025-09-17T00:39:56.428865Z	      lastUpdated,
2025-09-17T00:39:56.428961Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.429067Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.429169Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.429249Z	    },
2025-09-17T00:39:56.429371Z	    isActive,
2025-09-17T00:39:56.429448Z	    isFeatured,
2025-09-17T00:39:56.42954Z	    isNew,
2025-09-17T00:39:56.429646Z	    _createdAt,
2025-09-17T00:39:56.429759Z	    _updatedAt
2025-09-17T00:39:56.42987Z	  
2025-09-17T00:39:56.429995Z	      },
2025-09-17T00:39:56.43016Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-17T00:39:56.430323Z	    }
2025-09-17T00:39:56.430403Z	  
2025-09-17T00:39:56.430464Z	Query parameters: {
2025-09-17T00:39:56.430572Z	  limit: 8,
2025-09-17T00:39:56.430664Z	  offset: 0,
2025-09-17T00:39:56.430788Z	  category: undefined,
2025-09-17T00:39:56.430907Z	  brand: 'mediatek',
2025-09-17T00:39:56.43101Z	  featured: undefined
2025-09-17T00:39:56.431132Z	}
2025-09-17T00:39:56.431313Z	Fetching solutions with query: 
2025-09-17T00:39:56.431389Z	    {
2025-09-17T00:39:56.43152Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.4316Z	        
2025-09-17T00:39:56.431664Z	    _id,
2025-09-17T00:39:56.431885Z	    title,
2025-09-17T00:39:56.432019Z	    "slug": slug.current,
2025-09-17T00:39:56.432132Z	    summary,
2025-09-17T00:39:56.432276Z	    description,
2025-09-17T00:39:56.432367Z	    coverImage,
2025-09-17T00:39:56.432488Z	    primaryBrand->{
2025-09-17T00:39:56.432624Z	      _id,
2025-09-17T00:39:56.432794Z	      name,
2025-09-17T00:39:56.432959Z	      "slug": slug.current,
2025-09-17T00:39:56.433036Z	      logo
2025-09-17T00:39:56.433122Z	    },
2025-09-17T00:39:56.433257Z	    relatedBrands[]->{
2025-09-17T00:39:56.433389Z	      _id,
2025-09-17T00:39:56.433521Z	      name,
2025-09-17T00:39:56.433643Z	      "slug": slug.current,
2025-09-17T00:39:56.433777Z	      logo
2025-09-17T00:39:56.433907Z	    },
2025-09-17T00:39:56.43404Z	    targetMarket,
2025-09-17T00:39:56.434165Z	    complexity,
2025-09-17T00:39:56.434304Z	    publishedAt,
2025-09-17T00:39:56.434383Z	    isPublished,
2025-09-17T00:39:56.43451Z	    isFeatured,
2025-09-17T00:39:56.434605Z	    viewCount,
2025-09-17T00:39:56.434689Z	    _createdAt,
2025-09-17T00:39:56.434782Z	    _updatedAt
2025-09-17T00:39:56.434875Z	  
2025-09-17T00:39:56.434954Z	      },
2025-09-17T00:39:56.435038Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-17T00:39:56.435117Z	    }
2025-09-17T00:39:56.435199Z	  
2025-09-17T00:39:56.435308Z	Query parameters: {
2025-09-17T00:39:56.435444Z	  limit: 4,
2025-09-17T00:39:56.435598Z	  offset: 0,
2025-09-17T00:39:56.435739Z	  targetMarket: undefined,
2025-09-17T00:39:56.435814Z	  brand: 'mediatek',
2025-09-17T00:39:56.435872Z	  featured: undefined
2025-09-17T00:39:56.436Z	}
2025-09-17T00:39:56.43607Z	✅ [getBrandData] Found brand: MediaTek
2025-09-17T00:39:56.436211Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.436337Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.436549Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-17T00:39:56.43667Z	Fetching products with query: 
2025-09-17T00:39:56.436811Z	    {
2025-09-17T00:39:56.436924Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.437083Z	        
2025-09-17T00:39:56.437195Z	    _id,
2025-09-17T00:39:56.437312Z	    _type,
2025-09-17T00:39:56.437409Z	    partNumber,
2025-09-17T00:39:56.437518Z	    "slug": slug.current,
2025-09-17T00:39:56.437637Z	    title,
2025-09-17T00:39:56.437744Z	    shortDescription,
2025-09-17T00:39:56.437857Z	    image,
2025-09-17T00:39:56.437957Z	    brand->{
2025-09-17T00:39:56.438071Z	      name,
2025-09-17T00:39:56.438234Z	      "slug": slug.current,
2025-09-17T00:39:56.441344Z	      logo
2025-09-17T00:39:56.441576Z	    },
2025-09-17T00:39:56.441781Z	    category->{
2025-09-17T00:39:56.441965Z	      name,
2025-09-17T00:39:56.442157Z	      "slug": slug.current
2025-09-17T00:39:56.442349Z	    },
2025-09-17T00:39:56.442488Z	    pricing{
2025-09-17T00:39:56.442595Z	      currency,
2025-09-17T00:39:56.442698Z	      tiers[]{
2025-09-17T00:39:56.442791Z	        quantity,
2025-09-17T00:39:56.442888Z	        price,
2025-09-17T00:39:56.442998Z	        unit
2025-09-17T00:39:56.443097Z	      },
2025-09-17T00:39:56.443179Z	      moq,
2025-09-17T00:39:56.443304Z	      leadTime,
2025-09-17T00:39:56.443384Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.443473Z	      "price": tiers[0].price,
2025-09-17T00:39:56.443614Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.443791Z	    },
2025-09-17T00:39:56.443887Z	    inventory{
2025-09-17T00:39:56.444097Z	      quantity,
2025-09-17T00:39:56.444198Z	      status,
2025-09-17T00:39:56.444374Z	      warehouse,
2025-09-17T00:39:56.444524Z	      lastUpdated,
2025-09-17T00:39:56.444627Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.444745Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.444888Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.445001Z	    },
2025-09-17T00:39:56.445094Z	    isActive,
2025-09-17T00:39:56.445205Z	    isFeatured,
2025-09-17T00:39:56.445342Z	    isNew,
2025-09-17T00:39:56.445427Z	    _createdAt,
2025-09-17T00:39:56.445565Z	    _updatedAt
2025-09-17T00:39:56.445691Z	  
2025-09-17T00:39:56.445789Z	      },
2025-09-17T00:39:56.445908Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-17T00:39:56.446042Z	    }
2025-09-17T00:39:56.446211Z	  
2025-09-17T00:39:56.446365Z	Query parameters: {
2025-09-17T00:39:56.446504Z	  limit: 8,
2025-09-17T00:39:56.446637Z	  offset: 0,
2025-09-17T00:39:56.446743Z	  category: undefined,
2025-09-17T00:39:56.446837Z	  brand: 'ncc',
2025-09-17T00:39:56.446968Z	  featured: undefined
2025-09-17T00:39:56.447064Z	}
2025-09-17T00:39:56.447168Z	Fetching solutions with query: 
2025-09-17T00:39:56.447264Z	    {
2025-09-17T00:39:56.447369Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.447478Z	        
2025-09-17T00:39:56.447574Z	    _id,
2025-09-17T00:39:56.447756Z	    title,
2025-09-17T00:39:56.447885Z	    "slug": slug.current,
2025-09-17T00:39:56.447954Z	    summary,
2025-09-17T00:39:56.44802Z	    description,
2025-09-17T00:39:56.448168Z	    coverImage,
2025-09-17T00:39:56.44825Z	    primaryBrand->{
2025-09-17T00:39:56.448384Z	      _id,
2025-09-17T00:39:56.44854Z	      name,
2025-09-17T00:39:56.448635Z	      "slug": slug.current,
2025-09-17T00:39:56.448858Z	      logo
2025-09-17T00:39:56.448941Z	    },
2025-09-17T00:39:56.449001Z	    relatedBrands[]->{
2025-09-17T00:39:56.449224Z	      _id,
2025-09-17T00:39:56.449389Z	      name,
2025-09-17T00:39:56.44949Z	      "slug": slug.current,
2025-09-17T00:39:56.449646Z	      logo
2025-09-17T00:39:56.44975Z	    },
2025-09-17T00:39:56.449879Z	    targetMarket,
2025-09-17T00:39:56.449956Z	    complexity,
2025-09-17T00:39:56.45057Z	    publishedAt,
2025-09-17T00:39:56.450712Z	    isPublished,
2025-09-17T00:39:56.450823Z	    isFeatured,
2025-09-17T00:39:56.450931Z	    viewCount,
2025-09-17T00:39:56.451053Z	    _createdAt,
2025-09-17T00:39:56.451186Z	    _updatedAt
2025-09-17T00:39:56.451317Z	  
2025-09-17T00:39:56.451462Z	      },
2025-09-17T00:39:56.45166Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-17T00:39:56.451741Z	    }
2025-09-17T00:39:56.451854Z	  
2025-09-17T00:39:56.451951Z	Query parameters: {
2025-09-17T00:39:56.45202Z	  limit: 4,
2025-09-17T00:39:56.452158Z	  offset: 0,
2025-09-17T00:39:56.45223Z	  targetMarket: undefined,
2025-09-17T00:39:56.452328Z	  brand: 'ncc',
2025-09-17T00:39:56.452449Z	  featured: undefined
2025-09-17T00:39:56.45254Z	}
2025-09-17T00:39:56.452644Z	✅ [getBrandData] Found brand: ncc
2025-09-17T00:39:56.452892Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.452993Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.453127Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-17T00:39:56.45321Z	Fetching products with query: 
2025-09-17T00:39:56.453395Z	    {
2025-09-17T00:39:56.453553Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.453718Z	        
2025-09-17T00:39:56.453849Z	    _id,
2025-09-17T00:39:56.453953Z	    _type,
2025-09-17T00:39:56.454067Z	    partNumber,
2025-09-17T00:39:56.454222Z	    "slug": slug.current,
2025-09-17T00:39:56.454367Z	    title,
2025-09-17T00:39:56.45452Z	    shortDescription,
2025-09-17T00:39:56.45464Z	    image,
2025-09-17T00:39:56.45477Z	    brand->{
2025-09-17T00:39:56.454888Z	      name,
2025-09-17T00:39:56.45501Z	      "slug": slug.current,
2025-09-17T00:39:56.455127Z	      logo
2025-09-17T00:39:56.455198Z	    },
2025-09-17T00:39:56.455327Z	    category->{
2025-09-17T00:39:56.455459Z	      name,
2025-09-17T00:39:56.455527Z	      "slug": slug.current
2025-09-17T00:39:56.455626Z	    },
2025-09-17T00:39:56.455876Z	    pricing{
2025-09-17T00:39:56.456059Z	      currency,
2025-09-17T00:39:56.456197Z	      tiers[]{
2025-09-17T00:39:56.456291Z	        quantity,
2025-09-17T00:39:56.456408Z	        price,
2025-09-17T00:39:56.456546Z	        unit
2025-09-17T00:39:56.456618Z	      },
2025-09-17T00:39:56.456733Z	      moq,
2025-09-17T00:39:56.456876Z	      leadTime,
2025-09-17T00:39:56.457016Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.457149Z	      "price": tiers[0].price,
2025-09-17T00:39:56.457218Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.457334Z	    },
2025-09-17T00:39:56.45741Z	    inventory{
2025-09-17T00:39:56.457512Z	      quantity,
2025-09-17T00:39:56.457635Z	      status,
2025-09-17T00:39:56.457754Z	      warehouse,
2025-09-17T00:39:56.457903Z	      lastUpdated,
2025-09-17T00:39:56.457973Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.4581Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.458241Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.458384Z	    },
2025-09-17T00:39:56.458517Z	    isActive,
2025-09-17T00:39:56.458622Z	    isFeatured,
2025-09-17T00:39:56.458801Z	    isNew,
2025-09-17T00:39:56.458939Z	    _createdAt,
2025-09-17T00:39:56.45905Z	    _updatedAt
2025-09-17T00:39:56.45913Z	  
2025-09-17T00:39:56.459253Z	      },
2025-09-17T00:39:56.459399Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-17T00:39:56.459484Z	    }
2025-09-17T00:39:56.459574Z	  
2025-09-17T00:39:56.459657Z	Query parameters: {
2025-09-17T00:39:56.459742Z	  limit: 8,
2025-09-17T00:39:56.459859Z	  offset: 0,
2025-09-17T00:39:56.459954Z	  category: undefined,
2025-09-17T00:39:56.460047Z	  brand: 'ncc',
2025-09-17T00:39:56.460169Z	  featured: undefined
2025-09-17T00:39:56.460293Z	}
2025-09-17T00:39:56.460398Z	Fetching solutions with query: 
2025-09-17T00:39:56.460507Z	    {
2025-09-17T00:39:56.460592Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.460759Z	        
2025-09-17T00:39:56.460834Z	    _id,
2025-09-17T00:39:56.460947Z	    title,
2025-09-17T00:39:56.461102Z	    "slug": slug.current,
2025-09-17T00:39:56.46117Z	    summary,
2025-09-17T00:39:56.461279Z	    description,
2025-09-17T00:39:56.461402Z	    coverImage,
2025-09-17T00:39:56.461472Z	    primaryBrand->{
2025-09-17T00:39:56.461571Z	      _id,
2025-09-17T00:39:56.4617Z	      name,
2025-09-17T00:39:56.461834Z	      "slug": slug.current,
2025-09-17T00:39:56.461922Z	      logo
2025-09-17T00:39:56.462027Z	    },
2025-09-17T00:39:56.462145Z	    relatedBrands[]->{
2025-09-17T00:39:56.462259Z	      _id,
2025-09-17T00:39:56.462419Z	      name,
2025-09-17T00:39:56.46249Z	      "slug": slug.current,
2025-09-17T00:39:56.462602Z	      logo
2025-09-17T00:39:56.462717Z	    },
2025-09-17T00:39:56.462833Z	    targetMarket,
2025-09-17T00:39:56.46296Z	    complexity,
2025-09-17T00:39:56.463203Z	    publishedAt,
2025-09-17T00:39:56.463342Z	    isPublished,
2025-09-17T00:39:56.46343Z	    isFeatured,
2025-09-17T00:39:56.463596Z	    viewCount,
2025-09-17T00:39:56.463741Z	    _createdAt,
2025-09-17T00:39:56.46384Z	    _updatedAt
2025-09-17T00:39:56.463959Z	  
2025-09-17T00:39:56.464087Z	      },
2025-09-17T00:39:56.464208Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-17T00:39:56.464342Z	    }
2025-09-17T00:39:56.464459Z	  
2025-09-17T00:39:56.464621Z	Query parameters: {
2025-09-17T00:39:56.464705Z	  limit: 4,
2025-09-17T00:39:56.46481Z	  offset: 0,
2025-09-17T00:39:56.464939Z	  targetMarket: undefined,
2025-09-17T00:39:56.465044Z	  brand: 'ncc',
2025-09-17T00:39:56.465151Z	  featured: undefined
2025-09-17T00:39:56.465259Z	}
2025-09-17T00:39:56.465443Z	✅ [getBrandData] Found brand: ncc
2025-09-17T00:39:56.465507Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.465562Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.465689Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-17T00:39:56.465771Z	Fetching products with query: 
2025-09-17T00:39:56.46583Z	    {
2025-09-17T00:39:56.465921Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.46601Z	        
2025-09-17T00:39:56.466096Z	    _id,
2025-09-17T00:39:56.466224Z	    _type,
2025-09-17T00:39:56.466375Z	    partNumber,
2025-09-17T00:39:56.466449Z	    "slug": slug.current,
2025-09-17T00:39:56.466528Z	    title,
2025-09-17T00:39:56.466662Z	    shortDescription,
2025-09-17T00:39:56.466785Z	    image,
2025-09-17T00:39:56.466866Z	    brand->{
2025-09-17T00:39:56.466931Z	      name,
2025-09-17T00:39:56.467072Z	      "slug": slug.current,
2025-09-17T00:39:56.467292Z	      logo
2025-09-17T00:39:56.467381Z	    },
2025-09-17T00:39:56.467445Z	    category->{
2025-09-17T00:39:56.467565Z	      name,
2025-09-17T00:39:56.467701Z	      "slug": slug.current
2025-09-17T00:39:56.467808Z	    },
2025-09-17T00:39:56.467932Z	    pricing{
2025-09-17T00:39:56.468019Z	      currency,
2025-09-17T00:39:56.468155Z	      tiers[]{
2025-09-17T00:39:56.468304Z	        quantity,
2025-09-17T00:39:56.468405Z	        price,
2025-09-17T00:39:56.468553Z	        unit
2025-09-17T00:39:56.468639Z	      },
2025-09-17T00:39:56.468777Z	      moq,
2025-09-17T00:39:56.468851Z	      leadTime,
2025-09-17T00:39:56.468961Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.469102Z	      "price": tiers[0].price,
2025-09-17T00:39:56.469279Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.469372Z	    },
2025-09-17T00:39:56.46948Z	    inventory{
2025-09-17T00:39:56.469603Z	      quantity,
2025-09-17T00:39:56.469705Z	      status,
2025-09-17T00:39:56.46978Z	      warehouse,
2025-09-17T00:39:56.469872Z	      lastUpdated,
2025-09-17T00:39:56.469963Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.470067Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.470177Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.470327Z	    },
2025-09-17T00:39:56.470418Z	    isActive,
2025-09-17T00:39:56.470516Z	    isFeatured,
2025-09-17T00:39:56.470619Z	    isNew,
2025-09-17T00:39:56.47073Z	    _createdAt,
2025-09-17T00:39:56.470826Z	    _updatedAt
2025-09-17T00:39:56.470914Z	  
2025-09-17T00:39:56.470985Z	      },
2025-09-17T00:39:56.471056Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-17T00:39:56.471228Z	    }
2025-09-17T00:39:56.471375Z	  
2025-09-17T00:39:56.471471Z	Query parameters: {
2025-09-17T00:39:56.471573Z	  limit: 8,
2025-09-17T00:39:56.471679Z	  offset: 0,
2025-09-17T00:39:56.47179Z	  category: undefined,
2025-09-17T00:39:56.471903Z	  brand: 'lem',
2025-09-17T00:39:56.47206Z	  featured: undefined
2025-09-17T00:39:56.472139Z	}
2025-09-17T00:39:56.472252Z	Fetching solutions with query: 
2025-09-17T00:39:56.47243Z	    {
2025-09-17T00:39:56.472511Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.472658Z	        
2025-09-17T00:39:56.472787Z	    _id,
2025-09-17T00:39:56.473029Z	    title,
2025-09-17T00:39:56.473167Z	    "slug": slug.current,
2025-09-17T00:39:56.473281Z	    summary,
2025-09-17T00:39:56.473381Z	    description,
2025-09-17T00:39:56.473475Z	    coverImage,
2025-09-17T00:39:56.473591Z	    primaryBrand->{
2025-09-17T00:39:56.473732Z	      _id,
2025-09-17T00:39:56.473865Z	      name,
2025-09-17T00:39:56.474109Z	      "slug": slug.current,
2025-09-17T00:39:56.474345Z	      logo
2025-09-17T00:39:56.474433Z	    },
2025-09-17T00:39:56.474565Z	    relatedBrands[]->{
2025-09-17T00:39:56.474704Z	      _id,
2025-09-17T00:39:56.474791Z	      name,
2025-09-17T00:39:56.47491Z	      "slug": slug.current,
2025-09-17T00:39:56.474997Z	      logo
2025-09-17T00:39:56.475127Z	    },
2025-09-17T00:39:56.475281Z	    targetMarket,
2025-09-17T00:39:56.475355Z	    complexity,
2025-09-17T00:39:56.475411Z	    publishedAt,
2025-09-17T00:39:56.475532Z	    isPublished,
2025-09-17T00:39:56.475637Z	    isFeatured,
2025-09-17T00:39:56.475774Z	    viewCount,
2025-09-17T00:39:56.4759Z	    _createdAt,
2025-09-17T00:39:56.476028Z	    _updatedAt
2025-09-17T00:39:56.47609Z	  
2025-09-17T00:39:56.476143Z	      },
2025-09-17T00:39:56.476201Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-17T00:39:56.476326Z	    }
2025-09-17T00:39:56.476435Z	  
2025-09-17T00:39:56.476527Z	Query parameters: {
2025-09-17T00:39:56.476608Z	  limit: 4,
2025-09-17T00:39:56.4767Z	  offset: 0,
2025-09-17T00:39:56.476798Z	  targetMarket: undefined,
2025-09-17T00:39:56.476886Z	  brand: 'lem',
2025-09-17T00:39:56.476971Z	  featured: undefined
2025-09-17T00:39:56.477054Z	}
2025-09-17T00:39:56.477138Z	✅ [getBrandData] Found brand: LEM
2025-09-17T00:39:56.477222Z	Products fetch result: {
2025-09-17T00:39:56.477321Z	  totalProducts: 3,
2025-09-17T00:39:56.477408Z	  fetchedProducts: 3,
2025-09-17T00:39:56.477491Z	  firstProduct: {
2025-09-17T00:39:56.47758Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-17T00:39:56.477667Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-17T00:39:56.477764Z	    _type: 'product',
2025-09-17T00:39:56.477852Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-17T00:39:56.477935Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-17T00:39:56.478019Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-17T00:39:56.478103Z	    image: null,
2025-09-17T00:39:56.478185Z	    inventory: {
2025-09-17T00:39:56.478276Z	      inStock: true,
2025-09-17T00:39:56.478359Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-17T00:39:56.478415Z	      quantity: 0,
2025-09-17T00:39:56.478467Z	      status: 'in_stock',
2025-09-17T00:39:56.478519Z	      warehouse: null
2025-09-17T00:39:56.478571Z	    },
2025-09-17T00:39:56.478625Z	    isActive: true,
2025-09-17T00:39:56.47869Z	    isFeatured: false,
2025-09-17T00:39:56.478745Z	    isNew: false,
2025-09-17T00:39:56.478806Z	    partNumber: 'la55-p',
2025-09-17T00:39:56.479064Z	    pricing: {
2025-09-17T00:39:56.479126Z	      currency: 'CNY',
2025-09-17T00:39:56.479234Z	      leadTime: null,
2025-09-17T00:39:56.479332Z	      moq: null,
2025-09-17T00:39:56.479397Z	      price: null,
2025-09-17T00:39:56.479459Z	      tiers: null
2025-09-17T00:39:56.479556Z	    },
2025-09-17T00:39:56.479663Z	    shortDescription: '电流传感器la55-p',
2025-09-17T00:39:56.479768Z	    slug: 'la55-p',
2025-09-17T00:39:56.479873Z	    title: '电流传感器la55-p'
2025-09-17T00:39:56.479994Z	  }
2025-09-17T00:39:56.480105Z	}
2025-09-17T00:39:56.480213Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.480347Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-17T00:39:56.480449Z	Fetching products with query: 
2025-09-17T00:39:56.487425Z	    {
2025-09-17T00:39:56.487595Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.487734Z	        
2025-09-17T00:39:56.487863Z	    _id,
2025-09-17T00:39:56.487972Z	    _type,
2025-09-17T00:39:56.488133Z	    partNumber,
2025-09-17T00:39:56.488218Z	    "slug": slug.current,
2025-09-17T00:39:56.48836Z	    title,
2025-09-17T00:39:56.488509Z	    shortDescription,
2025-09-17T00:39:56.488658Z	    image,
2025-09-17T00:39:56.488766Z	    brand->{
2025-09-17T00:39:56.488843Z	      name,
2025-09-17T00:39:56.489Z	      "slug": slug.current,
2025-09-17T00:39:56.489174Z	      logo
2025-09-17T00:39:56.489259Z	    },
2025-09-17T00:39:56.489413Z	    category->{
2025-09-17T00:39:56.489567Z	      name,
2025-09-17T00:39:56.489766Z	      "slug": slug.current
2025-09-17T00:39:56.489841Z	    },
2025-09-17T00:39:56.489941Z	    pricing{
2025-09-17T00:39:56.490075Z	      currency,
2025-09-17T00:39:56.490176Z	      tiers[]{
2025-09-17T00:39:56.490299Z	        quantity,
2025-09-17T00:39:56.490439Z	        price,
2025-09-17T00:39:56.490514Z	        unit
2025-09-17T00:39:56.490651Z	      },
2025-09-17T00:39:56.490769Z	      moq,
2025-09-17T00:39:56.490898Z	      leadTime,
2025-09-17T00:39:56.491019Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.491127Z	      "price": tiers[0].price,
2025-09-17T00:39:56.491247Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.491381Z	    },
2025-09-17T00:39:56.491496Z	    inventory{
2025-09-17T00:39:56.491603Z	      quantity,
2025-09-17T00:39:56.491799Z	      status,
2025-09-17T00:39:56.491869Z	      warehouse,
2025-09-17T00:39:56.492031Z	      lastUpdated,
2025-09-17T00:39:56.492112Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.492246Z	      "inStock": status == "in_❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:56.492357Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:56.492418Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-17T00:39:56.492595Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:39:56.492675Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619)
2025-09-17T00:39:56.492852Z	    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-09-17T00:39:56.492936Z	    at runNextTicks (node:internal/process/task_queues:64:3)
2025-09-17T00:39:56.493085Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-17T00:39:56.493188Z	    at process.processTimers (node:internal/timers:512:7) {
2025-09-17T00:39:56.493313Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:39:56.493398Z	}
2025-09-17T00:39:56.493478Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:56.49361Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:56.49371Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-17T00:39:56.49379Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:39:56.493852Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619)
2025-09-17T00:39:56.493917Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-17T00:39:56.493977Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:39:56.494132Z	}
2025-09-17T00:39:56.494204Z	stock",
2025-09-17T00:39:56.494259Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.494351Z	    },
2025-09-17T00:39:56.49441Z	    isActive,
2025-09-17T00:39:56.49447Z	    isFeatured,
2025-09-17T00:39:56.494525Z	    isNew,
2025-09-17T00:39:56.494706Z	    _createdAt,
2025-09-17T00:39:56.494786Z	    _updatedAt
2025-09-17T00:39:56.494917Z	  
2025-09-17T00:39:56.495001Z	      },
2025-09-17T00:39:56.495117Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-17T00:39:56.495261Z	    }
2025-09-17T00:39:56.495402Z	  
2025-09-17T00:39:56.495562Z	Query parameters: {
2025-09-17T00:39:56.495721Z	  limit: 8,
2025-09-17T00:39:56.495896Z	  offset: 0,
2025-09-17T00:39:56.495977Z	  category: undefined,
2025-09-17T00:39:56.496242Z	  brand: 'lem',
2025-09-17T00:39:56.496431Z	  featured: undefined
2025-09-17T00:39:56.496559Z	}
2025-09-17T00:39:56.496719Z	Fetching solutions with query: 
2025-09-17T00:39:56.496858Z	    {
2025-09-17T00:39:56.496964Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.497058Z	        
2025-09-17T00:39:56.497164Z	    _id,
2025-09-17T00:39:56.497288Z	    title,
2025-09-17T00:39:56.49742Z	    "slug": slug.current,
2025-09-17T00:39:56.49772Z	    summary,
2025-09-17T00:39:56.497807Z	    description,
2025-09-17T00:39:56.497875Z	    coverImage,
2025-09-17T00:39:56.498081Z	    primaryBrand->{
2025-09-17T00:39:56.498158Z	      _id,
2025-09-17T00:39:56.498315Z	      name,
2025-09-17T00:39:56.498397Z	      "slug": slug.current,
2025-09-17T00:39:56.498457Z	      logo
2025-09-17T00:39:56.498631Z	    },
2025-09-17T00:39:56.498808Z	    relatedBrands[]->{
2025-09-17T00:39:56.498974Z	      _id,
2025-09-17T00:39:56.499111Z	      name,
2025-09-17T00:39:56.499258Z	      "slug": slug.current,
2025-09-17T00:39:56.499398Z	      logo
2025-09-17T00:39:56.499515Z	    },
2025-09-17T00:39:56.499667Z	    targetMarket,
2025-09-17T00:39:56.4998Z	    complexity,
2025-09-17T00:39:56.499913Z	    publishedAt,
2025-09-17T00:39:56.500074Z	    isPublished,
2025-09-17T00:39:56.500197Z	    isFeatured,
2025-09-17T00:39:56.500348Z	    viewCount,
2025-09-17T00:39:56.500453Z	    _createdAt,
2025-09-17T00:39:56.500592Z	    _updatedAt
2025-09-17T00:39:56.500756Z	  
2025-09-17T00:39:56.500884Z	      },
2025-09-17T00:39:56.501139Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-17T00:39:56.501378Z	    }
2025-09-17T00:39:56.501509Z	  
2025-09-17T00:39:56.501667Z	Query parameters: {
2025-09-17T00:39:56.501757Z	  limit: 4,
2025-09-17T00:39:56.501883Z	  offset: 0,
2025-09-17T00:39:56.501972Z	  targetMarket: undefined,
2025-09-17T00:39:56.502051Z	  brand: 'lem',
2025-09-17T00:39:56.502172Z	  featured: undefined
2025-09-17T00:39:56.50224Z	}
2025-09-17T00:39:56.502354Z	✅ [getBrandData] Found brand: LEM
2025-09-17T00:39:56.502554Z	Products fetch result: {
2025-09-17T00:39:56.502665Z	  totalProducts: 3,
2025-09-17T00:39:56.502763Z	  fetchedProducts: 3,
2025-09-17T00:39:56.502964Z	  firstProduct: {
2025-09-17T00:39:56.503054Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-17T00:39:56.503119Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-17T00:39:56.503303Z	    _type: 'product',
2025-09-17T00:39:56.503406Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-17T00:39:56.503755Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-17T00:39:56.503882Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-17T00:39:56.50416Z	    image: null,
2025-09-17T00:39:56.50424Z	    inventory: {
2025-09-17T00:39:56.504393Z	      inStock: true,
2025-09-17T00:39:56.504511Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-17T00:39:56.504743Z	      quantity: 0,
2025-09-17T00:39:56.50484Z	      status: 'in_stock',
2025-09-17T00:39:56.505072Z	      warehouse: null
2025-09-17T00:39:56.50515Z	    },
2025-09-17T00:39:56.505218Z	    isActive: true,
2025-09-17T00:39:56.505451Z	    isFeatured: false,
2025-09-17T00:39:56.505534Z	    isNew: false,
2025-09-17T00:39:56.505622Z	    partNumber: 'la55-p',
2025-09-17T00:39:56.505753Z	    pricing: {
2025-09-17T00:39:56.505905Z	      currency: 'CNY',
2025-09-17T00:39:56.505986Z	      leadTime: null,
2025-09-17T00:39:56.506116Z	      moq: null,
2025-09-17T00:39:56.506192Z	      price: null,
2025-09-17T00:39:56.50634Z	      tiers: null
2025-09-17T00:39:56.506403Z	    },
2025-09-17T00:39:56.506459Z	    shortDescription: '电流传感器la55-p',
2025-09-17T00:39:56.506629Z	    slug: 'la55-p',
2025-09-17T00:39:56.506742Z	    title: '电流传感器la55-p'
2025-09-17T00:39:56.506845Z	  }
2025-09-17T00:39:56.506946Z	}
2025-09-17T00:39:56.50705Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.507145Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-17T00:39:56.507253Z	Fetching products with query: 
2025-09-17T00:39:56.507489Z	    {
2025-09-17T00:39:56.507625Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.507763Z	        
2025-09-17T00:39:56.507886Z	    _id,
2025-09-17T00:39:56.507962Z	    _type,
2025-09-17T00:39:56.508028Z	    partNumber,
2025-09-17T00:39:56.508208Z	    "slug": slug.current,
2025-09-17T00:39:56.508348Z	    title,
2025-09-17T00:39:56.508428Z	    shortDescription,
2025-09-17T00:39:56.508548Z	    image,
2025-09-17T00:39:56.508634Z	    brand->{
2025-09-17T00:39:56.508772Z	      name,
2025-09-17T00:39:56.50885Z	      "slug": slug.current,
2025-09-17T00:39:56.508914Z	      logo
2025-09-17T00:39:56.509285Z	    },
2025-09-17T00:39:56.509486Z	    category->{
2025-09-17T00:39:56.509601Z	      name,
2025-09-17T00:39:56.509706Z	      "slug": slug.current
2025-09-17T00:39:56.509889Z	    },
2025-09-17T00:39:56.510008Z	    pricing{
2025-09-17T00:39:56.510145Z	      currency,
2025-09-17T00:39:56.510246Z	      tiers[]{
2025-09-17T00:39:56.510357Z	        quantity,
2025-09-17T00:39:56.510475Z	        price,
2025-09-17T00:39:56.510548Z	        unit
2025-09-17T00:39:56.510655Z	      },
2025-09-17T00:39:56.510764Z	      moq,
2025-09-17T00:39:56.510884Z	      leadTime,
2025-09-17T00:39:56.510991Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.511125Z	      "price": tiers[0].price,
2025-09-17T00:39:56.511229Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.511347Z	    },
2025-09-17T00:39:56.51145Z	    inventory{
2025-09-17T00:39:56.511549Z	      quantity,
2025-09-17T00:39:56.511647Z	      status,
2025-09-17T00:39:56.511762Z	      warehouse,
2025-09-17T00:39:56.51185Z	      lastUpdated,
2025-09-17T00:39:56.51194Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.512014Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.512082Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.512146Z	    },
2025-09-17T00:39:56.512215Z	    isActive,
2025-09-17T00:39:56.512601Z	    isFeatured,
2025-09-17T00:39:56.512771Z	    isNew,
2025-09-17T00:39:56.512853Z	    _createdAt,
2025-09-17T00:39:56.512921Z	    _updatedAt
2025-09-17T00:39:56.513111Z	  
2025-09-17T00:39:56.513227Z	      },
2025-09-17T00:39:56.513351Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-17T00:39:56.513474Z	    }
2025-09-17T00:39:56.513571Z	  
2025-09-17T00:39:56.513665Z	Query parameters: {
2025-09-17T00:39:56.513965Z	  limit: 8,
2025-09-17T00:39:56.514054Z	  offset: 0,
2025-09-17T00:39:56.514123Z	  category: undefined,
2025-09-17T00:39:56.514413Z	  brand: 'sanrex',
2025-09-17T00:39:56.514522Z	  featured: undefined
2025-09-17T00:39:56.514705Z	}
2025-09-17T00:39:56.514842Z	Fetching solutions with query: 
2025-09-17T00:39:56.515097Z	    {
2025-09-17T00:39:56.515192Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.515286Z	        
2025-09-17T00:39:56.515553Z	    _id,
2025-09-17T00:39:56.515643Z	    title,
2025-09-17T00:39:56.515749Z	    "slug": slug.current,
2025-09-17T00:39:56.515851Z	    summary,
2025-09-17T00:39:56.51598Z	    description,
2025-09-17T00:39:56.516224Z	    coverImage,
2025-09-17T00:39:56.516384Z	    primaryBrand->{
2025-09-17T00:39:56.516554Z	      _id,
2025-09-17T00:39:56.516644Z	      name,
2025-09-17T00:39:56.516763Z	      "slug": slug.current,
2025-09-17T00:39:56.516874Z	      logo
2025-09-17T00:39:56.517013Z	    },
2025-09-17T00:39:56.517118Z	    relatedBrands[]->{
2025-09-17T00:39:56.517219Z	      _id,
2025-09-17T00:39:56.51738Z	      name,
2025-09-17T00:39:56.517511Z	      "slug": slug.current,
2025-09-17T00:39:56.517657Z	      logo
2025-09-17T00:39:56.517734Z	    },
2025-09-17T00:39:56.517789Z	    targetMarket,
2025-09-17T00:39:56.517996Z	    complexity,
2025-09-17T00:39:56.518102Z	    publishedAt,
2025-09-17T00:39:56.518249Z	    isPublished,
2025-09-17T00:39:56.518421Z	    isFeatured,
2025-09-17T00:39:56.518563Z	    viewCount,
2025-09-17T00:39:56.518675Z	    _createdAt,
2025-09-17T00:39:56.518822Z	    _updatedAt
2025-09-17T00:39:56.518955Z	  
2025-09-17T00:39:56.519127Z	      },
2025-09-17T00:39:56.519233Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-17T00:39:56.519405Z	    }
2025-09-17T00:39:56.519494Z	  
2025-09-17T00:39:56.519919Z	Query parameters: {
2025-09-17T00:39:56.520052Z	  limit: 4,
2025-09-17T00:39:56.520361Z	  offset: 0,
2025-09-17T00:39:56.520506Z	  targetMarket: undefined,
2025-09-17T00:39:56.520616Z	  brand: 'sanrex',
2025-09-17T00:39:56.521236Z	  featured: undefined
2025-09-17T00:39:56.521797Z	}
2025-09-17T00:39:56.522034Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-17T00:39:56.522154Z	Fetching products with query: 
2025-09-17T00:39:56.522253Z	    {
2025-09-17T00:39:56.522371Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.522452Z	        
2025-09-17T00:39:56.522514Z	    _id,
2025-09-17T00:39:56.522591Z	    _type,
2025-09-17T00:39:56.522662Z	    partNumber,
2025-09-17T00:39:56.52272Z	    "slug": slug.current,
2025-09-17T00:39:56.522781Z	    title,
2025-09-17T00:39:56.522836Z	    shortDescription,
2025-09-17T00:39:56.522893Z	    image,
2025-09-17T00:39:56.522955Z	    brand->{
2025-09-17T00:39:56.523609Z	      name,
2025-09-17T00:39:56.523837Z	      "slug": slug.current,
2025-09-17T00:39:56.524079Z	      logo
2025-09-17T00:39:56.524201Z	    },
2025-09-17T00:39:56.524317Z	    category->{
2025-09-17T00:39:56.524424Z	      name,
2025-09-17T00:39:56.524528Z	      "slug": slug.current
2025-09-17T00:39:56.524638Z	    },
2025-09-17T00:39:56.524735Z	    pricing{
2025-09-17T00:39:56.524823Z	      currency,
2025-09-17T00:39:56.524918Z	      tiers[]{
2025-09-17T00:39:56.525016Z	        quantity,
2025-09-17T00:39:56.525109Z	        price,
2025-09-17T00:39:56.525197Z	        unit
2025-09-17T00:39:56.525317Z	      },
2025-09-17T00:39:56.52542Z	      moq,
2025-09-17T00:39:56.525516Z	      leadTime,
2025-09-17T00:39:56.52562Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.525724Z	      "price": tiers[0].price,
2025-09-17T00:39:56.525823Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.525922Z	    },
2025-09-17T00:39:56.526284Z	    inventory{
2025-09-17T00:39:56.526397Z	      quantity,
2025-09-17T00:39:56.526531Z	      status,
2025-09-17T00:39:56.52664Z	      warehouse,
2025-09-17T00:39:56.526731Z	      lastUpdated,
2025-09-17T00:39:56.526821Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.526936Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.527034Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.527139Z	    },
2025-09-17T00:39:56.527264Z	    isActive,
2025-09-17T00:39:56.527379Z	    isFeatured,
2025-09-17T00:39:56.527473Z	    isNew,
2025-09-17T00:39:56.52757Z	    _createdAt,
2025-09-17T00:39:56.527666Z	    _updatedAt
2025-09-17T00:39:56.527763Z	  
2025-09-17T00:39:56.527854Z	      },
2025-09-17T00:39:56.52796Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-17T00:39:56.52806Z	    }
2025-09-17T00:39:56.528148Z	  
2025-09-17T00:39:56.528243Z	Query parameters: {
2025-09-17T00:39:56.528614Z	  limit: 8,
2025-09-17T00:39:56.528883Z	  offset: 0,
2025-09-17T00:39:56.529024Z	  category: undefined,
2025-09-17T00:39:56.529137Z	  brand: 'sanrex',
2025-09-17T00:39:56.529248Z	  featured: undefined
2025-09-17T00:39:56.529383Z	}
2025-09-17T00:39:56.529486Z	Fetching solutions with query: 
2025-09-17T00:39:56.529592Z	    {
2025-09-17T00:39:56.529689Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.529803Z	        
2025-09-17T00:39:56.5299Z	    _id,
2025-09-17T00:39:56.530006Z	    title,
2025-09-17T00:39:56.530114Z	    "slug": slug.current,
2025-09-17T00:39:56.530364Z	    summary,
2025-09-17T00:39:56.530514Z	    description,
2025-09-17T00:39:56.530634Z	    coverImage,
2025-09-17T00:39:56.530782Z	    primaryBrand->{
2025-09-17T00:39:56.530954Z	      _id,
2025-09-17T00:39:56.531123Z	      name,
2025-09-17T00:39:56.53165Z	      "slug": slug.current,
2025-09-17T00:39:56.531807Z	      logo
2025-09-17T00:39:56.531944Z	    },
2025-09-17T00:39:56.532061Z	    relatedBrands[]->{
2025-09-17T00:39:56.532195Z	      _id,
2025-09-17T00:39:56.532379Z	      name,
2025-09-17T00:39:56.532542Z	      "slug": slug.current,
2025-09-17T00:39:56.532676Z	      logo
2025-09-17T00:39:56.532818Z	    },
2025-09-17T00:39:56.532967Z	    targetMarket,
2025-09-17T00:39:56.533359Z	    complexity,
2025-09-17T00:39:56.533503Z	    publishedAt,
2025-09-17T00:39:56.533624Z	    isPublished,
2025-09-17T00:39:56.533727Z	    isFeatured,
2025-09-17T00:39:56.533836Z	    viewCount,
2025-09-17T00:39:56.533932Z	    _createdAt,
2025-09-17T00:39:56.53404Z	    _updatedAt
2025-09-17T00:39:56.534144Z	  
2025-09-17T00:39:56.534246Z	      },
2025-09-17T00:39:56.534378Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-17T00:39:56.534475Z	    }
2025-09-17T00:39:56.534576Z	  
2025-09-17T00:39:56.534679Z	Query parameters: {
2025-09-17T00:39:56.534782Z	  limit: 4,
2025-09-17T00:39:56.534874Z	  offset: 0,
2025-09-17T00:39:56.534965Z	  targetMarket: undefined,
2025-09-17T00:39:56.535067Z	  brand: 'sanrex',
2025-09-17T00:39:56.535158Z	  featured: undefined
2025-09-17T00:39:56.535281Z	}
2025-09-17T00:39:56.535387Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.535496Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.535609Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.535703Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.53581Z	✅ [getBrandData] Found brand: Sanrex
2025-09-17T00:39:56.535912Z	✅ [getBrandData] Found brand: Sanrex
2025-09-17T00:39:56.536066Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-17T00:39:56.536174Z	Fetching products with query: 
2025-09-17T00:39:56.536283Z	    {
2025-09-17T00:39:56.536389Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.53651Z	        
2025-09-17T00:39:56.536614Z	    _id,
2025-09-17T00:39:56.536711Z	    _type,
2025-09-17T00:39:56.536802Z	    partNumber,
2025-09-17T00:39:56.536884Z	    "slug": slug.current,
2025-09-17T00:39:56.537045Z	    title,
2025-09-17T00:39:56.537168Z	    shortDescription,
2025-09-17T00:39:56.537282Z	    image,
2025-09-17T00:39:56.537385Z	    brand->{
2025-09-17T00:39:56.537475Z	      name,
2025-09-17T00:39:56.537582Z	      "slug": slug.current,
2025-09-17T00:39:56.537676Z	      logo
2025-09-17T00:39:56.537794Z	    },
2025-09-17T00:39:56.537895Z	    category->{
2025-09-17T00:39:56.537992Z	      name,
2025-09-17T00:39:56.538103Z	      "slug": slug.current
2025-09-17T00:39:56.538201Z	    },
2025-09-17T00:39:56.538502Z	    pricing{
2025-09-17T00:39:56.538669Z	      currency,
2025-09-17T00:39:56.538808Z	      tiers[]{
2025-09-17T00:39:56.538922Z	        quantity,
2025-09-17T00:39:56.53903Z	        price,
2025-09-17T00:39:56.539132Z	        unit
2025-09-17T00:39:56.539224Z	      },
2025-09-17T00:39:56.539343Z	      moq,
2025-09-17T00:39:56.539439Z	      leadTime,
2025-09-17T00:39:56.539531Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.539623Z	      "price": tiers[0].price,
2025-09-17T00:39:56.539711Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.539822Z	    },
2025-09-17T00:39:56.539921Z	    inventory{
2025-09-17T00:39:56.540026Z	      quantity,
2025-09-17T00:39:56.540129Z	      status,
2025-09-17T00:39:56.54022Z	      warehouse,
2025-09-17T00:39:56.540357Z	      lastUpdated,
2025-09-17T00:39:56.540476Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.540578Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.540674Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.540776Z	    },
2025-09-17T00:39:56.540867Z	    isActive,
2025-09-17T00:39:56.540955Z	    isFeatured,
2025-09-17T00:39:56.541045Z	    isNew,
2025-09-17T00:39:56.541148Z	    _createdAt,
2025-09-17T00:39:56.54124Z	    _updatedAt
2025-09-17T00:39:56.541358Z	  
2025-09-17T00:39:56.541459Z	      },
2025-09-17T00:39:56.541559Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-17T00:39:56.54167Z	    }
2025-09-17T00:39:56.541769Z	  
2025-09-17T00:39:56.541872Z	Query parameters: {
2025-09-17T00:39:56.541964Z	  limit: 8,
2025-09-17T00:39:56.542054Z	  offset: 0,
2025-09-17T00:39:56.542142Z	  category: undefined,
2025-09-17T00:39:56.542246Z	  brand: '英飞凌',
2025-09-17T00:39:56.542367Z	  featured: undefined
2025-09-17T00:39:56.542467Z	}
2025-09-17T00:39:56.542565Z	Fetching solutions with query: 
2025-09-17T00:39:56.542665Z	    {
2025-09-17T00:39:56.542785Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.542897Z	        
2025-09-17T00:39:56.542989Z	    _id,
2025-09-17T00:39:56.543082Z	    title,
2025-09-17T00:39:56.543169Z	    "slug": slug.current,
2025-09-17T00:39:56.543259Z	    summary,
2025-09-17T00:39:56.543582Z	    description,
2025-09-17T00:39:56.543885Z	    coverImage,
2025-09-17T00:39:56.54407Z	    primaryBrand->{
2025-09-17T00:39:56.544234Z	      _id,
2025-09-17T00:39:56.544437Z	      name,
2025-09-17T00:39:56.544601Z	      "slug": slug.current,
2025-09-17T00:39:56.544752Z	      logo
2025-09-17T00:39:56.544916Z	    },
2025-09-17T00:39:56.545054Z	    relatedBrands[]->{
2025-09-17T00:39:56.54523Z	      _id,
2025-09-17T00:39:56.545612Z	      name,
2025-09-17T00:39:56.546043Z	      "slug": slug.current,
2025-09-17T00:39:56.546223Z	      logo
2025-09-17T00:39:56.546357Z	    },
2025-09-17T00:39:56.546459Z	    targetMarket,
2025-09-17T00:39:56.546543Z	    complexity,
2025-09-17T00:39:56.546601Z	    publishedAt,
2025-09-17T00:39:56.546714Z	    isPublished,
2025-09-17T00:39:56.54684Z	    isFeatured,
2025-09-17T00:39:56.546927Z	    viewCount,
2025-09-17T00:39:56.547038Z	    _createdAt,
2025-09-17T00:39:56.547136Z	    _updatedAt
2025-09-17T00:39:56.547232Z	  
2025-09-17T00:39:56.547348Z	      },
2025-09-17T00:39:56.547458Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-17T00:39:56.547564Z	    }
2025-09-17T00:39:56.547664Z	  
2025-09-17T00:39:56.547759Z	Query parameters: {
2025-09-17T00:39:56.547857Z	  limit: 4,
2025-09-17T00:39:56.547953Z	  offset: 0,
2025-09-17T00:39:56.54803Z	  targetMarket: undefined,
2025-09-17T00:39:56.548127Z	  brand: '英飞凌',
2025-09-17T00:39:56.548233Z	  featured: undefined
2025-09-17T00:39:56.548358Z	}
2025-09-17T00:39:56.54843Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-17T00:39:56.548511Z	Fetching products with query: 
2025-09-17T00:39:56.548605Z	    {
2025-09-17T00:39:56.548706Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.548778Z	        
2025-09-17T00:39:56.548867Z	    _id,
2025-09-17T00:39:56.548979Z	    _type,
2025-09-17T00:39:56.549057Z	    partNumber,
2025-09-17T00:39:56.549113Z	    "slug": slug.current,
2025-09-17T00:39:56.549174Z	    title,
2025-09-17T00:39:56.549284Z	    shortDescription,
2025-09-17T00:39:56.54939Z	    image,
2025-09-17T00:39:56.549484Z	    brand->{
2025-09-17T00:39:56.549577Z	      name,
2025-09-17T00:39:56.549673Z	      "slug": slug.current,
2025-09-17T00:39:56.549739Z	      logo
2025-09-17T00:39:56.549818Z	    },
2025-09-17T00:39:56.549911Z	    category->{
2025-09-17T00:39:56.549976Z	      name,
2025-09-17T00:39:56.55006Z	      "slug": slug.current
2025-09-17T00:39:56.550149Z	    },
2025-09-17T00:39:56.550238Z	    pricing{
2025-09-17T00:39:56.550344Z	      currency,
2025-09-17T00:39:56.550469Z	      tiers[]{
2025-09-17T00:39:56.550593Z	        quantity,
2025-09-17T00:39:56.550672Z	        price,
2025-09-17T00:39:56.55073Z	        unit
2025-09-17T00:39:56.550791Z	      },
2025-09-17T00:39:56.550863Z	      moq,
2025-09-17T00:39:56.550959Z	      leadTime,
2025-09-17T00:39:56.551036Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.551094Z	      "price": tiers[0].price,
2025-09-17T00:39:56.551151Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.551207Z	    },
2025-09-17T00:39:56.5513Z	    inventory{
2025-09-17T00:39:56.551367Z	      quantity,
2025-09-17T00:39:56.551423Z	      status,
2025-09-17T00:39:56.551478Z	      warehouse,
2025-09-17T00:39:56.551556Z	      lastUpdated,
2025-09-17T00:39:56.55165Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.551747Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.551852Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.551921Z	    },
2025-09-17T00:39:56.551978Z	    isActive,
2025-09-17T00:39:56.552064Z	    isFeatured,
2025-09-17T00:39:56.552156Z	    isNew,
2025-09-17T00:39:56.552249Z	    _createdAt,
2025-09-17T00:39:56.552368Z	    _updatedAt
2025-09-17T00:39:56.552487Z	  
2025-09-17T00:39:56.552603Z	      },
2025-09-17T00:39:56.552698Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-17T00:39:56.552798Z	    }
2025-09-17T00:39:56.552869Z	  
2025-09-17T00:39:56.552953Z	Query parameters: {
2025-09-17T00:39:56.553053Z	  limit: 8,
2025-09-17T00:39:56.553118Z	  offset: 0,
2025-09-17T00:39:56.553194Z	  category: undefined,
2025-09-17T00:39:56.553303Z	  brand: '英飞凌',
2025-09-17T00:39:56.553403Z	  featured: undefined
2025-09-17T00:39:56.553498Z	}
2025-09-17T00:39:56.553639Z	Fetching solutions with query: 
2025-09-17T00:39:56.553701Z	    {
2025-09-17T00:39:56.553829Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.553967Z	        
2025-09-17T00:39:56.554095Z	    _id,
2025-09-17T00:39:56.554217Z	    title,
2025-09-17T00:39:56.554352Z	    "slug": slug.current,
2025-09-17T00:39:56.554465Z	    summary,
2025-09-17T00:39:56.55456Z	    description,
2025-09-17T00:39:56.554667Z	    coverImage,
2025-09-17T00:39:56.554759Z	    primaryBrand->{
2025-09-17T00:39:56.554873Z	      _id,
2025-09-17T00:39:56.554966Z	      name,
2025-09-17T00:39:56.555075Z	      "slug": slug.current,
2025-09-17T00:39:56.555198Z	      logo
2025-09-17T00:39:56.555316Z	    },
2025-09-17T00:39:56.55541Z	    relatedBrands[]->{
2025-09-17T00:39:56.555502Z	      _id,
2025-09-17T00:39:56.55561Z	      name,
2025-09-17T00:39:56.555703Z	      "slug": slug.current,
2025-09-17T00:39:56.555796Z	      logo
2025-09-17T00:39:56.555898Z	    },
2025-09-17T00:39:56.555999Z	    targetMarket,
2025-09-17T00:39:56.556103Z	    complexity,
2025-09-17T00:39:56.556171Z	    publishedAt,
2025-09-17T00:39:56.556248Z	    isPublished,
2025-09-17T00:39:56.556354Z	    isFeatured,
2025-09-17T00:39:56.556448Z	    viewCount,
2025-09-17T00:39:56.556552Z	    _createdAt,
2025-09-17T00:39:56.556649Z	    _updatedAt
2025-09-17T00:39:56.556739Z	  
2025-09-17T00:39:56.556831Z	      },
2025-09-17T00:39:56.556926Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-17T00:39:56.557029Z	    }
2025-09-17T00:39:56.557134Z	  
2025-09-17T00:39:56.557228Z	Query parameters: {
2025-09-17T00:39:56.557338Z	  limit: 4,
2025-09-17T00:39:56.557425Z	  offset: 0,
2025-09-17T00:39:56.557521Z	  targetMarket: undefined,
2025-09-17T00:39:56.557615Z	  brand: '英飞凌',
2025-09-17T00:39:56.55771Z	  featured: undefined
2025-09-17T00:39:56.557798Z	}
2025-09-17T00:39:56.557883Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.557982Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.558094Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.558191Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.558292Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-17T00:39:56.558389Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-17T00:39:56.558484Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-17T00:39:56.558573Z	Fetching products with query: 
2025-09-17T00:39:56.558663Z	    {
2025-09-17T00:39:56.55876Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.558871Z	        
2025-09-17T00:39:56.558966Z	    _id,
2025-09-17T00:39:56.559079Z	    _type,
2025-09-17T00:39:56.559175Z	    partNumber,
2025-09-17T00:39:56.559298Z	    "slug": slug.current,
2025-09-17T00:39:56.559377Z	    title,
2025-09-17T00:39:56.559601Z	    shortDescription,
2025-09-17T00:39:56.559809Z	    image,
2025-09-17T00:39:56.559928Z	    brand->{
2025-09-17T00:39:56.560039Z	      name,
2025-09-17T00:39:56.560142Z	      "slug": slug.current,
2025-09-17T00:39:56.560235Z	      logo
2025-09-17T00:39:56.560356Z	    },
2025-09-17T00:39:56.560454Z	    category->{
2025-09-17T00:39:56.560544Z	      name,
2025-09-17T00:39:56.560632Z	      "slug": slug.current
2025-09-17T00:39:56.56072Z	    },
2025-09-17T00:39:56.560824Z	    pricing{
2025-09-17T00:39:56.560931Z	      currency,
2025-09-17T00:39:56.561028Z	      tiers[]{
2025-09-17T00:39:56.561118Z	        quantity,
2025-09-17T00:39:56.561215Z	        price,
2025-09-17T00:39:56.561331Z	        unit
2025-09-17T00:39:56.561423Z	      },
2025-09-17T00:39:56.561509Z	      moq,
2025-09-17T00:39:56.561599Z	      leadTime,
2025-09-17T00:39:56.561696Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.56181Z	      "price": tiers[0].price,
2025-09-17T00:39:56.561908Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.562008Z	    },
2025-09-17T00:39:56.562118Z	    inventory{
2025-09-17T00:39:56.562224Z	      quantity,
2025-09-17T00:39:56.562344Z	      status,
2025-09-17T00:39:56.562439Z	      warehouse,
2025-09-17T00:39:56.562539Z	      lastUpdated,
2025-09-17T00:39:56.562628Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.56272Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.562833Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.56293Z	    },
2025-09-17T00:39:56.56302Z	    isActive,
2025-09-17T00:39:56.563109Z	    isFeatured,
2025-09-17T00:39:56.563197Z	    isNew,
2025-09-17T00:39:56.563306Z	    _createdAt,
2025-09-17T00:39:56.563405Z	    _updatedAt
2025-09-17T00:39:56.563495Z	  
2025-09-17T00:39:56.563584Z	      },
2025-09-17T00:39:56.563683Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-17T00:39:56.563783Z	    }
2025-09-17T00:39:56.56387Z	  
2025-09-17T00:39:56.563959Z	Query parameters: {
2025-09-17T00:39:56.564063Z	  limit: 8,
2025-09-17T00:39:56.564167Z	  offset: 0,
2025-09-17T00:39:56.564253Z	  category: undefined,
2025-09-17T00:39:56.564362Z	  brand: 'littelfuse',
2025-09-17T00:39:56.564459Z	  featured: undefined
2025-09-17T00:39:56.564568Z	}
2025-09-17T00:39:56.564654Z	Fetching solutions with query: 
2025-09-17T00:39:56.564747Z	    {
2025-09-17T00:39:56.564832Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.564921Z	        
2025-09-17T00:39:56.565005Z	    _id,
2025-09-17T00:39:56.565098Z	    title,
2025-09-17T00:39:56.565441Z	    "slug": slug.current,
2025-09-17T00:39:56.565779Z	    summary,
2025-09-17T00:39:56.565899Z	    description,
2025-09-17T00:39:56.565997Z	    coverImage,
2025-09-17T00:39:56.566068Z	    primaryBrand->{
2025-09-17T00:39:56.566135Z	      _id,
2025-09-17T00:39:56.56619Z	      name,
2025-09-17T00:39:56.566245Z	      "slug": slug.current,
2025-09-17T00:39:56.566352Z	      logo
2025-09-17T00:39:56.566429Z	    },
2025-09-17T00:39:56.566492Z	    relatedBrands[]->{
2025-09-17T00:39:56.566559Z	      _id,
2025-09-17T00:39:56.566618Z	      name,
2025-09-17T00:39:56.566679Z	      "slug": slug.current,
2025-09-17T00:39:56.566736Z	      logo
2025-09-17T00:39:56.566791Z	    },
2025-09-17T00:39:56.566852Z	    targetMarket,
2025-09-17T00:39:56.566909Z	    complexity,
2025-09-17T00:39:56.566963Z	    publishedAt,
2025-09-17T00:39:56.567016Z	    isPublished,
2025-09-17T00:39:56.56707Z	    isFeatured,
2025-09-17T00:39:56.567124Z	    viewCount,
2025-09-17T00:39:56.567177Z	    _createdAt,
2025-09-17T00:39:56.567228Z	    _updatedAt
2025-09-17T00:39:56.567307Z	  
2025-09-17T00:39:56.567371Z	      },
2025-09-17T00:39:56.567586Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-17T00:39:56.567731Z	    }
2025-09-17T00:39:56.567819Z	  
2025-09-17T00:39:56.567886Z	Query parameters: {
2025-09-17T00:39:56.567954Z	  limit: 4,
2025-09-17T00:39:56.568014Z	  offset: 0,
2025-09-17T00:39:56.568078Z	  targetMarket: undefined,
2025-09-17T00:39:56.568136Z	  brand: 'littelfuse',
2025-09-17T00:39:56.568191Z	  featured: undefined
2025-09-17T00:39:56.56825Z	}
2025-09-17T00:39:56.568352Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-17T00:39:56.568454Z	Fetching products with query: 
2025-09-17T00:39:56.568555Z	    {
2025-09-17T00:39:56.56867Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.568767Z	        
2025-09-17T00:39:56.568861Z	    _id,
2025-09-17T00:39:56.568959Z	    _type,
2025-09-17T00:39:56.569052Z	    partNumber,
2025-09-17T00:39:56.569143Z	    "slug": slug.current,
2025-09-17T00:39:56.569223Z	    title,
2025-09-17T00:39:56.569337Z	    shortDescription,
2025-09-17T00:39:56.569438Z	    image,
2025-09-17T00:39:56.569514Z	    brand->{
2025-09-17T00:39:56.569569Z	      name,
2025-09-17T00:39:56.569625Z	      "slug": slug.current,
2025-09-17T00:39:56.569693Z	      logo
2025-09-17T00:39:56.569769Z	    },
2025-09-17T00:39:56.569833Z	    category->{
2025-09-17T00:39:56.569895Z	      name,
2025-09-17T00:39:56.569967Z	      "slug": slug.current
2025-09-17T00:39:56.570025Z	    },
2025-09-17T00:39:56.570081Z	    pricing{
2025-09-17T00:39:56.570142Z	      currency,
2025-09-17T00:39:56.570203Z	      tiers[]{
2025-09-17T00:39:56.570261Z	        quantity,
2025-09-17T00:39:56.570351Z	        price,
2025-09-17T00:39:56.570423Z	        unit
2025-09-17T00:39:56.57049Z	      },
2025-09-17T00:39:56.570545Z	      moq,
2025-09-17T00:39:56.570608Z	      leadTime,
2025-09-17T00:39:56.57067Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.57074Z	      "price": tiers[0].price,
2025-09-17T00:39:56.5708Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.570856Z	    },
2025-09-17T00:39:56.57092Z	    inventory{
2025-09-17T00:39:56.570982Z	      quantity,
2025-09-17T00:39:56.571038Z	      status,
2025-09-17T00:39:56.571091Z	      warehouse,
2025-09-17T00:39:56.571202Z	      lastUpdated,
2025-09-17T00:39:56.571279Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.571342Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.571404Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.571458Z	    },
2025-09-17T00:39:56.571525Z	    isActive,
2025-09-17T00:39:56.571583Z	    isFeatured,
2025-09-17T00:39:56.571637Z	    isNew,
2025-09-17T00:39:56.57171Z	    _createdAt,
2025-09-17T00:39:56.571767Z	    _updatedAt
2025-09-17T00:39:56.571825Z	  
2025-09-17T00:39:56.571884Z	      },
2025-09-17T00:39:56.571943Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-17T00:39:56.572Z	    }
2025-09-17T00:39:56.572063Z	  
2025-09-17T00:39:56.572118Z	Query parameters: {
2025-09-17T00:39:56.572174Z	  limit: 8,
2025-09-17T00:39:56.572228Z	  offset: 0,
2025-09-17T00:39:56.572301Z	  category: undefined,
2025-09-17T00:39:56.572358Z	  brand: 'littelfuse',
2025-09-17T00:39:56.572416Z	  featured: undefined
2025-09-17T00:39:56.572473Z	}
2025-09-17T00:39:56.572545Z	Fetching solutions with query: 
2025-09-17T00:39:56.572609Z	    {
2025-09-17T00:39:56.572671Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.572734Z	        
2025-09-17T00:39:56.572797Z	    _id,
2025-09-17T00:39:56.572857Z	    title,
2025-09-17T00:39:56.572915Z	    "slug": slug.current,
2025-09-17T00:39:56.572986Z	    summary,
2025-09-17T00:39:56.573055Z	    description,
2025-09-17T00:39:56.573116Z	    coverImage,
2025-09-17T00:39:56.57317Z	    primaryBrand->{
2025-09-17T00:39:56.573224Z	      _id,
2025-09-17T00:39:56.57329Z	      name,
2025-09-17T00:39:56.573352Z	      "slug": slug.current,
2025-09-17T00:39:56.573415Z	      logo
2025-09-17T00:39:56.573506Z	    },
2025-09-17T00:39:56.573772Z	    relatedBrands[]->{
2025-09-17T00:39:56.573966Z	      _id,
2025-09-17T00:39:56.574166Z	      name,
2025-09-17T00:39:56.574254Z	      "slug": slug.current,
2025-09-17T00:39:56.574358Z	      logo
2025-09-17T00:39:56.57445Z	    },
2025-09-17T00:39:56.574548Z	    targetMarket,
2025-09-17T00:39:56.57465Z	    complexity,
2025-09-17T00:39:56.574746Z	    publishedAt,
2025-09-17T00:39:56.574845Z	    isPublished,
2025-09-17T00:39:56.574936Z	    isFeatured,
2025-09-17T00:39:56.575067Z	    viewCount,
2025-09-17T00:39:56.575187Z	    _createdAt,
2025-09-17T00:39:56.575383Z	    _updatedAt
2025-09-17T00:39:56.575487Z	  
2025-09-17T00:39:56.575549Z	      },
2025-09-17T00:39:56.575664Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-17T00:39:56.575782Z	    }
2025-09-17T00:39:56.575912Z	  
2025-09-17T00:39:56.576034Z	Query parameters: {
2025-09-17T00:39:56.576132Z	  limit: 4,
2025-09-17T00:39:56.576415Z	  offset: 0,
2025-09-17T00:39:56.576775Z	  targetMarket: undefined,
2025-09-17T00:39:56.576917Z	  brand: 'littelfuse',
2025-09-17T00:39:56.577042Z	  featured: undefined
2025-09-17T00:39:56.57779Z	}
2025-09-17T00:39:56.577976Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.578129Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.578213Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-17T00:39:56.578315Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-17T00:39:56.578417Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.578527Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.57888Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-17T00:39:56.579001Z	Fetching products with query: 
2025-09-17T00:39:56.579102Z	    {
2025-09-17T00:39:56.579226Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.579348Z	        
2025-09-17T00:39:56.579449Z	    _id,
2025-09-17T00:39:56.579543Z	    _type,
2025-09-17T00:39:56.579648Z	    partNumber,
2025-09-17T00:39:56.579779Z	    "slug": slug.current,
2025-09-17T00:39:56.579879Z	    title,
2025-09-17T00:39:56.579984Z	    shortDescription,
2025-09-17T00:39:56.580084Z	    image,
2025-09-17T00:39:56.580183Z	    brand->{
2025-09-17T00:39:56.580305Z	      name,
2025-09-17T00:39:56.580405Z	      "slug": slug.current,
2025-09-17T00:39:56.580503Z	      logo
2025-09-17T00:39:56.580605Z	    },
2025-09-17T00:39:56.580706Z	    category->{
2025-09-17T00:39:56.58083Z	      name,
2025-09-17T00:39:56.58096Z	      "slug": slug.current
2025-09-17T00:39:56.581068Z	    },
2025-09-17T00:39:56.581168Z	    pricing{
2025-09-17T00:39:56.581277Z	      currency,
2025-09-17T00:39:56.58139Z	      tiers[]{
2025-09-17T00:39:56.581487Z	        quantity,
2025-09-17T00:39:56.581597Z	        price,
2025-09-17T00:39:56.581692Z	        unit
2025-09-17T00:39:56.581795Z	      },
2025-09-17T00:39:56.581897Z	      moq,
2025-09-17T00:39:56.582003Z	      leadTime,
2025-09-17T00:39:56.582101Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.58226Z	      "price": tiers[0].price,
2025-09-17T00:39:56.582391Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.58251Z	    },
2025-09-17T00:39:56.582613Z	    inventory{
2025-09-17T00:39:56.582725Z	      quantity,
2025-09-17T00:39:56.582836Z	      status,
2025-09-17T00:39:56.582935Z	      warehouse,
2025-09-17T00:39:56.583033Z	      lastUpdated,
2025-09-17T00:39:56.583143Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.583248Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.583368Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.583478Z	    },
2025-09-17T00:39:56.583582Z	    isActive,
2025-09-17T00:39:56.58368Z	    isFeatured,
2025-09-17T00:39:56.583784Z	    isNew,
2025-09-17T00:39:56.583876Z	    _createdAt,
2025-09-17T00:39:56.583966Z	    _updatedAt
2025-09-17T00:39:56.584065Z	  
2025-09-17T00:39:56.584158Z	      },
2025-09-17T00:39:56.584258Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-17T00:39:56.584521Z	    }
2025-09-17T00:39:56.584641Z	  
2025-09-17T00:39:56.584749Z	Query parameters: {
2025-09-17T00:39:56.584886Z	  limit: 8,
2025-09-17T00:39:56.584995Z	  offset: 0,
2025-09-17T00:39:56.585128Z	  category: undefined,
2025-09-17T00:39:56.585249Z	  brand: '英飞凌',
2025-09-17T00:39:56.585375Z	  featured: undefined
2025-09-17T00:39:56.58548Z	}
2025-09-17T00:39:56.585588Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-17T00:39:56.585715Z	Fetching products with query: 
2025-09-17T00:39:56.585833Z	    {
2025-09-17T00:39:56.585942Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.586055Z	        
2025-09-17T00:39:56.586175Z	    _id,
2025-09-17T00:39:56.586306Z	    _type,
2025-09-17T00:39:56.586424Z	    partNumber,
2025-09-17T00:39:56.586534Z	    "slug": slug.current,
2025-09-17T00:39:56.586641Z	    title,
2025-09-17T00:39:56.586746Z	    shortDescription,
2025-09-17T00:39:56.586861Z	    image,
2025-09-17T00:39:56.586961Z	    brand->{
2025-09-17T00:39:56.58706Z	      name,
2025-09-17T00:39:56.587158Z	      "slug": slug.current,
2025-09-17T00:39:56.587265Z	      logo
2025-09-17T00:39:56.587386Z	    },
2025-09-17T00:39:56.58749Z	    category->{
2025-09-17T00:39:56.587609Z	      name,
2025-09-17T00:39:56.58807Z	      "slug": slug.current
2025-09-17T00:39:56.588203Z	    },
2025-09-17T00:39:56.588327Z	    pricing{
2025-09-17T00:39:56.588435Z	      currency,
2025-09-17T00:39:56.588542Z	      tiers[]{
2025-09-17T00:39:56.588641Z	        quantity,
2025-09-17T00:39:56.58875Z	        price,
2025-09-17T00:39:56.58888Z	        unit
2025-09-17T00:39:56.588994Z	      },
2025-09-17T00:39:56.589097Z	      moq,
2025-09-17T00:39:56.589204Z	      leadTime,
2025-09-17T00:39:56.589324Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.589434Z	      "price": tiers[0].price,
2025-09-17T00:39:56.589538Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.589644Z	    },
2025-09-17T00:39:56.589745Z	    inventory{
2025-09-17T00:39:56.589865Z	      quantity,
2025-09-17T00:39:56.589985Z	      status,
2025-09-17T00:39:56.590228Z	      warehouse,
2025-09-17T00:39:56.590404Z	      lastUpdated,
2025-09-17T00:39:56.590522Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.590686Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.590859Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.591092Z	    },
2025-09-17T00:39:56.591215Z	    isActive,
2025-09-17T00:39:56.596413Z	    isFeatured,
2025-09-17T00:39:56.596674Z	    isNew,
2025-09-17T00:39:56.596853Z	    _createdAt,
2025-09-17T00:39:56.597099Z	    _updatedAt
2025-09-17T00:39:56.597283Z	  
2025-09-17T00:39:56.597525Z	      },
2025-09-17T00:39:56.597697Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-17T00:39:56.598008Z	    }
2025-09-17T00:39:56.598183Z	  
2025-09-17T00:39:56.598446Z	Query parameters: {
2025-09-17T00:39:56.598615Z	  limit: 8,
2025-09-17T00:39:56.598856Z	  offset: 0,
2025-09-17T00:39:56.599026Z	  category: undefined,
2025-09-17T00:39:56.599259Z	  brand: '英飞凌',
2025-09-17T00:39:56.599435Z	  featured: undefined
2025-09-17T00:39:56.59966Z	}
2025-09-17T00:39:56.599835Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:56.600077Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-17T00:39:56.600247Z	Fetching products with query: 
2025-09-17T00:39:56.60049Z	    {
2025-09-17T00:39:56.600664Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.600921Z	        
2025-09-17T00:39:56.601135Z	    _id,
2025-09-17T00:39:56.601365Z	    _type,
2025-09-17T00:39:56.60161Z	    partNumber,
2025-09-17T00:39:56.601855Z	    "slug": slug.current,
2025-09-17T00:39:56.602115Z	    title,
2025-09-17T00:39:56.602228Z	    shortDescription,
2025-09-17T00:39:56.602359Z	    image,
2025-09-17T00:39:56.602473Z	    brand->{
2025-09-17T00:39:56.602574Z	      name,
2025-09-17T00:39:56.602682Z	      "slug": slug.current,
2025-09-17T00:39:56.602785Z	      logo
2025-09-17T00:39:56.602884Z	    },
2025-09-17T00:39:56.603153Z	    category->{
2025-09-17T00:39:56.603323Z	      name,
2025-09-17T00:39:56.603478Z	      "slug": slug.current
2025-09-17T00:39:56.603598Z	    },
2025-09-17T00:39:56.603717Z	    pricing{
2025-09-17T00:39:56.603838Z	      currency,
2025-09-17T00:39:56.603951Z	      tiers[]{
2025-09-17T00:39:56.60406Z	        quantity,
2025-09-17T00:39:56.60416Z	        price,
2025-09-17T00:39:56.604289Z	        unit
2025-09-17T00:39:56.604424Z	      },
2025-09-17T00:39:56.604534Z	      moq,
2025-09-17T00:39:56.604643Z	      leadTime,
2025-09-17T00:39:56.604764Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.604881Z	      "price": tiers[0].price,
2025-09-17T00:39:56.605012Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.605239Z	    },
2025-09-17T00:39:56.605369Z	    inventory{
2025-09-17T00:39:56.605468Z	      quantity,
2025-09-17T00:39:56.605551Z	      status,
2025-09-17T00:39:56.605608Z	      warehouse,
2025-09-17T00:39:56.605671Z	      lastUpdated,
2025-09-17T00:39:56.605728Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.605798Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.605858Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.605926Z	    },
2025-09-17T00:39:56.605984Z	    isActive,
2025-09-17T00:39:56.606042Z	    isFeatured,
2025-09-17T00:39:56.606097Z	    isNew,
2025-09-17T00:39:56.606152Z	    _createdAt,
2025-09-17T00:39:56.606206Z	    _updatedAt
2025-09-17T00:39:56.606259Z	  
2025-09-17T00:39:56.606327Z	      },
2025-09-17T00:39:56.606387Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-17T00:39:56.606455Z	    }
2025-09-17T00:39:56.606511Z	  
2025-09-17T00:39:56.606566Z	Query parameters: {
2025-09-17T00:39:56.606622Z	  limit: 8,
2025-09-17T00:39:56.606679Z	  offset: 0,
2025-09-17T00:39:56.606733Z	  category: undefined,
2025-09-17T00:39:56.606796Z	  brand: 'ixys',
2025-09-17T00:39:56.606852Z	  featured: undefined
2025-09-17T00:39:56.606911Z	}
2025-09-17T00:39:56.606965Z	Fetching solutions with query: 
2025-09-17T00:39:56.607018Z	    {
2025-09-17T00:39:56.607073Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.607133Z	        
2025-09-17T00:39:56.607187Z	    _id,
2025-09-17T00:39:56.607239Z	    title,
2025-09-17T00:39:56.607313Z	    "slug": slug.current,
2025-09-17T00:39:56.607369Z	    summary,
2025-09-17T00:39:56.607424Z	    description,
2025-09-17T00:39:56.607476Z	    coverImage,
2025-09-17T00:39:56.607528Z	    primaryBrand->{
2025-09-17T00:39:56.607581Z	      _id,
2025-09-17T00:39:56.607633Z	      name,
2025-09-17T00:39:56.607696Z	      "slug": slug.current,
2025-09-17T00:39:56.607765Z	      logo
2025-09-17T00:39:56.60782Z	    },
2025-09-17T00:39:56.607873Z	    relatedBrands[]->{
2025-09-17T00:39:56.607933Z	      _id,
2025-09-17T00:39:56.607986Z	      name,
2025-09-17T00:39:56.608043Z	      "slug": slug.current,
2025-09-17T00:39:56.608099Z	      logo
2025-09-17T00:39:56.608151Z	    },
2025-09-17T00:39:56.608203Z	    targetMarket,
2025-09-17T00:39:56.608255Z	    complexity,
2025-09-17T00:39:56.60832Z	    publishedAt,
2025-09-17T00:39:56.608373Z	    isPublished,
2025-09-17T00:39:56.608426Z	    isFeatured,
2025-09-17T00:39:56.60848Z	    viewCount,
2025-09-17T00:39:56.608532Z	    _createdAt,
2025-09-17T00:39:56.608585Z	    _updatedAt
2025-09-17T00:39:56.608636Z	  
2025-09-17T00:39:56.608688Z	      },
2025-09-17T00:39:56.608742Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-17T00:39:56.608795Z	    }
2025-09-17T00:39:56.608852Z	  
2025-09-17T00:39:56.608916Z	Query parameters: {
2025-09-17T00:39:56.60897Z	  limit: 4,
2025-09-17T00:39:56.609023Z	  offset: 0,
2025-09-17T00:39:56.60908Z	  targetMarket: undefined,
2025-09-17T00:39:56.609132Z	  brand: 'ixys',
2025-09-17T00:39:56.609189Z	  featured: undefined
2025-09-17T00:39:56.609242Z	}
2025-09-17T00:39:56.609309Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-17T00:39:56.609365Z	Fetching products with query: 
2025-09-17T00:39:56.60942Z	    {
2025-09-17T00:39:56.609474Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.609532Z	        
2025-09-17T00:39:56.609585Z	    _id,
2025-09-17T00:39:56.609637Z	    _type,
2025-09-17T00:39:56.609689Z	    partNumber,
2025-09-17T00:39:56.609744Z	    "slug": slug.current,
2025-09-17T00:39:56.609795Z	    title,
2025-09-17T00:39:56.609848Z	    shortDescription,
2025-09-17T00:39:56.609905Z	    image,
2025-09-17T00:39:56.609958Z	    brand->{
2025-09-17T00:39:56.610009Z	      name,
2025-09-17T00:39:56.610063Z	      "slug": slug.current,
2025-09-17T00:39:56.610114Z	      logo
2025-09-17T00:39:56.610166Z	    },
2025-09-17T00:39:56.610218Z	    category->{
2025-09-17T00:39:56.61028Z	      name,
2025-09-17T00:39:56.610341Z	      "slug": slug.current
2025-09-17T00:39:56.610455Z	    },
2025-09-17T00:39:56.610514Z	    pricing{
2025-09-17T00:39:56.610566Z	      currency,
2025-09-17T00:39:56.610618Z	      tiers[]{
2025-09-17T00:39:56.61067Z	        quantity,
2025-09-17T00:39:56.610722Z	        price,
2025-09-17T00:39:56.610775Z	        unit
2025-09-17T00:39:56.610827Z	      },
2025-09-17T00:39:56.610878Z	      moq,
2025-09-17T00:39:56.610939Z	      leadTime,
2025-09-17T00:39:56.610993Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.611058Z	      "price": tiers[0].price,
2025-09-17T00:39:56.611117Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.61117Z	    },
2025-09-17T00:39:56.611224Z	    inventory{
2025-09-17T00:39:56.611355Z	      quantity,
2025-09-17T00:39:56.611449Z	      status,
2025-09-17T00:39:56.611509Z	      warehouse,
2025-09-17T00:39:56.611569Z	      lastUpdated,
2025-09-17T00:39:56.611641Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.611709Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.611767Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.611823Z	    },
2025-09-17T00:39:56.611883Z	    isActive,
2025-09-17T00:39:56.611945Z	    isFeatured,
2025-09-17T00:39:56.612011Z	    isNew,
2025-09-17T00:39:56.612068Z	    _createdAt,
2025-09-17T00:39:56.612124Z	    _updatedAt
2025-09-17T00:39:56.612179Z	  
2025-09-17T00:39:56.612233Z	      },
2025-09-17T00:39:56.612313Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-17T00:39:56.612381Z	    }
2025-09-17T00:39:56.612462Z	  
2025-09-17T00:39:56.612567Z	Query parameters: {
2025-09-17T00:39:56.612632Z	  limit: 8,
2025-09-17T00:39:56.612698Z	  offset: 0,
2025-09-17T00:39:56.612756Z	  category: undefined,
2025-09-17T00:39:56.61281Z	  brand: 'cree',
2025-09-17T00:39:56.612864Z	  featured: undefined
2025-09-17T00:39:56.612921Z	}
2025-09-17T00:39:56.612976Z	Fetching solutions with query: 
2025-09-17T00:39:56.613038Z	    {
2025-09-17T00:39:56.613097Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.613162Z	        
2025-09-17T00:39:56.613219Z	    _id,
2025-09-17T00:39:56.613282Z	    title,
2025-09-17T00:39:56.613341Z	    "slug": slug.current,
2025-09-17T00:39:56.61341Z	    summary,
2025-09-17T00:39:56.613475Z	    description,
2025-09-17T00:39:56.613529Z	    coverImage,
2025-09-17T00:39:56.613583Z	    primaryBrand->{
2025-09-17T00:39:56.61364Z	      _id,
2025-09-17T00:39:56.613708Z	      name,
2025-09-17T00:39:56.613771Z	      "slug": slug.current,
2025-09-17T00:39:56.613829Z	      logo
2025-09-17T00:39:56.613891Z	    },
2025-09-17T00:39:56.61395Z	    relatedBrands[]->{
2025-09-17T00:39:56.614018Z	      _id,
2025-09-17T00:39:56.614081Z	      name,
2025-09-17T00:39:56.614142Z	      "slug": slug.current,
2025-09-17T00:39:56.614215Z	      logo
2025-09-17T00:39:56.61428Z	    },
2025-09-17T00:39:56.61434Z	    targetMarket,
2025-09-17T00:39:56.614398Z	    complexity,
2025-09-17T00:39:56.614464Z	    publishedAt,
2025-09-17T00:39:56.614521Z	    isPublished,
2025-09-17T00:39:56.614599Z	    isFeatured,
2025-09-17T00:39:56.61467Z	    viewCount,
2025-09-17T00:39:56.614732Z	    _createdAt,
2025-09-17T00:39:56.614788Z	    _updatedAt
2025-09-17T00:39:56.614849Z	  
2025-09-17T00:39:56.614904Z	      },
2025-09-17T00:39:56.614965Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-17T00:39:56.615022Z	    }
2025-09-17T00:39:56.615077Z	  
2025-09-17T00:39:56.615155Z	Query parameters: {
2025-09-17T00:39:56.615212Z	  limit: 4,
2025-09-17T00:39:56.615275Z	  offset: 0,
2025-09-17T00:39:56.615336Z	  targetMarket: undefined,
2025-09-17T00:39:56.615448Z	  brand: 'cree',
2025-09-17T00:39:56.615531Z	  featured: undefined
2025-09-17T00:39:56.615588Z	}
2025-09-17T00:39:56.615641Z	Solutions fetch result: {
2025-09-17T00:39:56.615706Z	  totalSolutions: 6,
2025-09-17T00:39:56.615763Z	  fetchedSolutions: 4,
2025-09-17T00:39:56.615827Z	  firstSolution: {
2025-09-17T00:39:56.615889Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-17T00:39:56.615961Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-17T00:39:56.616017Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-17T00:39:56.616071Z	    complexity: 'medium',
2025-09-17T00:39:56.616126Z	    coverImage: null,
2025-09-17T00:39:56.616181Z	    description: [ [Object] ],
2025-09-17T00:39:56.616236Z	    isFeatured: false,
2025-09-17T00:39:56.616394Z	    isPublished: true,
2025-09-17T00:39:56.616495Z	    primaryBrand: {
2025-09-17T00:39:56.616557Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:56.616624Z	      logo: null,
2025-09-17T00:39:56.61669Z	      name: 'CREE',
2025-09-17T00:39:56.616755Z	      slug: 'cree'
2025-09-17T00:39:56.616811Z	    },
2025-09-17T00:39:56.616868Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-17T00:39:56.616936Z	    relatedBrands: null,
2025-09-17T00:39:56.616993Z	    slug: '11111',
2025-09-17T00:39:56.617101Z	    summary: '11111',
2025-09-17T00:39:56.617378Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:56.617504Z	    title: '11111',
2025-09-17T00:39:56.617681Z	    viewCount: 0
2025-09-17T00:39:56.617753Z	  }
2025-09-17T00:39:56.619244Z	}
2025-09-17T00:39:56.619372Z	Solutions fetch result: {
2025-09-17T00:39:56.619444Z	  totalSolutions: 6,
2025-09-17T00:39:56.619501Z	  fetchedSolutions: 4,
2025-09-17T00:39:56.619554Z	  firstSolution: {
2025-09-17T00:39:56.619607Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-17T00:39:56.61966Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-17T00:39:56.619719Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-17T00:39:56.619774Z	    complexity: 'medium',
2025-09-17T00:39:56.619844Z	    coverImage: null,
2025-09-17T00:39:56.619902Z	    description: [ [Object] ],
2025-09-17T00:39:56.619963Z	    isFeatured: false,
2025-09-17T00:39:56.620017Z	    isPublished: true,
2025-09-17T00:39:56.620084Z	    primaryBrand: {
2025-09-17T00:39:56.62014Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:56.620193Z	      logo: null,
2025-09-17T00:39:56.620251Z	      name: 'CREE',
2025-09-17T00:39:56.62034Z	      slug: 'cree'
2025-09-17T00:39:56.620398Z	    },
2025-09-17T00:39:56.620454Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-17T00:39:56.620508Z	    relatedBrands: null,
2025-09-17T00:39:56.620561Z	    slug: '11111',
2025-09-17T00:39:56.620616Z	    summary: '11111',
2025-09-17T00:39:56.620671Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:56.620731Z	    title: '11111',
2025-09-17T00:39:56.620785Z	    viewCount: 0
2025-09-17T00:39:56.620838Z	  }
2025-09-17T00:39:56.62089Z	}
2025-09-17T00:39:56.62095Z	Products fetch result: {
2025-09-17T00:39:56.621005Z	  totalProducts: 4,
2025-09-17T00:39:56.621059Z	  fetchedProducts: 4,
2025-09-17T00:39:56.621114Z	  firstProduct: {
2025-09-17T00:39:56.621166Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-17T00:39:56.621219Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-17T00:39:56.621282Z	    _type: 'product',
2025-09-17T00:39:56.621346Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-17T00:39:56.621402Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-17T00:39:56.621459Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:56.621515Z	    image: null,
2025-09-17T00:39:56.621568Z	    inventory: {
2025-09-17T00:39:56.621635Z	      inStock: true,
2025-09-17T00:39:56.621726Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-17T00:39:56.621807Z	      quantity: 0,
2025-09-17T00:39:56.621892Z	      status: 'in_stock',
2025-09-17T00:39:56.621981Z	      warehouse: null
2025-09-17T00:39:56.622057Z	    },
2025-09-17T00:39:56.622139Z	    isActive: true,
2025-09-17T00:39:56.622219Z	    isFeatured: false,
2025-09-17T00:39:56.62233Z	    isNew: false,
2025-09-17T00:39:56.622421Z	    partNumber: '11111',
2025-09-17T00:39:56.622508Z	    pricing: {
2025-09-17T00:39:56.622596Z	      currency: 'CNY',
2025-09-17T00:39:56.622692Z	      leadTime: null,
2025-09-17T00:39:56.622787Z	      moq: null,
2025-09-17T00:39:56.622897Z	      price: null,
2025-09-17T00:39:56.623012Z	      tiers: null
2025-09-17T00:39:56.623111Z	    },
2025-09-17T00:39:56.62321Z	    shortDescription: '11111',
2025-09-17T00:39:56.623304Z	    slug: 'sic mosfet',
2025-09-17T00:39:56.623363Z	    title: '111111'
2025-09-17T00:39:56.623418Z	  }
2025-09-17T00:39:56.623473Z	}
2025-09-17T00:39:56.623526Z	Products fetch result: {
2025-09-17T00:39:56.623579Z	  totalProducts: 4,
2025-09-17T00:39:56.623632Z	  fetchedProducts: 4,
2025-09-17T00:39:56.623688Z	  firstProduct: {
2025-09-17T00:39:56.623741Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-17T00:39:56.623795Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-17T00:39:56.623855Z	    _type: 'product',
2025-09-17T00:39:56.623926Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-17T00:39:56.623984Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-17T00:39:56.624044Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:56.624105Z	    image: null,
2025-09-17T00:39:56.624164Z	    inventory: {
2025-09-17T00:39:56.624218Z	      inStock: true,
2025-09-17T00:39:56.624281Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-17T00:39:56.624346Z	      quantity: 0,
2025-09-17T00:39:56.624401Z	      status: 'in_stock',
2025-09-17T00:39:56.624454Z	      warehouse: null
2025-09-17T00:39:56.624508Z	    },
2025-09-17T00:39:56.624561Z	    isActive: true,
2025-09-17T00:39:56.624613Z	    isFeatured: false,
2025-09-17T00:39:56.624668Z	    isNew: false,
2025-09-17T00:39:56.624722Z	    partNumber: '11111',
2025-09-17T00:39:56.624774Z	    pricing: {
2025-09-17T00:39:56.624829Z	      currency: 'CNY',
2025-09-17T00:39:56.624881Z	      leadTime: null,
2025-09-17T00:39:56.62494Z	      moq: null,
2025-09-17T00:39:56.624995Z	      price: null,
2025-09-17T00:39:56.625048Z	      tiers: null
2025-09-17T00:39:56.6251Z	    },
2025-09-17T00:39:56.625154Z	    shortDescription: '11111',
2025-09-17T00:39:56.625212Z	    slug: 'sic mosfet',
2025-09-17T00:39:56.625273Z	    title: '111111'
2025-09-17T00:39:56.625339Z	  }
2025-09-17T00:39:56.625395Z	}
2025-09-17T00:39:56.625453Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-17T00:39:56.625518Z	Fetching products with query: 
2025-09-17T00:39:56.625571Z	    {
2025-09-17T00:39:56.625624Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.625678Z	        
2025-09-17T00:39:56.625731Z	    _id,
2025-09-17T00:39:56.625782Z	    _type,
2025-09-17T00:39:56.625836Z	    partNumber,
2025-09-17T00:39:56.62589Z	    "slug": slug.current,
2025-09-17T00:39:56.62595Z	    title,
2025-09-17T00:39:56.626005Z	    shortDescription,
2025-09-17T00:39:56.626058Z	    image,
2025-09-17T00:39:56.626112Z	    brand->{
2025-09-17T00:39:56.626166Z	      name,
2025-09-17T00:39:56.626219Z	      "slug": slug.current,
2025-09-17T00:39:56.626377Z	      logo
2025-09-17T00:39:56.626498Z	    },
2025-09-17T00:39:56.626601Z	    category->{
2025-09-17T00:39:56.626707Z	      name,
2025-09-17T00:39:56.626805Z	      "slug": slug.current
2025-09-17T00:39:56.626897Z	    },
2025-09-17T00:39:56.626996Z	    pricing{
2025-09-17T00:39:56.627088Z	      currency,
2025-09-17T00:39:56.627179Z	      tiers[]{
2025-09-17T00:39:56.628937Z	        quantity,
2025-09-17T00:39:56.629085Z	        price,
2025-09-17T00:39:56.629148Z	        unit
2025-09-17T00:39:56.629204Z	      },
2025-09-17T00:39:56.629259Z	      moq,
2025-09-17T00:39:56.629328Z	      leadTime,
2025-09-17T00:39:56.629403Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.629466Z	      "price": tiers[0].price,
2025-09-17T00:39:56.629522Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.629576Z	    },
2025-09-17T00:39:56.629629Z	    inventory{
2025-09-17T00:39:56.62969Z	      quantity,
2025-09-17T00:39:56.629744Z	      status,
2025-09-17T00:39:56.629798Z	      warehouse,
2025-09-17T00:39:56.629851Z	      lastUpdated,
2025-09-17T00:39:56.629912Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.629974Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.630029Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.630081Z	    },
2025-09-17T00:39:56.630135Z	    isActive,
2025-09-17T00:39:56.630194Z	    isFeatured,
2025-09-17T00:39:56.630249Z	    isNew,
2025-09-17T00:39:56.630375Z	    _createdAt,
2025-09-17T00:39:56.630487Z	    _updatedAt
2025-09-17T00:39:56.630582Z	  
2025-09-17T00:39:56.630673Z	      },
2025-09-17T00:39:56.630777Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-17T00:39:56.630868Z	    }
2025-09-17T00:39:56.630964Z	  
2025-09-17T00:39:56.631053Z	Query parameters: {
2025-09-17T00:39:56.631144Z	  limit: 8,
2025-09-17T00:39:56.631235Z	  offset: 0,
2025-09-17T00:39:56.631353Z	  category: undefined,
2025-09-17T00:39:56.631444Z	  brand: 'Electronicon',
2025-09-17T00:39:56.631532Z	  featured: undefined
2025-09-17T00:39:56.631621Z	}
2025-09-17T00:39:56.63173Z	Fetching solutions with query: 
2025-09-17T00:39:56.63183Z	    {
2025-09-17T00:39:56.631938Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.632177Z	        
2025-09-17T00:39:56.632418Z	    _id,
2025-09-17T00:39:56.632537Z	    title,
2025-09-17T00:39:56.632648Z	    "slug": slug.current,
2025-09-17T00:39:56.632753Z	    summary,
2025-09-17T00:39:56.632856Z	    description,
2025-09-17T00:39:56.632958Z	    coverImage,
2025-09-17T00:39:56.633064Z	    primaryBrand->{
2025-09-17T00:39:56.633157Z	      _id,
2025-09-17T00:39:56.633281Z	      name,
2025-09-17T00:39:56.633382Z	      "slug": slug.current,
2025-09-17T00:39:56.633477Z	      logo
2025-09-17T00:39:56.633583Z	    },
2025-09-17T00:39:56.633684Z	    relatedBrands[]->{
2025-09-17T00:39:56.63378Z	      _id,
2025-09-17T00:39:56.633885Z	      name,
2025-09-17T00:39:56.634004Z	      "slug": slug.current,
2025-09-17T00:39:56.634107Z	      logo
2025-09-17T00:39:56.6342Z	    },
2025-09-17T00:39:56.634319Z	    targetMarket,
2025-09-17T00:39:56.634435Z	    complexity,
2025-09-17T00:39:56.634546Z	    publishedAt,
2025-09-17T00:39:56.634655Z	    isPublished,
2025-09-17T00:39:56.634748Z	    isFeatured,
2025-09-17T00:39:56.634848Z	    viewCount,
2025-09-17T00:39:56.634952Z	    _createdAt,
2025-09-17T00:39:56.635054Z	    _updatedAt
2025-09-17T00:39:56.635154Z	  
2025-09-17T00:39:56.635261Z	      },
2025-09-17T00:39:56.635383Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-17T00:39:56.635494Z	    }
2025-09-17T00:39:56.635738Z	  
2025-09-17T00:39:56.635884Z	Query parameters: {
2025-09-17T00:39:56.636017Z	  limit: 4,
2025-09-17T00:39:56.636151Z	  offset: 0,
2025-09-17T00:39:56.636281Z	  targetMarket: undefined,
2025-09-17T00:39:56.636426Z	  brand: 'Electronicon',
2025-09-17T00:39:56.636653Z	  featured: undefined
2025-09-17T00:39:56.636819Z	}
2025-09-17T00:39:56.636936Z	✅ [getBrandData] Found brand: Electronicon
2025-09-17T00:39:56.637043Z	Products fetch result: {
2025-09-17T00:39:56.637138Z	  totalProducts: 2,
2025-09-17T00:39:56.637257Z	  fetchedProducts: 2,
2025-09-17T00:39:56.637381Z	  firstProduct: {
2025-09-17T00:39:56.637483Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-17T00:39:56.637584Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-17T00:39:56.637682Z	    _type: 'product',
2025-09-17T00:39:56.637777Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-17T00:39:56.63788Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-17T00:39:56.638001Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-17T00:39:56.638114Z	    image: null,
2025-09-17T00:39:56.638215Z	    inventory: {
2025-09-17T00:39:56.638332Z	      inStock: true,
2025-09-17T00:39:56.638441Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-17T00:39:56.638543Z	      quantity: 0,
2025-09-17T00:39:56.638635Z	      status: 'in_stock',
2025-09-17T00:39:56.638741Z	      warehouse: null
2025-09-17T00:39:56.638849Z	    },
2025-09-17T00:39:56.638966Z	    isActive: true,
2025-09-17T00:39:56.639067Z	    isFeatured: false,
2025-09-17T00:39:56.639162Z	    isNew: false,
2025-09-17T00:39:56.639262Z	    partNumber: '99999',
2025-09-17T00:39:56.639377Z	    pricing: {
2025-09-17T00:39:56.639486Z	      currency: 'CNY',
2025-09-17T00:39:56.639589Z	      leadTime: null,
2025-09-17T00:39:56.63969Z	      moq: null,
2025-09-17T00:39:56.639794Z	      price: null,
2025-09-17T00:39:56.639889Z	      tiers: null
2025-09-17T00:39:56.639993Z	    },
2025-09-17T00:39:56.640085Z	    shortDescription: null,
2025-09-17T00:39:56.640176Z	    slug: '99999',
2025-09-17T00:39:56.640303Z	    title: '99999'
2025-09-17T00:39:56.640432Z	  }
2025-09-17T00:39:56.640535Z	}
2025-09-17T00:39:56.640628Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.640722Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-17T00:39:56.640842Z	Fetching products with query: 
2025-09-17T00:39:56.640963Z	    {
2025-09-17T00:39:56.641079Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.641188Z	        
2025-09-17T00:39:56.6413Z	    _id,
2025-09-17T00:39:56.641413Z	    _type,
2025-09-17T00:39:56.641505Z	    partNumber,
2025-09-17T00:39:56.641616Z	    "slug": slug.current,
2025-09-17T00:39:56.64172Z	    title,
2025-09-17T00:39:56.641812Z	    shortDescription,
2025-09-17T00:39:56.641902Z	    image,
2025-09-17T00:39:56.642005Z	    brand->{
2025-09-17T00:39:56.642096Z	      name,
2025-09-17T00:39:56.642197Z	      "slug": slug.current,
2025-09-17T00:39:56.642321Z	      logo
2025-09-17T00:39:56.642419Z	    },
2025-09-17T00:39:56.64251Z	    category->{
2025-09-17T00:39:56.642601Z	      name,
2025-09-17T00:39:56.642852Z	      "slug": slug.current
2025-09-17T00:39:56.643026Z	    },
2025-09-17T00:39:56.643139Z	    pricing{
2025-09-17T00:39:56.643243Z	      currency,
2025-09-17T00:39:56.64336Z	      tiers[]{
2025-09-17T00:39:56.643472Z	        quantity,
2025-09-17T00:39:56.643574Z	        price,
2025-09-17T00:39:56.643674Z	        unit
2025-09-17T00:39:56.643771Z	      },
2025-09-17T00:39:56.643885Z	      moq,
2025-09-17T00:39:56.643999Z	      leadTime,
2025-09-17T00:39:56.644099Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.644233Z	      "price": tiers[0].price,
2025-09-17T00:39:56.644379Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.644492Z	    },
2025-09-17T00:39:56.644592Z	    inventory{
2025-09-17T00:39:56.644699Z	      quantity,
2025-09-17T00:39:56.644793Z	      status,
2025-09-17T00:39:56.644894Z	      warehouse,
2025-09-17T00:39:56.645006Z	      lastUpdated,
2025-09-17T00:39:56.645101Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.645204Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.645322Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.645433Z	    },
2025-09-17T00:39:56.645539Z	    isActive,
2025-09-17T00:39:56.645633Z	    isFeatured,
2025-09-17T00:39:56.645738Z	    isNew,
2025-09-17T00:39:56.645904Z	    _createdAt,
2025-09-17T00:39:56.646048Z	    _updatedAt
2025-09-17T00:39:56.646165Z	  
2025-09-17T00:39:56.646264Z	      },
2025-09-17T00:39:56.646388Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-17T00:39:56.646492Z	    }
2025-09-17T00:39:56.646592Z	  
2025-09-17T00:39:56.646682Z	Query parameters: {
2025-09-17T00:39:56.646776Z	  limit: 8,
2025-09-17T00:39:56.646875Z	  offset: 0,
2025-09-17T00:39:56.647009Z	  category: undefined,
2025-09-17T00:39:56.647127Z	  brand: 'Electronicon',
2025-09-17T00:39:56.647236Z	  featured: undefined
2025-09-17T00:39:56.647363Z	}
2025-09-17T00:39:56.647467Z	Fetching solutions with query: 
2025-09-17T00:39:56.647574Z	    {
2025-09-17T00:39:56.647679Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.647792Z	        
2025-09-17T00:39:56.647903Z	    _id,
2025-09-17T00:39:56.648014Z	    title,
2025-09-17T00:39:56.648116Z	    "slug": slug.current,
2025-09-17T00:39:56.648214Z	    summary,
2025-09-17T00:39:56.648327Z	    description,
2025-09-17T00:39:56.648439Z	    coverImage,
2025-09-17T00:39:56.648542Z	    primaryBrand->{
2025-09-17T00:39:56.64864Z	      _id,
2025-09-17T00:39:56.648736Z	      name,
2025-09-17T00:39:56.64885Z	      "slug": slug.current,
2025-09-17T00:39:56.648957Z	      logo
2025-09-17T00:39:56.64906Z	    },
2025-09-17T00:39:56.649157Z	    relatedBrands[]->{
2025-09-17T00:39:56.649255Z	      _id,
2025-09-17T00:39:56.649377Z	      name,
2025-09-17T00:39:56.649475Z	      "slug": slug.current,
2025-09-17T00:39:56.649578Z	      logo
2025-09-17T00:39:56.64967Z	    },
2025-09-17T00:39:56.649782Z	    targetMarket,
2025-09-17T00:39:56.649888Z	    complexity,
2025-09-17T00:39:56.65009Z	    publishedAt,
2025-09-17T00:39:56.650236Z	    isPublished,
2025-09-17T00:39:56.650354Z	    isFeatured,
2025-09-17T00:39:56.650425Z	    viewCount,
2025-09-17T00:39:56.650484Z	    _createdAt,
2025-09-17T00:39:56.65055Z	    _updatedAt
2025-09-17T00:39:56.650618Z	  
2025-09-17T00:39:56.650695Z	      },
2025-09-17T00:39:56.650753Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-17T00:39:56.650811Z	    }
2025-09-17T00:39:56.650865Z	  
2025-09-17T00:39:56.650932Z	Query parameters: {
2025-09-17T00:39:56.650989Z	  limit: 4,
2025-09-17T00:39:56.651044Z	  offset: 0,
2025-09-17T00:39:56.651098Z	  targetMarket: undefined,
2025-09-17T00:39:56.651156Z	  brand: 'Electronicon',
2025-09-17T00:39:56.65121Z	  featured: undefined
2025-09-17T00:39:56.651262Z	}
2025-09-17T00:39:56.651351Z	✅ [getBrandData] Found brand: Electronicon
2025-09-17T00:39:56.651422Z	Products fetch result: {
2025-09-17T00:39:56.651478Z	  totalProducts: 2,
2025-09-17T00:39:56.651533Z	  fetchedProducts: 2,
2025-09-17T00:39:56.651586Z	  firstProduct: {
2025-09-17T00:39:56.651639Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-17T00:39:56.6517Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-17T00:39:56.651756Z	    _type: 'product',
2025-09-17T00:39:56.651813Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-17T00:39:56.651891Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-17T00:39:56.651966Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-17T00:39:56.65203Z	    image: null,
2025-09-17T00:39:56.652099Z	    inventory: {
2025-09-17T00:39:56.652155Z	      inStock: true,
2025-09-17T00:39:56.65221Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-17T00:39:56.65228Z	      quantity: 0,
2025-09-17T00:39:56.652362Z	      status: 'in_stock',
2025-09-17T00:39:56.652427Z	      warehouse: null
2025-09-17T00:39:56.652483Z	    },
2025-09-17T00:39:56.65255Z	    isActive: true,
2025-09-17T00:39:56.652612Z	    isFeatured: false,
2025-09-17T00:39:56.652684Z	    isNew: false,
2025-09-17T00:39:56.652742Z	    partNumber: '99999',
2025-09-17T00:39:56.652806Z	    pricing: {
2025-09-17T00:39:56.652862Z	      currency: 'CNY',
2025-09-17T00:39:56.652919Z	      leadTime: null,
2025-09-17T00:39:56.65298Z	      moq: null,
2025-09-17T00:39:56.653041Z	      price: null,
2025-09-17T00:39:56.653094Z	      tiers: null
2025-09-17T00:39:56.653147Z	    },
2025-09-17T00:39:56.653199Z	    shortDescription: null,
2025-09-17T00:39:56.653258Z	    slug: '99999',
2025-09-17T00:39:56.653395Z	    title: '99999'
2025-09-17T00:39:56.653463Z	  }
2025-09-17T00:39:56.653518Z	}
2025-09-17T00:39:56.653573Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.653632Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-17T00:39:56.653701Z	Fetching products with query: 
2025-09-17T00:39:56.653756Z	    {
2025-09-17T00:39:56.653824Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.653882Z	        
2025-09-17T00:39:56.653946Z	    _id,
2025-09-17T00:39:56.654002Z	    _type,
2025-09-17T00:39:56.654059Z	    partNumber,
2025-09-17T00:39:56.654118Z	    "slug": slug.current,
2025-09-17T00:39:56.654172Z	    title,
2025-09-17T00:39:56.654226Z	    shortDescription,
2025-09-17T00:39:56.654308Z	    image,
2025-09-17T00:39:56.654376Z	    brand->{
2025-09-17T00:39:56.654432Z	      name,
2025-09-17T00:39:56.654492Z	      "slug": slug.current,
2025-09-17T00:39:56.654548Z	      logo
2025-09-17T00:39:56.654609Z	    },
2025-09-17T00:39:56.65467Z	    category->{
2025-09-17T00:39:56.654736Z	      name,
2025-09-17T00:39:56.654797Z	      "slug": slug.current
2025-09-17T00:39:56.654853Z	    },
2025-09-17T00:39:56.65492Z	    pricing{
2025-09-17T00:39:56.654978Z	      currency,
2025-09-17T00:39:56.655033Z	      tiers[]{
2025-09-17T00:39:56.655088Z	        quantity,
2025-09-17T00:39:56.655141Z	        price,
2025-09-17T00:39:56.655195Z	        unit
2025-09-17T00:39:56.655252Z	      },
2025-09-17T00:39:56.65536Z	      moq,
2025-09-17T00:39:56.655431Z	      leadTime,
2025-09-17T00:39:56.655503Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.655574Z	      "price": tiers[0].price,
2025-09-17T00:39:56.655633Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.655738Z	    },
2025-09-17T00:39:56.655804Z	    inventory{
2025-09-17T00:39:56.655861Z	      quantity,
2025-09-17T00:39:56.655916Z	      status,
2025-09-17T00:39:56.655983Z	      warehouse,
2025-09-17T00:39:56.656048Z	      lastUpdated,
2025-09-17T00:39:56.656114Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.656171Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.656236Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.656323Z	    },
2025-09-17T00:39:56.656393Z	    isActive,
2025-09-17T00:39:56.656453Z	    isFeatured,
2025-09-17T00:39:56.656512Z	    isNew,
2025-09-17T00:39:56.656577Z	    _createdAt,
2025-09-17T00:39:56.656641Z	    _updatedAt
2025-09-17T00:39:56.656703Z	  
2025-09-17T00:39:56.656759Z	      },
2025-09-17T00:39:56.656822Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-17T00:39:56.65689Z	    }
2025-09-17T00:39:56.656949Z	  
2025-09-17T00:39:56.65701Z	Query parameters: {
2025-09-17T00:39:56.657083Z	  limit: 8,
2025-09-17T00:39:56.657137Z	  offset: 0,
2025-09-17T00:39:56.65719Z	  category: undefined,
2025-09-17T00:39:56.657246Z	  brand: 'ixys',
2025-09-17T00:39:56.657332Z	  featured: undefined
2025-09-17T00:39:56.657396Z	}
2025-09-17T00:39:56.657452Z	Fetching solutions with query: 
2025-09-17T00:39:56.657511Z	    {
2025-09-17T00:39:56.657566Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.657624Z	        
2025-09-17T00:39:56.657688Z	    _id,
2025-09-17T00:39:56.657744Z	    title,
2025-09-17T00:39:56.657799Z	    "slug": slug.current,
2025-09-17T00:39:56.657853Z	    summary,
2025-09-17T00:39:56.657907Z	    description,
2025-09-17T00:39:56.657961Z	    coverImage,
2025-09-17T00:39:56.658014Z	    primaryBrand->{
2025-09-17T00:39:56.658067Z	      _id,
2025-09-17T00:39:56.65812Z	      name,
2025-09-17T00:39:56.658174Z	      "slug": slug.current,
2025-09-17T00:39:56.658228Z	      logo
2025-09-17T00:39:56.658295Z	    },
2025-09-17T00:39:56.658354Z	    relatedBrands[]->{
2025-09-17T00:39:56.658408Z	      _id,
2025-09-17T00:39:56.658464Z	      name,
2025-09-17T00:39:56.658517Z	      "slug": slug.current,
2025-09-17T00:39:56.658571Z	      logo
2025-09-17T00:39:56.658625Z	    },
2025-09-17T00:39:56.658684Z	    targetMarket,
2025-09-17T00:39:56.658743Z	    complexity,
2025-09-17T00:39:56.658796Z	    publishedAt,
2025-09-17T00:39:56.658862Z	    isPublished,
2025-09-17T00:39:56.658917Z	    isFeatured,
2025-09-17T00:39:56.658975Z	    viewCount,
2025-09-17T00:39:56.659028Z	    _createdAt,
2025-09-17T00:39:56.65908Z	    _updatedAt
2025-09-17T00:39:56.659136Z	  
2025-09-17T00:39:56.659188Z	      },
2025-09-17T00:39:56.659242Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-17T00:39:56.659314Z	    }
2025-09-17T00:39:56.659369Z	  
2025-09-17T00:39:56.659422Z	Query parameters: {
2025-09-17T00:39:56.659474Z	  limit: 4,
2025-09-17T00:39:56.659526Z	  offset: 0,
2025-09-17T00:39:56.659585Z	  targetMarket: undefined,
2025-09-17T00:39:56.659641Z	  brand: 'ixys',
2025-09-17T00:39:56.659702Z	  featured: undefined
2025-09-17T00:39:56.659756Z	}
2025-09-17T00:39:56.659809Z	✅ [getBrandData] Found brand: IXYS
2025-09-17T00:39:56.659865Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.659918Z	Solutions fetch result: {
2025-09-17T00:39:56.659979Z	  totalSolutions: 1,
2025-09-17T00:39:56.660033Z	  fetchedSolutions: 1,
2025-09-17T00:39:56.660086Z	  firstSolution: {
2025-09-17T00:39:56.66014Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-17T00:39:56.660193Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-17T00:39:56.66025Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-17T00:39:56.660323Z	    complexity: 'medium',
2025-09-17T00:39:56.660377Z	    coverImage: null,
2025-09-17T00:39:56.660436Z	    description: [ [Object] ],
2025-09-17T00:39:56.660494Z	    isFeatured: false,
2025-09-17T00:39:56.660549Z	    isPublished: true,
2025-09-17T00:39:56.660618Z	    primaryBrand: {
2025-09-17T00:39:56.66068Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:56.660747Z	      logo: null,
2025-09-17T00:39:56.66081Z	      name: 'IXYS',
2025-09-17T00:39:56.660866Z	      slug: 'ixys'
2025-09-17T00:39:56.66093Z	    },
2025-09-17T00:39:56.660991Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-17T00:39:56.661054Z	    relatedBrands: null,
2025-09-17T00:39:56.661115Z	    slug: '99999',
2025-09-17T00:39:56.661173Z	    summary: '99999',
2025-09-17T00:39:56.661228Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:56.661296Z	    title: '99999',
2025-09-17T00:39:56.661352Z	    viewCount: 0
2025-09-17T00:39:56.661461Z	  }
2025-09-17T00:39:56.661659Z	}
2025-09-17T00:39:56.661794Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-17T00:39:56.661912Z	Fetching products with query: 
2025-09-17T00:39:56.66202Z	    {
2025-09-17T00:39:56.662114Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.662209Z	        
2025-09-17T00:39:56.662365Z	    _id,
2025-09-17T00:39:56.662481Z	    _type,
2025-09-17T00:39:56.662556Z	    partNumber,
2025-09-17T00:39:56.662616Z	    "slug": slug.current,
2025-09-17T00:39:56.662713Z	    title,
2025-09-17T00:39:56.662925Z	    shortDescription,
2025-09-17T00:39:56.66306Z	    image,
2025-09-17T00:39:56.663166Z	    brand->{
2025-09-17T00:39:56.663312Z	      name,
2025-09-17T00:39:56.663435Z	      "slug": slug.current,
2025-09-17T00:39:56.663531Z	      logo
2025-09-17T00:39:56.663718Z	    },
2025-09-17T00:39:56.663857Z	    category->{
2025-09-17T00:39:56.66398Z	      name,
2025-09-17T00:39:56.664104Z	      "slug": slug.current
2025-09-17T00:39:56.664213Z	    },
2025-09-17T00:39:56.664339Z	    pricing{
2025-09-17T00:39:56.664451Z	      currency,
2025-09-17T00:39:56.664561Z	      tiers[]{
2025-09-17T00:39:56.664685Z	        quantity,
2025-09-17T00:39:56.664812Z	        price,
2025-09-17T00:39:56.664909Z	        unit
2025-09-17T00:39:56.66512Z	      },
2025-09-17T00:39:56.665328Z	      moq,
2025-09-17T00:39:56.665465Z	      leadTime,
2025-09-17T00:39:56.665631Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.665733Z	      "price": tiers[0].price,
2025-09-17T00:39:56.665796Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.665857Z	    },
2025-09-17T00:39:56.665915Z	    inventory{
2025-09-17T00:39:56.665972Z	      quantity,
2025-09-17T00:39:56.666041Z	      status,
2025-09-17T00:39:56.666097Z	      warehouse,
2025-09-17T00:39:56.666152Z	      lastUpdated,
2025-09-17T00:39:56.666206Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.666262Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.66641Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.66657Z	    },
2025-09-17T00:39:56.666703Z	    isActive,
2025-09-17T00:39:56.666856Z	    isFeatured,
2025-09-17T00:39:56.666937Z	    isNew,
2025-09-17T00:39:56.667332Z	    _createdAt,
2025-09-17T00:39:56.667461Z	    _updatedAt
2025-09-17T00:39:56.66758Z	  
2025-09-17T00:39:56.667726Z	      },
2025-09-17T00:39:56.667839Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-17T00:39:56.667951Z	    }
2025-09-17T00:39:56.668049Z	  
2025-09-17T00:39:56.668151Z	Query parameters: {
2025-09-17T00:39:56.668451Z	  limit: 8,
2025-09-17T00:39:56.668565Z	  offset: 0,
2025-09-17T00:39:56.668634Z	  category: undefined,
2025-09-17T00:39:56.668694Z	  brand: 'ixys',
2025-09-17T00:39:56.668773Z	  featured: undefined
2025-09-17T00:39:56.668832Z	}
2025-09-17T00:39:56.668919Z	Fetching solutions with query: 
2025-09-17T00:39:56.669036Z	    {
2025-09-17T00:39:56.669135Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.669334Z	        
2025-09-17T00:39:56.669466Z	    _id,
2025-09-17T00:39:56.669576Z	    title,
2025-09-17T00:39:56.669688Z	    "slug": slug.current,
2025-09-17T00:39:56.669795Z	    summary,
2025-09-17T00:39:56.669892Z	    description,
2025-09-17T00:39:56.669993Z	    coverImage,
2025-09-17T00:39:56.670099Z	    primaryBrand->{
2025-09-17T00:39:56.670202Z	      _id,
2025-09-17T00:39:56.67033Z	      name,
2025-09-17T00:39:56.670434Z	      "slug": slug.current,
2025-09-17T00:39:56.670535Z	      logo
2025-09-17T00:39:56.67063Z	    },
2025-09-17T00:39:56.670741Z	    relatedBrands[]->{
2025-09-17T00:39:56.670849Z	      _id,
2025-09-17T00:39:56.670957Z	      name,
2025-09-17T00:39:56.671088Z	      "slug": slug.current,
2025-09-17T00:39:56.671259Z	      logo
2025-09-17T00:39:56.671409Z	    },
2025-09-17T00:39:56.685566Z	    targetMarket,
2025-09-17T00:39:56.685803Z	    complexity,
2025-09-17T00:39:56.685941Z	    publishedAt,
2025-09-17T00:39:56.686063Z	    isPublished,
2025-09-17T00:39:56.686168Z	    isFeatured,
2025-09-17T00:39:56.686297Z	    viewCount,
2025-09-17T00:39:56.686412Z	    _createdAt,
2025-09-17T00:39:56.686511Z	    _updatedAt
2025-09-17T00:39:56.686611Z	  
2025-09-17T00:39:56.686714Z	      },
2025-09-17T00:39:56.68682Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-17T00:39:56.686945Z	    }
2025-09-17T00:39:56.687069Z	  
2025-09-17T00:39:56.687164Z	Query parameters: {
2025-09-17T00:39:56.687257Z	  limit: 4,
2025-09-17T00:39:56.687392Z	  offset: 0,
2025-09-17T00:39:56.687497Z	  targetMarket: undefined,
2025-09-17T00:39:56.687594Z	  brand: 'ixys',
2025-09-17T00:39:56.687686Z	  featured: undefined
2025-09-17T00:39:56.687799Z	}
2025-09-17T00:39:56.687901Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-17T00:39:56.688019Z	Fetching products with query: 
2025-09-17T00:39:56.688121Z	    {
2025-09-17T00:39:56.688222Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.688344Z	        
2025-09-17T00:39:56.688448Z	    _id,
2025-09-17T00:39:56.688551Z	    _type,
2025-09-17T00:39:56.688654Z	    partNumber,
2025-09-17T00:39:56.688762Z	    "slug": slug.current,
2025-09-17T00:39:56.688878Z	    title,
2025-09-17T00:39:56.688997Z	    shortDescription,
2025-09-17T00:39:56.689116Z	    image,
2025-09-17T00:39:56.689225Z	    brand->{
2025-09-17T00:39:56.68935Z	      name,
2025-09-17T00:39:56.689464Z	      "slug": slug.current,
2025-09-17T00:39:56.690654Z	      logo
2025-09-17T00:39:56.690841Z	    },
2025-09-17T00:39:56.690973Z	    category->{
2025-09-17T00:39:56.69109Z	      name,
2025-09-17T00:39:56.691184Z	      "slug": slug.current
2025-09-17T00:39:56.691305Z	    },
2025-09-17T00:39:56.691447Z	    pricing{
2025-09-17T00:39:56.691601Z	      currency,
2025-09-17T00:39:56.692055Z	      tiers[]{
2025-09-17T00:39:56.692579Z	        quantity,
2025-09-17T00:39:56.692787Z	        price,
2025-09-17T00:39:56.692906Z	        unit
2025-09-17T00:39:56.693011Z	      },
2025-09-17T00:39:56.693172Z	      moq,
2025-09-17T00:39:56.69337Z	      leadTime,
2025-09-17T00:39:56.693487Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.693593Z	      "price": tiers[0].price,
2025-09-17T00:39:56.693695Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.693804Z	    },
2025-09-17T00:39:56.693936Z	    inventory{
2025-09-17T00:39:56.694097Z	      quantity,
2025-09-17T00:39:56.694213Z	      status,
2025-09-17T00:39:56.694347Z	      warehouse,
2025-09-17T00:39:56.694458Z	      lastUpdated,
2025-09-17T00:39:56.694555Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.69465Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.694751Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.694848Z	    },
2025-09-17T00:39:56.69496Z	    isActive,
2025-09-17T00:39:56.695055Z	    isFeatured,
2025-09-17T00:39:56.695159Z	    isNew,
2025-09-17T00:39:56.695286Z	    _createdAt,
2025-09-17T00:39:56.695409Z	    _updatedAt
2025-09-17T00:39:56.695516Z	  
2025-09-17T00:39:56.695623Z	      },
2025-09-17T00:39:56.695726Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-17T00:39:56.695837Z	    }
2025-09-17T00:39:56.69594Z	  
2025-09-17T00:39:56.696033Z	Query parameters: {
2025-09-17T00:39:56.696117Z	  limit: 8,
2025-09-17T00:39:56.696202Z	  offset: 0,
2025-09-17T00:39:56.696303Z	  category: undefined,
2025-09-17T00:39:56.696398Z	  brand: 'pi',
2025-09-17T00:39:56.69649Z	  featured: undefined
2025-09-17T00:39:56.696591Z	}
2025-09-17T00:39:56.6967Z	Fetching solutions with query: 
2025-09-17T00:39:56.698478Z	    {
2025-09-17T00:39:56.698932Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.699075Z	        
2025-09-17T00:39:56.699176Z	    _id,
2025-09-17T00:39:56.699264Z	    title,
2025-09-17T00:39:56.699386Z	    "slug": slug.current,
2025-09-17T00:39:56.699514Z	    summary,
2025-09-17T00:39:56.699604Z	    description,
2025-09-17T00:39:56.699704Z	    coverImage,
2025-09-17T00:39:56.699799Z	    primaryBrand->{
2025-09-17T00:39:56.699891Z	      _id,
2025-09-17T00:39:56.699988Z	      name,
2025-09-17T00:39:56.700075Z	      "slug": slug.current,
2025-09-17T00:39:56.700182Z	      logo
2025-09-17T00:39:56.70029Z	    },
2025-09-17T00:39:56.70039Z	    relatedBrands[]->{
2025-09-17T00:39:56.700475Z	      _id,
2025-09-17T00:39:56.70056Z	      name,
2025-09-17T00:39:56.700645Z	      "slug": slug.current,
2025-09-17T00:39:56.700764Z	      logo
2025-09-17T00:39:56.700872Z	    },
2025-09-17T00:39:56.701825Z	    targetMarket,
2025-09-17T00:39:56.70196Z	    complexity,
2025-09-17T00:39:56.702065Z	    publishedAt,
2025-09-17T00:39:56.702159Z	    isPublished,
2025-09-17T00:39:56.702259Z	    isFeatured,
2025-09-17T00:39:56.70243Z	    viewCount,
2025-09-17T00:39:56.702541Z	    _createdAt,
2025-09-17T00:39:56.70264Z	    _updatedAt
2025-09-17T00:39:56.702732Z	  
2025-09-17T00:39:56.702821Z	      },
2025-09-17T00:39:56.703511Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-17T00:39:56.703634Z	    }
2025-09-17T00:39:56.703735Z	  
2025-09-17T00:39:56.703848Z	Query parameters: {
2025-09-17T00:39:56.704339Z	  limit: 4,
2025-09-17T00:39:56.704956Z	  offset: 0,
2025-09-17T00:39:56.705166Z	  targetMarket: undefined,
2025-09-17T00:39:56.705313Z	  brand: 'pi',
2025-09-17T00:39:56.705413Z	  featured: undefined
2025-09-17T00:39:56.705502Z	}
2025-09-17T00:39:56.705605Z	✅ [getBrandData] Found brand: PI
2025-09-17T00:39:56.705835Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.705992Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.706183Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-17T00:39:56.706938Z	Fetching products with query: 
2025-09-17T00:39:56.707191Z	    {
2025-09-17T00:39:56.70732Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.707439Z	        
2025-09-17T00:39:56.70772Z	    _id,
2025-09-17T00:39:56.707839Z	    _type,
2025-09-17T00:39:56.707969Z	    partNumber,
2025-09-17T00:39:56.708062Z	    "slug": slug.current,
2025-09-17T00:39:56.708147Z	    title,
2025-09-17T00:39:56.708234Z	    shortDescription,
2025-09-17T00:39:56.708345Z	    image,
2025-09-17T00:39:56.708438Z	    brand->{
2025-09-17T00:39:56.708543Z	      name,
2025-09-17T00:39:56.711126Z	      "slug": slug.current,
2025-09-17T00:39:56.713625Z	      logo
2025-09-17T00:39:56.715475Z	    },
2025-09-17T00:39:56.715612Z	    category->{
2025-09-17T00:39:56.715732Z	      name,
2025-09-17T00:39:56.716124Z	      "slug": slug.current
2025-09-17T00:39:56.716294Z	    },
2025-09-17T00:39:56.717349Z	    pricing{
2025-09-17T00:39:56.717487Z	      currency,
2025-09-17T00:39:56.717593Z	      tiers[]{
2025-09-17T00:39:56.718033Z	        quantity,
2025-09-17T00:39:56.718231Z	        price,
2025-09-17T00:39:56.718361Z	        unit
2025-09-17T00:39:56.718608Z	      },
2025-09-17T00:39:56.718924Z	      moq,
2025-09-17T00:39:56.719163Z	      leadTime,
2025-09-17T00:39:56.719361Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.719618Z	      "price": tiers[0].price,
2025-09-17T00:39:56.719814Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.719935Z	    },
2025-09-17T00:39:56.72006Z	    inventory{
2025-09-17T00:39:56.720442Z	      quantity,
2025-09-17T00:39:56.720577Z	      status,
2025-09-17T00:39:56.720686Z	      warehouse,
2025-09-17T00:39:56.720792Z	      lastUpdated,
2025-09-17T00:39:56.720926Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.721085Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.721213Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.721647Z	    },
2025-09-17T00:39:56.721842Z	    isActive,
2025-09-17T00:39:56.722099Z	    isFeatured,
2025-09-17T00:39:56.722814Z	    isNew,
2025-09-17T00:39:56.72382Z	    _createdAt,
2025-09-17T00:39:56.72449Z	    _updatedAt
2025-09-17T00:39:56.724737Z	  
2025-09-17T00:39:56.724983Z	      },
2025-09-17T00:39:56.725193Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-17T00:39:56.725471Z	    }
2025-09-17T00:39:56.725704Z	  
2025-09-17T00:39:56.726339Z	Query parameters: {
2025-09-17T00:39:56.726458Z	  limit: 8,
2025-09-17T00:39:56.726755Z	  offset: 0,
2025-09-17T00:39:56.726908Z	  category: undefined,
2025-09-17T00:39:56.72705Z	  brand: 'pi',
2025-09-17T00:39:56.727304Z	  featured: undefined
2025-09-17T00:39:56.727557Z	}
2025-09-17T00:39:56.727773Z	Fetching solutions with query: 
2025-09-17T00:39:56.728257Z	    {
2025-09-17T00:39:56.728969Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.729246Z	        
2025-09-17T00:39:56.731352Z	    _id,
2025-09-17T00:39:56.731761Z	    title,
2025-09-17T00:39:56.731856Z	    "slug": slug.current,
2025-09-17T00:39:56.731921Z	    summary,
2025-09-17T00:39:56.733224Z	    description,
2025-09-17T00:39:56.733977Z	    coverImage,
2025-09-17T00:39:56.734062Z	    primaryBrand->{
2025-09-17T00:39:56.734122Z	      _id,
2025-09-17T00:39:56.734185Z	      name,
2025-09-17T00:39:56.73433Z	      "slug": slug.current,
2025-09-17T00:39:56.73441Z	      logo
2025-09-17T00:39:56.734467Z	    },
2025-09-17T00:39:56.734522Z	    relatedBrands[]->{
2025-09-17T00:39:56.734681Z	      _id,
2025-09-17T00:39:56.734758Z	      name,
2025-09-17T00:39:56.734816Z	      "slug": slug.current,
2025-09-17T00:39:56.734889Z	      logo
2025-09-17T00:39:56.734953Z	    },
2025-09-17T00:39:56.735069Z	    targetMarket,
2025-09-17T00:39:56.735139Z	    complexity,
2025-09-17T00:39:56.735515Z	    publishedAt,
2025-09-17T00:39:56.735753Z	    isPublished,
2025-09-17T00:39:56.735878Z	    isFeatured,
2025-09-17T00:39:56.736017Z	    viewCount,
2025-09-17T00:39:56.736173Z	    _createdAt,
2025-09-17T00:39:56.736235Z	    _updatedAt
2025-09-17T00:39:56.736454Z	  
2025-09-17T00:39:56.736548Z	      },
2025-09-17T00:39:56.736609Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-17T00:39:56.736671Z	    }
2025-09-17T00:39:56.737009Z	  
2025-09-17T00:39:56.737158Z	Query parameters: {
2025-09-17T00:39:56.737309Z	  limit: 4,
2025-09-17T00:39:56.737419Z	  offset: 0,
2025-09-17T00:39:56.737517Z	  targetMarket: undefined,
2025-09-17T00:39:56.737683Z	  brand: 'pi',
2025-09-17T00:39:56.737751Z	  featured: undefined
2025-09-17T00:39:56.737808Z	}
2025-09-17T00:39:56.737865Z	✅ [getBrandData] Found brand: PI
2025-09-17T00:39:56.737946Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.738447Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.738645Z	✅ [getBrandData] Found brand: IXYS
2025-09-17T00:39:56.738777Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.739015Z	Solutions fetch result: {
2025-09-17T00:39:56.739191Z	  totalSolutions: 1,
2025-09-17T00:39:56.739417Z	  fetchedSolutions: 1,
2025-09-17T00:39:56.739534Z	  firstSolution: {
2025-09-17T00:39:56.740121Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-17T00:39:56.740363Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-17T00:39:56.740516Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-17T00:39:56.740651Z	    complexity: 'medium',
2025-09-17T00:39:56.740822Z	    coverImage: null,
2025-09-17T00:39:56.741061Z	    description: [ [Object] ],
2025-09-17T00:39:56.741214Z	    isFeatured: false,
2025-09-17T00:39:56.741824Z	    isPublished: true,
2025-09-17T00:39:56.741998Z	    primaryBrand: {
2025-09-17T00:39:56.742142Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:56.7423Z	      logo: null,
2025-09-17T00:39:56.742428Z	      name: 'IXYS',
2025-09-17T00:39:56.742575Z	      slug: 'ixys'
2025-09-17T00:39:56.74274Z	    },
2025-09-17T00:39:56.742866Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-17T00:39:56.743086Z	    relatedBrands: null,
2025-09-17T00:39:56.743236Z	    slug: '99999',
2025-09-17T00:39:56.743582Z	    summary: '99999',
2025-09-17T00:39:56.743746Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:56.743831Z	    title: '99999',
2025-09-17T00:39:56.743904Z	    viewCount: 0
2025-09-17T00:39:56.743981Z	  }
2025-09-17T00:39:56.744116Z	}
2025-09-17T00:39:56.744238Z	Fetching solutions with query: 
2025-09-17T00:39:56.744831Z	    {
2025-09-17T00:39:56.750994Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.751169Z	        
2025-09-17T00:39:56.751303Z	    _id,
2025-09-17T00:39:56.751539Z	    title,
2025-09-17T00:39:56.751658Z	    "slug": slug.current,
2025-09-17T00:39:56.751774Z	    summary,
2025-09-17T00:39:56.751879Z	    description,
2025-09-17T00:39:56.751979Z	    coverImage,
2025-09-17T00:39:56.752084Z	    primaryBrand->{
2025-09-17T00:39:56.752201Z	      _id,
2025-09-17T00:39:56.752317Z	      name,
2025-09-17T00:39:56.752424Z	      "slug": slug.current,
2025-09-17T00:39:56.752586Z	      logo
2025-09-17T00:39:56.752692Z	    },
2025-09-17T00:39:56.752803Z	    relatedBrands[]->{
2025-09-17T00:39:56.752918Z	      _id,
2025-09-17T00:39:56.753026Z	      name,
2025-09-17T00:39:56.753152Z	      "slug": slug.current,
2025-09-17T00:39:56.759068Z	      logo
2025-09-17T00:39:56.759216Z	    },
2025-09-17T00:39:56.759347Z	    targetMarket,
2025-09-17T00:39:56.759471Z	    complexity,
2025-09-17T00:39:56.759565Z	    publishedAt,
2025-09-17T00:39:56.759645Z	    isPublished,
2025-09-17T00:39:56.759744Z	    isFeatured,
2025-09-17T00:39:56.759826Z	    viewCount,
2025-09-17T00:39:56.759925Z	    _createdAt,
2025-09-17T00:39:56.760019Z	    _updatedAt
2025-09-17T00:39:56.760118Z	  
2025-09-17T00:39:56.787331Z	      },
2025-09-17T00:39:56.787616Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-17T00:39:56.787847Z	    }
2025-09-17T00:39:56.787973Z	  
2025-09-17T00:39:56.788068Z	Query parameters: {
2025-09-17T00:39:56.788158Z	  limit: 4,
2025-09-17T00:39:56.788247Z	  offset: 0,
2025-09-17T00:39:56.788419Z	  targetMarket: undefined,
2025-09-17T00:39:56.788539Z	  brand: '英飞凌',
2025-09-17T00:39:56.788909Z	  featured: undefined
2025-09-17T00:39:56.789292Z	}
2025-09-17T00:39:56.789415Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-17T00:39:56.789514Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.789607Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.789719Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-17T00:39:56.789837Z	Fetching products with query: 
2025-09-17T00:39:56.789945Z	    {
2025-09-17T00:39:56.790099Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.790375Z	        
2025-09-17T00:39:56.790627Z	    _id,
2025-09-17T00:39:56.790768Z	    _type,
2025-09-17T00:39:56.790969Z	    partNumber,
2025-09-17T00:39:56.792085Z	    "slug": slug.current,
2025-09-17T00:39:56.792231Z	    title,
2025-09-17T00:39:56.792442Z	    shortDescription,
2025-09-17T00:39:56.792647Z	    image,
2025-09-17T00:39:56.79296Z	    brand->{
2025-09-17T00:39:56.793178Z	      name,
2025-09-17T00:39:56.793532Z	      "slug": slug.current,
2025-09-17T00:39:56.79443Z	      logo
2025-09-17T00:39:56.794549Z	    },
2025-09-17T00:39:56.794732Z	    category->{
2025-09-17T00:39:56.795121Z	      name,
2025-09-17T00:39:56.795332Z	      "slug": slug.current
2025-09-17T00:39:56.795436Z	    },
2025-09-17T00:39:56.795524Z	    pricing{
2025-09-17T00:39:56.795686Z	      currency,
2025-09-17T00:39:56.795805Z	      tiers[]{
2025-09-17T00:39:56.795959Z	        quantity,
2025-09-17T00:39:56.796066Z	        price,
2025-09-17T00:39:56.796168Z	        unit
2025-09-17T00:39:56.79631Z	      },
2025-09-17T00:39:56.796424Z	      moq,
2025-09-17T00:39:56.796517Z	      leadTime,
2025-09-17T00:39:56.796615Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.796718Z	      "price": tiers[0].price,
2025-09-17T00:39:56.796824Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.796932Z	    },
2025-09-17T00:39:56.797042Z	    inventory{
2025-09-17T00:39:56.797148Z	      quantity,
2025-09-17T00:39:56.797255Z	      status,
2025-09-17T00:39:56.79767Z	      warehouse,
2025-09-17T00:39:56.79793Z	      lastUpdated,
2025-09-17T00:39:56.798248Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.798563Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.798883Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.799641Z	    },
2025-09-17T00:39:56.799754Z	    isActive,
2025-09-17T00:39:56.799847Z	    isFeatured,
2025-09-17T00:39:56.799933Z	    isNew,
2025-09-17T00:39:56.800006Z	    _createdAt,
2025-09-17T00:39:56.800063Z	    _updatedAt
2025-09-17T00:39:56.800133Z	  
2025-09-17T00:39:56.800201Z	      },
2025-09-17T00:39:56.800307Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-17T00:39:56.800403Z	    }
2025-09-17T00:39:56.801341Z	  
2025-09-17T00:39:56.801502Z	Query parameters: {
2025-09-17T00:39:56.801614Z	  limit: 8,
2025-09-17T00:39:56.801773Z	  offset: 0,
2025-09-17T00:39:56.801939Z	  category: undefined,
2025-09-17T00:39:56.802049Z	  brand: '英飞凌',
2025-09-17T00:39:56.802161Z	  featured: undefined
2025-09-17T00:39:56.802255Z	}
2025-09-17T00:39:56.802367Z	Fetching solutions with query: 
2025-09-17T00:39:56.802462Z	    {
2025-09-17T00:39:56.802559Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.802726Z	        
2025-09-17T00:39:56.802838Z	    _id,
2025-09-17T00:39:56.802934Z	    title,
2025-09-17T00:39:56.803091Z	    "slug": slug.current,
2025-09-17T00:39:56.803247Z	    summary,
2025-09-17T00:39:56.803578Z	    description,
2025-09-17T00:39:56.803713Z	    coverImage,
2025-09-17T00:39:56.803821Z	    primaryBrand->{
2025-09-17T00:39:56.80393Z	      _id,
2025-09-17T00:39:56.804029Z	      name,
2025-09-17T00:39:56.804133Z	      "slug": slug.current,
2025-09-17T00:39:56.804238Z	      logo
2025-09-17T00:39:56.804355Z	    },
2025-09-17T00:39:56.804458Z	    relatedBrands[]->{
2025-09-17T00:39:56.804554Z	      _id,
2025-09-17T00:39:56.804646Z	      name,
2025-09-17T00:39:56.804791Z	      "slug": slug.current,
2025-09-17T00:39:56.804903Z	      logo
2025-09-17T00:39:56.805021Z	    },
2025-09-17T00:39:56.805134Z	    targetMarket,
2025-09-17T00:39:56.805251Z	    complexity,
2025-09-17T00:39:56.805391Z	    publishedAt,
2025-09-17T00:39:56.805505Z	    isPublished,
2025-09-17T00:39:56.805638Z	    isFeatured,
2025-09-17T00:39:56.805758Z	    viewCount,
2025-09-17T00:39:56.805896Z	    _createdAt,
2025-09-17T00:39:56.80602Z	    _updatedAt
2025-09-17T00:39:56.806132Z	  
2025-09-17T00:39:56.806252Z	      },
2025-09-17T00:39:56.806392Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-17T00:39:56.80651Z	    }
2025-09-17T00:39:56.806614Z	  
2025-09-17T00:39:56.806747Z	Query parameters: {
2025-09-17T00:39:56.806967Z	  limit: 4,
2025-09-17T00:39:56.807169Z	  offset: 0,
2025-09-17T00:39:56.807277Z	  targetMarket: undefined,
2025-09-17T00:39:56.807435Z	  brand: '英飞凌',
2025-09-17T00:39:56.807598Z	  featured: undefined
2025-09-17T00:39:56.807707Z	}
2025-09-17T00:39:56.807816Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-17T00:39:56.807919Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.808012Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.80808Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-17T00:39:56.808168Z	Fetching products with query: 
2025-09-17T00:39:56.808258Z	    {
2025-09-17T00:39:56.808377Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.80847Z	        
2025-09-17T00:39:56.808558Z	    _id,
2025-09-17T00:39:56.808662Z	    _type,
2025-09-17T00:39:56.808779Z	    partNumber,
2025-09-17T00:39:56.80888Z	    "slug": slug.current,
2025-09-17T00:39:56.808987Z	    title,
2025-09-17T00:39:56.809058Z	    shortDescription,
2025-09-17T00:39:56.809147Z	    image,
2025-09-17T00:39:56.809248Z	    brand->{
2025-09-17T00:39:56.809362Z	      name,
2025-09-17T00:39:56.809508Z	      "slug": slug.current,
2025-09-17T00:39:56.809588Z	      logo
2025-09-17T00:39:56.80967Z	    },
2025-09-17T00:39:56.809781Z	    category->{
2025-09-17T00:39:56.809871Z	      name,
2025-09-17T00:39:56.809954Z	      "slug": slug.current
2025-09-17T00:39:56.810058Z	    },
2025-09-17T00:39:56.810154Z	    pricing{
2025-09-17T00:39:56.810248Z	      currency,
2025-09-17T00:39:56.810362Z	      tiers[]{
2025-09-17T00:39:56.810457Z	        quantity,
2025-09-17T00:39:56.810557Z	        price,
2025-09-17T00:39:56.810647Z	        unit
2025-09-17T00:39:56.810754Z	      },
2025-09-17T00:39:56.810855Z	      moq,
2025-09-17T00:39:56.810965Z	      leadTime,
2025-09-17T00:39:56.811065Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.811159Z	      "price": tiers[0].price,
2025-09-17T00:39:56.811253Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.811362Z	    },
2025-09-17T00:39:56.811482Z	    inventory{
2025-09-17T00:39:56.811576Z	      quantity,
2025-09-17T00:39:56.811687Z	      status,
2025-09-17T00:39:56.811791Z	      warehouse,
2025-09-17T00:39:56.81192Z	      lastUpdated,
2025-09-17T00:39:56.812025Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.812124Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.812217Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.812346Z	    },
2025-09-17T00:39:56.812438Z	    isActive,
2025-09-17T00:39:56.81259Z	    isFeatured,
2025-09-17T00:39:56.812695Z	    isNew,
2025-09-17T00:39:56.81279Z	    _createdAt,
2025-09-17T00:39:56.812895Z	    _updatedAt
2025-09-17T00:39:56.812993Z	  
2025-09-17T00:39:56.813064Z	      },
2025-09-17T00:39:56.813121Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-17T00:39:56.813179Z	    }
2025-09-17T00:39:56.813407Z	  
2025-09-17T00:39:56.813571Z	Query parameters: {
2025-09-17T00:39:56.813692Z	  limit: 8,
2025-09-17T00:39:56.813803Z	  offset: 0,
2025-09-17T00:39:56.8139Z	  category: undefined,
2025-09-17T00:39:56.814011Z	  brand: 'littelfuse',
2025-09-17T00:39:56.81413Z	  featured: undefined
2025-09-17T00:39:56.814236Z	}
2025-09-17T00:39:56.814365Z	Fetching solutions with query: 
2025-09-17T00:39:56.814476Z	    {
2025-09-17T00:39:56.814585Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.814681Z	        
2025-09-17T00:39:56.814787Z	    _id,
2025-09-17T00:39:56.814878Z	    title,
2025-09-17T00:39:56.814977Z	    "slug": slug.current,
2025-09-17T00:39:56.815078Z	    summary,
2025-09-17T00:39:56.815211Z	    description,
2025-09-17T00:39:56.815333Z	    coverImage,
2025-09-17T00:39:56.815477Z	    primaryBrand->{
2025-09-17T00:39:56.815598Z	      _id,
2025-09-17T00:39:56.81573Z	      name,
2025-09-17T00:39:56.815845Z	      "slug": slug.current,
2025-09-17T00:39:56.815964Z	      logo
2025-09-17T00:39:56.816082Z	    },
2025-09-17T00:39:56.816194Z	    relatedBrands[]->{
2025-09-17T00:39:56.816312Z	      _id,
2025-09-17T00:39:56.816423Z	      name,
2025-09-17T00:39:56.816536Z	      "slug": slug.current,
2025-09-17T00:39:56.816638Z	      logo
2025-09-17T00:39:56.816749Z	    },
2025-09-17T00:39:56.816849Z	    targetMarket,
2025-09-17T00:39:56.816967Z	    complexity,
2025-09-17T00:39:56.817076Z	    publishedAt,
2025-09-17T00:39:56.817199Z	    isPublished,
2025-09-17T00:39:56.817391Z	    isFeatured,
2025-09-17T00:39:56.817522Z	    viewCount,
2025-09-17T00:39:56.817617Z	    _createdAt,
2025-09-17T00:39:56.817713Z	    _updatedAt
2025-09-17T00:39:56.817815Z	  
2025-09-17T00:39:56.817903Z	      },
2025-09-17T00:39:56.81801Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-17T00:39:56.818097Z	    }
2025-09-17T00:39:56.818182Z	  
2025-09-17T00:39:56.81828Z	Query parameters: {
2025-09-17T00:39:56.818383Z	  limit: 4,
2025-09-17T00:39:56.818475Z	  offset: 0,
2025-09-17T00:39:56.818559Z	  targetMarket: undefined,
2025-09-17T00:39:56.818646Z	  brand: 'littelfuse',
2025-09-17T00:39:56.81874Z	  featured: undefined
2025-09-17T00:39:56.818824Z	}
2025-09-17T00:39:56.818916Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-17T00:39:56.819005Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.81909Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.81919Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-17T00:39:56.819302Z	Fetching products with query: 
2025-09-17T00:39:56.819393Z	    {
2025-09-17T00:39:56.819488Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.819578Z	        
2025-09-17T00:39:56.819672Z	    _id,
2025-09-17T00:39:56.819759Z	    _type,
2025-09-17T00:39:56.819846Z	    partNumber,
2025-09-17T00:39:56.819923Z	    "slug": slug.current,
2025-09-17T00:39:56.819988Z	    title,
2025-09-17T00:39:56.820062Z	    shortDescription,
2025-09-17T00:39:56.82013Z	    image,
2025-09-17T00:39:56.820184Z	    brand->{
2025-09-17T00:39:56.820247Z	      name,
2025-09-17T00:39:56.82035Z	      "slug": slug.current,
2025-09-17T00:39:56.82041Z	      logo
2025-09-17T00:39:56.820467Z	    },
2025-09-17T00:39:56.82052Z	    category->{
2025-09-17T00:39:56.820573Z	      name,
2025-09-17T00:39:56.820627Z	      "slug": slug.current
2025-09-17T00:39:56.820701Z	    },
2025-09-17T00:39:56.82076Z	    pricing{
2025-09-17T00:39:56.82082Z	      currency,
2025-09-17T00:39:56.820873Z	      tiers[]{
2025-09-17T00:39:56.820934Z	        quantity,
2025-09-17T00:39:56.820989Z	        price,
2025-09-17T00:39:56.821042Z	        unit
2025-09-17T00:39:56.821094Z	      },
2025-09-17T00:39:56.821148Z	      moq,
2025-09-17T00:39:56.821201Z	      leadTime,
2025-09-17T00:39:56.821256Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.82134Z	      "price": tiers[0].price,
2025-09-17T00:39:56.821415Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.821474Z	    },
2025-09-17T00:39:56.821541Z	    inventory{
2025-09-17T00:39:56.821638Z	      quantity,
2025-09-17T00:39:56.821747Z	      status,
2025-09-17T00:39:56.821841Z	      warehouse,
2025-09-17T00:39:56.821933Z	      lastUpdated,
2025-09-17T00:39:56.822026Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.822131Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.822224Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.822331Z	    },
2025-09-17T00:39:56.822428Z	    isActive,
2025-09-17T00:39:56.822521Z	    isFeatured,
2025-09-17T00:39:56.822625Z	    isNew,
2025-09-17T00:39:56.822732Z	    _createdAt,
2025-09-17T00:39:56.822836Z	    _updatedAt
2025-09-17T00:39:56.822932Z	  
2025-09-17T00:39:56.823024Z	      },
2025-09-17T00:39:56.823113Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-17T00:39:56.823219Z	    }
2025-09-17T00:39:56.823333Z	  
2025-09-17T00:39:56.823424Z	Query parameters: {
2025-09-17T00:39:56.823497Z	  limit: 8,
2025-09-17T00:39:56.823552Z	  offset: 0,
2025-09-17T00:39:56.823638Z	  category: undefined,
2025-09-17T00:39:56.823707Z	  brand: 'littelfuse',
2025-09-17T00:39:56.823772Z	  featured: undefined
2025-09-17T00:39:56.823836Z	}
2025-09-17T00:39:56.823907Z	Fetching solutions with query: 
2025-09-17T00:39:56.823994Z	    {
2025-09-17T00:39:56.824079Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.824167Z	        
2025-09-17T00:39:56.824255Z	    _id,
2025-09-17T00:39:56.824359Z	    title,
2025-09-17T00:39:56.824417Z	    "slug": slug.current,
2025-09-17T00:39:56.824473Z	    summary,
2025-09-17T00:39:56.824528Z	    description,
2025-09-17T00:39:56.824594Z	    coverImage,
2025-09-17T00:39:56.824657Z	    primaryBrand->{
2025-09-17T00:39:56.82472Z	      _id,
2025-09-17T00:39:56.824774Z	      name,
2025-09-17T00:39:56.824828Z	      "slug": slug.current,
2025-09-17T00:39:56.824881Z	      logo
2025-09-17T00:39:56.824937Z	    },
2025-09-17T00:39:56.824994Z	    relatedBrands[]->{
2025-09-17T00:39:56.825047Z	      _id,
2025-09-17T00:39:56.825102Z	      name,
2025-09-17T00:39:56.825155Z	      "slug": slug.current,
2025-09-17T00:39:56.825212Z	      logo
2025-09-17T00:39:56.825264Z	    },
2025-09-17T00:39:56.82557Z	    targetMarket,
2025-09-17T00:39:56.825714Z	    complexity,
2025-09-17T00:39:56.825874Z	    publishedAt,
2025-09-17T00:39:56.826029Z	    isPublished,
2025-09-17T00:39:56.826172Z	    isFeatured,
2025-09-17T00:39:56.826319Z	    viewCount,
2025-09-17T00:39:56.826454Z	    _createdAt,
2025-09-17T00:39:56.826594Z	    _updatedAt
2025-09-17T00:39:56.826753Z	  
2025-09-17T00:39:56.826882Z	      },
2025-09-17T00:39:56.827047Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-17T00:39:56.827167Z	    }
2025-09-17T00:39:56.827349Z	  
2025-09-17T00:39:56.827516Z	Query parameters: {
2025-09-17T00:39:56.827651Z	  limit: 4,
2025-09-17T00:39:56.827787Z	  offset: 0,
2025-09-17T00:39:56.827922Z	  targetMarket: undefined,
2025-09-17T00:39:56.828056Z	  brand: 'littelfuse',
2025-09-17T00:39:56.828203Z	  featured: undefined
2025-09-17T00:39:56.82836Z	}
2025-09-17T00:39:56.828498Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-17T00:39:56.828629Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.828769Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.828918Z	Fetching solutions with query: 
2025-09-17T00:39:56.829058Z	    {
2025-09-17T00:39:56.82919Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.829344Z	        
2025-09-17T00:39:56.829453Z	    _id,
2025-09-17T00:39:56.829602Z	    title,
2025-09-17T00:39:56.829813Z	    "slug": slug.current,
2025-09-17T00:39:56.829989Z	    summary,
2025-09-17T00:39:56.83009Z	    description,
2025-09-17T00:39:56.830164Z	    coverImage,
2025-09-17T00:39:56.830343Z	    primaryBrand->{
2025-09-17T00:39:56.830411Z	      _id,
2025-09-17T00:39:56.830467Z	      name,
2025-09-17T00:39:56.83052Z	      "slug": slug.current,
2025-09-17T00:39:56.830574Z	      logo
2025-09-17T00:39:56.83063Z	    },
2025-09-17T00:39:56.830687Z	    relatedBrands[]->{
2025-09-17T00:39:56.830748Z	      _id,
2025-09-17T00:39:56.830803Z	      name,
2025-09-17T00:39:56.830868Z	      "slug": slug.current,
2025-09-17T00:39:56.830933Z	      logo
2025-09-17T00:39:56.830989Z	    },
2025-09-17T00:39:56.831042Z	    targetMarket,
2025-09-17T00:39:56.831095Z	    complexity,
2025-09-17T00:39:56.831147Z	    publishedAt,
2025-09-17T00:39:56.831208Z	    isPublished,
2025-09-17T00:39:56.831408Z	    isFeatured,
2025-09-17T00:39:56.831593Z	    viewCount,
2025-09-17T00:39:56.831819Z	    _createdAt,
2025-09-17T00:39:56.832007Z	    _updatedAt
2025-09-17T00:39:56.832179Z	  
2025-09-17T00:39:56.832448Z	      },
2025-09-17T00:39:56.832617Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-17T00:39:56.832799Z	    }
2025-09-17T00:39:56.832966Z	  
2025-09-17T00:39:56.833089Z	Query parameters: {
2025-09-17T00:39:56.833201Z	  limit: 4,
2025-09-17T00:39:56.833349Z	  offset: 0,
2025-09-17T00:39:56.833461Z	  targetMarket: undefined,
2025-09-17T00:39:56.833564Z	  brand: '英飞凌',
2025-09-17T00:39:56.833628Z	  featured: undefined
2025-09-17T00:39:56.833692Z	}
2025-09-17T00:39:56.833748Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-17T00:39:56.833874Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:56.834056Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.834184Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-17T00:39:56.834319Z	Fetching products with query: 
2025-09-17T00:39:56.834446Z	    {
2025-09-17T00:39:56.834552Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.834657Z	        
2025-09-17T00:39:56.834756Z	    _id,
2025-09-17T00:39:56.834859Z	    _type,
2025-09-17T00:39:56.834958Z	    partNumber,
2025-09-17T00:39:56.835067Z	    "slug": slug.current,
2025-09-17T00:39:56.835164Z	    title,
2025-09-17T00:39:56.83526Z	    shortDescription,
2025-09-17T00:39:56.83539Z	    image,
2025-09-17T00:39:56.835495Z	    brand->{
2025-09-17T00:39:56.835591Z	      name,
2025-09-17T00:39:56.835686Z	      "slug": slug.current,
2025-09-17T00:39:56.835816Z	      logo
2025-09-17T00:39:56.835935Z	    },
2025-09-17T00:39:56.836011Z	    category->{
2025-09-17T00:39:56.836159Z	      name,
2025-09-17T00:39:56.83636Z	      "slug": slug.current
2025-09-17T00:39:56.839624Z	    },
2025-09-17T00:39:56.839868Z	    pricing{
2025-09-17T00:39:56.840099Z	      currency,
2025-09-17T00:39:56.840302Z	      tiers[]{
2025-09-17T00:39:56.840814Z	        quantity,
2025-09-17T00:39:56.84096Z	        price,
2025-09-17T00:39:56.841448Z	        unit
2025-09-17T00:39:56.841731Z	      },
2025-09-17T00:39:56.842008Z	      moq,
2025-09-17T00:39:56.84228Z	      leadTime,
2025-09-17T00:39:56.842568Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.84286Z	      "price": tiers[0].price,
2025-09-17T00:39:56.843027Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.843204Z	    },
2025-09-17T00:39:56.843754Z	    inventory{
2025-09-17T00:39:56.843915Z	      quantity,
2025-09-17T00:39:56.844046Z	      status,
2025-09-17T00:39:56.844159Z	      warehouse,
2025-09-17T00:39:56.844283Z	      lastUpdated,
2025-09-17T00:39:56.844412Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.844525Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.844646Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.844767Z	    },
2025-09-17T00:39:56.844873Z	    isActive,
2025-09-17T00:39:56.844972Z	    isFeatured,
2025-09-17T00:39:56.845082Z	    isNew,
2025-09-17T00:39:56.845188Z	    _createdAt,
2025-09-17T00:39:56.845317Z	    _updatedAt
2025-09-17T00:39:56.845435Z	  
2025-09-17T00:39:56.845542Z	      },
2025-09-17T00:39:56.845634Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-17T00:39:56.845783Z	    }
2025-09-17T00:39:56.845893Z	  
2025-09-17T00:39:56.846Z	Query parameters: {
2025-09-17T00:39:56.846106Z	  limit: 8,
2025-09-17T00:39:56.846204Z	  offset: 0,
2025-09-17T00:39:56.846324Z	  category: undefined,
2025-09-17T00:39:56.846444Z	  brand: 'semikron',
2025-09-17T00:39:56.846562Z	  featured: undefined
2025-09-17T00:39:56.846676Z	}
2025-09-17T00:39:56.846778Z	Fetching solutions with query: 
2025-09-17T00:39:56.846884Z	    {
2025-09-17T00:39:56.847002Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.847116Z	        
2025-09-17T00:39:56.847222Z	    _id,
2025-09-17T00:39:56.847353Z	    title,
2025-09-17T00:39:56.84746Z	    "slug": slug.current,
2025-09-17T00:39:56.847562Z	    summary,
2025-09-17T00:39:56.847672Z	    description,
2025-09-17T00:39:56.847778Z	    coverImage,
2025-09-17T00:39:56.847881Z	    primaryBrand->{
2025-09-17T00:39:56.847984Z	      _id,
2025-09-17T00:39:56.848086Z	      name,
2025-09-17T00:39:56.848183Z	      "slug": slug.current,
2025-09-17T00:39:56.848316Z	      logo
2025-09-17T00:39:56.848427Z	    },
2025-09-17T00:39:56.848524Z	    relatedBrands[]->{
2025-09-17T00:39:56.84862Z	      _id,
2025-09-17T00:39:56.848723Z	      name,
2025-09-17T00:39:56.848817Z	      "slug": slug.current,
2025-09-17T00:39:56.848915Z	      logo
2025-09-17T00:39:56.849026Z	    },
2025-09-17T00:39:56.849138Z	    targetMarket,
2025-09-17T00:39:56.849296Z	    complexity,
2025-09-17T00:39:56.894035Z	    publishedAt,
2025-09-17T00:39:56.894249Z	    isPublished,
2025-09-17T00:39:56.894387Z	    isFeatured,
2025-09-17T00:39:56.894502Z	    viewCount,
2025-09-17T00:39:56.894601Z	    _createdAt,
2025-09-17T00:39:56.894712Z	    _updatedAt
2025-09-17T00:39:56.894809Z	  
2025-09-17T00:39:56.894904Z	      },
2025-09-17T00:39:56.895007Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-17T00:39:56.895125Z	    }
2025-09-17T00:39:56.895222Z	  
2025-09-17T00:39:56.899402Z	Query parameters: {
2025-09-17T00:39:56.899595Z	  limit: 4,
2025-09-17T00:39:56.899938Z	  offset: 0,
2025-09-17T00:39:56.900113Z	  targetMarket: undefined,
2025-09-17T00:39:56.900225Z	  brand: 'semikron',
2025-09-17T00:39:56.900355Z	  featured: undefined
2025-09-17T00:39:56.900465Z	}
2025-09-17T00:39:56.900571Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-17T00:39:56.900729Z	Fetching products with query: 
2025-09-17T00:39:56.901493Z	    {
2025-09-17T00:39:56.901903Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.902245Z	        
2025-09-17T00:39:56.902724Z	    _id,
2025-09-17T00:39:56.902863Z	    _type,
2025-09-17T00:39:56.902977Z	    partNumber,
2025-09-17T00:39:56.903086Z	    "slug": slug.current,
2025-09-17T00:39:56.903195Z	    title,
2025-09-17T00:39:56.903332Z	    shortDescription,
2025-09-17T00:39:56.904062Z	    image,
2025-09-17T00:39:56.904208Z	    brand->{
2025-09-17T00:39:56.904344Z	      name,
2025-09-17T00:39:56.90449Z	      "slug": slug.current,
2025-09-17T00:39:56.904605Z	      logo
2025-09-17T00:39:56.905044Z	    },
2025-09-17T00:39:56.905174Z	    category->{
2025-09-17T00:39:56.905338Z	      name,
2025-09-17T00:39:56.905484Z	      "slug": slug.current
2025-09-17T00:39:56.905591Z	    },
2025-09-17T00:39:56.905656Z	    pricing{
2025-09-17T00:39:56.905716Z	      currency,
2025-09-17T00:39:56.905772Z	      tiers[]{
2025-09-17T00:39:56.905826Z	        quantity,
2025-09-17T00:39:56.905889Z	        price,
2025-09-17T00:39:56.905955Z	        unit
2025-09-17T00:39:56.906009Z	      },
2025-09-17T00:39:56.906067Z	      moq,
2025-09-17T00:39:56.90612Z	      leadTime,
2025-09-17T00:39:56.906174Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.906231Z	      "price": tiers[0].price,
2025-09-17T00:39:56.906319Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.906382Z	    },
2025-09-17T00:39:56.906438Z	    inventory{
2025-09-17T00:39:56.90649Z	      quantity,
2025-09-17T00:39:56.906542Z	      status,
2025-09-17T00:39:56.906604Z	      warehouse,
2025-09-17T00:39:56.906661Z	      lastUpdated,
2025-09-17T00:39:56.906715Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.906772Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.906825Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.906877Z	    },
2025-09-17T00:39:56.906936Z	    isActive,
2025-09-17T00:39:56.90699Z	    isFeatured,
2025-09-17T00:39:56.907043Z	    isNew,
2025-09-17T00:39:56.907097Z	    _createdAt,
2025-09-17T00:39:56.90715Z	    _updatedAt
2025-09-17T00:39:56.907216Z	  
2025-09-17T00:39:56.907288Z	      },
2025-09-17T00:39:56.907359Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-17T00:39:56.907422Z	    }
2025-09-17T00:39:56.907477Z	  
2025-09-17T00:39:56.90753Z	Query parameters: {
2025-09-17T00:39:56.907583Z	  limit: 8,
2025-09-17T00:39:56.907636Z	  offset: 0,
2025-09-17T00:39:56.907691Z	  category: undefined,
2025-09-17T00:39:56.907744Z	  brand: 'semikron',
2025-09-17T00:39:56.907798Z	  featured: undefined
2025-09-17T00:39:56.90785Z	}
2025-09-17T00:39:56.907922Z	Fetching solutions with query: 
2025-09-17T00:39:56.907976Z	    {
2025-09-17T00:39:56.915574Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.915806Z	        
2025-09-17T00:39:56.916416Z	    _id,
2025-09-17T00:39:56.91655Z	    title,
2025-09-17T00:39:56.916791Z	    "slug": slug.current,
2025-09-17T00:39:56.916915Z	    summary,
2025-09-17T00:39:56.917061Z	    description,
2025-09-17T00:39:56.917297Z	    coverImage,
2025-09-17T00:39:56.917429Z	    primaryBrand->{
2025-09-17T00:39:56.917611Z	      _id,
2025-09-17T00:39:56.91775Z	      name,
2025-09-17T00:39:56.917866Z	      "slug": slug.current,
2025-09-17T00:39:56.918025Z	      logo
2025-09-17T00:39:56.918202Z	    },
2025-09-17T00:39:56.918333Z	    relatedBrands[]->{
2025-09-17T00:39:56.918498Z	      _id,
2025-09-17T00:39:56.918719Z	      name,
2025-09-17T00:39:56.918869Z	      "slug": slug.current,
2025-09-17T00:39:56.918981Z	      logo
2025-09-17T00:39:56.919096Z	    },
2025-09-17T00:39:56.919195Z	    targetMarket,
2025-09-17T00:39:56.919315Z	    complexity,
2025-09-17T00:39:56.919423Z	    publishedAt,
2025-09-17T00:39:56.919523Z	    isPublished,
2025-09-17T00:39:56.919628Z	    isFeatured,
2025-09-17T00:39:56.919723Z	    viewCount,
2025-09-17T00:39:56.919828Z	    _createdAt,
2025-09-17T00:39:56.919943Z	    _updatedAt
2025-09-17T00:39:56.92004Z	  
2025-09-17T00:39:56.920136Z	      },
2025-09-17T00:39:56.920254Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-17T00:39:56.920407Z	    }
2025-09-17T00:39:56.920518Z	  
2025-09-17T00:39:56.920619Z	Query parameters: {
2025-09-17T00:39:56.920724Z	  limit: 4,
2025-09-17T00:39:56.92083Z	  offset: 0,
2025-09-17T00:39:56.920943Z	  targetMarket: undefined,
2025-09-17T00:39:56.921048Z	  brand: 'semikron',
2025-09-17T00:39:56.921139Z	  featured: undefined
2025-09-17T00:39:56.921241Z	}
2025-09-17T00:39:56.921365Z	✅ [getBrandData] Found brand: Semikron
2025-09-17T00:39:56.921463Z	✅ [getBrandData] Found brand: Semikron
2025-09-17T00:39:56.921561Z	Products fetch result: {
2025-09-17T00:39:56.921655Z	  totalProducts: 1,
2025-09-17T00:39:56.921748Z	  fetchedProducts: 1,
2025-09-17T00:39:56.921847Z	  firstProduct: {
2025-09-17T00:39:56.922092Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-17T00:39:56.922404Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-17T00:39:56.922579Z	    _type: 'product',
2025-09-17T00:39:56.922779Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-17T00:39:56.923057Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-17T00:39:56.923302Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:56.923475Z	    image: null,
2025-09-17T00:39:56.923704Z	    inventory: {
2025-09-17T00:39:56.923831Z	      inStock: true,
2025-09-17T00:39:56.923973Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-17T00:39:56.92411Z	      quantity: 0,
2025-09-17T00:39:56.924302Z	      status: 'in_stock',
2025-09-17T00:39:56.924434Z	      warehouse: null
2025-09-17T00:39:56.924722Z	    },
2025-09-17T00:39:56.924844Z	    isActive: true,
2025-09-17T00:39:56.924955Z	    isFeatured: false,
2025-09-17T00:39:56.925057Z	    isNew: false,
2025-09-17T00:39:56.925336Z	    partNumber: 'SKKT106/16E',
2025-09-17T00:39:56.925442Z	    pricing: {
2025-09-17T00:39:56.925612Z	      currency: 'CNY',
2025-09-17T00:39:56.925743Z	      leadTime: null,
2025-09-17T00:39:56.925861Z	      moq: null,
2025-09-17T00:39:56.925955Z	      price: null,
2025-09-17T00:39:56.92607Z	      tiers: null
2025-09-17T00:39:56.926138Z	    },
2025-09-17T00:39:56.926241Z	    shortDescription: 'SKKT106/16E',
2025-09-17T00:39:56.926385Z	    slug: 'SKKT106/16E',
2025-09-17T00:39:56.926538Z	    title: 'SKKT106/16E'
2025-09-17T00:39:56.926688Z	  }
2025-09-17T00:39:56.926804Z	}
2025-09-17T00:39:56.926948Z	Products fetch result: {
2025-09-17T00:39:56.927065Z	  totalProducts: 1,
2025-09-17T00:39:56.927174Z	  fetchedProducts: 1,
2025-09-17T00:39:56.927382Z	  firstProduct: {
2025-09-17T00:39:56.927674Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-17T00:39:56.928004Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-17T00:39:56.928148Z	    _type: 'product',
2025-09-17T00:39:56.928262Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-17T00:39:56.928595Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-17T00:39:56.932181Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:56.932372Z	    image: null,
2025-09-17T00:39:56.93266Z	    inventory: {
2025-09-17T00:39:56.932989Z	      inStock: true,
2025-09-17T00:39:56.933159Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-17T00:39:56.933327Z	      quantity: 0,
2025-09-17T00:39:56.933528Z	      status: 'in_stock',
2025-09-17T00:39:56.933678Z	      warehouse: null
2025-09-17T00:39:56.933827Z	    },
2025-09-17T00:39:56.933954Z	    isActive: true,
2025-09-17T00:39:56.934243Z	    isFeatured: false,
2025-09-17T00:39:56.934371Z	    isNew: false,
2025-09-17T00:39:56.934501Z	    partNumber: 'SKKT106/16E',
2025-09-17T00:39:56.934783Z	    pricing: {
2025-09-17T00:39:56.934898Z	      currency: 'CNY',
2025-09-17T00:39:56.935014Z	      leadTime: null,
2025-09-17T00:39:56.935308Z	      moq: null,
2025-09-17T00:39:56.935446Z	      price: null,
2025-09-17T00:39:56.935564Z	      tiers: null
2025-09-17T00:39:56.935674Z	    },
2025-09-17T00:39:56.935809Z	    shortDescription: 'SKKT106/16E',
2025-09-17T00:39:56.936114Z	    slug: 'SKKT106/16E',
2025-09-17T00:39:56.936193Z	    title: 'SKKT106/16E'
2025-09-17T00:39:56.936389Z	  }
2025-09-17T00:39:56.936461Z	}
2025-09-17T00:39:56.936518Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.93787Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:56.939982Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-17T00:39:56.940091Z	Fetching products with query: 
2025-09-17T00:39:56.940155Z	    {
2025-09-17T00:39:56.940216Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.940788Z	        
2025-09-17T00:39:56.941049Z	    _id,
2025-09-17T00:39:56.941189Z	    _type,
2025-09-17T00:39:56.94147Z	    partNumber,
2025-09-17T00:39:56.9416Z	    "slug": slug.current,
2025-09-17T00:39:56.942146Z	    title,
2025-09-17T00:39:56.942655Z	    shortDescription,
2025-09-17T00:39:56.942795Z	    image,
2025-09-17T00:39:56.943113Z	    brand->{
2025-09-17T00:39:56.94325Z	      name,
2025-09-17T00:39:56.943554Z	      "slug": slug.current,
2025-09-17T00:39:56.943675Z	      logo
2025-09-17T00:39:56.94448Z	    },
2025-09-17T00:39:56.944851Z	    category->{
2025-09-17T00:39:56.94502Z	      name,
2025-09-17T00:39:56.945282Z	      "slug": slug.current
2025-09-17T00:39:56.945427Z	    },
2025-09-17T00:39:56.945543Z	    pricing{
2025-09-17T00:39:56.945647Z	      currency,
2025-09-17T00:39:56.945749Z	      tiers[]{
2025-09-17T00:39:56.945877Z	        quantity,
2025-09-17T00:39:56.945981Z	        price,
2025-09-17T00:39:56.946088Z	        unit
2025-09-17T00:39:56.946189Z	      },
2025-09-17T00:39:56.946336Z	      moq,
2025-09-17T00:39:56.946451Z	      leadTime,
2025-09-17T00:39:56.946611Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.94683Z	      "price": tiers[0].price,
2025-09-17T00:39:56.947077Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.947331Z	    },
2025-09-17T00:39:56.947475Z	    inventory{
2025-09-17T00:39:56.9476Z	      quantity,
2025-09-17T00:39:56.947728Z	      status,
2025-09-17T00:39:56.947837Z	      warehouse,
2025-09-17T00:39:56.947944Z	      lastUpdated,
2025-09-17T00:39:56.948056Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.948166Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.948294Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.948411Z	    },
2025-09-17T00:39:56.948518Z	    isActive,
2025-09-17T00:39:56.948624Z	    isFeatured,
2025-09-17T00:39:56.948751Z	    isNew,
2025-09-17T00:39:56.948858Z	    _createdAt,
2025-09-17T00:39:56.94896Z	    _updatedAt
2025-09-17T00:39:56.949064Z	  
2025-09-17T00:39:56.949168Z	      },
2025-09-17T00:39:56.949288Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-17T00:39:56.94941Z	    }
2025-09-17T00:39:56.949522Z	  
2025-09-17T00:39:56.949626Z	Query parameters: {
2025-09-17T00:39:56.949751Z	  limit: 8,
2025-09-17T00:39:56.949857Z	  offset: 0,
2025-09-17T00:39:56.949963Z	  category: undefined,
2025-09-17T00:39:56.950082Z	  brand: 'cree',
2025-09-17T00:39:56.950192Z	  featured: undefined
2025-09-17T00:39:56.950327Z	}
2025-09-17T00:39:56.950445Z	Fetching solutions with query: 
2025-09-17T00:39:56.950569Z	    {
2025-09-17T00:39:56.950689Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.950815Z	        
2025-09-17T00:39:56.95093Z	    _id,
2025-09-17T00:39:56.951039Z	    title,
2025-09-17T00:39:56.951146Z	    "slug": slug.current,
2025-09-17T00:39:56.951243Z	    summary,
2025-09-17T00:39:56.951363Z	    description,
2025-09-17T00:39:56.95147Z	    coverImage,
2025-09-17T00:39:56.951579Z	    primaryBrand->{
2025-09-17T00:39:56.951691Z	      _id,
2025-09-17T00:39:56.951796Z	      name,
2025-09-17T00:39:56.951901Z	      "slug": slug.current,
2025-09-17T00:39:56.952059Z	      logo
2025-09-17T00:39:56.952223Z	    },
2025-09-17T00:39:56.952347Z	    relatedBrands[]->{
2025-09-17T00:39:56.952445Z	      _id,
2025-09-17T00:39:56.952562Z	      name,
2025-09-17T00:39:56.95269Z	      "slug": slug.current,
2025-09-17T00:39:56.952815Z	      logo
2025-09-17T00:39:56.952921Z	    },
2025-09-17T00:39:56.953199Z	    targetMarket,
2025-09-17T00:39:56.95337Z	    complexity,
2025-09-17T00:39:56.953483Z	    publishedAt,
2025-09-17T00:39:56.953597Z	    isPublished,
2025-09-17T00:39:56.953704Z	    isFeatured,
2025-09-17T00:39:56.956352Z	    viewCount,
2025-09-17T00:39:56.956469Z	    _createdAt,
2025-09-17T00:39:56.956533Z	    _updatedAt
2025-09-17T00:39:56.956592Z	  
2025-09-17T00:39:56.956646Z	      },
2025-09-17T00:39:56.95672Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-17T00:39:56.956779Z	    }
2025-09-17T00:39:56.956832Z	  
2025-09-17T00:39:56.956885Z	Query parameters: {
2025-09-17T00:39:56.956946Z	  limit: 4,
2025-09-17T00:39:56.956999Z	  offset: 0,
2025-09-17T00:39:56.957051Z	  targetMarket: undefined,
2025-09-17T00:39:56.957104Z	  brand: 'cree',
2025-09-17T00:39:56.957157Z	  featured: undefined
2025-09-17T00:39:56.957209Z	}
2025-09-17T00:39:56.957285Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-17T00:39:56.957429Z	Fetching products with query: 
2025-09-17T00:39:56.957534Z	    {
2025-09-17T00:39:56.957614Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:56.957684Z	        
2025-09-17T00:39:56.95774Z	    _id,
2025-09-17T00:39:56.957799Z	    _type,
2025-09-17T00:39:56.957854Z	    partNumber,
2025-09-17T00:39:56.957913Z	    "slug": slug.current,
2025-09-17T00:39:56.95797Z	    title,
2025-09-17T00:39:56.958022Z	    shortDescription,
2025-09-17T00:39:56.958075Z	    image,
2025-09-17T00:39:56.958129Z	    brand->{
2025-09-17T00:39:56.958181Z	      name,
2025-09-17T00:39:56.958233Z	      "slug": slug.current,
2025-09-17T00:39:56.958318Z	      logo
2025-09-17T00:39:56.958383Z	    },
2025-09-17T00:39:56.958437Z	    category->{
2025-09-17T00:39:56.958492Z	      name,
2025-09-17T00:39:56.958545Z	      "slug": slug.current
2025-09-17T00:39:56.958597Z	    },
2025-09-17T00:39:56.958649Z	    pricing{
2025-09-17T00:39:56.95871Z	      currency,
2025-09-17T00:39:56.958764Z	      tiers[]{
2025-09-17T00:39:56.958818Z	        quantity,
2025-09-17T00:39:56.958878Z	        price,
2025-09-17T00:39:56.958934Z	        unit
2025-09-17T00:39:56.958986Z	      },
2025-09-17T00:39:56.959038Z	      moq,
2025-09-17T00:39:56.95909Z	      leadTime,
2025-09-17T00:39:56.959144Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:56.959199Z	      "price": tiers[0].price,
2025-09-17T00:39:56.959253Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:56.959323Z	    },
2025-09-17T00:39:56.959384Z	    inventory{
2025-09-17T00:39:56.959439Z	      quantity,
2025-09-17T00:39:56.959493Z	      status,
2025-09-17T00:39:56.959545Z	      warehouse,
2025-09-17T00:39:56.959611Z	      lastUpdated,
2025-09-17T00:39:56.959673Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:56.959728Z	      "inStock": status == "in_stock",
2025-09-17T00:39:56.959781Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:56.959846Z	    },
2025-09-17T00:39:56.959898Z	    isActive,
2025-09-17T00:39:56.959954Z	    isFeatured,
2025-09-17T00:39:56.960006Z	    isNew,
2025-09-17T00:39:56.960057Z	    _createdAt,
2025-09-17T00:39:56.960113Z	    _updatedAt
2025-09-17T00:39:56.96017Z	  
2025-09-17T00:39:56.960224Z	      },
2025-09-17T00:39:56.960299Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-17T00:39:56.960374Z	    }
2025-09-17T00:39:56.960428Z	  
2025-09-17T00:39:56.960481Z	Query parameters: {
2025-09-17T00:39:56.960535Z	  limit: 8,
2025-09-17T00:39:56.960587Z	  offset: 0,
2025-09-17T00:39:56.96064Z	  category: undefined,
2025-09-17T00:39:56.960699Z	  brand: 'cree',
2025-09-17T00:39:56.960751Z	  featured: undefined
2025-09-17T00:39:56.960804Z	}
2025-09-17T00:39:56.960857Z	Fetching solutions with query: 
2025-09-17T00:39:56.960909Z	    {
2025-09-17T00:39:56.960968Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:56.961029Z	        
2025-09-17T00:39:56.961083Z	    _id,
2025-09-17T00:39:56.961135Z	    title,
2025-09-17T00:39:56.961189Z	    "slug": slug.current,
2025-09-17T00:39:56.96124Z	    summary,
2025-09-17T00:39:56.989211Z	    description,
2025-09-17T00:39:56.989831Z	    coverImage,
2025-09-17T00:39:56.989975Z	    primaryBrand->{
2025-09-17T00:39:56.990229Z	      _id,
2025-09-17T00:39:56.990696Z	      name,
2025-09-17T00:39:56.991687Z	      "slug": slug.current,
2025-09-17T00:39:56.991905Z	      logo
2025-09-17T00:39:56.992182Z	    },
2025-09-17T00:39:56.99233Z	    relatedBrands[]->{
2025-09-17T00:39:56.992479Z	      _id,
2025-09-17T00:39:56.992669Z	      name,
2025-09-17T00:39:56.992804Z	      "slug": slug.current,
2025-09-17T00:39:56.993792Z	      logo
2025-09-17T00:39:56.994227Z	    },
2025-09-17T00:39:56.994469Z	    targetMarket,
2025-09-17T00:39:56.994659Z	    complexity,
2025-09-17T00:39:56.994839Z	    publishedAt,
2025-09-17T00:39:56.995006Z	    isPublished,
2025-09-17T00:39:56.995392Z	    isFeatured,
2025-09-17T00:39:56.995545Z	    viewCount,
2025-09-17T00:39:56.995666Z	    _createdAt,
2025-09-17T00:39:56.995814Z	    _updatedAt
2025-09-17T00:39:56.995962Z	  
2025-09-17T00:39:56.996101Z	      },
2025-09-17T00:39:56.996255Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-17T00:39:56.996427Z	    }
2025-09-17T00:39:56.99655Z	  
2025-09-17T00:39:56.996683Z	Query parameters: {
2025-09-17T00:39:56.996827Z	  limit: 4,
2025-09-17T00:39:56.997291Z	  offset: 0,
2025-09-17T00:39:56.997471Z	  targetMarket: undefined,
2025-09-17T00:39:56.997598Z	  brand: 'cree',
2025-09-17T00:39:56.997736Z	  featured: undefined
2025-09-17T00:39:56.997855Z	}
2025-09-17T00:39:56.998212Z	Solutions fetch result: {
2025-09-17T00:39:56.998555Z	  totalSolutions: 6,
2025-09-17T00:39:56.998723Z	  fetchedSolutions: 4,
2025-09-17T00:39:56.998848Z	  firstSolution: {
2025-09-17T00:39:56.998966Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-17T00:39:56.999082Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-17T00:39:56.999196Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-17T00:39:56.999588Z	    complexity: 'medium',
2025-09-17T00:39:56.999727Z	    coverImage: null,
2025-09-17T00:39:56.999866Z	    description: [ [Object] ],
2025-09-17T00:39:57.000181Z	    isFeatured: false,
2025-09-17T00:39:57.000528Z	    isPublished: true,
2025-09-17T00:39:57.000674Z	    primaryBrand: {
2025-09-17T00:39:57.000808Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:57.000922Z	      logo: null,
2025-09-17T00:39:57.001034Z	      name: 'CREE',
2025-09-17T00:39:57.001143Z	      slug: 'cree'
2025-09-17T00:39:57.001254Z	    },
2025-09-17T00:39:57.001389Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-17T00:39:57.001499Z	    relatedBrands: null,
2025-09-17T00:39:57.001602Z	    slug: '11111',
2025-09-17T00:39:57.001724Z	    summary: '11111',
2025-09-17T00:39:57.001831Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:57.002212Z	    title: '11111',
2025-09-17T00:39:57.002319Z	    viewCount: 0
2025-09-17T00:39:57.00279Z	  }
2025-09-17T00:39:57.003187Z	}
2025-09-17T00:39:57.003483Z	Solutions fetch result: {
2025-09-17T00:39:57.003626Z	  totalSolutions: 6,
2025-09-17T00:39:57.003744Z	  fetchedSolutions: 4,
2025-09-17T00:39:57.003838Z	  firstSolution: {
2025-09-17T00:39:57.003933Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-17T00:39:57.004298Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-17T00:39:57.004423Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-17T00:39:57.004517Z	    complexity: 'medium',
2025-09-17T00:39:57.004941Z	    coverImage: null,
2025-09-17T00:39:57.005883Z	    description: [ [Object] ],
2025-09-17T00:39:57.006045Z	    isFeatured: false,
2025-09-17T00:39:57.00623Z	    isPublished: true,
2025-09-17T00:39:57.006356Z	    primaryBrand: {
2025-09-17T00:39:57.006465Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:57.00657Z	      logo: null,
2025-09-17T00:39:57.006683Z	      name: 'CREE',
2025-09-17T00:39:57.006792Z	      slug: 'cree'
2025-09-17T00:39:57.006898Z	    },
2025-09-17T00:39:57.007003Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-17T00:39:57.007128Z	    relatedBrands: null,
2025-09-17T00:39:57.007257Z	    slug: '11111',
2025-09-17T00:39:57.007416Z	    summary: '11111',
2025-09-17T00:39:57.007558Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:57.007683Z	    title: '11111',
2025-09-17T00:39:57.007789Z	    viewCount: 0
2025-09-17T00:39:57.007884Z	  }
2025-09-17T00:39:57.00798Z	}
2025-09-17T00:39:57.008104Z	✅ [getBrandData] Found brand: CREE
2025-09-17T00:39:57.008213Z	✅ [getBrandData] Found brand: CREE
2025-09-17T00:39:57.008327Z	Products fetch result: {
2025-09-17T00:39:57.008432Z	  totalProducts: 4,
2025-09-17T00:39:57.008539Z	  fetchedProducts: 4,
2025-09-17T00:39:57.008674Z	  firstProduct: {
2025-09-17T00:39:57.008786Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-17T00:39:57.00889Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-17T00:39:57.008999Z	    _type: 'product',
2025-09-17T00:39:57.009121Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-17T00:39:57.009241Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-17T00:39:57.009376Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:57.009519Z	    image: null,
2025-09-17T00:39:57.009638Z	    inventory: {
2025-09-17T00:39:57.00975Z	      inStock: true,
2025-09-17T00:39:57.00986Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-17T00:39:57.00996Z	      quantity: 0,
2025-09-17T00:39:57.010105Z	      status: 'in_stock',
2025-09-17T00:39:57.010227Z	      warehouse: null
2025-09-17T00:39:57.010352Z	    },
2025-09-17T00:39:57.010447Z	    isActive: true,
2025-09-17T00:39:57.010537Z	    isFeatured: false,
2025-09-17T00:39:57.010627Z	    isNew: false,
2025-09-17T00:39:57.01072Z	    partNumber: '11111',
2025-09-17T00:39:57.010813Z	    pricing: {
2025-09-17T00:39:57.010904Z	      currency: 'CNY',
2025-09-17T00:39:57.010993Z	      leadTime: null,
2025-09-17T00:39:57.011102Z	      moq: null,
2025-09-17T00:39:57.011207Z	      price: null,
2025-09-17T00:39:57.011337Z	      tiers: null
2025-09-17T00:39:57.011457Z	    },
2025-09-17T00:39:57.011557Z	    shortDescription: '11111',
2025-09-17T00:39:57.011649Z	    slug: 'sic mosfet',
2025-09-17T00:39:57.011743Z	    title: '111111'
2025-09-17T00:39:57.011847Z	  }
2025-09-17T00:39:57.011945Z	}
2025-09-17T00:39:57.012073Z	Products fetch result: {
2025-09-17T00:39:57.012251Z	  totalProducts: 4,
2025-09-17T00:39:57.01273Z	  fetchedProducts: 4,
2025-09-17T00:39:57.013446Z	  firstProduct: {
2025-09-17T00:39:57.013576Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-17T00:39:57.013778Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-17T00:39:57.013882Z	    _type: 'product',
2025-09-17T00:39:57.01404Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-17T00:39:57.014148Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-17T00:39:57.014253Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:57.014387Z	    image: null,
2025-09-17T00:39:57.014501Z	    inventory: {
2025-09-17T00:39:57.014601Z	      inStock: true,
2025-09-17T00:39:57.014746Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-17T00:39:57.014896Z	      quantity: 0,
2025-09-17T00:39:57.015052Z	      status: 'in_stock',
2025-09-17T00:39:57.015221Z	      warehouse: null
2025-09-17T00:39:57.015371Z	    },
2025-09-17T00:39:57.015491Z	    isActive: true,
2025-09-17T00:39:57.015599Z	    isFeatured: false,
2025-09-17T00:39:57.015727Z	    isNew: false,
2025-09-17T00:39:57.015837Z	    partNumber: '11111',
2025-09-17T00:39:57.015941Z	    pricing: {
2025-09-17T00:39:57.016046Z	      currency: 'CNY',
2025-09-17T00:39:57.016158Z	      leadTime: null,
2025-09-17T00:39:57.016262Z	      moq: null,
2025-09-17T00:39:57.016406Z	      price: null,
2025-09-17T00:39:57.016513Z	      tiers: null
2025-09-17T00:39:57.016613Z	    },
2025-09-17T00:39:57.016731Z	    shortDescription: '11111',
2025-09-17T00:39:57.016836Z	    slug: 'sic mosfet',
2025-09-17T00:39:57.01693Z	    title: '111111'
2025-09-17T00:39:57.017034Z	  }
2025-09-17T00:39:57.017138Z	}
2025-09-17T00:39:57.017249Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-17T00:39:57.017388Z	Fetching products with query: 
2025-09-17T00:39:57.017497Z	    {
2025-09-17T00:39:57.017599Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.017737Z	        
2025-09-17T00:39:57.017851Z	    _id,
2025-09-17T00:39:57.017958Z	    _type,
2025-09-17T00:39:57.018054Z	    partNumber,
2025-09-17T00:39:57.018146Z	    "slug": slug.current,
2025-09-17T00:39:57.018247Z	    title,
2025-09-17T00:39:57.018377Z	    shortDescription,
2025-09-17T00:39:57.018491Z	    image,
2025-09-17T00:39:57.018595Z	    brand->{
2025-09-17T00:39:57.018703Z	      name,
2025-09-17T00:39:57.018806Z	      "slug": slug.current,
2025-09-17T00:39:57.018966Z	      logo
2025-09-17T00:39:57.019075Z	    },
2025-09-17T00:39:57.019185Z	    category->{
2025-09-17T00:39:57.019309Z	      name,
2025-09-17T00:39:57.019422Z	      "slug": slug.current
2025-09-17T00:39:57.019538Z	    },
2025-09-17T00:39:57.019653Z	    pricing{
2025-09-17T00:39:57.019782Z	      currency,
2025-09-17T00:39:57.01989Z	      tiers[]{
2025-09-17T00:39:57.020181Z	        quantity,
2025-09-17T00:39:57.020322Z	        price,
2025-09-17T00:39:57.020919Z	        unit
2025-09-17T00:39:57.021072Z	      },
2025-09-17T00:39:57.021189Z	      moq,
2025-09-17T00:39:57.02134Z	      leadTime,
2025-09-17T00:39:57.021467Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.021597Z	      "price": tiers[0].price,
2025-09-17T00:39:57.021725Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.021829Z	    },
2025-09-17T00:39:57.021938Z	    inventory{
2025-09-17T00:39:57.02205Z	      quantity,
2025-09-17T00:39:57.022167Z	      status,
2025-09-17T00:39:57.022304Z	      warehouse,
2025-09-17T00:39:57.022473Z	      lastUpdated,
2025-09-17T00:39:57.022594Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.022722Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.022832Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.022933Z	    },
2025-09-17T00:39:57.02304Z	    isActive,
2025-09-17T00:39:57.023144Z	    isFeatured,
2025-09-17T00:39:57.023222Z	    isNew,
2025-09-17T00:39:57.023313Z	    _createdAt,
2025-09-17T00:39:57.023382Z	    _updatedAt
2025-09-17T00:39:57.023438Z	  
2025-09-17T00:39:57.023594Z	      },
2025-09-17T00:39:57.023693Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-17T00:39:57.023777Z	    }
2025-09-17T00:39:57.023869Z	  
2025-09-17T00:39:57.023947Z	Query parameters: {
2025-09-17T00:39:57.024003Z	  limit: 8,
2025-09-17T00:39:57.02408Z	  offset: 0,
2025-09-17T00:39:57.024147Z	  category: undefined,
2025-09-17T00:39:57.024212Z	  brand: 'pi',
2025-09-17T00:39:57.024327Z	  featured: undefined
2025-09-17T00:39:57.024396Z	}
2025-09-17T00:39:57.024453Z	Fetching solutions with query: 
2025-09-17T00:39:57.024508Z	    {
2025-09-17T00:39:57.024562Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.024619Z	        
2025-09-17T00:39:57.024681Z	    _id,
2025-09-17T00:39:57.024735Z	    title,
2025-09-17T00:39:57.024788Z	    "slug": slug.current,
2025-09-17T00:39:57.024843Z	    summary,
2025-09-17T00:39:57.024897Z	    description,
2025-09-17T00:39:57.02495Z	    coverImage,
2025-09-17T00:39:57.025004Z	    primaryBrand->{
2025-09-17T00:39:57.025057Z	      _id,
2025-09-17T00:39:57.025118Z	      name,
2025-09-17T00:39:57.025172Z	      "slug": slug.current,
2025-09-17T00:39:57.025227Z	      logo
2025-09-17T00:39:57.025356Z	    },
2025-09-17T00:39:57.025532Z	    relatedBrands[]->{
2025-09-17T00:39:57.025964Z	      _id,
2025-09-17T00:39:57.026134Z	      name,
2025-09-17T00:39:57.026257Z	      "slug": slug.current,
2025-09-17T00:39:57.026374Z	      logo
2025-09-17T00:39:57.026475Z	    },
2025-09-17T00:39:57.026569Z	    targetMarket,
2025-09-17T00:39:57.026662Z	    complexity,
2025-09-17T00:39:57.026748Z	    publishedAt,
2025-09-17T00:39:57.026849Z	    isPublished,
2025-09-17T00:39:57.02695Z	    isFeatured,
2025-09-17T00:39:57.027064Z	    viewCount,
2025-09-17T00:39:57.027164Z	    _createdAt,
2025-09-17T00:39:57.027254Z	    _updatedAt
2025-09-17T00:39:57.027364Z	  
2025-09-17T00:39:57.02747Z	      },
2025-09-17T00:39:57.027566Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-17T00:39:57.027672Z	    }
2025-09-17T00:39:57.027783Z	  
2025-09-17T00:39:57.027877Z	Query parameters: {
2025-09-17T00:39:57.027967Z	  limit: 4,
2025-09-17T00:39:57.028059Z	  offset: 0,
2025-09-17T00:39:57.028151Z	  targetMarket: undefined,
2025-09-17T00:39:57.028241Z	  brand: 'pi',
2025-09-17T00:39:57.028353Z	  featured: undefined
2025-09-17T00:39:57.028445Z	}
2025-09-17T00:39:57.028534Z	✅ [getBrandData] Found brand: PI
2025-09-17T00:39:57.028645Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.02874Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.028861Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-17T00:39:57.028967Z	Fetching products with query: 
2025-09-17T00:39:57.029068Z	    {
2025-09-17T00:39:57.029168Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.029262Z	        
2025-09-17T00:39:57.029362Z	    _id,
2025-09-17T00:39:57.029449Z	    _type,
2025-09-17T00:39:57.029541Z	    partNumber,
2025-09-17T00:39:57.029644Z	    "slug": slug.current,
2025-09-17T00:39:57.029733Z	    title,
2025-09-17T00:39:57.029833Z	    shortDescription,
2025-09-17T00:39:57.029917Z	    image,
2025-09-17T00:39:57.030003Z	    brand->{
2025-09-17T00:39:57.030094Z	      name,
2025-09-17T00:39:57.030174Z	      "slug": slug.current,
2025-09-17T00:39:57.030256Z	      logo
2025-09-17T00:39:57.030366Z	    },
2025-09-17T00:39:57.030436Z	    category->{
2025-09-17T00:39:57.030525Z	      name,
2025-09-17T00:39:57.030598Z	      "slug": slug.current
2025-09-17T00:39:57.030693Z	    },
2025-09-17T00:39:57.030789Z	    pricing{
2025-09-17T00:39:57.030906Z	      currency,
2025-09-17T00:39:57.030994Z	      tiers[]{
2025-09-17T00:39:57.031085Z	        quantity,
2025-09-17T00:39:57.031165Z	        price,
2025-09-17T00:39:57.031233Z	        unit
2025-09-17T00:39:57.031337Z	      },
2025-09-17T00:39:57.031403Z	      moq,
2025-09-17T00:39:57.031886Z	      leadTime,
2025-09-17T00:39:57.032173Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.032472Z	      "price": tiers[0].price,
2025-09-17T00:39:57.03257Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.032699Z	    },
2025-09-17T00:39:57.03276Z	    inventory{
2025-09-17T00:39:57.032817Z	      quantity,
2025-09-17T00:39:57.032881Z	      status,
2025-09-17T00:39:57.033052Z	      warehouse,
2025-09-17T00:39:57.045331Z	      lastUpdated,
2025-09-17T00:39:57.045512Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.045597Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.045661Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.045717Z	    },
2025-09-17T00:39:57.04578Z	    isActive,
2025-09-17T00:39:57.045837Z	    isFeatured,
2025-09-17T00:39:57.045891Z	    isNew,
2025-09-17T00:39:57.045947Z	    _createdAt,
2025-09-17T00:39:57.046004Z	    _updatedAt
2025-09-17T00:39:57.046062Z	  
2025-09-17T00:39:57.046116Z	      },
2025-09-17T00:39:57.04617Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-17T00:39:57.04624Z	    }
2025-09-17T00:39:57.046328Z	  
2025-09-17T00:39:57.046391Z	Query parameters: {
2025-09-17T00:39:57.046445Z	  limit: 8,
2025-09-17T00:39:57.046499Z	  offset: 0,
2025-09-17T00:39:57.046552Z	  category: undefined,
2025-09-17T00:39:57.046605Z	  brand: 'pi',
2025-09-17T00:39:57.046664Z	  featured: undefined
2025-09-17T00:39:57.04672Z	}
2025-09-17T00:39:57.046921Z	Fetching solutions with query: 
2025-09-17T00:39:57.047105Z	    {
2025-09-17T00:39:57.04724Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.0474Z	        
2025-09-17T00:39:57.047523Z	    _id,
2025-09-17T00:39:57.047637Z	    title,
2025-09-17T00:39:57.047772Z	    "slug": slug.current,
2025-09-17T00:39:57.04789Z	    summary,
2025-09-17T00:39:57.048004Z	    description,
2025-09-17T00:39:57.048101Z	    coverImage,
2025-09-17T00:39:57.048208Z	    primaryBrand->{
2025-09-17T00:39:57.048326Z	      _id,
2025-09-17T00:39:57.048493Z	      name,
2025-09-17T00:39:57.048609Z	      "slug": slug.current,
2025-09-17T00:39:57.048716Z	      logo
2025-09-17T00:39:57.048828Z	    },
2025-09-17T00:39:57.048923Z	    relatedBrands[]->{
2025-09-17T00:39:57.049017Z	      _id,
2025-09-17T00:39:57.049108Z	      name,
2025-09-17T00:39:57.049217Z	      "slug": slug.current,
2025-09-17T00:39:57.04937Z	      logo
2025-09-17T00:39:57.049495Z	    },
2025-09-17T00:39:57.049609Z	    targetMarket,
2025-09-17T00:39:57.04972Z	    complexity,
2025-09-17T00:39:57.049835Z	    publishedAt,
2025-09-17T00:39:57.049945Z	    isPublished,
2025-09-17T00:39:57.050052Z	    isFeatured,
2025-09-17T00:39:57.050156Z	    viewCount,
2025-09-17T00:39:57.050253Z	    _createdAt,
2025-09-17T00:39:57.050373Z	    _updatedAt
2025-09-17T00:39:57.050475Z	  
2025-09-17T00:39:57.050575Z	      },
2025-09-17T00:39:57.050676Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-17T00:39:57.050786Z	    }
2025-09-17T00:39:57.050896Z	  
2025-09-17T00:39:57.051023Z	Query parameters: {
2025-09-17T00:39:57.051128Z	  limit: 4,
2025-09-17T00:39:57.051228Z	  offset: 0,
2025-09-17T00:39:57.051348Z	  targetMarket: undefined,
2025-09-17T00:39:57.051453Z	  brand: 'pi',
2025-09-17T00:39:57.051554Z	  featured: undefined
2025-09-17T00:39:57.051666Z	}
2025-09-17T00:39:57.051779Z	✅ [getBrandData] Found brand: PI
2025-09-17T00:39:57.051891Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.05201Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.052131Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-17T00:39:57.052233Z	Fetching products with query: 
2025-09-17T00:39:57.052355Z	    {
2025-09-17T00:39:57.052467Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.05259Z	        
2025-09-17T00:39:57.052705Z	    _id,
2025-09-17T00:39:57.052823Z	    _type,
2025-09-17T00:39:57.052927Z	    partNumber,
2025-09-17T00:39:57.053038Z	    "slug": slug.current,
2025-09-17T00:39:57.053141Z	    title,
2025-09-17T00:39:57.053249Z	    shortDescription,
2025-09-17T00:39:57.053384Z	    image,
2025-09-17T00:39:57.05349Z	    brand->{
2025-09-17T00:39:57.053595Z	      name,
2025-09-17T00:39:57.053693Z	      "slug": slug.current,
2025-09-17T00:39:57.053811Z	      logo
2025-09-17T00:39:57.053915Z	    },
2025-09-17T00:39:57.054014Z	    category->{
2025-09-17T00:39:57.05412Z	      name,
2025-09-17T00:39:57.054225Z	      "slug": slug.current
2025-09-17T00:39:57.054367Z	    },
2025-09-17T00:39:57.054476Z	    pricing{
2025-09-17T00:39:57.054597Z	      currency,
2025-09-17T00:39:57.054698Z	      tiers[]{
2025-09-17T00:39:57.054829Z	        quantity,
2025-09-17T00:39:57.054935Z	        price,
2025-09-17T00:39:57.055044Z	        unit
2025-09-17T00:39:57.055145Z	      },
2025-09-17T00:39:57.055257Z	      moq,
2025-09-17T00:39:57.055386Z	      leadTime,
2025-09-17T00:39:57.055505Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.055623Z	      "price": tiers[0].price,
2025-09-17T00:39:57.055733Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.055852Z	    },
2025-09-17T00:39:57.055976Z	    inventory{
2025-09-17T00:39:57.056094Z	      quantity,
2025-09-17T00:39:57.056193Z	      status,
2025-09-17T00:39:57.056318Z	      warehouse,
2025-09-17T00:39:57.056431Z	      lastUpdated,
2025-09-17T00:39:57.056536Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.056647Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.056747Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.056858Z	    },
2025-09-17T00:39:57.056968Z	    isActive,
2025-09-17T00:39:57.05715Z	    isFeatured,
2025-09-17T00:39:57.057292Z	    isNew,
2025-09-17T00:39:57.057408Z	    _createdAt,
2025-09-17T00:39:57.057515Z	    _updatedAt
2025-09-17T00:39:57.057622Z	  
2025-09-17T00:39:57.057727Z	      },
2025-09-17T00:39:57.057849Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-17T00:39:57.057977Z	    }
2025-09-17T00:39:57.058087Z	  
2025-09-17T00:39:57.058194Z	Query parameters: {
2025-09-17T00:39:57.058309Z	  limit: 8,
2025-09-17T00:39:57.058407Z	  offset: 0,
2025-09-17T00:39:57.058505Z	  category: undefined,
2025-09-17T00:39:57.058612Z	  brand: 'epcos',
2025-09-17T00:39:57.058712Z	  featured: undefined
2025-09-17T00:39:57.058828Z	}
2025-09-17T00:39:57.058939Z	Fetching solutions with query: 
2025-09-17T00:39:57.059047Z	    {
2025-09-17T00:39:57.059159Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.059286Z	        
2025-09-17T00:39:57.059397Z	    _id,
2025-09-17T00:39:57.059498Z	    title,
2025-09-17T00:39:57.059594Z	    "slug": slug.current,
2025-09-17T00:39:57.059701Z	    summary,
2025-09-17T00:39:57.059837Z	    description,
2025-09-17T00:39:57.059949Z	    coverImage,
2025-09-17T00:39:57.060065Z	    primaryBrand->{
2025-09-17T00:39:57.060184Z	      _id,
2025-09-17T00:39:57.060309Z	      name,
2025-09-17T00:39:57.06042Z	      "slug": slug.current,
2025-09-17T00:39:57.060518Z	      logo
2025-09-17T00:39:57.060622Z	    },
2025-09-17T00:39:57.060719Z	    relatedBrands[]->{
2025-09-17T00:39:57.060835Z	      _id,
2025-09-17T00:39:57.060943Z	      name,
2025-09-17T00:39:57.06104Z	      "slug": slug.current,
2025-09-17T00:39:57.061143Z	      logo
2025-09-17T00:39:57.061256Z	    },
2025-09-17T00:39:57.061379Z	    targetMarket,
2025-09-17T00:39:57.061482Z	    complexity,
2025-09-17T00:39:57.061584Z	    publishedAt,
2025-09-17T00:39:57.061681Z	    isPublished,
2025-09-17T00:39:57.061786Z	    isFeatured,
2025-09-17T00:39:57.061902Z	    viewCount,
2025-09-17T00:39:57.062009Z	    _createdAt,
2025-09-17T00:39:57.062121Z	    _updatedAt
2025-09-17T00:39:57.062227Z	  
2025-09-17T00:39:57.062349Z	      },
2025-09-17T00:39:57.062454Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-17T00:39:57.062569Z	    }
2025-09-17T00:39:57.062672Z	  
2025-09-17T00:39:57.062791Z	Query parameters: {
2025-09-17T00:39:57.062903Z	  limit: 4,
2025-09-17T00:39:57.063009Z	  offset: 0,
2025-09-17T00:39:57.063112Z	  targetMarket: undefined,
2025-09-17T00:39:57.063215Z	  brand: 'epcos',
2025-09-17T00:39:57.063348Z	  featured: undefined
2025-09-17T00:39:57.063474Z	}
2025-09-17T00:39:57.063584Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-17T00:39:57.063689Z	Fetching products with query: 
2025-09-17T00:39:57.0638Z	    {
2025-09-17T00:39:57.063911Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.064018Z	        
2025-09-17T00:39:57.064127Z	    _id,
2025-09-17T00:39:57.064247Z	    _type,
2025-09-17T00:39:57.064366Z	    partNumber,
2025-09-17T00:39:57.064465Z	    "slug": slug.current,
2025-09-17T00:39:57.064578Z	    title,
2025-09-17T00:39:57.064684Z	    shortDescription,
2025-09-17T00:39:57.064799Z	    image,
2025-09-17T00:39:57.064912Z	    brand->{
2025-09-17T00:39:57.065027Z	      name,
2025-09-17T00:39:57.065139Z	      "slug": slug.current,
2025-09-17T00:39:57.065251Z	      logo
2025-09-17T00:39:57.065378Z	    },
2025-09-17T00:39:57.065488Z	    category->{
2025-09-17T00:39:57.065589Z	      name,
2025-09-17T00:39:57.06569Z	      "slug": slug.current
2025-09-17T00:39:57.065828Z	    },
2025-09-17T00:39:57.065952Z	    pricing{
2025-09-17T00:39:57.066063Z	      currency,
2025-09-17T00:39:57.066178Z	      tiers[]{
2025-09-17T00:39:57.066306Z	        quantity,
2025-09-17T00:39:57.066422Z	        price,
2025-09-17T00:39:57.066533Z	        unit
2025-09-17T00:39:57.066649Z	      },
2025-09-17T00:39:57.06677Z	      moq,
2025-09-17T00:39:57.066868Z	      leadTime,
2025-09-17T00:39:57.066969Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.067081Z	      "price": tiers[0].price,
2025-09-17T00:39:57.067188Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.06731Z	    },
2025-09-17T00:39:57.067412Z	    inventory{
2025-09-17T00:39:57.06752Z	      quantity,
2025-09-17T00:39:57.067635Z	      status,
2025-09-17T00:39:57.067736Z	      warehouse,
2025-09-17T00:39:57.067844Z	      lastUpdated,
2025-09-17T00:39:57.067959Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.068062Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.068167Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.068292Z	    },
2025-09-17T00:39:57.068421Z	    isActive,
2025-09-17T00:39:57.068533Z	    isFeatured,
2025-09-17T00:39:57.06863Z	    isNew,
2025-09-17T00:39:57.06873Z	    _createdAt,
2025-09-17T00:39:57.068837Z	    _updatedAt
2025-09-17T00:39:57.068931Z	  
2025-09-17T00:39:57.069023Z	      },
2025-09-17T00:39:57.069115Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-17T00:39:57.069217Z	    }
2025-09-17T00:39:57.069332Z	  
2025-09-17T00:39:57.069432Z	Query parameters: {
2025-09-17T00:39:57.069544Z	  limit: 8,
2025-09-17T00:39:57.06964Z	  offset: 0,
2025-09-17T00:39:57.069737Z	  category: undefined,
2025-09-17T00:39:57.069854Z	  brand: 'epcos',
2025-09-17T00:39:57.069966Z	  featured: undefined
2025-09-17T00:39:57.070068Z	}
2025-09-17T00:39:57.07017Z	Fetching solutions with query: 
2025-09-17T00:39:57.070282Z	    {
2025-09-17T00:39:57.070396Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.070506Z	        
2025-09-17T00:39:57.070608Z	    _id,
2025-09-17T00:39:57.070714Z	    title,
2025-09-17T00:39:57.070826Z	    "slug": slug.current,
2025-09-17T00:39:57.070929Z	    summary,
2025-09-17T00:39:57.071026Z	    description,
2025-09-17T00:39:57.071125Z	    coverImage,
2025-09-17T00:39:57.071217Z	    primaryBrand->{
2025-09-17T00:39:57.071328Z	      _id,
2025-09-17T00:39:57.071425Z	      name,
2025-09-17T00:39:57.071526Z	      "slug": slug.current,
2025-09-17T00:39:57.071621Z	      logo
2025-09-17T00:39:57.071715Z	    },
2025-09-17T00:39:57.071818Z	    relatedBrands[]->{
2025-09-17T00:39:57.071912Z	      _id,
2025-09-17T00:39:57.072008Z	      name,
2025-09-17T00:39:57.072105Z	      "slug": slug.current,
2025-09-17T00:39:57.0722Z	      logo
2025-09-17T00:39:57.072366Z	    },
2025-09-17T00:39:57.072476Z	    targetMarket,
2025-09-17T00:39:57.072595Z	    complexity,
2025-09-17T00:39:57.072698Z	    publishedAt,
2025-09-17T00:39:57.072807Z	    isPublished,
2025-09-17T00:39:57.072917Z	    isFeatured,
2025-09-17T00:39:57.073016Z	    viewCount,
2025-09-17T00:39:57.073115Z	    _createdAt,
2025-09-17T00:39:57.07321Z	    _updatedAt
2025-09-17T00:39:57.073327Z	  
2025-09-17T00:39:57.073425Z	      },
2025-09-17T00:39:57.073521Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-17T00:39:57.073618Z	    }
2025-09-17T00:39:57.073713Z	  
2025-09-17T00:39:57.073817Z	Query parameters: {
2025-09-17T00:39:57.073916Z	  limit: 4,
2025-09-17T00:39:57.074009Z	  offset: 0,
2025-09-17T00:39:57.074105Z	  targetMarket: undefined,
2025-09-17T00:39:57.0742Z	  brand: 'epcos',
2025-09-17T00:39:57.074314Z	  featured: undefined
2025-09-17T00:39:57.074417Z	}
2025-09-17T00:39:57.074516Z	Fetching products with query: 
2025-09-17T00:39:57.07461Z	    {
2025-09-17T00:39:57.074713Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.074826Z	        
2025-09-17T00:39:57.074926Z	    _id,
2025-09-17T00:39:57.075026Z	    _type,
2025-09-17T00:39:57.075134Z	    partNumber,
2025-09-17T00:39:57.075228Z	    "slug": slug.current,
2025-09-17T00:39:57.075352Z	    title,
2025-09-17T00:39:57.075453Z	    shortDescription,
2025-09-17T00:39:57.075548Z	    image,
2025-09-17T00:39:57.075654Z	    brand->{
2025-09-17T00:39:57.075754Z	      name,
2025-09-17T00:39:57.075867Z	      "slug": slug.current,
2025-09-17T00:39:57.075971Z	      logo
2025-09-17T00:39:57.076076Z	    },
2025-09-17T00:39:57.076173Z	    category->{
2025-09-17T00:39:57.076281Z	      name,
2025-09-17T00:39:57.076395Z	      "slug": slug.current
2025-09-17T00:39:57.076494Z	    },
2025-09-17T00:39:57.07659Z	    pricing{
2025-09-17T00:39:57.076685Z	      currency,
2025-09-17T00:39:57.07679Z	      tiers[]{
2025-09-17T00:39:57.076886Z	        quantity,
2025-09-17T00:39:57.076983Z	        price,
2025-09-17T00:39:57.077089Z	        unit
2025-09-17T00:39:57.077188Z	      },
2025-09-17T00:39:57.0773Z	      moq,
2025-09-17T00:39:57.0774Z	      leadTime,
2025-09-17T00:39:57.077506Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.077609Z	      "price": tiers[0].price,
2025-09-17T00:39:57.077708Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.077821Z	    },
2025-09-17T00:39:57.077918Z	    inventory{
2025-09-17T00:39:57.078011Z	      quantity,
2025-09-17T00:39:57.078109Z	      status,
2025-09-17T00:39:57.078215Z	      warehouse,
2025-09-17T00:39:57.078332Z	      lastUpdated,
2025-09-17T00:39:57.078444Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.078544Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.078637Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.078732Z	    },
2025-09-17T00:39:57.078849Z	    isActive,
2025-09-17T00:39:57.078945Z	    isFeatured,
2025-09-17T00:39:57.079038Z	    isNew,
2025-09-17T00:39:57.079132Z	    _createdAt,
2025-09-17T00:39:57.079226Z	    _updatedAt
2025-09-17T00:39:57.079343Z	  
2025-09-17T00:39:57.07946Z	      },
2025-09-17T00:39:57.079568Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-17T00:39:57.079665Z	    }
2025-09-17T00:39:57.079767Z	  
2025-09-17T00:39:57.079876Z	Query parameters: {
2025-09-17T00:39:57.079978Z	  limit: 8,
2025-09-17T00:39:57.080082Z	  offset: 0,
2025-09-17T00:39:57.080179Z	  category: undefined,
2025-09-17T00:39:57.080286Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:39:57.08039Z	  featured: undefined
2025-09-17T00:39:57.080489Z	}
2025-09-17T00:39:57.080586Z	Fetching solutions with query: 
2025-09-17T00:39:57.080684Z	    {
2025-09-17T00:39:57.080798Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.080932Z	        
2025-09-17T00:39:57.081035Z	    _id,
2025-09-17T00:39:57.081132Z	    title,
2025-09-17T00:39:57.081226Z	    "slug": slug.current,
2025-09-17T00:39:57.081341Z	    summary,
2025-09-17T00:39:57.081438Z	    description,
2025-09-17T00:39:57.081533Z	    coverImage,
2025-09-17T00:39:57.081627Z	    primaryBrand->{
2025-09-17T00:39:57.081855Z	      _id,
2025-09-17T00:39:57.081975Z	      name,
2025-09-17T00:39:57.082082Z	      "slug": slug.current,
2025-09-17T00:39:57.082186Z	      logo
2025-09-17T00:39:57.082287Z	    },
2025-09-17T00:39:57.082382Z	    relatedBrands[]->{
2025-09-17T00:39:57.082471Z	      _id,
2025-09-17T00:39:57.082554Z	      name,
2025-09-17T00:39:57.082643Z	      "slug": slug.current,
2025-09-17T00:39:57.082731Z	      logo
2025-09-17T00:39:57.082819Z	    },
2025-09-17T00:39:57.082905Z	    targetMarket,
2025-09-17T00:39:57.082992Z	    complexity,
2025-09-17T00:39:57.08309Z	    publishedAt,
2025-09-17T00:39:57.083175Z	    isPublished,
2025-09-17T00:39:57.083262Z	    isFeatured,
2025-09-17T00:39:57.083373Z	    viewCount,
2025-09-17T00:39:57.083474Z	    _createdAt,
2025-09-17T00:39:57.083558Z	    _updatedAt
2025-09-17T00:39:57.083642Z	  
2025-09-17T00:39:57.083727Z	      },
2025-09-17T00:39:57.083865Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-17T00:39:57.083934Z	    }
2025-09-17T00:39:57.083991Z	  
2025-09-17T00:39:57.084053Z	Query parameters: {
2025-09-17T00:39:57.084112Z	  limit: 4,
2025-09-17T00:39:57.084169Z	  offset: 0,
2025-09-17T00:39:57.084223Z	  targetMarket: undefined,
2025-09-17T00:39:57.084303Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:39:57.084368Z	  featured: undefined
2025-09-17T00:39:57.084422Z	}
2025-09-17T00:39:57.084477Z	✅ [getBrandData] Found brand: IXYS
2025-09-17T00:39:57.084534Z	✅ [getBrandData] Found brand: IXYS
2025-09-17T00:39:57.084594Z	Solutions fetch result: {
2025-09-17T00:39:57.084649Z	  totalSolutions: 1,
2025-09-17T00:39:57.084702Z	  fetchedSolutions: 1,
2025-09-17T00:39:57.084758Z	  firstSolution: {
2025-09-17T00:39:57.084812Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-17T00:39:57.084867Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-17T00:39:57.084922Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-17T00:39:57.084975Z	    complexity: 'medium',
2025-09-17T00:39:57.085037Z	    coverImage: null,
2025-09-17T00:39:57.085092Z	    description: [ [Object] ],
2025-09-17T00:39:57.085146Z	    isFeatured: false,
2025-09-17T00:39:57.085202Z	    isPublished: true,
2025-09-17T00:39:57.085265Z	    primaryBrand: {
2025-09-17T00:39:57.085358Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:57.085455Z	      logo: null,
2025-09-17T00:39:57.086638Z	      name: 'IXYS',
2025-09-17T00:39:57.08671Z	      slug: 'ixys'
2025-09-17T00:39:57.099433Z	    },
2025-09-17T00:39:57.099538Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-17T00:39:57.09963Z	    relatedBrands: null,
2025-09-17T00:39:57.09973Z	    slug: '99999',
2025-09-17T00:39:57.099821Z	    summary: '99999',
2025-09-17T00:39:57.099905Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:57.09999Z	    title: '99999',
2025-09-17T00:39:57.100055Z	    viewCount: 0
2025-09-17T00:39:57.100125Z	  }
2025-09-17T00:39:57.100192Z	}
2025-09-17T00:39:57.100246Z	Solutions fetch result: {
2025-09-17T00:39:57.100339Z	  totalSolutions: 1,
2025-09-17T00:39:57.1004Z	  fetchedSolutions: 1,
2025-09-17T00:39:57.100464Z	  firstSolution: {
2025-09-17T00:39:57.100519Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-17T00:39:57.100572Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-17T00:39:57.100625Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-17T00:39:57.100678Z	    complexity: 'medium',
2025-09-17T00:39:57.100731Z	    coverImage: null,
2025-09-17T00:39:57.100785Z	    description: [ [Object] ],
2025-09-17T00:39:57.100841Z	    isFeatured: false,
2025-09-17T00:39:57.100894Z	    isPublished: true,
2025-09-17T00:39:57.100946Z	    primaryBrand: {
2025-09-17T00:39:57.100998Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:57.101078Z	      logo: null,
2025-09-17T00:39:57.101154Z	      name: 'IXYS',
2025-09-17T00:39:57.101211Z	      slug: 'ixys'
2025-09-17T00:39:57.101263Z	    },
2025-09-17T00:39:57.10135Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-17T00:39:57.101406Z	    relatedBrands: null,
2025-09-17T00:39:57.10146Z	    slug: '99999',
2025-09-17T00:39:57.101512Z	    summary: '99999',
2025-09-17T00:39:57.101571Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:57.101624Z	    title: '99999',
2025-09-17T00:39:57.101677Z	    viewCount: 0
2025-09-17T00:39:57.10173Z	  }
2025-09-17T00:39:57.101784Z	}
2025-09-17T00:39:57.101836Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.101888Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.101947Z	✅ [getBrandData] Found brand: CREE
2025-09-17T00:39:57.102023Z	✅ [getBrandData] Found brand: CREE
2025-09-17T00:39:57.102086Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-17T00:39:57.102153Z	Fetching products with query: 
2025-09-17T00:39:57.102207Z	    {
2025-09-17T00:39:57.102261Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.102329Z	        
2025-09-17T00:39:57.102383Z	    _id,
2025-09-17T00:39:57.102441Z	    _type,
2025-09-17T00:39:57.102497Z	    partNumber,
2025-09-17T00:39:57.102551Z	    "slug": slug.current,
2025-09-17T00:39:57.102618Z	    title,
2025-09-17T00:39:57.102676Z	    shortDescription,
2025-09-17T00:39:57.102729Z	    image,
2025-09-17T00:39:57.102783Z	    brand->{
2025-09-17T00:39:57.102837Z	      name,
2025-09-17T00:39:57.102894Z	      "slug": slug.current,
2025-09-17T00:39:57.102946Z	      logo
2025-09-17T00:39:57.102999Z	    },
2025-09-17T00:39:57.10306Z	    category->{
2025-09-17T00:39:57.103112Z	      name,
2025-09-17T00:39:57.103166Z	      "slug": slug.current
2025-09-17T00:39:57.103218Z	    },
2025-09-17T00:39:57.103279Z	    pricing{
2025-09-17T00:39:57.103335Z	      currency,
2025-09-17T00:39:57.103388Z	      tiers[]{
2025-09-17T00:39:57.103439Z	        quantity,
2025-09-17T00:39:57.103497Z	        price,
2025-09-17T00:39:57.103551Z	        unit
2025-09-17T00:39:57.103602Z	      },
2025-09-17T00:39:57.103654Z	      moq,
2025-09-17T00:39:57.103705Z	      leadTime,
2025-09-17T00:39:57.103757Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.103812Z	      "price": tiers[0].price,
2025-09-17T00:39:57.103864Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.103916Z	    },
2025-09-17T00:39:57.103968Z	    inventory{
2025-09-17T00:39:57.104024Z	      quantity,
2025-09-17T00:39:57.104086Z	      status,
2025-09-17T00:39:57.104141Z	      warehouse,
2025-09-17T00:39:57.104194Z	      lastUpdated,
2025-09-17T00:39:57.104247Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.104315Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.104369Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.104424Z	    },
2025-09-17T00:39:57.104478Z	    isActive,
2025-09-17T00:39:57.10453Z	    isFeatured,
2025-09-17T00:39:57.104583Z	    isNew,
2025-09-17T00:39:57.104636Z	    _createdAt,
2025-09-17T00:39:57.104688Z	    _updatedAt
2025-09-17T00:39:57.104745Z	  
2025-09-17T00:39:57.1048Z	      },
2025-09-17T00:39:57.10486Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-17T00:39:57.104918Z	    }
2025-09-17T00:39:57.104971Z	  
2025-09-17T00:39:57.105028Z	Query parameters: {
2025-09-17T00:39:57.105083Z	  limit: 8,
2025-09-17T00:39:57.105138Z	  offset: 0,
2025-09-17T00:39:57.10519Z	  category: undefined,
2025-09-17T00:39:57.105242Z	  brand: 'semikron',
2025-09-17T00:39:57.105322Z	  featured: undefined
2025-09-17T00:39:57.105386Z	}
2025-09-17T00:39:57.10544Z	Fetching solutions with query: 
2025-09-17T00:39:57.105494Z	    {
2025-09-17T00:39:57.105546Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.1056Z	        
2025-09-17T00:39:57.105654Z	    _id,
2025-09-17T00:39:57.105714Z	    title,
2025-09-17T00:39:57.105767Z	    "slug": slug.current,
2025-09-17T00:39:57.105821Z	    summary,
2025-09-17T00:39:57.105873Z	    description,
2025-09-17T00:39:57.105924Z	    coverImage,
2025-09-17T00:39:57.105976Z	    primaryBrand->{
2025-09-17T00:39:57.10604Z	      _id,
2025-09-17T00:39:57.106093Z	      name,
2025-09-17T00:39:57.106147Z	      "slug": slug.current,
2025-09-17T00:39:57.106201Z	      logo
2025-09-17T00:39:57.106253Z	    },
2025-09-17T00:39:57.106322Z	    relatedBrands[]->{
2025-09-17T00:39:57.106378Z	      _id,
2025-09-17T00:39:57.10643Z	      name,
2025-09-17T00:39:57.106484Z	      "slug": slug.current,
2025-09-17T00:39:57.106542Z	      logo
2025-09-17T00:39:57.106595Z	    },
2025-09-17T00:39:57.106648Z	    targetMarket,
2025-09-17T00:39:57.1067Z	    complexity,
2025-09-17T00:39:57.106752Z	    publishedAt,
2025-09-17T00:39:57.106805Z	    isPublished,
2025-09-17T00:39:57.106857Z	    isFeatured,
2025-09-17T00:39:57.106909Z	    viewCount,
2025-09-17T00:39:57.106975Z	    _createdAt,
2025-09-17T00:39:57.107035Z	    _updatedAt
2025-09-17T00:39:57.107089Z	  
2025-09-17T00:39:57.107143Z	      },
2025-09-17T00:39:57.107198Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-17T00:39:57.107253Z	    }
2025-09-17T00:39:57.107322Z	  
2025-09-17T00:39:57.107377Z	Query parameters: {
2025-09-17T00:39:57.107429Z	  limit: 4,
2025-09-17T00:39:57.107482Z	  offset: 0,
2025-09-17T00:39:57.107534Z	  targetMarket: undefined,
2025-09-17T00:39:57.107586Z	  brand: 'semikron',
2025-09-17T00:39:57.107638Z	  featured: undefined
2025-09-17T00:39:57.107693Z	}
2025-09-17T00:39:57.107746Z	✅ [getBrandData] Found brand: Semikron
2025-09-17T00:39:57.107802Z	Products fetch result: {
2025-09-17T00:39:57.107854Z	  totalProducts: 1,
2025-09-17T00:39:57.107906Z	  fetchedProducts: 1,
2025-09-17T00:39:57.107959Z	  firstProduct: {
2025-09-17T00:39:57.108017Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-17T00:39:57.108071Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-17T00:39:57.108124Z	    _type: 'product',
2025-09-17T00:39:57.108176Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-17T00:39:57.108228Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-17T00:39:57.108292Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:57.108348Z	    image: null,
2025-09-17T00:39:57.1084Z	    inventory: {
2025-09-17T00:39:57.108453Z	      inStock: true,
2025-09-17T00:39:57.108505Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-17T00:39:57.108561Z	      quantity: 0,
2025-09-17T00:39:57.108614Z	      status: 'in_stock',
2025-09-17T00:39:57.108681Z	      warehouse: null
2025-09-17T00:39:57.108733Z	    },
2025-09-17T00:39:57.108798Z	    isActive: true,
2025-09-17T00:39:57.108855Z	    isFeatured: false,
2025-09-17T00:39:57.108907Z	    isNew: false,
2025-09-17T00:39:57.108959Z	    partNumber: 'SKKT106/16E',
2025-09-17T00:39:57.109016Z	    pricing: {
2025-09-17T00:39:57.10907Z	      currency: 'CNY',
2025-09-17T00:39:57.109124Z	      leadTime: null,
2025-09-17T00:39:57.109176Z	      moq: null,
2025-09-17T00:39:57.109228Z	      price: null,
2025-09-17T00:39:57.109291Z	      tiers: null
2025-09-17T00:39:57.109345Z	    },
2025-09-17T00:39:57.109401Z	    shortDescription: 'SKKT106/16E',
2025-09-17T00:39:57.109457Z	    slug: 'SKKT106/16E',
2025-09-17T00:39:57.109509Z	    title: 'SKKT106/16E'
2025-09-17T00:39:57.109565Z	  }
2025-09-17T00:39:57.109618Z	}
2025-09-17T00:39:57.10967Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.109725Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-17T00:39:57.109785Z	Fetching products with query: 
2025-09-17T00:39:57.109841Z	    {
2025-09-17T00:39:57.109894Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.109947Z	        
2025-09-17T00:39:57.109999Z	    _id,
2025-09-17T00:39:57.110058Z	    _type,
2025-09-17T00:39:57.110113Z	    partNumber,
2025-09-17T00:39:57.110166Z	    "slug": slug.current,
2025-09-17T00:39:57.110217Z	    title,
2025-09-17T00:39:57.110278Z	    shortDescription,
2025-09-17T00:39:57.110339Z	    image,
2025-09-17T00:39:57.110392Z	    brand->{
2025-09-17T00:39:57.110446Z	      name,
2025-09-17T00:39:57.110499Z	      "slug": slug.current,
2025-09-17T00:39:57.110551Z	      logo
2025-09-17T00:39:57.110604Z	    },
2025-09-17T00:39:57.110655Z	    category->{
2025-09-17T00:39:57.110707Z	      name,
2025-09-17T00:39:57.11076Z	      "slug": slug.current
2025-09-17T00:39:57.110812Z	    },
2025-09-17T00:39:57.110863Z	    pricing{
2025-09-17T00:39:57.110915Z	      currency,
2025-09-17T00:39:57.110967Z	      tiers[]{
2025-09-17T00:39:57.111024Z	        quantity,
2025-09-17T00:39:57.11109Z	        price,
2025-09-17T00:39:57.111144Z	        unit
2025-09-17T00:39:57.111196Z	      },
2025-09-17T00:39:57.111248Z	      moq,
2025-09-17T00:39:57.111312Z	      leadTime,
2025-09-17T00:39:57.111366Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.111422Z	      "price": tiers[0].price,
2025-09-17T00:39:57.11148Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.111535Z	    },
2025-09-17T00:39:57.111588Z	    inventory{
2025-09-17T00:39:57.111641Z	      quantity,
2025-09-17T00:39:57.111693Z	      status,
2025-09-17T00:39:57.111747Z	      warehouse,
2025-09-17T00:39:57.111799Z	      lastUpdated,
2025-09-17T00:39:57.111859Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.111915Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.111968Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.112025Z	    },
2025-09-17T00:39:57.11208Z	    isActive,
2025-09-17T00:39:57.112133Z	    isFeatured,
2025-09-17T00:39:57.112186Z	    isNew,
2025-09-17T00:39:57.112239Z	    _createdAt,
2025-09-17T00:39:57.112304Z	    _updatedAt
2025-09-17T00:39:57.112369Z	  
2025-09-17T00:39:57.112451Z	      },
2025-09-17T00:39:57.112552Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-17T00:39:57.112685Z	    }
2025-09-17T00:39:57.112752Z	  
2025-09-17T00:39:57.112808Z	Query parameters: {
2025-09-17T00:39:57.112862Z	  limit: 8,
2025-09-17T00:39:57.112918Z	  offset: 0,
2025-09-17T00:39:57.112973Z	  category: undefined,
2025-09-17T00:39:57.113034Z	  brand: 'semikron',
2025-09-17T00:39:57.113089Z	  featured: undefined
2025-09-17T00:39:57.113143Z	}
2025-09-17T00:39:57.113197Z	Fetching solutions with query: 
2025-09-17T00:39:57.113253Z	    {
2025-09-17T00:39:57.113332Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.113393Z	        
2025-09-17T00:39:57.113449Z	    _id,
2025-09-17T00:39:57.113504Z	    title,
2025-09-17T00:39:57.113559Z	    "slug": slug.current,
2025-09-17T00:39:57.113616Z	    summary,
2025-09-17T00:39:57.113765Z	    description,
2025-09-17T00:39:57.113866Z	    coverImage,
2025-09-17T00:39:57.114059Z	    primaryBrand->{
2025-09-17T00:39:57.114151Z	      _id,
2025-09-17T00:39:57.114332Z	      name,
2025-09-17T00:39:57.114486Z	      "slug": slug.current,
2025-09-17T00:39:57.11462Z	      logo
2025-09-17T00:39:57.11473Z	    },
2025-09-17T00:39:57.114853Z	    relatedBrands[]->{
2025-09-17T00:39:57.114962Z	      _id,
2025-09-17T00:39:57.115083Z	      name,
2025-09-17T00:39:57.115185Z	      "slug": slug.current,
2025-09-17T00:39:57.115333Z	      logo
2025-09-17T00:39:57.115461Z	    },
2025-09-17T00:39:57.115595Z	    targetMarket,
2025-09-17T00:39:57.115734Z	    complexity,
2025-09-17T00:39:57.115839Z	    publishedAt,
2025-09-17T00:39:57.115997Z	    isPublished,
2025-09-17T00:39:57.116101Z	    isFeatured,
2025-09-17T00:39:57.116207Z	    viewCount,
2025-09-17T00:39:57.116322Z	    _createdAt,
2025-09-17T00:39:57.116409Z	    _updatedAt
2025-09-17T00:39:57.11649Z	  
2025-09-17T00:39:57.11674Z	      },
2025-09-17T00:39:57.116838Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-17T00:39:57.116929Z	    }
2025-09-17T00:39:57.117037Z	  
2025-09-17T00:39:57.117162Z	Query parameters: {
2025-09-17T00:39:57.117318Z	  limit: 4,
2025-09-17T00:39:57.117465Z	  offset: 0,
2025-09-17T00:39:57.117551Z	  targetMarket: undefined,
2025-09-17T00:39:57.117612Z	  brand: 'semikron',
2025-09-17T00:39:57.117753Z	  featured: undefined
2025-09-17T00:39:57.117886Z	}
2025-09-17T00:39:57.118001Z	✅ [getBrandData] Found brand: Semikron
2025-09-17T00:39:57.118099Z	Products fetch result: {
2025-09-17T00:39:57.118276Z	  totalProducts: 1,
2025-09-17T00:39:57.118425Z	  fetchedProducts: 1,
2025-09-17T00:39:57.118539Z	  firstProduct: {
2025-09-17T00:39:57.118647Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-17T00:39:57.118749Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-17T00:39:57.118861Z	    _type: 'product',
2025-09-17T00:39:57.118959Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-17T00:39:57.119063Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-17T00:39:57.119181Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:57.119337Z	    image: null,
2025-09-17T00:39:57.119413Z	    inventory: {
2025-09-17T00:39:57.1195Z	      inStock: true,
2025-09-17T00:39:57.11961Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-17T00:39:57.11968Z	      quantity: 0,
2025-09-17T00:39:57.119734Z	      status: 'in_stock',
2025-09-17T00:39:57.119828Z	      warehouse: null
2025-09-17T00:39:57.119932Z	    },
2025-09-17T00:39:57.119998Z	    isActive: true,
2025-09-17T00:39:57.120142Z	    isFeatured: false,
2025-09-17T00:39:57.120216Z	    isNew: false,
2025-09-17T00:39:57.120288Z	    partNumber: 'SKKT106/16E',
2025-09-17T00:39:57.12057Z	    pricing: {
2025-09-17T00:39:57.120712Z	      currency: 'CNY',
2025-09-17T00:39:57.120854Z	      leadTime: null,
2025-09-17T00:39:57.120964Z	      moq: null,
2025-09-17T00:39:57.121066Z	      price: null,
2025-09-17T00:39:57.121162Z	      tiers: null
2025-09-17T00:39:57.121255Z	    },
2025-09-17T00:39:57.121366Z	    shortDescription: 'SKKT106/16E',
2025-09-17T00:39:57.121473Z	    slug: 'SKKT106/16E',
2025-09-17T00:39:57.121564Z	    title: 'SKKT106/16E'
2025-09-17T00:39:57.121653Z	  }
2025-09-17T00:39:57.121756Z	}
2025-09-17T00:39:57.121862Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.121962Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-17T00:39:57.122303Z	Fetching products with query: 
2025-09-17T00:39:57.122405Z	    {
2025-09-17T00:39:57.122485Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.122587Z	        
2025-09-17T00:39:57.122688Z	    _id,
2025-09-17T00:39:57.122793Z	    _type,
2025-09-17T00:39:57.122909Z	    partNumber,
2025-09-17T00:39:57.122995Z	    "slug": slug.current,
2025-09-17T00:39:57.123091Z	    title,
2025-09-17T00:39:57.123164Z	    shortDescription,
2025-09-17T00:39:57.123278Z	    image,
2025-09-17T00:39:57.123383Z	    brand->{
2025-09-17T00:39:57.123491Z	      name,
2025-09-17T00:39:57.123571Z	      "slug": slug.current,
2025-09-17T00:39:57.123702Z	      logo
2025-09-17T00:39:57.123863Z	    },
2025-09-17T00:39:57.123988Z	    category->{
2025-09-17T00:39:57.124093Z	      name,
2025-09-17T00:39:57.124198Z	      "slug": slug.current
2025-09-17T00:39:57.124315Z	    },
2025-09-17T00:39:57.124384Z	    pricing{
2025-09-17T00:39:57.124445Z	      currency,
2025-09-17T00:39:57.124541Z	      tiers[]{
2025-09-17T00:39:57.124634Z	        quantity,
2025-09-17T00:39:57.124726Z	        price,
2025-09-17T00:39:57.124822Z	        unit
2025-09-17T00:39:57.124911Z	      },
2025-09-17T00:39:57.125008Z	      moq,
2025-09-17T00:39:57.125106Z	      leadTime,
2025-09-17T00:39:57.125208Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.125324Z	      "price": tiers[0].price,
2025-09-17T00:39:57.125414Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.125503Z	    },
2025-09-17T00:39:57.1256Z	    inventory{
2025-09-17T00:39:57.12569Z	      quantity,
2025-09-17T00:39:57.125801Z	      status,
2025-09-17T00:39:57.125898Z	      warehouse,
2025-09-17T00:39:57.125987Z	      lastUpdated,
2025-09-17T00:39:57.126077Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.126188Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.126306Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.126399Z	    },
2025-09-17T00:39:57.126489Z	    isActive,
2025-09-17T00:39:57.126576Z	    isFeatured,
2025-09-17T00:39:57.12666Z	    isNew,
2025-09-17T00:39:57.126748Z	    _createdAt,
2025-09-17T00:39:57.126864Z	    _updatedAt
2025-09-17T00:39:57.126968Z	  
2025-09-17T00:39:57.127061Z	      },
2025-09-17T00:39:57.127153Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-17T00:39:57.12725Z	    }
2025-09-17T00:39:57.127366Z	  
2025-09-17T00:39:57.127465Z	Query parameters: {
2025-09-17T00:39:57.127551Z	  limit: 8,
2025-09-17T00:39:57.127633Z	  offset: 0,
2025-09-17T00:39:57.127717Z	  category: undefined,
2025-09-17T00:39:57.127812Z	  brand: 'Electronicon',
2025-09-17T00:39:57.127898Z	  featured: undefined
2025-09-17T00:39:57.127997Z	}
2025-09-17T00:39:57.128087Z	Fetching solutions with query: 
2025-09-17T00:39:57.128174Z	    {
2025-09-17T00:39:57.128257Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.128378Z	        
2025-09-17T00:39:57.128483Z	    _id,
2025-09-17T00:39:57.128573Z	    title,
2025-09-17T00:39:57.128657Z	    "slug": slug.current,
2025-09-17T00:39:57.128741Z	    summary,
2025-09-17T00:39:57.128839Z	    description,
2025-09-17T00:39:57.128927Z	    coverImage,
2025-09-17T00:39:57.129018Z	    primaryBrand->{
2025-09-17T00:39:57.129113Z	      _id,
2025-09-17T00:39:57.129199Z	      name,
2025-09-17T00:39:57.129315Z	      "slug": slug.current,
2025-09-17T00:39:57.129412Z	      logo
2025-09-17T00:39:57.129504Z	    },
2025-09-17T00:39:57.129598Z	    relatedBrands[]->{
2025-09-17T00:39:57.129683Z	      _id,
2025-09-17T00:39:57.129771Z	      name,
2025-09-17T00:39:57.129863Z	      "slug": slug.current,
2025-09-17T00:39:57.129957Z	      logo
2025-09-17T00:39:57.130048Z	    },
2025-09-17T00:39:57.130138Z	    targetMarket,
2025-09-17T00:39:57.130221Z	    complexity,
2025-09-17T00:39:57.130322Z	    publishedAt,
2025-09-17T00:39:57.130412Z	    isPublished,
2025-09-17T00:39:57.130495Z	    isFeatured,
2025-09-17T00:39:57.130577Z	    viewCount,
2025-09-17T00:39:57.130662Z	    _createdAt,
2025-09-17T00:39:57.130742Z	    _updatedAt
2025-09-17T00:39:57.13084Z	  
2025-09-17T00:39:57.130937Z	      },
2025-09-17T00:39:57.131025Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-17T00:39:57.131108Z	    }
2025-09-17T00:39:57.131195Z	  
2025-09-17T00:39:57.131305Z	Query parameters: {
2025-09-17T00:39:57.1314Z	  limit: 4,
2025-09-17T00:39:57.131504Z	  offset: 0,
2025-09-17T00:39:57.1316Z	  targetMarket: undefined,
2025-09-17T00:39:57.131685Z	  brand: 'Electronicon',
2025-09-17T00:39:57.131773Z	  featured: undefined
2025-09-17T00:39:57.131873Z	}
2025-09-17T00:39:57.131964Z	✅ [getBrandData] Found brand: Electronicon
2025-09-17T00:39:57.132071Z	Products fetch result: {
2025-09-17T00:39:57.132169Z	  totalProducts: 2,
2025-09-17T00:39:57.132259Z	  fetchedProducts: 2,
2025-09-17T00:39:57.132373Z	  firstProduct: {
2025-09-17T00:39:57.132487Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-17T00:39:57.132613Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-17T00:39:57.132742Z	    _type: 'product',
2025-09-17T00:39:57.132822Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-17T00:39:57.13294Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-17T00:39:57.133048Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-17T00:39:57.133147Z	    image: null,
2025-09-17T00:39:57.133231Z	    inventory: {
2025-09-17T00:39:57.13334Z	      inStock: true,
2025-09-17T00:39:57.133452Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-17T00:39:57.133554Z	      quantity: 0,
2025-09-17T00:39:57.133655Z	      status: 'in_stock',
2025-09-17T00:39:57.13381Z	      warehouse: null
2025-09-17T00:39:57.133936Z	    },
2025-09-17T00:39:57.134038Z	    isActive: true,
2025-09-17T00:39:57.134144Z	    isFeatured: false,
2025-09-17T00:39:57.13426Z	    isNew: false,
2025-09-17T00:39:57.134386Z	    partNumber: '99999',
2025-09-17T00:39:57.134495Z	    pricing: {
2025-09-17T00:39:57.134602Z	      currency: 'CNY',
2025-09-17T00:39:57.134705Z	      leadTime: null,
2025-09-17T00:39:57.134817Z	      moq: null,
2025-09-17T00:39:57.134916Z	      price: null,
2025-09-17T00:39:57.135007Z	      tiers: null
2025-09-17T00:39:57.135103Z	    },
2025-09-17T00:39:57.135201Z	    shortDescription: null,
2025-09-17T00:39:57.135306Z	    slug: '99999',
2025-09-17T00:39:57.135419Z	    title: '99999'
2025-09-17T00:39:57.135517Z	  }
2025-09-17T00:39:57.13561Z	}
2025-09-17T00:39:57.135713Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.135827Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-17T00:39:57.136007Z	Fetching products with query: 
2025-09-17T00:39:57.136207Z	    {
2025-09-17T00:39:57.136338Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.136437Z	        
2025-09-17T00:39:57.136526Z	    _id,
2025-09-17T00:39:57.136613Z	    _type,
2025-09-17T00:39:57.136697Z	    partNumber,
2025-09-17T00:39:57.136793Z	    "slug": slug.current,
2025-09-17T00:39:57.136883Z	    title,
2025-09-17T00:39:57.136977Z	    shortDescription,
2025-09-17T00:39:57.137081Z	    image,
2025-09-17T00:39:57.137179Z	    brand->{
2025-09-17T00:39:57.137308Z	      name,
2025-09-17T00:39:57.137397Z	      "slug": slug.current,
2025-09-17T00:39:57.137601Z	      logo
2025-09-17T00:39:57.13777Z	    },
2025-09-17T00:39:57.13792Z	    category->{
2025-09-17T00:39:57.138047Z	      name,
2025-09-17T00:39:57.138122Z	      "slug": slug.current
2025-09-17T00:39:57.138209Z	    },
2025-09-17T00:39:57.138359Z	    pricing{
2025-09-17T00:39:57.138512Z	      currency,
2025-09-17T00:39:57.138658Z	      tiers[]{
2025-09-17T00:39:57.13888Z	        quantity,
2025-09-17T00:39:57.139002Z	        price,
2025-09-17T00:39:57.139114Z	        unit
2025-09-17T00:39:57.139325Z	      },
2025-09-17T00:39:57.139456Z	      moq,
2025-09-17T00:39:57.139677Z	      leadTime,
2025-09-17T00:39:57.139828Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.139951Z	      "price": tiers[0].price,
2025-09-17T00:39:57.140052Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.140127Z	    },
2025-09-17T00:39:57.140227Z	    inventory{
2025-09-17T00:39:57.14043Z	      quantity,
2025-09-17T00:39:57.140506Z	      status,
2025-09-17T00:39:57.140643Z	      warehouse,
2025-09-17T00:39:57.140741Z	      lastUpdated,
2025-09-17T00:39:57.140875Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.140989Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.141123Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.141227Z	    },
2025-09-17T00:39:57.14136Z	    isActive,
2025-09-17T00:39:57.141477Z	    isFeatured,
2025-09-17T00:39:57.141601Z	    isNew,
2025-09-17T00:39:57.141705Z	    _createdAt,
2025-09-17T00:39:57.141804Z	    _updatedAt
2025-09-17T00:39:57.141915Z	  
2025-09-17T00:39:57.14201Z	      },
2025-09-17T00:39:57.142108Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-17T00:39:57.142204Z	    }
2025-09-17T00:39:57.142322Z	  
2025-09-17T00:39:57.142479Z	Query parameters: {
2025-09-17T00:39:57.142596Z	  limit: 8,
2025-09-17T00:39:57.142728Z	  offset: 0,
2025-09-17T00:39:57.142832Z	  category: undefined,
2025-09-17T00:39:57.142944Z	  brand: 'Electronicon',
2025-09-17T00:39:57.143247Z	  featured: undefined
2025-09-17T00:39:57.143458Z	}
2025-09-17T00:39:57.143554Z	Fetching solutions with query: 
2025-09-17T00:39:57.143776Z	    {
2025-09-17T00:39:57.143861Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.143994Z	        
2025-09-17T00:39:57.144072Z	    _id,
2025-09-17T00:39:57.144162Z	    title,
2025-09-17T00:39:57.144276Z	    "slug": slug.current,
2025-09-17T00:39:57.144379Z	    summary,
2025-09-17T00:39:57.144476Z	    description,
2025-09-17T00:39:57.144577Z	    coverImage,
2025-09-17T00:39:57.144659Z	    primaryBrand->{
2025-09-17T00:39:57.144756Z	      _id,
2025-09-17T00:39:57.144845Z	      name,
2025-09-17T00:39:57.144902Z	      "slug": slug.current,
2025-09-17T00:39:57.145164Z	      logo
2025-09-17T00:39:57.145256Z	    },
2025-09-17T00:39:57.145448Z	    relatedBrands[]->{
2025-09-17T00:39:57.145582Z	      _id,
2025-09-17T00:39:57.145688Z	      name,
2025-09-17T00:39:57.145855Z	      "slug": slug.current,
2025-09-17T00:39:57.145936Z	      logo
2025-09-17T00:39:57.145998Z	    },
2025-09-17T00:39:57.146208Z	    targetMarket,
2025-09-17T00:39:57.14631Z	    complexity,
2025-09-17T00:39:57.146382Z	    publishedAt,
2025-09-17T00:39:57.14644Z	    isPublished,
2025-09-17T00:39:57.146497Z	    isFeatured,
2025-09-17T00:39:57.146554Z	    viewCount,
2025-09-17T00:39:57.146615Z	    _createdAt,
2025-09-17T00:39:57.146669Z	    _updatedAt
2025-09-17T00:39:57.14673Z	  
2025-09-17T00:39:57.14679Z	      },
2025-09-17T00:39:57.146849Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-17T00:39:57.14692Z	    }
2025-09-17T00:39:57.146981Z	  
2025-09-17T00:39:57.147045Z	Query parameters: {
2025-09-17T00:39:57.147101Z	  limit: 4,
2025-09-17T00:39:57.147156Z	  offset: 0,
2025-09-17T00:39:57.147212Z	  targetMarket: undefined,
2025-09-17T00:39:57.147277Z	  brand: 'Electronicon',
2025-09-17T00:39:57.147335Z	  featured: undefined
2025-09-17T00:39:57.147399Z	}
2025-09-17T00:39:57.147461Z	✅ [getBrandData] Found brand: Electronicon
2025-09-17T00:39:57.147518Z	Products fetch result: {
2025-09-17T00:39:57.147574Z	  totalProducts: 2,
2025-09-17T00:39:57.147634Z	  fetchedProducts: 2,
2025-09-17T00:39:57.147703Z	  firstProduct: {
2025-09-17T00:39:57.147757Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-17T00:39:57.147812Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-17T00:39:57.147866Z	    _type: 'product',
2025-09-17T00:39:57.147927Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-17T00:39:57.147986Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-17T00:39:57.148049Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-17T00:39:57.148112Z	    image: null,
2025-09-17T00:39:57.148167Z	    inventory: {
2025-09-17T00:39:57.148232Z	      inStock: true,
2025-09-17T00:39:57.148308Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-17T00:39:57.148363Z	      quantity: 0,
2025-09-17T00:39:57.148417Z	      status: 'in_stock',
2025-09-17T00:39:57.148472Z	      warehouse: null
2025-09-17T00:39:57.148532Z	    },
2025-09-17T00:39:57.148588Z	    isActive: true,
2025-09-17T00:39:57.148683Z	    isFeatured: false,
2025-09-17T00:39:57.148892Z	    isNew: false,
2025-09-17T00:39:57.148975Z	    partNumber: '99999',
2025-09-17T00:39:57.149059Z	    pricing: {
2025-09-17T00:39:57.149168Z	      currency: 'CNY',
2025-09-17T00:39:57.149368Z	      leadTime: null,
2025-09-17T00:39:57.149552Z	      moq: null,
2025-09-17T00:39:57.149717Z	      price: null,
2025-09-17T00:39:57.149818Z	      tiers: null
2025-09-17T00:39:57.150115Z	    },
2025-09-17T00:39:57.150218Z	    shortDescription: null,
2025-09-17T00:39:57.150332Z	    slug: '99999',
2025-09-17T00:39:57.150432Z	    title: '99999'
2025-09-17T00:39:57.150558Z	  }
2025-09-17T00:39:57.150719Z	}
2025-09-17T00:39:57.150863Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.150999Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:57.151128Z	Fetching products with query: 
2025-09-17T00:39:57.151227Z	    {
2025-09-17T00:39:57.151383Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.151502Z	        
2025-09-17T00:39:57.151601Z	    _id,
2025-09-17T00:39:57.151702Z	    _type,
2025-09-17T00:39:57.15182Z	    partNumber,
2025-09-17T00:39:57.151933Z	    "slug": slug.current,
2025-09-17T00:39:57.152118Z	    title,
2025-09-17T00:39:57.152303Z	    shortDescription,
2025-09-17T00:39:57.152387Z	    image,
2025-09-17T00:39:57.15248Z	    brand->{
2025-09-17T00:39:57.152625Z	      name,
2025-09-17T00:39:57.15275Z	      "slug": slug.current,
2025-09-17T00:39:57.152901Z	      logo
2025-09-17T00:39:57.153052Z	    },
2025-09-17T00:39:57.153532Z	    category->{
2025-09-17T00:39:57.153637Z	      name,
2025-09-17T00:39:57.153713Z	      "slug": slug.current
2025-09-17T00:39:57.154054Z	    },
2025-09-17T00:39:57.154168Z	    pricing{
2025-09-17T00:39:57.15431Z	      currency,
2025-09-17T00:39:57.15443Z	      tiers[]{
2025-09-17T00:39:57.154516Z	        quantity,
2025-09-17T00:39:57.154737Z	        price,
2025-09-17T00:39:57.154888Z	        unit
2025-09-17T00:39:57.15497Z	      },
2025-09-17T00:39:57.155054Z	      moq,
2025-09-17T00:39:57.155158Z	      leadTime,
2025-09-17T00:39:57.155276Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.155394Z	      "price": tiers[0].price,
2025-09-17T00:39:57.155493Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.155595Z	    },
2025-09-17T00:39:57.155693Z	    inventory{
2025-09-17T00:39:57.155802Z	      quantity,
2025-09-17T00:39:57.155896Z	      status,
2025-09-17T00:39:57.156081Z	      warehouse,
2025-09-17T00:39:57.15622Z	      lastUpdated,
2025-09-17T00:39:57.156398Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.156494Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.156621Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.156766Z	    },
2025-09-17T00:39:57.156874Z	    isActive,
2025-09-17T00:39:57.156994Z	    isFeatured,
2025-09-17T00:39:57.157111Z	    isNew,
2025-09-17T00:39:57.157276Z	    _createdAt,
2025-09-17T00:39:57.157406Z	    _updatedAt
2025-09-17T00:39:57.157578Z	  
2025-09-17T00:39:57.157653Z	      },
2025-09-17T00:39:57.157718Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-17T00:39:57.157913Z	    }
2025-09-17T00:39:57.158006Z	  
2025-09-17T00:39:57.158236Z	Query parameters: {
2025-09-17T00:39:57.158354Z	  limit: 8,
2025-09-17T00:39:57.158489Z	  offset: 0,
2025-09-17T00:39:57.158737Z	  category: undefined,
2025-09-17T00:39:57.159003Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:39:57.159141Z	  featured: undefined
2025-09-17T00:39:57.159259Z	}
2025-09-17T00:39:57.159379Z	Fetching solutions with query: 
2025-09-17T00:39:57.159447Z	    {
2025-09-17T00:39:57.159504Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.159584Z	        
2025-09-17T00:39:57.159643Z	    _id,
2025-09-17T00:39:57.159736Z	    title,
2025-09-17T00:39:57.159923Z	    "slug": slug.current,
2025-09-17T00:39:57.160001Z	    summary,
2025-09-17T00:39:57.160174Z	    description,
2025-09-17T00:39:57.160291Z	    coverImage,
2025-09-17T00:39:57.160461Z	    primaryBrand->{
2025-09-17T00:39:57.160585Z	      _id,
2025-09-17T00:39:57.160722Z	      name,
2025-09-17T00:39:57.160865Z	      "slug": slug.current,
2025-09-17T00:39:57.161006Z	      logo
2025-09-17T00:39:57.161148Z	    },
2025-09-17T00:39:57.161309Z	    relatedBrands[]->{
2025-09-17T00:39:57.161391Z	      _id,
2025-09-17T00:39:57.161517Z	      name,
2025-09-17T00:39:57.16179Z	      "slug": slug.current,
2025-09-17T00:39:57.161877Z	      logo
2025-09-17T00:39:57.162113Z	    },
2025-09-17T00:39:57.162199Z	    targetMarket,
2025-09-17T00:39:57.162329Z	    complexity,
2025-09-17T00:39:57.162578Z	    publishedAt,
2025-09-17T00:39:57.162668Z	    isPublished,
2025-09-17T00:39:57.162894Z	    isFeatured,
2025-09-17T00:39:57.162986Z	    viewCount,
2025-09-17T00:39:57.163126Z	    _createdAt,
2025-09-17T00:39:57.163197Z	    _updatedAt
2025-09-17T00:39:57.163256Z	  
2025-09-17T00:39:57.163378Z	      },
2025-09-17T00:39:57.163499Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-17T00:39:57.16383Z	    }
2025-09-17T00:39:57.163939Z	  
2025-09-17T00:39:57.164119Z	Query parameters: {
2025-09-17T00:39:57.164304Z	  limit: 4,
2025-09-17T00:39:57.164489Z	  offset: 0,
2025-09-17T00:39:57.164666Z	  targetMarket: undefined,
2025-09-17T00:39:57.164756Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:39:57.164872Z	  featured: undefined
2025-09-17T00:39:57.164982Z	}
2025-09-17T00:39:57.165088Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:57.165189Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.165285Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.165383Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:57.165466Z	Fetching products with query: 
2025-09-17T00:39:57.165544Z	    {
2025-09-17T00:39:57.165627Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.165722Z	        
2025-09-17T00:39:57.165816Z	    _id,
2025-09-17T00:39:57.165909Z	    _type,
2025-09-17T00:39:57.166007Z	    partNumber,
2025-09-17T00:39:57.166098Z	    "slug": slug.current,
2025-09-17T00:39:57.166184Z	    title,
2025-09-17T00:39:57.166328Z	    shortDescription,
2025-09-17T00:39:57.166419Z	    image,
2025-09-17T00:39:57.166589Z	    brand->{
2025-09-17T00:39:57.166739Z	      name,
2025-09-17T00:39:57.16684Z	      "slug": slug.current,
2025-09-17T00:39:57.167015Z	      logo
2025-09-17T00:39:57.167136Z	    },
2025-09-17T00:39:57.167239Z	    category->{
2025-09-17T00:39:57.167384Z	      name,
2025-09-17T00:39:57.167489Z	      "slug": slug.current
2025-09-17T00:39:57.167606Z	    },
2025-09-17T00:39:57.167702Z	    pricing{
2025-09-17T00:39:57.16779Z	      currency,
2025-09-17T00:39:57.167879Z	      tiers[]{
2025-09-17T00:39:57.168006Z	        quantity,
2025-09-17T00:39:57.168103Z	        price,
2025-09-17T00:39:57.168192Z	        unit
2025-09-17T00:39:57.168302Z	      },
2025-09-17T00:39:57.168413Z	      moq,
2025-09-17T00:39:57.168551Z	      leadTime,
2025-09-17T00:39:57.168663Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.168763Z	      "price": tiers[0].price,
2025-09-17T00:39:57.168857Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.16897Z	    },
2025-09-17T00:39:57.169062Z	    inventory{
2025-09-17T00:39:57.169283Z	      quantity,
2025-09-17T00:39:57.169378Z	      status,
2025-09-17T00:39:57.169468Z	      warehouse,
2025-09-17T00:39:57.169547Z	      lastUpdated,
2025-09-17T00:39:57.169637Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.169722Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.169903Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.170141Z	    },
2025-09-17T00:39:57.170249Z	    isActive,
2025-09-17T00:39:57.170414Z	    isFeatured,
2025-09-17T00:39:57.170576Z	    isNew,
2025-09-17T00:39:57.170733Z	    _createdAt,
2025-09-17T00:39:57.170807Z	    _updatedAt
2025-09-17T00:39:57.170959Z	  
2025-09-17T00:39:57.171084Z	      },
2025-09-17T00:39:57.171383Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-17T00:39:57.171554Z	    }
2025-09-17T00:39:57.171705Z	  
2025-09-17T00:39:57.172023Z	Query parameters: {
2025-09-17T00:39:57.172103Z	  limit: 8,
2025-09-17T00:39:57.17225Z	  offset: 0,
2025-09-17T00:39:57.172646Z	  category: undefined,
2025-09-17T00:39:57.17278Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:39:57.173021Z	  featured: undefined
2025-09-17T00:39:57.173185Z	}
2025-09-17T00:39:57.1733Z	Fetching solutions with query: 
2025-09-17T00:39:57.173405Z	    {
2025-09-17T00:39:57.173525Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.173669Z	        
2025-09-17T00:39:57.173807Z	    _id,
2025-09-17T00:39:57.173939Z	    title,
2025-09-17T00:39:57.174079Z	    "slug": slug.current,
2025-09-17T00:39:57.174183Z	    summary,
2025-09-17T00:39:57.174299Z	    description,
2025-09-17T00:39:57.174409Z	    coverImage,
2025-09-17T00:39:57.174507Z	    primaryBrand->{
2025-09-17T00:39:57.174599Z	      _id,
2025-09-17T00:39:57.174715Z	      name,
2025-09-17T00:39:57.174817Z	      "slug": slug.current,
2025-09-17T00:39:57.174912Z	      logo
2025-09-17T00:39:57.175316Z	    },
2025-09-17T00:39:57.175582Z	    relatedBrands[]->{
2025-09-17T00:39:57.175749Z	      _id,
2025-09-17T00:39:57.175969Z	      name,
2025-09-17T00:39:57.176147Z	      "slug": slug.current,
2025-09-17T00:39:57.176285Z	      logo
2025-09-17T00:39:57.176389Z	    },
2025-09-17T00:39:57.176535Z	    targetMarket,
2025-09-17T00:39:57.176674Z	    complexity,
2025-09-17T00:39:57.176855Z	    publishedAt,
2025-09-17T00:39:57.176982Z	    isPublished,
2025-09-17T00:39:57.177158Z	    isFeatured,
2025-09-17T00:39:57.177319Z	    viewCount,
2025-09-17T00:39:57.177424Z	    _createdAt,
2025-09-17T00:39:57.177638Z	    _updatedAt
2025-09-17T00:39:57.177737Z	  
2025-09-17T00:39:57.177862Z	      },
2025-09-17T00:39:57.177946Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-17T00:39:57.178064Z	    }
2025-09-17T00:39:57.17814Z	  
2025-09-17T00:39:57.1782Z	Query parameters: {
2025-09-17T00:39:57.178364Z	  limit: 4,
2025-09-17T00:39:57.17852Z	  offset: 0,
2025-09-17T00:39:57.178608Z	  targetMarket: undefined,
2025-09-17T00:39:57.17874Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:39:57.178929Z	  featured: undefined
2025-09-17T00:39:57.179115Z	}
2025-09-17T00:39:57.179282Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:57.179448Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.179615Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.17975Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-17T00:39:57.179897Z	Fetching products with query: 
2025-09-17T00:39:57.180044Z	    {
2025-09-17T00:39:57.180169Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.180374Z	        
2025-09-17T00:39:57.180461Z	    _id,
2025-09-17T00:39:57.180607Z	    _type,
2025-09-17T00:39:57.180691Z	    partNumber,
2025-09-17T00:39:57.180804Z	    "slug": slug.current,
2025-09-17T00:39:57.180907Z	    title,
2025-09-17T00:39:57.181025Z	    shortDescription,
2025-09-17T00:39:57.18113Z	    image,
2025-09-17T00:39:57.181241Z	    brand->{
2025-09-17T00:39:57.181383Z	      name,
2025-09-17T00:39:57.181501Z	      "slug": slug.current,
2025-09-17T00:39:57.181604Z	      logo
2025-09-17T00:39:57.18171Z	    },
2025-09-17T00:39:57.181799Z	    category->{
2025-09-17T00:39:57.181922Z	      name,
2025-09-17T00:39:57.182023Z	      "slug": slug.current
2025-09-17T00:39:57.182151Z	    },
2025-09-17T00:39:57.182293Z	    pricing{
2025-09-17T00:39:57.182404Z	      currency,
2025-09-17T00:39:57.182501Z	      tiers[]{
2025-09-17T00:39:57.182605Z	        quantity,
2025-09-17T00:39:57.182694Z	        price,
2025-09-17T00:39:57.182795Z	        unit
2025-09-17T00:39:57.182883Z	      },
2025-09-17T00:39:57.182979Z	      moq,
2025-09-17T00:39:57.183083Z	      leadTime,
2025-09-17T00:39:57.183179Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.183286Z	      "price": tiers[0].price,
2025-09-17T00:39:57.183387Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.183484Z	    },
2025-09-17T00:39:57.183576Z	    inventory{
2025-09-17T00:39:57.18368Z	      quantity,
2025-09-17T00:39:57.183777Z	      status,
2025-09-17T00:39:57.183872Z	      warehouse,
2025-09-17T00:39:57.183961Z	      lastUpdated,
2025-09-17T00:39:57.18409Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.184192Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.184302Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.184414Z	    },
2025-09-17T00:39:57.18451Z	    isActive,
2025-09-17T00:39:57.18463Z	    isFeatured,
2025-09-17T00:39:57.184769Z	    isNew,
2025-09-17T00:39:57.184887Z	    _createdAt,
2025-09-17T00:39:57.18501Z	    _updatedAt
2025-09-17T00:39:57.185124Z	  
2025-09-17T00:39:57.185278Z	      },
2025-09-17T00:39:57.185392Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-17T00:39:57.185496Z	    }
2025-09-17T00:39:57.185589Z	  
2025-09-17T00:39:57.185696Z	Query parameters: {
2025-09-17T00:39:57.185817Z	  limit: 8,
2025-09-17T00:39:57.18594Z	  offset: 0,
2025-09-17T00:39:57.186063Z	  category: undefined,
2025-09-17T00:39:57.18619Z	  brand: 'mediatek',
2025-09-17T00:39:57.186308Z	  featured: undefined
2025-09-17T00:39:57.186399Z	}
2025-09-17T00:39:57.186507Z	Fetching solutions with query: 
2025-09-17T00:39:57.186622Z	    {
2025-09-17T00:39:57.186732Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.186856Z	        
2025-09-17T00:39:57.186957Z	    _id,
2025-09-17T00:39:57.18708Z	    title,
2025-09-17T00:39:57.187189Z	    "slug": slug.current,
2025-09-17T00:39:57.187299Z	    summary,
2025-09-17T00:39:57.187425Z	    description,
2025-09-17T00:39:57.187554Z	    coverImage,
2025-09-17T00:39:57.187684Z	    primaryBrand->{
2025-09-17T00:39:57.187787Z	      _id,
2025-09-17T00:39:57.187891Z	      name,
2025-09-17T00:39:57.187991Z	      "slug": slug.current,
2025-09-17T00:39:57.188086Z	      logo
2025-09-17T00:39:57.188177Z	    },
2025-09-17T00:39:57.188323Z	    relatedBrands[]->{
2025-09-17T00:39:57.188418Z	      _id,
2025-09-17T00:39:57.188515Z	      name,
2025-09-17T00:39:57.188621Z	      "slug": slug.current,
2025-09-17T00:39:57.188737Z	      logo
2025-09-17T00:39:57.188911Z	    },
2025-09-17T00:39:57.189059Z	    targetMarket,
2025-09-17T00:39:57.189145Z	    complexity,
2025-09-17T00:39:57.189249Z	    publishedAt,
2025-09-17T00:39:57.189358Z	    isPublished,
2025-09-17T00:39:57.189479Z	    isFeatured,
2025-09-17T00:39:57.189598Z	    viewCount,
2025-09-17T00:39:57.189731Z	    _createdAt,
2025-09-17T00:39:57.189849Z	    _updatedAt
2025-09-17T00:39:57.189933Z	  
2025-09-17T00:39:57.19002Z	      },
2025-09-17T00:39:57.190081Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-17T00:39:57.190174Z	    }
2025-09-17T00:39:57.190302Z	  
2025-09-17T00:39:57.190413Z	Query parameters: {
2025-09-17T00:39:57.190506Z	  limit: 4,
2025-09-17T00:39:57.190599Z	  offset: 0,
2025-09-17T00:39:57.190723Z	  targetMarket: undefined,
2025-09-17T00:39:57.190842Z	  brand: 'mediatek',
2025-09-17T00:39:57.190943Z	  featured: undefined
2025-09-17T00:39:57.191065Z	}
2025-09-17T00:39:57.191186Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-17T00:39:57.191309Z	Fetching products with query: 
2025-09-17T00:39:57.191434Z	    {
2025-09-17T00:39:57.1916Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.191728Z	        
2025-09-17T00:39:57.191862Z	    _id,
2025-09-17T00:39:57.191977Z	    _type,
2025-09-17T00:39:57.192154Z	    partNumber,
2025-09-17T00:39:57.192308Z	    "slug": slug.current,
2025-09-17T00:39:57.192399Z	    title,
2025-09-17T00:39:57.192474Z	    shortDescription,
2025-09-17T00:39:57.192545Z	    image,
2025-09-17T00:39:57.192608Z	    brand->{
2025-09-17T00:39:57.192671Z	      name,
2025-09-17T00:39:57.192729Z	      "slug": slug.current,
2025-09-17T00:39:57.192792Z	      logo
2025-09-17T00:39:57.192847Z	    },
2025-09-17T00:39:57.192903Z	    category->{
2025-09-17T00:39:57.192958Z	      name,
2025-09-17T00:39:57.193033Z	      "slug": slug.❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:57.193094Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:57.193155Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-17T00:39:57.193223Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:39:57.193297Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619)
2025-09-17T00:39:57.193354Z	    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-09-17T00:39:57.19341Z	    at runNextTicks (node:internal/process/task_queues:64:3)
2025-09-17T00:39:57.193472Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-17T00:39:57.193526Z	    at process.processTimers (node:internal/timers:512:7) {
2025-09-17T00:39:57.19358Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:39:57.193633Z	}
2025-09-17T00:39:57.193686Z	current
2025-09-17T00:39:57.193739Z	    },
2025-09-17T00:39:57.193861Z	    pricing{
2025-09-17T00:39:57.194105Z	      currency,
2025-09-17T00:39:57.194192Z	      tiers[]{
2025-09-17T00:39:57.194315Z	        quantity,
2025-09-17T00:39:57.194417Z	        price,
2025-09-17T00:39:57.194482Z	        unit
2025-09-17T00:39:57.19454Z	      },
2025-09-17T00:39:57.194594Z	      moq,
2025-09-17T00:39:57.194647Z	      leadTime,
2025-09-17T00:39:57.194701Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.194808Z	      "price": tiers[0].price,
2025-09-17T00:39:57.194912Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.195024Z	    },
2025-09-17T00:39:57.195121Z	    inventory{
2025-09-17T00:39:57.195197Z	      quantity,
2025-09-17T00:39:57.195262Z	      status,
2025-09-17T00:39:57.195377Z	      warehouse,
2025-09-17T00:39:57.195473Z	      lastUpdated,
2025-09-17T00:39:57.19557Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.195665Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.195736Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.195859Z	    },
2025-09-17T00:39:57.19613Z	    isActive,
2025-09-17T00:39:57.196262Z	    isFeatured,
2025-09-17T00:39:57.196395Z	    isNew,
2025-09-17T00:39:57.196497Z	    _createdAt,
2025-09-17T00:39:57.196588Z	    _updatedAt
2025-09-17T00:39:57.196687Z	  
2025-09-17T00:39:57.196784Z	      },
2025-09-17T00:39:57.196861Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-17T00:39:57.196945Z	    }
2025-09-17T00:39:57.197025Z	  
2025-09-17T00:39:57.197172Z	Query parameters: {
2025-09-17T00:39:57.197283Z	  limit: 8,
2025-09-17T00:39:57.197385Z	  offset: 0,
2025-09-17T00:39:57.19748Z	  category: undefined,
2025-09-17T00:39:57.197563Z	  brand: 'mediatek',
2025-09-17T00:39:57.197648Z	  featured: undefined
2025-09-17T00:39:57.19773Z	}
2025-09-17T00:39:57.197824Z	Fetching solutions with query: 
2025-09-17T00:39:57.197928Z	    {
2025-09-17T00:39:57.198023Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.198142Z	        
2025-09-17T00:39:57.19824Z	    _id,
2025-09-17T00:39:57.19835Z	    title,
2025-09-17T00:39:57.198445Z	    "slug": slug.current,
2025-09-17T00:39:57.198537Z	    summary,
2025-09-17T00:39:57.198651Z	    description,
2025-09-17T00:39:57.198779Z	    coverImage,
2025-09-17T00:39:57.198884Z	    primaryBrand->{
2025-09-17T00:39:57.198982Z	      _id,
2025-09-17T00:39:57.199078Z	      name,
2025-09-17T00:39:57.199182Z	      "slug": slug.current,
2025-09-17T00:39:57.199296Z	      logo
2025-09-17T00:39:57.199399Z	    },
2025-09-17T00:39:57.199498Z	    relatedBrands[]->{
2025-09-17T00:39:57.199605Z	      _id,
2025-09-17T00:39:57.19971Z	      name,
2025-09-17T00:39:57.199809Z	      "slug": slug.current,
2025-09-17T00:39:57.199898Z	      logo
2025-09-17T00:39:57.199993Z	    },
2025-09-17T00:39:57.200079Z	    targetMarket,
2025-09-17T00:39:57.200166Z	    complexity,
2025-09-17T00:39:57.20026Z	    publishedAt,
2025-09-17T00:39:57.200374Z	    isPublished,
2025-09-17T00:39:57.200462Z	    isFeatured,
2025-09-17T00:39:57.200559Z	    viewCount,
2025-09-17T00:39:57.200654Z	    _createdAt,
2025-09-17T00:39:57.200747Z	    _updatedAt
2025-09-17T00:39:57.200848Z	  
2025-09-17T00:39:57.200948Z	      },
2025-09-17T00:39:57.201039Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-17T00:39:57.201149Z	    }
2025-09-17T00:39:57.201246Z	  
2025-09-17T00:39:57.201355Z	Query parameters: {
2025-09-17T00:39:57.201456Z	  limit: 4,
2025-09-17T00:39:57.201557Z	  offset: 0,
2025-09-17T00:39:57.201647Z	  targetMarket: undefined,
2025-09-17T00:39:57.20174Z	  brand: 'mediatek',
2025-09-17T00:39:57.201845Z	  featured: undefined
2025-09-17T00:39:57.201944Z	}
2025-09-17T00:39:57.202044Z	✅ [getBrandData] Found brand: MediaTek
2025-09-17T00:39:57.202147Z	✅ [getBrandData] Found brand: MediaTek
2025-09-17T00:39:57.202244Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.202357Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.20246Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.202575Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.202681Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-17T00:39:57.202794Z	Fetching products with query: 
2025-09-17T00:39:57.202892Z	    {
2025-09-17T00:39:57.202984Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.203076Z	        
2025-09-17T00:39:57.20319Z	    _id,
2025-09-17T00:39:57.203425Z	    _type,
2025-09-17T00:39:57.203538Z	    partNumber,
2025-09-17T00:39:57.203645Z	    "slug": slug.current,
2025-09-17T00:39:57.203747Z	    title,
2025-09-17T00:39:57.20385Z	    shortDescription,
2025-09-17T00:39:57.203941Z	    image,
2025-09-17T00:39:57.204034Z	    brand->{
2025-09-17T00:39:57.204136Z	      name,
2025-09-17T00:39:57.204225Z	      "slug": slug.current,
2025-09-17T00:39:57.204347Z	      logo
2025-09-17T00:39:57.204452Z	    },
2025-09-17T00:39:57.204552Z	    category->{
2025-09-17T00:39:57.204645Z	      name,
2025-09-17T00:39:57.204737Z	      "slug": slug.current
2025-09-17T00:39:57.204837Z	    },
2025-09-17T00:39:57.204928Z	    pricing{
2025-09-17T00:39:57.205013Z	      currency,
2025-09-17T00:39:57.205103Z	      tiers[]{
2025-09-17T00:39:57.205192Z	        quantity,
2025-09-17T00:39:57.205294Z	        price,
2025-09-17T00:39:57.20539Z	        unit
2025-09-17T00:39:57.205485Z	      },
2025-09-17T00:39:57.205629Z	      moq,
2025-09-17T00:39:57.20574Z	      leadTime,
2025-09-17T00:39:57.205851Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.205967Z	      "price": tiers[0].price,
2025-09-17T00:39:57.206075Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.206183Z	    },
2025-09-17T00:39:57.206291Z	    inventory{
2025-09-17T00:39:57.206391Z	      quantity,
2025-09-17T00:39:57.20649Z	      status,
2025-09-17T00:39:57.206582Z	      warehouse,
2025-09-17T00:39:57.206686Z	      lastUpdated,
2025-09-17T00:39:57.2068Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.20691Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.207013Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.207107Z	    },
2025-09-17T00:39:57.207198Z	    isActive,
2025-09-17T00:39:57.20731Z	    isFeatured,
2025-09-17T00:39:57.207416Z	    isNew,
2025-09-17T00:39:57.207515Z	    _createdAt,
2025-09-17T00:39:57.207614Z	    _updatedAt
2025-09-17T00:39:57.207706Z	  
2025-09-17T00:39:57.207811Z	      },
2025-09-17T00:39:57.207966Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-17T00:39:57.208096Z	    }
2025-09-17T00:39:57.208205Z	  
2025-09-17T00:39:57.208341Z	Query❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:57.208454Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:57.208569Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-17T00:39:57.208725Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:39:57.208823Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619)
2025-09-17T00:39:57.208891Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-17T00:39:57.208961Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:39:57.209024Z	}
2025-09-17T00:39:57.209082Z	 parameters: {
2025-09-17T00:39:57.20914Z	  limit: 8,
2025-09-17T00:39:57.209195Z	  offset: 0,
2025-09-17T00:39:57.20925Z	  category: undefined,
2025-09-17T00:39:57.209337Z	  brand: 'cree',
2025-09-17T00:39:57.209403Z	  featured: undefined
2025-09-17T00:39:57.209465Z	}
2025-09-17T00:39:57.209529Z	Fetching solutions with query: 
2025-09-17T00:39:57.20959Z	    {
2025-09-17T00:39:57.209647Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.209705Z	        
2025-09-17T00:39:57.209772Z	    _id,
2025-09-17T00:39:57.209831Z	    title,
2025-09-17T00:39:57.20991Z	    "slug": slug.current,
2025-09-17T00:39:57.209967Z	    summary,
2025-09-17T00:39:57.210031Z	    description,
2025-09-17T00:39:57.210094Z	    coverImage,
2025-09-17T00:39:57.21015Z	    primaryBrand->{
2025-09-17T00:39:57.210204Z	      _id,
2025-09-17T00:39:57.21026Z	      name,
2025-09-17T00:39:57.210352Z	      "slug": slug.current,
2025-09-17T00:39:57.210414Z	      logo
2025-09-17T00:39:57.210469Z	    },
2025-09-17T00:39:57.210529Z	    relatedBrands[]->{
2025-09-17T00:39:57.210584Z	      _id,
2025-09-17T00:39:57.210642Z	      name,
2025-09-17T00:39:57.210695Z	      "slug": slug.current,
2025-09-17T00:39:57.210749Z	      logo
2025-09-17T00:39:57.210816Z	    },
2025-09-17T00:39:57.21087Z	    targetMarket,
2025-09-17T00:39:57.210923Z	    complexity,
2025-09-17T00:39:57.210978Z	    publishedAt,
2025-09-17T00:39:57.211037Z	    isPublished,
2025-09-17T00:39:57.211104Z	    isFeatured,
2025-09-17T00:39:57.21116Z	    viewCount,
2025-09-17T00:39:57.21122Z	    _createdAt,
2025-09-17T00:39:57.211357Z	    _updatedAt
2025-09-17T00:39:57.211435Z	  
2025-09-17T00:39:57.211493Z	      },
2025-09-17T00:39:57.211553Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-17T00:39:57.211615Z	    }
2025-09-17T00:39:57.211678Z	  
2025-09-17T00:39:57.211732Z	Query parameters: {
2025-09-17T00:39:57.211794Z	  limit: 4,
2025-09-17T00:39:57.211849Z	  offset: 0,
2025-09-17T00:39:57.211909Z	  targetMarket: undefined,
2025-09-17T00:39:57.211964Z	  brand: 'cree',
2025-09-17T00:39:57.212021Z	  featured: undefined
2025-09-17T00:39:57.212075Z	}
2025-09-17T00:39:57.212132Z	✅ [getBrandData] Found brand: CREE
2025-09-17T00:39:57.212187Z	Products fetch result: {
2025-09-17T00:39:57.21224Z	  totalProducts: 4,
2025-09-17T00:39:57.212308Z	  fetchedProducts: 4,
2025-09-17T00:39:57.212392Z	  firstProduct: {
2025-09-17T00:39:57.212471Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-17T00:39:57.225427Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-17T00:39:57.225529Z	    _type: 'product',
2025-09-17T00:39:57.225595Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-17T00:39:57.225652Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-17T00:39:57.225715Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:57.225786Z	    image: null,
2025-09-17T00:39:57.22585Z	    inventory: {
2025-09-17T00:39:57.225905Z	      inStock: true,
2025-09-17T00:39:57.225959Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-17T00:39:57.226018Z	      quantity: 0,
2025-09-17T00:39:57.226081Z	      status: 'in_stock',
2025-09-17T00:39:57.226143Z	      warehouse: null
2025-09-17T00:39:57.226198Z	    },
2025-09-17T00:39:57.226259Z	    isActive: true,
2025-09-17T00:39:57.226329Z	    isFeatured: false,
2025-09-17T00:39:57.226389Z	    isNew: false,
2025-09-17T00:39:57.226442Z	    partNumber: '11111',
2025-09-17T00:39:57.226498Z	    pricing: {
2025-09-17T00:39:57.226559Z	      currency: 'CNY',
2025-09-17T00:39:57.226629Z	      leadTime: null,
2025-09-17T00:39:57.226682Z	      moq: null,
2025-09-17T00:39:57.226735Z	      price: null,
2025-09-17T00:39:57.226796Z	      tiers: null
2025-09-17T00:39:57.226851Z	    },
2025-09-17T00:39:57.226906Z	    shortDescription: '11111',
2025-09-17T00:39:57.226962Z	    slug: 'sic mosfet',
2025-09-17T00:39:57.227022Z	    title: '111111'
2025-09-17T00:39:57.227084Z	  }
2025-09-17T00:39:57.227138Z	}
2025-09-17T00:39:57.227192Z	Solutions fetch result: {
2025-09-17T00:39:57.227246Z	  totalSolutions: 6,
2025-09-17T00:39:57.227317Z	  fetchedSolutions: 4,
2025-09-17T00:39:57.227379Z	  firstSolution: {
2025-09-17T00:39:57.227433Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-17T00:39:57.227492Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-17T00:39:57.227554Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-17T00:39:57.227609Z	    complexity: 'medium',
2025-09-17T00:39:57.227667Z	    coverImage: null,
2025-09-17T00:39:57.227725Z	    description: [ [Object] ],
2025-09-17T00:39:57.227785Z	    isFeatured: false,
2025-09-17T00:39:57.22784Z	    isPublished: true,
2025-09-17T00:39:57.227902Z	    primaryBrand: {
2025-09-17T00:39:57.227956Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:57.22801Z	      logo: null,
2025-09-17T00:39:57.228064Z	      name: 'CREE',
2025-09-17T00:39:57.228118Z	      slug: 'cree'
2025-09-17T00:39:57.228171Z	    },
2025-09-17T00:39:57.228225Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-17T00:39:57.228322Z	    relatedBrands: null,
2025-09-17T00:39:57.241485Z	    slug: '11111',
2025-09-17T00:39:57.24156Z	    summary: '11111',
2025-09-17T00:39:57.241617Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:57.241673Z	    title: '11111',
2025-09-17T00:39:57.241733Z	    viewCount: 0
2025-09-17T00:39:57.241802Z	  }
2025-09-17T00:39:57.241881Z	}
2025-09-17T00:39:57.24195Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-17T00:39:57.242012Z	Fetching products with query: 
2025-09-17T00:39:57.242065Z	    {
2025-09-17T00:39:57.24212Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.242176Z	        
2025-09-17T00:39:57.242233Z	    _id,
2025-09-17T00:39:57.242309Z	    _type,
2025-09-17T00:39:57.242364Z	    partNumber,
2025-09-17T00:39:57.242419Z	    "slug": slug.current,
2025-09-17T00:39:57.242481Z	    title,
2025-09-17T00:39:57.24254Z	    shortDescription,
2025-09-17T00:39:57.242592Z	    image,
2025-09-17T00:39:57.242645Z	    brand->{
2025-09-17T00:39:57.242697Z	      name,
2025-09-17T00:39:57.24275Z	      "slug": slug.current,
2025-09-17T00:39:57.242812Z	      logo
2025-09-17T00:39:57.242865Z	    },
2025-09-17T00:39:57.242926Z	    category->{
2025-09-17T00:39:57.242981Z	      name,
2025-09-17T00:39:57.243035Z	      "slug": slug.current
2025-09-17T00:39:57.243092Z	    },
2025-09-17T00:39:57.243144Z	    pricing{
2025-09-17T00:39:57.243199Z	      currency,
2025-09-17T00:39:57.243264Z	      tiers[]{
2025-09-17T00:39:57.243331Z	        quantity,
2025-09-17T00:39:57.243385Z	        price,
2025-09-17T00:39:57.243438Z	        unit
2025-09-17T00:39:57.243491Z	      },
2025-09-17T00:39:57.243545Z	      moq,
2025-09-17T00:39:57.243598Z	      leadTime,
2025-09-17T00:39:57.243653Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.243717Z	      "price": tiers[0].price,
2025-09-17T00:39:57.243777Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.243833Z	    },
2025-09-17T00:39:57.243888Z	    inventory{
2025-09-17T00:39:57.243942Z	      quantity,
2025-09-17T00:39:57.243996Z	      status,
2025-09-17T00:39:57.244049Z	      warehouse,
2025-09-17T00:39:57.244101Z	      lastUpdated,
2025-09-17T00:39:57.244159Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.244218Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.244282Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.244341Z	    },
2025-09-17T00:39:57.244402Z	    isActive,
2025-09-17T00:39:57.244456Z	    isFeatured,
2025-09-17T00:39:57.244531Z	    isNew,
2025-09-17T00:39:57.244588Z	    _createdAt,
2025-09-17T00:39:57.244655Z	    _updatedAt
2025-09-17T00:39:57.24471Z	  
2025-09-17T00:39:57.244776Z	      },
2025-09-17T00:39:57.244837Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-17T00:39:57.244909Z	    }
2025-09-17T00:39:57.244974Z	  
2025-09-17T00:39:57.245035Z	Query parameters: {
2025-09-17T00:39:57.245098Z	  limit: 8,
2025-09-17T00:39:57.245161Z	  offset: 0,
2025-09-17T00:39:57.245217Z	  category: undefined,
2025-09-17T00:39:57.245281Z	  brand: 'cree',
2025-09-17T00:39:57.245342Z	  featured: undefined
2025-09-17T00:39:57.245397Z	}
2025-09-17T00:39:57.245452Z	Fetching solutions with query: 
2025-09-17T00:39:57.245506Z	    {
2025-09-17T00:39:57.245565Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.24563Z	        
2025-09-17T00:39:57.245687Z	    _id,
2025-09-17T00:39:57.245742Z	    title,
2025-09-17T00:39:57.245807Z	    "slug": slug.current,
2025-09-17T00:39:57.245863Z	    summary,
2025-09-17T00:39:57.245922Z	    description,
2025-09-17T00:39:57.245976Z	    coverImage,
2025-09-17T00:39:57.246039Z	    primaryBrand->{
2025-09-17T00:39:57.2461Z	      _id,
2025-09-17T00:39:57.24616Z	      name,
2025-09-17T00:39:57.246214Z	      "slug": slug.current,
2025-09-17T00:39:57.246278Z	      logo
2025-09-17T00:39:57.246335Z	    },
2025-09-17T00:39:57.246391Z	    relatedBrands[]->{
2025-09-17T00:39:57.246445Z	      _id,
2025-09-17T00:39:57.246525Z	      name,
2025-09-17T00:39:57.248431Z	      "slug": slug.current,
2025-09-17T00:39:57.2485Z	      logo
2025-09-17T00:39:57.248557Z	    },
2025-09-17T00:39:57.248622Z	    targetMarket,
2025-09-17T00:39:57.24868Z	    complexity,
2025-09-17T00:39:57.248743Z	    publishedAt,
2025-09-17T00:39:57.248817Z	    isPublished,
2025-09-17T00:39:57.248875Z	    isFeatured,
2025-09-17T00:39:57.24893Z	    viewCount,
2025-09-17T00:39:57.248998Z	    _createdAt,
2025-09-17T00:39:57.249056Z	    _updatedAt
2025-09-17T00:39:57.24911Z	  
2025-09-17T00:39:57.249162Z	      },
2025-09-17T00:39:57.249216Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-17T00:39:57.249291Z	    }
2025-09-17T00:39:57.249368Z	  
2025-09-17T00:39:57.249425Z	Query parameters: {
2025-09-17T00:39:57.249487Z	  limit: 4,
2025-09-17T00:39:57.249547Z	  offset: 0,
2025-09-17T00:39:57.249607Z	  targetMarket: undefined,
2025-09-17T00:39:57.249669Z	  brand: 'cree',
2025-09-17T00:39:57.249725Z	  featured: undefined
2025-09-17T00:39:57.249787Z	}
2025-09-17T00:39:57.249842Z	✅ [getBrandData] Found brand: CREE
2025-09-17T00:39:57.2499Z	Products fetch result: {
2025-09-17T00:39:57.249961Z	  totalProducts: 4,
2025-09-17T00:39:57.25002Z	  fetchedProducts: 4,
2025-09-17T00:39:57.250083Z	  firstProduct: {
2025-09-17T00:39:57.250142Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-17T00:39:57.25021Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-17T00:39:57.250281Z	    _type: 'product',
2025-09-17T00:39:57.250352Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-17T00:39:57.250424Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-17T00:39:57.250489Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:57.250545Z	    image: null,
2025-09-17T00:39:57.2506Z	    inventory: {
2025-09-17T00:39:57.250652Z	      inStock: true,
2025-09-17T00:39:57.250705Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-17T00:39:57.250758Z	      quantity: 0,
2025-09-17T00:39:57.25082Z	      status: 'in_stock',
2025-09-17T00:39:57.250872Z	      warehouse: null
2025-09-17T00:39:57.250925Z	    },
2025-09-17T00:39:57.250977Z	    isActive: true,
2025-09-17T00:39:57.25103Z	    isFeatured: false,
2025-09-17T00:39:57.251082Z	    isNew: false,
2025-09-17T00:39:57.251137Z	    partNumber: '11111',
2025-09-17T00:39:57.2512Z	    pricing: {
2025-09-17T00:39:57.251257Z	      currency: 'CNY',
2025-09-17T00:39:57.251647Z	      leadTime: null,
2025-09-17T00:39:57.251812Z	      moq: null,
2025-09-17T00:39:57.251945Z	      price: null,
2025-09-17T00:39:57.252066Z	      tiers: null
2025-09-17T00:39:57.252185Z	    },
2025-09-17T00:39:57.252315Z	    shortDescription: '11111',
2025-09-17T00:39:57.252429Z	    slug: 'sic mosfet',
2025-09-17T00:39:57.252553Z	    title: '111111'
2025-09-17T00:39:57.252665Z	  }
2025-09-17T00:39:57.252784Z	}
2025-09-17T00:39:57.252903Z	Solutions fetch result: {
2025-09-17T00:39:57.253011Z	  totalSolutions: 6,
2025-09-17T00:39:57.253117Z	  fetchedSolutions: 4,
2025-09-17T00:39:57.253217Z	  firstSolution: {
2025-09-17T00:39:57.253348Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-17T00:39:57.253461Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-17T00:39:57.25357Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-17T00:39:57.253682Z	    complexity: 'medium',
2025-09-17T00:39:57.253809Z	    coverImage: null,
2025-09-17T00:39:57.253912Z	    description: [ [Object] ],
2025-09-17T00:39:57.254022Z	    isFeatured: false,
2025-09-17T00:39:57.254133Z	    isPublished: true,
2025-09-17T00:39:57.254231Z	    primaryBrand: {
2025-09-17T00:39:57.254363Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:57.254473Z	      logo: null,
2025-09-17T00:39:57.254572Z	      name: 'CREE',
2025-09-17T00:39:57.254676Z	      slug: 'cree'
2025-09-17T00:39:57.254798Z	    },
2025-09-17T00:39:57.254905Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-17T00:39:57.255011Z	    relatedBrands: null,
2025-09-17T00:39:57.255115Z	    slug: '11111',
2025-09-17T00:39:57.255236Z	    summary: '11111',
2025-09-17T00:39:57.255363Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:57.255477Z	    title: '11111',
2025-09-17T00:39:57.255587Z	    viewCount: 0
2025-09-17T00:39:57.255694Z	  }
2025-09-17T00:39:57.255811Z	}
2025-09-17T00:39:57.255921Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-17T00:39:57.256035Z	Fetching products with query: 
2025-09-17T00:39:57.25617Z	    {
2025-09-17T00:39:57.256294Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.256413Z	        
2025-09-17T00:39:57.25652Z	    _id,
2025-09-17T00:39:57.256619Z	    _type,
2025-09-17T00:39:57.256726Z	    partNumber,
2025-09-17T00:39:57.256844Z	    "slug": slug.current,
2025-09-17T00:39:57.256944Z	    title,
2025-09-17T00:39:57.257049Z	    shortDescription,
2025-09-17T00:39:57.257159Z	    image,
2025-09-17T00:39:57.257258Z	    brand->{
2025-09-17T00:39:57.257389Z	      name,
2025-09-17T00:39:57.257499Z	      "slug": slug.current,
2025-09-17T00:39:57.257603Z	      logo
2025-09-17T00:39:57.257699Z	    },
2025-09-17T00:39:57.257807Z	    category->{
2025-09-17T00:39:57.257905Z	      name,
2025-09-17T00:39:57.258017Z	      "slug": slug.current
2025-09-17T00:39:57.258126Z	    },
2025-09-17T00:39:57.258233Z	    pricing{
2025-09-17T00:39:57.258359Z	      currency,
2025-09-17T00:39:57.258485Z	      tiers[]{
2025-09-17T00:39:57.258613Z	        quantity,
2025-09-17T00:39:57.258713Z	        price,
2025-09-17T00:39:57.258827Z	        unit
2025-09-17T00:39:57.258936Z	      },
2025-09-17T00:39:57.259031Z	      moq,
2025-09-17T00:39:57.259128Z	      leadTime,
2025-09-17T00:39:57.259224Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.259344Z	      "price": tiers[0].price,
2025-09-17T00:39:57.259456Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.25956Z	    },
2025-09-17T00:39:57.259654Z	    inventory{
2025-09-17T00:39:57.259749Z	      quantity,
2025-09-17T00:39:57.259873Z	      status,
2025-09-17T00:39:57.259986Z	      warehouse,
2025-09-17T00:39:57.260088Z	      lastUpdated,
2025-09-17T00:39:57.260186Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.260303Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.260407Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.260512Z	    },
2025-09-17T00:39:57.260613Z	    isActive,
2025-09-17T00:39:57.260725Z	    isFeatured,
2025-09-17T00:39:57.260839Z	    isNew,
2025-09-17T00:39:57.260938Z	    _createdAt,
2025-09-17T00:39:57.261042Z	    _updatedAt
2025-09-17T00:39:57.261141Z	  
2025-09-17T00:39:57.261239Z	      },
2025-09-17T00:39:57.261361Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-17T00:39:57.261471Z	    }
2025-09-17T00:39:57.261577Z	  
2025-09-17T00:39:57.261698Z	Query parameters: {
2025-09-17T00:39:57.261818Z	  limit: 8,
2025-09-17T00:39:57.261919Z	  offset: 0,
2025-09-17T00:39:57.262048Z	  category: undefined,
2025-09-17T00:39:57.262153Z	  brand: 'littelfuse',
2025-09-17T00:39:57.262277Z	  featured: undefined
2025-09-17T00:39:57.262408Z	}
2025-09-17T00:39:57.262515Z	Fetching solutions with query: 
2025-09-17T00:39:57.26262Z	    {
2025-09-17T00:39:57.262734Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.262857Z	        
2025-09-17T00:39:57.262962Z	    _id,
2025-09-17T00:39:57.263058Z	    title,
2025-09-17T00:39:57.263153Z	    "slug": slug.current,
2025-09-17T00:39:57.263248Z	    summary,
2025-09-17T00:39:57.263364Z	    description,
2025-09-17T00:39:57.263466Z	    coverImage,
2025-09-17T00:39:57.263569Z	    primaryBrand->{
2025-09-17T00:39:57.263671Z	      _id,
2025-09-17T00:39:57.263777Z	      name,
2025-09-17T00:39:57.26388Z	      "slug": slug.current,
2025-09-17T00:39:57.263979Z	      logo
2025-09-17T00:39:57.264081Z	    },
2025-09-17T00:39:57.264177Z	    relatedBrands[]->{
2025-09-17T00:39:57.264283Z	      _id,
2025-09-17T00:39:57.264385Z	      name,
2025-09-17T00:39:57.264482Z	      "slug": slug.current,
2025-09-17T00:39:57.26458Z	      logo
2025-09-17T00:39:57.264673Z	    },
2025-09-17T00:39:57.264784Z	    targetMarket,
2025-09-17T00:39:57.264885Z	    complexity,
2025-09-17T00:39:57.26498Z	    publishedAt,
2025-09-17T00:39:57.265076Z	    isPublished,
2025-09-17T00:39:57.265173Z	    isFeatured,
2025-09-17T00:39:57.265279Z	    viewCount,
2025-09-17T00:39:57.265389Z	    _createdAt,
2025-09-17T00:39:57.265492Z	    _updatedAt
2025-09-17T00:39:57.265596Z	  
2025-09-17T00:39:57.265702Z	      },
2025-09-17T00:39:57.265808Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-17T00:39:57.265907Z	    }
2025-09-17T00:39:57.266008Z	  
2025-09-17T00:39:57.266102Z	Query parameters: {
2025-09-17T00:39:57.266198Z	  limit: 4,
2025-09-17T00:39:57.266311Z	  offset: 0,
2025-09-17T00:39:57.266415Z	  targetMarket: undefined,
2025-09-17T00:39:57.266511Z	  brand: 'littelfuse',
2025-09-17T00:39:57.266605Z	  featured: undefined
2025-09-17T00:39:57.266698Z	}
2025-09-17T00:39:57.266802Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-17T00:39:57.266904Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.267009Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.267106Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-17T00:39:57.267205Z	Fetching products with query: 
2025-09-17T00:39:57.267321Z	    {
2025-09-17T00:39:57.267419Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.267527Z	        
2025-09-17T00:39:57.267624Z	    _id,
2025-09-17T00:39:57.267716Z	    _type,
2025-09-17T00:39:57.267822Z	    partNumber,
2025-09-17T00:39:57.267929Z	    "slug": slug.current,
2025-09-17T00:39:57.268024Z	    title,
2025-09-17T00:39:57.268117Z	    shortDescription,
2025-09-17T00:39:57.268212Z	    image,
2025-09-17T00:39:57.268326Z	    brand->{
2025-09-17T00:39:57.268427Z	      name,
2025-09-17T00:39:57.268523Z	      "slug": slug.current,
2025-09-17T00:39:57.268619Z	      logo
2025-09-17T00:39:57.268715Z	    },
2025-09-17T00:39:57.268829Z	    category->{
2025-09-17T00:39:57.268933Z	      name,
2025-09-17T00:39:57.269026Z	      "slug": slug.current
2025-09-17T00:39:57.269124Z	    },
2025-09-17T00:39:57.26922Z	    pricing{
2025-09-17T00:39:57.269334Z	      currency,
2025-09-17T00:39:57.269446Z	      tiers[]{
2025-09-17T00:39:57.269543Z	        quantity,
2025-09-17T00:39:57.269637Z	        price,
2025-09-17T00:39:57.269734Z	        unit
2025-09-17T00:39:57.269838Z	      },
2025-09-17T00:39:57.269933Z	      moq,
2025-09-17T00:39:57.270029Z	      leadTime,
2025-09-17T00:39:57.270501Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.270627Z	      "price": tiers[0].price,
2025-09-17T00:39:57.270731Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.270838Z	    },
2025-09-17T00:39:57.270935Z	    inventory{
2025-09-17T00:39:57.271029Z	      quantity,
2025-09-17T00:39:57.271123Z	      status,
2025-09-17T00:39:57.271215Z	      warehouse,
2025-09-17T00:39:57.271331Z	      lastUpdated,
2025-09-17T00:39:57.271427Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.27152Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.271615Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.271706Z	    },
2025-09-17T00:39:57.271809Z	    isActive,
2025-09-17T00:39:57.271903Z	    isFeatured,
2025-09-17T00:39:57.271996Z	    isNew,
2025-09-17T00:39:57.2721Z	    _createdAt,
2025-09-17T00:39:57.272206Z	    _updatedAt
2025-09-17T00:39:57.272333Z	  
2025-09-17T00:39:57.272442Z	      },
2025-09-17T00:39:57.272561Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-17T00:39:57.272669Z	    }
2025-09-17T00:39:57.272776Z	  
2025-09-17T00:39:57.272893Z	Query parameters: {
2025-09-17T00:39:57.272991Z	  limit: 8,
2025-09-17T00:39:57.273095Z	  offset: 0,
2025-09-17T00:39:57.273197Z	  category: undefined,
2025-09-17T00:39:57.273319Z	  brand: 'littelfuse',
2025-09-17T00:39:57.27342Z	  featured: undefined
2025-09-17T00:39:57.273517Z	}
2025-09-17T00:39:57.273612Z	Fetching solutions with query: 
2025-09-17T00:39:57.273704Z	    {
2025-09-17T00:39:57.27381Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.27393Z	        
2025-09-17T00:39:57.274028Z	    _id,
2025-09-17T00:39:57.274127Z	    title,
2025-09-17T00:39:57.274223Z	    "slug": slug.current,
2025-09-17T00:39:57.274337Z	    summary,
2025-09-17T00:39:57.274434Z	    description,
2025-09-17T00:39:57.274537Z	    coverImage,
2025-09-17T00:39:57.274637Z	    primaryBrand->{
2025-09-17T00:39:57.274736Z	      _id,
2025-09-17T00:39:57.27484Z	      name,
2025-09-17T00:39:57.274936Z	      "slug": slug.current,
2025-09-17T00:39:57.275044Z	      logo
2025-09-17T00:39:57.275147Z	    },
2025-09-17T00:39:57.275244Z	    relatedBrands[]->{
2025-09-17T00:39:57.275367Z	      _id,
2025-09-17T00:39:57.275485Z	      name,
2025-09-17T00:39:57.275589Z	      "slug": slug.current,
2025-09-17T00:39:57.275691Z	      logo
2025-09-17T00:39:57.275807Z	    },
2025-09-17T00:39:57.275917Z	    targetMarket,
2025-09-17T00:39:57.276025Z	    complexity,
2025-09-17T00:39:57.276128Z	    publishedAt,
2025-09-17T00:39:57.276227Z	    isPublished,
2025-09-17T00:39:57.276344Z	    isFeatured,
2025-09-17T00:39:57.276448Z	    viewCount,
2025-09-17T00:39:57.276546Z	    _createdAt,
2025-09-17T00:39:57.276655Z	    _updatedAt
2025-09-17T00:39:57.276786Z	  
2025-09-17T00:39:57.276905Z	      },
2025-09-17T00:39:57.277027Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-17T00:39:57.277145Z	    }
2025-09-17T00:39:57.277251Z	  
2025-09-17T00:39:57.277376Z	Query parameters: {
2025-09-17T00:39:57.277497Z	  limit: 4,
2025-09-17T00:39:57.27761Z	  offset: 0,
2025-09-17T00:39:57.277714Z	  targetMarket: undefined,
2025-09-17T00:39:57.277835Z	  brand: 'littelfuse',
2025-09-17T00:39:57.277947Z	  featured: undefined
2025-09-17T00:39:57.278061Z	}
2025-09-17T00:39:57.278174Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-17T00:39:57.278304Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.278426Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.278536Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-17T00:39:57.278645Z	Fetching products with query: 
2025-09-17T00:39:57.278757Z	    {
2025-09-17T00:39:57.278891Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.279005Z	        
2025-09-17T00:39:57.279128Z	    _id,
2025-09-17T00:39:57.279238Z	    _type,
2025-09-17T00:39:57.279366Z	    partNumber,
2025-09-17T00:39:57.279471Z	    "slug": slug.current,
2025-09-17T00:39:57.279569Z	    title,
2025-09-17T00:39:57.279687Z	    shortDescription,
2025-09-17T00:39:57.279835Z	    image,
2025-09-17T00:39:57.279947Z	    brand->{
2025-09-17T00:39:57.280057Z	      name,
2025-09-17T00:39:57.280179Z	      "slug": slug.current,
2025-09-17T00:39:57.280313Z	      logo
2025-09-17T00:39:57.280431Z	    },
2025-09-17T00:39:57.280533Z	    category->{
2025-09-17T00:39:57.280676Z	      name,
2025-09-17T00:39:57.28079Z	      "slug": slug.current
2025-09-17T00:39:57.280894Z	    },
2025-09-17T00:39:57.281005Z	    pricing{
2025-09-17T00:39:57.28111Z	      currency,
2025-09-17T00:39:57.281211Z	      tiers[]{
2025-09-17T00:39:57.281336Z	        quantity,
2025-09-17T00:39:57.281438Z	        price,
2025-09-17T00:39:57.281541Z	        unit
2025-09-17T00:39:57.281651Z	      },
2025-09-17T00:39:57.281748Z	      moq,
2025-09-17T00:39:57.281857Z	      leadTime,
2025-09-17T00:39:57.281958Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.282077Z	      "price": tiers[0].price,
2025-09-17T00:39:57.282191Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.28232Z	    },
2025-09-17T00:39:57.282425Z	    inventory{
2025-09-17T00:39:57.282524Z	      quantity,
2025-09-17T00:39:57.282639Z	      status,
2025-09-17T00:39:57.282746Z	      warehouse,
2025-09-17T00:39:57.282865Z	      lastUpdated,
2025-09-17T00:39:57.282968Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.283069Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.283176Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.283297Z	    },
2025-09-17T00:39:57.283404Z	    isActive,
2025-09-17T00:39:57.283516Z	    isFeatured,
2025-09-17T00:39:57.283629Z	    isNew,
2025-09-17T00:39:57.283738Z	    _createdAt,
2025-09-17T00:39:57.283853Z	    _updatedAt
2025-09-17T00:39:57.283965Z	  
2025-09-17T00:39:57.284064Z	      },
2025-09-17T00:39:57.284176Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-17T00:39:57.284314Z	    }
2025-09-17T00:39:57.284428Z	  
2025-09-17T00:39:57.284554Z	Query parameters: {
2025-09-17T00:39:57.284662Z	  limit: 8,
2025-09-17T00:39:57.28478Z	  offset: 0,
2025-09-17T00:39:57.284888Z	  category: undefined,
2025-09-17T00:39:57.284982Z	  brand: 'ncc',
2025-09-17T00:39:57.285081Z	  featured: undefined
2025-09-17T00:39:57.285204Z	}
2025-09-17T00:39:57.285337Z	Fetching solutions with query: 
2025-09-17T00:39:57.285451Z	    {
2025-09-17T00:39:57.285563Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.285686Z	        
2025-09-17T00:39:57.285801Z	    _id,
2025-09-17T00:39:57.286068Z	    title,
2025-09-17T00:39:57.286211Z	    "slug": slug.current,
2025-09-17T00:39:57.286353Z	    summary,
2025-09-17T00:39:57.286465Z	    description,
2025-09-17T00:39:57.286581Z	    coverImage,
2025-09-17T00:39:57.286691Z	    primaryBrand->{
2025-09-17T00:39:57.286811Z	      _id,
2025-09-17T00:39:57.286926Z	      name,
2025-09-17T00:39:57.287031Z	      "slug": slug.current,
2025-09-17T00:39:57.287147Z	      logo
2025-09-17T00:39:57.287257Z	    },
2025-09-17T00:39:57.287384Z	    relatedBrands[]->{
2025-09-17T00:39:57.287495Z	      _id,
2025-09-17T00:39:57.287607Z	      name,
2025-09-17T00:39:57.287726Z	      "slug": slug.current,
2025-09-17T00:39:57.287858Z	      logo
2025-09-17T00:39:57.287984Z	    },
2025-09-17T00:39:57.288085Z	    targetMarket,
2025-09-17T00:39:57.288185Z	    complexity,
2025-09-17T00:39:57.288301Z	    publishedAt,
2025-09-17T00:39:57.288421Z	    isPublished,
2025-09-17T00:39:57.288541Z	    isFeatured,
2025-09-17T00:39:57.288649Z	    viewCount,
2025-09-17T00:39:57.288754Z	    _createdAt,
2025-09-17T00:39:57.288863Z	    _updatedAt
2025-09-17T00:39:57.28896Z	  
2025-09-17T00:39:57.289066Z	      },
2025-09-17T00:39:57.289173Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-17T00:39:57.289295Z	    }
2025-09-17T00:39:57.289406Z	  
2025-09-17T00:39:57.289506Z	Query parameters: {
2025-09-17T00:39:57.289608Z	  limit: 4,
2025-09-17T00:39:57.289706Z	  offset: 0,
2025-09-17T00:39:57.289829Z	  targetMarket: undefined,
2025-09-17T00:39:57.289939Z	  brand: 'ncc',
2025-09-17T00:39:57.290046Z	  featured: undefined
2025-09-17T00:39:57.290171Z	}
2025-09-17T00:39:57.290296Z	✅ [getBrandData] Found brand: ncc
2025-09-17T00:39:57.290409Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.290516Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.290629Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-17T00:39:57.290743Z	Fetching products with query: 
2025-09-17T00:39:57.290863Z	    {
2025-09-17T00:39:57.290966Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.291079Z	        
2025-09-17T00:39:57.291188Z	    _id,
2025-09-17T00:39:57.291445Z	    _type,
2025-09-17T00:39:57.291587Z	    partNumber,
2025-09-17T00:39:57.2917Z	    "slug": slug.current,
2025-09-17T00:39:57.291818Z	    title,
2025-09-17T00:39:57.291917Z	    shortDescription,
2025-09-17T00:39:57.292047Z	    image,
2025-09-17T00:39:57.292155Z	    brand->{
2025-09-17T00:39:57.292246Z	      name,
2025-09-17T00:39:57.292356Z	      "slug": slug.current,
2025-09-17T00:39:57.292443Z	      logo
2025-09-17T00:39:57.292562Z	    },
2025-09-17T00:39:57.29267Z	    category->{
2025-09-17T00:39:57.292779Z	      name,
2025-09-17T00:39:57.292896Z	      "slug": slug.current
2025-09-17T00:39:57.293113Z	    },
2025-09-17T00:39:57.293283Z	    pricing{
2025-09-17T00:39:57.293403Z	      currency,
2025-09-17T00:39:57.293511Z	      tiers[]{
2025-09-17T00:39:57.293616Z	        quantity,
2025-09-17T00:39:57.293709Z	        price,
2025-09-17T00:39:57.29382Z	        unit
2025-09-17T00:39:57.29391Z	      },
2025-09-17T00:39:57.294009Z	      moq,
2025-09-17T00:39:57.294112Z	      leadTime,
2025-09-17T00:39:57.294205Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.294334Z	      "price": tiers[0].price,
2025-09-17T00:39:57.294438Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.294573Z	    },
2025-09-17T00:39:57.29469Z	    inventory{
2025-09-17T00:39:57.294804Z	      quantity,
2025-09-17T00:39:57.294914Z	      status,
2025-09-17T00:39:57.295015Z	      warehouse,
2025-09-17T00:39:57.295109Z	      lastUpdated,
2025-09-17T00:39:57.295209Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.295347Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.295464Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.295562Z	    },
2025-09-17T00:39:57.29568Z	    isActive,
2025-09-17T00:39:57.295794Z	    isFeatured,
2025-09-17T00:39:57.295899Z	    isNew,
2025-09-17T00:39:57.295993Z	    _createdAt,
2025-09-17T00:39:57.296097Z	    _updatedAt
2025-09-17T00:39:57.296202Z	  
2025-09-17T00:39:57.29633Z	      },
2025-09-17T00:39:57.296455Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-17T00:39:57.29653Z	    }
2025-09-17T00:39:57.296607Z	  
2025-09-17T00:39:57.29668Z	Query parameters: {
2025-09-17T00:39:57.296769Z	  limit: 8,
2025-09-17T00:39:57.296856Z	  offset: 0,
2025-09-17T00:39:57.296952Z	  category: undefined,
2025-09-17T00:39:57.297023Z	  brand: 'ncc',
2025-09-17T00:39:57.297086Z	  featured: undefined
2025-09-17T00:39:57.297175Z	}
2025-09-17T00:39:57.297277Z	Fetching solutions with query: 
2025-09-17T00:39:57.297478Z	    {
2025-09-17T00:39:57.297578Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.297688Z	        
2025-09-17T00:39:57.297797Z	    _id,
2025-09-17T00:39:57.297858Z	    title,
2025-09-17T00:39:57.297918Z	    "slug": slug.current,
2025-09-17T00:39:57.297983Z	    summary,
2025-09-17T00:39:57.298078Z	    description,
2025-09-17T00:39:57.298182Z	    coverImage,
2025-09-17T00:39:57.298283Z	    primaryBrand->{
2025-09-17T00:39:57.298397Z	      _id,
2025-09-17T00:39:57.29847Z	      name,
2025-09-17T00:39:57.298543Z	      "slug": slug.current,
2025-09-17T00:39:57.298631Z	      logo
2025-09-17T00:39:57.298754Z	    },
2025-09-17T00:39:57.29888Z	    relatedBrands[]->{
2025-09-17T00:39:57.299008Z	      _id,
2025-09-17T00:39:57.299129Z	      name,
2025-09-17T00:39:57.299244Z	      "slug": slug.current,
2025-09-17T00:39:57.299372Z	      logo
2025-09-17T00:39:57.299514Z	    },
2025-09-17T00:39:57.299743Z	    targetMarket,
2025-09-17T00:39:57.299888Z	    complexity,
2025-09-17T00:39:57.299985Z	    publishedAt,
2025-09-17T00:39:57.300164Z	    isPublished,
2025-09-17T00:39:57.300336Z	    isFeatured,
2025-09-17T00:39:57.300431Z	    viewCount,
2025-09-17T00:39:57.300576Z	    _createdAt,
2025-09-17T00:39:57.300734Z	    _updatedAt
2025-09-17T00:39:57.300861Z	  
2025-09-17T00:39:57.300929Z	      },
2025-09-17T00:39:57.301032Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-17T00:39:57.301221Z	    }
2025-09-17T00:39:57.30137Z	  
2025-09-17T00:39:57.301471Z	Query parameters: {
2025-09-17T00:39:57.301564Z	  limit: 4,
2025-09-17T00:39:57.301668Z	  offset: 0,
2025-09-17T00:39:57.30178Z	  targetMarket: undefined,
2025-09-17T00:39:57.301874Z	  brand: 'ncc',
2025-09-17T00:39:57.30197Z	  featured: undefined
2025-09-17T00:39:57.302136Z	}
2025-09-17T00:39:57.302302Z	✅ [getBrandData] Found brand: ncc
2025-09-17T00:39:57.302379Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.302442Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.302669Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-17T00:39:57.302794Z	Fetching products with query: 
2025-09-17T00:39:57.302911Z	    {
2025-09-17T00:39:57.30301Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.303114Z	        
2025-09-17T00:39:57.303294Z	    _id,
2025-09-17T00:39:57.303396Z	    _type,
2025-09-17T00:39:57.303487Z	    partNumber,
2025-09-17T00:39:57.303606Z	    "slug": slug.current,
2025-09-17T00:39:57.303712Z	    title,
2025-09-17T00:39:57.303831Z	    shortDescription,
2025-09-17T00:39:57.303933Z	    image,
2025-09-17T00:39:57.30404Z	    brand->{
2025-09-17T00:39:57.304117Z	      name,
2025-09-17T00:39:57.304201Z	      "slug": slug.current,
2025-09-17T00:39:57.304319Z	      logo
2025-09-17T00:39:57.304416Z	    },
2025-09-17T00:39:57.3045Z	    category->{
2025-09-17T00:39:57.304587Z	      name,
2025-09-17T00:39:57.304674Z	      "slug": slug.current
2025-09-17T00:39:57.304781Z	    },
2025-09-17T00:39:57.304878Z	    pricing{
2025-09-17T00:39:57.304998Z	      currency,
2025-09-17T00:39:57.305096Z	      tiers[]{
2025-09-17T00:39:57.305185Z	        quantity,
2025-09-17T00:39:57.305281Z	        price,
2025-09-17T00:39:57.305399Z	        unit
2025-09-17T00:39:57.305504Z	      },
2025-09-17T00:39:57.305617Z	      moq,
2025-09-17T00:39:57.305716Z	      leadTime,
2025-09-17T00:39:57.305825Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.305919Z	      "price": tiers[0].price,
2025-09-17T00:39:57.306014Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.3061Z	    },
2025-09-17T00:39:57.306187Z	    inventory{
2025-09-17T00:39:57.306324Z	      quantity,
2025-09-17T00:39:57.306402Z	      status,
2025-09-17T00:39:57.306477Z	      warehouse,
2025-09-17T00:39:57.306577Z	      lastUpdated,
2025-09-17T00:39:57.306679Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.306786Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.30689Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.306984Z	    },
2025-09-17T00:39:57.307075Z	    isActive,
2025-09-17T00:39:57.307179Z	    isFeatured,
2025-09-17T00:39:57.307285Z	    isNew,
2025-09-17T00:39:57.307391Z	    _createdAt,
2025-09-17T00:39:57.307488Z	    _updatedAt
2025-09-17T00:39:57.307574Z	  
2025-09-17T00:39:57.307678Z	      },
2025-09-17T00:39:57.307791Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-17T00:39:57.307904Z	    }
2025-09-17T00:39:57.308154Z	  
2025-09-17T00:39:57.30831Z	Query parameters: {
2025-09-17T00:39:57.308493Z	  limit: 8,
2025-09-17T00:39:57.308581Z	  offset: 0,
2025-09-17T00:39:57.308642Z	  category: undefined,
2025-09-17T00:39:57.309021Z	  brand: 'epcos',
2025-09-17T00:39:57.3091Z	  featured: undefined
2025-09-17T00:39:57.30937Z	}
2025-09-17T00:39:57.309484Z	Fetching solutions with query: 
2025-09-17T00:39:57.30958Z	    {
2025-09-17T00:39:57.309903Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.309982Z	        
2025-09-17T00:39:57.310039Z	    _id,
2025-09-17T00:39:57.310093Z	    title,
2025-09-17T00:39:57.310146Z	    "slug": slug.current,
2025-09-17T00:39:57.310199Z	    summary,
2025-09-17T00:39:57.310253Z	    description,
2025-09-17T00:39:57.310362Z	    coverImage,
2025-09-17T00:39:57.310456Z	    primaryBrand->{
2025-09-17T00:39:57.310562Z	      _id,
2025-09-17T00:39:57.310662Z	      name,
2025-09-17T00:39:57.310743Z	      "slug": slug.current,
2025-09-17T00:39:57.310808Z	      logo
2025-09-17T00:39:57.311056Z	    },
2025-09-17T00:39:57.311301Z	    relatedBrands[]->{
2025-09-17T00:39:57.311525Z	      _id,
2025-09-17T00:39:57.311632Z	      name,
2025-09-17T00:39:57.311937Z	      "slug": slug.current,
2025-09-17T00:39:57.312145Z	      logo
2025-09-17T00:39:57.312243Z	    },
2025-09-17T00:39:57.312478Z	    targetMarket,
2025-09-17T00:39:57.312697Z	    complexity,
2025-09-17T00:39:57.312774Z	    publishedAt,
2025-09-17T00:39:57.312859Z	    isPublished,
2025-09-17T00:39:57.312953Z	    isFeatured,
2025-09-17T00:39:57.313029Z	    viewCount,
2025-09-17T00:39:57.313126Z	    _createdAt,
2025-09-17T00:39:57.313237Z	    _updatedAt
2025-09-17T00:39:57.313402Z	  
2025-09-17T00:39:57.313492Z	      },
2025-09-17T00:39:57.313553Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-17T00:39:57.31361Z	    }
2025-09-17T00:39:57.313677Z	  
2025-09-17T00:39:57.313739Z	Query parameters: {
2025-09-17T00:39:57.313796Z	  limit: 4,
2025-09-17T00:39:57.313857Z	  offset: 0,
2025-09-17T00:39:57.313925Z	  targetMarket: undefined,
2025-09-17T00:39:57.313986Z	  brand: 'epcos',
2025-09-17T00:39:57.314041Z	  featured: undefined
2025-09-17T00:39:57.314095Z	}
2025-09-17T00:39:57.31417Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-17T00:39:57.314231Z	Fetching products with query: 
2025-09-17T00:39:57.314343Z	    {
2025-09-17T00:39:57.314434Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.31453Z	        
2025-09-17T00:39:57.31464Z	    _id,
2025-09-17T00:39:57.314835Z	    _type,
2025-09-17T00:39:57.314933Z	    partNumber,
2025-09-17T00:39:57.315034Z	    "slug": slug.current,
2025-09-17T00:39:57.315137Z	    title,
2025-09-17T00:39:57.315232Z	    shortDescription,
2025-09-17T00:39:57.315347Z	    image,
2025-09-17T00:39:57.31545Z	    brand->{
2025-09-17T00:39:57.31555Z	      name,
2025-09-17T00:39:57.315652Z	      "slug": slug.current,
2025-09-17T00:39:57.315765Z	      logo
2025-09-17T00:39:57.315897Z	    },
2025-09-17T00:39:57.31598Z	    category->{
2025-09-17T00:39:57.316093Z	      name,
2025-09-17T00:39:57.316192Z	      "slug": slug.current
2025-09-17T00:39:57.316261Z	    },
2025-09-17T00:39:57.316506Z	    pricing{
2025-09-17T00:39:57.316652Z	      currency,
2025-09-17T00:39:57.316831Z	      tiers[]{
2025-09-17T00:39:57.316908Z	        quantity,
2025-09-17T00:39:57.316993Z	        price,
2025-09-17T00:39:57.31734Z	        unit
2025-09-17T00:39:57.317477Z	      },
2025-09-17T00:39:57.317745Z	      moq,
2025-09-17T00:39:57.317826Z	      leadTime,
2025-09-17T00:39:57.317893Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.318192Z	      "price": tiers[0].price,
2025-09-17T00:39:57.31834Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.318545Z	    },
2025-09-17T00:39:57.318675Z	    inventory{
2025-09-17T00:39:57.31876Z	      quantity,
2025-09-17T00:39:57.318892Z	      status,
2025-09-17T00:39:57.319Z	      warehouse,
2025-09-17T00:39:57.319177Z	      lastUpdated,
2025-09-17T00:39:57.319305Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.319445Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.319552Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.319762Z	    },
2025-09-17T00:39:57.319889Z	    isActive,
2025-09-17T00:39:57.32Z	    isFeatured,
2025-09-17T00:39:57.32029Z	    isNew,
2025-09-17T00:39:57.320475Z	    _createdAt,
2025-09-17T00:39:57.320555Z	    _updatedAt
2025-09-17T00:39:57.320614Z	  
2025-09-17T00:39:57.320722Z	      },
2025-09-17T00:39:57.320828Z	      "total": count(*[_type == "product" && isActive == true && !(_id in p❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:57.320975Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:57.321149Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-17T00:39:57.321308Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:39:57.321411Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619)
2025-09-17T00:39:57.32152Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-17T00:39:57.321693Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:39:57.32177Z	}
2025-09-17T00:39:57.321993Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:57.322234Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:57.322469Z	Error fetching brand support data: Error: NEXT_NOT_FOUND
2025-09-17T00:39:57.322611Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:39:57.322717Z	    at N (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/support/page.js:1:5619)
2025-09-17T00:39:57.322847Z	    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-09-17T00:39:57.322979Z	    at runNextTicks (node:internal/process/task_queues:64:3)
2025-09-17T00:39:57.323147Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-17T00:39:57.323218Z	    at process.processTimers (node:internal/timers:512:7) {
2025-09-17T00:39:57.323438Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:39:57.323672Z	}
2025-09-17T00:39:57.379678Z	ath("drafts.**")) && brand->slug.current == "epcos"])
2025-09-17T00:39:57.380205Z	    }
2025-09-17T00:39:57.380359Z	  
2025-09-17T00:39:57.380471Z	Query parameters: {
2025-09-17T00:39:57.380571Z	  limit: 8,
2025-09-17T00:39:57.380664Z	  offset: 0,
2025-09-17T00:39:57.380766Z	  category: undefined,
2025-09-17T00:39:57.380866Z	  brand: 'epcos',
2025-09-17T00:39:57.380966Z	  featured: undefined
2025-09-17T00:39:57.381139Z	}
2025-09-17T00:39:57.38138Z	Fetching solutions with query: 
2025-09-17T00:39:57.381519Z	    {
2025-09-17T00:39:57.381625Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.381759Z	        
2025-09-17T00:39:57.381864Z	    _id,
2025-09-17T00:39:57.381973Z	    title,
2025-09-17T00:39:57.382069Z	    "slug": slug.current,
2025-09-17T00:39:57.382168Z	    summary,
2025-09-17T00:39:57.382284Z	    description,
2025-09-17T00:39:57.382391Z	    coverImage,
2025-09-17T00:39:57.382492Z	    primaryBrand->{
2025-09-17T00:39:57.382587Z	      _id,
2025-09-17T00:39:57.382685Z	      name,
2025-09-17T00:39:57.382799Z	      "slug": slug.current,
2025-09-17T00:39:57.382917Z	      logo
2025-09-17T00:39:57.383021Z	    },
2025-09-17T00:39:57.383122Z	    relatedBrands[]->{
2025-09-17T00:39:57.383223Z	      _id,
2025-09-17T00:39:57.383349Z	      name,
2025-09-17T00:39:57.383456Z	      "slug": slug.current,
2025-09-17T00:39:57.383564Z	      logo
2025-09-17T00:39:57.383677Z	    },
2025-09-17T00:39:57.383802Z	    targetMarket,
2025-09-17T00:39:57.383914Z	    complexity,
2025-09-17T00:39:57.384031Z	    publishedAt,
2025-09-17T00:39:57.384165Z	    isPublished,
2025-09-17T00:39:57.384346Z	    isFeatured,
2025-09-17T00:39:57.38447Z	    viewCount,
2025-09-17T00:39:57.384586Z	    _createdAt,
2025-09-17T00:39:57.385297Z	    _updatedAt
2025-09-17T00:39:57.385456Z	  
2025-09-17T00:39:57.385588Z	      },
2025-09-17T00:39:57.385702Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-17T00:39:57.385827Z	    }
2025-09-17T00:39:57.385939Z	  
2025-09-17T00:39:57.386044Z	Query parameters: {
2025-09-17T00:39:57.386149Z	  limit: 4,
2025-09-17T00:39:57.386242Z	  offset: 0,
2025-09-17T00:39:57.386373Z	  targetMarket: undefined,
2025-09-17T00:39:57.386484Z	  brand: 'epcos',
2025-09-17T00:39:57.386588Z	  featured: undefined
2025-09-17T00:39:57.386686Z	}
2025-09-17T00:39:57.386814Z	✅ [getBrandData] Found brand: Epcos
2025-09-17T00:39:57.38693Z	✅ [getBrandData] Found brand: Epcos
2025-09-17T00:39:57.387034Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.387133Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.387244Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.38738Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.387491Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-17T00:39:57.387595Z	Fetching products with query: 
2025-09-17T00:39:57.387695Z	    {
2025-09-17T00:39:57.387813Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.387935Z	        
2025-09-17T00:39:57.388043Z	    _id,
2025-09-17T00:39:57.388157Z	    _type,
2025-09-17T00:39:57.388278Z	    partNumber,
2025-09-17T00:39:57.388394Z	    "slug": slug.current,
2025-09-17T00:39:57.388496Z	    title,
2025-09-17T00:39:57.388594Z	    shortDescription,
2025-09-17T00:39:57.388694Z	    image,
2025-09-17T00:39:57.388817Z	    brand->{
2025-09-17T00:39:57.388923Z	      name,
2025-09-17T00:39:57.389029Z	      "slug": slug.current,
2025-09-17T00:39:57.389129Z	      logo
2025-09-17T00:39:57.389228Z	    },
2025-09-17T00:39:57.389358Z	    category->{
2025-09-17T00:39:57.389477Z	      name,
2025-09-17T00:39:57.389584Z	      "slug": slug.current
2025-09-17T00:39:57.389698Z	    },
2025-09-17T00:39:57.389814Z	    pricing{
2025-09-17T00:39:57.389919Z	      currency,
2025-09-17T00:39:57.390025Z	      tiers[]{
2025-09-17T00:39:57.390138Z	        quantity,
2025-09-17T00:39:57.390242Z	        price,
2025-09-17T00:39:57.390371Z	        unit
2025-09-17T00:39:57.39047Z	      },
2025-09-17T00:39:57.39057Z	      moq,
2025-09-17T00:39:57.390678Z	      leadTime,
2025-09-17T00:39:57.3908Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.390901Z	      "price": tiers[0].price,
2025-09-17T00:39:57.391007Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.391117Z	    },
2025-09-17T00:39:57.39122Z	    inventory{
2025-09-17T00:39:57.391347Z	      quantity,
2025-09-17T00:39:57.391451Z	      status,
2025-09-17T00:39:57.391539Z	      warehouse,
2025-09-17T00:39:57.391645Z	      lastUpdated,
2025-09-17T00:39:57.391775Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.391887Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.391993Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.392096Z	    },
2025-09-17T00:39:57.392192Z	    isActive,
2025-09-17T00:39:57.39233Z	    isFeatured,
2025-09-17T00:39:57.392441Z	    isNew,
2025-09-17T00:39:57.392565Z	    _createdAt,
2025-09-17T00:39:57.398394Z	    _updatedAt
2025-09-17T00:39:57.398704Z	  
2025-09-17T00:39:57.398964Z	      },
2025-09-17T00:39:57.399113Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-17T00:39:57.399279Z	    }
2025-09-17T00:39:57.399417Z	  
2025-09-17T00:39:57.399537Z	Query parameters: {
2025-09-17T00:39:57.399667Z	  limit: 8,
2025-09-17T00:39:57.39978Z	  offset: 0,
2025-09-17T00:39:57.399887Z	  category: undefined,
2025-09-17T00:39:57.399993Z	  brand: 'semikron',
2025-09-17T00:39:57.400104Z	  featured: undefined
2025-09-17T00:39:57.40022Z	}
2025-09-17T00:39:57.400464Z	Fetching solutions with query: 
2025-09-17T00:39:57.400603Z	    {
2025-09-17T00:39:57.400738Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.400908Z	        
2025-09-17T00:39:57.401071Z	    _id,
2025-09-17T00:39:57.401228Z	    title,
2025-09-17T00:39:57.40139Z	    "slug": slug.current,
2025-09-17T00:39:57.401551Z	    summary,
2025-09-17T00:39:57.401725Z	    description,
2025-09-17T00:39:57.401879Z	    coverImage,
2025-09-17T00:39:57.402043Z	    primaryBrand->{
2025-09-17T00:39:57.402205Z	      _id,
2025-09-17T00:39:57.40238Z	      name,
2025-09-17T00:39:57.402535Z	      "slug": slug.current,
2025-09-17T00:39:57.402691Z	      logo
2025-09-17T00:39:57.402846Z	    },
2025-09-17T00:39:57.403018Z	    relatedBrands[]->{
2025-09-17T00:39:57.403155Z	      _id,
2025-09-17T00:39:57.403321Z	      name,
2025-09-17T00:39:57.403472Z	      "slug": slug.current,
2025-09-17T00:39:57.403615Z	      logo
2025-09-17T00:39:57.403793Z	    },
2025-09-17T00:39:57.40395Z	    targetMarket,
2025-09-17T00:39:57.404108Z	    complexity,
2025-09-17T00:39:57.404254Z	    publishedAt,
2025-09-17T00:39:57.40443Z	    isPublished,
2025-09-17T00:39:57.404597Z	    isFeatured,
2025-09-17T00:39:57.404771Z	    viewCount,
2025-09-17T00:39:57.404942Z	    _createdAt,
2025-09-17T00:39:57.405086Z	    _updatedAt
2025-09-17T00:39:57.405228Z	  
2025-09-17T00:39:57.405385Z	      },
2025-09-17T00:39:57.405528Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-17T00:39:57.405685Z	    }
2025-09-17T00:39:57.40582Z	  
2025-09-17T00:39:57.405954Z	Query parameters: {
2025-09-17T00:39:57.406098Z	  limit: 4,
2025-09-17T00:39:57.406247Z	  offset: 0,
2025-09-17T00:39:57.406415Z	  targetMarket: undefined,
2025-09-17T00:39:57.406559Z	  brand: 'semikron',
2025-09-17T00:39:57.406679Z	  featured: undefined
2025-09-17T00:39:57.406877Z	}
2025-09-17T00:39:57.407013Z	✅ [getBrandData] Found brand: Semikron
2025-09-17T00:39:57.407126Z	Products fetch result: {
2025-09-17T00:39:57.407311Z	  totalProducts: 1,
2025-09-17T00:39:57.407465Z	  fetchedProducts: 1,
2025-09-17T00:39:57.407615Z	  firstProduct: {
2025-09-17T00:39:57.407743Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-17T00:39:57.407897Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-17T00:39:57.408022Z	    _type: 'product',
2025-09-17T00:39:57.408129Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-17T00:39:57.408241Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-17T00:39:57.408382Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:57.408497Z	    image: null,
2025-09-17T00:39:57.408619Z	    inventory: {
2025-09-17T00:39:57.408772Z	      inStock: true,
2025-09-17T00:39:57.40988Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-17T00:39:57.410045Z	      quantity: 0,
2025-09-17T00:39:57.410164Z	      status: 'in_stock',
2025-09-17T00:39:57.410289Z	      warehouse: null
2025-09-17T00:39:57.410406Z	    },
2025-09-17T00:39:57.410521Z	    isActive: true,
2025-09-17T00:39:57.410627Z	    isFeatured: false,
2025-09-17T00:39:57.410739Z	    isNew: false,
2025-09-17T00:39:57.410845Z	    partNumber: 'SKKT106/16E',
2025-09-17T00:39:57.410947Z	    pricing: {
2025-09-17T00:39:57.411064Z	      currency: 'CNY',
2025-09-17T00:39:57.41117Z	      leadTime: null,
2025-09-17T00:39:57.411289Z	      moq: null,
2025-09-17T00:39:57.4114Z	      price: null,
2025-09-17T00:39:57.411504Z	      tiers: null
2025-09-17T00:39:57.411603Z	    },
2025-09-17T00:39:57.411701Z	    shortDescription: 'SKKT106/16E',
2025-09-17T00:39:57.411796Z	    slug: 'SKKT106/16E',
2025-09-17T00:39:57.411883Z	    title: 'SKKT106/16E'
2025-09-17T00:39:57.411963Z	  }
2025-09-17T00:39:57.412053Z	}
2025-09-17T00:39:57.412136Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.412218Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-17T00:39:57.412323Z	Fetching products with query: 
2025-09-17T00:39:57.412424Z	    {
2025-09-17T00:39:57.41251Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.412613Z	        
2025-09-17T00:39:57.412695Z	    _id,
2025-09-17T00:39:57.412784Z	    _type,
2025-09-17T00:39:57.412876Z	    partNumber,
2025-09-17T00:39:57.412967Z	    "slug": slug.current,
2025-09-17T00:39:57.41312Z	    title,
2025-09-17T00:39:57.413226Z	    shortDescription,
2025-09-17T00:39:57.413359Z	    image,
2025-09-17T00:39:57.41349Z	    brand->{
2025-09-17T00:39:57.413592Z	      name,
2025-09-17T00:39:57.413694Z	      "slug": slug.current,
2025-09-17T00:39:57.413801Z	      logo
2025-09-17T00:39:57.413905Z	    },
2025-09-17T00:39:57.414026Z	    category->{
2025-09-17T00:39:57.414132Z	      name,
2025-09-17T00:39:57.414239Z	      "slug": slug.current
2025-09-17T00:39:57.414368Z	    },
2025-09-17T00:39:57.414555Z	    pricing{
2025-09-17T00:39:57.414737Z	      currency,
2025-09-17T00:39:57.414863Z	      tiers[]{
2025-09-17T00:39:57.414968Z	        quantity,
2025-09-17T00:39:57.415094Z	        price,
2025-09-17T00:39:57.415204Z	        unit
2025-09-17T00:39:57.415331Z	      },
2025-09-17T00:39:57.415439Z	      moq,
2025-09-17T00:39:57.41555Z	      leadTime,
2025-09-17T00:39:57.41565Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.41575Z	      "price": tiers[0].price,
2025-09-17T00:39:57.415874Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.415995Z	    },
2025-09-17T00:39:57.416099Z	    inventory{
2025-09-17T00:39:57.416202Z	      quantity,
2025-09-17T00:39:57.416328Z	      status,
2025-09-17T00:39:57.416432Z	      warehouse,
2025-09-17T00:39:57.416539Z	      lastUpdated,
2025-09-17T00:39:57.41664Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.416739Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.416841Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.416941Z	    },
2025-09-17T00:39:57.417054Z	    isActive,
2025-09-17T00:39:57.41718Z	    isFeatured,
2025-09-17T00:39:57.417311Z	    isNew,
2025-09-17T00:39:57.417422Z	    _createdAt,
2025-09-17T00:39:57.417531Z	    _updatedAt
2025-09-17T00:39:57.417641Z	  
2025-09-17T00:39:57.417746Z	      },
2025-09-17T00:39:57.417855Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-17T00:39:57.417961Z	    }
2025-09-17T00:39:57.418122Z	  
2025-09-17T00:39:57.418295Z	Query parameters: {
2025-09-17T00:39:57.418424Z	  limit: 8,
2025-09-17T00:39:57.418532Z	  offset: 0,
2025-09-17T00:39:57.418653Z	  category: undefined,
2025-09-17T00:39:57.418767Z	  brand: 'semikron',
2025-09-17T00:39:57.418868Z	  featured: undefined
2025-09-17T00:39:57.418967Z	}
2025-09-17T00:39:57.419067Z	Fetching solutions with query: 
2025-09-17T00:39:57.419158Z	    {
2025-09-17T00:39:57.419291Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.419408Z	        
2025-09-17T00:39:57.419516Z	    _id,
2025-09-17T00:39:57.419628Z	    title,
2025-09-17T00:39:57.419734Z	    "slug": slug.current,
2025-09-17T00:39:57.419837Z	    summary,
2025-09-17T00:39:57.419946Z	    description,
2025-09-17T00:39:57.420059Z	    coverImage,
2025-09-17T00:39:57.420155Z	    primaryBrand->{
2025-09-17T00:39:57.420256Z	      _id,
2025-09-17T00:39:57.420389Z	      name,
2025-09-17T00:39:57.420481Z	      "slug": slug.current,
2025-09-17T00:39:57.420583Z	      logo
2025-09-17T00:39:57.420694Z	    },
2025-09-17T00:39:57.42079Z	    relatedBrands[]->{
2025-09-17T00:39:57.420885Z	      _id,
2025-09-17T00:39:57.42097Z	      name,
2025-09-17T00:39:57.421067Z	      "slug": slug.current,
2025-09-17T00:39:57.421154Z	      logo
2025-09-17T00:39:57.421239Z	    },
2025-09-17T00:39:57.421344Z	    targetMarket,
2025-09-17T00:39:57.421436Z	    complexity,
2025-09-17T00:39:57.421528Z	    publishedAt,
2025-09-17T00:39:57.421611Z	    isPublished,
2025-09-17T00:39:57.421696Z	    isFeatured,
2025-09-17T00:39:57.421784Z	    viewCount,
2025-09-17T00:39:57.421868Z	    _createdAt,
2025-09-17T00:39:57.421967Z	    _updatedAt
2025-09-17T00:39:57.422072Z	  
2025-09-17T00:39:57.422158Z	      },
2025-09-17T00:39:57.422245Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-17T00:39:57.422358Z	    }
2025-09-17T00:39:57.422419Z	  
2025-09-17T00:39:57.422475Z	Query parameters: {
2025-09-17T00:39:57.42253Z	  limit: 4,
2025-09-17T00:39:57.422614Z	  offset: 0,
2025-09-17T00:39:57.422723Z	  targetMarket: undefined,
2025-09-17T00:39:57.422818Z	  brand: 'semikron',
2025-09-17T00:39:57.422951Z	  featured: undefined
2025-09-17T00:39:57.423062Z	}
2025-09-17T00:39:57.423157Z	✅ [getBrandData] Found brand: Semikron
2025-09-17T00:39:57.423251Z	Products fetch result: {
2025-09-17T00:39:57.423368Z	  totalProducts: 1,
2025-09-17T00:39:57.423459Z	  fetchedProducts: 1,
2025-09-17T00:39:57.423538Z	  firstProduct: {
2025-09-17T00:39:57.423615Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-17T00:39:57.423688Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-17T00:39:57.423764Z	    _type: 'product',
2025-09-17T00:39:57.423887Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-17T00:39:57.423983Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-17T00:39:57.424088Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:57.424177Z	    image: null,
2025-09-17T00:39:57.424258Z	    inventory: {
2025-09-17T00:39:57.424376Z	      inStock: true,
2025-09-17T00:39:57.42447Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-17T00:39:57.424567Z	      quantity: 0,
2025-09-17T00:39:57.42467Z	      status: 'in_stock',
2025-09-17T00:39:57.424771Z	      warehouse: null
2025-09-17T00:39:57.424871Z	    },
2025-09-17T00:39:57.424977Z	    isActive: true,
2025-09-17T00:39:57.425094Z	    isFeatured: false,
2025-09-17T00:39:57.425203Z	    isNew: false,
2025-09-17T00:39:57.425348Z	    partNumber: 'SKKT106/16E',
2025-09-17T00:39:57.425541Z	    pricing: {
2025-09-17T00:39:57.425723Z	      currency: 'CNY',
2025-09-17T00:39:57.425901Z	      leadTime: null,
2025-09-17T00:39:57.426042Z	      moq: null,
2025-09-17T00:39:57.426154Z	      price: null,
2025-09-17T00:39:57.426283Z	      tiers: null
2025-09-17T00:39:57.426412Z	    },
2025-09-17T00:39:57.426554Z	    shortDescription: 'SKKT106/16E',
2025-09-17T00:39:57.426688Z	    slug: 'SKKT106/16E',
2025-09-17T00:39:57.42699Z	    title: 'SKKT106/16E'
2025-09-17T00:39:57.427151Z	  }
2025-09-17T00:39:57.427323Z	}
2025-09-17T00:39:57.427506Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.427643Z	✅ [getBrandData] Found brand: Epcos
2025-09-17T00:39:57.427797Z	✅ [getBrandData] Found brand: Epcos
2025-09-17T00:39:57.427957Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.428118Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.428299Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.428461Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.428613Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-17T00:39:57.428755Z	Fetching products with query: 
2025-09-17T00:39:57.428916Z	    {
2025-09-17T00:39:57.429062Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.429225Z	        
2025-09-17T00:39:57.429392Z	    _id,
2025-09-17T00:39:57.429545Z	    _type,
2025-09-17T00:39:57.429697Z	    partNumber,
2025-09-17T00:39:57.429855Z	    "slug": slug.current,
2025-09-17T00:39:57.42998Z	    title,
2025-09-17T00:39:57.43012Z	    shortDescription,
2025-09-17T00:39:57.430246Z	    image,
2025-09-17T00:39:57.430388Z	    brand->{
2025-09-17T00:39:57.43053Z	      name,
2025-09-17T00:39:57.430662Z	      "slug": slug.current,
2025-09-17T00:39:57.430807Z	      logo
2025-09-17T00:39:57.430909Z	    },
2025-09-17T00:39:57.431011Z	    category->{
2025-09-17T00:39:57.431113Z	      name,
2025-09-17T00:39:57.43122Z	      "slug": slug.current
2025-09-17T00:39:57.43134Z	    },
2025-09-17T00:39:57.431444Z	    pricing{
2025-09-17T00:39:57.431545Z	      currency,
2025-09-17T00:39:57.431659Z	      tiers[]{
2025-09-17T00:39:57.431774Z	        quantity,
2025-09-17T00:39:57.431879Z	        price,
2025-09-17T00:39:57.431981Z	        unit
2025-09-17T00:39:57.432081Z	      },
2025-09-17T00:39:57.432183Z	      moq,
2025-09-17T00:39:57.432294Z	      leadTime,
2025-09-17T00:39:57.4324Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.432506Z	      "price": tiers[0].price,
2025-09-17T00:39:57.432626Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.432728Z	    },
2025-09-17T00:39:57.432858Z	    inventory{
2025-09-17T00:39:57.43298Z	      quantity,
2025-09-17T00:39:57.433145Z	      status,
2025-09-17T00:39:57.43332Z	      warehouse,
2025-09-17T00:39:57.433503Z	      lastUpdated,
2025-09-17T00:39:57.433618Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.433715Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.433813Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.433895Z	    },
2025-09-17T00:39:57.433977Z	    isActive,
2025-09-17T00:39:57.434059Z	    isFeatured,
2025-09-17T00:39:57.43414Z	    isNew,
2025-09-17T00:39:57.434233Z	    _createdAt,
2025-09-17T00:39:57.434352Z	    _updatedAt
2025-09-17T00:39:57.434446Z	  
2025-09-17T00:39:57.43454Z	      },
2025-09-17T00:39:57.434632Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-17T00:39:57.434743Z	    }
2025-09-17T00:39:57.43486Z	  
2025-09-17T00:39:57.434961Z	Query parameters: {
2025-09-17T00:39:57.43505Z	  limit: 8,
2025-09-17T00:39:57.435141Z	  offset: 0,
2025-09-17T00:39:57.435234Z	  category: undefined,
2025-09-17T00:39:57.435346Z	  brand: 'ncc',
2025-09-17T00:39:57.435446Z	  featured: undefined
2025-09-17T00:39:57.435542Z	}
2025-09-17T00:39:57.435636Z	Fetching solutions with query: 
2025-09-17T00:39:57.435738Z	    {
2025-09-17T00:39:57.435848Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.435965Z	        
2025-09-17T00:39:57.436089Z	    _id,
2025-09-17T00:39:57.436195Z	    title,
2025-09-17T00:39:57.436402Z	    "slug": slug.current,
2025-09-17T00:39:57.436582Z	    summary,
2025-09-17T00:39:57.436727Z	    description,
2025-09-17T00:39:57.436864Z	    coverImage,
2025-09-17T00:39:57.436989Z	    primaryBrand->{
2025-09-17T00:39:57.437332Z	      _id,
2025-09-17T00:39:57.437446Z	      name,
2025-09-17T00:39:57.437509Z	      "slug": slug.current,
2025-09-17T00:39:57.437573Z	      logo
2025-09-17T00:39:57.437692Z	    },
2025-09-17T00:39:57.437939Z	    relatedBrands[]->{
2025-09-17T00:39:57.43808Z	      _id,
2025-09-17T00:39:57.438204Z	      name,
2025-09-17T00:39:57.43851Z	      "slug": slug.current,
2025-09-17T00:39:57.438653Z	      logo
2025-09-17T00:39:57.438786Z	    },
2025-09-17T00:39:57.438966Z	    targetMarket,
2025-09-17T00:39:57.439094Z	    complexity,
2025-09-17T00:39:57.439201Z	    publishedAt,
2025-09-17T00:39:57.439329Z	    isPublished,
2025-09-17T00:39:57.439438Z	    isFeatured,
2025-09-17T00:39:57.439536Z	    viewCount,
2025-09-17T00:39:57.439644Z	    _createdAt,
2025-09-17T00:39:57.439794Z	    _updatedAt
2025-09-17T00:39:57.439898Z	  
2025-09-17T00:39:57.440008Z	      },
2025-09-17T00:39:57.440102Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-17T00:39:57.440188Z	    }
2025-09-17T00:39:57.440288Z	  
2025-09-17T00:39:57.440387Z	Query parameters: {
2025-09-17T00:39:57.440482Z	  limit: 4,
2025-09-17T00:39:57.440573Z	  offset: 0,
2025-09-17T00:39:57.440662Z	  targetMarket: undefined,
2025-09-17T00:39:57.440721Z	  brand: 'ncc',
2025-09-17T00:39:57.440833Z	  featured: undefined
2025-09-17T00:39:57.440953Z	}
2025-09-17T00:39:57.441057Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-17T00:39:57.441133Z	Fetching products with query: 
2025-09-17T00:39:57.4413Z	    {
2025-09-17T00:39:57.441496Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.441651Z	        
2025-09-17T00:39:57.441829Z	    _id,
2025-09-17T00:39:57.441934Z	    _type,
2025-09-17T00:39:57.442049Z	    partNumber,
2025-09-17T00:39:57.442158Z	    "slug": slug.current,
2025-09-17T00:39:57.442263Z	    title,
2025-09-17T00:39:57.442426Z	    shortDescription,
2025-09-17T00:39:57.442535Z	    image,
2025-09-17T00:39:57.442642Z	    brand->{
2025-09-17T00:39:57.442745Z	      name,
2025-09-17T00:39:57.442879Z	      "slug": slug.current,
2025-09-17T00:39:57.442968Z	      logo
2025-09-17T00:39:57.443139Z	    },
2025-09-17T00:39:57.443209Z	    category->{
2025-09-17T00:39:57.443298Z	      name,
2025-09-17T00:39:57.443438Z	      "slug": slug.current
2025-09-17T00:39:57.443548Z	    },
2025-09-17T00:39:57.443647Z	    pricing{
2025-09-17T00:39:57.443753Z	      currency,
2025-09-17T00:39:57.443858Z	      tiers[]{
2025-09-17T00:39:57.443966Z	        quantity,
2025-09-17T00:39:57.444081Z	        price,
2025-09-17T00:39:57.444184Z	        unit
2025-09-17T00:39:57.444304Z	      },
2025-09-17T00:39:57.444423Z	      moq,
2025-09-17T00:39:57.44452Z	      leadTime,
2025-09-17T00:39:57.444625Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.444726Z	      "price": tiers[0].price,
2025-09-17T00:39:57.44483Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.444921Z	    },
2025-09-17T00:39:57.445039Z	    inventory{
2025-09-17T00:39:57.445143Z	      quantity,
2025-09-17T00:39:57.445235Z	      status,
2025-09-17T00:39:57.445346Z	      warehouse,
2025-09-17T00:39:57.445439Z	      lastUpdated,
2025-09-17T00:39:57.445509Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.445585Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.445838Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.445941Z	    },
2025-09-17T00:39:57.446049Z	    isActive,
2025-09-17T00:39:57.44615Z	    isFeatured,
2025-09-17T00:39:57.446395Z	    isNew,
2025-09-17T00:39:57.446484Z	    _createdAt,
2025-09-17T00:39:57.446579Z	    _updatedAt
2025-09-17T00:39:57.446692Z	  
2025-09-17T00:39:57.446794Z	      },
2025-09-17T00:39:57.446965Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-17T00:39:57.447082Z	    }
2025-09-17T00:39:57.447189Z	  
2025-09-17T00:39:57.447291Z	Query parameters: {
2025-09-17T00:39:57.447439Z	  limit: 8,
2025-09-17T00:39:57.447537Z	  offset: 0,
2025-09-17T00:39:57.447627Z	  category: undefined,
2025-09-17T00:39:57.447732Z	  brand: 'ncc',
2025-09-17T00:39:57.44783Z	  featured: undefined
2025-09-17T00:39:57.447921Z	}
2025-09-17T00:39:57.447993Z	Fetching solutions with query: 
2025-09-17T00:39:57.448064Z	    {
2025-09-17T00:39:57.448183Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.448324Z	        
2025-09-17T00:39:57.448495Z	    _id,
2025-09-17T00:39:57.448589Z	    title,
2025-09-17T00:39:57.448739Z	    "slug": slug.current,
2025-09-17T00:39:57.44881Z	    summary,
2025-09-17T00:39:57.448867Z	    description,
2025-09-17T00:39:57.448955Z	    coverImage,
2025-09-17T00:39:57.449035Z	    primaryBrand->{
2025-09-17T00:39:57.449132Z	      _id,
2025-09-17T00:39:57.449236Z	      name,
2025-09-17T00:39:57.449366Z	      "slug": slug.current,
2025-09-17T00:39:57.449474Z	      logo
2025-09-17T00:39:57.449577Z	    },
2025-09-17T00:39:57.449697Z	    relatedBrands[]->{
2025-09-17T00:39:57.449826Z	      _id,
2025-09-17T00:39:57.449932Z	      name,
2025-09-17T00:39:57.450063Z	      "slug": slug.current,
2025-09-17T00:39:57.450197Z	      logo
2025-09-17T00:39:57.450373Z	    },
2025-09-17T00:39:57.450524Z	    targetMarket,
2025-09-17T00:39:57.450647Z	    complexity,
2025-09-17T00:39:57.45075Z	    publishedAt,
2025-09-17T00:39:57.450904Z	    isPublished,
2025-09-17T00:39:57.451071Z	    isFeatured,
2025-09-17T00:39:57.451186Z	    viewCount,
2025-09-17T00:39:57.451314Z	    _createdAt,
2025-09-17T00:39:57.451419Z	    _updatedAt
2025-09-17T00:39:57.451518Z	  
2025-09-17T00:39:57.451617Z	      },
2025-09-17T00:39:57.451724Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-17T00:39:57.451828Z	    }
2025-09-17T00:39:57.45192Z	  
2025-09-17T00:39:57.452034Z	Query parameters: {
2025-09-17T00:39:57.452137Z	  limit: 4,
2025-09-17T00:39:57.452235Z	  offset: 0,
2025-09-17T00:39:57.452345Z	  targetMarket: undefined,
2025-09-17T00:39:57.452445Z	  brand: 'ncc',
2025-09-17T00:39:57.452539Z	  featured: undefined
2025-09-17T00:39:57.45263Z	}
2025-09-17T00:39:57.452722Z	✅ [getBrandData] Found brand: ncc
2025-09-17T00:39:57.452835Z	✅ [getBrandData] Found brand: ncc
2025-09-17T00:39:57.452931Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.45304Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.453147Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.453232Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.453372Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-17T00:39:57.453504Z	Fetching products with query: 
2025-09-17T00:39:57.453629Z	    {
2025-09-17T00:39:57.453774Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.453892Z	        
2025-09-17T00:39:57.454022Z	    _id,
2025-09-17T00:39:57.454122Z	    _type,
2025-09-17T00:39:57.454229Z	    partNumber,
2025-09-17T00:39:57.454333Z	    "slug": slug.current,
2025-09-17T00:39:57.454438Z	    title,
2025-09-17T00:39:57.454557Z	    shortDescription,
2025-09-17T00:39:57.45465Z	    image,
2025-09-17T00:39:57.454715Z	    brand->{
2025-09-17T00:39:57.454842Z	      name,
2025-09-17T00:39:57.454928Z	      "slug": slug.current,
2025-09-17T00:39:57.455013Z	      logo
2025-09-17T00:39:57.455121Z	    },
2025-09-17T00:39:57.455226Z	    category->{
2025-09-17T00:39:57.455405Z	      name,
2025-09-17T00:39:57.455552Z	      "slug": slug.current
2025-09-17T00:39:57.455666Z	    },
2025-09-17T00:39:57.455778Z	    pricing{
2025-09-17T00:39:57.455886Z	      currency,
2025-09-17T00:39:57.456013Z	      tiers[]{
2025-09-17T00:39:57.456127Z	        quantity,
2025-09-17T00:39:57.456314Z	        price,
2025-09-17T00:39:57.456452Z	        unit
2025-09-17T00:39:57.456597Z	      },
2025-09-17T00:39:57.456738Z	      moq,
2025-09-17T00:39:57.456893Z	      leadTime,
2025-09-17T00:39:57.457022Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.487538Z	      "price": tiers[0].price,
2025-09-17T00:39:57.487663Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.487903Z	    },
2025-09-17T00:39:57.487999Z	    inventory{
2025-09-17T00:39:57.488186Z	      quantity,
2025-09-17T00:39:57.488317Z	      status,
2025-09-17T00:39:57.488629Z	      warehouse,
2025-09-17T00:39:57.488804Z	      lastUpdated,
2025-09-17T00:39:57.48891Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.489045Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.489145Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.489242Z	    },
2025-09-17T00:39:57.489356Z	    isActive,
2025-09-17T00:39:57.489455Z	    isFeatured,
2025-09-17T00:39:57.489579Z	    isNew,
2025-09-17T00:39:57.489674Z	    _createdAt,
2025-09-17T00:39:57.489769Z	    _updatedAt
2025-09-17T00:39:57.489843Z	  
2025-09-17T00:39:57.489901Z	      },
2025-09-17T00:39:57.490005Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-17T00:39:57.490136Z	    }
2025-09-17T00:39:57.490264Z	  
2025-09-17T00:39:57.490459Z	Query parameters: {
2025-09-17T00:39:57.490555Z	  limit: 8,
2025-09-17T00:39:57.490717Z	  offset: 0,
2025-09-17T00:39:57.490986Z	  category: undefined,
2025-09-17T00:39:57.491073Z	  brand: 'lem',
2025-09-17T00:39:57.491299Z	  featured: undefined
2025-09-17T00:39:57.491562Z	}
2025-09-17T00:39:57.491657Z	Fetching solutions with query: 
2025-09-17T00:39:57.491823Z	    {
2025-09-17T00:39:57.491899Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.49215Z	        
2025-09-17T00:39:57.492413Z	    _id,
2025-09-17T00:39:57.49267Z	    title,
2025-09-17T00:39:57.492912Z	    "slug": slug.current,
2025-09-17T00:39:57.493173Z	    summary,
2025-09-17T00:39:57.493418Z	    description,
2025-09-17T00:39:57.49367Z	    coverImage,
2025-09-17T00:39:57.493761Z	    primaryBrand->{
2025-09-17T00:39:57.493999Z	      _id,
2025-09-17T00:39:57.494139Z	      name,
2025-09-17T00:39:57.494416Z	      "slug": slug.current,
2025-09-17T00:39:57.494497Z	      logo
2025-09-17T00:39:57.494608Z	    },
2025-09-17T00:39:57.494925Z	    relatedBrands[]->{
2025-09-17T00:39:57.495029Z	      _id,
2025-09-17T00:39:57.495286Z	      name,
2025-09-17T00:39:57.495394Z	      "slug": slug.current,
2025-09-17T00:39:57.495685Z	      logo
2025-09-17T00:39:57.495767Z	    },
2025-09-17T00:39:57.495826Z	    targetMarket,
2025-09-17T00:39:57.496079Z	    complexity,
2025-09-17T00:39:57.496162Z	    publishedAt,
2025-09-17T00:39:57.496401Z	    isPublished,
2025-09-17T00:39:57.496509Z	    isFeatured,
2025-09-17T00:39:57.496706Z	    viewCount,
2025-09-17T00:39:57.496816Z	    _createdAt,
2025-09-17T00:39:57.496997Z	    _updatedAt
2025-09-17T00:39:57.497195Z	  
2025-09-17T00:39:57.497349Z	      },
2025-09-17T00:39:57.497464Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-17T00:39:57.497574Z	    }
2025-09-17T00:39:57.49769Z	  
2025-09-17T00:39:57.497797Z	Query parameters: {
2025-09-17T00:39:57.497921Z	  limit: 4,
2025-09-17T00:39:57.498033Z	  offset: 0,
2025-09-17T00:39:57.498134Z	  targetMarket: undefined,
2025-09-17T00:39:57.498478Z	  brand: 'lem',
2025-09-17T00:39:57.498846Z	  featured: undefined
2025-09-17T00:39:57.498979Z	}
2025-09-17T00:39:57.499131Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-17T00:39:57.49933Z	Fetching products with query: 
2025-09-17T00:39:57.499412Z	    {
2025-09-17T00:39:57.49972Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.500006Z	        
2025-09-17T00:39:57.5001Z	    _id,
2025-09-17T00:39:57.500366Z	    _type,
2025-09-17T00:39:57.500602Z	    partNumber,
2025-09-17T00:39:57.50072Z	    "slug": slug.current,
2025-09-17T00:39:57.500911Z	    title,
2025-09-17T00:39:57.500988Z	    shortDescription,
2025-09-17T00:39:57.501118Z	    image,
2025-09-17T00:39:57.501352Z	    brand->{
2025-09-17T00:39:57.501437Z	      name,
2025-09-17T00:39:57.501577Z	      "slug": slug.current,
2025-09-17T00:39:57.501694Z	      logo
2025-09-17T00:39:57.501855Z	    },
2025-09-17T00:39:57.501971Z	    category->{
2025-09-17T00:39:57.502076Z	      name,
2025-09-17T00:39:57.502326Z	      "slug": slug.current
2025-09-17T00:39:57.502412Z	    },
2025-09-17T00:39:57.502552Z	    pricing{
2025-09-17T00:39:57.502726Z	      currency,
2025-09-17T00:39:57.502908Z	      tiers[]{
2025-09-17T00:39:57.502997Z	        quantity,
2025-09-17T00:39:57.503126Z	        price,
2025-09-17T00:39:57.503299Z	        unit
2025-09-17T00:39:57.503419Z	      },
2025-09-17T00:39:57.50361Z	      moq,
2025-09-17T00:39:57.503751Z	      leadTime,
2025-09-17T00:39:57.503956Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.504082Z	      "price": tiers[0].price,
2025-09-17T00:39:57.504184Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.504316Z	    },
2025-09-17T00:39:57.504414Z	    inventory{
2025-09-17T00:39:57.504524Z	      quantity,
2025-09-17T00:39:57.50462Z	      status,
2025-09-17T00:39:57.50482Z	      warehouse,
2025-09-17T00:39:57.50491Z	      lastUpdated,
2025-09-17T00:39:57.505065Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.505153Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.505299Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.505517Z	    },
2025-09-17T00:39:57.505646Z	    isActive,
2025-09-17T00:39:57.505846Z	    isFeatured,
2025-09-17T00:39:57.505927Z	    isNew,
2025-09-17T00:39:57.506055Z	    _createdAt,
2025-09-17T00:39:57.506176Z	    _updatedAt
2025-09-17T00:39:57.506291Z	  
2025-09-17T00:39:57.506377Z	      },
2025-09-17T00:39:57.506457Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-17T00:39:57.50655Z	    }
2025-09-17T00:39:57.506639Z	  
2025-09-17T00:39:57.506755Z	Query parameters: {
2025-09-17T00:39:57.506848Z	  limit: 8,
2025-09-17T00:39:57.506948Z	  offset: 0,
2025-09-17T00:39:57.507045Z	  category: undefined,
2025-09-17T00:39:57.507129Z	  brand: 'lem',
2025-09-17T00:39:57.507212Z	  featured: undefined
2025-09-17T00:39:57.507309Z	}
2025-09-17T00:39:57.507401Z	Fetching solutions with query: 
2025-09-17T00:39:57.507496Z	    {
2025-09-17T00:39:57.507586Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.507683Z	        
2025-09-17T00:39:57.507773Z	    _id,
2025-09-17T00:39:57.507857Z	    title,
2025-09-17T00:39:57.507944Z	    "slug": slug.current,
2025-09-17T00:39:57.508033Z	    summary,
2025-09-17T00:39:57.508126Z	    description,
2025-09-17T00:39:57.508217Z	    coverImage,
2025-09-17T00:39:57.50836Z	    primaryBrand->{
2025-09-17T00:39:57.508492Z	      _id,
2025-09-17T00:39:57.508599Z	      name,
2025-09-17T00:39:57.508714Z	      "slug": slug.current,
2025-09-17T00:39:57.50882Z	      logo
2025-09-17T00:39:57.508936Z	    },
2025-09-17T00:39:57.509045Z	    relatedBrands[]->{
2025-09-17T00:39:57.509136Z	      _id,
2025-09-17T00:39:57.509221Z	      name,
2025-09-17T00:39:57.509327Z	      "slug": slug.current,
2025-09-17T00:39:57.509415Z	      logo
2025-09-17T00:39:57.509511Z	    },
2025-09-17T00:39:57.509599Z	    targetMarket,
2025-09-17T00:39:57.509711Z	    complexity,
2025-09-17T00:39:57.509809Z	    publishedAt,
2025-09-17T00:39:57.5099Z	    isPublished,
2025-09-17T00:39:57.509995Z	    isFeatured,
2025-09-17T00:39:57.51008Z	    viewCount,
2025-09-17T00:39:57.510166Z	    _createdAt,
2025-09-17T00:39:57.510244Z	    _updatedAt
2025-09-17T00:39:57.510351Z	  
2025-09-17T00:39:57.510445Z	      },
2025-09-17T00:39:57.510528Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-17T00:39:57.510631Z	    }
2025-09-17T00:39:57.510735Z	  
2025-09-17T00:39:57.510823Z	Query parameters: {
2025-09-17T00:39:57.510926Z	  limit: 4,
2025-09-17T00:39:57.511045Z	  offset: 0,
2025-09-17T00:39:57.511172Z	  targetMarket: undefined,
2025-09-17T00:39:57.511604Z	  brand: 'lem',
2025-09-17T00:39:57.511833Z	  featured: undefined
2025-09-17T00:39:57.511988Z	}
2025-09-17T00:39:57.512097Z	✅ [getBrandData] Found brand: LEM
2025-09-17T00:39:57.512299Z	✅ [getBrandData] Found brand: LEM
2025-09-17T00:39:57.512411Z	Products fetch result: {
2025-09-17T00:39:57.512584Z	  totalProducts: 3,
2025-09-17T00:39:57.512668Z	  fetchedProducts: 3,
2025-09-17T00:39:57.512865Z	  firstProduct: {
2025-09-17T00:39:57.513008Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-17T00:39:57.513182Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-17T00:39:57.513326Z	    _type: 'product',
2025-09-17T00:39:57.513439Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-17T00:39:57.513535Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-17T00:39:57.513621Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-17T00:39:57.513736Z	    image: null,
2025-09-17T00:39:57.513832Z	    inventory: {
2025-09-17T00:39:57.513925Z	      inStock: true,
2025-09-17T00:39:57.514011Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-17T00:39:57.51414Z	      quantity: 0,
2025-09-17T00:39:57.51428Z	      status: 'in_stock',
2025-09-17T00:39:57.514382Z	      warehouse: null
2025-09-17T00:39:57.514462Z	    },
2025-09-17T00:39:57.514545Z	    isActive: true,
2025-09-17T00:39:57.514629Z	    isFeatured: false,
2025-09-17T00:39:57.514763Z	    isNew: false,
2025-09-17T00:39:57.514867Z	    partNumber: 'la55-p',
2025-09-17T00:39:57.514999Z	    pricing: {
2025-09-17T00:39:57.515101Z	      currency: 'CNY',
2025-09-17T00:39:57.515205Z	      leadTime: null,
2025-09-17T00:39:57.515332Z	      moq: null,
2025-09-17T00:39:57.515448Z	      price: null,
2025-09-17T00:39:57.515553Z	      tiers: null
2025-09-17T00:39:57.515818Z	    },
2025-09-17T00:39:57.516057Z	    shortDescription: '电流传感器la55-p',
2025-09-17T00:39:57.516297Z	    slug: 'la55-p',
2025-09-17T00:39:57.516412Z	    title: '电流传感器la55-p'
2025-09-17T00:39:57.516575Z	  }
2025-09-17T00:39:57.516675Z	}
2025-09-17T00:39:57.516805Z	Products fetch result: {
2025-09-17T00:39:57.516948Z	  totalProducts: 3,
2025-09-17T00:39:57.517087Z	  fetchedProducts: 3,
2025-09-17T00:39:57.517196Z	  firstProduct: {
2025-09-17T00:39:57.51732Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-17T00:39:57.517435Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-17T00:39:57.51754Z	    _type: 'product',
2025-09-17T00:39:57.517641Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-17T00:39:57.517751Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-17T00:39:57.517859Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-17T00:39:57.517959Z	    image: null,
2025-09-17T00:39:57.518056Z	    inventory: {
2025-09-17T00:39:57.518152Z	      inStock: true,
2025-09-17T00:39:57.518238Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-17T00:39:57.518339Z	      quantity: 0,
2025-09-17T00:39:57.518439Z	      status: 'in_stock',
2025-09-17T00:39:57.518537Z	      warehouse: null
2025-09-17T00:39:57.518632Z	    },
2025-09-17T00:39:57.518744Z	    isActive: true,
2025-09-17T00:39:57.518914Z	    isFeatured: false,
2025-09-17T00:39:57.51924Z	    isNew: false,
2025-09-17T00:39:57.519421Z	    partNumber: 'la55-p',
2025-09-17T00:39:57.519537Z	    pricing: {
2025-09-17T00:39:57.519675Z	      currency: 'CNY',
2025-09-17T00:39:57.519791Z	      leadTime: null,
2025-09-17T00:39:57.519905Z	      moq: null,
2025-09-17T00:39:57.520005Z	      price: null,
2025-09-17T00:39:57.520117Z	      tiers: null
2025-09-17T00:39:57.520247Z	    },
2025-09-17T00:39:57.520389Z	    shortDescription: '电流传感器la55-p',
2025-09-17T00:39:57.520475Z	    slug: 'la55-p',
2025-09-17T00:39:57.520586Z	    title: '电流传感器la55-p'
2025-09-17T00:39:57.520739Z	  }
2025-09-17T00:39:57.520877Z	}
2025-09-17T00:39:57.520954Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.52109Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.521202Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-17T00:39:57.521321Z	Fetching products with query: 
2025-09-17T00:39:57.521433Z	    {
2025-09-17T00:39:57.521527Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.521675Z	        
2025-09-17T00:39:57.5218Z	    _id,
2025-09-17T00:39:57.521902Z	    _type,
2025-09-17T00:39:57.52211Z	    partNumber,
2025-09-17T00:39:57.522228Z	    "slug": slug.current,
2025-09-17T00:39:57.522358Z	    title,
2025-09-17T00:39:57.522582Z	    shortDescription,
2025-09-17T00:39:57.522722Z	    image,
2025-09-17T00:39:57.522829Z	    brand->{
2025-09-17T00:39:57.522927Z	      name,
2025-09-17T00:39:57.523014Z	      "slug": slug.current,
2025-09-17T00:39:57.52315Z	      logo
2025-09-17T00:39:57.523318Z	    },
2025-09-17T00:39:57.523421Z	    category->{
2025-09-17T00:39:57.523732Z	      name,
2025-09-17T00:39:57.523836Z	      "slug": slug.current
2025-09-17T00:39:57.52395Z	    },
2025-09-17T00:39:57.524201Z	    pricing{
2025-09-17T00:39:57.524305Z	      currency,
2025-09-17T00:39:57.52447Z	      tiers[]{
2025-09-17T00:39:57.524598Z	        quantity,
2025-09-17T00:39:57.52484Z	        price,
2025-09-17T00:39:57.524934Z	        unit
2025-09-17T00:39:57.524999Z	      },
2025-09-17T00:39:57.525303Z	      moq,
2025-09-17T00:39:57.525525Z	      leadTime,
2025-09-17T00:39:57.525649Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.525935Z	      "price": tiers[0].price,
2025-09-17T00:39:57.526041Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.526256Z	    },
2025-09-17T00:39:57.526369Z	    inventory{
2025-09-17T00:39:57.526522Z	      quantity,
2025-09-17T00:39:57.52662Z	      status,
2025-09-17T00:39:57.526822Z	      warehouse,
2025-09-17T00:39:57.526957Z	      lastUpdated,
2025-09-17T00:39:57.527041Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.527188Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.527261Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.527396Z	    },
2025-09-17T00:39:57.527498Z	    isActive,
2025-09-17T00:39:57.527598Z	    isFeatured,
2025-09-17T00:39:57.527699Z	    isNew,
2025-09-17T00:39:57.52781Z	    _createdAt,
2025-09-17T00:39:57.52791Z	    _updatedAt
2025-09-17T00:39:57.528012Z	  
2025-09-17T00:39:57.528111Z	      },
2025-09-17T00:39:57.52821Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-17T00:39:57.528334Z	    }
2025-09-17T00:39:57.528416Z	  
2025-09-17T00:39:57.528505Z	Query parameters: {
2025-09-17T00:39:57.528597Z	  limit: 8,
2025-09-17T00:39:57.5287Z	  offset: 0,
2025-09-17T00:39:57.528763Z	  category: undefined,
2025-09-17T00:39:57.528828Z	  brand: '英飞凌',
2025-09-17T00:39:57.528916Z	  featured: undefined
2025-09-17T00:39:57.529Z	}
2025-09-17T00:39:57.529097Z	Fetching solutions with query: 
2025-09-17T00:39:57.529205Z	    {
2025-09-17T00:39:57.529327Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.529402Z	        
2025-09-17T00:39:57.529457Z	    _id,
2025-09-17T00:39:57.529531Z	    title,
2025-09-17T00:39:57.529648Z	    "slug": slug.current,
2025-09-17T00:39:57.529753Z	    summary,
2025-09-17T00:39:57.529887Z	    description,
2025-09-17T00:39:57.530004Z	    coverImage,
2025-09-17T00:39:57.530113Z	    primaryBrand->{
2025-09-17T00:39:57.530214Z	      _id,
2025-09-17T00:39:57.530344Z	      name,
2025-09-17T00:39:57.53046Z	      "slug": slug.current,
2025-09-17T00:39:57.530582Z	      logo
2025-09-17T00:39:57.530705Z	    },
2025-09-17T00:39:57.530829Z	    relatedBrands[]->{
2025-09-17T00:39:57.530956Z	      _id,
2025-09-17T00:39:57.531058Z	      name,
2025-09-17T00:39:57.531136Z	      "slug": slug.current,
2025-09-17T00:39:57.531233Z	      logo
2025-09-17T00:39:57.531346Z	    },
2025-09-17T00:39:57.531406Z	    targetMarket,
2025-09-17T00:39:57.531474Z	    complexity,
2025-09-17T00:39:57.531578Z	    publishedAt,
2025-09-17T00:39:57.531683Z	    isPublished,
2025-09-17T00:39:57.531785Z	    isFeatured,
2025-09-17T00:39:57.531878Z	    viewCount,
2025-09-17T00:39:57.531967Z	    _createdAt,
2025-09-17T00:39:57.532067Z	    _updatedAt
2025-09-17T00:39:57.532346Z	  
2025-09-17T00:39:57.532437Z	      },
2025-09-17T00:39:57.532699Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-17T00:39:57.532794Z	    }
2025-09-17T00:39:57.533036Z	  
2025-09-17T00:39:57.533121Z	Query parameters: {
2025-09-17T00:39:57.533182Z	  limit: 4,
2025-09-17T00:39:57.53344Z	  offset: 0,
2025-09-17T00:39:57.533524Z	  targetMarket: undefined,
2025-09-17T00:39:57.533773Z	  brand: '英飞凌',
2025-09-17T00:39:57.533882Z	  featured: undefined
2025-09-17T00:39:57.534164Z	}
2025-09-17T00:39:57.534245Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-17T00:39:57.5344Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.534488Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.534635Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-17T00:39:57.534764Z	Fetching products with query: 
2025-09-17T00:39:57.534893Z	    {
2025-09-17T00:39:57.535055Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.535196Z	        
2025-09-17T00:39:57.53534Z	    _id,
2025-09-17T00:39:57.53543Z	    _type,
2025-09-17T00:39:57.535582Z	    partNumber,
2025-09-17T00:39:57.535725Z	    "slug": slug.current,
2025-09-17T00:39:57.535832Z	    title,
2025-09-17T00:39:57.535949Z	    shortDescription,
2025-09-17T00:39:57.536048Z	    image,
2025-09-17T00:39:57.536153Z	    brand->{
2025-09-17T00:39:57.536257Z	      name,
2025-09-17T00:39:57.536413Z	      "slug": slug.current,
2025-09-17T00:39:57.536493Z	      logo
2025-09-17T00:39:57.536597Z	    },
2025-09-17T00:39:57.536706Z	    category->{
2025-09-17T00:39:57.53685Z	      name,
2025-09-17T00:39:57.53698Z	      "slug": slug.current
2025-09-17T00:39:57.537105Z	    },
2025-09-17T00:39:57.537235Z	    pricing{
2025-09-17T00:39:57.537386Z	      currency,
2025-09-17T00:39:57.537616Z	      tiers[]{
2025-09-17T00:39:57.537747Z	        quantity,
2025-09-17T00:39:57.537849Z	        price,
2025-09-17T00:39:57.537959Z	        unit
2025-09-17T00:39:57.538092Z	      },
2025-09-17T00:39:57.538289Z	      moq,
2025-09-17T00:39:57.538428Z	      leadTime,
2025-09-17T00:39:57.538547Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.538665Z	      "price": tiers[0].price,
2025-09-17T00:39:57.538772Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.538874Z	    },
2025-09-17T00:39:57.538966Z	    inventory{
2025-09-17T00:39:57.539082Z	      quantity,
2025-09-17T00:39:57.539221Z	      status,
2025-09-17T00:39:57.539375Z	      warehouse,
2025-09-17T00:39:57.539496Z	      lastUpdated,
2025-09-17T00:39:57.539615Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.539715Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.539837Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.539935Z	    },
2025-09-17T00:39:57.540028Z	    isActive,
2025-09-17T00:39:57.540119Z	    isFeatured,
2025-09-17T00:39:57.540221Z	    isNew,
2025-09-17T00:39:57.540337Z	    _createdAt,
2025-09-17T00:39:57.540441Z	    _updatedAt
2025-09-17T00:39:57.540542Z	  
2025-09-17T00:39:57.54066Z	      },
2025-09-17T00:39:57.540782Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-17T00:39:57.540888Z	    }
2025-09-17T00:39:57.540971Z	  
2025-09-17T00:39:57.54105Z	Query parameters: {
2025-09-17T00:39:57.541135Z	  limit: 8,
2025-09-17T00:39:57.541214Z	  offset: 0,
2025-09-17T00:39:57.541318Z	  category: undefined,
2025-09-17T00:39:57.541409Z	  brand: '英飞凌',
2025-09-17T00:39:57.541498Z	  featured: undefined
2025-09-17T00:39:57.541589Z	}
2025-09-17T00:39:57.541676Z	Fetching solutions with query: 
2025-09-17T00:39:57.541861Z	    {
2025-09-17T00:39:57.542Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.542121Z	        
2025-09-17T00:39:57.542218Z	    _id,
2025-09-17T00:39:57.542327Z	    title,
2025-09-17T00:39:57.54242Z	    "slug": slug.current,
2025-09-17T00:39:57.54251Z	    summary,
2025-09-17T00:39:57.542601Z	    description,
2025-09-17T00:39:57.54269Z	    coverImage,
2025-09-17T00:39:57.542791Z	    primaryBrand->{
2025-09-17T00:39:57.542878Z	      _id,
2025-09-17T00:39:57.542957Z	      name,
2025-09-17T00:39:57.543036Z	      "slug": slug.current,
2025-09-17T00:39:57.543223Z	      logo
2025-09-17T00:39:57.543356Z	    },
2025-09-17T00:39:57.543446Z	    relatedBrands[]->{
2025-09-17T00:39:57.543529Z	      _id,
2025-09-17T00:39:57.54361Z	      name,
2025-09-17T00:39:57.543689Z	      "slug": slug.current,
2025-09-17T00:39:57.543788Z	      logo
2025-09-17T00:39:57.543879Z	    },
2025-09-17T00:39:57.543964Z	    targetMarket,
2025-09-17T00:39:57.5441Z	    complexity,
2025-09-17T00:39:57.544215Z	    publishedAt,
2025-09-17T00:39:57.544326Z	    isPublished,
2025-09-17T00:39:57.54443Z	    isFeatured,
2025-09-17T00:39:57.544521Z	    viewCount,
2025-09-17T00:39:57.544605Z	    _createdAt,
2025-09-17T00:39:57.544686Z	    _updatedAt
2025-09-17T00:39:57.544777Z	  
2025-09-17T00:39:57.544883Z	      },
2025-09-17T00:39:57.544978Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-17T00:39:57.545081Z	    }
2025-09-17T00:39:57.545173Z	  
2025-09-17T00:39:57.545262Z	Query parameters: {
2025-09-17T00:39:57.545369Z	  limit: 4,
2025-09-17T00:39:57.545458Z	  offset: 0,
2025-09-17T00:39:57.545549Z	  targetMarket: undefined,
2025-09-17T00:39:57.545641Z	  brand: '英飞凌',
2025-09-17T00:39:57.545729Z	  featured: undefined
2025-09-17T00:39:57.545819Z	}
2025-09-17T00:39:57.545902Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-17T00:39:57.545988Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.546072Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.546362Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:57.546486Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.546617Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.546724Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-17T00:39:57.546824Z	Fetching products with query: 
2025-09-17T00:39:57.546922Z	    {
2025-09-17T00:39:57.547009Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.547325Z	        
2025-09-17T00:39:57.547514Z	    _id,
2025-09-17T00:39:57.547587Z	    _type,
2025-09-17T00:39:57.547645Z	    partNumber,
2025-09-17T00:39:57.547701Z	    "slug": slug.current,
2025-09-17T00:39:57.547861Z	    title,
2025-09-17T00:39:57.547946Z	    shortDescription,
2025-09-17T00:39:57.548008Z	    image,
2025-09-17T00:39:57.548152Z	    brand->{
2025-09-17T00:39:57.548339Z	      name,
2025-09-17T00:39:57.548445Z	      "slug": slug.current,
2025-09-17T00:39:57.548626Z	      logo
2025-09-17T00:39:57.548711Z	    },
2025-09-17T00:39:57.548853Z	    category->{
2025-09-17T00:39:57.548925Z	      name,
2025-09-17T00:39:57.549054Z	      "slug": slug.current
2025-09-17T00:39:57.549207Z	    },
2025-09-17T00:39:57.549349Z	    pricing{
2025-09-17T00:39:57.549491Z	      currency,
2025-09-17T00:39:57.549565Z	      tiers[]{
2025-09-17T00:39:57.549697Z	        quantity,
2025-09-17T00:39:57.549827Z	        price,
2025-09-17T00:39:57.549896Z	        unit
2025-09-17T00:39:57.550027Z	      },
2025-09-17T00:39:57.550105Z	      moq,
2025-09-17T00:39:57.550359Z	      leadTime,
2025-09-17T00:39:57.550487Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.550605Z	      "price": tiers[0].price,
2025-09-17T00:39:57.550724Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.550847Z	    },
2025-09-17T00:39:57.550954Z	    inventory{
2025-09-17T00:39:57.551052Z	      quantity,
2025-09-17T00:39:57.551151Z	      status,
2025-09-17T00:39:57.551243Z	      warehouse,
2025-09-17T00:39:57.551424Z	      lastUpdated,
2025-09-17T00:39:57.551503Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.551611Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.551817Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.551926Z	    },
2025-09-17T00:39:57.552029Z	    isActive,
2025-09-17T00:39:57.552133Z	    isFeatured,
2025-09-17T00:39:57.552228Z	    isNew,
2025-09-17T00:39:57.552347Z	    _createdAt,
2025-09-17T00:39:57.552474Z	    _updatedAt
2025-09-17T00:39:57.552594Z	  
2025-09-17T00:39:57.552697Z	      },
2025-09-17T00:39:57.552803Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-17T00:39:57.552938Z	    }
2025-09-17T00:39:57.553042Z	  
2025-09-17T00:39:57.553188Z	Query parameters: {
2025-09-17T00:39:57.553283Z	  limit: 8,
2025-09-17T00:39:57.553463Z	  offset: 0,
2025-09-17T00:39:57.553581Z	  category: undefined,
2025-09-17T00:39:57.553678Z	  brand: 'mediatek',
2025-09-17T00:39:57.553795Z	  featured: undefined
2025-09-17T00:39:57.553876Z	}
2025-09-17T00:39:57.554009Z	Fetching solutions with query: 
2025-09-17T00:39:57.55412Z	    {
2025-09-17T00:39:57.554241Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.554386Z	        
2025-09-17T00:39:57.554502Z	    _id,
2025-09-17T00:39:57.554597Z	    title,
2025-09-17T00:39:57.5547Z	    "slug": slug.current,
2025-09-17T00:39:57.5548Z	    summary,
2025-09-17T00:39:57.554898Z	    description,
2025-09-17T00:39:57.555044Z	    coverImage,
2025-09-17T00:39:57.555262Z	    primaryBrand->{
2025-09-17T00:39:57.555476Z	      _id,
2025-09-17T00:39:57.555557Z	      name,
2025-09-17T00:39:57.555686Z	      "slug": slug.current,
2025-09-17T00:39:57.555784Z	      logo
2025-09-17T00:39:57.555877Z	    },
2025-09-17T00:39:57.555999Z	    relatedBrands[]->{
2025-09-17T00:39:57.556198Z	      _id,
2025-09-17T00:39:57.556355Z	      name,
2025-09-17T00:39:57.556514Z	      "slug": slug.current,
2025-09-17T00:39:57.556589Z	      logo
2025-09-17T00:39:57.556711Z	    },
2025-09-17T00:39:57.556797Z	    targetMarket,
2025-09-17T00:39:57.556956Z	    complexity,
2025-09-17T00:39:57.557079Z	    publishedAt,
2025-09-17T00:39:57.557155Z	    isPublished,
2025-09-17T00:39:57.557436Z	    isFeatured,
2025-09-17T00:39:57.55752Z	    viewCount,
2025-09-17T00:39:57.557641Z	    _createdAt,
2025-09-17T00:39:57.557748Z	    _updatedAt
2025-09-17T00:39:57.557815Z	  
2025-09-17T00:39:57.557871Z	      },
2025-09-17T00:39:57.557978Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-17T00:39:57.558118Z	    }
2025-09-17T00:39:57.558319Z	  
2025-09-17T00:39:57.55844Z	Query parameters: {
2025-09-17T00:39:57.558571Z	  limit: 4,
2025-09-17T00:39:57.558644Z	  offset: 0,
2025-09-17T00:39:57.558779Z	  targetMarket: undefined,
2025-09-17T00:39:57.558906Z	  brand: 'mediatek',
2025-09-17T00:39:57.559067Z	  featured: undefined
2025-09-17T00:39:57.559174Z	}
2025-09-17T00:39:57.559288Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-17T00:39:57.559393Z	Fetching products with query: 
2025-09-17T00:39:57.55949Z	    {
2025-09-17T00:39:57.559594Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.559702Z	        
2025-09-17T00:39:57.559799Z	    _id,
2025-09-17T00:39:57.559899Z	    _type,
2025-09-17T00:39:57.55999Z	    partNumber,
2025-09-17T00:39:57.56007Z	    "slug": slug.current,
2025-09-17T00:39:57.560203Z	    title,
2025-09-17T00:39:57.560423Z	    shortDescription,
2025-09-17T00:39:57.560546Z	    image,
2025-09-17T00:39:57.560662Z	    brand->{
2025-09-17T00:39:57.560746Z	      name,
2025-09-17T00:39:57.560931Z	      "slug": slug.current,
2025-09-17T00:39:57.56101Z	      logo
2025-09-17T00:39:57.561149Z	    },
2025-09-17T00:39:57.561328Z	    category->{
2025-09-17T00:39:57.561407Z	      name,
2025-09-17T00:39:57.56154Z	      "slug": slug.current
2025-09-17T00:39:57.561645Z	    },
2025-09-17T00:39:57.561754Z	    pricing{
2025-09-17T00:39:57.561921Z	      currency,
2025-09-17T00:39:57.562002Z	      tiers[]{
2025-09-17T00:39:57.56217Z	        quantity,
2025-09-17T00:39:57.56234Z	        price,
2025-09-17T00:39:57.562461Z	        unit
2025-09-17T00:39:57.562579Z	      },
2025-09-17T00:39:57.562683Z	      moq,
2025-09-17T00:39:57.562843Z	      leadTime,
2025-09-17T00:39:57.562945Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.563079Z	      "price": tiers[0].price,
2025-09-17T00:39:57.563191Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.563292Z	    },
2025-09-17T00:39:57.56347Z	    inventory{
2025-09-17T00:39:57.563597Z	      quantity,
2025-09-17T00:39:57.563734Z	      status,
2025-09-17T00:39:57.563862Z	      warehouse,
2025-09-17T00:39:57.563993Z	      lastUpdated,
2025-09-17T00:39:57.564135Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.564264Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.564424Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.564507Z	    },
2025-09-17T00:39:57.564628Z	    isActive,
2025-09-17T00:39:57.56474Z	    isFeatured,
2025-09-17T00:39:57.56489Z	    isNew,
2025-09-17T00:39:57.565059Z	    _createdAt,
2025-09-17T00:39:57.56517Z	    _updatedAt
2025-09-17T00:39:57.565362Z	  
2025-09-17T00:39:57.565471Z	      },
2025-09-17T00:39:57.565602Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-17T00:39:57.565764Z	    }
2025-09-17T00:39:57.565912Z	  
2025-09-17T00:39:57.566044Z	Query parameters: {
2025-09-17T00:39:57.566204Z	  limit: 8,
2025-09-17T00:39:57.566483Z	  offset: 0,
2025-09-17T00:39:57.566647Z	  category: undefined,
2025-09-17T00:39:57.566734Z	  brand: 'mediatek',
2025-09-17T00:39:57.566842Z	  featured: undefined
2025-09-17T00:39:57.566951Z	}
2025-09-17T00:39:57.567128Z	Fetching solutions with query: 
2025-09-17T00:39:57.56735Z	    {
2025-09-17T00:39:57.567461Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.56754Z	        
2025-09-17T00:39:57.567609Z	    _id,
2025-09-17T00:39:57.567678Z	    title,
2025-09-17T00:39:57.567736Z	    "slug": slug.current,
2025-09-17T00:39:57.5678Z	    summary,
2025-09-17T00:39:57.567856Z	    description,
2025-09-17T00:39:57.567914Z	    coverImage,
2025-09-17T00:39:57.567975Z	    primaryBrand->{
2025-09-17T00:39:57.568043Z	      _id,
2025-09-17T00:39:57.568101Z	      name,
2025-09-17T00:39:57.568161Z	      "slug": slug.current,
2025-09-17T00:39:57.568218Z	      logo
2025-09-17T00:39:57.568556Z	    },
2025-09-17T00:39:57.568644Z	    relatedBrands[]->{
2025-09-17T00:39:57.568714Z	      _id,
2025-09-17T00:39:57.568816Z	      name,
2025-09-17T00:39:57.568882Z	      "slug": slug.current,
2025-09-17T00:39:57.568953Z	      logo
2025-09-17T00:39:57.569009Z	    },
2025-09-17T00:39:57.569074Z	    targetMarket,
2025-09-17T00:39:57.569142Z	    complexity,
2025-09-17T00:39:57.569203Z	    publishedAt,
2025-09-17T00:39:57.569259Z	    isPublished,
2025-09-17T00:39:57.569344Z	    isFeatured,
2025-09-17T00:39:57.569403Z	    viewCount,
2025-09-17T00:39:57.569458Z	    _createdAt,
2025-09-17T00:39:57.569513Z	    _updatedAt
2025-09-17T00:39:57.569575Z	  
2025-09-17T00:39:57.569637Z	      },
2025-09-17T00:39:57.569702Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-17T00:39:57.56976Z	    }
2025-09-17T00:39:57.569815Z	  
2025-09-17T00:39:57.569877Z	Query parameters: {
2025-09-17T00:39:57.569942Z	  limit: 4,
2025-09-17T00:39:57.569998Z	  offset: 0,
2025-09-17T00:39:57.570061Z	  targetMarket: undefined,
2025-09-17T00:39:57.570122Z	  brand: 'mediatek',
2025-09-17T00:39:57.570189Z	  featured: undefined
2025-09-17T00:39:57.570247Z	}
2025-09-17T00:39:57.570332Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.570402Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.570466Z	✅ [getBrandData] Found brand: MediaTek
2025-09-17T00:39:57.570534Z	✅ [getBrandData] Found brand: MediaTek
2025-09-17T00:39:57.570598Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-17T00:39:57.570666Z	Fetching products with query: 
2025-09-17T00:39:57.570723Z	    {
2025-09-17T00:39:57.570779Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.570849Z	        
2025-09-17T00:39:57.570907Z	    _id,
2025-09-17T00:39:57.570969Z	    _type,
2025-09-17T00:39:57.571027Z	    partNumber,
2025-09-17T00:39:57.571082Z	    "slug": slug.current,
2025-09-17T00:39:57.5712Z	    title,
2025-09-17T00:39:57.571723Z	    shortDescription,
2025-09-17T00:39:57.57182Z	    image,
2025-09-17T00:39:57.571914Z	    brand->{
2025-09-17T00:39:57.572018Z	      name,
2025-09-17T00:39:57.572182Z	      "slug": slug.current,
2025-09-17T00:39:57.572259Z	      logo
2025-09-17T00:39:57.572365Z	    },
2025-09-17T00:39:57.572485Z	    category->{
2025-09-17T00:39:57.572584Z	      name,
2025-09-17T00:39:57.572651Z	      "slug": slug.current
2025-09-17T00:39:57.572819Z	    },
2025-09-17T00:39:57.572987Z	    pricing{
2025-09-17T00:39:57.573115Z	      currency,
2025-09-17T00:39:57.57325Z	      tiers[]{
2025-09-17T00:39:57.573412Z	        quantity,
2025-09-17T00:39:57.573581Z	        price,
2025-09-17T00:39:57.573708Z	        unit
2025-09-17T00:39:57.573813Z	      },
2025-09-17T00:39:57.574063Z	      moq,
2025-09-17T00:39:57.574243Z	      leadTime,
2025-09-17T00:39:57.574453Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.574575Z	      "price": tiers[0].price,
2025-09-17T00:39:57.574722Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.574857Z	    },
2025-09-17T00:39:57.57502Z	    inventory{
2025-09-17T00:39:57.575138Z	      quantity,
2025-09-17T00:39:57.575248Z	      status,
2025-09-17T00:39:57.575368Z	      warehouse,
2025-09-17T00:39:57.575521Z	      lastUpdated,
2025-09-17T00:39:57.575595Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.575686Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.575793Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.575963Z	    },
2025-09-17T00:39:57.576121Z	    isActive,
2025-09-17T00:39:57.576379Z	    isFeatured,
2025-09-17T00:39:57.576493Z	    isNew,
2025-09-17T00:39:57.576638Z	    _createdAt,
2025-09-17T00:39:57.57674Z	    _updatedAt
2025-09-17T00:39:57.576856Z	  
2025-09-17T00:39:57.577013Z	      },
2025-09-17T00:39:57.577093Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-17T00:39:57.577159Z	    }
2025-09-17T00:39:57.577321Z	  
2025-09-17T00:39:57.577448Z	Query parameters: {
2025-09-17T00:39:57.577554Z	  limit: 8,
2025-09-17T00:39:57.577668Z	  offset: 0,
2025-09-17T00:39:57.577778Z	  category: undefined,
2025-09-17T00:39:57.577913Z	  brand: 'qualcomm',
2025-09-17T00:39:57.578024Z	  featured: undefined
2025-09-17T00:39:57.578128Z	}
2025-09-17T00:39:57.578252Z	Fetching solutions with query: 
2025-09-17T00:39:57.578387Z	    {
2025-09-17T00:39:57.578495Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.578639Z	        
2025-09-17T00:39:57.578719Z	    _id,
2025-09-17T00:39:57.578845Z	    title,
2025-09-17T00:39:57.578931Z	    "slug": slug.current,
2025-09-17T00:39:57.578988Z	    summary,
2025-09-17T00:39:57.579092Z	    description,
2025-09-17T00:39:57.579196Z	    coverImage,
2025-09-17T00:39:57.579326Z	    primaryBrand->{
2025-09-17T00:39:57.579456Z	      _id,
2025-09-17T00:39:57.579564Z	      name,
2025-09-17T00:39:57.579673Z	      "slug": slug.current,
2025-09-17T00:39:57.579795Z	      logo
2025-09-17T00:39:57.579922Z	    },
2025-09-17T00:39:57.580083Z	    relatedBrands[]->{
2025-09-17T00:39:57.580199Z	      _id,
2025-09-17T00:39:57.580337Z	      name,
2025-09-17T00:39:57.580512Z	      "slug": slug.current,
2025-09-17T00:39:57.580603Z	      logo
2025-09-17T00:39:57.580884Z	    },
2025-09-17T00:39:57.581023Z	    targetMarket,
2025-09-17T00:39:57.581136Z	    complexity,
2025-09-17T00:39:57.581251Z	    publishedAt,
2025-09-17T00:39:57.58136Z	    isPublished,
2025-09-17T00:39:57.581715Z	    isFeatured,
2025-09-17T00:39:57.581971Z	    viewCount,
2025-09-17T00:39:57.582121Z	    _createdAt,
2025-09-17T00:39:57.582241Z	    _updatedAt
2025-09-17T00:39:57.582369Z	  
2025-09-17T00:39:57.582462Z	      },
2025-09-17T00:39:57.582536Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-17T00:39:57.582648Z	    }
2025-09-17T00:39:57.582751Z	  
2025-09-17T00:39:57.582855Z	Query parameters: {
2025-09-17T00:39:57.583071Z	  limit: 4,
2025-09-17T00:39:57.583167Z	  offset: 0,
2025-09-17T00:39:57.583227Z	  targetMarket: undefined,
2025-09-17T00:39:57.583523Z	  brand: 'qualcomm',
2025-09-17T00:39:57.583598Z	  featured: undefined
2025-09-17T00:39:57.583668Z	}
2025-09-17T00:39:57.583912Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-17T00:39:57.58402Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.584288Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.584389Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-17T00:39:57.584645Z	Fetching products with query: 
2025-09-17T00:39:57.584719Z	    {
2025-09-17T00:39:57.584779Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.58489Z	        
2025-09-17T00:39:57.585039Z	    _id,
2025-09-17T00:39:57.585112Z	    _type,
2025-09-17T00:39:57.585342Z	    partNumber,
2025-09-17T00:39:57.585433Z	    "slug": slug.current,
2025-09-17T00:39:57.585655Z	    title,
2025-09-17T00:39:57.585813Z	    shortDescription,
2025-09-17T00:39:57.585954Z	    image,
2025-09-17T00:39:57.586145Z	    brand->{
2025-09-17T00:39:57.586277Z	      name,
2025-09-17T00:39:57.586382Z	      "slug": slug.current,
2025-09-17T00:39:57.586527Z	      logo
2025-09-17T00:39:57.586643Z	    },
2025-09-17T00:39:57.586758Z	    category->{
2025-09-17T00:39:57.586847Z	      name,
2025-09-17T00:39:57.587128Z	      "slug": slug.current
2025-09-17T00:39:57.587219Z	    },
2025-09-17T00:39:57.587543Z	    pricing{
2025-09-17T00:39:57.587636Z	      currency,
2025-09-17T00:39:57.587698Z	      tiers[]{
2025-09-17T00:39:57.587952Z	        quantity,
2025-09-17T00:39:57.588219Z	        price,
2025-09-17T00:39:57.588385Z	        unit
2025-09-17T00:39:57.588487Z	      },
2025-09-17T00:39:57.588681Z	      moq,
2025-09-17T00:39:57.588847Z	      leadTime,
2025-09-17T00:39:57.588961Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.589076Z	      "price": tiers[0].price,
2025-09-17T00:39:57.58917Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.589321Z	    },
2025-09-17T00:39:57.589416Z	    inventory{
2025-09-17T00:39:57.589504Z	      quantity,
2025-09-17T00:39:57.589587Z	      status,
2025-09-17T00:39:57.589671Z	      warehouse,
2025-09-17T00:39:57.589751Z	      lastUpdated,
2025-09-17T00:39:57.589846Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.589948Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.590053Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.590158Z	    },
2025-09-17T00:39:57.590253Z	    isActive,
2025-09-17T00:39:57.59037Z	    isFeatured,
2025-09-17T00:39:57.590468Z	    isNew,
2025-09-17T00:39:57.590555Z	    _createdAt,
2025-09-17T00:39:57.590638Z	    _updatedAt
2025-09-17T00:39:57.590737Z	  
2025-09-17T00:39:57.590827Z	      },
2025-09-17T00:39:57.590929Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-17T00:39:57.591037Z	    }
2025-09-17T00:39:57.591131Z	  
2025-09-17T00:39:57.591197Z	Query parameters: {
2025-09-17T00:39:57.591252Z	  limit: 8,
2025-09-17T00:39:57.591347Z	  offset: 0,
2025-09-17T00:39:57.591433Z	  category: undefined,
2025-09-17T00:39:57.591525Z	  brand: 'qualcomm',
2025-09-17T00:39:57.59162Z	  featured: undefined
2025-09-17T00:39:57.591717Z	}
2025-09-17T00:39:57.591814Z	Fetching solutions with query: 
2025-09-17T00:39:57.59191Z	    {
2025-09-17T00:39:57.59202Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.592134Z	        
2025-09-17T00:39:57.592231Z	    _id,
2025-09-17T00:39:57.592343Z	    title,
2025-09-17T00:39:57.592437Z	    "slug": slug.current,
2025-09-17T00:39:57.592532Z	    summary,
2025-09-17T00:39:57.592624Z	    description,
2025-09-17T00:39:57.592725Z	    coverImage,
2025-09-17T00:39:57.592824Z	    primaryBrand->{
2025-09-17T00:39:57.592938Z	      _id,
2025-09-17T00:39:57.593031Z	      name,
2025-09-17T00:39:57.593124Z	      "slug": slug.current,
2025-09-17T00:39:57.593216Z	      logo
2025-09-17T00:39:57.59333Z	    },
2025-09-17T00:39:57.593423Z	    relatedBrands[]->{
2025-09-17T00:39:57.593514Z	      _id,
2025-09-17T00:39:57.593613Z	      name,
2025-09-17T00:39:57.593702Z	      "slug": slug.current,
2025-09-17T00:39:57.593808Z	      logo
2025-09-17T00:39:57.5939Z	    },
2025-09-17T00:39:57.594Z	    targetMarket,
2025-09-17T00:39:57.594091Z	    complexity,
2025-09-17T00:39:57.594176Z	    publishedAt,
2025-09-17T00:39:57.594278Z	    isPublished,
2025-09-17T00:39:57.594385Z	    isFeatured,
2025-09-17T00:39:57.594485Z	    viewCount,
2025-09-17T00:39:57.59457Z	    _createdAt,
2025-09-17T00:39:57.594661Z	    _updatedAt
2025-09-17T00:39:57.594746Z	  
2025-09-17T00:39:57.594841Z	      },
2025-09-17T00:39:57.594929Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-17T00:39:57.595048Z	    }
2025-09-17T00:39:57.595151Z	  
2025-09-17T00:39:57.595256Z	Query parameters: {
2025-09-17T00:39:57.59546Z	  limit: 4,
2025-09-17T00:39:57.595535Z	  offset: 0,
2025-09-17T00:39:57.595612Z	  targetMarket: undefined,
2025-09-17T00:39:57.59598Z	  brand: 'qualcomm',
2025-09-17T00:39:57.596067Z	  featured: undefined
2025-09-17T00:39:57.596391Z	}
2025-09-17T00:39:57.596473Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-17T00:39:57.596712Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.596902Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.597059Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-17T00:39:57.59716Z	Fetching products with query: 
2025-09-17T00:39:57.597225Z	    {
2025-09-17T00:39:57.597333Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.597408Z	        
2025-09-17T00:39:57.597526Z	    _id,
2025-09-17T00:39:57.597621Z	    _type,
2025-09-17T00:39:57.597717Z	    partNumber,
2025-09-17T00:39:57.597816Z	    "slug": slug.current,
2025-09-17T00:39:57.597937Z	    title,
2025-09-17T00:39:57.598076Z	    shortDescription,
2025-09-17T00:39:57.598198Z	    image,
2025-09-17T00:39:57.598288Z	    brand->{
2025-09-17T00:39:57.598451Z	      name,
2025-09-17T00:39:57.598523Z	      "slug": slug.current,
2025-09-17T00:39:57.598581Z	      logo
2025-09-17T00:39:57.598638Z	    },
2025-09-17T00:39:57.598755Z	    category->{
2025-09-17T00:39:57.598919Z	      name,
2025-09-17T00:39:57.599089Z	      "slug": slug.current
2025-09-17T00:39:57.599224Z	    },
2025-09-17T00:39:57.599367Z	    pricing{
2025-09-17T00:39:57.599498Z	      currency,
2025-09-17T00:39:57.599621Z	      tiers[]{
2025-09-17T00:39:57.599746Z	        quantity,
2025-09-17T00:39:57.599888Z	        price,
2025-09-17T00:39:57.599972Z	        unit
2025-09-17T00:39:57.600138Z	      },
2025-09-17T00:39:57.600306Z	      moq,
2025-09-17T00:39:57.60039Z	      leadTime,
2025-09-17T00:39:57.600467Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.600612Z	      "price": tiers[0].price,
2025-09-17T00:39:57.600676Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.600828Z	    },
2025-09-17T00:39:57.600903Z	    inventory{
2025-09-17T00:39:57.600973Z	      quantity,
2025-09-17T00:39:57.601104Z	      status,
2025-09-17T00:39:57.601204Z	      warehouse,
2025-09-17T00:39:57.601322Z	      lastUpdated,
2025-09-17T00:39:57.601421Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.601515Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.601625Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.601723Z	    },
2025-09-17T00:39:57.601816Z	    isActive,
2025-09-17T00:39:57.601961Z	    isFeatured,
2025-09-17T00:39:57.602121Z	    isNew,
2025-09-17T00:39:57.602238Z	    _createdAt,
2025-09-17T00:39:57.602343Z	    _updatedAt
2025-09-17T00:39:57.602408Z	  
2025-09-17T00:39:57.602505Z	      },
2025-09-17T00:39:57.602641Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-17T00:39:57.602751Z	    }
2025-09-17T00:39:57.60288Z	  
2025-09-17T00:39:57.603047Z	Query parameters: {
2025-09-17T00:39:57.603179Z	  limit: 8,
2025-09-17T00:39:57.603305Z	  offset: 0,
2025-09-17T00:39:57.603411Z	  category: undefined,
2025-09-17T00:39:57.603507Z	  brand: 'ncc',
2025-09-17T00:39:57.603629Z	  featured: undefined
2025-09-17T00:39:57.603775Z	}
2025-09-17T00:39:57.603924Z	Fetching solutions with query: 
2025-09-17T00:39:57.604039Z	    {
2025-09-17T00:39:57.604276Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.60446Z	        
2025-09-17T00:39:57.604551Z	    _id,
2025-09-17T00:39:57.604651Z	    title,
2025-09-17T00:39:57.604756Z	    "slug": slug.current,
2025-09-17T00:39:57.604855Z	    summary,
2025-09-17T00:39:57.60497Z	    description,
2025-09-17T00:39:57.605042Z	    coverImage,
2025-09-17T00:39:57.605118Z	    primaryBrand->{
2025-09-17T00:39:57.605217Z	      _id,
2025-09-17T00:39:57.605348Z	      name,
2025-09-17T00:39:57.605481Z	      "slug": slug.current,
2025-09-17T00:39:57.605626Z	      logo
2025-09-17T00:39:57.605731Z	    },
2025-09-17T00:39:57.605881Z	    relatedBrands[]->{
2025-09-17T00:39:57.606018Z	      _id,
2025-09-17T00:39:57.60615Z	      name,
2025-09-17T00:39:57.606379Z	      "slug": slug.current,
2025-09-17T00:39:57.606518Z	      logo
2025-09-17T00:39:57.606699Z	    },
2025-09-17T00:39:57.606848Z	    targetMarket,
2025-09-17T00:39:57.606949Z	    complexity,
2025-09-17T00:39:57.607078Z	    publishedAt,
2025-09-17T00:39:57.607211Z	    isPublished,
2025-09-17T00:39:57.607356Z	    isFeatured,
2025-09-17T00:39:57.607464Z	    viewCount,
2025-09-17T00:39:57.607557Z	    _createdAt,
2025-09-17T00:39:57.607661Z	    _updatedAt
2025-09-17T00:39:57.607768Z	  
2025-09-17T00:39:57.607866Z	      },
2025-09-17T00:39:57.607962Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-17T00:39:57.608068Z	    }
2025-09-17T00:39:57.608191Z	  
2025-09-17T00:39:57.608318Z	Query parameters: {
2025-09-17T00:39:57.608422Z	  limit: 4,
2025-09-17T00:39:57.60852Z	  offset: 0,
2025-09-17T00:39:57.608606Z	  targetMarket: undefined,
2025-09-17T00:39:57.60869Z	  brand: 'ncc',
2025-09-17T00:39:57.608794Z	  featured: undefined
2025-09-17T00:39:57.608896Z	}
2025-09-17T00:39:57.608967Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-17T00:39:57.609057Z	Fetching products with query: 
2025-09-17T00:39:57.609164Z	    {
2025-09-17T00:39:57.609329Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.609408Z	        
2025-09-17T00:39:57.609465Z	    _id,
2025-09-17T00:39:57.609605Z	    _type,
2025-09-17T00:39:57.60968Z	    partNumber,
2025-09-17T00:39:57.609764Z	    "slug": slug.current,
2025-09-17T00:39:57.610088Z	    title,
2025-09-17T00:39:57.610203Z	    shortDescription,
2025-09-17T00:39:57.610348Z	    image,
2025-09-17T00:39:57.610454Z	    brand->{
2025-09-17T00:39:57.610564Z	      name,
2025-09-17T00:39:57.610664Z	      "slug": slug.current,
2025-09-17T00:39:57.610825Z	      logo
2025-09-17T00:39:57.610941Z	    },
2025-09-17T00:39:57.611065Z	    category->{
2025-09-17T00:39:57.611166Z	      name,
2025-09-17T00:39:57.611278Z	      "slug": slug.current
2025-09-17T00:39:57.611382Z	    },
2025-09-17T00:39:57.611476Z	    pricing{
2025-09-17T00:39:57.611563Z	      currency,
2025-09-17T00:39:57.611732Z	      tiers[]{
2025-09-17T00:39:57.611812Z	        quantity,
2025-09-17T00:39:57.611981Z	        price,
2025-09-17T00:39:57.612103Z	        unit
2025-09-17T00:39:57.612205Z	      },
2025-09-17T00:39:57.612318Z	      moq,
2025-09-17T00:39:57.612426Z	      leadTime,
2025-09-17T00:39:57.612537Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.612641Z	      "price": tiers[0].price,
2025-09-17T00:39:57.612752Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.612937Z	    },
2025-09-17T00:39:57.613057Z	    inventory{
2025-09-17T00:39:57.613156Z	      quantity,
2025-09-17T00:39:57.613309Z	      status,
2025-09-17T00:39:57.613434Z	      warehouse,
2025-09-17T00:39:57.613536Z	      lastUpdated,
2025-09-17T00:39:57.613641Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.613769Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.613872Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.613959Z	    },
2025-09-17T00:39:57.61404Z	    isActive,
2025-09-17T00:39:57.614117Z	    isFeatured,
2025-09-17T00:39:57.614191Z	    isNew,
2025-09-17T00:39:57.614277Z	    _createdAt,
2025-09-17T00:39:57.614369Z	    _updatedAt
2025-09-17T00:39:57.614453Z	  
2025-09-17T00:39:57.614632Z	      },
2025-09-17T00:39:57.614804Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-17T00:39:57.615077Z	    }
2025-09-17T00:39:57.615182Z	  
2025-09-17T00:39:57.6154Z	Query parameters: {
2025-09-17T00:39:57.61565Z	  limit: 8,
2025-09-17T00:39:57.61573Z	  offset: 0,
2025-09-17T00:39:57.615873Z	  category: undefined,
2025-09-17T00:39:57.616011Z	  brand: 'ncc',
2025-09-17T00:39:57.616086Z	  featured: undefined
2025-09-17T00:39:57.616216Z	}
2025-09-17T00:39:57.616414Z	Fetching solutions with query: 
2025-09-17T00:39:57.616518Z	    {
2025-09-17T00:39:57.616631Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.616744Z	        
2025-09-17T00:39:57.616898Z	    _id,
2025-09-17T00:39:57.617053Z	    title,
2025-09-17T00:39:57.617178Z	    "slug": slug.current,
2025-09-17T00:39:57.617339Z	    summary,
2025-09-17T00:39:57.617441Z	    description,
2025-09-17T00:39:57.617561Z	    coverImage,
2025-09-17T00:39:57.617724Z	    primaryBrand->{
2025-09-17T00:39:57.617842Z	      _id,
2025-09-17T00:39:57.618001Z	      name,
2025-09-17T00:39:57.618108Z	      "slug": slug.current,
2025-09-17T00:39:57.618243Z	      logo
2025-09-17T00:39:57.618361Z	    },
2025-09-17T00:39:57.618452Z	    relatedBrands[]->{
2025-09-17T00:39:57.618568Z	      _id,
2025-09-17T00:39:57.618742Z	      name,
2025-09-17T00:39:57.618816Z	      "slug": slug.current,
2025-09-17T00:39:57.618966Z	      logo
2025-09-17T00:39:57.61907Z	    },
2025-09-17T00:39:57.61919Z	    targetMarket,
2025-09-17T00:39:57.619346Z	    complexity,
2025-09-17T00:39:57.619428Z	    publishedAt,
2025-09-17T00:39:57.619531Z	    isPublished,
2025-09-17T00:39:57.61969Z	    isFeatured,
2025-09-17T00:39:57.619823Z	    viewCount,
2025-09-17T00:39:57.619931Z	    _createdAt,
2025-09-17T00:39:57.620078Z	    _updatedAt
2025-09-17T00:39:57.620189Z	  
2025-09-17T00:39:57.620309Z	      },
2025-09-17T00:39:57.620554Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-17T00:39:57.620712Z	    }
2025-09-17T00:39:57.620838Z	  
2025-09-17T00:39:57.62098Z	Query parameters: {
2025-09-17T00:39:57.621096Z	  limit: 4,
2025-09-17T00:39:57.621178Z	  offset: 0,
2025-09-17T00:39:57.621345Z	  targetMarket: undefined,
2025-09-17T00:39:57.621485Z	  brand: 'ncc',
2025-09-17T00:39:57.621607Z	  featured: undefined
2025-09-17T00:39:57.621705Z	}
2025-09-17T00:39:57.621809Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-17T00:39:57.621927Z	Fetching products with query: 
2025-09-17T00:39:57.622029Z	    {
2025-09-17T00:39:57.622116Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.622204Z	        
2025-09-17T00:39:57.622336Z	    _id,
2025-09-17T00:39:57.622434Z	    _type,
2025-09-17T00:39:57.622583Z	    partNumber,
2025-09-17T00:39:57.622685Z	    "slug": slug.current,
2025-09-17T00:39:57.622789Z	    title,
2025-09-17T00:39:57.622882Z	    shortDescription,
2025-09-17T00:39:57.622977Z	    image,
2025-09-17T00:39:57.623089Z	    brand->{
2025-09-17T00:39:57.6232Z	      name,
2025-09-17T00:39:57.623479Z	      "slug": slug.current,
2025-09-17T00:39:57.623579Z	      logo
2025-09-17T00:39:57.623823Z	    },
2025-09-17T00:39:57.624049Z	    category->{
2025-09-17T00:39:57.624134Z	      name,
2025-09-17T00:39:57.624291Z	      "slug": slug.current
2025-09-17T00:39:57.624439Z	    },
2025-09-17T00:39:57.624523Z	    pricing{
2025-09-17T00:39:57.624656Z	      currency,
2025-09-17T00:39:57.625069Z	      tiers[]{
2025-09-17T00:39:57.625185Z	        quantity,
2025-09-17T00:39:57.625387Z	        price,
2025-09-17T00:39:57.625529Z	        unit
2025-09-17T00:39:57.625686Z	      },
2025-09-17T00:39:57.625818Z	      moq,
2025-09-17T00:39:57.625924Z	      leadTime,
2025-09-17T00:39:57.62602Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.626185Z	      "price": tiers[0].price,
2025-09-17T00:39:57.626381Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.626539Z	    },
2025-09-17T00:39:57.626693Z	    inventory{
2025-09-17T00:39:57.626771Z	      quantity,
2025-09-17T00:39:57.626888Z	      status,
2025-09-17T00:39:57.62704Z	      warehouse,
2025-09-17T00:39:57.627167Z	      lastUpdated,
2025-09-17T00:39:57.627385Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.6276Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.627826Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.628038Z	    },
2025-09-17T00:39:57.628195Z	    isActive,
2025-09-17T00:39:57.628358Z	    isFeatured,
2025-09-17T00:39:57.6285Z	    isNew,
2025-09-17T00:39:57.628673Z	    _createdAt,
2025-09-17T00:39:57.628896Z	    _updatedAt
2025-09-17T00:39:57.628972Z	  
2025-09-17T00:39:57.629173Z	      },
2025-09-17T00:39:57.629353Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-17T00:39:57.629538Z	    }
2025-09-17T00:39:57.629717Z	  
2025-09-17T00:39:57.62985Z	Query parameters: {
2025-09-17T00:39:57.629994Z	  limit: 8,
2025-09-17T00:39:57.630126Z	  offset: 0,
2025-09-17T00:39:57.630234Z	  category: undefined,
2025-09-17T00:39:57.630354Z	  brand: 'ixys',
2025-09-17T00:39:57.630513Z	  featured: undefined
2025-09-17T00:39:57.630616Z	}
2025-09-17T00:39:57.630728Z	Fetching solutions with query: 
2025-09-17T00:39:57.630812Z	    {
2025-09-17T00:39:57.630957Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.631173Z	        
2025-09-17T00:39:57.631345Z	    _id,
2025-09-17T00:39:57.63145Z	    title,
2025-09-17T00:39:57.631655Z	    "slug": slug.current,
2025-09-17T00:39:57.6318Z	    summary,
2025-09-17T00:39:57.631902Z	    description,
2025-09-17T00:39:57.632001Z	    coverImage,
2025-09-17T00:39:57.632094Z	    primaryBrand->{
2025-09-17T00:39:57.632195Z	      _id,
2025-09-17T00:39:57.63234Z	      name,
2025-09-17T00:39:57.632453Z	      "slug": slug.current,
2025-09-17T00:39:57.632635Z	      logo
2025-09-17T00:39:57.632742Z	    },
2025-09-17T00:39:57.63289Z	    relatedBrands[]->{
2025-09-17T00:39:57.632997Z	      _id,
2025-09-17T00:39:57.633123Z	      name,
2025-09-17T00:39:57.633228Z	      "slug": slug.current,
2025-09-17T00:39:57.633346Z	      logo
2025-09-17T00:39:57.633449Z	    },
2025-09-17T00:39:57.633551Z	    targetMarket,
2025-09-17T00:39:57.633641Z	    complexity,
2025-09-17T00:39:57.633743Z	    publishedAt,
2025-09-17T00:39:57.633864Z	    isPublished,
2025-09-17T00:39:57.633971Z	    isFeatured,
2025-09-17T00:39:57.634079Z	    viewCount,
2025-09-17T00:39:57.6342Z	    _createdAt,
2025-09-17T00:39:57.634372Z	    _updatedAt
2025-09-17T00:39:57.634558Z	  
2025-09-17T00:39:57.634702Z	      },
2025-09-17T00:39:57.634919Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-17T00:39:57.635137Z	    }
2025-09-17T00:39:57.635223Z	  
2025-09-17T00:39:57.635479Z	Query parameters: {
2025-09-17T00:39:57.63573Z	  limit: 4,
2025-09-17T00:39:57.635922Z	  offset: 0,
2025-09-17T00:39:57.63602Z	  targetMarket: undefined,
2025-09-17T00:39:57.636085Z	  brand: 'ixys',
2025-09-17T00:39:57.636143Z	  featured: undefined
2025-09-17T00:39:57.6362Z	}
2025-09-17T00:39:57.638425Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-17T00:39:57.638782Z	Fetching products with query: 
2025-09-17T00:39:57.638908Z	    {
2025-09-17T00:39:57.639129Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.639457Z	        
2025-09-17T00:39:57.639584Z	    _id,
2025-09-17T00:39:57.639698Z	    _type,
2025-09-17T00:39:57.639822Z	    partNumber,
2025-09-17T00:39:57.639936Z	    "slug": slug.current,
2025-09-17T00:39:57.640054Z	    title,
2025-09-17T00:39:57.640161Z	    shortDescription,
2025-09-17T00:39:57.640262Z	    image,
2025-09-17T00:39:57.640404Z	    brand->{
2025-09-17T00:39:57.640517Z	      name,
2025-09-17T00:39:57.640623Z	      "slug": slug.current,
2025-09-17T00:39:57.640725Z	      logo
2025-09-17T00:39:57.640831Z	    },
2025-09-17T00:39:57.640936Z	    category->{
2025-09-17T00:39:57.641048Z	      name,
2025-09-17T00:39:57.641157Z	      "slug": slug.current
2025-09-17T00:39:57.641262Z	    },
2025-09-17T00:39:57.641383Z	    pricing{
2025-09-17T00:39:57.641487Z	      currency,
2025-09-17T00:39:57.641585Z	      tiers[]{
2025-09-17T00:39:57.641675Z	        quantity,
2025-09-17T00:39:57.641767Z	        price,
2025-09-17T00:39:57.641868Z	        unit
2025-09-17T00:39:57.641969Z	      },
2025-09-17T00:39:57.6421Z	      moq,
2025-09-17T00:39:57.642233Z	      leadTime,
2025-09-17T00:39:57.642354Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.642463Z	      "price": tiers[0].price,
2025-09-17T00:39:57.642569Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.642673Z	    },
2025-09-17T00:39:57.642775Z	    inventory{
2025-09-17T00:39:57.642872Z	      quantity,
2025-09-17T00:39:57.642975Z	      status,
2025-09-17T00:39:57.643092Z	      warehouse,
2025-09-17T00:39:57.643195Z	      lastUpdated,
2025-09-17T00:39:57.643323Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.643443Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.643552Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.643652Z	    },
2025-09-17T00:39:57.64375Z	    isActive,
2025-09-17T00:39:57.643853Z	    isFeatured,
2025-09-17T00:39:57.64396Z	    isNew,
2025-09-17T00:39:57.644082Z	    _createdAt,
2025-09-17T00:39:57.644182Z	    _updatedAt
2025-09-17T00:39:57.644304Z	  
2025-09-17T00:39:57.644408Z	      },
2025-09-17T00:39:57.644506Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-17T00:39:57.644627Z	    }
2025-09-17T00:39:57.644743Z	  
2025-09-17T00:39:57.644855Z	Query parameters: {
2025-09-17T00:39:57.644966Z	  limit: 8,
2025-09-17T00:39:57.645087Z	  offset: 0,
2025-09-17T00:39:57.645187Z	  category: undefined,
2025-09-17T00:39:57.64531Z	  brand: 'ixys',
2025-09-17T00:39:57.645422Z	  featured: undefined
2025-09-17T00:39:57.645531Z	}
2025-09-17T00:39:57.645653Z	Fetching solutions with query: 
2025-09-17T00:39:57.645758Z	    {
2025-09-17T00:39:57.645871Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.645979Z	        
2025-09-17T00:39:57.646112Z	    _id,
2025-09-17T00:39:57.646223Z	    title,
2025-09-17T00:39:57.646347Z	    "slug": slug.current,
2025-09-17T00:39:57.646456Z	    summary,
2025-09-17T00:39:57.646561Z	    description,
2025-09-17T00:39:57.646669Z	    coverImage,
2025-09-17T00:39:57.64678Z	    primaryBrand->{
2025-09-17T00:39:57.646886Z	      _id,
2025-09-17T00:39:57.646997Z	      name,
2025-09-17T00:39:57.647114Z	      "slug": slug.current,
2025-09-17T00:39:57.647216Z	      logo
2025-09-17T00:39:57.647347Z	    },
2025-09-17T00:39:57.647462Z	    relatedBrands[]->{
2025-09-17T00:39:57.647575Z	      _id,
2025-09-17T00:39:57.647687Z	      name,
2025-09-17T00:39:57.647797Z	      "slug": slug.current,
2025-09-17T00:39:57.64791Z	      logo
2025-09-17T00:39:57.648024Z	    },
2025-09-17T00:39:57.648139Z	    targetMarket,
2025-09-17T00:39:57.648249Z	    complexity,
2025-09-17T00:39:57.648376Z	    publishedAt,
2025-09-17T00:39:57.648492Z	    isPublished,
2025-09-17T00:39:57.648605Z	    isFeatured,
2025-09-17T00:39:57.648708Z	    viewCount,
2025-09-17T00:39:57.648819Z	    _createdAt,
2025-09-17T00:39:57.648925Z	    _updatedAt
2025-09-17T00:39:57.64904Z	  
2025-09-17T00:39:57.649139Z	      },
2025-09-17T00:39:57.649243Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-17T00:39:57.649382Z	    }
2025-09-17T00:39:57.649505Z	  
2025-09-17T00:39:57.649615Z	Query parameters: {
2025-09-17T00:39:57.649731Z	  limit: 4,
2025-09-17T00:39:57.649845Z	  offset: 0,
2025-09-17T00:39:57.649959Z	  targetMarket: undefined,
2025-09-17T00:39:57.650076Z	  brand: 'ixys',
2025-09-17T00:39:57.650189Z	  featured: undefined
2025-09-17T00:39:57.650318Z	}
2025-09-17T00:39:57.650441Z	Solutions fetch result: {
2025-09-17T00:39:57.65055Z	  totalSolutions: 1,
2025-09-17T00:39:57.650689Z	  fetchedSolutions: 1,
2025-09-17T00:39:57.650794Z	  firstSolution: {
2025-09-17T00:39:57.650892Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-17T00:39:57.650989Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-17T00:39:57.651116Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-17T00:39:57.651213Z	    complexity: 'medium',
2025-09-17T00:39:57.653452Z	    coverImage: null,
2025-09-17T00:39:57.6536Z	    description: [ [Object] ],
2025-09-17T00:39:57.653709Z	    isFeatured: false,
2025-09-17T00:39:57.653835Z	    isPublished: true,
2025-09-17T00:39:57.654164Z	    primaryBrand: {
2025-09-17T00:39:57.654317Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:57.654468Z	      logo: null,
2025-09-17T00:39:57.654583Z	      name: 'IXYS',
2025-09-17T00:39:57.654692Z	      slug: 'ixys'
2025-09-17T00:39:57.654811Z	    },
2025-09-17T00:39:57.654917Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-17T00:39:57.655033Z	    relatedBrands: null,
2025-09-17T00:39:57.65514Z	    slug: '99999',
2025-09-17T00:39:57.655248Z	    summary: '99999',
2025-09-17T00:39:57.655374Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:57.655482Z	    title: '99999',
2025-09-17T00:39:57.655588Z	    viewCount: 0
2025-09-17T00:39:57.655689Z	  }
2025-09-17T00:39:57.65581Z	}
2025-09-17T00:39:57.655917Z	Solutions fetch result: {
2025-09-17T00:39:57.656024Z	  totalSolutions: 1,
2025-09-17T00:39:57.656141Z	  fetchedSolutions: 1,
2025-09-17T00:39:57.656326Z	  firstSolution: {
2025-09-17T00:39:57.656807Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-17T00:39:57.656974Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-17T00:39:57.657095Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-17T00:39:57.657209Z	    complexity: 'medium',
2025-09-17T00:39:57.657342Z	    coverImage: null,
2025-09-17T00:39:57.65746Z	    description: [ [Object] ],
2025-09-17T00:39:57.657574Z	    isFeatured: false,
2025-09-17T00:39:57.65768Z	    isPublished: true,
2025-09-17T00:39:57.657791Z	    primaryBrand: {
2025-09-17T00:39:57.657898Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:57.658017Z	      logo: null,
2025-09-17T00:39:57.65812Z	      name: 'IXYS',
2025-09-17T00:39:57.658218Z	      slug: 'ixys'
2025-09-17T00:39:57.658338Z	    },
2025-09-17T00:39:57.658441Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-17T00:39:57.658546Z	    relatedBrands: null,
2025-09-17T00:39:57.658646Z	    slug: '99999',
2025-09-17T00:39:57.658748Z	    summary: '99999',
2025-09-17T00:39:57.658872Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:57.658978Z	    title: '99999',
2025-09-17T00:39:57.659087Z	    viewCount: 0
2025-09-17T00:39:57.659199Z	  }
2025-09-17T00:39:57.659339Z	}
2025-09-17T00:39:57.659443Z	✅ [getBrandData] Found brand: IXYS
2025-09-17T00:39:57.659551Z	✅ [getBrandData] Found brand: IXYS
2025-09-17T00:39:57.659651Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.659753Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.659871Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-17T00:39:57.659976Z	Fetching products with query: 
2025-09-17T00:39:57.66008Z	    {
2025-09-17T00:39:57.660184Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.660313Z	        
2025-09-17T00:39:57.660425Z	    _id,
2025-09-17T00:39:57.660534Z	    _type,
2025-09-17T00:39:57.660633Z	    partNumber,
2025-09-17T00:39:57.660747Z	    "slug": slug.current,
2025-09-17T00:39:57.660861Z	    title,
2025-09-17T00:39:57.660968Z	    shortDescription,
2025-09-17T00:39:57.661083Z	    image,
2025-09-17T00:39:57.6612Z	    brand->{
2025-09-17T00:39:57.661333Z	      name,
2025-09-17T00:39:57.661449Z	      "slug": slug.current,
2025-09-17T00:39:57.661565Z	      logo
2025-09-17T00:39:57.661672Z	    },
2025-09-17T00:39:57.661788Z	    category->{
2025-09-17T00:39:57.66189Z	      name,
2025-09-17T00:39:57.661978Z	      "slug": slug.current
2025-09-17T00:39:57.66207Z	    },
2025-09-17T00:39:57.662175Z	    pricing{
2025-09-17T00:39:57.662847Z	      currency,
2025-09-17T00:39:57.663375Z	      tiers[]{
2025-09-17T00:39:57.667552Z	        quantity,
2025-09-17T00:39:57.667701Z	        price,
2025-09-17T00:39:57.687735Z	        unit
2025-09-17T00:39:57.687955Z	      },
2025-09-17T00:39:57.688114Z	      moq,
2025-09-17T00:39:57.688255Z	      leadTime,
2025-09-17T00:39:57.688452Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.688623Z	      "price": tiers[0].price,
2025-09-17T00:39:57.688792Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.688956Z	    },
2025-09-17T00:39:57.689121Z	    inventory{
2025-09-17T00:39:57.689295Z	      quantity,
2025-09-17T00:39:57.689454Z	      status,
2025-09-17T00:39:57.689609Z	      warehouse,
2025-09-17T00:39:57.689769Z	      lastUpdated,
2025-09-17T00:39:57.690048Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.690565Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.690802Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.691077Z	    },
2025-09-17T00:39:57.691263Z	    isActive,
2025-09-17T00:39:57.691459Z	    isFeatured,
2025-09-17T00:39:57.691614Z	    isNew,
2025-09-17T00:39:57.69177Z	    _createdAt,
2025-09-17T00:39:57.69195Z	    _updatedAt
2025-09-17T00:39:57.692138Z	  
2025-09-17T00:39:57.692312Z	      },
2025-09-17T00:39:57.692434Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-17T00:39:57.692568Z	    }
2025-09-17T00:39:57.692684Z	  
2025-09-17T00:39:57.692791Z	Query parameters: {
2025-09-17T00:39:57.692893Z	  limit: 8,
2025-09-17T00:39:57.693013Z	  offset: 0,
2025-09-17T00:39:57.693133Z	  category: undefined,
2025-09-17T00:39:57.693242Z	  brand: 'lem',
2025-09-17T00:39:57.693863Z	  featured: undefined
2025-09-17T00:39:57.694033Z	}
2025-09-17T00:39:57.69415Z	Fetching solutions with query: 
2025-09-17T00:39:57.694258Z	    {
2025-09-17T00:39:57.694461Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.69466Z	        
2025-09-17T00:39:57.694853Z	    _id,
2025-09-17T00:39:57.695075Z	    title,
2025-09-17T00:39:57.695204Z	    "slug": slug.current,
2025-09-17T00:39:57.695495Z	    summary,
2025-09-17T00:39:57.695787Z	    description,
2025-09-17T00:39:57.695919Z	    coverImage,
2025-09-17T00:39:57.696197Z	    primaryBrand->{
2025-09-17T00:39:57.696417Z	      _id,
2025-09-17T00:39:57.696679Z	      name,
2025-09-17T00:39:57.69692Z	      "slug": slug.current,
2025-09-17T00:39:57.697148Z	      logo
2025-09-17T00:39:57.699834Z	    },
2025-09-17T00:39:57.699992Z	    relatedBrands[]->{
2025-09-17T00:39:57.700107Z	      _id,
2025-09-17T00:39:57.700203Z	      name,
2025-09-17T00:39:57.700323Z	      "slug": slug.current,
2025-09-17T00:39:57.700428Z	      logo
2025-09-17T00:39:57.70053Z	    },
2025-09-17T00:39:57.700627Z	    targetMarket,
2025-09-17T00:39:57.700717Z	    complexity,
2025-09-17T00:39:57.700856Z	    publishedAt,
2025-09-17T00:39:57.700995Z	    isPublished,
2025-09-17T00:39:57.70112Z	    isFeatured,
2025-09-17T00:39:57.70122Z	    viewCount,
2025-09-17T00:39:57.701341Z	    _createdAt,
2025-09-17T00:39:57.701438Z	    _updatedAt
2025-09-17T00:39:57.701522Z	  
2025-09-17T00:39:57.701602Z	      },
2025-09-17T00:39:57.70168Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-17T00:39:57.701773Z	    }
2025-09-17T00:39:57.701864Z	  
2025-09-17T00:39:57.701945Z	Query parameters: {
2025-09-17T00:39:57.70205Z	  limit: 4,
2025-09-17T00:39:57.702168Z	  offset: 0,
2025-09-17T00:39:57.702286Z	  targetMarket: undefined,
2025-09-17T00:39:57.702406Z	  brand: 'lem',
2025-09-17T00:39:57.70251Z	  featured: undefined
2025-09-17T00:39:57.702608Z	}
2025-09-17T00:39:57.702718Z	✅ [getBrandData] Found brand: LEM
2025-09-17T00:39:57.702829Z	Products fetch result: {
2025-09-17T00:39:57.702934Z	  totalProducts: 3,
2025-09-17T00:39:57.703049Z	  fetchedProducts: 3,
2025-09-17T00:39:57.703153Z	  firstProduct: {
2025-09-17T00:39:57.703257Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-17T00:39:57.703391Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-17T00:39:57.703516Z	    _type: 'product',
2025-09-17T00:39:57.703622Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-17T00:39:57.703726Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-17T00:39:57.704043Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-17T00:39:57.704993Z	    image: null,
2025-09-17T00:39:57.70555Z	    inventory: {
2025-09-17T00:39:57.705838Z	      inStock: true,
2025-09-17T00:39:57.706103Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-17T00:39:57.706397Z	      quantity: 0,
2025-09-17T00:39:57.706766Z	      status: 'in_stock',
2025-09-17T00:39:57.706933Z	      warehouse: null
2025-09-17T00:39:57.707122Z	    },
2025-09-17T00:39:57.707354Z	    isActive: true,
2025-09-17T00:39:57.707537Z	    isFeatured: false,
2025-09-17T00:39:57.707733Z	    isNew: false,
2025-09-17T00:39:57.707857Z	    partNumber: 'la55-p',
2025-09-17T00:39:57.707986Z	    pricing: {
2025-09-17T00:39:57.708105Z	      currency: 'CNY',
2025-09-17T00:39:57.708211Z	      leadTime: null,
2025-09-17T00:39:57.70841Z	      moq: null,
2025-09-17T00:39:57.708482Z	      price: null,
2025-09-17T00:39:57.708674Z	      tiers: null
2025-09-17T00:39:57.70876Z	    },
2025-09-17T00:39:57.7089Z	    shortDescription: '电流传感器la55-p',
2025-09-17T00:39:57.709034Z	    slug: 'la55-p',
2025-09-17T00:39:57.709492Z	    title: '电流传感器la55-p'
2025-09-17T00:39:57.709598Z	  }
2025-09-17T00:39:57.709675Z	}
2025-09-17T00:39:57.709946Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.710033Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-17T00:39:57.710143Z	Fetching products with query: 
2025-09-17T00:39:57.710412Z	    {
2025-09-17T00:39:57.710499Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.710638Z	        
2025-09-17T00:39:57.710836Z	    _id,
2025-09-17T00:39:57.710916Z	    _type,
2025-09-17T00:39:57.710979Z	    partNumber,
2025-09-17T00:39:57.711183Z	    "slug": slug.current,
2025-09-17T00:39:57.711256Z	    title,
2025-09-17T00:39:57.711448Z	    shortDescription,
2025-09-17T00:39:57.711524Z	    image,
2025-09-17T00:39:57.711713Z	    brand->{
2025-09-17T00:39:57.711799Z	      name,
2025-09-17T00:39:57.711904Z	      "slug": slug.current,
2025-09-17T00:39:57.712049Z	      logo
2025-09-17T00:39:57.712166Z	    },
2025-09-17T00:39:57.71228Z	    category->{
2025-09-17T00:39:57.71247Z	      name,
2025-09-17T00:39:57.712561Z	      "slug": slug.current
2025-09-17T00:39:57.712691Z	    },
2025-09-17T00:39:57.712812Z	    pricing{
2025-09-17T00:39:57.712988Z	      currency,
2025-09-17T00:39:57.713061Z	      tiers[]{
2025-09-17T00:39:57.713185Z	        quantity,
2025-09-17T00:39:57.713329Z	        price,
2025-09-17T00:39:57.713396Z	        unit
2025-09-17T00:39:57.713451Z	      },
2025-09-17T00:39:57.713545Z	      moq,
2025-09-17T00:39:57.713691Z	      leadTime,
2025-09-17T00:39:57.713906Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.713992Z	      "price": tiers[0].price,
2025-09-17T00:39:57.714089Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.71434Z	    },
2025-09-17T00:39:57.714425Z	    inventory{
2025-09-17T00:39:57.714557Z	      quantity,
2025-09-17T00:39:57.714746Z	      status,
2025-09-17T00:39:57.71488Z	      warehouse,
2025-09-17T00:39:57.715061Z	      lastUpdated,
2025-09-17T00:39:57.715147Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.715333Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.71549Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.715645Z	    },
2025-09-17T00:39:57.715769Z	    isActive,
2025-09-17T00:39:57.715974Z	    isFeatured,
2025-09-17T00:39:57.71605Z	    isNew,
2025-09-17T00:39:57.716224Z	    _createdAt,
2025-09-17T00:39:57.716371Z	    _updatedAt
2025-09-17T00:39:57.716494Z	  
2025-09-17T00:39:57.71658Z	      },
2025-09-17T00:39:57.716708Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-17T00:39:57.716847Z	    }
2025-09-17T00:39:57.716999Z	  
2025-09-17T00:39:57.71707Z	Query parameters: {
2025-09-17T00:39:57.717176Z	  limit: 8,
2025-09-17T00:39:57.717292Z	  offset: 0,
2025-09-17T00:39:57.717397Z	  category: undefined,
2025-09-17T00:39:57.717506Z	  brand: 'lem',
2025-09-17T00:39:57.717607Z	  featured: undefined
2025-09-17T00:39:57.717715Z	}
2025-09-17T00:39:57.717784Z	Fetching solutions with query: 
2025-09-17T00:39:57.717841Z	    {
2025-09-17T00:39:57.717924Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.718169Z	        
2025-09-17T00:39:57.718414Z	    _id,
2025-09-17T00:39:57.718581Z	    title,
2025-09-17T00:39:57.718709Z	    "slug": slug.current,
2025-09-17T00:39:57.718832Z	    summary,
2025-09-17T00:39:57.718906Z	    description,
2025-09-17T00:39:57.719001Z	    coverImage,
2025-09-17T00:39:57.71912Z	    primaryBrand->{
2025-09-17T00:39:57.719226Z	      _id,
2025-09-17T00:39:57.719347Z	      name,
2025-09-17T00:39:57.719446Z	      "slug": slug.current,
2025-09-17T00:39:57.719552Z	      logo
2025-09-17T00:39:57.719676Z	    },
2025-09-17T00:39:57.71977Z	    relatedBrands[]->{
2025-09-17T00:39:57.719912Z	      _id,
2025-09-17T00:39:57.719988Z	      name,
2025-09-17T00:39:57.720046Z	      "slug": slug.current,
2025-09-17T00:39:57.720101Z	      logo
2025-09-17T00:39:57.720157Z	    },
2025-09-17T00:39:57.720211Z	    targetMarket,
2025-09-17T00:39:57.72033Z	    complexity,
2025-09-17T00:39:57.720401Z	    publishedAt,
2025-09-17T00:39:57.720456Z	    isPublished,
2025-09-17T00:39:57.72051Z	    isFeatured,
2025-09-17T00:39:57.720634Z	    viewCount,
2025-09-17T00:39:57.720722Z	    _createdAt,
2025-09-17T00:39:57.720779Z	    _updatedAt
2025-09-17T00:39:57.721045Z	  
2025-09-17T00:39:57.721235Z	      },
2025-09-17T00:39:57.721443Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-17T00:39:57.721708Z	    }
2025-09-17T00:39:57.72189Z	  
2025-09-17T00:39:57.722043Z	Query parameters: {
2025-09-17T00:39:57.722192Z	  limit: 4,
2025-09-17T00:39:57.72226Z	  offset: 0,
2025-09-17T00:39:57.722484Z	  targetMarket: undefined,
2025-09-17T00:39:57.722578Z	  brand: 'lem',
2025-09-17T00:39:57.722748Z	  featured: undefined
2025-09-17T00:39:57.722851Z	}
2025-09-17T00:39:57.722969Z	✅ [getBrandData] Found brand: LEM
2025-09-17T00:39:57.723122Z	Products fetch result: {
2025-09-17T00:39:57.723232Z	  totalProducts: 3,
2025-09-17T00:39:57.723389Z	  fetchedProducts: 3,
2025-09-17T00:39:57.723517Z	  firstProduct: {
2025-09-17T00:39:57.723646Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-17T00:39:57.723753Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-17T00:39:57.723844Z	    _type: 'product',
2025-09-17T00:39:57.723974Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-17T00:39:57.724096Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-17T00:39:57.724279Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-17T00:39:57.724482Z	    image: null,
2025-09-17T00:39:57.724635Z	    inventory: {
2025-09-17T00:39:57.724743Z	      inStock: true,
2025-09-17T00:39:57.724854Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-17T00:39:57.725055Z	      quantity: 0,
2025-09-17T00:39:57.725133Z	      status: 'in_stock',
2025-09-17T00:39:57.725287Z	      warehouse: null
2025-09-17T00:39:57.725452Z	    },
2025-09-17T00:39:57.725721Z	    isActive: true,
2025-09-17T00:39:57.725887Z	    isFeatured: false,
2025-09-17T00:39:57.72608Z	    isNew: false,
2025-09-17T00:39:57.726255Z	    partNumber: 'la55-p',
2025-09-17T00:39:57.72659Z	    pricing: {
2025-09-17T00:39:57.726692Z	      currency: 'CNY',
2025-09-17T00:39:57.72683Z	      leadTime: null,
2025-09-17T00:39:57.726914Z	      moq: null,
2025-09-17T00:39:57.727005Z	      price: null,
2025-09-17T00:39:57.727111Z	      tiers: null
2025-09-17T00:39:57.727223Z	    },
2025-09-17T00:39:57.72736Z	    shortDescription: '电流传感器la55-p',
2025-09-17T00:39:57.72754Z	    slug: 'la55-p',
2025-09-17T00:39:57.727688Z	    title: '电流传感器la55-p'
2025-09-17T00:39:57.727802Z	  }
2025-09-17T00:39:57.727934Z	}
2025-09-17T00:39:57.728077Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.728249Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-17T00:39:57.728462Z	Fetching products with query: 
2025-09-17T00:39:57.728659Z	    {
2025-09-17T00:39:57.728814Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.72892Z	        
2025-09-17T00:39:57.729101Z	    _id,
2025-09-17T00:39:57.729252Z	    _type,
2025-09-17T00:39:57.729384Z	    partNumber,
2025-09-17T00:39:57.729485Z	    "slug": slug.current,
2025-09-17T00:39:57.729624Z	    title,
2025-09-17T00:39:57.729741Z	    shortDescription,
2025-09-17T00:39:57.729837Z	    image,
2025-09-17T00:39:57.729938Z	    brand->{
2025-09-17T00:39:57.730036Z	      name,
2025-09-17T00:39:57.730132Z	      "slug": slug.current,
2025-09-17T00:39:57.73024Z	      logo
2025-09-17T00:39:57.730467Z	    },
2025-09-17T00:39:57.730599Z	    category->{
2025-09-17T00:39:57.730736Z	      name,
2025-09-17T00:39:57.730922Z	      "slug": slug.current
2025-09-17T00:39:57.731008Z	    },
2025-09-17T00:39:57.73107Z	    pricing{
2025-09-17T00:39:57.731191Z	      currency,
2025-09-17T00:39:57.731284Z	      tiers[]{
2025-09-17T00:39:57.731469Z	        quantity,
2025-09-17T00:39:57.731584Z	        price,
2025-09-17T00:39:57.731687Z	        unit
2025-09-17T00:39:57.731787Z	      },
2025-09-17T00:39:57.731887Z	      moq,
2025-09-17T00:39:57.731987Z	      leadTime,
2025-09-17T00:39:57.732113Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.73235Z	      "price": tiers[0].price,
2025-09-17T00:39:57.732465Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.732578Z	    },
2025-09-17T00:39:57.732683Z	    inventory{
2025-09-17T00:39:57.732789Z	      quantity,
2025-09-17T00:39:57.732949Z	      status,
2025-09-17T00:39:57.733042Z	      warehouse,
2025-09-17T00:39:57.733151Z	      lastUpdated,
2025-09-17T00:39:57.733291Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.733421Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.733482Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.733537Z	    },
2025-09-17T00:39:57.733591Z	    isActive,
2025-09-17T00:39:57.733676Z	    isFeatured,
2025-09-17T00:39:57.733776Z	    isNew,
2025-09-17T00:39:57.733884Z	    _createdAt,
2025-09-17T00:39:57.73399Z	    _updatedAt
2025-09-17T00:39:57.734082Z	  
2025-09-17T00:39:57.734188Z	      },
2025-09-17T00:39:57.734296Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-17T00:39:57.734415Z	    }
2025-09-17T00:39:57.734543Z	  
2025-09-17T00:39:57.734644Z	Query parameters: {
2025-09-17T00:39:57.734756Z	  limit: 8,
2025-09-17T00:39:57.734856Z	  offset: 0,
2025-09-17T00:39:57.734992Z	  category: undefined,
2025-09-17T00:39:57.735095Z	  brand: 'mediatek',
2025-09-17T00:39:57.735254Z	  featured: undefined
2025-09-17T00:39:57.735459Z	}
2025-09-17T00:39:57.735534Z	Fetching solutions with query: 
2025-09-17T00:39:57.7356Z	    {
2025-09-17T00:39:57.735697Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.73584Z	        
2025-09-17T00:39:57.735952Z	    _id,
2025-09-17T00:39:57.736168Z	    title,
2025-09-17T00:39:57.736247Z	    "slug": slug.current,
2025-09-17T00:39:57.736423Z	    summary,
2025-09-17T00:39:57.736552Z	    description,
2025-09-17T00:39:57.736696Z	    coverImage,
2025-09-17T00:39:57.736834Z	    primaryBrand->{
2025-09-17T00:39:57.736962Z	      _id,
2025-09-17T00:39:57.737162Z	      name,
2025-09-17T00:39:57.739536Z	      "slug": slug.current,
2025-09-17T00:39:57.739654Z	      logo
2025-09-17T00:39:57.739811Z	    },
2025-09-17T00:39:57.73989Z	    relatedBrands[]->{
2025-09-17T00:39:57.740016Z	      _id,
2025-09-17T00:39:57.740113Z	      name,
2025-09-17T00:39:57.740225Z	      "slug": slug.current,
2025-09-17T00:39:57.740371Z	      logo
2025-09-17T00:39:57.740477Z	    },
2025-09-17T00:39:57.740654Z	    targetMarket,
2025-09-17T00:39:57.740735Z	    complexity,
2025-09-17T00:39:57.740795Z	    publishedAt,
2025-09-17T00:39:57.740945Z	    isPublished,
2025-09-17T00:39:57.741067Z	    isFeatured,
2025-09-17T00:39:57.741197Z	    viewCount,
2025-09-17T00:39:57.741297Z	    _createdAt,
2025-09-17T00:39:57.741476Z	    _updatedAt
2025-09-17T00:39:57.741546Z	  
2025-09-17T00:39:57.741602Z	      },
2025-09-17T00:39:57.741705Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-17T00:39:57.741851Z	    }
2025-09-17T00:39:57.741978Z	  
2025-09-17T00:39:57.742096Z	Query parameters: {
2025-09-17T00:39:57.742259Z	  limit: 4,
2025-09-17T00:39:57.742369Z	  offset: 0,
2025-09-17T00:39:57.742475Z	  targetMarket: undefined,
2025-09-17T00:39:57.742615Z	  brand: 'mediatek',
2025-09-17T00:39:57.742761Z	  featured: undefined
2025-09-17T00:39:57.742861Z	}
2025-09-17T00:39:57.743002Z	✅ [getBrandData] Found brand: MediaTek
2025-09-17T00:39:57.743112Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.743289Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.743379Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-17T00:39:57.743486Z	Fetching products with query: 
2025-09-17T00:39:57.743608Z	    {
2025-09-17T00:39:57.743702Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.743814Z	        
2025-09-17T00:39:57.743963Z	    _id,
2025-09-17T00:39:57.744098Z	    _type,
2025-09-17T00:39:57.744198Z	    partNumber,
2025-09-17T00:39:57.744456Z	    "slug": slug.current,
2025-09-17T00:39:57.744663Z	    title,
2025-09-17T00:39:57.744793Z	    shortDescription,
2025-09-17T00:39:57.744916Z	    image,
2025-09-17T00:39:57.745037Z	    brand->{
2025-09-17T00:39:57.745155Z	      name,
2025-09-17T00:39:57.745302Z	      "slug": slug.current,
2025-09-17T00:39:57.745469Z	      logo
2025-09-17T00:39:57.745606Z	    },
2025-09-17T00:39:57.745726Z	    category->{
2025-09-17T00:39:57.745853Z	      name,
2025-09-17T00:39:57.745977Z	      "slug": slug.current
2025-09-17T00:39:57.746082Z	    },
2025-09-17T00:39:57.746241Z	    pricing{
2025-09-17T00:39:57.746375Z	      currency,
2025-09-17T00:39:57.746518Z	      tiers[]{
2025-09-17T00:39:57.746718Z	        quantity,
2025-09-17T00:39:57.746841Z	        price,
2025-09-17T00:39:57.74695Z	        unit
2025-09-17T00:39:57.747074Z	      },
2025-09-17T00:39:57.747171Z	      moq,
2025-09-17T00:39:57.747299Z	      leadTime,
2025-09-17T00:39:57.747413Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.747559Z	      "price": tiers[0].price,
2025-09-17T00:39:57.747671Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.747826Z	    },
2025-09-17T00:39:57.747895Z	    inventory{
2025-09-17T00:39:57.747958Z	      quantity,
2025-09-17T00:39:57.748098Z	      status,
2025-09-17T00:39:57.748423Z	      warehouse,
2025-09-17T00:39:57.748522Z	      lastUpdated,
2025-09-17T00:39:57.748645Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.748848Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.748919Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.749277Z	    },
2025-09-17T00:39:57.749405Z	    isActive,
2025-09-17T00:39:57.74952Z	    isFeatured,
2025-09-17T00:39:57.749621Z	    isNew,
2025-09-17T00:39:57.74974Z	    _createdAt,
2025-09-17T00:39:57.750031Z	    _updatedAt
2025-09-17T00:39:57.750182Z	  
2025-09-17T00:39:57.750313Z	      },
2025-09-17T00:39:57.750428Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-17T00:39:57.750543Z	    }
2025-09-17T00:39:57.750638Z	  
2025-09-17T00:39:57.750733Z	Query parameters: {
2025-09-17T00:39:57.750829Z	  limit: 8,
2025-09-17T00:39:57.750921Z	  offset: 0,
2025-09-17T00:39:57.751018Z	  category: undefined,
2025-09-17T00:39:57.75112Z	  brand: 'mediatek',
2025-09-17T00:39:57.75121Z	  featured: undefined
2025-09-17T00:39:57.751347Z	}
2025-09-17T00:39:57.751458Z	Fetching solutions with query: 
2025-09-17T00:39:57.751571Z	    {
2025-09-17T00:39:57.751675Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.751797Z	        
2025-09-17T00:39:57.751905Z	    _id,
2025-09-17T00:39:57.752016Z	    title,
2025-09-17T00:39:57.752116Z	    "slug": slug.current,
2025-09-17T00:39:57.752211Z	    summary,
2025-09-17T00:39:57.752334Z	    description,
2025-09-17T00:39:57.752452Z	    coverImage,
2025-09-17T00:39:57.752575Z	    primaryBrand->{
2025-09-17T00:39:57.752675Z	      _id,
2025-09-17T00:39:57.752857Z	      name,
2025-09-17T00:39:57.753053Z	      "slug": slug.current,
2025-09-17T00:39:57.753188Z	      logo
2025-09-17T00:39:57.753318Z	    },
2025-09-17T00:39:57.753428Z	    relatedBrands[]->{
2025-09-17T00:39:57.753524Z	      _id,
2025-09-17T00:39:57.753619Z	      name,
2025-09-17T00:39:57.753713Z	      "slug": slug.current,
2025-09-17T00:39:57.753817Z	      logo
2025-09-17T00:39:57.753929Z	    },
2025-09-17T00:39:57.754022Z	    targetMarket,
2025-09-17T00:39:57.754115Z	    complexity,
2025-09-17T00:39:57.754227Z	    publishedAt,
2025-09-17T00:39:57.75435Z	    isPublished,
2025-09-17T00:39:57.75446Z	    isFeatured,
2025-09-17T00:39:57.754572Z	    viewCount,
2025-09-17T00:39:57.754679Z	    _createdAt,
2025-09-17T00:39:57.754775Z	    _updatedAt
2025-09-17T00:39:57.754871Z	  
2025-09-17T00:39:57.75499Z	      },
2025-09-17T00:39:57.755163Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-17T00:39:57.7553Z	    }
2025-09-17T00:39:57.755409Z	  
2025-09-17T00:39:57.755513Z	Query parameters: {
2025-09-17T00:39:57.755614Z	  limit: 4,
2025-09-17T00:39:57.755718Z	  offset: 0,
2025-09-17T00:39:57.755819Z	  targetMarket: undefined,
2025-09-17T00:39:57.755927Z	  brand: 'mediatek',
2025-09-17T00:39:57.756164Z	  featured: undefined
2025-09-17T00:39:57.756327Z	}
2025-09-17T00:39:57.756437Z	✅ [getBrandData] Found brand: MediaTek
2025-09-17T00:39:57.756599Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.756735Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.756842Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-17T00:39:57.756948Z	Fetching products with query: 
2025-09-17T00:39:57.75705Z	    {
2025-09-17T00:39:57.757147Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.757251Z	        
2025-09-17T00:39:57.757386Z	    _id,
2025-09-17T00:39:57.757509Z	    _type,
2025-09-17T00:39:57.757609Z	    partNumber,
2025-09-17T00:39:57.75772Z	    "slug": slug.current,
2025-09-17T00:39:57.757819Z	    title,
2025-09-17T00:39:57.757918Z	    shortDescription,
2025-09-17T00:39:57.758044Z	    image,
2025-09-17T00:39:57.758307Z	    brand->{
2025-09-17T00:39:57.758415Z	      name,
2025-09-17T00:39:57.758516Z	      "slug": slug.current,
2025-09-17T00:39:57.758647Z	      logo
2025-09-17T00:39:57.758784Z	    },
2025-09-17T00:39:57.758893Z	    category->{
2025-09-17T00:39:57.758988Z	      name,
2025-09-17T00:39:57.759091Z	      "slug": slug.current
2025-09-17T00:39:57.759235Z	    },
2025-09-17T00:39:57.759381Z	    pricing{
2025-09-17T00:39:57.759459Z	      currency,
2025-09-17T00:39:57.759682Z	      tiers[]{
2025-09-17T00:39:57.759807Z	        quantity,
2025-09-17T00:39:57.759917Z	        price,
2025-09-17T00:39:57.760003Z	        unit
2025-09-17T00:39:57.760094Z	      },
2025-09-17T00:39:57.760191Z	      moq,
2025-09-17T00:39:57.760307Z	      leadTime,
2025-09-17T00:39:57.76042Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.760531Z	      "price": tiers[0].price,
2025-09-17T00:39:57.760757Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.761002Z	    },
2025-09-17T00:39:57.761081Z	    inventory{
2025-09-17T00:39:57.761419Z	      quantity,
2025-09-17T00:39:57.761535Z	      status,
2025-09-17T00:39:57.761661Z	      warehouse,
2025-09-17T00:39:57.761819Z	      lastUpdated,
2025-09-17T00:39:57.761912Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.762053Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.762199Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.762344Z	    },
2025-09-17T00:39:57.762503Z	    isActive,
2025-09-17T00:39:57.762668Z	    isFeatured,
2025-09-17T00:39:57.76278Z	    isNew,
2025-09-17T00:39:57.762866Z	    _createdAt,
2025-09-17T00:39:57.762952Z	    _updatedAt
2025-09-17T00:39:57.763036Z	  
2025-09-17T00:39:57.763094Z	      },
2025-09-17T00:39:57.763206Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-17T00:39:57.763333Z	    }
2025-09-17T00:39:57.763432Z	  
2025-09-17T00:39:57.763528Z	Query parameters: {
2025-09-17T00:39:57.763659Z	  limit: 8,
2025-09-17T00:39:57.763758Z	  offset: 0,
2025-09-17T00:39:57.763888Z	  category: undefined,
2025-09-17T00:39:57.764057Z	  brand: 'qualcomm',
2025-09-17T00:39:57.764215Z	  featured: undefined
2025-09-17T00:39:57.764355Z	}
2025-09-17T00:39:57.764541Z	Fetching solutions with query: 
2025-09-17T00:39:57.764637Z	    {
2025-09-17T00:39:57.764757Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.764978Z	        
2025-09-17T00:39:57.765057Z	    _id,
2025-09-17T00:39:57.765119Z	    title,
2025-09-17T00:39:57.765176Z	    "slug": slug.current,
2025-09-17T00:39:57.765231Z	    summary,
2025-09-17T00:39:57.765313Z	    description,
2025-09-17T00:39:57.765375Z	    coverImage,
2025-09-17T00:39:57.76544Z	    primaryBrand->{
2025-09-17T00:39:57.765497Z	      _id,
2025-09-17T00:39:57.765551Z	      name,
2025-09-17T00:39:57.765883Z	      "slug": slug.current,
2025-09-17T00:39:57.765991Z	      logo
2025-09-17T00:39:57.766226Z	    },
2025-09-17T00:39:57.766335Z	    relatedBrands[]->{
2025-09-17T00:39:57.766443Z	      _id,
2025-09-17T00:39:57.766733Z	      name,
2025-09-17T00:39:57.766998Z	      "slug": slug.current,
2025-09-17T00:39:57.767221Z	      logo
2025-09-17T00:39:57.767476Z	    },
2025-09-17T00:39:57.76757Z	    targetMarket,
2025-09-17T00:39:57.767634Z	    complexity,
2025-09-17T00:39:57.767694Z	    publishedAt,
2025-09-17T00:39:57.767947Z	    isPublished,
2025-09-17T00:39:57.768021Z	    isFeatured,
2025-09-17T00:39:57.768077Z	    viewCount,
2025-09-17T00:39:57.768144Z	    _createdAt,
2025-09-17T00:39:57.768232Z	    _updatedAt
2025-09-17T00:39:57.768379Z	  
2025-09-17T00:39:57.768447Z	      },
2025-09-17T00:39:57.768546Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-17T00:39:57.768693Z	    }
2025-09-17T00:39:57.768804Z	  
2025-09-17T00:39:57.768928Z	Query parameters: {
2025-09-17T00:39:57.769023Z	  limit: 4,
2025-09-17T00:39:57.769128Z	  offset: 0,
2025-09-17T00:39:57.769219Z	  targetMarket: undefined,
2025-09-17T00:39:57.769341Z	  brand: 'qualcomm',
2025-09-17T00:39:57.769572Z	  featured: undefined
2025-09-17T00:39:57.769705Z	}
2025-09-17T00:39:57.769823Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-17T00:39:57.769939Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.770046Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.770147Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-17T00:39:57.770444Z	Fetching products with query: 
2025-09-17T00:39:57.770528Z	    {
2025-09-17T00:39:57.770658Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.770756Z	        
2025-09-17T00:39:57.770936Z	    _id,
2025-09-17T00:39:57.771007Z	    _type,
2025-09-17T00:39:57.771087Z	    partNumber,
2025-09-17T00:39:57.77119Z	    "slug": slug.current,
2025-09-17T00:39:57.771275Z	    title,
2025-09-17T00:39:57.771424Z	    shortDescription,
2025-09-17T00:39:57.771501Z	    image,
2025-09-17T00:39:57.771605Z	    brand->{
2025-09-17T00:39:57.771717Z	      name,
2025-09-17T00:39:57.771816Z	      "slug": slug.current,
2025-09-17T00:39:57.771908Z	      logo
2025-09-17T00:39:57.772027Z	    },
2025-09-17T00:39:57.772112Z	    category->{
2025-09-17T00:39:57.77219Z	      name,
2025-09-17T00:39:57.772311Z	      "slug": slug.current
2025-09-17T00:39:57.772399Z	    },
2025-09-17T00:39:57.7725Z	    pricing{
2025-09-17T00:39:57.772614Z	      currency,
2025-09-17T00:39:57.772706Z	      tiers[]{
2025-09-17T00:39:57.772793Z	        quantity,
2025-09-17T00:39:57.772904Z	        price,
2025-09-17T00:39:57.773008Z	        unit
2025-09-17T00:39:57.773081Z	      },
2025-09-17T00:39:57.773172Z	      moq,
2025-09-17T00:39:57.773281Z	      leadTime,
2025-09-17T00:39:57.773378Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.773492Z	      "price": tiers[0].price,
2025-09-17T00:39:57.773588Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.773691Z	    },
2025-09-17T00:39:57.773782Z	    inventory{
2025-09-17T00:39:57.773871Z	      quantity,
2025-09-17T00:39:57.773963Z	      status,
2025-09-17T00:39:57.774074Z	      warehouse,
2025-09-17T00:39:57.774174Z	      lastUpdated,
2025-09-17T00:39:57.774292Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.774408Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.774502Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.774609Z	    },
2025-09-17T00:39:57.774718Z	    isActive,
2025-09-17T00:39:57.774822Z	    isFeatured,
2025-09-17T00:39:57.774914Z	    isNew,
2025-09-17T00:39:57.775015Z	    _createdAt,
2025-09-17T00:39:57.775105Z	    _updatedAt
2025-09-17T00:39:57.775209Z	  
2025-09-17T00:39:57.775332Z	      },
2025-09-17T00:39:57.775471Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-17T00:39:57.7756Z	    }
2025-09-17T00:39:57.775715Z	  
2025-09-17T00:39:57.775828Z	Query parameters: {
2025-09-17T00:39:57.775925Z	  limit: 8,
2025-09-17T00:39:57.77601Z	  offset: 0,
2025-09-17T00:39:57.776098Z	  category: undefined,
2025-09-17T00:39:57.776185Z	  brand: 'qualcomm',
2025-09-17T00:39:57.776296Z	  featured: undefined
2025-09-17T00:39:57.776397Z	}
2025-09-17T00:39:57.776492Z	Fetching solutions with query: 
2025-09-17T00:39:57.776611Z	    {
2025-09-17T00:39:57.776742Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.776874Z	        
2025-09-17T00:39:57.776976Z	    _id,
2025-09-17T00:39:57.777075Z	    title,
2025-09-17T00:39:57.777171Z	    "slug": slug.current,
2025-09-17T00:39:57.777265Z	    summary,
2025-09-17T00:39:57.777377Z	    description,
2025-09-17T00:39:57.777471Z	    coverImage,
2025-09-17T00:39:57.777562Z	    primaryBrand->{
2025-09-17T00:39:57.777677Z	      _id,
2025-09-17T00:39:57.777751Z	      name,
2025-09-17T00:39:57.777835Z	      "slug": slug.current,
2025-09-17T00:39:57.778092Z	      logo
2025-09-17T00:39:57.778443Z	    },
2025-09-17T00:39:57.778679Z	    relatedBrands[]->{
2025-09-17T00:39:57.778897Z	      _id,
2025-09-17T00:39:57.779131Z	      name,
2025-09-17T00:39:57.779216Z	      "slug": slug.current,
2025-09-17T00:39:57.779478Z	      logo
2025-09-17T00:39:57.77971Z	    },
2025-09-17T00:39:57.779795Z	    targetMarket,
2025-09-17T00:39:57.77986Z	    complexity,
2025-09-17T00:39:57.779981Z	    publishedAt,
2025-09-17T00:39:57.780229Z	    isPublished,
2025-09-17T00:39:57.780467Z	    isFeatured,
2025-09-17T00:39:57.780722Z	    viewCount,
2025-09-17T00:39:57.780808Z	    _createdAt,
2025-09-17T00:39:57.780929Z	    _updatedAt
2025-09-17T00:39:57.781032Z	  
2025-09-17T00:39:57.781171Z	      },
2025-09-17T00:39:57.781305Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-17T00:39:57.78144Z	    }
2025-09-17T00:39:57.781538Z	  
2025-09-17T00:39:57.781636Z	Query parameters: {
2025-09-17T00:39:57.78175Z	  limit: 4,
2025-09-17T00:39:57.781844Z	  offset: 0,
2025-09-17T00:39:57.782004Z	  targetMarket: undefined,
2025-09-17T00:39:57.782081Z	  brand: 'qualcomm',
2025-09-17T00:39:57.782168Z	  featured: undefined
2025-09-17T00:39:57.782364Z	}
2025-09-17T00:39:57.782541Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-17T00:39:57.782784Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.782872Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.782992Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-17T00:39:57.783212Z	Fetching products with query: 
2025-09-17T00:39:57.783351Z	    {
2025-09-17T00:39:57.783455Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.783516Z	        
2025-09-17T00:39:57.783627Z	    _id,
2025-09-17T00:39:57.783735Z	    _type,
2025-09-17T00:39:57.783845Z	    partNumber,
2025-09-17T00:39:57.783955Z	    "slug": slug.current,
2025-09-17T00:39:57.784053Z	    title,
2025-09-17T00:39:57.784373Z	    shortDescription,
2025-09-17T00:39:57.784451Z	    image,
2025-09-17T00:39:57.784677Z	    brand->{
2025-09-17T00:39:57.784765Z	      name,
2025-09-17T00:39:57.784824Z	      "slug": slug.current,
2025-09-17T00:39:57.785054Z	      logo
2025-09-17T00:39:57.78526Z	    },
2025-09-17T00:39:57.785381Z	    category->{
2025-09-17T00:39:57.785603Z	      name,
2025-09-17T00:39:57.785694Z	      "slug": slug.current
2025-09-17T00:39:57.785754Z	    },
2025-09-17T00:39:57.785998Z	    pricing{
2025-09-17T00:39:57.786076Z	      currency,
2025-09-17T00:39:57.786138Z	      tiers[]{
2025-09-17T00:39:57.786396Z	        quantity,
2025-09-17T00:39:57.786873Z	        price,
2025-09-17T00:39:57.787076Z	        unit
2025-09-17T00:39:57.787154Z	      },
2025-09-17T00:39:57.787215Z	      moq,
2025-09-17T00:39:57.787476Z	      leadTime,
2025-09-17T00:39:57.787575Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.78778Z	      "price": tiers[0].price,
2025-09-17T00:39:57.788239Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.788384Z	    },
2025-09-17T00:39:57.788641Z	    inventory{
2025-09-17T00:39:57.788804Z	      quantity,
2025-09-17T00:39:57.788882Z	      status,
2025-09-17T00:39:57.788946Z	      warehouse,
2025-09-17T00:39:57.789037Z	      lastUpdated,
2025-09-17T00:39:57.789125Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.789247Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.789359Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.789634Z	    },
2025-09-17T00:39:57.789825Z	    isActive,
2025-09-17T00:39:57.790006Z	    isFeatured,
2025-09-17T00:39:57.790137Z	    isNew,
2025-09-17T00:39:57.790215Z	    _createdAt,
2025-09-17T00:39:57.790357Z	    _updatedAt
2025-09-17T00:39:57.790442Z	  
2025-09-17T00:39:57.790564Z	      },
2025-09-17T00:39:57.790639Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-17T00:39:57.790805Z	    }
2025-09-17T00:39:57.790888Z	  
2025-09-17T00:39:57.790993Z	Query parameters: {
2025-09-17T00:39:57.791116Z	  limit: 8,
2025-09-17T00:39:57.79119Z	  offset: 0,
2025-09-17T00:39:57.791323Z	  category: undefined,
2025-09-17T00:39:57.791398Z	  brand: 'semikron',
2025-09-17T00:39:57.791495Z	  featured: undefined
2025-09-17T00:39:57.791589Z	}
2025-09-17T00:39:57.791739Z	Fetching solutions with query: 
2025-09-17T00:39:57.791877Z	    {
2025-09-17T00:39:57.791985Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.792188Z	        
2025-09-17T00:39:57.792276Z	    _id,
2025-09-17T00:39:57.79244Z	    title,
2025-09-17T00:39:57.792519Z	    "slug": slug.current,
2025-09-17T00:39:57.792705Z	    summary,
2025-09-17T00:39:57.792812Z	    description,
2025-09-17T00:39:57.792947Z	    coverImage,
2025-09-17T00:39:57.793086Z	    primaryBrand->{
2025-09-17T00:39:57.793232Z	      _id,
2025-09-17T00:39:57.793384Z	      name,
2025-09-17T00:39:57.793495Z	      "slug": slug.current,
2025-09-17T00:39:57.793617Z	      logo
2025-09-17T00:39:57.793761Z	    },
2025-09-17T00:39:57.79384Z	    relatedBrands[]->{
2025-09-17T00:39:57.793994Z	      _id,
2025-09-17T00:39:57.794116Z	      name,
2025-09-17T00:39:57.794187Z	      "slug": slug.current,
2025-09-17T00:39:57.794292Z	      logo
2025-09-17T00:39:57.794396Z	    },
2025-09-17T00:39:57.794509Z	    targetMarket,
2025-09-17T00:39:57.794795Z	    complexity,
2025-09-17T00:39:57.794954Z	    publishedAt,
2025-09-17T00:39:57.795124Z	    isPublished,
2025-09-17T00:39:57.795245Z	    isFeatured,
2025-09-17T00:39:57.795495Z	    viewCount,
2025-09-17T00:39:57.795583Z	    _createdAt,
2025-09-17T00:39:57.795745Z	    _updatedAt
2025-09-17T00:39:57.795831Z	  
2025-09-17T00:39:57.795937Z	      },
2025-09-17T00:39:57.796105Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-17T00:39:57.79626Z	    }
2025-09-17T00:39:57.796431Z	  
2025-09-17T00:39:57.79652Z	Query parameters: {
2025-09-17T00:39:57.796658Z	  limit: 4,
2025-09-17T00:39:57.796815Z	  offset: 0,
2025-09-17T00:39:57.796917Z	  targetMarket: undefined,
2025-09-17T00:39:57.797031Z	  brand: 'semikron',
2025-09-17T00:39:57.797144Z	  featured: undefined
2025-09-17T00:39:57.797281Z	}
2025-09-17T00:39:57.797416Z	✅ [getBrandData] Found brand: Semikron
2025-09-17T00:39:57.797547Z	Products fetch result: {
2025-09-17T00:39:57.79766Z	  totalProducts: 1,
2025-09-17T00:39:57.797787Z	  fetchedProducts: 1,
2025-09-17T00:39:57.797941Z	  firstProduct: {
2025-09-17T00:39:57.798089Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-17T00:39:57.798191Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-17T00:39:57.798475Z	    _type: 'product',
2025-09-17T00:39:57.798557Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-17T00:39:57.798798Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-17T00:39:57.79889Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:57.799172Z	    image: null,
2025-09-17T00:39:57.799251Z	    inventory: {
2025-09-17T00:39:57.799507Z	      inStock: true,
2025-09-17T00:39:57.79959Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-17T00:39:57.799838Z	      quantity: 0,
2025-09-17T00:39:57.799963Z	      status: 'in_stock',
2025-09-17T00:39:57.800061Z	      warehouse: null
2025-09-17T00:39:57.800156Z	    },
2025-09-17T00:39:57.80025Z	    isActive: true,
2025-09-17T00:39:57.800378Z	    isFeatured: false,
2025-09-17T00:39:57.800518Z	    isNew: false,
2025-09-17T00:39:57.800587Z	    partNumber: 'SKKT106/16E',
2025-09-17T00:39:57.800792Z	    pricing: {
2025-09-17T00:39:57.800904Z	      currency: 'CNY',
2025-09-17T00:39:57.801119Z	      leadTime: null,
2025-09-17T00:39:57.801313Z	      moq: null,
2025-09-17T00:39:57.801466Z	      price: null,
2025-09-17T00:39:57.80155Z	      tiers: null
2025-09-17T00:39:57.801661Z	    },
2025-09-17T00:39:57.80184Z	    shortDescription: 'SKKT106/16E',
2025-09-17T00:39:57.801976Z	    slug: 'SKKT106/16E',
2025-09-17T00:39:57.802138Z	    title: 'SKKT106/16E'
2025-09-17T00:39:57.802241Z	  }
2025-09-17T00:39:57.802425Z	}
2025-09-17T00:39:57.802565Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.802643Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-17T00:39:57.802795Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-17T00:39:57.802958Z	Fetching products with query: 
2025-09-17T00:39:57.803081Z	    {
2025-09-17T00:39:57.803221Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.803398Z	        
2025-09-17T00:39:57.803516Z	    _id,
2025-09-17T00:39:57.803645Z	    _type,
2025-09-17T00:39:57.803926Z	    partNumber,
2025-09-17T00:39:57.804071Z	    "slug": slug.current,
2025-09-17T00:39:57.804251Z	    title,
2025-09-17T00:39:57.804431Z	    shortDescription,
2025-09-17T00:39:57.804615Z	    image,
2025-09-17T00:39:57.804788Z	    brand->{
2025-09-17T00:39:57.804921Z	      name,
2025-09-17T00:39:57.805039Z	      "slug": slug.current,
2025-09-17T00:39:57.805154Z	      logo
2025-09-17T00:39:57.805277Z	    },
2025-09-17T00:39:57.805387Z	    category->{
2025-09-17T00:39:57.805489Z	      name,
2025-09-17T00:39:57.805598Z	      "slug": slug.current
2025-09-17T00:39:57.805706Z	    },
2025-09-17T00:39:57.805809Z	    pricing{
2025-09-17T00:39:57.805903Z	      currency,
2025-09-17T00:39:57.806004Z	      tiers[]{
2025-09-17T00:39:57.806099Z	        quantity,
2025-09-17T00:39:57.806192Z	        price,
2025-09-17T00:39:57.806322Z	        unit
2025-09-17T00:39:57.806425Z	      },
2025-09-17T00:39:57.806526Z	      moq,
2025-09-17T00:39:57.806628Z	      leadTime,
2025-09-17T00:39:57.806721Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.806818Z	      "price": tiers[0].price,
2025-09-17T00:39:57.806911Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.807014Z	    },
2025-09-17T00:39:57.807125Z	    inventory{
2025-09-17T00:39:57.807232Z	      quantity,
2025-09-17T00:39:57.807351Z	      status,
2025-09-17T00:39:57.807452Z	      warehouse,
2025-09-17T00:39:57.807556Z	      lastUpdated,
2025-09-17T00:39:57.807659Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.807764Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.807871Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.807975Z	    },
2025-09-17T00:39:57.808079Z	    isActive,
2025-09-17T00:39:57.808176Z	    isFeatured,
2025-09-17T00:39:57.80829Z	    isNew,
2025-09-17T00:39:57.808396Z	    _createdAt,
2025-09-17T00:39:57.808496Z	    _updatedAt
2025-09-17T00:39:57.808604Z	  
2025-09-17T00:39:57.808705Z	      },
2025-09-17T00:39:57.808818Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-17T00:39:57.808937Z	    }
2025-09-17T00:39:57.809055Z	  
2025-09-17T00:39:57.809156Z	Query parameters: {
2025-09-17T00:39:57.80929Z	  limit: 8,
2025-09-17T00:39:57.809475Z	  offset: 0,
2025-09-17T00:39:57.809609Z	  category: undefined,
2025-09-17T00:39:57.809675Z	  brand: '英飞凌',
2025-09-17T00:39:57.809745Z	  featured: undefined
2025-09-17T00:39:57.809803Z	}
2025-09-17T00:39:57.809861Z	Fetching solutions with query: 
2025-09-17T00:39:57.809926Z	    {
2025-09-17T00:39:57.809996Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.810059Z	        
2025-09-17T00:39:57.810121Z	    _id,
2025-09-17T00:39:57.810182Z	    title,
2025-09-17T00:39:57.810242Z	    "slug": slug.current,
2025-09-17T00:39:57.810328Z	    summary,
2025-09-17T00:39:57.810397Z	    description,
2025-09-17T00:39:57.810457Z	    coverImage,
2025-09-17T00:39:57.810517Z	    primaryBrand->{
2025-09-17T00:39:57.810666Z	      _id,
2025-09-17T00:39:57.810759Z	      name,
2025-09-17T00:39:57.810827Z	      "slug": slug.current,
2025-09-17T00:39:57.810883Z	      logo
2025-09-17T00:39:57.810945Z	    },
2025-09-17T00:39:57.811008Z	    relatedBrands[]->{
2025-09-17T00:39:57.811064Z	      _id,
2025-09-17T00:39:57.811119Z	      name,
2025-09-17T00:39:57.811181Z	      "slug": slug.current,
2025-09-17T00:39:57.811241Z	      logo
2025-09-17T00:39:57.811327Z	    },
2025-09-17T00:39:57.811394Z	    targetMarket,
2025-09-17T00:39:57.811451Z	    complexity,
2025-09-17T00:39:57.811505Z	    publishedAt,
2025-09-17T00:39:57.811561Z	    isPublished,
2025-09-17T00:39:57.811621Z	    isFeatured,
2025-09-17T00:39:57.811675Z	    viewCount,
2025-09-17T00:39:57.81173Z	    _createdAt,
2025-09-17T00:39:57.811788Z	    _updatedAt
2025-09-17T00:39:57.811848Z	  
2025-09-17T00:39:57.811905Z	      },
2025-09-17T00:39:57.811967Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-17T00:39:57.812033Z	    }
2025-09-17T00:39:57.812101Z	  
2025-09-17T00:39:57.812157Z	Query parameters: {
2025-09-17T00:39:57.812213Z	  limit: 4,
2025-09-17T00:39:57.812283Z	  offset: 0,
2025-09-17T00:39:57.81236Z	  targetMarket: undefined,
2025-09-17T00:39:57.812428Z	  brand: '英飞凌',
2025-09-17T00:39:57.81249Z	  featured: undefined
2025-09-17T00:39:57.81256Z	}
2025-09-17T00:39:57.812623Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:57.812691Z	Fetching products with query: 
2025-09-17T00:39:57.812751Z	    {
2025-09-17T00:39:57.812807Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.812879Z	        
2025-09-17T00:39:57.812947Z	    _id,
2025-09-17T00:39:57.813011Z	    _type,
2025-09-17T00:39:57.813069Z	    partNumber,
2025-09-17T00:39:57.813122Z	    "slug": slug.current,
2025-09-17T00:39:57.813176Z	    title,
2025-09-17T00:39:57.81323Z	    shortDescription,
2025-09-17T00:39:57.813302Z	    image,
2025-09-17T00:39:57.813358Z	    brand->{
2025-09-17T00:39:57.813423Z	      name,
2025-09-17T00:39:57.813484Z	      "slug": slug.current,
2025-09-17T00:39:57.813539Z	      logo
2025-09-17T00:39:57.813598Z	    },
2025-09-17T00:39:57.813653Z	    category->{
2025-09-17T00:39:57.813707Z	      name,
2025-09-17T00:39:57.813773Z	      "slug": slug.current
2025-09-17T00:39:57.813828Z	    },
2025-09-17T00:39:57.813883Z	    pricing{
2025-09-17T00:39:57.813937Z	      currency,
2025-09-17T00:39:57.813996Z	      tiers[]{
2025-09-17T00:39:57.814057Z	        quantity,
2025-09-17T00:39:57.814112Z	        price,
2025-09-17T00:39:57.814166Z	        unit
2025-09-17T00:39:57.81422Z	      },
2025-09-17T00:39:57.814282Z	      moq,
2025-09-17T00:39:57.814341Z	      leadTime,
2025-09-17T00:39:57.814396Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.814459Z	      "price": tiers[0].price,
2025-09-17T00:39:57.814514Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.814568Z	    },
2025-09-17T00:39:57.81463Z	    inventory{
2025-09-17T00:39:57.814684Z	      quantity,
2025-09-17T00:39:57.814748Z	      status,
2025-09-17T00:39:57.815511Z	      warehouse,
2025-09-17T00:39:57.815609Z	      lastUpdated,
2025-09-17T00:39:57.815668Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.815918Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.816011Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.816162Z	    },
2025-09-17T00:39:57.816247Z	    isActive,
2025-09-17T00:39:57.816391Z	    isFeatured,
2025-09-17T00:39:57.816467Z	    isNew,
2025-09-17T00:39:57.816584Z	    _createdAt,
2025-09-17T00:39:57.816767Z	    _updatedAt
2025-09-17T00:39:57.816855Z	  
2025-09-17T00:39:57.817021Z	      },
2025-09-17T00:39:57.817169Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-17T00:39:57.817258Z	    }
2025-09-17T00:39:57.817433Z	  
2025-09-17T00:39:57.817581Z	Query parameters: {
2025-09-17T00:39:57.817675Z	  limit: 8,
2025-09-17T00:39:57.817807Z	  offset: 0,
2025-09-17T00:39:57.817906Z	  category: undefined,
2025-09-17T00:39:57.818014Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:39:57.818151Z	  featured: undefined
2025-09-17T00:39:57.818325Z	}
2025-09-17T00:39:57.818452Z	Fetching solutions with query: 
2025-09-17T00:39:57.818573Z	    {
2025-09-17T00:39:57.818731Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.818855Z	        
2025-09-17T00:39:57.818994Z	    _id,
2025-09-17T00:39:57.8191Z	    title,
2025-09-17T00:39:57.819226Z	    "slug": slug.current,
2025-09-17T00:39:57.819384Z	    summary,
2025-09-17T00:39:57.819546Z	    description,
2025-09-17T00:39:57.819629Z	    coverImage,
2025-09-17T00:39:57.819744Z	    primaryBrand->{
2025-09-17T00:39:57.819872Z	      _id,
2025-09-17T00:39:57.820169Z	      name,
2025-09-17T00:39:57.820287Z	      "slug": slug.current,
2025-09-17T00:39:57.820424Z	      logo
2025-09-17T00:39:57.820548Z	    },
2025-09-17T00:39:57.820789Z	    relatedBrands[]->{
2025-09-17T00:39:57.820873Z	      _id,
2025-09-17T00:39:57.820936Z	      name,
2025-09-17T00:39:57.821206Z	      "slug": slug.current,
2025-09-17T00:39:57.821325Z	      logo
2025-09-17T00:39:57.821584Z	    },
2025-09-17T00:39:57.821666Z	    targetMarket,
2025-09-17T00:39:57.821804Z	    complexity,
2025-09-17T00:39:57.82192Z	    publishedAt,
2025-09-17T00:39:57.821984Z	    isPublished,
2025-09-17T00:39:57.822125Z	    isFeatured,
2025-09-17T00:39:57.822191Z	    viewCount,
2025-09-17T00:39:57.822347Z	    _createdAt,
2025-09-17T00:39:57.822419Z	    _updatedAt
2025-09-17T00:39:57.822478Z	  
2025-09-17T00:39:57.822575Z	      },
2025-09-17T00:39:57.822674Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-17T00:39:57.822835Z	    }
2025-09-17T00:39:57.823035Z	  
2025-09-17T00:39:57.823261Z	Query parameters: {
2025-09-17T00:39:57.823524Z	  limit: 4,
2025-09-17T00:39:57.823621Z	  offset: 0,
2025-09-17T00:39:57.82389Z	  targetMarket: undefined,
2025-09-17T00:39:57.823972Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:39:57.824061Z	  featured: undefined
2025-09-17T00:39:57.824419Z	}
2025-09-17T00:39:57.824556Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-17T00:39:57.82466Z	Fetching products with query: 
2025-09-17T00:39:57.824803Z	    {
2025-09-17T00:39:57.824922Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.825041Z	        
2025-09-17T00:39:57.825147Z	    _id,
2025-09-17T00:39:57.825235Z	    _type,
2025-09-17T00:39:57.825352Z	    partNumber,
2025-09-17T00:39:57.825445Z	    "slug": slug.current,
2025-09-17T00:39:57.825574Z	    title,
2025-09-17T00:39:57.825694Z	    shortDescription,
2025-09-17T00:39:57.825797Z	    image,
2025-09-17T00:39:57.825904Z	    brand->{
2025-09-17T00:39:57.826011Z	      name,
2025-09-17T00:39:57.826113Z	      "slug": slug.current,
2025-09-17T00:39:57.826255Z	      logo
2025-09-17T00:39:57.826399Z	    },
2025-09-17T00:39:57.826504Z	    category->{
2025-09-17T00:39:57.826597Z	      name,
2025-09-17T00:39:57.826693Z	      "slug": slug.current
2025-09-17T00:39:57.826797Z	    },
2025-09-17T00:39:57.826895Z	    pricing{
2025-09-17T00:39:57.826999Z	      currency,
2025-09-17T00:39:57.827105Z	      tiers[]{
2025-09-17T00:39:57.827409Z	        quantity,
2025-09-17T00:39:57.827501Z	        price,
2025-09-17T00:39:57.827562Z	        unit
2025-09-17T00:39:57.827656Z	      },
2025-09-17T00:39:57.827782Z	      moq,
2025-09-17T00:39:57.827841Z	      leadTime,
2025-09-17T00:39:57.827938Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.828119Z	      "price": tiers[0].price,
2025-09-17T00:39:57.828244Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.828408Z	    },
2025-09-17T00:39:57.828481Z	    inventory{
2025-09-17T00:39:57.828619Z	      quantity,
2025-09-17T00:39:57.82873Z	      status,
2025-09-17T00:39:57.828859Z	      warehouse,
2025-09-17T00:39:57.829007Z	      lastUpdated,
2025-09-17T00:39:57.829083Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.829143Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.829239Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.829353Z	    },
2025-09-17T00:39:57.829426Z	    isActive,
2025-09-17T00:39:57.829542Z	    isFeatured,
2025-09-17T00:39:57.829625Z	    isNew,
2025-09-17T00:39:57.829725Z	    _createdAt,
2025-09-17T00:39:57.829808Z	    _updatedAt
2025-09-17T00:39:57.829865Z	  
2025-09-17T00:39:57.830031Z	      },
2025-09-17T00:39:57.830114Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-17T00:39:57.830178Z	    }
2025-09-17T00:39:57.830322Z	  
2025-09-17T00:39:57.830401Z	Query parameters: {
2025-09-17T00:39:57.830508Z	  limit: 8,
2025-09-17T00:39:57.830687Z	  offset: 0,
2025-09-17T00:39:57.830908Z	  category: undefined,
2025-09-17T00:39:57.831017Z	  brand: 'cree',
2025-09-17T00:39:57.831161Z	  featured: undefined
2025-09-17T00:39:57.831254Z	}
2025-09-17T00:39:57.831371Z	Fetching solutions with query: 
2025-09-17T00:39:57.831467Z	    {
2025-09-17T00:39:57.831632Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.831718Z	        
2025-09-17T00:39:57.831778Z	    _id,
2025-09-17T00:39:57.83209Z	    title,
2025-09-17T00:39:57.832336Z	    "slug": slug.current,
2025-09-17T00:39:57.832692Z	    summary,
2025-09-17T00:39:57.83283Z	    description,
2025-09-17T00:39:57.832945Z	    coverImage,
2025-09-17T00:39:57.833119Z	    primaryBrand->{
2025-09-17T00:39:57.833289Z	      _id,
2025-09-17T00:39:57.833412Z	      name,
2025-09-17T00:39:57.833554Z	      "slug": slug.current,
2025-09-17T00:39:57.833621Z	      logo
2025-09-17T00:39:57.833683Z	    },
2025-09-17T00:39:57.833746Z	    relatedBrands[]->{
2025-09-17T00:39:57.833806Z	      _id,
2025-09-17T00:39:57.833861Z	      name,
2025-09-17T00:39:57.833917Z	      "slug": slug.current,
2025-09-17T00:39:57.833974Z	      logo
2025-09-17T00:39:57.834223Z	    },
2025-09-17T00:39:57.834354Z	    targetMarket,
2025-09-17T00:39:57.834419Z	    complexity,
2025-09-17T00:39:57.834477Z	    publishedAt,
2025-09-17T00:39:57.834532Z	    isPublished,
2025-09-17T00:39:57.834585Z	    isFeatured,
2025-09-17T00:39:57.834638Z	    viewCount,
2025-09-17T00:39:57.834692Z	    _createdAt,
2025-09-17T00:39:57.834762Z	    _updatedAt
2025-09-17T00:39:57.834818Z	  
2025-09-17T00:39:57.834873Z	      },
2025-09-17T00:39:57.834926Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-17T00:39:57.834984Z	    }
2025-09-17T00:39:57.835037Z	  
2025-09-17T00:39:57.83509Z	Query parameters: {
2025-09-17T00:39:57.835142Z	  limit: 4,
2025-09-17T00:39:57.835196Z	  offset: 0,
2025-09-17T00:39:57.835248Z	  targetMarket: undefined,
2025-09-17T00:39:57.835315Z	  brand: 'cree',
2025-09-17T00:39:57.835376Z	  featured: undefined
2025-09-17T00:39:57.835432Z	}
2025-09-17T00:39:57.835484Z	Fetching products with query: 
2025-09-17T00:39:57.835538Z	    {
2025-09-17T00:39:57.835592Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.835645Z	        
2025-09-17T00:39:57.835696Z	    _id,
2025-09-17T00:39:57.835754Z	    _type,
2025-09-17T00:39:57.835806Z	    partNumber,
2025-09-17T00:39:57.835859Z	    "slug": slug.current,
2025-09-17T00:39:57.83591Z	    title,
2025-09-17T00:39:57.835966Z	    shortDescription,
2025-09-17T00:39:57.836018Z	    image,
2025-09-17T00:39:57.836078Z	    brand->{
2025-09-17T00:39:57.836131Z	      name,
2025-09-17T00:39:57.836221Z	      "slug": slug.current,
2025-09-17T00:39:57.836584Z	      logo
2025-09-17T00:39:57.836677Z	    },
2025-09-17T00:39:57.836739Z	    category->{
2025-09-17T00:39:57.836796Z	      name,
2025-09-17T00:39:57.836855Z	      "slug": slug.current
2025-09-17T00:39:57.836921Z	    },
2025-09-17T00:39:57.836977Z	    pricing{
2025-09-17T00:39:57.837042Z	      currency,
2025-09-17T00:39:57.837097Z	      tiers[]{
2025-09-17T00:39:57.837157Z	        quantity,
2025-09-17T00:39:57.837212Z	        price,
2025-09-17T00:39:57.837279Z	        unit
2025-09-17T00:39:57.838115Z	      },
2025-09-17T00:39:57.838297Z	      moq,
2025-09-17T00:39:57.839028Z	      leadTime,
2025-09-17T00:39:57.839253Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.839571Z	      "price": tiers[0].price,
2025-09-17T00:39:57.840425Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.840718Z	    },
2025-09-17T00:39:57.840949Z	    inventory{
2025-09-17T00:39:57.841193Z	      quantity,
2025-09-17T00:39:57.841552Z	      status,
2025-09-17T00:39:57.841744Z	      warehouse,
2025-09-17T00:39:57.842068Z	      lastUpdated,
2025-09-17T00:39:57.842139Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.842201Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.842256Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.842341Z	    },
2025-09-17T00:39:57.842429Z	    isActive,
2025-09-17T00:39:57.84253Z	    isFeatured,
2025-09-17T00:39:57.842645Z	    isNew,
2025-09-17T00:39:57.842751Z	    _createdAt,
2025-09-17T00:39:57.842952Z	    _updatedAt
2025-09-17T00:39:57.843083Z	  
2025-09-17T00:39:57.843193Z	      },
2025-09-17T00:39:57.843318Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-17T00:39:57.843437Z	    }
2025-09-17T00:39:57.843541Z	  
2025-09-17T00:39:57.843643Z	Query parameters: {
2025-09-17T00:39:57.843742Z	  limit: 8,
2025-09-17T00:39:57.843839Z	  offset: 0,
2025-09-17T00:39:57.843939Z	  category: undefined,
2025-09-17T00:39:57.844046Z	  brand: 'semikron',
2025-09-17T00:39:57.844149Z	  featured: undefined
2025-09-17T00:39:57.844245Z	}
2025-09-17T00:39:57.844368Z	Fetching solutions with query: 
2025-09-17T00:39:57.844468Z	    {
2025-09-17T00:39:57.844566Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.844662Z	        
2025-09-17T00:39:57.844758Z	    _id,
2025-09-17T00:39:57.844857Z	    title,
2025-09-17T00:39:57.844958Z	    "slug": slug.current,
2025-09-17T00:39:57.845082Z	    summary,
2025-09-17T00:39:57.845203Z	    description,
2025-09-17T00:39:57.845326Z	    coverImage,
2025-09-17T00:39:57.845434Z	    primaryBrand->{
2025-09-17T00:39:57.845541Z	      _id,
2025-09-17T00:39:57.845647Z	      name,
2025-09-17T00:39:57.845744Z	      "slug": slug.current,
2025-09-17T00:39:57.845842Z	      logo
2025-09-17T00:39:57.84596Z	    },
2025-09-17T00:39:57.846081Z	    relatedBrands[]->{
2025-09-17T00:39:57.846189Z	      _id,
2025-09-17T00:39:57.846314Z	      name,
2025-09-17T00:39:57.846426Z	      "slug": slug.current,
2025-09-17T00:39:57.846532Z	      logo
2025-09-17T00:39:57.846638Z	    },
2025-09-17T00:39:57.846758Z	    targetMarket,
2025-09-17T00:39:57.846883Z	    complexity,
2025-09-17T00:39:57.847003Z	    publishedAt,
2025-09-17T00:39:57.847106Z	    isPublished,
2025-09-17T00:39:57.847203Z	    isFeatured,
2025-09-17T00:39:57.847325Z	    viewCount,
2025-09-17T00:39:57.847431Z	    _createdAt,
2025-09-17T00:39:57.847532Z	    _updatedAt
2025-09-17T00:39:57.847631Z	  
2025-09-17T00:39:57.84774Z	      },
2025-09-17T00:39:57.847843Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-17T00:39:57.847945Z	    }
2025-09-17T00:39:57.84806Z	  
2025-09-17T00:39:57.848159Z	Query parameters: {
2025-09-17T00:39:57.848261Z	  limit: 4,
2025-09-17T00:39:57.848385Z	  offset: 0,
2025-09-17T00:39:57.84849Z	  targetMarket: undefined,
2025-09-17T00:39:57.848607Z	  brand: 'semikron',
2025-09-17T00:39:57.848717Z	  featured: undefined
2025-09-17T00:39:57.84882Z	}
2025-09-17T00:39:57.848922Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-17T00:39:57.849048Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.849166Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.849286Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-17T00:39:57.849407Z	Fetching products with query: 
2025-09-17T00:39:57.849517Z	    {
2025-09-17T00:39:57.849633Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.849746Z	        
2025-09-17T00:39:57.849852Z	    _id,
2025-09-17T00:39:57.849951Z	    _type,
2025-09-17T00:39:57.850063Z	    partNumber,
2025-09-17T00:39:57.850163Z	    "slug": slug.current,
2025-09-17T00:39:57.850265Z	    title,
2025-09-17T00:39:57.85039Z	    shortDescription,
2025-09-17T00:39:57.8505Z	    image,
2025-09-17T00:39:57.850611Z	    brand->{
2025-09-17T00:39:57.850718Z	      name,
2025-09-17T00:39:57.850824Z	      "slug": slug.current,
2025-09-17T00:39:57.850937Z	      logo
2025-09-17T00:39:57.851049Z	    },
2025-09-17T00:39:57.851156Z	    category->{
2025-09-17T00:39:57.851263Z	      name,
2025-09-17T00:39:57.851398Z	      "slug": slug.current
2025-09-17T00:39:57.851506Z	    },
2025-09-17T00:39:57.851602Z	    pricing{
2025-09-17T00:39:57.8517Z	      currency,
2025-09-17T00:39:57.851831Z	      tiers[]{
2025-09-17T00:39:57.851935Z	        quantity,
2025-09-17T00:39:57.852049Z	        price,
2025-09-17T00:39:57.852151Z	        unit
2025-09-17T00:39:57.852256Z	      },
2025-09-17T00:39:57.852391Z	      moq,
2025-09-17T00:39:57.852572Z	      leadTime,
2025-09-17T00:39:57.852688Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.855458Z	      "price": tiers[0].price,
2025-09-17T00:39:57.855624Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.855726Z	    },
2025-09-17T00:39:57.855816Z	    inventory{
2025-09-17T00:39:57.855907Z	      quantity,
2025-09-17T00:39:57.85601Z	      status,
2025-09-17T00:39:57.856105Z	      warehouse,
2025-09-17T00:39:57.856216Z	      lastUpdated,
2025-09-17T00:39:57.856358Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.856464Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.856564Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.856655Z	    },
2025-09-17T00:39:57.856743Z	    isActive,
2025-09-17T00:39:57.856833Z	    isFeatured,
2025-09-17T00:39:57.856926Z	    isNew,
2025-09-17T00:39:57.857032Z	    _createdAt,
2025-09-17T00:39:57.857131Z	    _updatedAt
2025-09-17T00:39:57.857221Z	  
2025-09-17T00:39:57.857883Z	      },
2025-09-17T00:39:57.858051Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-17T00:39:57.858187Z	    }
2025-09-17T00:39:57.858333Z	  
2025-09-17T00:39:57.858448Z	Query parameters: {
2025-09-17T00:39:57.858554Z	  limit: 8,
2025-09-17T00:39:57.858664Z	  offset: 0,
2025-09-17T00:39:57.858781Z	  category: undefined,
2025-09-17T00:39:57.858889Z	  brand: '英飞凌',
2025-09-17T00:39:57.85899Z	  featured: undefined
2025-09-17T00:39:57.859093Z	}
2025-09-17T00:39:57.859196Z	Fetching solutions with query: 
2025-09-17T00:39:57.85933Z	    {
2025-09-17T00:39:57.859443Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.859567Z	        
2025-09-17T00:39:57.859677Z	    _id,
2025-09-17T00:39:57.859798Z	    title,
2025-09-17T00:39:57.859902Z	    "slug": slug.current,
2025-09-17T00:39:57.860002Z	    summary,
2025-09-17T00:39:57.860095Z	    description,
2025-09-17T00:39:57.860192Z	    coverImage,
2025-09-17T00:39:57.860309Z	    primaryBrand->{
2025-09-17T00:39:57.860419Z	      _id,
2025-09-17T00:39:57.860526Z	      name,
2025-09-17T00:39:57.860627Z	      "slug": slug.current,
2025-09-17T00:39:57.86074Z	      logo
2025-09-17T00:39:57.860845Z	    },
2025-09-17T00:39:57.860945Z	    relatedBrands[]->{
2025-09-17T00:39:57.861048Z	      _id,
2025-09-17T00:39:57.861164Z	      name,
2025-09-17T00:39:57.861293Z	      "slug": slug.current,
2025-09-17T00:39:57.861405Z	      logo
2025-09-17T00:39:57.861511Z	    },
2025-09-17T00:39:57.861607Z	    targetMarket,
2025-09-17T00:39:57.861728Z	    complexity,
2025-09-17T00:39:57.86183Z	    publishedAt,
2025-09-17T00:39:57.861946Z	    isPublished,
2025-09-17T00:39:57.86205Z	    isFeatured,
2025-09-17T00:39:57.862168Z	    viewCount,
2025-09-17T00:39:57.862289Z	    _createdAt,
2025-09-17T00:39:57.862399Z	    _updatedAt
2025-09-17T00:39:57.862502Z	  
2025-09-17T00:39:57.862604Z	      },
2025-09-17T00:39:57.862721Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-17T00:39:57.863017Z	    }
2025-09-17T00:39:57.863149Z	  
2025-09-17T00:39:57.863296Z	Query parameters: {
2025-09-17T00:39:57.863418Z	  limit: 4,
2025-09-17T00:39:57.863542Z	  offset: 0,
2025-09-17T00:39:57.86365Z	  targetMarket: undefined,
2025-09-17T00:39:57.86379Z	  brand: '英飞凌',
2025-09-17T00:39:57.86391Z	  featured: undefined
2025-09-17T00:39:57.864026Z	}
2025-09-17T00:39:57.864133Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:57.8645Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.86464Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.864757Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:57.864861Z	Fetching products with query: 
2025-09-17T00:39:57.864956Z	    {
2025-09-17T00:39:57.865072Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.865202Z	        
2025-09-17T00:39:57.865394Z	    _id,
2025-09-17T00:39:57.865509Z	    _type,
2025-09-17T00:39:57.865606Z	    partNumber,
2025-09-17T00:39:57.865777Z	    "slug": slug.current,
2025-09-17T00:39:57.865924Z	    title,
2025-09-17T00:39:57.866402Z	    shortDescription,
2025-09-17T00:39:57.866592Z	    image,
2025-09-17T00:39:57.86671Z	    brand->{
2025-09-17T00:39:57.866803Z	      name,
2025-09-17T00:39:57.866929Z	      "slug": slug.current,
2025-09-17T00:39:57.867078Z	      logo
2025-09-17T00:39:57.867196Z	    },
2025-09-17T00:39:57.867331Z	    category->{
2025-09-17T00:39:57.867442Z	      name,
2025-09-17T00:39:57.867558Z	      "slug": slug.current
2025-09-17T00:39:57.867667Z	    },
2025-09-17T00:39:57.867788Z	    pricing{
2025-09-17T00:39:57.867895Z	      currency,
2025-09-17T00:39:57.868012Z	      tiers[]{
2025-09-17T00:39:57.868123Z	        quantity,
2025-09-17T00:39:57.868233Z	        price,
2025-09-17T00:39:57.86837Z	        unit
2025-09-17T00:39:57.86866Z	      },
2025-09-17T00:39:57.8688Z	      moq,
2025-09-17T00:39:57.868916Z	      leadTime,
2025-09-17T00:39:57.869024Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.869127Z	      "price": tiers[0].price,
2025-09-17T00:39:57.869225Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.869368Z	    },
2025-09-17T00:39:57.869859Z	    inventory{
2025-09-17T00:39:57.869989Z	      quantity,
2025-09-17T00:39:57.870101Z	      status,
2025-09-17T00:39:57.870203Z	      warehouse,
2025-09-17T00:39:57.871097Z	      lastUpdated,
2025-09-17T00:39:57.871237Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.871387Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.871508Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.871619Z	    },
2025-09-17T00:39:57.871923Z	    isActive,
2025-09-17T00:39:57.872062Z	    isFeatured,
2025-09-17T00:39:57.872183Z	    isNew,
2025-09-17T00:39:57.887492Z	    _createdAt,
2025-09-17T00:39:57.887712Z	    _updatedAt
2025-09-17T00:39:57.887841Z	  
2025-09-17T00:39:57.888152Z	      },
2025-09-17T00:39:57.88834Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-17T00:39:57.88848Z	    }
2025-09-17T00:39:57.888581Z	  
2025-09-17T00:39:57.888693Z	Query parameters: {
2025-09-17T00:39:57.888823Z	  limit: 8,
2025-09-17T00:39:57.888942Z	  offset: 0,
2025-09-17T00:39:57.889136Z	  category: undefined,
2025-09-17T00:39:57.889278Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:39:57.889381Z	  featured: undefined
2025-09-17T00:39:57.889469Z	}
2025-09-17T00:39:57.889538Z	Fetching solutions with query: 
2025-09-17T00:39:57.88965Z	    {
2025-09-17T00:39:57.889775Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.889858Z	        
2025-09-17T00:39:57.889936Z	    _id,
2025-09-17T00:39:57.890107Z	    title,
2025-09-17T00:39:57.890195Z	    "slug": slug.current,
2025-09-17T00:39:57.890305Z	    summary,
2025-09-17T00:39:57.89042Z	    description,
2025-09-17T00:39:57.890519Z	    coverImage,
2025-09-17T00:39:57.89062Z	    primaryBrand->{
2025-09-17T00:39:57.89073Z	      _id,
2025-09-17T00:39:57.890817Z	      name,
2025-09-17T00:39:57.890913Z	      "slug": slug.current,
2025-09-17T00:39:57.891015Z	      logo
2025-09-17T00:39:57.891121Z	    },
2025-09-17T00:39:57.891217Z	    relatedBrands[]->{
2025-09-17T00:39:57.891324Z	      _id,
2025-09-17T00:39:57.891433Z	      name,
2025-09-17T00:39:57.891538Z	      "slug": slug.current,
2025-09-17T00:39:57.891633Z	      logo
2025-09-17T00:39:57.891737Z	    },
2025-09-17T00:39:57.891824Z	    targetMarket,
2025-09-17T00:39:57.891928Z	    complexity,
2025-09-17T00:39:57.892022Z	    publishedAt,
2025-09-17T00:39:57.89212Z	    isPublished,
2025-09-17T00:39:57.892211Z	    isFeatured,
2025-09-17T00:39:57.892317Z	    viewCount,
2025-09-17T00:39:57.892416Z	    _createdAt,
2025-09-17T00:39:57.89254Z	    _updatedAt
2025-09-17T00:39:57.892636Z	  
2025-09-17T00:39:57.892738Z	      },
2025-09-17T00:39:57.892853Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-17T00:39:57.89297Z	    }
2025-09-17T00:39:57.893077Z	  
2025-09-17T00:39:57.893157Z	Query parameters: {
2025-09-17T00:39:57.893229Z	  limit: 4,
2025-09-17T00:39:57.893327Z	  offset: 0,
2025-09-17T00:39:57.893419Z	  targetMarket: undefined,
2025-09-17T00:39:57.89352Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:39:57.893596Z	  featured: undefined
2025-09-17T00:39:57.893731Z	}
2025-09-17T00:39:57.893798Z	✅ [getBrandData] Found brand: CREE
2025-09-17T00:39:57.893925Z	Products fetch result: {
2025-09-17T00:39:57.894037Z	  totalProducts: 4,
2025-09-17T00:39:57.894154Z	  fetchedProducts: 4,
2025-09-17T00:39:57.894323Z	  firstProduct: {
2025-09-17T00:39:57.894409Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-17T00:39:57.894467Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-17T00:39:57.894524Z	    _type: 'product',
2025-09-17T00:39:57.894582Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-17T00:39:57.894701Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-17T00:39:57.894819Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:57.894928Z	    image: null,
2025-09-17T00:39:57.895066Z	    inventory: {
2025-09-17T00:39:57.895217Z	      inStock: true,
2025-09-17T00:39:57.895385Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-17T00:39:57.895459Z	      quantity: 0,
2025-09-17T00:39:57.895647Z	      status: 'in_stock',
2025-09-17T00:39:57.89573Z	      warehouse: null
2025-09-17T00:39:57.895842Z	    },
2025-09-17T00:39:57.895963Z	    isActive: true,
2025-09-17T00:39:57.896045Z	    isFeatured: false,
2025-09-17T00:39:57.896103Z	    isNew: false,
2025-09-17T00:39:57.896189Z	    partNumber: '11111',
2025-09-17T00:39:57.896309Z	    pricing: {
2025-09-17T00:39:57.896411Z	      currency: 'CNY',
2025-09-17T00:39:57.896502Z	      leadTime: null,
2025-09-17T00:39:57.897063Z	      moq: null,
2025-09-17T00:39:57.897167Z	      price: null,
2025-09-17T00:39:57.89723Z	      tiers: null
2025-09-17T00:39:57.89737Z	    },
2025-09-17T00:39:57.897496Z	    shortDescription: '11111',
2025-09-17T00:39:57.897596Z	    slug: 'sic mosfet',
2025-09-17T00:39:57.897739Z	    title: '111111'
2025-09-17T00:39:57.897861Z	  }
2025-09-17T00:39:57.897977Z	}
2025-09-17T00:39:57.898288Z	Solutions fetch result: {
2025-09-17T00:39:57.898386Z	  totalSolutions: 6,
2025-09-17T00:39:57.898694Z	  fetchedSolutions: 4,
2025-09-17T00:39:57.898779Z	  firstSolution: {
2025-09-17T00:39:57.899022Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-17T00:39:57.899097Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-17T00:39:57.899167Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-17T00:39:57.899436Z	    complexity: 'medium',
2025-09-17T00:39:57.899512Z	    coverImage: null,
2025-09-17T00:39:57.899574Z	    description: [ [Object] ],
2025-09-17T00:39:57.899855Z	    isFeatured: false,
2025-09-17T00:39:57.899949Z	    isPublished: true,
2025-09-17T00:39:57.900026Z	    primaryBrand: {
2025-09-17T00:39:57.900298Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:57.900395Z	      logo: null,
2025-09-17T00:39:57.900643Z	      name: 'CREE',
2025-09-17T00:39:57.900722Z	      slug: 'cree'
2025-09-17T00:39:57.901007Z	    },
2025-09-17T00:39:57.901085Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-17T00:39:57.901149Z	    relatedBrands: null,
2025-09-17T00:39:57.901367Z	    slug: '11111',
2025-09-17T00:39:57.901449Z	    summary: '11111',
2025-09-17T00:39:57.901508Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:57.901563Z	    title: '11111',
2025-09-17T00:39:57.901619Z	    viewCount: 0
2025-09-17T00:39:57.901682Z	  }
2025-09-17T00:39:57.90174Z	}
2025-09-17T00:39:57.901799Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-17T00:39:57.901857Z	Fetching products with query: 
2025-09-17T00:39:57.901911Z	    {
2025-09-17T00:39:57.902046Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.902187Z	        
2025-09-17T00:39:57.902588Z	    _id,
2025-09-17T00:39:57.90276Z	    _type,
2025-09-17T00:39:57.903078Z	    partNumber,
2025-09-17T00:39:57.903357Z	    "slug": slug.current,
2025-09-17T00:39:57.903599Z	    title,
2025-09-17T00:39:57.90382Z	    shortDescription,
2025-09-17T00:39:57.904034Z	    image,
2025-09-17T00:39:57.904207Z	    brand->{
2025-09-17T00:39:57.904413Z	      name,
2025-09-17T00:39:57.904583Z	      "slug": slug.current,
2025-09-17T00:39:57.904735Z	      logo
2025-09-17T00:39:57.904912Z	    },
2025-09-17T00:39:57.905001Z	    category->{
2025-09-17T00:39:57.905096Z	      name,
2025-09-17T00:39:57.905196Z	      "slug": slug.current
2025-09-17T00:39:57.905325Z	    },
2025-09-17T00:39:57.905423Z	    pricing{
2025-09-17T00:39:57.905512Z	      currency,
2025-09-17T00:39:57.9056Z	      tiers[]{
2025-09-17T00:39:57.905683Z	        quantity,
2025-09-17T00:39:57.905765Z	        price,
2025-09-17T00:39:57.905861Z	        unit
2025-09-17T00:39:57.905954Z	      },
2025-09-17T00:39:57.906042Z	      moq,
2025-09-17T00:39:57.906124Z	      leadTime,
2025-09-17T00:39:57.906203Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.906314Z	      "price": tiers[0].price,
2025-09-17T00:39:57.906414Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.906508Z	    },
2025-09-17T00:39:57.906608Z	    inventory{
2025-09-17T00:39:57.906699Z	      quantity,
2025-09-17T00:39:57.906788Z	      status,
2025-09-17T00:39:57.906877Z	      warehouse,
2025-09-17T00:39:57.906972Z	      lastUpdated,
2025-09-17T00:39:57.907062Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.907146Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.907227Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.907325Z	    },
2025-09-17T00:39:57.907413Z	    isActive,
2025-09-17T00:39:57.907493Z	    isFeatured,
2025-09-17T00:39:57.90757Z	    isNew,
2025-09-17T00:39:57.907647Z	    _createdAt,
2025-09-17T00:39:57.907726Z	    _updatedAt
2025-09-17T00:39:57.907803Z	  
2025-09-17T00:39:57.907891Z	      },
2025-09-17T00:39:57.907988Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-17T00:39:57.90808Z	    }
2025-09-17T00:39:57.90816Z	  
2025-09-17T00:39:57.90824Z	Query parameters: {
2025-09-17T00:39:57.908355Z	  limit: 8,
2025-09-17T00:39:57.908439Z	  offset: 0,
2025-09-17T00:39:57.90852Z	  category: undefined,
2025-09-17T00:39:57.908598Z	  brand: 'cree',
2025-09-17T00:39:57.908678Z	  featured: undefined
2025-09-17T00:39:57.908758Z	}
2025-09-17T00:39:57.908836Z	Fetching solutions with query: 
2025-09-17T00:39:57.908934Z	    {
2025-09-17T00:39:57.909029Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.909124Z	        
2025-09-17T00:39:57.909212Z	    _id,
2025-09-17T00:39:57.909327Z	    title,
2025-09-17T00:39:57.909415Z	    "slug": slug.current,
2025-09-17T00:39:57.909508Z	    summary,
2025-09-17T00:39:57.909603Z	    description,
2025-09-17T00:39:57.909692Z	    coverImage,
2025-09-17T00:39:57.909791Z	    primaryBrand->{
2025-09-17T00:39:57.90986Z	      _id,
2025-09-17T00:39:57.90992Z	      name,
2025-09-17T00:39:57.91Z	      "slug": slug.current,
2025-09-17T00:39:57.910074Z	      logo
2025-09-17T00:39:57.910151Z	    },
2025-09-17T00:39:57.910227Z	    relatedBrands[]->{
2025-09-17T00:39:57.910333Z	      _id,
2025-09-17T00:39:57.910418Z	      name,
2025-09-17T00:39:57.910505Z	      "slug": slug.current,
2025-09-17T00:39:57.910587Z	      logo
2025-09-17T00:39:57.910658Z	    },
2025-09-17T00:39:57.910735Z	    targetMarket,
2025-09-17T00:39:57.910796Z	    complexity,
2025-09-17T00:39:57.91091Z	    publishedAt,
2025-09-17T00:39:57.911026Z	    isPublished,
2025-09-17T00:39:57.91112Z	    isFeatured,
2025-09-17T00:39:57.911212Z	    viewCount,
2025-09-17T00:39:57.911321Z	    _createdAt,
2025-09-17T00:39:57.911418Z	    _updatedAt
2025-09-17T00:39:57.911512Z	  
2025-09-17T00:39:57.911606Z	      },
2025-09-17T00:39:57.911717Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-17T00:39:57.911818Z	    }
2025-09-17T00:39:57.911906Z	  
2025-09-17T00:39:57.91197Z	Query parameters: {
2025-09-17T00:39:57.912027Z	  limit: 4,
2025-09-17T00:39:57.912127Z	  offset: 0,
2025-09-17T00:39:57.912227Z	  targetMarket: undefined,
2025-09-17T00:39:57.912347Z	  brand: 'cree',
2025-09-17T00:39:57.91244Z	  featured: undefined
2025-09-17T00:39:57.91254Z	}
2025-09-17T00:39:57.912637Z	✅ [getBrandData] Found brand: Semikron
2025-09-17T00:39:57.912729Z	Products fetch result: {
2025-09-17T00:39:57.912836Z	  totalProducts: 1,
2025-09-17T00:39:57.912936Z	  fetchedProducts: 1,
2025-09-17T00:39:57.913037Z	  firstProduct: {
2025-09-17T00:39:57.913141Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-17T00:39:57.913241Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-17T00:39:57.913373Z	    _type: 'product',
2025-09-17T00:39:57.913603Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-17T00:39:57.913691Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-17T00:39:57.913793Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:57.913908Z	    image: null,
2025-09-17T00:39:57.914107Z	    inventory: {
2025-09-17T00:39:57.914276Z	      inStock: true,
2025-09-17T00:39:57.914499Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-17T00:39:57.914664Z	      quantity: 0,
2025-09-17T00:39:57.914846Z	      status: 'in_stock',
2025-09-17T00:39:57.914936Z	      warehouse: null
2025-09-17T00:39:57.915001Z	    },
2025-09-17T00:39:57.915133Z	    isActive: true,
2025-09-17T00:39:57.915261Z	    isFeatured: false,
2025-09-17T00:39:57.915404Z	    isNew: false,
2025-09-17T00:39:57.915549Z	    partNumber: 'SKKT106/16E',
2025-09-17T00:39:57.915661Z	    pricing: {
2025-09-17T00:39:57.915773Z	      currency: 'CNY',
2025-09-17T00:39:57.915873Z	      leadTime: null,
2025-09-17T00:39:57.916006Z	      moq: null,
2025-09-17T00:39:57.91614Z	      price: null,
2025-09-17T00:39:57.916294Z	      tiers: null
2025-09-17T00:39:57.9164Z	    },
2025-09-17T00:39:57.916525Z	    shortDescription: 'SKKT106/16E',
2025-09-17T00:39:57.916639Z	    slug: 'SKKT106/16E',
2025-09-17T00:39:57.916742Z	    title: 'SKKT106/16E'
2025-09-17T00:39:57.916845Z	  }
2025-09-17T00:39:57.916939Z	}
2025-09-17T00:39:57.917027Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.917117Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-17T00:39:57.917203Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.91732Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.917416Z	✅ [getBrandData] Found brand: CREE
2025-09-17T00:39:57.917506Z	Products fetch result: {
2025-09-17T00:39:57.917609Z	  totalProducts: 4,
2025-09-17T00:39:57.917699Z	  fetchedProducts: 4,
2025-09-17T00:39:57.917786Z	  firstProduct: {
2025-09-17T00:39:57.917899Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-17T00:39:57.918011Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-17T00:39:57.918097Z	    _type: 'product',
2025-09-17T00:39:57.918181Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-17T00:39:57.918264Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-17T00:39:57.918377Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:57.9185Z	    image: null,
2025-09-17T00:39:57.918625Z	    inventory: {
2025-09-17T00:39:57.91872Z	      inStock: true,
2025-09-17T00:39:57.918807Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-17T00:39:57.918886Z	      quantity: 0,
2025-09-17T00:39:57.918974Z	      status: 'in_stock',
2025-09-17T00:39:57.919064Z	      warehouse: null
2025-09-17T00:39:57.919149Z	    },
2025-09-17T00:39:57.919235Z	    isActive: true,
2025-09-17T00:39:57.91934Z	    isFeatured: false,
2025-09-17T00:39:57.919436Z	    isNew: false,
2025-09-17T00:39:57.919518Z	    partNumber: '11111',
2025-09-17T00:39:57.919599Z	    pricing: {
2025-09-17T00:39:57.91968Z	      currency: 'CNY',
2025-09-17T00:39:57.919762Z	      leadTime: null,
2025-09-17T00:39:57.919843Z	      moq: null,
2025-09-17T00:39:57.919921Z	      price: null,
2025-09-17T00:39:57.920021Z	      tiers: null
2025-09-17T00:39:57.920104Z	    },
2025-09-17T00:39:57.920183Z	    shortDescription: '11111',
2025-09-17T00:39:57.920261Z	    slug: 'sic mosfet',
2025-09-17T00:39:57.920365Z	    title: '111111'
2025-09-17T00:39:57.920474Z	  }
2025-09-17T00:39:57.920646Z	}
2025-09-17T00:39:57.920859Z	Solutions fetch result: {
2025-09-17T00:39:57.920995Z	  totalSolutions: 6,
2025-09-17T00:39:57.921132Z	  fetchedSolutions: 4,
2025-09-17T00:39:57.921287Z	  firstSolution: {
2025-09-17T00:39:57.921392Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-17T00:39:57.921478Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-17T00:39:57.921567Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-17T00:39:57.921657Z	    complexity: 'medium',
2025-09-17T00:39:57.921756Z	    coverImage: null,
2025-09-17T00:39:57.921845Z	    description: [ [Object] ],
2025-09-17T00:39:57.921941Z	    isFeatured: false,
2025-09-17T00:39:57.922028Z	    isPublished: true,
2025-09-17T00:39:57.92213Z	    primaryBrand: {
2025-09-17T00:39:57.92222Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:57.92233Z	      logo: null,
2025-09-17T00:39:57.922479Z	      name: 'CREE',
2025-09-17T00:39:57.922698Z	      slug: 'cree'
2025-09-17T00:39:57.922799Z	    },
2025-09-17T00:39:57.923116Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-17T00:39:57.923225Z	    relatedBrands: null,
2025-09-17T00:39:57.923484Z	    slug: '11111',
2025-09-17T00:39:57.923603Z	    summary: '11111',
2025-09-17T00:39:57.923862Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:57.923985Z	    title: '11111',
2025-09-17T00:39:57.92411Z	    viewCount: 0
2025-09-17T00:39:57.924228Z	  }
2025-09-17T00:39:57.924341Z	}
2025-09-17T00:39:57.924442Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:57.924689Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.92481Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.924917Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-17T00:39:57.92503Z	Fetching products with query: 
2025-09-17T00:39:57.925132Z	    {
2025-09-17T00:39:57.925204Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.925282Z	        
2025-09-17T00:39:57.925377Z	    _id,
2025-09-17T00:39:57.925471Z	    _type,
2025-09-17T00:39:57.92554Z	    partNumber,
2025-09-17T00:39:57.925597Z	    "slug": slug.current,
2025-09-17T00:39:57.925666Z	    title,
2025-09-17T00:39:57.925727Z	    shortDescription,
2025-09-17T00:39:57.925791Z	    image,
2025-09-17T00:39:57.925864Z	    brand->{
2025-09-17T00:39:57.925947Z	      name,
2025-09-17T00:39:57.926025Z	      "slug": slug.current,
2025-09-17T00:39:57.926112Z	      logo
2025-09-17T00:39:57.926205Z	    },
2025-09-17T00:39:57.926321Z	    category->{
2025-09-17T00:39:57.92644Z	      name,
2025-09-17T00:39:57.926527Z	      "slug": slug.current
2025-09-17T00:39:57.926617Z	    },
2025-09-17T00:39:57.926707Z	    pricing{
2025-09-17T00:39:57.92679Z	      currency,
2025-09-17T00:39:57.926875Z	      tiers[]{
2025-09-17T00:39:57.927004Z	        quantity,
2025-09-17T00:39:57.927099Z	        price,
2025-09-17T00:39:57.927188Z	        unit
2025-09-17T00:39:57.927292Z	      },
2025-09-17T00:39:57.92738Z	      moq,
2025-09-17T00:39:57.92746Z	      leadTime,
2025-09-17T00:39:57.927549Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.927629Z	      "price": tiers[0].price,
2025-09-17T00:39:57.927709Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.927786Z	    },
2025-09-17T00:39:57.927868Z	    inventory{
2025-09-17T00:39:57.927972Z	      quantity,
2025-09-17T00:39:57.928077Z	      status,
2025-09-17T00:39:57.928167Z	      warehouse,
2025-09-17T00:39:57.928257Z	      lastUpdated,
2025-09-17T00:39:57.928379Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.928474Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.928566Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.928661Z	    },
2025-09-17T00:39:57.928754Z	    isActive,
2025-09-17T00:39:57.928847Z	    isFeatured,
2025-09-17T00:39:57.92896Z	    isNew,
2025-09-17T00:39:57.929059Z	    _createdAt,
2025-09-17T00:39:57.929171Z	    _updatedAt
2025-09-17T00:39:57.929307Z	  
2025-09-17T00:39:57.929412Z	      },
2025-09-17T00:39:57.929529Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-17T00:39:57.929672Z	    }
2025-09-17T00:39:57.929781Z	  
2025-09-17T00:39:57.929878Z	Query parameters: {
2025-09-17T00:39:57.929985Z	  limit: 8,
2025-09-17T00:39:57.930079Z	  offset: 0,
2025-09-17T00:39:57.930178Z	  category: undefined,
2025-09-17T00:39:57.930248Z	  brand: 'lem',
2025-09-17T00:39:57.930346Z	  featured: undefined
2025-09-17T00:39:57.930447Z	}
2025-09-17T00:39:57.930549Z	Fetching solutions with query: 
2025-09-17T00:39:57.930646Z	    {
2025-09-17T00:39:57.930743Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.930852Z	        
2025-09-17T00:39:57.93096Z	    _id,
2025-09-17T00:39:57.931058Z	    title,
2025-09-17T00:39:57.931172Z	    "slug": slug.current,
2025-09-17T00:39:57.931286Z	    summary,
2025-09-17T00:39:57.931401Z	    description,
2025-09-17T00:39:57.931507Z	    coverImage,
2025-09-17T00:39:57.931607Z	    primaryBrand->{
2025-09-17T00:39:57.931722Z	      _id,
2025-09-17T00:39:57.93184Z	      name,
2025-09-17T00:39:57.931948Z	      "slug": slug.current,
2025-09-17T00:39:57.932053Z	      logo
2025-09-17T00:39:57.932148Z	    },
2025-09-17T00:39:57.932235Z	    relatedBrands[]->{
2025-09-17T00:39:57.932338Z	      _id,
2025-09-17T00:39:57.932443Z	      name,
2025-09-17T00:39:57.932554Z	      "slug": slug.current,
2025-09-17T00:39:57.93265Z	      logo
2025-09-17T00:39:57.932767Z	    },
2025-09-17T00:39:57.932866Z	    targetMarket,
2025-09-17T00:39:57.932975Z	    complexity,
2025-09-17T00:39:57.933083Z	    publishedAt,
2025-09-17T00:39:57.933246Z	    isPublished,
2025-09-17T00:39:57.93337Z	    isFeatured,
2025-09-17T00:39:57.933448Z	    viewCount,
2025-09-17T00:39:57.933536Z	    _createdAt,
2025-09-17T00:39:57.933638Z	    _updatedAt
2025-09-17T00:39:57.933743Z	  
2025-09-17T00:39:57.933852Z	      },
2025-09-17T00:39:57.934093Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-17T00:39:57.934194Z	    }
2025-09-17T00:39:57.934308Z	  
2025-09-17T00:39:57.93441Z	Query parameters: {
2025-09-17T00:39:57.934517Z	  limit: 4,
2025-09-17T00:39:57.934629Z	  offset: 0,
2025-09-17T00:39:57.934722Z	  targetMarket: undefined,
2025-09-17T00:39:57.93488Z	  brand: 'lem',
2025-09-17T00:39:57.934986Z	  featured: undefined
2025-09-17T00:39:57.935092Z	}
2025-09-17T00:39:57.935212Z	✅ [getBrandData] Found brand: LEM
2025-09-17T00:39:57.935339Z	Products fetch result: {
2025-09-17T00:39:57.935447Z	  totalProducts: 3,
2025-09-17T00:39:57.935622Z	  fetchedProducts: 3,
2025-09-17T00:39:57.935701Z	  firstProduct: {
2025-09-17T00:39:57.935848Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-17T00:39:57.935988Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-17T00:39:57.936069Z	    _type: 'product',
2025-09-17T00:39:57.936128Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-17T00:39:57.936264Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-17T00:39:57.936369Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-17T00:39:57.936513Z	    image: null,
2025-09-17T00:39:57.936584Z	    inventory: {
2025-09-17T00:39:57.93669Z	      inStock: true,
2025-09-17T00:39:57.936811Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-17T00:39:57.936919Z	      quantity: 0,
2025-09-17T00:39:57.937136Z	      status: 'in_stock',
2025-09-17T00:39:57.937235Z	      warehouse: null
2025-09-17T00:39:57.93735Z	    },
2025-09-17T00:39:57.937456Z	    isActive: true,
2025-09-17T00:39:57.937553Z	    isFeatured: false,
2025-09-17T00:39:57.937646Z	    isNew: false,
2025-09-17T00:39:57.937748Z	    partNumber: 'la55-p',
2025-09-17T00:39:57.937847Z	    pricing: {
2025-09-17T00:39:57.938111Z	      currency: 'CNY',
2025-09-17T00:39:57.938197Z	      leadTime: null,
2025-09-17T00:39:57.938256Z	      moq: null,
2025-09-17T00:39:57.938396Z	      price: null,
2025-09-17T00:39:57.938552Z	      tiers: null
2025-09-17T00:39:57.938671Z	    },
2025-09-17T00:39:57.938777Z	    shortDescription: '电流传感器la55-p',
2025-09-17T00:39:57.93888Z	    slug: 'la55-p',
2025-09-17T00:39:57.938979Z	    title: '电流传感器la55-p'
2025-09-17T00:39:57.939082Z	  }
2025-09-17T00:39:57.939185Z	}
2025-09-17T00:39:57.93929Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.939393Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-17T00:39:57.939511Z	Fetching products with query: 
2025-09-17T00:39:57.939613Z	    {
2025-09-17T00:39:57.939712Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.939808Z	        
2025-09-17T00:39:57.93988Z	    _id,
2025-09-17T00:39:57.939936Z	    _type,
2025-09-17T00:39:57.939991Z	    partNumber,
2025-09-17T00:39:57.940064Z	    "slug": slug.current,
2025-09-17T00:39:57.940164Z	    title,
2025-09-17T00:39:57.94025Z	    shortDescription,
2025-09-17T00:39:57.940434Z	    image,
2025-09-17T00:39:57.940509Z	    brand->{
2025-09-17T00:39:57.940608Z	      name,
2025-09-17T00:39:57.940756Z	      "slug": slug.current,
2025-09-17T00:39:57.940892Z	      logo
2025-09-17T00:39:57.941046Z	    },
2025-09-17T00:39:57.94117Z	    category->{
2025-09-17T00:39:57.941287Z	      name,
2025-09-17T00:39:57.94139Z	      "slug": slug.current
2025-09-17T00:39:57.941501Z	    },
2025-09-17T00:39:57.941588Z	    pricing{
2025-09-17T00:39:57.941755Z	      currency,
2025-09-17T00:39:57.941886Z	      tiers[]{
2025-09-17T00:39:57.941977Z	        quantity,
2025-09-17T00:39:57.942098Z	        price,
2025-09-17T00:39:57.942199Z	        unit
2025-09-17T00:39:57.942316Z	      },
2025-09-17T00:39:57.942447Z	      moq,
2025-09-17T00:39:57.942549Z	      leadTime,
2025-09-17T00:39:57.942656Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.942759Z	      "price": tiers[0].price,
2025-09-17T00:39:57.942861Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.942954Z	    },
2025-09-17T00:39:57.943067Z	    inventory{
2025-09-17T00:39:57.943182Z	      quantity,
2025-09-17T00:39:57.943307Z	      status,
2025-09-17T00:39:57.943423Z	      warehouse,
2025-09-17T00:39:57.943533Z	      lastUpdated,
2025-09-17T00:39:57.943638Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.943755Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.943852Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.943945Z	    },
2025-09-17T00:39:57.944012Z	    isActive,
2025-09-17T00:39:57.944104Z	    isFeatured,
2025-09-17T00:39:57.9442Z	    isNew,
2025-09-17T00:39:57.944324Z	    _createdAt,
2025-09-17T00:39:57.944423Z	    _updatedAt
2025-09-17T00:39:57.94452Z	  
2025-09-17T00:39:57.944613Z	      },
2025-09-17T00:39:57.944714Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-17T00:39:57.944819Z	    }
2025-09-17T00:39:57.94492Z	  
2025-09-17T00:39:57.945012Z	Query parameters: {
2025-09-17T00:39:57.945124Z	  limit: 8,
2025-09-17T00:39:57.94522Z	  offset: 0,
2025-09-17T00:39:57.945338Z	  category: undefined,
2025-09-17T00:39:57.945443Z	  brand: 'lem',
2025-09-17T00:39:57.945516Z	  featured: undefined
2025-09-17T00:39:57.945657Z	}
2025-09-17T00:39:57.945751Z	Fetching solutions with query: 
2025-09-17T00:39:57.945814Z	    {
2025-09-17T00:39:57.945936Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.946106Z	        
2025-09-17T00:39:57.946218Z	    _id,
2025-09-17T00:39:57.946357Z	    title,
2025-09-17T00:39:57.946494Z	    "slug": slug.current,
2025-09-17T00:39:57.946592Z	    summary,
2025-09-17T00:39:57.946721Z	    description,
2025-09-17T00:39:57.94684Z	    coverImage,
2025-09-17T00:39:57.946948Z	    primaryBrand->{
2025-09-17T00:39:57.947023Z	      _id,
2025-09-17T00:39:57.947114Z	      name,
2025-09-17T00:39:57.947243Z	      "slug": slug.current,
2025-09-17T00:39:57.94742Z	      logo
2025-09-17T00:39:57.947533Z	    },
2025-09-17T00:39:57.947667Z	    relatedBrands[]->{
2025-09-17T00:39:57.947831Z	      _id,
2025-09-17T00:39:57.947948Z	      name,
2025-09-17T00:39:57.948105Z	      "slug": slug.current,
2025-09-17T00:39:57.948222Z	      logo
2025-09-17T00:39:57.948364Z	    },
2025-09-17T00:39:57.948475Z	    targetMarket,
2025-09-17T00:39:57.948625Z	    complexity,
2025-09-17T00:39:57.9487Z	    publishedAt,
2025-09-17T00:39:57.948788Z	    isPublished,
2025-09-17T00:39:57.948944Z	    isFeatured,
2025-09-17T00:39:57.949043Z	    viewCount,
2025-09-17T00:39:57.949162Z	    _createdAt,
2025-09-17T00:39:57.949317Z	    _updatedAt
2025-09-17T00:39:57.949424Z	  
2025-09-17T00:39:57.949546Z	      },
2025-09-17T00:39:57.949683Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-17T00:39:57.949807Z	    }
2025-09-17T00:39:57.949931Z	  
2025-09-17T00:39:57.950094Z	Query parameters: {
2025-09-17T00:39:57.950164Z	  limit: 4,
2025-09-17T00:39:57.95029Z	  offset: 0,
2025-09-17T00:39:57.950464Z	  targetMarket: undefined,
2025-09-17T00:39:57.950593Z	  brand: 'lem',
2025-09-17T00:39:57.950741Z	  featured: undefined
2025-09-17T00:39:57.950861Z	}
2025-09-17T00:39:57.950983Z	✅ [getBrandData] Found brand: LEM
2025-09-17T00:39:57.95109Z	Products fetch result: {
2025-09-17T00:39:57.951208Z	  totalProducts: 3,
2025-09-17T00:39:57.951353Z	  fetchedProducts: 3,
2025-09-17T00:39:57.95146Z	  firstProduct: {
2025-09-17T00:39:57.951553Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-17T00:39:57.951632Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-17T00:39:57.951903Z	    _type: 'product',
2025-09-17T00:39:57.95204Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-17T00:39:57.952145Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-17T00:39:57.952253Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-17T00:39:57.95236Z	    image: null,
2025-09-17T00:39:57.95246Z	    inventory: {
2025-09-17T00:39:57.952563Z	      inStock: true,
2025-09-17T00:39:57.952652Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-17T00:39:57.952982Z	      quantity: 0,
2025-09-17T00:39:57.953215Z	      status: 'in_stock',
2025-09-17T00:39:57.953414Z	      warehouse: null
2025-09-17T00:39:57.953576Z	    },
2025-09-17T00:39:57.953661Z	    isActive: true,
2025-09-17T00:39:57.95373Z	    isFeatured: false,
2025-09-17T00:39:57.953918Z	    isNew: false,
2025-09-17T00:39:57.953992Z	    partNumber: 'la55-p',
2025-09-17T00:39:57.954258Z	    pricing: {
2025-09-17T00:39:57.954408Z	      currency: 'CNY',
2025-09-17T00:39:57.954526Z	      leadTime: null,
2025-09-17T00:39:57.954626Z	      moq: null,
2025-09-17T00:39:57.954751Z	      price: null,
2025-09-17T00:39:57.954854Z	      tiers: null
2025-09-17T00:39:57.95495Z	    },
2025-09-17T00:39:57.955054Z	    shortDescription: '电流传感器la55-p',
2025-09-17T00:39:57.955152Z	    slug: 'la55-p',
2025-09-17T00:39:57.95525Z	    title: '电流传感器la55-p'
2025-09-17T00:39:57.955369Z	  }
2025-09-17T00:39:57.955467Z	}
2025-09-17T00:39:57.955567Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.955659Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-17T00:39:57.955766Z	Fetching products with query: 
2025-09-17T00:39:57.955893Z	    {
2025-09-17T00:39:57.955992Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.956089Z	        
2025-09-17T00:39:57.956192Z	    _id,
2025-09-17T00:39:57.956302Z	    _type,
2025-09-17T00:39:57.956399Z	    partNumber,
2025-09-17T00:39:57.956492Z	    "slug": slug.current,
2025-09-17T00:39:57.956596Z	    title,
2025-09-17T00:39:57.956695Z	    shortDescription,
2025-09-17T00:39:57.956802Z	    image,
2025-09-17T00:39:57.956906Z	    brand->{
2025-09-17T00:39:57.956997Z	      name,
2025-09-17T00:39:57.957093Z	      "slug": slug.current,
2025-09-17T00:39:57.957192Z	      logo
2025-09-17T00:39:57.957315Z	    },
2025-09-17T00:39:57.957416Z	    category->{
2025-09-17T00:39:57.957514Z	      name,
2025-09-17T00:39:57.957612Z	      "slug": slug.current
2025-09-17T00:39:57.957708Z	    },
2025-09-17T00:39:57.957816Z	    pricing{
2025-09-17T00:39:57.957953Z	      currency,
2025-09-17T00:39:57.958034Z	      tiers[]{
2025-09-17T00:39:57.958229Z	        quantity,
2025-09-17T00:39:57.958397Z	        price,
2025-09-17T00:39:57.958506Z	        unit
2025-09-17T00:39:57.95862Z	      },
2025-09-17T00:39:57.958728Z	      moq,
2025-09-17T00:39:57.958831Z	      leadTime,
2025-09-17T00:39:57.958927Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.959033Z	      "price": tiers[0].price,
2025-09-17T00:39:57.959152Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.959264Z	    },
2025-09-17T00:39:57.959397Z	    inventory{
2025-09-17T00:39:57.959508Z	      quantity,
2025-09-17T00:39:57.959626Z	      status,
2025-09-17T00:39:57.959704Z	      warehouse,
2025-09-17T00:39:57.959768Z	      lastUpdated,
2025-09-17T00:39:57.959823Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.959878Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.959932Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.959989Z	    },
2025-09-17T00:39:57.960044Z	    isActive,
2025-09-17T00:39:57.960097Z	    isFeatured,
2025-09-17T00:39:57.960155Z	    isNew,
2025-09-17T00:39:57.960218Z	    _createdAt,
2025-09-17T00:39:57.96029Z	    _updatedAt
2025-09-17T00:39:57.960364Z	  
2025-09-17T00:39:57.96042Z	      },
2025-09-17T00:39:57.960473Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-17T00:39:57.960527Z	    }
2025-09-17T00:39:57.96058Z	  
2025-09-17T00:39:57.960633Z	Query parameters: {
2025-09-17T00:39:57.960692Z	  limit: 8,
2025-09-17T00:39:57.960752Z	  offset: 0,
2025-09-17T00:39:57.960806Z	  category: undefined,
2025-09-17T00:39:57.960858Z	  brand: 'littelfuse',
2025-09-17T00:39:57.960914Z	  featured: undefined
2025-09-17T00:39:57.960967Z	}
2025-09-17T00:39:57.961025Z	Fetching solutions with query: 
2025-09-17T00:39:57.961078Z	    {
2025-09-17T00:39:57.96113Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.961184Z	        
2025-09-17T00:39:57.961239Z	    _id,
2025-09-17T00:39:57.96132Z	    title,
2025-09-17T00:39:57.961381Z	    "slug": slug.current,
2025-09-17T00:39:57.961435Z	    summary,
2025-09-17T00:39:57.961529Z	    description,
2025-09-17T00:39:57.961766Z	    coverImage,
2025-09-17T00:39:57.96189Z	    primaryBrand->{
2025-09-17T00:39:57.962006Z	      _id,
2025-09-17T00:39:57.962112Z	      name,
2025-09-17T00:39:57.962206Z	      "slug": slug.current,
2025-09-17T00:39:57.962325Z	      logo
2025-09-17T00:39:57.962424Z	    },
2025-09-17T00:39:57.962515Z	    relatedBrands[]->{
2025-09-17T00:39:57.962611Z	      _id,
2025-09-17T00:39:57.962715Z	      name,
2025-09-17T00:39:57.962845Z	      "slug": slug.current,
2025-09-17T00:39:57.962953Z	      logo
2025-09-17T00:39:57.963057Z	    },
2025-09-17T00:39:57.963157Z	    targetMarket,
2025-09-17T00:39:57.963279Z	    complexity,
2025-09-17T00:39:57.963392Z	    publishedAt,
2025-09-17T00:39:57.9635Z	    isPublished,
2025-09-17T00:39:57.963599Z	    isFeatured,
2025-09-17T00:39:57.96371Z	    viewCount,
2025-09-17T00:39:57.963812Z	    _createdAt,
2025-09-17T00:39:57.963915Z	    _updatedAt
2025-09-17T00:39:57.964004Z	  
2025-09-17T00:39:57.964109Z	      },
2025-09-17T00:39:57.964206Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-17T00:39:57.964332Z	    }
2025-09-17T00:39:57.964435Z	  
2025-09-17T00:39:57.964535Z	Query parameters: {
2025-09-17T00:39:57.964637Z	  limit: 4,
2025-09-17T00:39:57.96475Z	  offset: 0,
2025-09-17T00:39:57.964852Z	  targetMarket: undefined,
2025-09-17T00:39:57.964957Z	  brand: 'littelfuse',
2025-09-17T00:39:57.965063Z	  featured: undefined
2025-09-17T00:39:57.965158Z	}
2025-09-17T00:39:57.965291Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-17T00:39:57.965401Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.965522Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.965625Z	🔍 [getBrandData] Searching for brand with slug: littelfuse
2025-09-17T00:39:57.96575Z	Fetching products with query: 
2025-09-17T00:39:57.965854Z	    {
2025-09-17T00:39:57.965945Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.966051Z	        
2025-09-17T00:39:57.966158Z	    _id,
2025-09-17T00:39:57.966263Z	    _type,
2025-09-17T00:39:57.966378Z	    partNumber,
2025-09-17T00:39:57.966476Z	    "slug": slug.current,
2025-09-17T00:39:57.966577Z	    title,
2025-09-17T00:39:57.966672Z	    shortDescription,
2025-09-17T00:39:57.966785Z	    image,
2025-09-17T00:39:57.966873Z	    brand->{
2025-09-17T00:39:57.966979Z	      name,
2025-09-17T00:39:57.96708Z	      "slug": slug.current,
2025-09-17T00:39:57.967184Z	      logo
2025-09-17T00:39:57.967287Z	    },
2025-09-17T00:39:57.967389Z	    category->{
2025-09-17T00:39:57.967488Z	      name,
2025-09-17T00:39:57.967589Z	      "slug": slug.current
2025-09-17T00:39:57.967696Z	    },
2025-09-17T00:39:57.967799Z	    pricing{
2025-09-17T00:39:57.967897Z	      currency,
2025-09-17T00:39:57.968008Z	      tiers[]{
2025-09-17T00:39:57.968109Z	        quantity,
2025-09-17T00:39:57.968213Z	        price,
2025-09-17T00:39:57.968327Z	        unit
2025-09-17T00:39:57.968427Z	      },
2025-09-17T00:39:57.968528Z	      moq,
2025-09-17T00:39:57.968621Z	      leadTime,
2025-09-17T00:39:57.968745Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.968854Z	      "price": tiers[0].price,
2025-09-17T00:39:57.968962Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.969156Z	    },
2025-09-17T00:39:57.969349Z	    inventory{
2025-09-17T00:39:57.96955Z	      quantity,
2025-09-17T00:39:57.969729Z	      status,
2025-09-17T00:39:57.969895Z	      warehouse,
2025-09-17T00:39:57.97006Z	      lastUpdated,
2025-09-17T00:39:57.970235Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.970375Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.970482Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.970586Z	    },
2025-09-17T00:39:57.970694Z	    isActive,
2025-09-17T00:39:57.9708Z	    isFeatured,
2025-09-17T00:39:57.970913Z	    isNew,
2025-09-17T00:39:57.971012Z	    _createdAt,
2025-09-17T00:39:57.971103Z	    _updatedAt
2025-09-17T00:39:57.971195Z	  
2025-09-17T00:39:57.97131Z	      },
2025-09-17T00:39:57.971412Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "littelfuse"])
2025-09-17T00:39:57.971537Z	    }
2025-09-17T00:39:57.971643Z	  
2025-09-17T00:39:57.971749Z	Query parameters: {
2025-09-17T00:39:57.971857Z	  limit: 8,
2025-09-17T00:39:57.971969Z	  offset: 0,
2025-09-17T00:39:57.972068Z	  category: undefined,
2025-09-17T00:39:57.972172Z	  brand: 'littelfuse',
2025-09-17T00:39:57.972278Z	  featured: undefined
2025-09-17T00:39:57.972375Z	}
2025-09-17T00:39:57.972466Z	Fetching solutions with query: 
2025-09-17T00:39:57.972582Z	    {
2025-09-17T00:39:57.972705Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.972819Z	        
2025-09-17T00:39:57.972927Z	    _id,
2025-09-17T00:39:57.973027Z	    title,
2025-09-17T00:39:57.973129Z	    "slug": slug.current,
2025-09-17T00:39:57.97322Z	    summary,
2025-09-17T00:39:57.973332Z	    description,
2025-09-17T00:39:57.973429Z	    coverImage,
2025-09-17T00:39:57.973531Z	    primaryBrand->{
2025-09-17T00:39:57.973761Z	      _id,
2025-09-17T00:39:57.973885Z	      name,
2025-09-17T00:39:57.973988Z	      "slug": slug.current,
2025-09-17T00:39:57.97408Z	      logo
2025-09-17T00:39:57.974179Z	    },
2025-09-17T00:39:57.9743Z	    relatedBrands[]->{
2025-09-17T00:39:57.974418Z	      _id,
2025-09-17T00:39:57.974524Z	      name,
2025-09-17T00:39:57.974627Z	      "slug": slug.current,
2025-09-17T00:39:57.974733Z	      logo
2025-09-17T00:39:57.974837Z	    },
2025-09-17T00:39:57.974935Z	    targetMarket,
2025-09-17T00:39:57.975029Z	    complexity,
2025-09-17T00:39:57.975137Z	    publishedAt,
2025-09-17T00:39:57.975238Z	    isPublished,
2025-09-17T00:39:57.975356Z	    isFeatured,
2025-09-17T00:39:57.975462Z	    viewCount,
2025-09-17T00:39:57.97556Z	    _createdAt,
2025-09-17T00:39:57.975665Z	    _updatedAt
2025-09-17T00:39:57.975776Z	  
2025-09-17T00:39:57.975887Z	      },
2025-09-17T00:39:57.975987Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("littelfuse" in relatedBrands[]->slug.current || primaryBrand->slug.current == "littelfuse")])
2025-09-17T00:39:57.976089Z	    }
2025-09-17T00:39:57.976179Z	  
2025-09-17T00:39:57.976283Z	Query parameters: {
2025-09-17T00:39:57.976383Z	  limit: 4,
2025-09-17T00:39:57.976488Z	  offset: 0,
2025-09-17T00:39:57.97658Z	  targetMarket: undefined,
2025-09-17T00:39:57.97669Z	  brand: 'littelfuse',
2025-09-17T00:39:57.976794Z	  featured: undefined
2025-09-17T00:39:57.976903Z	}
2025-09-17T00:39:57.977012Z	✅ [getBrandData] Found brand: Littelfuse
2025-09-17T00:39:57.977119Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.977241Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.977382Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-17T00:39:57.97749Z	Fetching products with query: 
2025-09-17T00:39:57.977592Z	    {
2025-09-17T00:39:57.977702Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.977799Z	        
2025-09-17T00:39:57.977898Z	    _id,
2025-09-17T00:39:57.97799Z	    _type,
2025-09-17T00:39:57.978087Z	    partNumber,
2025-09-17T00:39:57.97818Z	    "slug": slug.current,
2025-09-17T00:39:57.978305Z	    title,
2025-09-17T00:39:57.978421Z	    shortDescription,
2025-09-17T00:39:57.978529Z	    image,
2025-09-17T00:39:57.978632Z	    brand->{
2025-09-17T00:39:57.978744Z	      name,
2025-09-17T00:39:57.978839Z	      "slug": slug.current,
2025-09-17T00:39:57.978923Z	      logo
2025-09-17T00:39:57.979014Z	    },
2025-09-17T00:39:57.979109Z	    category->{
2025-09-17T00:39:57.979198Z	      name,
2025-09-17T00:39:57.979308Z	      "slug": slug.current
2025-09-17T00:39:57.97941Z	    },
2025-09-17T00:39:57.979516Z	    pricing{
2025-09-17T00:39:57.97961Z	      currency,
2025-09-17T00:39:57.979711Z	      tiers[]{
2025-09-17T00:39:57.979809Z	        quantity,
2025-09-17T00:39:57.979906Z	        price,
2025-09-17T00:39:57.980009Z	        unit
2025-09-17T00:39:57.980126Z	      },
2025-09-17T00:39:57.980236Z	      moq,
2025-09-17T00:39:57.980348Z	      leadTime,
2025-09-17T00:39:57.980454Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.980566Z	      "price": tiers[0].price,
2025-09-17T00:39:57.980669Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.980835Z	    },
2025-09-17T00:39:57.980948Z	    inventory{
2025-09-17T00:39:57.981058Z	      quantity,
2025-09-17T00:39:57.981165Z	      status,
2025-09-17T00:39:57.981279Z	      warehouse,
2025-09-17T00:39:57.981382Z	      lastUpdated,
2025-09-17T00:39:57.981499Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.98161Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.981723Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.981832Z	    },
2025-09-17T00:39:57.981935Z	    isActive,
2025-09-17T00:39:57.982029Z	    isFeatured,
2025-09-17T00:39:57.982133Z	    isNew,
2025-09-17T00:39:57.982236Z	    _createdAt,
2025-09-17T00:39:57.982357Z	    _updatedAt
2025-09-17T00:39:57.98247Z	  
2025-09-17T00:39:57.982792Z	      },
2025-09-17T00:39:57.982925Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-17T00:39:57.983052Z	    }
2025-09-17T00:39:57.983156Z	  
2025-09-17T00:39:57.983255Z	Query parameters: {
2025-09-17T00:39:57.983386Z	  limit: 8,
2025-09-17T00:39:57.983489Z	  offset: 0,
2025-09-17T00:39:57.983596Z	  category: undefined,
2025-09-17T00:39:57.983702Z	  brand: 'mediatek',
2025-09-17T00:39:57.983796Z	  featured: undefined
2025-09-17T00:39:57.983892Z	}
2025-09-17T00:39:57.983983Z	Fetching solutions with query: 
2025-09-17T00:39:57.984086Z	    {
2025-09-17T00:39:57.984185Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.984311Z	        
2025-09-17T00:39:57.984412Z	    _id,
2025-09-17T00:39:57.984507Z	    title,
2025-09-17T00:39:57.984601Z	    "slug": slug.current,
2025-09-17T00:39:57.984707Z	    summary,
2025-09-17T00:39:57.984808Z	    description,
2025-09-17T00:39:57.984901Z	    coverImage,
2025-09-17T00:39:57.984991Z	    primaryBrand->{
2025-09-17T00:39:57.985081Z	      _id,
2025-09-17T00:39:57.985171Z	      name,
2025-09-17T00:39:57.98526Z	      "slug": slug.current,
2025-09-17T00:39:57.985371Z	      logo
2025-09-17T00:39:57.985469Z	    },
2025-09-17T00:39:57.985558Z	    relatedBrands[]->{
2025-09-17T00:39:57.985647Z	      _id,
2025-09-17T00:39:57.985746Z	      name,
2025-09-17T00:39:57.985834Z	      "slug": slug.current,
2025-09-17T00:39:57.985923Z	      logo
2025-09-17T00:39:57.986014Z	    },
2025-09-17T00:39:57.986103Z	    targetMarket,
2025-09-17T00:39:57.986201Z	    complexity,
2025-09-17T00:39:57.986314Z	    publishedAt,
2025-09-17T00:39:57.986414Z	    isPublished,
2025-09-17T00:39:57.986502Z	    isFeatured,
2025-09-17T00:39:57.986591Z	    viewCount,
2025-09-17T00:39:57.986686Z	    _createdAt,
2025-09-17T00:39:57.986781Z	    _updatedAt
2025-09-17T00:39:57.986873Z	  
2025-09-17T00:39:57.986975Z	      },
2025-09-17T00:39:57.987064Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-17T00:39:57.987158Z	    }
2025-09-17T00:39:57.987246Z	  
2025-09-17T00:39:57.987359Z	Query parameters: {
2025-09-17T00:39:57.987456Z	  limit: 4,
2025-09-17T00:39:57.987546Z	  offset: 0,
2025-09-17T00:39:57.987636Z	  targetMarket: undefined,
2025-09-17T00:39:57.98774Z	  brand: 'mediatek',
2025-09-17T00:39:57.987837Z	  featured: undefined
2025-09-17T00:39:57.987939Z	}
2025-09-17T00:39:57.988032Z	✅ [getBrandData] Found brand: MediaTek
2025-09-17T00:39:57.988122Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:57.98821Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:57.98833Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-17T00:39:57.988432Z	Fetching products with query: 
2025-09-17T00:39:57.988534Z	    {
2025-09-17T00:39:57.988621Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:57.988732Z	        
2025-09-17T00:39:57.988824Z	    _id,
2025-09-17T00:39:57.988913Z	    _type,
2025-09-17T00:39:57.989001Z	    partNumber,
2025-09-17T00:39:57.989088Z	    "slug": slug.current,
2025-09-17T00:39:57.989175Z	    title,
2025-09-17T00:39:57.989261Z	    shortDescription,
2025-09-17T00:39:57.989369Z	    image,
2025-09-17T00:39:57.98946Z	    brand->{
2025-09-17T00:39:57.989547Z	      name,
2025-09-17T00:39:57.989646Z	      "slug": slug.current,
2025-09-17T00:39:57.989747Z	      logo
2025-09-17T00:39:57.989837Z	    },
2025-09-17T00:39:57.989924Z	    category->{
2025-09-17T00:39:57.990017Z	      name,
2025-09-17T00:39:57.990115Z	      "slug": slug.current
2025-09-17T00:39:57.990213Z	    },
2025-09-17T00:39:57.990326Z	    pricing{
2025-09-17T00:39:57.990435Z	      currency,
2025-09-17T00:39:57.990528Z	      tiers[]{
2025-09-17T00:39:57.990625Z	        quantity,
2025-09-17T00:39:57.99072Z	        price,
2025-09-17T00:39:57.990807Z	        unit
2025-09-17T00:39:57.990904Z	      },
2025-09-17T00:39:57.991007Z	      moq,
2025-09-17T00:39:57.991097Z	      leadTime,
2025-09-17T00:39:57.991191Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:57.992571Z	      "price": tiers[0].price,
2025-09-17T00:39:57.992727Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:57.99283Z	    },
2025-09-17T00:39:57.992926Z	    inventory{
2025-09-17T00:39:57.993021Z	      quantity,
2025-09-17T00:39:57.993113Z	      status,
2025-09-17T00:39:57.993201Z	      warehouse,
2025-09-17T00:39:57.993317Z	      lastUpdated,
2025-09-17T00:39:57.993435Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:57.993532Z	      "inStock": status == "in_stock",
2025-09-17T00:39:57.993638Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:57.993764Z	    },
2025-09-17T00:39:57.993863Z	    isActive,
2025-09-17T00:39:57.993956Z	    isFeatured,
2025-09-17T00:39:57.994062Z	    isNew,
2025-09-17T00:39:57.994157Z	    _createdAt,
2025-09-17T00:39:57.994255Z	    _updatedAt
2025-09-17T00:39:57.994373Z	  
2025-09-17T00:39:57.994479Z	      },
2025-09-17T00:39:57.994573Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-17T00:39:57.994688Z	    }
2025-09-17T00:39:57.99479Z	  
2025-09-17T00:39:57.994893Z	Query parameters: {
2025-09-17T00:39:57.994987Z	  limit: 8,
2025-09-17T00:39:57.995086Z	  offset: 0,
2025-09-17T00:39:57.995175Z	  category: undefined,
2025-09-17T00:39:57.995299Z	  brand: 'mediatek',
2025-09-17T00:39:57.995411Z	  featured: undefined
2025-09-17T00:39:57.995529Z	}
2025-09-17T00:39:57.995622Z	Fetching solutions with query: 
2025-09-17T00:39:57.995731Z	    {
2025-09-17T00:39:57.995832Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:57.995948Z	        
2025-09-17T00:39:57.996066Z	    _id,
2025-09-17T00:39:57.996183Z	    title,
2025-09-17T00:39:57.996321Z	    "slug": slug.current,
2025-09-17T00:39:57.996442Z	    summary,
2025-09-17T00:39:57.996551Z	    description,
2025-09-17T00:39:57.996656Z	    coverImage,
2025-09-17T00:39:57.99677Z	    primaryBrand->{
2025-09-17T00:39:57.996873Z	      _id,
2025-09-17T00:39:57.996973Z	      name,
2025-09-17T00:39:57.997072Z	      "slug": slug.current,
2025-09-17T00:39:57.997168Z	      logo
2025-09-17T00:39:57.997259Z	    },
2025-09-17T00:39:57.997377Z	    relatedBrands[]->{
2025-09-17T00:39:57.997477Z	      _id,
2025-09-17T00:39:57.997572Z	      name,
2025-09-17T00:39:57.997689Z	      "slug": slug.current,
2025-09-17T00:39:57.997785Z	      logo
2025-09-17T00:39:57.997875Z	    },
2025-09-17T00:39:57.997965Z	    targetMarket,
2025-09-17T00:39:57.998066Z	    complexity,
2025-09-17T00:39:57.998158Z	    publishedAt,
2025-09-17T00:39:57.998255Z	    isPublished,
2025-09-17T00:39:57.998372Z	    isFeatured,
2025-09-17T00:39:57.998471Z	    viewCount,
2025-09-17T00:39:57.998588Z	    _createdAt,
2025-09-17T00:39:57.998694Z	    _updatedAt
2025-09-17T00:39:57.998796Z	  
2025-09-17T00:39:57.998893Z	      },
2025-09-17T00:39:57.998991Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-17T00:39:57.999099Z	    }
2025-09-17T00:39:57.999197Z	  
2025-09-17T00:39:57.999344Z	Query parameters: {
2025-09-17T00:39:57.999455Z	  limit: 4,
2025-09-17T00:39:57.999559Z	  offset: 0,
2025-09-17T00:39:57.99966Z	  targetMarket: undefined,
2025-09-17T00:39:57.999768Z	  brand: 'mediatek',
2025-09-17T00:39:57.99987Z	  featured: undefined
2025-09-17T00:39:57.999973Z	}
2025-09-17T00:39:58.000072Z	✅ [getBrandData] Found brand: MediaTek
2025-09-17T00:39:58.000177Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:58.000298Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.000407Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-17T00:39:58.000514Z	Fetching products with query: 
2025-09-17T00:39:58.000617Z	    {
2025-09-17T00:39:58.000745Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.000859Z	        
2025-09-17T00:39:58.000961Z	    _id,
2025-09-17T00:39:58.001083Z	    _type,
2025-09-17T00:39:58.001192Z	    partNumber,
2025-09-17T00:39:58.001312Z	    "slug": slug.current,
2025-09-17T00:39:58.001416Z	    title,
2025-09-17T00:39:58.001519Z	    shortDescription,
2025-09-17T00:39:58.00162Z	    image,
2025-09-17T00:39:58.001724Z	    brand->{
2025-09-17T00:39:58.001825Z	      name,
2025-09-17T00:39:58.001923Z	      "slug": slug.current,
2025-09-17T00:39:58.002015Z	      logo
2025-09-17T00:39:58.00212Z	    },
2025-09-17T00:39:58.002221Z	    category->{
2025-09-17T00:39:58.002339Z	      name,
2025-09-17T00:39:58.00244Z	      "slug": slug.current
2025-09-17T00:39:58.002544Z	    },
2025-09-17T00:39:58.002652Z	    pricing{
2025-09-17T00:39:58.002775Z	      currency,
2025-09-17T00:39:58.002882Z	      tiers[]{
2025-09-17T00:39:58.002982Z	        quantity,
2025-09-17T00:39:58.003083Z	        price,
2025-09-17T00:39:58.003183Z	        unit
2025-09-17T00:39:58.003305Z	      },
2025-09-17T00:39:58.003411Z	      moq,
2025-09-17T00:39:58.003508Z	      leadTime,
2025-09-17T00:39:58.003615Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.003717Z	      "price": tiers[0].price,
2025-09-17T00:39:58.003822Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.004049Z	    },
2025-09-17T00:39:58.00426Z	    inventory{
2025-09-17T00:39:58.004452Z	      quantity,
2025-09-17T00:39:58.004587Z	      status,
2025-09-17T00:39:58.004713Z	      warehouse,
2025-09-17T00:39:58.004828Z	      lastUpdated,
2025-09-17T00:39:58.004934Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.005042Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.005148Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.005305Z	    },
2025-09-17T00:39:58.005426Z	    isActive,
2025-09-17T00:39:58.005533Z	    isFeatured,
2025-09-17T00:39:58.005635Z	    isNew,
2025-09-17T00:39:58.005746Z	    _createdAt,
2025-09-17T00:39:58.005852Z	    _updatedAt
2025-09-17T00:39:58.005944Z	  
2025-09-17T00:39:58.006052Z	      },
2025-09-17T00:39:58.006161Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-17T00:39:58.006291Z	    }
2025-09-17T00:39:58.006418Z	  
2025-09-17T00:39:58.006522Z	Query parameters: {
2025-09-17T00:39:58.006631Z	  limit: 8,
2025-09-17T00:39:58.006794Z	  offset: 0,
2025-09-17T00:39:58.006905Z	  category: undefined,
2025-09-17T00:39:58.007009Z	  brand: '英飞凌',
2025-09-17T00:39:58.007105Z	  featured: undefined
2025-09-17T00:39:58.007199Z	}
2025-09-17T00:39:58.007309Z	Fetching solutions with query: 
2025-09-17T00:39:58.007418Z	    {
2025-09-17T00:39:58.007526Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.007665Z	        
2025-09-17T00:39:58.007777Z	    _id,
2025-09-17T00:39:58.007871Z	    title,
2025-09-17T00:39:58.007975Z	    "slug": slug.current,
2025-09-17T00:39:58.008079Z	    summary,
2025-09-17T00:39:58.008182Z	    description,
2025-09-17T00:39:58.008291Z	    coverImage,
2025-09-17T00:39:58.008397Z	    primaryBrand->{
2025-09-17T00:39:58.008489Z	      _id,
2025-09-17T00:39:58.008581Z	      name,
2025-09-17T00:39:58.008703Z	      "slug": slug.current,
2025-09-17T00:39:58.008816Z	      logo
2025-09-17T00:39:58.008925Z	    },
2025-09-17T00:39:58.009036Z	    relatedBrands[]->{
2025-09-17T00:39:58.009149Z	      _id,
2025-09-17T00:39:58.009256Z	      name,
2025-09-17T00:39:58.009374Z	      "slug": slug.current,
2025-09-17T00:39:58.009473Z	      logo
2025-09-17T00:39:58.009569Z	    },
2025-09-17T00:39:58.009685Z	    targetMarket,
2025-09-17T00:39:58.009796Z	    complexity,
2025-09-17T00:39:58.009899Z	    publishedAt,
2025-09-17T00:39:58.009992Z	    isPublished,
2025-09-17T00:39:58.010109Z	    isFeatured,
2025-09-17T00:39:58.010217Z	    viewCount,
2025-09-17T00:39:58.010339Z	    _createdAt,
2025-09-17T00:39:58.010445Z	    _updatedAt
2025-09-17T00:39:58.010538Z	  
2025-09-17T00:39:58.010647Z	      },
2025-09-17T00:39:58.010755Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-17T00:39:58.010853Z	    }
2025-09-17T00:39:58.010959Z	  
2025-09-17T00:39:58.01107Z	Query parameters: {
2025-09-17T00:39:58.011165Z	  limit: 4,
2025-09-17T00:39:58.011281Z	  offset: 0,
2025-09-17T00:39:58.0114Z	  targetMarket: undefined,
2025-09-17T00:39:58.011505Z	  brand: '英飞凌',
2025-09-17T00:39:58.011599Z	  featured: undefined
2025-09-17T00:39:58.011713Z	}
2025-09-17T00:39:58.011822Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-17T00:39:58.011927Z	Fetching products with query: 
2025-09-17T00:39:58.012024Z	    {
2025-09-17T00:39:58.012136Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.012239Z	        
2025-09-17T00:39:58.012365Z	    _id,
2025-09-17T00:39:58.012466Z	    _type,
2025-09-17T00:39:58.012577Z	    partNumber,
2025-09-17T00:39:58.012706Z	    "slug": slug.current,
2025-09-17T00:39:58.012804Z	    title,
2025-09-17T00:39:58.012901Z	    shortDescription,
2025-09-17T00:39:58.013009Z	    image,
2025-09-17T00:39:58.013106Z	    brand->{
2025-09-17T00:39:58.013203Z	      name,
2025-09-17T00:39:58.013316Z	      "slug": slug.current,
2025-09-17T00:39:58.013413Z	      logo
2025-09-17T00:39:58.013524Z	    },
2025-09-17T00:39:58.013622Z	    category->{
2025-09-17T00:39:58.013724Z	      name,
2025-09-17T00:39:58.01383Z	      "slug": slug.current
2025-09-17T00:39:58.013924Z	    },
2025-09-17T00:39:58.014013Z	    pricing{
2025-09-17T00:39:58.014099Z	      currency,
2025-09-17T00:39:58.01419Z	      tiers[]{
2025-09-17T00:39:58.014293Z	        quantity,
2025-09-17T00:39:58.014388Z	        price,
2025-09-17T00:39:58.014479Z	        unit
2025-09-17T00:39:58.014578Z	      },
2025-09-17T00:39:58.014706Z	      moq,
2025-09-17T00:39:58.014803Z	      leadTime,
2025-09-17T00:39:58.014899Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.015012Z	      "price": tiers[0].price,
2025-09-17T00:39:58.015129Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.015247Z	    },
2025-09-17T00:39:58.015367Z	    inventory{
2025-09-17T00:39:58.015468Z	      quantity,
2025-09-17T00:39:58.015566Z	      status,
2025-09-17T00:39:58.015678Z	      warehouse,
2025-09-17T00:39:58.015783Z	      lastUpdated,
2025-09-17T00:39:58.015874Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.015963Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.016053Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.016144Z	    },
2025-09-17T00:39:58.016234Z	    isActive,
2025-09-17T00:39:58.016355Z	    isFeatured,
2025-09-17T00:39:58.016452Z	    isNew,
2025-09-17T00:39:58.016557Z	    _createdAt,
2025-09-17T00:39:58.016661Z	    _updatedAt
2025-09-17T00:39:58.016763Z	  
2025-09-17T00:39:58.016853Z	      },
2025-09-17T00:39:58.016948Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-17T00:39:58.017049Z	    }
2025-09-17T00:39:58.017139Z	  
2025-09-17T00:39:58.017228Z	Query parameters: {
2025-09-17T00:39:58.017338Z	  limit: 8,
2025-09-17T00:39:58.017437Z	  offset: 0,
2025-09-17T00:39:58.017536Z	  category: undefined,
2025-09-17T00:39:58.017633Z	  brand: '英飞凌',
2025-09-17T00:39:58.017739Z	  featured: undefined
2025-09-17T00:39:58.017839Z	}
2025-09-17T00:39:58.017936Z	Fetching solutions with query: 
2025-09-17T00:39:58.018048Z	    {
2025-09-17T00:39:58.018145Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.01824Z	        
2025-09-17T00:39:58.018352Z	    _id,
2025-09-17T00:39:58.018453Z	    title,
2025-09-17T00:39:58.018545Z	    "slug": slug.current,
2025-09-17T00:39:58.018639Z	    summary,
2025-09-17T00:39:58.018745Z	    description,
2025-09-17T00:39:58.018843Z	    coverImage,
2025-09-17T00:39:58.018968Z	    primaryBrand->{
2025-09-17T00:39:58.019077Z	      _id,
2025-09-17T00:39:58.01918Z	      name,
2025-09-17T00:39:58.019303Z	      "slug": slug.current,
2025-09-17T00:39:58.019414Z	      logo
2025-09-17T00:39:58.019512Z	    },
2025-09-17T00:39:58.019606Z	    relatedBrands[]->{
2025-09-17T00:39:58.019721Z	      _id,
2025-09-17T00:39:58.019825Z	      name,
2025-09-17T00:39:58.019931Z	      "slug": slug.current,
2025-09-17T00:39:58.020034Z	      logo
2025-09-17T00:39:58.020139Z	    },
2025-09-17T00:39:58.020246Z	    targetMarket,
2025-09-17T00:39:58.020382Z	    complexity,
2025-09-17T00:39:58.020487Z	    publishedAt,
2025-09-17T00:39:58.020591Z	    isPublished,
2025-09-17T00:39:58.020704Z	    isFeatured,
2025-09-17T00:39:58.020806Z	    viewCount,
2025-09-17T00:39:58.020913Z	    _createdAt,
2025-09-17T00:39:58.021014Z	    _updatedAt
2025-09-17T00:39:58.021112Z	  
2025-09-17T00:39:58.021222Z	      },
2025-09-17T00:39:58.021351Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-17T00:39:58.021462Z	    }
2025-09-17T00:39:58.021575Z	  
2025-09-17T00:39:58.021687Z	Query parameters: {
2025-09-17T00:39:58.021796Z	  limit: 4,
2025-09-17T00:39:58.021901Z	  offset: 0,
2025-09-17T00:39:58.022006Z	  targetMarket: undefined,
2025-09-17T00:39:58.022111Z	  brand: '英飞凌',
2025-09-17T00:39:58.022212Z	  featured: undefined
2025-09-17T00:39:58.022325Z	}
2025-09-17T00:39:58.022432Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-17T00:39:58.02253Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-17T00:39:58.022663Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.022796Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.022901Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:58.02302Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:58.023129Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-17T00:39:58.023229Z	Fetching products with query: 
2025-09-17T00:39:58.023358Z	    {
2025-09-17T00:39:58.023472Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.023575Z	        
2025-09-17T00:39:58.023686Z	    _id,
2025-09-17T00:39:58.023786Z	    _type,
2025-09-17T00:39:58.023887Z	    partNumber,
2025-09-17T00:39:58.023981Z	    "slug": slug.current,
2025-09-17T00:39:58.024082Z	    title,
2025-09-17T00:39:58.024189Z	    shortDescription,
2025-09-17T00:39:58.02431Z	    image,
2025-09-17T00:39:58.024414Z	    brand->{
2025-09-17T00:39:58.024519Z	      name,
2025-09-17T00:39:58.024637Z	      "slug": slug.current,
2025-09-17T00:39:58.024757Z	      logo
2025-09-17T00:39:58.024852Z	    },
2025-09-17T00:39:58.024953Z	    category->{
2025-09-17T00:39:58.025059Z	      name,
2025-09-17T00:39:58.025168Z	      "slug": slug.current
2025-09-17T00:39:58.025286Z	    },
2025-09-17T00:39:58.025391Z	    pricing{
2025-09-17T00:39:58.025499Z	      currency,
2025-09-17T00:39:58.025596Z	      tiers[]{
2025-09-17T00:39:58.025704Z	        quantity,
2025-09-17T00:39:58.025796Z	        price,
2025-09-17T00:39:58.025907Z	        unit
2025-09-17T00:39:58.026016Z	      },
2025-09-17T00:39:58.026118Z	      moq,
2025-09-17T00:39:58.026218Z	      leadTime,
2025-09-17T00:39:58.026333Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.026437Z	      "price": tiers[0].price,
2025-09-17T00:39:58.026544Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.026645Z	    },
2025-09-17T00:39:58.02678Z	    inventory{
2025-09-17T00:39:58.026902Z	      quantity,
2025-09-17T00:39:58.027011Z	      status,
2025-09-17T00:39:58.027115Z	      warehouse,
2025-09-17T00:39:58.027215Z	      lastUpdated,
2025-09-17T00:39:58.027341Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.02745Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.027566Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.027697Z	    },
2025-09-17T00:39:58.027804Z	    isActive,
2025-09-17T00:39:58.027908Z	    isFeatured,
2025-09-17T00:39:58.028017Z	    isNew,
2025-09-17T00:39:58.028116Z	    _createdAt,
2025-09-17T00:39:58.02821Z	    _updatedAt
2025-09-17T00:39:58.02833Z	  
2025-09-17T00:39:58.028439Z	      },
2025-09-17T00:39:58.028549Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-17T00:39:58.028661Z	    }
2025-09-17T00:39:58.028766Z	  
2025-09-17T00:39:58.028865Z	Query parameters: {
2025-09-17T00:39:58.028967Z	  limit: 8,
2025-09-17T00:39:58.029061Z	  offset: 0,
2025-09-17T00:39:58.029152Z	  category: undefined,
2025-09-17T00:39:58.029253Z	  brand: 'pi',
2025-09-17T00:39:58.029368Z	  featured: undefined
2025-09-17T00:39:58.029462Z	}
2025-09-17T00:39:58.029555Z	Fetching solutions with query: 
2025-09-17T00:39:58.029667Z	    {
2025-09-17T00:39:58.029772Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.029876Z	        
2025-09-17T00:39:58.029973Z	    _id,
2025-09-17T00:39:58.030074Z	    title,
2025-09-17T00:39:58.030173Z	    "slug": slug.current,
2025-09-17T00:39:58.030279Z	    summary,
2025-09-17T00:39:58.030399Z	    description,
2025-09-17T00:39:58.030499Z	    coverImage,
2025-09-17T00:39:58.030621Z	    primaryBrand->{
2025-09-17T00:39:58.030747Z	      _id,
2025-09-17T00:39:58.030856Z	      name,
2025-09-17T00:39:58.030955Z	      "slug": slug.current,
2025-09-17T00:39:58.031072Z	      logo
2025-09-17T00:39:58.031171Z	    },
2025-09-17T00:39:58.031287Z	    relatedBrands[]->{
2025-09-17T00:39:58.031403Z	      _id,
2025-09-17T00:39:58.031526Z	      name,
2025-09-17T00:39:58.031631Z	      "slug": slug.current,
2025-09-17T00:39:58.031748Z	      logo
2025-09-17T00:39:58.031841Z	    },
2025-09-17T00:39:58.031932Z	    targetMarket,
2025-09-17T00:39:58.032036Z	    complexity,
2025-09-17T00:39:58.032134Z	    publishedAt,
2025-09-17T00:39:58.032243Z	    isPublished,
2025-09-17T00:39:58.032371Z	    isFeatured,
2025-09-17T00:39:58.032466Z	    viewCount,
2025-09-17T00:39:58.032576Z	    _createdAt,
2025-09-17T00:39:58.032695Z	    _updatedAt
2025-09-17T00:39:58.032796Z	  
2025-09-17T00:39:58.032904Z	      },
2025-09-17T00:39:58.033011Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-17T00:39:58.033116Z	    }
2025-09-17T00:39:58.033216Z	  
2025-09-17T00:39:58.033325Z	Query parameters: {
2025-09-17T00:39:58.033428Z	  limit: 4,
2025-09-17T00:39:58.033531Z	  offset: 0,
2025-09-17T00:39:58.033632Z	  targetMarket: undefined,
2025-09-17T00:39:58.033742Z	  brand: 'pi',
2025-09-17T00:39:58.033845Z	  featured: undefined
2025-09-17T00:39:58.033952Z	}
2025-09-17T00:39:58.034055Z	✅ [getBrandData] Found brand: PI
2025-09-17T00:39:58.034164Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:58.034261Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.03441Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-17T00:39:58.034519Z	Fetching products with query: 
2025-09-17T00:39:58.034612Z	    {
2025-09-17T00:39:58.034723Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.034842Z	        
2025-09-17T00:39:58.034946Z	    _id,
2025-09-17T00:39:58.035055Z	    _type,
2025-09-17T00:39:58.035183Z	    partNumber,
2025-09-17T00:39:58.035312Z	    "slug": slug.current,
2025-09-17T00:39:58.035416Z	    title,
2025-09-17T00:39:58.035511Z	    shortDescription,
2025-09-17T00:39:58.035606Z	    image,
2025-09-17T00:39:58.03582Z	    brand->{
2025-09-17T00:39:58.036056Z	      name,
2025-09-17T00:39:58.036288Z	      "slug": slug.current,
2025-09-17T00:39:58.036511Z	      logo
2025-09-17T00:39:58.036724Z	    },
2025-09-17T00:39:58.036928Z	    category->{
2025-09-17T00:39:58.037117Z	      name,
2025-09-17T00:39:58.037327Z	      "slug": slug.current
2025-09-17T00:39:58.03753Z	    },
2025-09-17T00:39:58.037733Z	    pricing{
2025-09-17T00:39:58.037941Z	      currency,
2025-09-17T00:39:58.038146Z	      tiers[]{
2025-09-17T00:39:58.038381Z	        quantity,
2025-09-17T00:39:58.038624Z	        price,
2025-09-17T00:39:58.038826Z	        unit
2025-09-17T00:39:58.038955Z	      },
2025-09-17T00:39:58.039068Z	      moq,
2025-09-17T00:39:58.039175Z	      leadTime,
2025-09-17T00:39:58.039301Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.039399Z	      "price": tiers[0].price,
2025-09-17T00:39:58.039513Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.039625Z	    },
2025-09-17T00:39:58.03974Z	    inventory{
2025-09-17T00:39:58.039845Z	      quantity,
2025-09-17T00:39:58.039956Z	      status,
2025-09-17T00:39:58.040065Z	      warehouse,
2025-09-17T00:39:58.040164Z	      lastUpdated,
2025-09-17T00:39:58.040258Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.040371Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.040469Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.040584Z	    },
2025-09-17T00:39:58.040698Z	    isActive,
2025-09-17T00:39:58.040795Z	    isFeatured,
2025-09-17T00:39:58.040901Z	    isNew,
2025-09-17T00:39:58.041009Z	    _createdAt,
2025-09-17T00:39:58.041131Z	    _updatedAt
2025-09-17T00:39:58.041231Z	  
2025-09-17T00:39:58.041355Z	      },
2025-09-17T00:39:58.041467Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-17T00:39:58.041576Z	    }
2025-09-17T00:39:58.041698Z	  
2025-09-17T00:39:58.041802Z	Query parameters: {
2025-09-17T00:39:58.041901Z	  limit: 8,
2025-09-17T00:39:58.042014Z	  offset: 0,
2025-09-17T00:39:58.042114Z	  category: undefined,
2025-09-17T00:39:58.042223Z	  brand: 'pi',
2025-09-17T00:39:58.042344Z	  featured: undefined
2025-09-17T00:39:58.042453Z	}
2025-09-17T00:39:58.042555Z	Fetching solutions with query: 
2025-09-17T00:39:58.042664Z	    {
2025-09-17T00:39:58.042769Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.042867Z	        
2025-09-17T00:39:58.042959Z	    _id,
2025-09-17T00:39:58.043064Z	    title,
2025-09-17T00:39:58.043162Z	    "slug": slug.current,
2025-09-17T00:39:58.04326Z	    summary,
2025-09-17T00:39:58.043375Z	    description,
2025-09-17T00:39:58.043466Z	    coverImage,
2025-09-17T00:39:58.043568Z	    primaryBrand->{
2025-09-17T00:39:58.043691Z	      _id,
2025-09-17T00:39:58.043798Z	      name,
2025-09-17T00:39:58.043891Z	      "slug": slug.current,
2025-09-17T00:39:58.043997Z	      logo
2025-09-17T00:39:58.044098Z	    },
2025-09-17T00:39:58.044212Z	    relatedBrands[]->{
2025-09-17T00:39:58.044328Z	      _id,
2025-09-17T00:39:58.044432Z	      name,
2025-09-17T00:39:58.044534Z	      "slug": slug.current,
2025-09-17T00:39:58.044672Z	      logo
2025-09-17T00:39:58.044781Z	    },
2025-09-17T00:39:58.044875Z	    targetMarket,
2025-09-17T00:39:58.04498Z	    complexity,
2025-09-17T00:39:58.045088Z	    publishedAt,
2025-09-17T00:39:58.045191Z	    isPublished,
2025-09-17T00:39:58.045321Z	    isFeatured,
2025-09-17T00:39:58.045423Z	    viewCount,
2025-09-17T00:39:58.045523Z	    _createdAt,
2025-09-17T00:39:58.045624Z	    _updatedAt
2025-09-17T00:39:58.045737Z	  
2025-09-17T00:39:58.045837Z	      },
2025-09-17T00:39:58.045933Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-17T00:39:58.046047Z	    }
2025-09-17T00:39:58.04615Z	  
2025-09-17T00:39:58.046245Z	Query parameters: {
2025-09-17T00:39:58.046367Z	  limit: 4,
2025-09-17T00:39:58.046474Z	  offset: 0,
2025-09-17T00:39:58.046578Z	  targetMarket: undefined,
2025-09-17T00:39:58.046692Z	  brand: 'pi',
2025-09-17T00:39:58.04679Z	  featured: undefined
2025-09-17T00:39:58.046895Z	}
2025-09-17T00:39:58.047001Z	✅ [getBrandData] Found brand: PI
2025-09-17T00:39:58.047114Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:58.04722Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.047346Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-17T00:39:58.047472Z	Fetching products with query: 
2025-09-17T00:39:58.047576Z	    {
2025-09-17T00:39:58.047687Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.047791Z	        
2025-09-17T00:39:58.047888Z	    _id,
2025-09-17T00:39:58.047987Z	    _type,
2025-09-17T00:39:58.04808Z	    partNumber,
2025-09-17T00:39:58.048172Z	    "slug": slug.current,
2025-09-17T00:39:58.048288Z	    title,
2025-09-17T00:39:58.048404Z	    shortDescription,
2025-09-17T00:39:58.048505Z	    image,
2025-09-17T00:39:58.048608Z	    brand->{
2025-09-17T00:39:58.048718Z	      name,
2025-09-17T00:39:58.048824Z	      "slug": slug.current,
2025-09-17T00:39:58.048927Z	      logo
2025-09-17T00:39:58.049028Z	    },
2025-09-17T00:39:58.049131Z	    category->{
2025-09-17T00:39:58.049228Z	      name,
2025-09-17T00:39:58.04934Z	      "slug": slug.current
2025-09-17T00:39:58.049446Z	    },
2025-09-17T00:39:58.049594Z	    pricing{
2025-09-17T00:39:58.04972Z	      currency,
2025-09-17T00:39:58.049831Z	      tiers[]{
2025-09-17T00:39:58.049933Z	        quantity,
2025-09-17T00:39:58.050035Z	        price,
2025-09-17T00:39:58.050146Z	        unit
2025-09-17T00:39:58.050262Z	      },
2025-09-17T00:39:58.050395Z	      moq,
2025-09-17T00:39:58.050496Z	      leadTime,
2025-09-17T00:39:58.05059Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.050705Z	      "price": tiers[0].price,
2025-09-17T00:39:58.05081Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.050923Z	    },
2025-09-17T00:39:58.051024Z	    inventory{
2025-09-17T00:39:58.051118Z	      quantity,
2025-09-17T00:39:58.051218Z	      status,
2025-09-17T00:39:58.051325Z	      warehouse,
2025-09-17T00:39:58.05144Z	      lastUpdated,
2025-09-17T00:39:58.05155Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.051661Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.051769Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.05187Z	    },
2025-09-17T00:39:58.051976Z	    isActive,
2025-09-17T00:39:58.052086Z	    isFeatured,
2025-09-17T00:39:58.052176Z	    isNew,
2025-09-17T00:39:58.052265Z	    _createdAt,
2025-09-17T00:39:58.052387Z	    _updatedAt
2025-09-17T00:39:58.052488Z	  
2025-09-17T00:39:58.052613Z	      },
2025-09-17T00:39:58.052726Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-17T00:39:58.05283Z	    }
2025-09-17T00:39:58.052919Z	  
2025-09-17T00:39:58.053032Z	Query parameters: {
2025-09-17T00:39:58.053134Z	  limit: 8,
2025-09-17T00:39:58.053229Z	  offset: 0,
2025-09-17T00:39:58.053351Z	  category: undefined,
2025-09-17T00:39:58.053456Z	  brand: 'ixys',
2025-09-17T00:39:58.053563Z	  featured: undefined
2025-09-17T00:39:58.053671Z	}
2025-09-17T00:39:58.053771Z	Fetching solutions with query: 
2025-09-17T00:39:58.053862Z	    {
2025-09-17T00:39:58.053956Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.054058Z	        
2025-09-17T00:39:58.054156Z	    _id,
2025-09-17T00:39:58.054248Z	    title,
2025-09-17T00:39:58.054376Z	    "slug": slug.current,
2025-09-17T00:39:58.054489Z	    summary,
2025-09-17T00:39:58.054588Z	    description,
2025-09-17T00:39:58.054703Z	    coverImage,
2025-09-17T00:39:58.054802Z	    primaryBrand->{
2025-09-17T00:39:58.054894Z	      _id,
2025-09-17T00:39:58.054996Z	      name,
2025-09-17T00:39:58.0551Z	      "slug": slug.current,
2025-09-17T00:39:58.055207Z	      logo
2025-09-17T00:39:58.055324Z	    },
2025-09-17T00:39:58.055427Z	    relatedBrands[]->{
2025-09-17T00:39:58.055544Z	      _id,
2025-09-17T00:39:58.055644Z	      name,
2025-09-17T00:39:58.055764Z	      "slug": slug.current,
2025-09-17T00:39:58.05591Z	      logo
2025-09-17T00:39:58.05605Z	    },
2025-09-17T00:39:58.056148Z	    targetMarket,
2025-09-17T00:39:58.056346Z	    complexity,
2025-09-17T00:39:58.056467Z	    publishedAt,
2025-09-17T00:39:58.056551Z	    isPublished,
2025-09-17T00:39:58.056612Z	    isFeatured,
2025-09-17T00:39:58.056769Z	    viewCount,
2025-09-17T00:39:58.056892Z	    _createdAt,
2025-09-17T00:39:58.057099Z	    _updatedAt
2025-09-17T00:39:58.057211Z	  
2025-09-17T00:39:58.057344Z	      },
2025-09-17T00:39:58.057446Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-17T00:39:58.05755Z	    }
2025-09-17T00:39:58.057717Z	  
2025-09-17T00:39:58.057852Z	Query parameters: {
2025-09-17T00:39:58.057964Z	  limit: 4,
2025-09-17T00:39:58.058072Z	  offset: 0,
2025-09-17T00:39:58.058172Z	  targetMarket: undefined,
2025-09-17T00:39:58.0583Z	  brand: 'ixys',
2025-09-17T00:39:58.058406Z	  featured: undefined
2025-09-17T00:39:58.058501Z	}
2025-09-17T00:39:58.058595Z	✅ [getBrandData] Found brand: IXYS
2025-09-17T00:39:58.058692Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:58.058793Z	Solutions fetch result: {
2025-09-17T00:39:58.058887Z	  totalSolutions: 1,
2025-09-17T00:39:58.05898Z	  fetchedSolutions: 1,
2025-09-17T00:39:58.059088Z	  firstSolution: {
2025-09-17T00:39:58.059185Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-17T00:39:58.059296Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-17T00:39:58.059405Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-17T00:39:58.059499Z	    complexity: 'medium',
2025-09-17T00:39:58.059603Z	    coverImage: null,
2025-09-17T00:39:58.059695Z	    description: [ [Object] ],
2025-09-17T00:39:58.059786Z	    isFeatured: false,
2025-09-17T00:39:58.059881Z	    isPublished: true,
2025-09-17T00:39:58.059981Z	    primaryBrand: {
2025-09-17T00:39:58.060102Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:58.060204Z	      logo: null,
2025-09-17T00:39:58.060326Z	      name: 'IXYS',
2025-09-17T00:39:58.060439Z	      slug: 'ixys'
2025-09-17T00:39:58.060544Z	    },
2025-09-17T00:39:58.060651Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-17T00:39:58.060753Z	    relatedBrands: null,
2025-09-17T00:39:58.06086Z	    slug: '99999',
2025-09-17T00:39:58.060981Z	    summary: '99999',
2025-09-17T00:39:58.06113Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:58.061243Z	    title: '99999',
2025-09-17T00:39:58.06135Z	    viewCount: 0
2025-09-17T00:39:58.061412Z	  }
2025-09-17T00:39:58.061468Z	}
2025-09-17T00:39:58.061526Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-17T00:39:58.061582Z	Fetching products with query: 
2025-09-17T00:39:58.061636Z	    {
2025-09-17T00:39:58.061699Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.061776Z	        
2025-09-17T00:39:58.061834Z	    _id,
2025-09-17T00:39:58.061901Z	    _type,
2025-09-17T00:39:58.06196Z	    partNumber,
2025-09-17T00:39:58.062051Z	    "slug": slug.current,
2025-09-17T00:39:58.062204Z	    title,
2025-09-17T00:39:58.06234Z	    shortDescription,
2025-09-17T00:39:58.062449Z	    image,
2025-09-17T00:39:58.062556Z	    brand->{
2025-09-17T00:39:58.062681Z	      name,
2025-09-17T00:39:58.062814Z	      "slug": slug.current,
2025-09-17T00:39:58.062915Z	      logo
2025-09-17T00:39:58.063024Z	    },
2025-09-17T00:39:58.063105Z	    category->{
2025-09-17T00:39:58.063166Z	      name,
2025-09-17T00:39:58.063228Z	      "slug": slug.current
2025-09-17T00:39:58.063307Z	    },
2025-09-17T00:39:58.063418Z	    pricing{
2025-09-17T00:39:58.063551Z	      currency,
2025-09-17T00:39:58.063675Z	      tiers[]{
2025-09-17T00:39:58.064649Z	        quantity,
2025-09-17T00:39:58.064818Z	        price,
2025-09-17T00:39:58.064935Z	        unit
2025-09-17T00:39:58.065052Z	      },
2025-09-17T00:39:58.065153Z	      moq,
2025-09-17T00:39:58.065252Z	      leadTime,
2025-09-17T00:39:58.065392Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.065501Z	      "price": tiers[0].price,
2025-09-17T00:39:58.065604Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.065709Z	    },
2025-09-17T00:39:58.065826Z	    inventory{
2025-09-17T00:39:58.065939Z	      quantity,
2025-09-17T00:39:58.066051Z	      status,
2025-09-17T00:39:58.066163Z	      warehouse,
2025-09-17T00:39:58.066288Z	      lastUpdated,
2025-09-17T00:39:58.066471Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.066582Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.066682Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.06679Z	    },
2025-09-17T00:39:58.066898Z	    isActive,
2025-09-17T00:39:58.067001Z	    isFeatured,
2025-09-17T00:39:58.067107Z	    isNew,
2025-09-17T00:39:58.067215Z	    _createdAt,
2025-09-17T00:39:58.067345Z	    _updatedAt
2025-09-17T00:39:58.067452Z	  
2025-09-17T00:39:58.067551Z	      },
2025-09-17T00:39:58.067679Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-17T00:39:58.06781Z	    }
2025-09-17T00:39:58.067929Z	  
2025-09-17T00:39:58.06805Z	Query parameters: {
2025-09-17T00:39:58.068167Z	  limit: 8,
2025-09-17T00:39:58.068296Z	  offset: 0,
2025-09-17T00:39:58.068413Z	  category: undefined,
2025-09-17T00:39:58.068519Z	  brand: 'ixys',
2025-09-17T00:39:58.068626Z	  featured: undefined
2025-09-17T00:39:58.068727Z	}
2025-09-17T00:39:58.068843Z	Fetching solutions with query: 
2025-09-17T00:39:58.06895Z	    {
2025-09-17T00:39:58.069073Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.069186Z	        
2025-09-17T00:39:58.069309Z	    _id,
2025-09-17T00:39:58.069408Z	    title,
2025-09-17T00:39:58.069506Z	    "slug": slug.current,
2025-09-17T00:39:58.069605Z	    summary,
2025-09-17T00:39:58.069698Z	    description,
2025-09-17T00:39:58.069814Z	    coverImage,
2025-09-17T00:39:58.069917Z	    primaryBrand->{
2025-09-17T00:39:58.070015Z	      _id,
2025-09-17T00:39:58.070117Z	      name,
2025-09-17T00:39:58.070226Z	      "slug": slug.current,
2025-09-17T00:39:58.070398Z	      logo
2025-09-17T00:39:58.070512Z	    },
2025-09-17T00:39:58.07062Z	    relatedBrands[]->{
2025-09-17T00:39:58.070718Z	      _id,
2025-09-17T00:39:58.070831Z	      name,
2025-09-17T00:39:58.070944Z	      "slug": slug.current,
2025-09-17T00:39:58.071051Z	      logo
2025-09-17T00:39:58.071157Z	    },
2025-09-17T00:39:58.071255Z	    targetMarket,
2025-09-17T00:39:58.071395Z	    complexity,
2025-09-17T00:39:58.071512Z	    publishedAt,
2025-09-17T00:39:58.071628Z	    isPublished,
2025-09-17T00:39:58.071741Z	    isFeatured,
2025-09-17T00:39:58.071866Z	    viewCount,
2025-09-17T00:39:58.071972Z	    _createdAt,
2025-09-17T00:39:58.072071Z	    _updatedAt
2025-09-17T00:39:58.072175Z	  
2025-09-17T00:39:58.072289Z	      },
2025-09-17T00:39:58.072402Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-17T00:39:58.072511Z	    }
2025-09-17T00:39:58.072635Z	  
2025-09-17T00:39:58.072771Z	Query parameters: {
2025-09-17T00:39:58.072895Z	  limit: 4,
2025-09-17T00:39:58.073052Z	  offset: 0,
2025-09-17T00:39:58.073174Z	  targetMarket: undefined,
2025-09-17T00:39:58.073307Z	  brand: 'ixys',
2025-09-17T00:39:58.073418Z	  featured: undefined
2025-09-17T00:39:58.073521Z	}
2025-09-17T00:39:58.073621Z	✅ [getBrandData] Found brand: IXYS
2025-09-17T00:39:58.073728Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:58.073863Z	Solutions fetch result: {
2025-09-17T00:39:58.07398Z	  totalSolutions: 1,
2025-09-17T00:39:58.074086Z	  fetchedSolutions: 1,
2025-09-17T00:39:58.074188Z	  firstSolution: {
2025-09-17T00:39:58.074331Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-17T00:39:58.074447Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-17T00:39:58.074558Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-17T00:39:58.074666Z	    complexity: 'medium',
2025-09-17T00:39:58.074781Z	    coverImage: null,
2025-09-17T00:39:58.07489Z	    description: [ [Object] ],
2025-09-17T00:39:58.074999Z	    isFeatured: false,
2025-09-17T00:39:58.075118Z	    isPublished: true,
2025-09-17T00:39:58.075226Z	    primaryBrand: {
2025-09-17T00:39:58.075375Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:58.075501Z	      logo: null,
2025-09-17T00:39:58.075604Z	      name: 'IXYS',
2025-09-17T00:39:58.075702Z	      slug: 'ixys'
2025-09-17T00:39:58.075815Z	    },
2025-09-17T00:39:58.075916Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-17T00:39:58.076023Z	    relatedBrands: null,
2025-09-17T00:39:58.076137Z	    slug: '99999',
2025-09-17T00:39:58.076243Z	    summary: '99999',
2025-09-17T00:39:58.076376Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:58.076491Z	    title: '99999',
2025-09-17T00:39:58.07659Z	    viewCount: 0
2025-09-17T00:39:58.076695Z	  }
2025-09-17T00:39:58.076816Z	}
2025-09-17T00:39:58.078563Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-17T00:39:58.078736Z	Fetching products with query: 
2025-09-17T00:39:58.078875Z	    {
2025-09-17T00:39:58.078988Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.079109Z	        
2025-09-17T00:39:58.079212Z	    _id,
2025-09-17T00:39:58.079337Z	    _type,
2025-09-17T00:39:58.079436Z	    partNumber,
2025-09-17T00:39:58.079525Z	    "slug": slug.current,
2025-09-17T00:39:58.079662Z	    title,
2025-09-17T00:39:58.079857Z	    shortDescription,
2025-09-17T00:39:58.080024Z	    image,
2025-09-17T00:39:58.080131Z	    brand->{
2025-09-17T00:39:58.080222Z	      name,
2025-09-17T00:39:58.080339Z	      "slug": slug.current,
2025-09-17T00:39:58.080443Z	      logo
2025-09-17T00:39:58.080539Z	    },
2025-09-17T00:39:58.08066Z	    category->{
2025-09-17T00:39:58.080763Z	      name,
2025-09-17T00:39:58.080858Z	      "slug": slug.current
2025-09-17T00:39:58.080949Z	    },
2025-09-17T00:39:58.081034Z	    pricing{
2025-09-17T00:39:58.08112Z	      currency,
2025-09-17T00:39:58.081206Z	      tiers[]{
2025-09-17T00:39:58.085383Z	        quantity,
2025-09-17T00:39:58.085567Z	        price,
2025-09-17T00:39:58.085696Z	        unit
2025-09-17T00:39:58.085818Z	      },
2025-09-17T00:39:58.085917Z	      moq,
2025-09-17T00:39:58.086043Z	      leadTime,
2025-09-17T00:39:58.086146Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.086247Z	      "price": tiers[0].price,
2025-09-17T00:39:58.086376Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.0865Z	    },
2025-09-17T00:39:58.086606Z	    inventory{
2025-09-17T00:39:58.086713Z	      quantity,
2025-09-17T00:39:58.086833Z	      status,
2025-09-17T00:39:58.0877Z	      warehouse,
2025-09-17T00:39:58.087838Z	      lastUpdated,
2025-09-17T00:39:58.087953Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.088061Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.088184Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.088314Z	    },
2025-09-17T00:39:58.088423Z	    isActive,
2025-09-17T00:39:58.08853Z	    isFeatured,
2025-09-17T00:39:58.08863Z	    isNew,
2025-09-17T00:39:58.088732Z	    _createdAt,
2025-09-17T00:39:58.088853Z	    _updatedAt
2025-09-17T00:39:58.088959Z	  
2025-09-17T00:39:58.089066Z	      },
2025-09-17T00:39:58.089175Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-17T00:39:58.093338Z	    }
2025-09-17T00:39:58.093521Z	  
2025-09-17T00:39:58.093646Z	Query parameters: {
2025-09-17T00:39:58.093759Z	  limit: 8,
2025-09-17T00:39:58.09387Z	  offset: 0,
2025-09-17T00:39:58.093968Z	  category: undefined,
2025-09-17T00:39:58.094083Z	  brand: 'ncc',
2025-09-17T00:39:58.094188Z	  featured: undefined
2025-09-17T00:39:58.094322Z	}
2025-09-17T00:39:58.09444Z	Fetching solutions with query: 
2025-09-17T00:39:58.094541Z	    {
2025-09-17T00:39:58.094644Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.094759Z	        
2025-09-17T00:39:58.095005Z	    _id,
2025-09-17T00:39:58.095122Z	    title,
2025-09-17T00:39:58.095229Z	    "slug": slug.current,
2025-09-17T00:39:58.095359Z	    summary,
2025-09-17T00:39:58.095476Z	    description,
2025-09-17T00:39:58.095585Z	    coverImage,
2025-09-17T00:39:58.095692Z	    primaryBrand->{
2025-09-17T00:39:58.095803Z	      _id,
2025-09-17T00:39:58.095901Z	      name,
2025-09-17T00:39:58.095999Z	      "slug": slug.current,
2025-09-17T00:39:58.096085Z	      logo
2025-09-17T00:39:58.096179Z	    },
2025-09-17T00:39:58.096294Z	    relatedBrands[]->{
2025-09-17T00:39:58.096407Z	      _id,
2025-09-17T00:39:58.096518Z	      name,
2025-09-17T00:39:58.096617Z	      "slug": slug.current,
2025-09-17T00:39:58.096718Z	      logo
2025-09-17T00:39:58.096833Z	    },
2025-09-17T00:39:58.096944Z	    targetMarket,
2025-09-17T00:39:58.097061Z	    complexity,
2025-09-17T00:39:58.097165Z	    publishedAt,
2025-09-17T00:39:58.09726Z	    isPublished,
2025-09-17T00:39:58.097404Z	    isFeatured,
2025-09-17T00:39:58.09751Z	    viewCount,
2025-09-17T00:39:58.097601Z	    _createdAt,
2025-09-17T00:39:58.097683Z	    _updatedAt
2025-09-17T00:39:58.097766Z	  
2025-09-17T00:39:58.097851Z	      },
2025-09-17T00:39:58.097947Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-17T00:39:58.098064Z	    }
2025-09-17T00:39:58.098157Z	  
2025-09-17T00:39:58.098247Z	Query parameters: {
2025-09-17T00:39:58.098361Z	  limit: 4,
2025-09-17T00:39:58.098453Z	  offset: 0,
2025-09-17T00:39:58.098555Z	  targetMarket: undefined,
2025-09-17T00:39:58.098645Z	  brand: 'ncc',
2025-09-17T00:39:58.098735Z	  featured: undefined
2025-09-17T00:39:58.098842Z	}
2025-09-17T00:39:58.098937Z	✅ [getBrandData] Found brand: ncc
2025-09-17T00:39:58.099059Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:58.099172Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.099306Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-17T00:39:58.099423Z	Fetching products with query: 
2025-09-17T00:39:58.099531Z	    {
2025-09-17T00:39:58.099634Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.099738Z	        
2025-09-17T00:39:58.09984Z	    _id,
2025-09-17T00:39:58.099944Z	    _type,
2025-09-17T00:39:58.100062Z	    partNumber,
2025-09-17T00:39:58.100252Z	    "slug": slug.current,
2025-09-17T00:39:58.100884Z	    title,
2025-09-17T00:39:58.101011Z	    shortDescription,
2025-09-17T00:39:58.10114Z	    image,
2025-09-17T00:39:58.101244Z	    brand->{
2025-09-17T00:39:58.101369Z	      name,
2025-09-17T00:39:58.101485Z	      "slug": slug.current,
2025-09-17T00:39:58.101597Z	      logo
2025-09-17T00:39:58.101739Z	    },
2025-09-17T00:39:58.101976Z	    category->{
2025-09-17T00:39:58.102319Z	      name,
2025-09-17T00:39:58.102632Z	      "slug": slug.current
2025-09-17T00:39:58.102825Z	    },
2025-09-17T00:39:58.103059Z	    pricing{
2025-09-17T00:39:58.103217Z	      currency,
2025-09-17T00:39:58.103372Z	      tiers[]{
2025-09-17T00:39:58.103495Z	        quantity,
2025-09-17T00:39:58.103655Z	        price,
2025-09-17T00:39:58.10382Z	        unit
2025-09-17T00:39:58.103974Z	      },
2025-09-17T00:39:58.104129Z	      moq,
2025-09-17T00:39:58.104285Z	      leadTime,
2025-09-17T00:39:58.104433Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.104564Z	      "price": tiers[0].price,
2025-09-17T00:39:58.10471Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.104894Z	    },
2025-09-17T00:39:58.105047Z	    inventory{
2025-09-17T00:39:58.105198Z	      quantity,
2025-09-17T00:39:58.10537Z	      status,
2025-09-17T00:39:58.105531Z	      warehouse,
2025-09-17T00:39:58.105709Z	      lastUpdated,
2025-09-17T00:39:58.105851Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.105971Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.106091Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.106382Z	    },
2025-09-17T00:39:58.107149Z	    isActive,
2025-09-17T00:39:58.107372Z	    isFeatured,
2025-09-17T00:39:58.107508Z	    isNew,
2025-09-17T00:39:58.107768Z	    _createdAt,
2025-09-17T00:39:58.107987Z	    _updatedAt
2025-09-17T00:39:58.108126Z	  
2025-09-17T00:39:58.108358Z	      },
2025-09-17T00:39:58.108543Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-17T00:39:58.108665Z	    }
2025-09-17T00:39:58.108793Z	  
2025-09-17T00:39:58.108898Z	Query parameters: {
2025-09-17T00:39:58.108997Z	  limit: 8,
2025-09-17T00:39:58.109099Z	  offset: 0,
2025-09-17T00:39:58.1092Z	  category: undefined,
2025-09-17T00:39:58.10933Z	  brand: 'ncc',
2025-09-17T00:39:58.10943Z	  featured: undefined
2025-09-17T00:39:58.109529Z	}
2025-09-17T00:39:58.109628Z	Fetching solutions with query: 
2025-09-17T00:39:58.109722Z	    {
2025-09-17T00:39:58.109824Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.109918Z	        
2025-09-17T00:39:58.110016Z	    _id,
2025-09-17T00:39:58.110112Z	    title,
2025-09-17T00:39:58.110207Z	    "slug": slug.current,
2025-09-17T00:39:58.110311Z	    summary,
2025-09-17T00:39:58.110418Z	    description,
2025-09-17T00:39:58.110516Z	    coverImage,
2025-09-17T00:39:58.110615Z	    primaryBrand->{
2025-09-17T00:39:58.110712Z	      _id,
2025-09-17T00:39:58.110819Z	      name,
2025-09-17T00:39:58.110916Z	      "slug": slug.current,
2025-09-17T00:39:58.111012Z	      logo
2025-09-17T00:39:58.111107Z	    },
2025-09-17T00:39:58.111205Z	    relatedBrands[]->{
2025-09-17T00:39:58.111322Z	      _id,
2025-09-17T00:39:58.111426Z	      name,
2025-09-17T00:39:58.111519Z	      "slug": slug.current,
2025-09-17T00:39:58.111662Z	      logo
2025-09-17T00:39:58.111779Z	    },
2025-09-17T00:39:58.11202Z	    targetMarket,
2025-09-17T00:39:58.112203Z	    complexity,
2025-09-17T00:39:58.112883Z	    publishedAt,
2025-09-17T00:39:58.113188Z	    isPublished,
2025-09-17T00:39:58.113319Z	    isFeatured,
2025-09-17T00:39:58.113431Z	    viewCount,
2025-09-17T00:39:58.113531Z	    _createdAt,
2025-09-17T00:39:58.113617Z	    _updatedAt
2025-09-17T00:39:58.113693Z	  
2025-09-17T00:39:58.113777Z	      },
2025-09-17T00:39:58.113862Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-17T00:39:58.114009Z	    }
2025-09-17T00:39:58.11417Z	  
2025-09-17T00:39:58.114289Z	Query parameters: {
2025-09-17T00:39:58.114389Z	  limit: 4,
2025-09-17T00:39:58.114494Z	  offset: 0,
2025-09-17T00:39:58.114589Z	  targetMarket: undefined,
2025-09-17T00:39:58.11479Z	  brand: 'ncc',
2025-09-17T00:39:58.11496Z	  featured: undefined
2025-09-17T00:39:58.115118Z	}
2025-09-17T00:39:58.115347Z	✅ [getBrandData] Found brand: ncc
2025-09-17T00:39:58.115539Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:58.11564Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.115743Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-17T00:39:58.115873Z	Fetching products with query: 
2025-09-17T00:39:58.115972Z	    {
2025-09-17T00:39:58.116098Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.116226Z	        
2025-09-17T00:39:58.116369Z	    _id,
2025-09-17T00:39:58.116477Z	    _type,
2025-09-17T00:39:58.116575Z	    partNumber,
2025-09-17T00:39:58.116695Z	    "slug": slug.current,
2025-09-17T00:39:58.11684Z	    title,
2025-09-17T00:39:58.116973Z	    shortDescription,
2025-09-17T00:39:58.117084Z	    image,
2025-09-17T00:39:58.117203Z	    brand->{
2025-09-17T00:39:58.117796Z	      name,
2025-09-17T00:39:58.11795Z	      "slug": slug.current,
2025-09-17T00:39:58.118175Z	      logo
2025-09-17T00:39:58.118302Z	    },
2025-09-17T00:39:58.118427Z	    category->{
2025-09-17T00:39:58.118714Z	      name,
2025-09-17T00:39:58.119021Z	      "slug": slug.current
2025-09-17T00:39:58.119213Z	    },
2025-09-17T00:39:58.119376Z	    pricing{
2025-09-17T00:39:58.119519Z	      currency,
2025-09-17T00:39:58.119684Z	      tiers[]{
2025-09-17T00:39:58.119817Z	        quantity,
2025-09-17T00:39:58.119935Z	        price,
2025-09-17T00:39:58.120008Z	        unit
2025-09-17T00:39:58.120124Z	      },
2025-09-17T00:39:58.120285Z	      moq,
2025-09-17T00:39:58.120436Z	      leadTime,
2025-09-17T00:39:58.120549Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.12071Z	      "price": tiers[0].price,
2025-09-17T00:39:58.120815Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.120934Z	    },
2025-09-17T00:39:58.121094Z	    inventory{
2025-09-17T00:39:58.121274Z	      quantity,
2025-09-17T00:39:58.121393Z	      status,
2025-09-17T00:39:58.121654Z	      warehouse,
2025-09-17T00:39:58.12178Z	      lastUpdated,
2025-09-17T00:39:58.122094Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.12229Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.122438Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.122527Z	    },
2025-09-17T00:39:58.122617Z	    isActive,
2025-09-17T00:39:58.122714Z	    isFeatured,
2025-09-17T00:39:58.122818Z	    isNew,
2025-09-17T00:39:58.122913Z	    _createdAt,
2025-09-17T00:39:58.123016Z	    _updatedAt
2025-09-17T00:39:58.123084Z	  
2025-09-17T00:39:58.123139Z	      },
2025-09-17T00:39:58.123239Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-17T00:39:58.123519Z	    }
2025-09-17T00:39:58.123643Z	  
2025-09-17T00:39:58.123741Z	Query parameters: {
2025-09-17T00:39:58.12389Z	  limit: 8,
2025-09-17T00:39:58.123999Z	  offset: 0,
2025-09-17T00:39:58.124108Z	  category: undefined,
2025-09-17T00:39:58.124264Z	  brand: 'lem',
2025-09-17T00:39:58.124418Z	  featured: undefined
2025-09-17T00:39:58.124652Z	}
2025-09-17T00:39:58.124867Z	Fetching solutions with query: 
2025-09-17T00:39:58.125037Z	    {
2025-09-17T00:39:58.125179Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.125341Z	        
2025-09-17T00:39:58.125459Z	    _id,
2025-09-17T00:39:58.125573Z	    title,
2025-09-17T00:39:58.125678Z	    "slug": slug.current,
2025-09-17T00:39:58.125771Z	    summary,
2025-09-17T00:39:58.126049Z	    description,
2025-09-17T00:39:58.126179Z	    coverImage,
2025-09-17T00:39:58.126307Z	    primaryBrand->{
2025-09-17T00:39:58.126511Z	      _id,
2025-09-17T00:39:58.126621Z	      name,
2025-09-17T00:39:58.126839Z	      "slug": slug.current,
2025-09-17T00:39:58.127112Z	      logo
2025-09-17T00:39:58.127527Z	    },
2025-09-17T00:39:58.127687Z	    relatedBrands[]->{
2025-09-17T00:39:58.127796Z	      _id,
2025-09-17T00:39:58.128035Z	      name,
2025-09-17T00:39:58.128127Z	      "slug": slug.current,
2025-09-17T00:39:58.128386Z	      logo
2025-09-17T00:39:58.128509Z	    },
2025-09-17T00:39:58.128632Z	    targetMarket,
2025-09-17T00:39:58.128737Z	    complexity,
2025-09-17T00:39:58.1289Z	    publishedAt,
2025-09-17T00:39:58.129072Z	    isPublished,
2025-09-17T00:39:58.129194Z	    isFeatured,
2025-09-17T00:39:58.12932Z	    viewCount,
2025-09-17T00:39:58.129579Z	    _createdAt,
2025-09-17T00:39:58.129701Z	    _updatedAt
2025-09-17T00:39:58.129812Z	  
2025-09-17T00:39:58.129924Z	      },
2025-09-17T00:39:58.130026Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-17T00:39:58.130137Z	    }
2025-09-17T00:39:58.130236Z	  
2025-09-17T00:39:58.130356Z	Query parameters: {
2025-09-17T00:39:58.130454Z	  limit: 4,
2025-09-17T00:39:58.130518Z	  offset: 0,
2025-09-17T00:39:58.130698Z	  targetMarket: undefined,
2025-09-17T00:39:58.130801Z	  brand: 'lem',
2025-09-17T00:39:58.130955Z	  featured: undefined
2025-09-17T00:39:58.131051Z	}
2025-09-17T00:39:58.131239Z	✅ [getBrandData] Found brand: LEM
2025-09-17T00:39:58.131375Z	Products fetch result: {
2025-09-17T00:39:58.131481Z	  totalProducts: 3,
2025-09-17T00:39:58.13168Z	  fetchedProducts: 3,
2025-09-17T00:39:58.131961Z	  firstProduct: {
2025-09-17T00:39:58.132127Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-17T00:39:58.132219Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-17T00:39:58.132361Z	    _type: 'product',
2025-09-17T00:39:58.132535Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-17T00:39:58.132674Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-17T00:39:58.132792Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-17T00:39:58.13291Z	    image: null,
2025-09-17T00:39:58.133061Z	    inventory: {
2025-09-17T00:39:58.133212Z	      inStock: true,
2025-09-17T00:39:58.133333Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-17T00:39:58.133447Z	      quantity: 0,
2025-09-17T00:39:58.133612Z	      status: 'in_stock',
2025-09-17T00:39:58.13372Z	      warehouse: null
2025-09-17T00:39:58.133821Z	    },
2025-09-17T00:39:58.13396Z	    isActive: true,
2025-09-17T00:39:58.134036Z	    isFeatured: false,
2025-09-17T00:39:58.13415Z	    isNew: false,
2025-09-17T00:39:58.134319Z	    partNumber: 'la55-p',
2025-09-17T00:39:58.134417Z	    pricing: {
2025-09-17T00:39:58.134536Z	      currency: 'CNY',
2025-09-17T00:39:58.134673Z	      leadTime: null,
2025-09-17T00:39:58.134787Z	      moq: null,
2025-09-17T00:39:58.134913Z	      price: null,
2025-09-17T00:39:58.135022Z	      tiers: null
2025-09-17T00:39:58.135154Z	    },
2025-09-17T00:39:58.135279Z	    shortDescription: '电流传感器la55-p',
2025-09-17T00:39:58.135493Z	    slug: 'la55-p',
2025-09-17T00:39:58.135596Z	    title: '电流传感器la55-p'
2025-09-17T00:39:58.135816Z	  }
2025-09-17T00:39:58.135917Z	}
2025-09-17T00:39:58.136042Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.136198Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-17T00:39:58.136337Z	Fetching products with query: 
2025-09-17T00:39:58.136439Z	    {
2025-09-17T00:39:58.136544Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.136671Z	        
2025-09-17T00:39:58.136799Z	    _id,
2025-09-17T00:39:58.136936Z	    _type,
2025-09-17T00:39:58.137073Z	    partNumber,
2025-09-17T00:39:58.1372Z	    "slug": slug.current,
2025-09-17T00:39:58.137343Z	    title,
2025-09-17T00:39:58.137451Z	    shortDescription,
2025-09-17T00:39:58.13757Z	    image,
2025-09-17T00:39:58.137706Z	    brand->{
2025-09-17T00:39:58.137826Z	      name,
2025-09-17T00:39:58.137925Z	      "slug": slug.current,
2025-09-17T00:39:58.138027Z	      logo
2025-09-17T00:39:58.138123Z	    },
2025-09-17T00:39:58.138223Z	    category->{
2025-09-17T00:39:58.13835Z	      name,
2025-09-17T00:39:58.138495Z	      "slug": slug.current
2025-09-17T00:39:58.138618Z	    },
2025-09-17T00:39:58.138732Z	    pricing{
2025-09-17T00:39:58.138836Z	      currency,
2025-09-17T00:39:58.138906Z	      tiers[]{
2025-09-17T00:39:58.138998Z	        quantity,
2025-09-17T00:39:58.139101Z	        price,
2025-09-17T00:39:58.139216Z	        unit
2025-09-17T00:39:58.139379Z	      },
2025-09-17T00:39:58.139448Z	      moq,
2025-09-17T00:39:58.139504Z	      leadTime,
2025-09-17T00:39:58.139573Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.139686Z	      "price": tiers[0].price,
2025-09-17T00:39:58.139783Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.139869Z	    },
2025-09-17T00:39:58.139989Z	    inventory{
2025-09-17T00:39:58.140161Z	      quantity,
2025-09-17T00:39:58.140247Z	      status,
2025-09-17T00:39:58.140399Z	      warehouse,
2025-09-17T00:39:58.140624Z	      lastUpdated,
2025-09-17T00:39:58.140779Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.140868Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.140987Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.141144Z	    },
2025-09-17T00:39:58.141215Z	    isActive,
2025-09-17T00:39:58.141326Z	    isFeatured,
2025-09-17T00:39:58.141458Z	    isNew,
2025-09-17T00:39:58.141605Z	    _createdAt,
2025-09-17T00:39:58.141691Z	    _updatedAt
2025-09-17T00:39:58.141829Z	  
2025-09-17T00:39:58.141949Z	      },
2025-09-17T00:39:58.142021Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-17T00:39:58.14217Z	    }
2025-09-17T00:39:58.142297Z	  
2025-09-17T00:39:58.142426Z	Query parameters: {
2025-09-17T00:39:58.142539Z	  limit: 8,
2025-09-17T00:39:58.14268Z	  offset: 0,
2025-09-17T00:39:58.142826Z	  category: undefined,
2025-09-17T00:39:58.142954Z	  brand: 'lem',
2025-09-17T00:39:58.14306Z	  featured: undefined
2025-09-17T00:39:58.143176Z	}
2025-09-17T00:39:58.14329Z	Fetching solutions with query: 
2025-09-17T00:39:58.143452Z	    {
2025-09-17T00:39:58.143644Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.143829Z	        
2025-09-17T00:39:58.143966Z	    _id,
2025-09-17T00:39:58.144111Z	    title,
2025-09-17T00:39:58.144258Z	    "slug": slug.current,
2025-09-17T00:39:58.144418Z	    summary,
2025-09-17T00:39:58.144528Z	    description,
2025-09-17T00:39:58.144752Z	    coverImage,
2025-09-17T00:39:58.144837Z	    primaryBrand->{
2025-09-17T00:39:58.144946Z	      _id,
2025-09-17T00:39:58.145497Z	      name,
2025-09-17T00:39:58.145762Z	      "slug": slug.current,
2025-09-17T00:39:58.146031Z	      logo
2025-09-17T00:39:58.146215Z	    },
2025-09-17T00:39:58.14649Z	    relatedBrands[]->{
2025-09-17T00:39:58.146571Z	      _id,
2025-09-17T00:39:58.146694Z	      name,
2025-09-17T00:39:58.146804Z	      "slug": slug.current,
2025-09-17T00:39:58.14694Z	      logo
2025-09-17T00:39:58.147065Z	    },
2025-09-17T00:39:58.147159Z	    targetMarket,
2025-09-17T00:39:58.147226Z	    complexity,
2025-09-17T00:39:58.147323Z	    publishedAt,
2025-09-17T00:39:58.147425Z	    isPublished,
2025-09-17T00:39:58.147532Z	    isFeatured,
2025-09-17T00:39:58.147671Z	    viewCount,
2025-09-17T00:39:58.147739Z	    _createdAt,
2025-09-17T00:39:58.147933Z	    _updatedAt
2025-09-17T00:39:58.14809Z	  
2025-09-17T00:39:58.148203Z	      },
2025-09-17T00:39:58.148387Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-17T00:39:58.148553Z	    }
2025-09-17T00:39:58.148701Z	  
2025-09-17T00:39:58.148828Z	Query parameters: {
2025-09-17T00:39:58.148984Z	  limit: 4,
2025-09-17T00:39:58.149145Z	  offset: 0,
2025-09-17T00:39:58.14929Z	  targetMarket: undefined,
2025-09-17T00:39:58.149392Z	  brand: 'lem',
2025-09-17T00:39:58.149517Z	  featured: undefined
2025-09-17T00:39:58.149634Z	}
2025-09-17T00:39:58.149738Z	✅ [getBrandData] Found brand: LEM
2025-09-17T00:39:58.149858Z	Products fetch result: {
2025-09-17T00:39:58.149939Z	  totalProducts: 3,
2025-09-17T00:39:58.150027Z	  fetchedProducts: 3,
2025-09-17T00:39:58.150173Z	  firstProduct: {
2025-09-17T00:39:58.150468Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-17T00:39:58.15057Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-17T00:39:58.150773Z	    _type: 'product',
2025-09-17T00:39:58.150885Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-17T00:39:58.151078Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-17T00:39:58.151195Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-17T00:39:58.151324Z	    image: null,
2025-09-17T00:39:58.151441Z	    inventory: {
2025-09-17T00:39:58.151561Z	      inStock: true,
2025-09-17T00:39:58.151702Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-17T00:39:58.151879Z	      quantity: 0,
2025-09-17T00:39:58.151957Z	      status: 'in_stock',
2025-09-17T00:39:58.152156Z	      warehouse: null
2025-09-17T00:39:58.152252Z	    },
2025-09-17T00:39:58.152365Z	    isActive: true,
2025-09-17T00:39:58.152494Z	    isFeatured: false,
2025-09-17T00:39:58.152636Z	    isNew: false,
2025-09-17T00:39:58.152734Z	    partNumber: 'la55-p',
2025-09-17T00:39:58.152899Z	    pricing: {
2025-09-17T00:39:58.152981Z	      currency: 'CNY',
2025-09-17T00:39:58.153083Z	      leadTime: null,
2025-09-17T00:39:58.153202Z	      moq: null,
2025-09-17T00:39:58.153323Z	      price: null,
2025-09-17T00:39:58.153427Z	      tiers: null
2025-09-17T00:39:58.153531Z	    },
2025-09-17T00:39:58.153625Z	    shortDescription: '电流传感器la55-p',
2025-09-17T00:39:58.153722Z	    slug: 'la55-p',
2025-09-17T00:39:58.15382Z	    title: '电流传感器la55-p'
2025-09-17T00:39:58.153932Z	  }
2025-09-17T00:39:58.154032Z	}
2025-09-17T00:39:58.154133Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.154238Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-17T00:39:58.154348Z	Fetching products with query: 
2025-09-17T00:39:58.154419Z	    {
2025-09-17T00:39:58.1545Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.154574Z	        
2025-09-17T00:39:58.154644Z	    _id,
2025-09-17T00:39:58.154745Z	    _type,
2025-09-17T00:39:58.154857Z	    partNumber,
2025-09-17T00:39:58.154968Z	    "slug": slug.current,
2025-09-17T00:39:58.155094Z	    title,
2025-09-17T00:39:58.1552Z	    shortDescription,
2025-09-17T00:39:58.155335Z	    image,
2025-09-17T00:39:58.155449Z	    brand->{
2025-09-17T00:39:58.155558Z	      name,
2025-09-17T00:39:58.155667Z	      "slug": slug.current,
2025-09-17T00:39:58.155776Z	      logo
2025-09-17T00:39:58.155923Z	    },
2025-09-17T00:39:58.156002Z	    category->{
2025-09-17T00:39:58.156101Z	      name,
2025-09-17T00:39:58.156211Z	      "slug": slug.current
2025-09-17T00:39:58.156416Z	    },
2025-09-17T00:39:58.156509Z	    pricing{
2025-09-17T00:39:58.15659Z	      currency,
2025-09-17T00:39:58.156718Z	      tiers[]{
2025-09-17T00:39:58.156887Z	        quantity,
2025-09-17T00:39:58.156999Z	        price,
2025-09-17T00:39:58.157253Z	        unit
2025-09-17T00:39:58.157536Z	      },
2025-09-17T00:39:58.157636Z	      moq,
2025-09-17T00:39:58.15784Z	      leadTime,
2025-09-17T00:39:58.158045Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.158162Z	      "price": tiers[0].price,
2025-09-17T00:39:58.158518Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.158603Z	    },
2025-09-17T00:39:58.158815Z	    inventory{
2025-09-17T00:39:58.15906Z	      quantity,
2025-09-17T00:39:58.159228Z	      status,
2025-09-17T00:39:58.159663Z	      warehouse,
2025-09-17T00:39:58.159799Z	      lastUpdated,
2025-09-17T00:39:58.15992Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.160036Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.160137Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.160231Z	    },
2025-09-17T00:39:58.160365Z	    isActive,
2025-09-17T00:39:58.160471Z	    isFeatured,
2025-09-17T00:39:58.160587Z	    isNew,
2025-09-17T00:39:58.16075Z	    _createdAt,
2025-09-17T00:39:58.160885Z	    _updatedAt
2025-09-17T00:39:58.161046Z	  
2025-09-17T00:39:58.161146Z	      },
2025-09-17T00:39:58.161246Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-17T00:39:58.161376Z	    }
2025-09-17T00:39:58.161554Z	  
2025-09-17T00:39:58.161698Z	Query parameters: {
2025-09-17T00:39:58.16185Z	  limit: 8,
2025-09-17T00:39:58.161969Z	  offset: 0,
2025-09-17T00:39:58.16207Z	  category: undefined,
2025-09-17T00:39:58.162162Z	  brand: 'semikron',
2025-09-17T00:39:58.162258Z	  featured: undefined
2025-09-17T00:39:58.162378Z	}
2025-09-17T00:39:58.162498Z	Fetching solutions with query: 
2025-09-17T00:39:58.162599Z	    {
2025-09-17T00:39:58.162701Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.162805Z	        
2025-09-17T00:39:58.162891Z	    _id,
2025-09-17T00:39:58.163004Z	    title,
2025-09-17T00:39:58.163111Z	    "slug": slug.current,
2025-09-17T00:39:58.163215Z	    summary,
2025-09-17T00:39:58.16333Z	    description,
2025-09-17T00:39:58.163433Z	    coverImage,
2025-09-17T00:39:58.163532Z	    primaryBrand->{
2025-09-17T00:39:58.163636Z	      _id,
2025-09-17T00:39:58.163744Z	      name,
2025-09-17T00:39:58.163842Z	      "slug": slug.current,
2025-09-17T00:39:58.163944Z	      logo
2025-09-17T00:39:58.164049Z	    },
2025-09-17T00:39:58.164143Z	    relatedBrands[]->{
2025-09-17T00:39:58.164236Z	      _id,
2025-09-17T00:39:58.164352Z	      name,
2025-09-17T00:39:58.16448Z	      "slug": slug.current,
2025-09-17T00:39:58.164595Z	      logo
2025-09-17T00:39:58.164717Z	    },
2025-09-17T00:39:58.164818Z	    targetMarket,
2025-09-17T00:39:58.164964Z	    complexity,
2025-09-17T00:39:58.16513Z	    publishedAt,
2025-09-17T00:39:58.165261Z	    isPublished,
2025-09-17T00:39:58.165438Z	    isFeatured,
2025-09-17T00:39:58.165526Z	    viewCount,
2025-09-17T00:39:58.165622Z	    _createdAt,
2025-09-17T00:39:58.165742Z	    _updatedAt
2025-09-17T00:39:58.166019Z	  
2025-09-17T00:39:58.166338Z	      },
2025-09-17T00:39:58.166535Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-17T00:39:58.166674Z	    }
2025-09-17T00:39:58.166792Z	  
2025-09-17T00:39:58.166902Z	Query parameters: {
2025-09-17T00:39:58.167015Z	  limit: 4,
2025-09-17T00:39:58.167116Z	  offset: 0,
2025-09-17T00:39:58.167201Z	  targetMarket: undefined,
2025-09-17T00:39:58.167303Z	  brand: 'semikron',
2025-09-17T00:39:58.16742Z	  featured: undefined
2025-09-17T00:39:58.167522Z	}
2025-09-17T00:39:58.167619Z	✅ [getBrandData] Found brand: Semikron
2025-09-17T00:39:58.16771Z	Products fetch result: {
2025-09-17T00:39:58.167801Z	  totalProducts: 1,
2025-09-17T00:39:58.167936Z	  fetchedProducts: 1,
2025-09-17T00:39:58.168056Z	  firstProduct: {
2025-09-17T00:39:58.168167Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-17T00:39:58.16839Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-17T00:39:58.16849Z	    _type: 'product',
2025-09-17T00:39:58.168641Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-17T00:39:58.168716Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-17T00:39:58.168794Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:58.168954Z	    image: null,
2025-09-17T00:39:58.169028Z	    inventory: {
2025-09-17T00:39:58.169087Z	      inStock: true,
2025-09-17T00:39:58.169256Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-17T00:39:58.169404Z	      quantity: 0,
2025-09-17T00:39:58.169663Z	      status: 'in_stock',
2025-09-17T00:39:58.169776Z	      warehouse: null
2025-09-17T00:39:58.16984Z	    },
2025-09-17T00:39:58.169981Z	    isActive: true,
2025-09-17T00:39:58.170138Z	    isFeatured: false,
2025-09-17T00:39:58.17021Z	    isNew: false,
2025-09-17T00:39:58.17028Z	    partNumber: 'SKKT106/16E',
2025-09-17T00:39:58.170474Z	    pricing: {
2025-09-17T00:39:58.170555Z	      currency: 'CNY',
2025-09-17T00:39:58.170621Z	      leadTime: null,
2025-09-17T00:39:58.170836Z	      moq: null,
2025-09-17T00:39:58.170942Z	      price: null,
2025-09-17T00:39:58.17108Z	      tiers: null
2025-09-17T00:39:58.171157Z	    },
2025-09-17T00:39:58.171304Z	    shortDescription: 'SKKT106/16E',
2025-09-17T00:39:58.171387Z	    slug: 'SKKT106/16E',
2025-09-17T00:39:58.171477Z	    title: 'SKKT106/16E'
2025-09-17T00:39:58.171665Z	  }
2025-09-17T00:39:58.171834Z	}
2025-09-17T00:39:58.171976Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.172155Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-17T00:39:58.172277Z	Fetching products with query: 
2025-09-17T00:39:58.172395Z	    {
2025-09-17T00:39:58.172489Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.172625Z	        
2025-09-17T00:39:58.172729Z	    _id,
2025-09-17T00:39:58.172818Z	    _type,
2025-09-17T00:39:58.172922Z	    partNumber,
2025-09-17T00:39:58.173022Z	    "slug": slug.current,
2025-09-17T00:39:58.173126Z	    title,
2025-09-17T00:39:58.173241Z	    shortDescription,
2025-09-17T00:39:58.173356Z	    image,
2025-09-17T00:39:58.173459Z	    brand->{
2025-09-17T00:39:58.173566Z	      name,
2025-09-17T00:39:58.173662Z	      "slug": slug.current,
2025-09-17T00:39:58.173794Z	      logo
2025-09-17T00:39:58.17388Z	    },
2025-09-17T00:39:58.173999Z	    category->{
2025-09-17T00:39:58.174072Z	      name,
2025-09-17T00:39:58.17425Z	      "slug": slug.current
2025-09-17T00:39:58.174363Z	    },
2025-09-17T00:39:58.174449Z	    pricing{
2025-09-17T00:39:58.174572Z	      currency,
2025-09-17T00:39:58.174743Z	      tiers[]{
2025-09-17T00:39:58.174919Z	        quantity,
2025-09-17T00:39:58.175025Z	        price,
2025-09-17T00:39:58.175129Z	        unit
2025-09-17T00:39:58.175233Z	      },
2025-09-17T00:39:58.175354Z	      moq,
2025-09-17T00:39:58.175458Z	      leadTime,
2025-09-17T00:39:58.175584Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.17572Z	      "price": tiers[0].price,
2025-09-17T00:39:58.175884Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.17604Z	    },
2025-09-17T00:39:58.176185Z	    inventory{
2025-09-17T00:39:58.176311Z	      quantity,
2025-09-17T00:39:58.176467Z	      status,
2025-09-17T00:39:58.17676Z	      warehouse,
2025-09-17T00:39:58.176923Z	      lastUpdated,
2025-09-17T00:39:58.177041Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.177143Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.17724Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.177403Z	    },
2025-09-17T00:39:58.177557Z	    isActive,
2025-09-17T00:39:58.177646Z	    isFeatured,
2025-09-17T00:39:58.17771Z	    isNew,
2025-09-17T00:39:58.177876Z	    _createdAt,
2025-09-17T00:39:58.178013Z	    _updatedAt
2025-09-17T00:39:58.178163Z	  
2025-09-17T00:39:58.17829Z	      },
2025-09-17T00:39:58.178472Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-17T00:39:58.178626Z	    }
2025-09-17T00:39:58.178746Z	  
2025-09-17T00:39:58.178872Z	Query parameters: {
2025-09-17T00:39:58.179007Z	  limit: 8,
2025-09-17T00:39:58.179124Z	  offset: 0,
2025-09-17T00:39:58.179222Z	  category: undefined,
2025-09-17T00:39:58.179334Z	  brand: 'semikron',
2025-09-17T00:39:58.179442Z	  featured: undefined
2025-09-17T00:39:58.179536Z	}
2025-09-17T00:39:58.179634Z	Fetching solutions with query: 
2025-09-17T00:39:58.179735Z	    {
2025-09-17T00:39:58.17984Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.179942Z	        
2025-09-17T00:39:58.18003Z	    _id,
2025-09-17T00:39:58.180122Z	    title,
2025-09-17T00:39:58.180208Z	    "slug": slug.current,
2025-09-17T00:39:58.180317Z	    summary,
2025-09-17T00:39:58.180434Z	    description,
2025-09-17T00:39:58.180553Z	    coverImage,
2025-09-17T00:39:58.180692Z	    primaryBrand->{
2025-09-17T00:39:58.180852Z	      _id,
2025-09-17T00:39:58.180959Z	      name,
2025-09-17T00:39:58.18108Z	      "slug": slug.current,
2025-09-17T00:39:58.181214Z	      logo
2025-09-17T00:39:58.181358Z	    },
2025-09-17T00:39:58.181463Z	    relatedBrands[]->{
2025-09-17T00:39:58.181589Z	      _id,
2025-09-17T00:39:58.181688Z	      name,
2025-09-17T00:39:58.181791Z	      "slug": slug.current,
2025-09-17T00:39:58.181912Z	      logo
2025-09-17T00:39:58.182069Z	    },
2025-09-17T00:39:58.182217Z	    targetMarket,
2025-09-17T00:39:58.182356Z	    complexity,
2025-09-17T00:39:58.18248Z	    publishedAt,
2025-09-17T00:39:58.182628Z	    isPublished,
2025-09-17T00:39:58.182757Z	    isFeatured,
2025-09-17T00:39:58.182877Z	    viewCount,
2025-09-17T00:39:58.182998Z	    _createdAt,
2025-09-17T00:39:58.183132Z	    _updatedAt
2025-09-17T00:39:58.183231Z	  
2025-09-17T00:39:58.183345Z	      },
2025-09-17T00:39:58.183443Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-17T00:39:58.183544Z	    }
2025-09-17T00:39:58.183648Z	  
2025-09-17T00:39:58.183764Z	Query parameters: {
2025-09-17T00:39:58.183853Z	  limit: 4,
2025-09-17T00:39:58.183952Z	  offset: 0,
2025-09-17T00:39:58.18406Z	  targetMarket: undefined,
2025-09-17T00:39:58.184215Z	  brand: 'semikron',
2025-09-17T00:39:58.184378Z	  featured: undefined
2025-09-17T00:39:58.184457Z	}
2025-09-17T00:39:58.184614Z	✅ [getBrandData] Found brand: Semikron
2025-09-17T00:39:58.184721Z	Products fetch result: {
2025-09-17T00:39:58.184876Z	  totalProducts: 1,
2025-09-17T00:39:58.184974Z	  fetchedProducts: 1,
2025-09-17T00:39:58.185119Z	  firstProduct: {
2025-09-17T00:39:58.185193Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-17T00:39:58.185345Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-17T00:39:58.185445Z	    _type: 'product',
2025-09-17T00:39:58.185609Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-17T00:39:58.185722Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-17T00:39:58.185854Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:58.18597Z	    image: null,
2025-09-17T00:39:58.18607Z	    inventory: {
2025-09-17T00:39:58.186207Z	      inStock: true,
2025-09-17T00:39:58.186339Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-17T00:39:58.186497Z	      quantity: 0,
2025-09-17T00:39:58.186614Z	      status: 'in_stock',
2025-09-17T00:39:58.18672Z	      warehouse: null
2025-09-17T00:39:58.186815Z	    },
2025-09-17T00:39:58.186947Z	    isActive: true,
2025-09-17T00:39:58.187053Z	    isFeatured: false,
2025-09-17T00:39:58.187155Z	    isNew: false,
2025-09-17T00:39:58.187369Z	    partNumber: 'SKKT106/16E',
2025-09-17T00:39:58.187495Z	    pricing: {
2025-09-17T00:39:58.187574Z	      currency: 'CNY',
2025-09-17T00:39:58.187637Z	      leadTime: null,
2025-09-17T00:39:58.187817Z	      moq: null,
2025-09-17T00:39:58.187935Z	      price: null,
2025-09-17T00:39:58.188077Z	      tiers: null
2025-09-17T00:39:58.188224Z	    },
2025-09-17T00:39:58.188366Z	    shortDescription: 'SKKT106/16E',
2025-09-17T00:39:58.188444Z	    slug: 'SKKT106/16E',
2025-09-17T00:39:58.188575Z	    title: 'SKKT106/16E'
2025-09-17T00:39:58.18871Z	  }
2025-09-17T00:39:58.188826Z	}
2025-09-17T00:39:58.188993Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.189117Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-17T00:39:58.189244Z	Fetching products with query: 
2025-09-17T00:39:58.189409Z	    {
2025-09-17T00:39:58.189492Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.189601Z	        
2025-09-17T00:39:58.18971Z	    _id,
2025-09-17T00:39:58.189768Z	    _type,
2025-09-17T00:39:58.189866Z	    partNumber,
2025-09-17T00:39:58.189985Z	    "slug": slug.current,
2025-09-17T00:39:58.190083Z	    title,
2025-09-17T00:39:58.190377Z	    shortDescription,
2025-09-17T00:39:58.190594Z	    image,
2025-09-17T00:39:58.19074Z	    brand->{
2025-09-17T00:39:58.1909Z	      name,
2025-09-17T00:39:58.191022Z	      "slug": slug.current,
2025-09-17T00:39:58.191136Z	      logo
2025-09-17T00:39:58.191251Z	    },
2025-09-17T00:39:58.191381Z	    category->{
2025-09-17T00:39:58.191631Z	      name,
2025-09-17T00:39:58.191808Z	      "slug": slug.current
2025-09-17T00:39:58.1919Z	    },
2025-09-17T00:39:58.191996Z	    pricing{
2025-09-17T00:39:58.192235Z	      currency,
2025-09-17T00:39:58.192381Z	      tiers[]{
2025-09-17T00:39:58.192501Z	        quantity,
2025-09-17T00:39:58.192647Z	        price,
2025-09-17T00:39:58.192781Z	        unit
2025-09-17T00:39:58.192891Z	      },
2025-09-17T00:39:58.193202Z	      moq,
2025-09-17T00:39:58.193308Z	      leadTime,
2025-09-17T00:39:58.193412Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.193523Z	      "price": tiers[0].price,
2025-09-17T00:39:58.193795Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.194014Z	    },
2025-09-17T00:39:58.19412Z	    inventory{
2025-09-17T00:39:58.194432Z	      quantity,
2025-09-17T00:39:58.194511Z	      status,
2025-09-17T00:39:58.194569Z	      warehouse,
2025-09-17T00:39:58.194758Z	      lastUpdated,
2025-09-17T00:39:58.194944Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.195235Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.195483Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.195577Z	    },
2025-09-17T00:39:58.195706Z	    isActive,
2025-09-17T00:39:58.19584Z	    isFeatured,
2025-09-17T00:39:58.195922Z	    isNew,
2025-09-17T00:39:58.196015Z	    _createdAt,
2025-09-17T00:39:58.196105Z	    _updatedAt
2025-09-17T00:39:58.196233Z	  
2025-09-17T00:39:58.196354Z	      },
2025-09-17T00:39:58.19649Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-17T00:39:58.196582Z	    }
2025-09-17T00:39:58.196696Z	  
2025-09-17T00:39:58.196828Z	Query parameters: {
2025-09-17T00:39:58.196987Z	  limit: 8,
2025-09-17T00:39:58.197091Z	  offset: 0,
2025-09-17T00:39:58.197389Z	  category: undefined,
2025-09-17T00:39:58.19748Z	  brand: 'cree',
2025-09-17T00:39:58.197614Z	  featured: undefined
2025-09-17T00:39:58.197703Z	}
2025-09-17T00:39:58.197763Z	Fetching solutions with query: 
2025-09-17T00:39:58.19788Z	    {
2025-09-17T00:39:58.198147Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.198235Z	        
2025-09-17T00:39:58.198509Z	    _id,
2025-09-17T00:39:58.198717Z	    title,
2025-09-17T00:39:58.198933Z	    "slug": slug.current,
2025-09-17T00:39:58.19911Z	    summary,
2025-09-17T00:39:58.199241Z	    description,
2025-09-17T00:39:58.199364Z	    coverImage,
2025-09-17T00:39:58.199436Z	    primaryBrand->{
2025-09-17T00:39:58.199588Z	      _id,
2025-09-17T00:39:58.199723Z	      name,
2025-09-17T00:39:58.199808Z	      "slug": slug.current,
2025-09-17T00:39:58.199925Z	      logo
2025-09-17T00:39:58.200028Z	    },
2025-09-17T00:39:58.200162Z	    relatedBrands[]->{
2025-09-17T00:39:58.200304Z	      _id,
2025-09-17T00:39:58.200403Z	      name,
2025-09-17T00:39:58.200515Z	      "slug": slug.current,
2025-09-17T00:39:58.20062Z	      logo
2025-09-17T00:39:58.200736Z	    },
2025-09-17T00:39:58.200835Z	    targetMarket,
2025-09-17T00:39:58.200924Z	    complexity,
2025-09-17T00:39:58.201094Z	    publishedAt,
2025-09-17T00:39:58.201194Z	    isPublished,
2025-09-17T00:39:58.201317Z	    isFeatured,
2025-09-17T00:39:58.201421Z	    viewCount,
2025-09-17T00:39:58.201523Z	    _createdAt,
2025-09-17T00:39:58.201604Z	    _updatedAt
2025-09-17T00:39:58.201708Z	  
2025-09-17T00:39:58.201803Z	      },
2025-09-17T00:39:58.201902Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-17T00:39:58.202011Z	    }
2025-09-17T00:39:58.202101Z	  
2025-09-17T00:39:58.202195Z	Query parameters: {
2025-09-17T00:39:58.202309Z	  limit: 4,
2025-09-17T00:39:58.202384Z	  offset: 0,
2025-09-17T00:39:58.202443Z	  targetMarket: undefined,
2025-09-17T00:39:58.2025Z	  brand: 'cree',
2025-09-17T00:39:58.202554Z	  featured: undefined
2025-09-17T00:39:58.202608Z	}
2025-09-17T00:39:58.202685Z	✅ [getBrandData] Found brand: CREE
2025-09-17T00:39:58.202848Z	Products fetch result: {
2025-09-17T00:39:58.202942Z	  totalProducts: 4,
2025-09-17T00:39:58.203042Z	  fetchedProducts: 4,
2025-09-17T00:39:58.203146Z	  firstProduct: {
2025-09-17T00:39:58.203578Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-17T00:39:58.203757Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-17T00:39:58.203929Z	    _type: 'product',
2025-09-17T00:39:58.20407Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-17T00:39:58.204183Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-17T00:39:58.204479Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:58.204675Z	    image: null,
2025-09-17T00:39:58.20484Z	    inventory: {
2025-09-17T00:39:58.204985Z	      inStock: true,
2025-09-17T00:39:58.205132Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-17T00:39:58.205251Z	      quantity: 0,
2025-09-17T00:39:58.205383Z	      status: 'in_stock',
2025-09-17T00:39:58.205479Z	      warehouse: null
2025-09-17T00:39:58.205588Z	    },
2025-09-17T00:39:58.205689Z	    isActive: true,
2025-09-17T00:39:58.205789Z	    isFeatured: false,
2025-09-17T00:39:58.20589Z	    isNew: false,
2025-09-17T00:39:58.205998Z	    partNumber: '11111',
2025-09-17T00:39:58.206091Z	    pricing: {
2025-09-17T00:39:58.206196Z	      currency: 'CNY',
2025-09-17T00:39:58.206316Z	      leadTime: null,
2025-09-17T00:39:58.20642Z	      moq: null,
2025-09-17T00:39:58.206525Z	      price: null,
2025-09-17T00:39:58.206624Z	      tiers: null
2025-09-17T00:39:58.206718Z	    },
2025-09-17T00:39:58.206824Z	    shortDescription: '11111',
2025-09-17T00:39:58.206939Z	    slug: 'sic mosfet',
2025-09-17T00:39:58.207032Z	    title: '111111'
2025-09-17T00:39:58.207128Z	  }
2025-09-17T00:39:58.207221Z	}
2025-09-17T00:39:58.207364Z	Solutions fetch result: {
2025-09-17T00:39:58.207486Z	  totalSolutions: 6,
2025-09-17T00:39:58.207591Z	  fetchedSolutions: 4,
2025-09-17T00:39:58.207691Z	  firstSolution: {
2025-09-17T00:39:58.207795Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-17T00:39:58.207888Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-17T00:39:58.207997Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-17T00:39:58.208089Z	    complexity: 'medium',
2025-09-17T00:39:58.208193Z	    coverImage: null,
2025-09-17T00:39:58.208312Z	    description: [ [Object] ],
2025-09-17T00:39:58.208419Z	    isFeatured: false,
2025-09-17T00:39:58.208522Z	    isPublished: true,
2025-09-17T00:39:58.208622Z	    primaryBrand: {
2025-09-17T00:39:58.208715Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:58.208807Z	      logo: null,
2025-09-17T00:39:58.208898Z	      name: 'CREE',
2025-09-17T00:39:58.209007Z	      slug: 'cree'
2025-09-17T00:39:58.209107Z	    },
2025-09-17T00:39:58.209204Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-17T00:39:58.209324Z	    relatedBrands: null,
2025-09-17T00:39:58.209421Z	    slug: '11111',
2025-09-17T00:39:58.209511Z	    summary: '11111',
2025-09-17T00:39:58.209604Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:58.209716Z	    title: '11111',
2025-09-17T00:39:58.209812Z	    viewCount: 0
2025-09-17T00:39:58.209922Z	  }
2025-09-17T00:39:58.21009Z	}
2025-09-17T00:39:58.210204Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-17T00:39:58.210356Z	Fetching products with query: 
2025-09-17T00:39:58.210464Z	    {
2025-09-17T00:39:58.21057Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.210675Z	        
2025-09-17T00:39:58.210786Z	    _id,
2025-09-17T00:39:58.210894Z	    _type,
2025-09-17T00:39:58.21101Z	    partNumber,
2025-09-17T00:39:58.211116Z	    "slug": slug.current,
2025-09-17T00:39:58.211219Z	    title,
2025-09-17T00:39:58.21133Z	    shortDescription,
2025-09-17T00:39:58.211425Z	    image,
2025-09-17T00:39:58.211528Z	    brand->{
2025-09-17T00:39:58.211632Z	      name,
2025-09-17T00:39:58.211732Z	      "slug": slug.current,
2025-09-17T00:39:58.211832Z	      logo
2025-09-17T00:39:58.211931Z	    },
2025-09-17T00:39:58.212026Z	    category->{
2025-09-17T00:39:58.212115Z	      name,
2025-09-17T00:39:58.21222Z	      "slug": slug.current
2025-09-17T00:39:58.212347Z	    },
2025-09-17T00:39:58.212451Z	    pricing{
2025-09-17T00:39:58.212574Z	      currency,
2025-09-17T00:39:58.212686Z	      tiers[]{
2025-09-17T00:39:58.21279Z	        quantity,
2025-09-17T00:39:58.212893Z	        price,
2025-09-17T00:39:58.213009Z	        unit
2025-09-17T00:39:58.21312Z	      },
2025-09-17T00:39:58.213242Z	      moq,
2025-09-17T00:39:58.213363Z	      leadTime,
2025-09-17T00:39:58.213478Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:58.21359Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:58.213686Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-17T00:39:58.213784Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:39:58.213877Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424) {
2025-09-17T00:39:58.213961Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:39:58.214052Z	}
2025-09-17T00:39:58.214127Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:58.214208Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:58.21431Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-17T00:39:58.214389Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:39:58.214508Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424) {
2025-09-17T00:39:58.214627Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:39:58.214701Z	}
2025-09-17T00:39:58.214801Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.214909Z	      "price": tiers[0].price,
2025-09-17T00:39:58.214988Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.215048Z	    },
2025-09-17T00:39:58.215144Z	    inventory{
2025-09-17T00:39:58.215219Z	      quantity,
2025-09-17T00:39:58.215316Z	      status,
2025-09-17T00:39:58.215437Z	      warehouse,
2025-09-17T00:39:58.215548Z	      lastUpdated,
2025-09-17T00:39:58.215652Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.215754Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.215857Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.215966Z	    },
2025-09-17T00:39:58.216068Z	    isActive,
2025-09-17T00:39:58.216172Z	    isFeatured,
2025-09-17T00:39:58.216315Z	    isNew,
2025-09-17T00:39:58.216442Z	    _createdAt,
2025-09-17T00:39:58.21652Z	    _updatedAt
2025-09-17T00:39:58.216623Z	  
2025-09-17T00:39:58.21675Z	      },
2025-09-17T00:39:58.216863Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-17T00:39:58.217009Z	    }
2025-09-17T00:39:58.217113Z	  
2025-09-17T00:39:58.217217Z	Query parameters: {
2025-09-17T00:39:58.217359Z	  limit: 8,
2025-09-17T00:39:58.217462Z	  offset: 0,
2025-09-17T00:39:58.217577Z	  category: undefined,
2025-09-17T00:39:58.217747Z	  brand: 'cree',
2025-09-17T00:39:58.217903Z	  featured: undefined
2025-09-17T00:39:58.218011Z	}
2025-09-17T00:39:58.218178Z	Fetching solutions with query: 
2025-09-17T00:39:58.2183Z	    {
2025-09-17T00:39:58.218414Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.218567Z	        
2025-09-17T00:39:58.218714Z	    _id,
2025-09-17T00:39:58.219155Z	    title,
2025-09-17T00:39:58.219338Z	    "slug": slug.current,
2025-09-17T00:39:58.21945Z	    summary,
2025-09-17T00:39:58.219677Z	    description,
2025-09-17T00:39:58.219808Z	    coverImage,
2025-09-17T00:39:58.219988Z	    primaryBrand->{
2025-09-17T00:39:58.220104Z	      _id,
2025-09-17T00:39:58.22024Z	      name,
2025-09-17T00:39:58.22036Z	      "slug": slug.current,
2025-09-17T00:39:58.22048Z	      logo
2025-09-17T00:39:58.220592Z	    },
2025-09-17T00:39:58.220704Z	    relatedBrands[]->{
2025-09-17T00:39:58.220786Z	      _id,
2025-09-17T00:39:58.220863Z	      name,
2025-09-17T00:39:58.220977Z	      "slug": slug.current,
2025-09-17T00:39:58.22111Z	      logo
2025-09-17T00:39:58.2214Z	    },
2025-09-17T00:39:58.221488Z	    targetMarket,
2025-09-17T00:39:58.221599Z	    complexity,
2025-09-17T00:39:58.221746Z	    publishedAt,
2025-09-17T00:39:58.222055Z	    isPublished,
2025-09-17T00:39:58.222141Z	    isFeatured,
2025-09-17T00:39:58.222201Z	    viewCount,
2025-09-17T00:39:58.222348Z	    _createdAt,
2025-09-17T00:39:58.222439Z	    _updatedAt
2025-09-17T00:39:58.222546Z	  
2025-09-17T00:39:58.222646Z	      },
2025-09-17T00:39:58.22275Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-17T00:39:58.22288Z	    }
2025-09-17T00:39:58.222959Z	  
2025-09-17T00:39:58.223054Z	Query parameters: {
2025-09-17T00:39:58.223201Z	  limit: 4,
2025-09-17T00:39:58.223323Z	  offset: 0,
2025-09-17T00:39:58.223421Z	  targetMarket: undefined,
2025-09-17T00:39:58.223526Z	  brand: 'cree',
2025-09-17T00:39:58.223632Z	  featured: undefined
2025-09-17T00:39:58.223802Z	}
2025-09-17T00:39:58.223992Z	✅ [getBrandData] Found brand: CREE
2025-09-17T00:39:58.224091Z	Products fetch result: {
2025-09-17T00:39:58.2244Z	  totalProducts: 4,
2025-09-17T00:39:58.224484Z	  fetchedProducts: 4,
2025-09-17T00:39:58.224598Z	  firstProduct: {
2025-09-17T00:39:58.224697Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-17T00:39:58.224898Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-17T00:39:58.224989Z	    _type: 'product',
2025-09-17T00:39:58.225055Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-17T00:39:58.225112Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-17T00:39:58.225175Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:58.22525Z	    image: null,
2025-09-17T00:39:58.225359Z	    inventory: {
2025-09-17T00:39:58.22542Z	      inStock: true,
2025-09-17T00:39:58.225485Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-17T00:39:58.225541Z	      quantity: 0,
2025-09-17T00:39:58.225607Z	      status: 'in_stock',
2025-09-17T00:39:58.225695Z	      warehouse: null
2025-09-17T00:39:58.225766Z	    },
2025-09-17T00:39:58.225822Z	    isActive: true,
2025-09-17T00:39:58.225876Z	    isFeatured: false,
2025-09-17T00:39:58.225933Z	    isNew: false,
2025-09-17T00:39:58.225989Z	    partNumber: '11111',
2025-09-17T00:39:58.226048Z	    pricing: {
2025-09-17T00:39:58.226108Z	      currency: 'CNY',
2025-09-17T00:39:58.226163Z	      leadTime: null,
2025-09-17T00:39:58.226219Z	      moq: null,
2025-09-17T00:39:58.226288Z	      price: null,
2025-09-17T00:39:58.226354Z	      tiers: null
2025-09-17T00:39:58.226408Z	    },
2025-09-17T00:39:58.226464Z	    shortDescription: '11111',
2025-09-17T00:39:58.226518Z	    slug: 'sic mosfet',
2025-09-17T00:39:58.226577Z	    title: '111111'
2025-09-17T00:39:58.226631Z	  }
2025-09-17T00:39:58.22669Z	}
2025-09-17T00:39:58.226753Z	Solutions fetch result: {
2025-09-17T00:39:58.226813Z	  totalSolutions: 6,
2025-09-17T00:39:58.226867Z	  fetchedSolutions: 4,
2025-09-17T00:39:58.226933Z	  firstSolution: {
2025-09-17T00:39:58.22699Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-17T00:39:58.227044Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-17T00:39:58.227102Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-17T00:39:58.227157Z	    complexity: 'medium',
2025-09-17T00:39:58.227216Z	    coverImage: null,
2025-09-17T00:39:58.227279Z	    description: [ [Object] ],
2025-09-17T00:39:58.227336Z	    isFeatured: false,
2025-09-17T00:39:58.227405Z	    isPublished: true,
2025-09-17T00:39:58.227463Z	    primaryBrand: {
2025-09-17T00:39:58.227518Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:58.227574Z	      logo: null,
2025-09-17T00:39:58.227628Z	      name: 'CREE',
2025-09-17T00:39:58.227695Z	      slug: 'cree'
2025-09-17T00:39:58.227751Z	    },
2025-09-17T00:39:58.227804Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-17T00:39:58.227871Z	    relatedBrands: null,
2025-09-17T00:39:58.227933Z	    slug: '11111',
2025-09-17T00:39:58.22799Z	    summary: '11111',
2025-09-17T00:39:58.228045Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:58.2281Z	    title: '11111',
2025-09-17T00:39:58.228155Z	    viewCount: 0
2025-09-17T00:39:58.228218Z	  }
2025-09-17T00:39:58.22829Z	}
2025-09-17T00:39:58.228347Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.228418Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.228484Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-17T00:39:58.228549Z	Fetching products with query: 
2025-09-17T00:39:58.228605Z	    {
2025-09-17T00:39:58.228666Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.228724Z	        
2025-09-17T00:39:58.228778Z	    _id,
2025-09-17T00:39:58.228833Z	    _type,
2025-09-17T00:39:58.228888Z	    partNumber,
2025-09-17T00:39:58.228942Z	    "slug": slug.current,
2025-09-17T00:39:58.228995Z	    title,
2025-09-17T00:39:58.229048Z	    shortDescription,
2025-09-17T00:39:58.229101Z	    image,
2025-09-17T00:39:58.229154Z	    brand->{
2025-09-17T00:39:58.229207Z	      name,
2025-09-17T00:39:58.229274Z	      "slug": slug.current,
2025-09-17T00:39:58.229332Z	      logo
2025-09-17T00:39:58.229386Z	    },
2025-09-17T00:39:58.229443Z	    category->{
2025-09-17T00:39:58.229497Z	      name,
2025-09-17T00:39:58.22955Z	      "slug": slug.current
2025-09-17T00:39:58.229605Z	    },
2025-09-17T00:39:58.229665Z	    pricing{
2025-09-17T00:39:58.229726Z	      currency,
2025-09-17T00:39:58.229793Z	      tiers[]{
2025-09-17T00:39:58.229849Z	        quantity,
2025-09-17T00:39:58.22991Z	        price,
2025-09-17T00:39:58.229966Z	        unit
2025-09-17T00:39:58.230022Z	      },
2025-09-17T00:39:58.230083Z	      moq,
2025-09-17T00:39:58.23016Z	      leadTime,
2025-09-17T00:39:58.230223Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.230302Z	      "price": tiers[0].price,
2025-09-17T00:39:58.230375Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.230432Z	    },
2025-09-17T00:39:58.230487Z	    inventory{
2025-09-17T00:39:58.230543Z	      quantity,
2025-09-17T00:39:58.230602Z	      status,
2025-09-17T00:39:58.230673Z	      warehouse,
2025-09-17T00:39:58.230734Z	      lastUpdated,
2025-09-17T00:39:58.230791Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.230848Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.230903Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.230958Z	    },
2025-09-17T00:39:58.231012Z	    isActive,
2025-09-17T00:39:58.231073Z	    isFeatured,
2025-09-17T00:39:58.231126Z	    isNew,
2025-09-17T00:39:58.231181Z	    _createdAt,
2025-09-17T00:39:58.231236Z	    _updatedAt
2025-09-17T00:39:58.231309Z	  
2025-09-17T00:39:58.231367Z	      },
2025-09-17T00:39:58.231425Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-17T00:39:58.231496Z	    }
2025-09-17T00:39:58.231552Z	  
2025-09-17T00:39:58.231606Z	Query parameters: {
2025-09-17T00:39:58.231667Z	  limit: 8,
2025-09-17T00:39:58.231722Z	  offset: 0,
2025-09-17T00:39:58.231783Z	  category: undefined,
2025-09-17T00:39:58.231837Z	  brand: 'ixys',
2025-09-17T00:39:58.231891Z	  featured: undefined
2025-09-17T00:39:58.231945Z	}
2025-09-17T00:39:58.231998Z	Fetching solutions with query: 
2025-09-17T00:39:58.232052Z	    {
2025-09-17T00:39:58.232108Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.232163Z	        
2025-09-17T00:39:58.233201Z	    _id,
2025-09-17T00:39:58.233339Z	    title,
2025-09-17T00:39:58.233595Z	    "slug": slug.current,
2025-09-17T00:39:58.233851Z	    summary,
2025-09-17T00:39:58.233957Z	    description,
2025-09-17T00:39:58.234377Z	    coverImage,
2025-09-17T00:39:58.234463Z	    primaryBrand->{
2025-09-17T00:39:58.234596Z	      _id,
2025-09-17T00:39:58.234895Z	      name,
2025-09-17T00:39:58.234974Z	      "slug": slug.current,
2025-09-17T00:39:58.235034Z	      logo
2025-09-17T00:39:58.235442Z	    },
2025-09-17T00:39:58.235543Z	    relatedBrands[]->{
2025-09-17T00:39:58.235605Z	      _id,
2025-09-17T00:39:58.235681Z	      name,
2025-09-17T00:39:58.235868Z	      "slug": slug.current,
2025-09-17T00:39:58.235957Z	      logo
2025-09-17T00:39:58.236021Z	    },
2025-09-17T00:39:58.236077Z	    targetMarket,
2025-09-17T00:39:58.236132Z	    complexity,
2025-09-17T00:39:58.236186Z	    publishedAt,
2025-09-17T00:39:58.236241Z	    isPublished,
2025-09-17T00:39:58.236332Z	    isFeatured,
2025-09-17T00:39:58.236642Z	    viewCount,
2025-09-17T00:39:58.236861Z	    _createdAt,
2025-09-17T00:39:58.2372Z	    _updatedAt
2025-09-17T00:39:58.237311Z	  
2025-09-17T00:39:58.237477Z	      },
2025-09-17T00:39:58.237694Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-17T00:39:58.237964Z	    }
2025-09-17T00:39:58.238052Z	  
2025-09-17T00:39:58.238254Z	Query parameters: {
2025-09-17T00:39:58.238382Z	  limit: 4,
2025-09-17T00:39:58.238453Z	  offset: 0,
2025-09-17T00:39:58.238531Z	  targetMarket: undefined,
2025-09-17T00:39:58.238601Z	  brand: 'ixys',
2025-09-17T00:39:58.238659Z	  featured: undefined
2025-09-17T00:39:58.238713Z	}
2025-09-17T00:39:58.238767Z	✅ [getBrandData] Found brand: IXYS
2025-09-17T00:39:58.238822Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:58.238882Z	Solutions fetch result: {
2025-09-17T00:39:58.238944Z	  totalSolutions: 1,
2025-09-17T00:39:58.238998Z	  fetchedSolutions: 1,
2025-09-17T00:39:58.239052Z	  firstSolution: {
2025-09-17T00:39:58.239105Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-17T00:39:58.239159Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-17T00:39:58.239214Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-17T00:39:58.239279Z	    complexity: 'medium',
2025-09-17T00:39:58.239349Z	    coverImage: null,
2025-09-17T00:39:58.239403Z	    description: [ [Object] ],
2025-09-17T00:39:58.239456Z	    isFeatured: false,
2025-09-17T00:39:58.239508Z	    isPublished: true,
2025-09-17T00:39:58.239567Z	    primaryBrand: {
2025-09-17T00:39:58.239621Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:58.239695Z	      logo: null,
2025-09-17T00:39:58.239752Z	      name: 'IXYS',
2025-09-17T00:39:58.239838Z	      slug: 'ixys'
2025-09-17T00:39:58.23993Z	    },
2025-09-17T00:39:58.239989Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-17T00:39:58.240042Z	    relatedBrands: null,
2025-09-17T00:39:58.240093Z	    slug: '99999',
2025-09-17T00:39:58.240145Z	    summary: '99999',
2025-09-17T00:39:58.2402Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:58.240285Z	    title: '99999',
2025-09-17T00:39:58.240357Z	    viewCount: 0
2025-09-17T00:39:58.240443Z	  }
2025-09-17T00:39:58.240652Z	}
2025-09-17T00:39:58.240974Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-17T00:39:58.241083Z	Fetching products with query: 
2025-09-17T00:39:58.241182Z	    {
2025-09-17T00:39:58.241292Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.241411Z	        
2025-09-17T00:39:58.241507Z	    _id,
2025-09-17T00:39:58.241606Z	    _type,
2025-09-17T00:39:58.241697Z	    partNumber,
2025-09-17T00:39:58.241788Z	    "slug": slug.current,
2025-09-17T00:39:58.241881Z	    title,
2025-09-17T00:39:58.241983Z	    shortDescription,
2025-09-17T00:39:58.242073Z	    image,
2025-09-17T00:39:58.242131Z	    brand->{
2025-09-17T00:39:58.24219Z	      name,
2025-09-17T00:39:58.2423Z	      "slug": slug.current,
2025-09-17T00:39:58.242406Z	      logo
2025-09-17T00:39:58.242519Z	    },
2025-09-17T00:39:58.242626Z	    category->{
2025-09-17T00:39:58.242731Z	      name,
2025-09-17T00:39:58.242834Z	      "slug": slug.current
2025-09-17T00:39:58.242938Z	    },
2025-09-17T00:39:58.243099Z	    pricing{
2025-09-17T00:39:58.243173Z	      currency,
2025-09-17T00:39:58.243273Z	      tiers[]{
2025-09-17T00:39:58.243369Z	        quantity,
2025-09-17T00:39:58.243476Z	        price,
2025-09-17T00:39:58.24358Z	        unit
2025-09-17T00:39:58.243685Z	      },
2025-09-17T00:39:58.243796Z	      moq,
2025-09-17T00:39:58.243911Z	      leadTime,
2025-09-17T00:39:58.244015Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.244124Z	      "price": tiers[0].price,
2025-09-17T00:39:58.244222Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.244343Z	    },
2025-09-17T00:39:58.244441Z	    inventory{
2025-09-17T00:39:58.244533Z	      quantity,
2025-09-17T00:39:58.244634Z	      status,
2025-09-17T00:39:58.244736Z	      warehouse,
2025-09-17T00:39:58.244837Z	      lastUpdated,
2025-09-17T00:39:58.244948Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.245028Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.245297Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.245438Z	    },
2025-09-17T00:39:58.24556Z	    isActive,
2025-09-17T00:39:58.245661Z	    isFeatured,
2025-09-17T00:39:58.245769Z	    isNew,
2025-09-17T00:39:58.245869Z	    _createdAt,
2025-09-17T00:39:58.245978Z	    _updatedAt
2025-09-17T00:39:58.246078Z	  
2025-09-17T00:39:58.24618Z	      },
2025-09-17T00:39:58.246284Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-17T00:39:58.246389Z	    }
2025-09-17T00:39:58.246473Z	  
2025-09-17T00:39:58.246585Z	Query parameters: {
2025-09-17T00:39:58.246719Z	  limit: 8,
2025-09-17T00:39:58.246834Z	  offset: 0,
2025-09-17T00:39:58.246987Z	  category: undefined,
2025-09-17T00:39:58.247116Z	  brand: 'ixys',
2025-09-17T00:39:58.247228Z	  featured: undefined
2025-09-17T00:39:58.247379Z	}
2025-09-17T00:39:58.247506Z	Fetching solutions with query: 
2025-09-17T00:39:58.247605Z	    {
2025-09-17T00:39:58.247716Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.247858Z	        
2025-09-17T00:39:58.247996Z	    _id,
2025-09-17T00:39:58.248128Z	    title,
2025-09-17T00:39:58.248253Z	    "slug": slug.current,
2025-09-17T00:39:58.248413Z	    summary,
2025-09-17T00:39:58.248552Z	    description,
2025-09-17T00:39:58.248698Z	    coverImage,
2025-09-17T00:39:58.248836Z	    primaryBrand->{
2025-09-17T00:39:58.248975Z	      _id,
2025-09-17T00:39:58.249099Z	      name,
2025-09-17T00:39:58.249202Z	      "slug": slug.current,
2025-09-17T00:39:58.249367Z	      logo
2025-09-17T00:39:58.249472Z	    },
2025-09-17T00:39:58.249565Z	    relatedBrands[]->{
2025-09-17T00:39:58.249638Z	      _id,
2025-09-17T00:39:58.249771Z	      name,
2025-09-17T00:39:58.249895Z	      "slug": slug.current,
2025-09-17T00:39:58.249994Z	      logo
2025-09-17T00:39:58.2501Z	    },
2025-09-17T00:39:58.250223Z	    targetMarket,
2025-09-17T00:39:58.25034Z	    complexity,
2025-09-17T00:39:58.250438Z	    publishedAt,
2025-09-17T00:39:58.25056Z	    isPublished,
2025-09-17T00:39:58.250692Z	    isFeatured,
2025-09-17T00:39:58.250837Z	    viewCount,
2025-09-17T00:39:58.250975Z	    _createdAt,
2025-09-17T00:39:58.251104Z	    _updatedAt
2025-09-17T00:39:58.251285Z	  
2025-09-17T00:39:58.251429Z	      },
2025-09-17T00:39:58.251698Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-17T00:39:58.251821Z	    }
2025-09-17T00:39:58.251955Z	  
2025-09-17T00:39:58.252091Z	Query parameters: {
2025-09-17T00:39:58.25226Z	  limit: 4,
2025-09-17T00:39:58.252411Z	  offset: 0,
2025-09-17T00:39:58.252558Z	  targetMarket: undefined,
2025-09-17T00:39:58.252679Z	  brand: 'ixys',
2025-09-17T00:39:58.252787Z	  featured: undefined
2025-09-17T00:39:58.252883Z	}
2025-09-17T00:39:58.252995Z	✅ [getBrandData] Found brand: IXYS
2025-09-17T00:39:58.257801Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:58.258402Z	Solutions fetch result: {
2025-09-17T00:39:58.270617Z	  totalSolutions: 1,
2025-09-17T00:39:58.270856Z	  fetchedSolutions: 1,
2025-09-17T00:39:58.27101Z	  firstSolution: {
2025-09-17T00:39:58.271148Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-17T00:39:58.271261Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-17T00:39:58.273713Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-17T00:39:58.273868Z	    complexity: 'medium',
2025-09-17T00:39:58.273991Z	    coverImage: null,
2025-09-17T00:39:58.274127Z	    description: [ [Object] ],
2025-09-17T00:39:58.27424Z	    isFeatured: false,
2025-09-17T00:39:58.274384Z	    isPublished: true,
2025-09-17T00:39:58.274499Z	    primaryBrand: {
2025-09-17T00:39:58.27547Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:58.27564Z	      logo: null,
2025-09-17T00:39:58.275758Z	      name: 'IXYS',
2025-09-17T00:39:58.275883Z	      slug: 'ixys'
2025-09-17T00:39:58.275999Z	    },
2025-09-17T00:39:58.276134Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-17T00:39:58.276247Z	    relatedBrands: null,
2025-09-17T00:39:58.276379Z	    slug: '99999',
2025-09-17T00:39:58.276485Z	    summary: '99999',
2025-09-17T00:39:58.276589Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:58.276712Z	    title: '99999',
2025-09-17T00:39:58.276823Z	    viewCount: 0
2025-09-17T00:39:58.276922Z	  }
2025-09-17T00:39:58.277036Z	}
2025-09-17T00:39:58.277146Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-17T00:39:58.277256Z	Fetching products with query: 
2025-09-17T00:39:58.277389Z	    {
2025-09-17T00:39:58.277511Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.278036Z	        
2025-09-17T00:39:58.278191Z	    _id,
2025-09-17T00:39:58.278324Z	    _type,
2025-09-17T00:39:58.27843Z	    partNumber,
2025-09-17T00:39:58.278531Z	    "slug": slug.current,
2025-09-17T00:39:58.278625Z	    title,
2025-09-17T00:39:58.278716Z	    shortDescription,
2025-09-17T00:39:58.278807Z	    image,
2025-09-17T00:39:58.278909Z	    brand->{
2025-09-17T00:39:58.279Z	      name,
2025-09-17T00:39:58.279102Z	      "slug": slug.current,
2025-09-17T00:39:58.279199Z	      logo
2025-09-17T00:39:58.279323Z	    },
2025-09-17T00:39:58.279432Z	    category->{
2025-09-17T00:39:58.279527Z	      name,
2025-09-17T00:39:58.279615Z	      "slug": slug.current
2025-09-17T00:39:58.279703Z	    },
2025-09-17T00:39:58.279786Z	    pricing{
2025-09-17T00:39:58.279875Z	      currency,
2025-09-17T00:39:58.279959Z	      tiers[]{
2025-09-17T00:39:58.280077Z	        quantity,
2025-09-17T00:39:58.28018Z	        price,
2025-09-17T00:39:58.28029Z	        unit
2025-09-17T00:39:58.2804Z	      },
2025-09-17T00:39:58.280513Z	      moq,
2025-09-17T00:39:58.280603Z	      leadTime,
2025-09-17T00:39:58.280695Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.280788Z	      "price": tiers[0].price,
2025-09-17T00:39:58.280886Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.280978Z	    },
2025-09-17T00:39:58.281122Z	    inventory{
2025-09-17T00:39:58.281335Z	      quantity,
2025-09-17T00:39:58.281469Z	      status,
2025-09-17T00:39:58.281623Z	      warehouse,
2025-09-17T00:39:58.281739Z	      lastUpdated,
2025-09-17T00:39:58.282264Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.282451Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.282572Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.282671Z	    },
2025-09-17T00:39:58.282766Z	    isActive,
2025-09-17T00:39:58.282866Z	    isFeatured,
2025-09-17T00:39:58.282958Z	    isNew,
2025-09-17T00:39:58.283058Z	    _createdAt,
2025-09-17T00:39:58.283163Z	    _updatedAt
2025-09-17T00:39:58.28328Z	  
2025-09-17T00:39:58.283389Z	      },
2025-09-17T00:39:58.283505Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-17T00:39:58.283622Z	    }
2025-09-17T00:39:58.283717Z	  
2025-09-17T00:39:58.283803Z	Query parameters: {
2025-09-17T00:39:58.283891Z	  limit: 8,
2025-09-17T00:39:58.283979Z	  offset: 0,
2025-09-17T00:39:58.284099Z	  category: undefined,
2025-09-17T00:39:58.284207Z	  brand: 'semikron',
2025-09-17T00:39:58.287408Z	  featured: undefined
2025-09-17T00:39:58.287538Z	}
2025-09-17T00:39:58.287652Z	Fetching solutions with query: 
2025-09-17T00:39:58.287755Z	    {
2025-09-17T00:39:58.287861Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.287967Z	        
2025-09-17T00:39:58.288086Z	    _id,
2025-09-17T00:39:58.288194Z	    title,
2025-09-17T00:39:58.288326Z	    "slug": slug.current,
2025-09-17T00:39:58.288443Z	    summary,
2025-09-17T00:39:58.288593Z	    description,
2025-09-17T00:39:58.288777Z	    coverImage,
2025-09-17T00:39:58.288911Z	    primaryBrand->{
2025-09-17T00:39:58.289042Z	      _id,
2025-09-17T00:39:58.289155Z	      name,
2025-09-17T00:39:58.289297Z	      "slug": slug.current,
2025-09-17T00:39:58.289671Z	      logo
2025-09-17T00:39:58.290207Z	    },
2025-09-17T00:39:58.290527Z	    relatedBrands[]->{
2025-09-17T00:39:58.290976Z	      _id,
2025-09-17T00:39:58.291311Z	      name,
2025-09-17T00:39:58.291627Z	      "slug": slug.current,
2025-09-17T00:39:58.29207Z	      logo
2025-09-17T00:39:58.292464Z	    },
2025-09-17T00:39:58.292929Z	    targetMarket,
2025-09-17T00:39:58.293095Z	    complexity,
2025-09-17T00:39:58.293251Z	    publishedAt,
2025-09-17T00:39:58.293403Z	    isPublished,
2025-09-17T00:39:58.293829Z	    isFeatured,
2025-09-17T00:39:58.294Z	    viewCount,
2025-09-17T00:39:58.294123Z	    _createdAt,
2025-09-17T00:39:58.294404Z	    _updatedAt
2025-09-17T00:39:58.294797Z	  
2025-09-17T00:39:58.294975Z	      },
2025-09-17T00:39:58.295158Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-17T00:39:58.295526Z	    }
2025-09-17T00:39:58.296146Z	  
2025-09-17T00:39:58.296305Z	Query parameters: {
2025-09-17T00:39:58.296644Z	  limit: 4,
2025-09-17T00:39:58.296971Z	  offset: 0,
2025-09-17T00:39:58.297285Z	  targetMarket: undefined,
2025-09-17T00:39:58.297616Z	  brand: 'semikron',
2025-09-17T00:39:58.297741Z	  featured: undefined
2025-09-17T00:39:58.297838Z	}
2025-09-17T00:39:58.297942Z	✅ [getBrandData] Found brand: Semikron
2025-09-17T00:39:58.298068Z	Products fetch result: {
2025-09-17T00:39:58.298178Z	  totalProducts: 1,
2025-09-17T00:39:58.298313Z	  fetchedProducts: 1,
2025-09-17T00:39:58.298421Z	  firstProduct: {
2025-09-17T00:39:58.298786Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-17T00:39:58.29914Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-17T00:39:58.299371Z	    _type: 'product',
2025-09-17T00:39:58.299492Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-17T00:39:58.299728Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-17T00:39:58.299891Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:58.300084Z	    image: null,
2025-09-17T00:39:58.30019Z	    inventory: {
2025-09-17T00:39:58.300355Z	      inStock: true,
2025-09-17T00:39:58.300498Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-17T00:39:58.300642Z	      quantity: 0,
2025-09-17T00:39:58.300797Z	      status: 'in_stock',
2025-09-17T00:39:58.300965Z	      warehouse: null
2025-09-17T00:39:58.301175Z	    },
2025-09-17T00:39:58.301334Z	    isActive: true,
2025-09-17T00:39:58.301471Z	    isFeatured: false,
2025-09-17T00:39:58.301575Z	    isNew: false,
2025-09-17T00:39:58.301671Z	    partNumber: 'SKKT106/16E',
2025-09-17T00:39:58.301779Z	    pricing: {
2025-09-17T00:39:58.301885Z	      currency: 'CNY',
2025-09-17T00:39:58.30205Z	      leadTime: null,
2025-09-17T00:39:58.302173Z	      moq: null,
2025-09-17T00:39:58.302316Z	      price: null,
2025-09-17T00:39:58.302438Z	      tiers: null
2025-09-17T00:39:58.302554Z	    },
2025-09-17T00:39:58.302648Z	    shortDescription: 'SKKT106/16E',
2025-09-17T00:39:58.302842Z	    slug: 'SKKT106/16E',
2025-09-17T00:39:58.302958Z	    title: 'SKKT106/16E'
2025-09-17T00:39:58.303106Z	  }
2025-09-17T00:39:58.303184Z	}
2025-09-17T00:39:58.303285Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.303408Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-17T00:39:58.303513Z	Fetching products with query: 
2025-09-17T00:39:58.303615Z	    {
2025-09-17T00:39:58.303718Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.303827Z	        
2025-09-17T00:39:58.303929Z	    _id,
2025-09-17T00:39:58.30406Z	    _type,
2025-09-17T00:39:58.304176Z	    partNumber,
2025-09-17T00:39:58.304309Z	    "slug": slug.current,
2025-09-17T00:39:58.304437Z	    title,
2025-09-17T00:39:58.304561Z	    shortDescription,
2025-09-17T00:39:58.304672Z	    image,
2025-09-17T00:39:58.304795Z	    brand->{
2025-09-17T00:39:58.304912Z	      name,
2025-09-17T00:39:58.305045Z	      "slug": slug.current,
2025-09-17T00:39:58.305341Z	      logo
2025-09-17T00:39:58.305477Z	    },
2025-09-17T00:39:58.305585Z	    category->{
2025-09-17T00:39:58.305692Z	      name,
2025-09-17T00:39:58.305787Z	      "slug": slug.current
2025-09-17T00:39:58.305876Z	    },
2025-09-17T00:39:58.305966Z	    pricing{
2025-09-17T00:39:58.306073Z	      currency,
2025-09-17T00:39:58.306188Z	      tiers[]{
2025-09-17T00:39:58.306327Z	        quantity,
2025-09-17T00:39:58.306458Z	        price,
2025-09-17T00:39:58.306559Z	        unit
2025-09-17T00:39:58.30668Z	      },
2025-09-17T00:39:58.306806Z	      moq,
2025-09-17T00:39:58.306919Z	      leadTime,
2025-09-17T00:39:58.307039Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.30716Z	      "price": tiers[0].price,
2025-09-17T00:39:58.307321Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.307449Z	    },
2025-09-17T00:39:58.307581Z	    inventory{
2025-09-17T00:39:58.307729Z	      quantity,
2025-09-17T00:39:58.307847Z	      status,
2025-09-17T00:39:58.307952Z	      warehouse,
2025-09-17T00:39:58.308059Z	      lastUpdated,
2025-09-17T00:39:58.308179Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.308326Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.308456Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.308588Z	    },
2025-09-17T00:39:58.308689Z	    isActive,
2025-09-17T00:39:58.30882Z	    isFeatured,
2025-09-17T00:39:58.308931Z	    isNew,
2025-09-17T00:39:58.309051Z	    _createdAt,
2025-09-17T00:39:58.309157Z	    _updatedAt
2025-09-17T00:39:58.30926Z	  
2025-09-17T00:39:58.309409Z	      },
2025-09-17T00:39:58.309516Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-17T00:39:58.309651Z	    }
2025-09-17T00:39:58.309989Z	  
2025-09-17T00:39:58.310108Z	Query parameters: {
2025-09-17T00:39:58.310203Z	  limit: 8,
2025-09-17T00:39:58.310289Z	  offset: 0,
2025-09-17T00:39:58.310392Z	  category: undefined,
2025-09-17T00:39:58.310492Z	  brand: 'semikron',
2025-09-17T00:39:58.310622Z	  featured: undefined
2025-09-17T00:39:58.310758Z	}
2025-09-17T00:39:58.310866Z	Fetching solutions with query: 
2025-09-17T00:39:58.310991Z	    {
2025-09-17T00:39:58.3111Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.311206Z	        
2025-09-17T00:39:58.311343Z	    _id,
2025-09-17T00:39:58.311485Z	    title,
2025-09-17T00:39:58.311613Z	    "slug": slug.current,
2025-09-17T00:39:58.31171Z	    summary,
2025-09-17T00:39:58.311816Z	    description,
2025-09-17T00:39:58.311922Z	    coverImage,
2025-09-17T00:39:58.312024Z	    primaryBrand->{
2025-09-17T00:39:58.31212Z	      _id,
2025-09-17T00:39:58.312225Z	      name,
2025-09-17T00:39:58.312368Z	      "slug": slug.current,
2025-09-17T00:39:58.312521Z	      logo
2025-09-17T00:39:58.312618Z	    },
2025-09-17T00:39:58.312678Z	    relatedBrands[]->{
2025-09-17T00:39:58.31284Z	      _id,
2025-09-17T00:39:58.312952Z	      name,
2025-09-17T00:39:58.313077Z	      "slug": slug.current,
2025-09-17T00:39:58.313214Z	      logo
2025-09-17T00:39:58.313367Z	    },
2025-09-17T00:39:58.313478Z	    targetMarket,
2025-09-17T00:39:58.313579Z	    complexity,
2025-09-17T00:39:58.313679Z	    publishedAt,
2025-09-17T00:39:58.313799Z	    isPublished,
2025-09-17T00:39:58.313901Z	    isFeatured,
2025-09-17T00:39:58.314011Z	    viewCount,
2025-09-17T00:39:58.314109Z	    _createdAt,
2025-09-17T00:39:58.314196Z	    _updatedAt
2025-09-17T00:39:58.314288Z	  
2025-09-17T00:39:58.314384Z	      },
2025-09-17T00:39:58.314476Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-17T00:39:58.314559Z	    }
2025-09-17T00:39:58.31464Z	  
2025-09-17T00:39:58.314731Z	Query parameters: {
2025-09-17T00:39:58.314817Z	  limit: 4,
2025-09-17T00:39:58.31491Z	  offset: 0,
2025-09-17T00:39:58.315171Z	  targetMarket: undefined,
2025-09-17T00:39:58.315494Z	  brand: 'semikron',
2025-09-17T00:39:58.315764Z	  featured: undefined
2025-09-17T00:39:58.316075Z	}
2025-09-17T00:39:58.316231Z	✅ [getBrandData] Found brand: Semikron
2025-09-17T00:39:58.316374Z	Products fetch result: {
2025-09-17T00:39:58.31653Z	  totalProducts: 1,
2025-09-17T00:39:58.316634Z	  fetchedProducts: 1,
2025-09-17T00:39:58.316735Z	  firstProduct: {
2025-09-17T00:39:58.316927Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-17T00:39:58.317038Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-17T00:39:58.317101Z	    _type: 'product',
2025-09-17T00:39:58.317157Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-17T00:39:58.317215Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-17T00:39:58.31729Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:58.317396Z	    image: null,
2025-09-17T00:39:58.3175Z	    inventory: {
2025-09-17T00:39:58.317635Z	      inStock: true,
2025-09-17T00:39:58.317729Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-17T00:39:58.31807Z	      quantity: 0,
2025-09-17T00:39:58.31816Z	      status: 'in_stock',
2025-09-17T00:39:58.318503Z	      warehouse: null
2025-09-17T00:39:58.318593Z	    },
2025-09-17T00:39:58.318655Z	    isActive: true,
2025-09-17T00:39:58.318986Z	    isFeatured: false,
2025-09-17T00:39:58.319077Z	    isNew: false,
2025-09-17T00:39:58.319302Z	    partNumber: 'SKKT106/16E',
2025-09-17T00:39:58.319528Z	    pricing: {
2025-09-17T00:39:58.319618Z	      currency: 'CNY',
2025-09-17T00:39:58.319831Z	      leadTime: null,
2025-09-17T00:39:58.320053Z	      moq: null,
2025-09-17T00:39:58.320275Z	      price: null,
2025-09-17T00:39:58.32049Z	      tiers: null
2025-09-17T00:39:58.320716Z	    },
2025-09-17T00:39:58.320932Z	    shortDescription: 'SKKT106/16E',
2025-09-17T00:39:58.321064Z	    slug: 'SKKT106/16E',
2025-09-17T00:39:58.32118Z	    title: 'SKKT106/16E'
2025-09-17T00:39:58.321448Z	  }
2025-09-17T00:39:58.321532Z	}
2025-09-17T00:39:58.321637Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.321772Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-17T00:39:58.321903Z	Fetching products with query: 
2025-09-17T00:39:58.322006Z	    {
2025-09-17T00:39:58.322115Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.322212Z	        
2025-09-17T00:39:58.32265Z	    _id,
2025-09-17T00:39:58.322881Z	    _type,
2025-09-17T00:39:58.323029Z	    partNumber,
2025-09-17T00:39:58.323298Z	    "slug": slug.current,
2025-09-17T00:39:58.323417Z	    title,
2025-09-17T00:39:58.32351Z	    shortDescription,
2025-09-17T00:39:58.323609Z	    image,
2025-09-17T00:39:58.323715Z	    brand->{
2025-09-17T00:39:58.323826Z	      name,
2025-09-17T00:39:58.32399Z	      "slug": slug.current,
2025-09-17T00:39:58.32408Z	      logo
2025-09-17T00:39:58.324209Z	    },
2025-09-17T00:39:58.324326Z	    category->{
2025-09-17T00:39:58.324432Z	      name,
2025-09-17T00:39:58.324527Z	      "slug": slug.current
2025-09-17T00:39:58.324618Z	    },
2025-09-17T00:39:58.324724Z	    pricing{
2025-09-17T00:39:58.324828Z	      currency,
2025-09-17T00:39:58.325176Z	      tiers[]{
2025-09-17T00:39:58.325419Z	        quantity,
2025-09-17T00:39:58.325632Z	        price,
2025-09-17T00:39:58.325723Z	        unit
2025-09-17T00:39:58.325824Z	      },
2025-09-17T00:39:58.32593Z	      moq,
2025-09-17T00:39:58.326016Z	      leadTime,
2025-09-17T00:39:58.326111Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.326219Z	      "price": tiers[0].price,
2025-09-17T00:39:58.326336Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.32644Z	    },
2025-09-17T00:39:58.326536Z	    inventory{
2025-09-17T00:39:58.326648Z	      quantity,
2025-09-17T00:39:58.326749Z	      status,
2025-09-17T00:39:58.326862Z	      warehouse,
2025-09-17T00:39:58.326968Z	      lastUpdated,
2025-09-17T00:39:58.327091Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.327192Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.327316Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.327388Z	    },
2025-09-17T00:39:58.32748Z	    isActive,
2025-09-17T00:39:58.327576Z	    isFeatured,
2025-09-17T00:39:58.327747Z	    isNew,
2025-09-17T00:39:58.327861Z	    _createdAt,
2025-09-17T00:39:58.327955Z	    _updatedAt
2025-09-17T00:39:58.328047Z	  
2025-09-17T00:39:58.328147Z	      },
2025-09-17T00:39:58.328247Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-17T00:39:58.328376Z	    }
2025-09-17T00:39:58.328475Z	  
2025-09-17T00:39:58.328563Z	Query parameters: {
2025-09-17T00:39:58.328631Z	  limit: 8,
2025-09-17T00:39:58.32875Z	  offset: 0,
2025-09-17T00:39:58.32887Z	  category: undefined,
2025-09-17T00:39:58.32899Z	  brand: 'lem',
2025-09-17T00:39:58.3291Z	  featured: undefined
2025-09-17T00:39:58.329193Z	}
2025-09-17T00:39:58.329304Z	Fetching solutions with query: 
2025-09-17T00:39:58.329412Z	    {
2025-09-17T00:39:58.329506Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.329737Z	        
2025-09-17T00:39:58.329979Z	    _id,
2025-09-17T00:39:58.330205Z	    title,
2025-09-17T00:39:58.330323Z	    "slug": slug.current,
2025-09-17T00:39:58.33043Z	    summary,
2025-09-17T00:39:58.330534Z	    description,
2025-09-17T00:39:58.330636Z	    coverImage,
2025-09-17T00:39:58.33074Z	    primaryBrand->{
2025-09-17T00:39:58.330974Z	      _id,
2025-09-17T00:39:58.331071Z	      name,
2025-09-17T00:39:58.331165Z	      "slug": slug.current,
2025-09-17T00:39:58.331235Z	      logo
2025-09-17T00:39:58.331326Z	    },
2025-09-17T00:39:58.331397Z	    relatedBrands[]->{
2025-09-17T00:39:58.331491Z	      _id,
2025-09-17T00:39:58.331592Z	      name,
2025-09-17T00:39:58.33168Z	      "slug": slug.current,
2025-09-17T00:39:58.331843Z	      logo
2025-09-17T00:39:58.331912Z	    },
2025-09-17T00:39:58.331974Z	    targetMarket,
2025-09-17T00:39:58.332068Z	    complexity,
2025-09-17T00:39:58.332154Z	    publishedAt,
2025-09-17T00:39:58.332244Z	    isPublished,
2025-09-17T00:39:58.332365Z	    isFeatured,
2025-09-17T00:39:58.332467Z	    viewCount,
2025-09-17T00:39:58.332589Z	    _createdAt,
2025-09-17T00:39:58.332694Z	    _updatedAt
2025-09-17T00:39:58.332801Z	  
2025-09-17T00:39:58.33291Z	      },
2025-09-17T00:39:58.333008Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-17T00:39:58.333133Z	    }
2025-09-17T00:39:58.333277Z	  
2025-09-17T00:39:58.333397Z	Query parameters: {
2025-09-17T00:39:58.333506Z	  limit: 4,
2025-09-17T00:39:58.333623Z	  offset: 0,
2025-09-17T00:39:58.333725Z	  targetMarket: undefined,
2025-09-17T00:39:58.333831Z	  brand: 'lem',
2025-09-17T00:39:58.333938Z	  featured: undefined
2025-09-17T00:39:58.334035Z	}
2025-09-17T00:39:58.334157Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-17T00:39:58.334294Z	Fetching products with query: 
2025-09-17T00:39:58.3344Z	    {
2025-09-17T00:39:58.334506Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.33462Z	        
2025-09-17T00:39:58.334692Z	    _id,
2025-09-17T00:39:58.334772Z	    _type,
2025-09-17T00:39:58.334911Z	    partNumber,
2025-09-17T00:39:58.335012Z	    "slug": slug.current,
2025-09-17T00:39:58.33512Z	    title,
2025-09-17T00:39:58.335228Z	    shortDescription,
2025-09-17T00:39:58.335343Z	    image,
2025-09-17T00:39:58.335464Z	    brand->{
2025-09-17T00:39:58.335562Z	      name,
2025-09-17T00:39:58.335672Z	      "slug": slug.current,
2025-09-17T00:39:58.335781Z	      logo
2025-09-17T00:39:58.335895Z	    },
2025-09-17T00:39:58.335993Z	    category->{
2025-09-17T00:39:58.336104Z	      name,
2025-09-17T00:39:58.336204Z	      "slug": slug.current
2025-09-17T00:39:58.336323Z	    },
2025-09-17T00:39:58.336403Z	    pricing{
2025-09-17T00:39:58.336503Z	      currency,
2025-09-17T00:39:58.336604Z	      tiers[]{
2025-09-17T00:39:58.336715Z	        quantity,
2025-09-17T00:39:58.336823Z	        price,
2025-09-17T00:39:58.336914Z	        unit
2025-09-17T00:39:58.336981Z	      },
2025-09-17T00:39:58.337091Z	      moq,
2025-09-17T00:39:58.33717Z	      leadTime,
2025-09-17T00:39:58.337255Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.337367Z	      "price": tiers[0].price,
2025-09-17T00:39:58.337448Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.337546Z	    },
2025-09-17T00:39:58.33766Z	    inventory{
2025-09-17T00:39:58.337763Z	      quantity,
2025-09-17T00:39:58.337862Z	      status,
2025-09-17T00:39:58.337965Z	      warehouse,
2025-09-17T00:39:58.338085Z	      lastUpdated,
2025-09-17T00:39:58.338185Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.338313Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.338393Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.338471Z	    },
2025-09-17T00:39:58.338579Z	    isActive,
2025-09-17T00:39:58.338671Z	    isFeatured,
2025-09-17T00:39:58.338815Z	    isNew,
2025-09-17T00:39:58.33891Z	    _createdAt,
2025-09-17T00:39:58.339025Z	    _updatedAt
2025-09-17T00:39:58.339131Z	  
2025-09-17T00:39:58.339232Z	      },
2025-09-17T00:39:58.339348Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-17T00:39:58.339462Z	    }
2025-09-17T00:39:58.339574Z	  
2025-09-17T00:39:58.339667Z	Query parameters: {
2025-09-17T00:39:58.339792Z	  limit: 8,
2025-09-17T00:39:58.339861Z	  offset: 0,
2025-09-17T00:39:58.339969Z	  category: undefined,
2025-09-17T00:39:58.34009Z	  brand: 'lem',
2025-09-17T00:39:58.340205Z	  featured: undefined
2025-09-17T00:39:58.340386Z	}
2025-09-17T00:39:58.340471Z	Fetching solutions with query: 
2025-09-17T00:39:58.34059Z	    {
2025-09-17T00:39:58.340675Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.340839Z	        
2025-09-17T00:39:58.340923Z	    _id,
2025-09-17T00:39:58.340984Z	    title,
2025-09-17T00:39:58.34118Z	    "slug": slug.current,
2025-09-17T00:39:58.341258Z	    summary,
2025-09-17T00:39:58.34143Z	    description,
2025-09-17T00:39:58.341525Z	    coverImage,
2025-09-17T00:39:58.341621Z	    primaryBrand->{
2025-09-17T00:39:58.341729Z	      _id,
2025-09-17T00:39:58.341843Z	      name,
2025-09-17T00:39:58.341951Z	      "slug": slug.current,
2025-09-17T00:39:58.342049Z	      logo
2025-09-17T00:39:58.342141Z	    },
2025-09-17T00:39:58.342235Z	    relatedBrands[]->{
2025-09-17T00:39:58.342382Z	      _id,
2025-09-17T00:39:58.342482Z	      name,
2025-09-17T00:39:58.342628Z	      "slug": slug.current,
2025-09-17T00:39:58.342713Z	      logo
2025-09-17T00:39:58.342819Z	    },
2025-09-17T00:39:58.342929Z	    targetMarket,
2025-09-17T00:39:58.343043Z	    complexity,
2025-09-17T00:39:58.34313Z	    publishedAt,
2025-09-17T00:39:58.343227Z	    isPublished,
2025-09-17T00:39:58.343338Z	    isFeatured,
2025-09-17T00:39:58.34347Z	    viewCount,
2025-09-17T00:39:58.343585Z	    _createdAt,
2025-09-17T00:39:58.343708Z	    _updatedAt
2025-09-17T00:39:58.343819Z	  
2025-09-17T00:39:58.343938Z	      },
2025-09-17T00:39:58.344069Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-17T00:39:58.344253Z	    }
2025-09-17T00:39:58.344464Z	  
2025-09-17T00:39:58.344539Z	Query parameters: {
2025-09-17T00:39:58.344638Z	  limit: 4,
2025-09-17T00:39:58.344794Z	  offset: 0,
2025-09-17T00:39:58.344899Z	  targetMarket: undefined,
2025-09-17T00:39:58.345023Z	  brand: 'lem',
2025-09-17T00:39:58.345108Z	  featured: undefined
2025-09-17T00:39:58.345573Z	}
2025-09-17T00:39:58.345699Z	Products fetch result: {
2025-09-17T00:39:58.3458Z	  totalProducts: 3,
2025-09-17T00:39:58.346204Z	  fetchedProducts: 3,
2025-09-17T00:39:58.346453Z	  firstProduct: {
2025-09-17T00:39:58.34655Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-17T00:39:58.346637Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-17T00:39:58.346966Z	    _type: 'product',
2025-09-17T00:39:58.347068Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-17T00:39:58.34739Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-17T00:39:58.347494Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-17T00:39:58.347815Z	    image: null,
2025-09-17T00:39:58.348036Z	    inventory: {
2025-09-17T00:39:58.348145Z	      inStock: true,
2025-09-17T00:39:58.348253Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-17T00:39:58.348366Z	      quantity: 0,
2025-09-17T00:39:58.348497Z	      status: 'in_stock',
2025-09-17T00:39:58.348602Z	      warehouse: null
2025-09-17T00:39:58.348844Z	    },
2025-09-17T00:39:58.348952Z	    isActive: true,
2025-09-17T00:39:58.349261Z	    isFeatured: false,
2025-09-17T00:39:58.3495Z	    isNew: false,
2025-09-17T00:39:58.34959Z	    partNumber: 'la55-p',
2025-09-17T00:39:58.349683Z	    pricing: {
2025-09-17T00:39:58.349846Z	      currency: 'CNY',
2025-09-17T00:39:58.349936Z	      leadTime: null,
2025-09-17T00:39:58.350043Z	      moq: null,
2025-09-17T00:39:58.350125Z	      price: null,
2025-09-17T00:39:58.350213Z	      tiers: null
2025-09-17T00:39:58.350322Z	    },
2025-09-17T00:39:58.350419Z	    shortDescription: '电流传感器la55-p',
2025-09-17T00:39:58.350526Z	    slug: 'la55-p',
2025-09-17T00:39:58.350597Z	    title: '电流传感器la55-p'
2025-09-17T00:39:58.35072Z	  }
2025-09-17T00:39:58.350866Z	}
2025-09-17T00:39:58.351001Z	Products fetch result: {
2025-09-17T00:39:58.35109Z	  totalProducts: 3,
2025-09-17T00:39:58.351156Z	  fetchedProducts: 3,
2025-09-17T00:39:58.351332Z	  firstProduct: {
2025-09-17T00:39:58.351433Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-17T00:39:58.351525Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-17T00:39:58.351627Z	    _type: 'product',
2025-09-17T00:39:58.351741Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-17T00:39:58.351855Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-17T00:39:58.35202Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-17T00:39:58.352112Z	    image: null,
2025-09-17T00:39:58.35223Z	    inventory: {
2025-09-17T00:39:58.35235Z	      inStock: true,
2025-09-17T00:39:58.352474Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-17T00:39:58.352583Z	      quantity: 0,
2025-09-17T00:39:58.352675Z	      status: 'in_stock',
2025-09-17T00:39:58.35279Z	      warehouse: null
2025-09-17T00:39:58.352888Z	    },
2025-09-17T00:39:58.35299Z	    isActive: true,
2025-09-17T00:39:58.353101Z	    isFeatured: false,
2025-09-17T00:39:58.353197Z	    isNew: false,
2025-09-17T00:39:58.353318Z	    partNumber: 'la55-p',
2025-09-17T00:39:58.353439Z	    pricing: {
2025-09-17T00:39:58.353555Z	      currency: 'CNY',
2025-09-17T00:39:58.353656Z	      leadTime: null,
2025-09-17T00:39:58.353727Z	      moq: null,
2025-09-17T00:39:58.353823Z	      price: null,
2025-09-17T00:39:58.353923Z	      tiers: null
2025-09-17T00:39:58.354028Z	    },
2025-09-17T00:39:58.35411Z	    shortDescription: '电流传感器la55-p',
2025-09-17T00:39:58.354224Z	    slug: 'la55-p',
2025-09-17T00:39:58.354339Z	    title: '电流传感器la55-p'
2025-09-17T00:39:58.354437Z	  }
2025-09-17T00:39:58.354528Z	}
2025-09-17T00:39:58.354713Z	✅ [getBrandData] Found brand: LEM
2025-09-17T00:39:58.354849Z	✅ [getBrandData] Found brand: LEM
2025-09-17T00:39:58.354992Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.355148Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.355253Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-17T00:39:58.355359Z	Fetching products with query: 
2025-09-17T00:39:58.355522Z	    {
2025-09-17T00:39:58.355604Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.355714Z	        
2025-09-17T00:39:58.355889Z	    _id,
2025-09-17T00:39:58.356018Z	    _type,
2025-09-17T00:39:58.356104Z	    partNumber,
2025-09-17T00:39:58.356225Z	    "slug": slug.current,
2025-09-17T00:39:58.356347Z	    title,
2025-09-17T00:39:58.356443Z	    shortDescription,
2025-09-17T00:39:58.356566Z	    image,
2025-09-17T00:39:58.3567Z	    brand->{
2025-09-17T00:39:58.356842Z	      name,
2025-09-17T00:39:58.357076Z	      "slug": slug.current,
2025-09-17T00:39:58.357236Z	      logo
2025-09-17T00:39:58.35742Z	    },
2025-09-17T00:39:58.357549Z	    category->{
2025-09-17T00:39:58.357652Z	      name,
2025-09-17T00:39:58.357792Z	      "slug": slug.current
2025-09-17T00:39:58.357959Z	    },
2025-09-17T00:39:58.358083Z	    pricing{
2025-09-17T00:39:58.358188Z	      currency,
2025-09-17T00:39:58.358444Z	      tiers[]{
2025-09-17T00:39:58.358538Z	        quantity,
2025-09-17T00:39:58.358767Z	        price,
2025-09-17T00:39:58.358864Z	        unit
2025-09-17T00:39:58.35909Z	      },
2025-09-17T00:39:58.35922Z	      moq,
2025-09-17T00:39:58.359503Z	      leadTime,
2025-09-17T00:39:58.35977Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.359869Z	      "price": tiers[0].price,
2025-09-17T00:39:58.360213Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.360375Z	    },
2025-09-17T00:39:58.360514Z	    inventory{
2025-09-17T00:39:58.360761Z	      quantity,
2025-09-17T00:39:58.360844Z	      status,
2025-09-17T00:39:58.360933Z	      warehouse,
2025-09-17T00:39:58.361074Z	      lastUpdated,
2025-09-17T00:39:58.361186Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.361451Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.361537Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.36163Z	    },
2025-09-17T00:39:58.362008Z	    isActive,
2025-09-17T00:39:58.362233Z	    isFeatured,
2025-09-17T00:39:58.362487Z	    isNew,
2025-09-17T00:39:58.362573Z	    _createdAt,
2025-09-17T00:39:58.362667Z	    _updatedAt
2025-09-17T00:39:58.362982Z	  
2025-09-17T00:39:58.363058Z	      },
2025-09-17T00:39:58.36313Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-17T00:39:58.363444Z	    }
2025-09-17T00:39:58.363575Z	  
2025-09-17T00:39:58.363768Z	Query parameters: {
2025-09-17T00:39:58.363852Z	  limit: 8,
2025-09-17T00:39:58.363911Z	  offset: 0,
2025-09-17T00:39:58.36397Z	  category: undefined,
2025-09-17T00:39:58.364081Z	  brand: 'sanrex',
2025-09-17T00:39:58.364153Z	  featured: undefined
2025-09-17T00:39:58.364216Z	}
2025-09-17T00:39:58.364348Z	Fetching solutions with query: 
2025-09-17T00:39:58.364412Z	    {
2025-09-17T00:39:58.364519Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.364593Z	        
2025-09-17T00:39:58.364722Z	    _id,
2025-09-17T00:39:58.364796Z	    title,
2025-09-17T00:39:58.364968Z	    "slug": slug.current,
2025-09-17T00:39:58.365092Z	    summary,
2025-09-17T00:39:58.365198Z	    description,
2025-09-17T00:39:58.365287Z	    coverImage,
2025-09-17T00:39:58.365384Z	    primaryBrand->{
2025-09-17T00:39:58.365502Z	      _id,
2025-09-17T00:39:58.365601Z	      name,
2025-09-17T00:39:58.365692Z	      "slug": slug.current,
2025-09-17T00:39:58.36582Z	      logo
2025-09-17T00:39:58.3659Z	    },
2025-09-17T00:39:58.366021Z	    relatedBrands[]->{
2025-09-17T00:39:58.366109Z	      _id,
2025-09-17T00:39:58.366172Z	      name,
2025-09-17T00:39:58.366356Z	      "slug": slug.current,
2025-09-17T00:39:58.366434Z	      logo
2025-09-17T00:39:58.366582Z	    },
2025-09-17T00:39:58.366721Z	    targetMarket,
2025-09-17T00:39:58.366822Z	    complexity,
2025-09-17T00:39:58.366974Z	    publishedAt,
2025-09-17T00:39:58.367138Z	    isPublished,
2025-09-17T00:39:58.367259Z	    isFeatured,
2025-09-17T00:39:58.36739Z	    viewCount,
2025-09-17T00:39:58.367496Z	    _createdAt,
2025-09-17T00:39:58.367613Z	    _updatedAt
2025-09-17T00:39:58.367711Z	  
2025-09-17T00:39:58.367825Z	      },
2025-09-17T00:39:58.367965Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-17T00:39:58.368089Z	    }
2025-09-17T00:39:58.368308Z	  
2025-09-17T00:39:58.36854Z	Query parameters: {
2025-09-17T00:39:58.36863Z	  limit: 4,
2025-09-17T00:39:58.368772Z	  offset: 0,
2025-09-17T00:39:58.368935Z	  targetMarket: undefined,
2025-09-17T00:39:58.369129Z	  brand: 'sanrex',
2025-09-17T00:39:58.369276Z	  featured: undefined
2025-09-17T00:39:58.369381Z	}
2025-09-17T00:39:58.369538Z	✅ [getBrandData] Found brand: Sanrex
2025-09-17T00:39:58.369681Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:58.369813Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.369956Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-17T00:39:58.37008Z	Fetching products with query: 
2025-09-17T00:39:58.37024Z	    {
2025-09-17T00:39:58.370424Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.370559Z	        
2025-09-17T00:39:58.370687Z	    _id,
2025-09-17T00:39:58.370794Z	    _type,
2025-09-17T00:39:58.370903Z	    partNumber,
2025-09-17T00:39:58.371027Z	    "slug": slug.current,
2025-09-17T00:39:58.37113Z	    title,
2025-09-17T00:39:58.371246Z	    shortDescription,
2025-09-17T00:39:58.37138Z	    image,
2025-09-17T00:39:58.371476Z	    brand->{
2025-09-17T00:39:58.371631Z	      name,
2025-09-17T00:39:58.37177Z	      "slug": slug.current,
2025-09-17T00:39:58.371924Z	      logo
2025-09-17T00:39:58.372047Z	    },
2025-09-17T00:39:58.372186Z	    category->{
2025-09-17T00:39:58.372341Z	      name,
2025-09-17T00:39:58.372442Z	      "slug": slug.current
2025-09-17T00:39:58.372593Z	    },
2025-09-17T00:39:58.372723Z	    pricing{
2025-09-17T00:39:58.372876Z	      currency,
2025-09-17T00:39:58.372978Z	      tiers[]{
2025-09-17T00:39:58.373074Z	        quantity,
2025-09-17T00:39:58.373172Z	        price,
2025-09-17T00:39:58.373297Z	        unit
2025-09-17T00:39:58.373397Z	      },
2025-09-17T00:39:58.373497Z	      moq,
2025-09-17T00:39:58.373589Z	      leadTime,
2025-09-17T00:39:58.373682Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.373778Z	      "price": tiers[0].price,
2025-09-17T00:39:58.373876Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.374002Z	    },
2025-09-17T00:39:58.374144Z	    inventory{
2025-09-17T00:39:58.374385Z	      quantity,
2025-09-17T00:39:58.374479Z	      status,
2025-09-17T00:39:58.374647Z	      warehouse,
2025-09-17T00:39:58.374802Z	      lastUpdated,
2025-09-17T00:39:58.374873Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.374944Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.375051Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.375253Z	    },
2025-09-17T00:39:58.375419Z	    isActive,
2025-09-17T00:39:58.375547Z	    isFeatured,
2025-09-17T00:39:58.375627Z	    isNew,
2025-09-17T00:39:58.375743Z	    _createdAt,
2025-09-17T00:39:58.375853Z	    _updatedAt
2025-09-17T00:39:58.375944Z	  
2025-09-17T00:39:58.376178Z	      },
2025-09-17T00:39:58.376315Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-17T00:39:58.376459Z	    }
2025-09-17T00:39:58.376597Z	  
2025-09-17T00:39:58.376785Z	Query parameters: {
2025-09-17T00:39:58.377008Z	  limit: 8,
2025-09-17T00:39:58.377119Z	  offset: 0,
2025-09-17T00:39:58.377222Z	  category: undefined,
2025-09-17T00:39:58.377346Z	  brand: 'sanrex',
2025-09-17T00:39:58.377514Z	  featured: undefined
2025-09-17T00:39:58.37765Z	}
2025-09-17T00:39:58.377752Z	Fetching solutions with query: 
2025-09-17T00:39:58.377815Z	    {
2025-09-17T00:39:58.377873Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.377976Z	        
2025-09-17T00:39:58.378062Z	    _id,
2025-09-17T00:39:58.378121Z	    title,
2025-09-17T00:39:58.378228Z	    "slug": slug.current,
2025-09-17T00:39:58.378319Z	    summary,
2025-09-17T00:39:58.378521Z	    description,
2025-09-17T00:39:58.378738Z	    coverImage,
2025-09-17T00:39:58.37894Z	    primaryBrand->{
2025-09-17T00:39:58.379026Z	      _id,
2025-09-17T00:39:58.379224Z	      name,
2025-09-17T00:39:58.379354Z	      "slug": slug.current,
2025-09-17T00:39:58.379478Z	      logo
2025-09-17T00:39:58.379633Z	    },
2025-09-17T00:39:58.379749Z	    relatedBrands[]->{
2025-09-17T00:39:58.379859Z	      _id,
2025-09-17T00:39:58.379965Z	      name,
2025-09-17T00:39:58.380079Z	      "slug": slug.current,
2025-09-17T00:39:58.380186Z	      logo
2025-09-17T00:39:58.380296Z	    },
2025-09-17T00:39:58.380405Z	    targetMarket,
2025-09-17T00:39:58.380505Z	    complexity,
2025-09-17T00:39:58.380601Z	    publishedAt,
2025-09-17T00:39:58.380703Z	    isPublished,
2025-09-17T00:39:58.380801Z	    isFeatured,
2025-09-17T00:39:58.380907Z	    viewCount,
2025-09-17T00:39:58.381011Z	    _createdAt,
2025-09-17T00:39:58.381115Z	    _updatedAt
2025-09-17T00:39:58.381216Z	  
2025-09-17T00:39:58.381537Z	      },
2025-09-17T00:39:58.381864Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-17T00:39:58.382236Z	    }
2025-09-17T00:39:58.382408Z	  
2025-09-17T00:39:58.382558Z	Query parameters: {
2025-09-17T00:39:58.382712Z	  limit: 4,
2025-09-17T00:39:58.382855Z	  offset: 0,
2025-09-17T00:39:58.382973Z	  targetMarket: undefined,
2025-09-17T00:39:58.383102Z	  brand: 'sanrex',
2025-09-17T00:39:58.383219Z	  featured: undefined
2025-09-17T00:39:58.383379Z	}
2025-09-17T00:39:58.383507Z	✅ [getBrandData] Found brand: Sanrex
2025-09-17T00:39:58.38363Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:58.383742Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.383876Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-17T00:39:58.383992Z	Fetching products with query: 
2025-09-17T00:39:58.3841Z	    {
2025-09-17T00:39:58.384223Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.384359Z	        
2025-09-17T00:39:58.384528Z	    _id,
2025-09-17T00:39:58.38464Z	    _type,
2025-09-17T00:39:58.384743Z	    partNumber,
2025-09-17T00:39:58.385233Z	    "slug": slug.current,
2025-09-17T00:39:58.385443Z	    title,
2025-09-17T00:39:58.385586Z	    shortDescription,
2025-09-17T00:39:58.385701Z	    image,
2025-09-17T00:39:58.385816Z	    brand->{
2025-09-17T00:39:58.385916Z	      name,
2025-09-17T00:39:58.386028Z	      "slug": slug.current,
2025-09-17T00:39:58.386133Z	      logo
2025-09-17T00:39:58.386246Z	    },
2025-09-17T00:39:58.386396Z	    category->{
2025-09-17T00:39:58.386511Z	      name,
2025-09-17T00:39:58.386617Z	      "slug": slug.current
2025-09-17T00:39:58.386725Z	    },
2025-09-17T00:39:58.386847Z	    pricing{
2025-09-17T00:39:58.386959Z	      currency,
2025-09-17T00:39:58.387067Z	      tiers[]{
2025-09-17T00:39:58.387172Z	        quantity,
2025-09-17T00:39:58.387289Z	        price,
2025-09-17T00:39:58.387402Z	        unit
2025-09-17T00:39:58.387508Z	      },
2025-09-17T00:39:58.387919Z	      moq,
2025-09-17T00:39:58.388069Z	      leadTime,
2025-09-17T00:39:58.388188Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.388315Z	      "price": tiers[0].price,
2025-09-17T00:39:58.388432Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.388538Z	    },
2025-09-17T00:39:58.388641Z	    inventory{
2025-09-17T00:39:58.388744Z	      quantity,
2025-09-17T00:39:58.388846Z	      status,
2025-09-17T00:39:58.388954Z	      warehouse,
2025-09-17T00:39:58.389062Z	      lastUpdated,
2025-09-17T00:39:58.389184Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.389316Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.389429Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.389535Z	    },
2025-09-17T00:39:58.389648Z	    isActive,
2025-09-17T00:39:58.389762Z	    isFeatured,
2025-09-17T00:39:58.389865Z	    isNew,
2025-09-17T00:39:58.390992Z	    _createdAt,
2025-09-17T00:39:58.391349Z	    _updatedAt
2025-09-17T00:39:58.391717Z	  
2025-09-17T00:39:58.392169Z	      },
2025-09-17T00:39:58.392328Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-17T00:39:58.392459Z	    }
2025-09-17T00:39:58.392738Z	  
2025-09-17T00:39:58.392885Z	Query parameters: {
2025-09-17T00:39:58.393055Z	  limit: 8,
2025-09-17T00:39:58.393174Z	  offset: 0,
2025-09-17T00:39:58.393313Z	  category: undefined,
2025-09-17T00:39:58.393452Z	  brand: 'ixys',
2025-09-17T00:39:58.393569Z	  featured: undefined
2025-09-17T00:39:58.39368Z	}
2025-09-17T00:39:58.393781Z	Fetching solutions with query: 
2025-09-17T00:39:58.393899Z	    {
2025-09-17T00:39:58.394022Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.394157Z	        
2025-09-17T00:39:58.39428Z	    _id,
2025-09-17T00:39:58.394437Z	    title,
2025-09-17T00:39:58.394543Z	    "slug": slug.current,
2025-09-17T00:39:58.394651Z	    summary,
2025-09-17T00:39:58.394756Z	    description,
2025-09-17T00:39:58.394862Z	    coverImage,
2025-09-17T00:39:58.394963Z	    primaryBrand->{
2025-09-17T00:39:58.395076Z	      _id,
2025-09-17T00:39:58.395194Z	      name,
2025-09-17T00:39:58.395335Z	      "slug": slug.current,
2025-09-17T00:39:58.395457Z	      logo
2025-09-17T00:39:58.395568Z	    },
2025-09-17T00:39:58.395679Z	    relatedBrands[]->{
2025-09-17T00:39:58.395792Z	      _id,
2025-09-17T00:39:58.395898Z	      name,
2025-09-17T00:39:58.396Z	      "slug": slug.current,
2025-09-17T00:39:58.396125Z	      logo
2025-09-17T00:39:58.396229Z	    },
2025-09-17T00:39:58.396356Z	    targetMarket,
2025-09-17T00:39:58.396469Z	    complexity,
2025-09-17T00:39:58.396569Z	    publishedAt,
2025-09-17T00:39:58.39667Z	    isPublished,
2025-09-17T00:39:58.396775Z	    isFeatured,
2025-09-17T00:39:58.396879Z	    viewCount,
2025-09-17T00:39:58.396982Z	    _createdAt,
2025-09-17T00:39:58.397111Z	    _updatedAt
2025-09-17T00:39:58.397218Z	  
2025-09-17T00:39:58.397347Z	      },
2025-09-17T00:39:58.397459Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-17T00:39:58.397561Z	    }
2025-09-17T00:39:58.397664Z	  
2025-09-17T00:39:58.397766Z	Query parameters: {
2025-09-17T00:39:58.397874Z	  limit: 4,
2025-09-17T00:39:58.397977Z	  offset: 0,
2025-09-17T00:39:58.398099Z	  targetMarket: undefined,
2025-09-17T00:39:58.398212Z	  brand: 'ixys',
2025-09-17T00:39:58.403632Z	  featured: undefined
2025-09-17T00:39:58.403965Z	}
2025-09-17T00:39:58.404098Z	✅ [getBrandData] Found brand: IXYS
2025-09-17T00:39:58.40437Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:58.404515Z	Solutions fetch result: {
2025-09-17T00:39:58.404638Z	  totalSolutions: 1,
2025-09-17T00:39:58.404759Z	  fetchedSolutions: 1,
2025-09-17T00:39:58.404856Z	  firstSolution: {
2025-09-17T00:39:58.404957Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-17T00:39:58.405051Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-17T00:39:58.405145Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-17T00:39:58.40525Z	    complexity: 'medium',
2025-09-17T00:39:58.405389Z	    coverImage: null,
2025-09-17T00:39:58.4055Z	    description: [ [Object] ],
2025-09-17T00:39:58.405607Z	    isFeatured: false,
2025-09-17T00:39:58.405731Z	    isPublished: true,
2025-09-17T00:39:58.405847Z	    primaryBrand: {
2025-09-17T00:39:58.405956Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:58.406101Z	      logo: null,
2025-09-17T00:39:58.406212Z	      name: 'IXYS',
2025-09-17T00:39:58.406341Z	      slug: 'ixys'
2025-09-17T00:39:58.406458Z	    },
2025-09-17T00:39:58.406732Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-17T00:39:58.406874Z	    relatedBrands: null,
2025-09-17T00:39:58.406986Z	    slug: '99999',
2025-09-17T00:39:58.407106Z	    summary: '99999',
2025-09-17T00:39:58.407202Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:58.407316Z	    title: '99999',
2025-09-17T00:39:58.40741Z	    viewCount: 0
2025-09-17T00:39:58.40751Z	  }
2025-09-17T00:39:58.4076Z	}
2025-09-17T00:39:58.407691Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-17T00:39:58.407798Z	Fetching products with query: 
2025-09-17T00:39:58.407916Z	    {
2025-09-17T00:39:58.408069Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.408184Z	        
2025-09-17T00:39:58.408348Z	    _id,
2025-09-17T00:39:58.408539Z	    _type,
2025-09-17T00:39:58.408651Z	    partNumber,
2025-09-17T00:39:58.408758Z	    "slug": slug.current,
2025-09-17T00:39:58.4089Z	    title,
2025-09-17T00:39:58.409034Z	    shortDescription,
2025-09-17T00:39:58.409149Z	    image,
2025-09-17T00:39:58.409353Z	    brand->{
2025-09-17T00:39:58.409543Z	      name,
2025-09-17T00:39:58.409698Z	      "slug": slug.current,
2025-09-17T00:39:58.409817Z	      logo
2025-09-17T00:39:58.409925Z	    },
2025-09-17T00:39:58.410016Z	    category->{
2025-09-17T00:39:58.410097Z	      name,
2025-09-17T00:39:58.410197Z	      "slug": slug.current
2025-09-17T00:39:58.410368Z	    },
2025-09-17T00:39:58.410474Z	    pricing{
2025-09-17T00:39:58.410564Z	      currency,
2025-09-17T00:39:58.410661Z	      tiers[]{
2025-09-17T00:39:58.410746Z	        quantity,
2025-09-17T00:39:58.410824Z	        price,
2025-09-17T00:39:58.410901Z	        unit
2025-09-17T00:39:58.410995Z	      },
2025-09-17T00:39:58.411082Z	      moq,
2025-09-17T00:39:58.41117Z	      leadTime,
2025-09-17T00:39:58.411286Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.411417Z	      "price": tiers[0].price,
2025-09-17T00:39:58.411566Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.411697Z	    },
2025-09-17T00:39:58.411969Z	    inventory{
2025-09-17T00:39:58.412117Z	      quantity,
2025-09-17T00:39:58.412241Z	      status,
2025-09-17T00:39:58.412372Z	      warehouse,
2025-09-17T00:39:58.412487Z	      lastUpdated,
2025-09-17T00:39:58.412615Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.41279Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.412906Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.413023Z	    },
2025-09-17T00:39:58.413181Z	    isActive,
2025-09-17T00:39:58.413302Z	    isFeatured,
2025-09-17T00:39:58.413399Z	    isNew,
2025-09-17T00:39:58.413511Z	    _createdAt,
2025-09-17T00:39:58.413615Z	    _updatedAt
2025-09-17T00:39:58.413771Z	  
2025-09-17T00:39:58.413875Z	      },
2025-09-17T00:39:58.41398Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-17T00:39:58.414087Z	    }
2025-09-17T00:39:58.414196Z	  
2025-09-17T00:39:58.414316Z	Query parameters: {
2025-09-17T00:39:58.41443Z	  limit: 8,
2025-09-17T00:39:58.41453Z	  offset: 0,
2025-09-17T00:39:58.414629Z	  category: undefined,
2025-09-17T00:39:58.414736Z	  brand: 'ixys',
2025-09-17T00:39:58.414834Z	  featured: undefined
2025-09-17T00:39:58.414932Z	}
2025-09-17T00:39:58.415023Z	Fetching solutions with query: 
2025-09-17T00:39:58.415111Z	    {
2025-09-17T00:39:58.415201Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.415314Z	        
2025-09-17T00:39:58.415447Z	    _id,
2025-09-17T00:39:58.415541Z	    title,
2025-09-17T00:39:58.415629Z	    "slug": slug.current,
2025-09-17T00:39:58.415741Z	    summary,
2025-09-17T00:39:58.415831Z	    description,
2025-09-17T00:39:58.415917Z	    coverImage,
2025-09-17T00:39:58.416005Z	    primaryBrand->{
2025-09-17T00:39:58.416089Z	      _id,
2025-09-17T00:39:58.416174Z	      name,
2025-09-17T00:39:58.416299Z	      "slug": slug.current,
2025-09-17T00:39:58.416423Z	      logo
2025-09-17T00:39:58.416525Z	    },
2025-09-17T00:39:58.416624Z	    relatedBrands[]->{
2025-09-17T00:39:58.416716Z	      _id,
2025-09-17T00:39:58.416803Z	      name,
2025-09-17T00:39:58.416897Z	      "slug": slug.current,
2025-09-17T00:39:58.417021Z	      logo
2025-09-17T00:39:58.417122Z	    },
2025-09-17T00:39:58.417222Z	    targetMarket,
2025-09-17T00:39:58.417339Z	    complexity,
2025-09-17T00:39:58.417434Z	    publishedAt,
2025-09-17T00:39:58.41753Z	    isPublished,
2025-09-17T00:39:58.417623Z	    isFeatured,
2025-09-17T00:39:58.417719Z	    viewCount,
2025-09-17T00:39:58.417814Z	    _createdAt,
2025-09-17T00:39:58.417916Z	    _updatedAt
2025-09-17T00:39:58.418023Z	  
2025-09-17T00:39:58.41812Z	      },
2025-09-17T00:39:58.418215Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-17T00:39:58.41834Z	    }
2025-09-17T00:39:58.418442Z	  
2025-09-17T00:39:58.418542Z	Query parameters: {
2025-09-17T00:39:58.418633Z	  limit: 4,
2025-09-17T00:39:58.418726Z	  offset: 0,
2025-09-17T00:39:58.418816Z	  targetMarket: undefined,
2025-09-17T00:39:58.418927Z	  brand: 'ixys',
2025-09-17T00:39:58.41903Z	  featured: undefined
2025-09-17T00:39:58.419128Z	}
2025-09-17T00:39:58.419235Z	✅ [getBrandData] Found brand: IXYS
2025-09-17T00:39:58.419361Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:58.419475Z	Solutions fetch result: {
2025-09-17T00:39:58.419579Z	  totalSolutions: 1,
2025-09-17T00:39:58.419681Z	  fetchedSolutions: 1,
2025-09-17T00:39:58.419871Z	  firstSolution: {
2025-09-17T00:39:58.419994Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-17T00:39:58.4201Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-17T00:39:58.420214Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-17T00:39:58.420375Z	    complexity: 'medium',
2025-09-17T00:39:58.420483Z	    coverImage: null,
2025-09-17T00:39:58.420585Z	    description: [ [Object] ],
2025-09-17T00:39:58.420699Z	    isFeatured: false,
2025-09-17T00:39:58.420804Z	    isPublished: true,
2025-09-17T00:39:58.420915Z	    primaryBrand: {
2025-09-17T00:39:58.421027Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:39:58.421127Z	      logo: null,
2025-09-17T00:39:58.421223Z	      name: 'IXYS',
2025-09-17T00:39:58.421343Z	      slug: 'ixys'
2025-09-17T00:39:58.421444Z	    },
2025-09-17T00:39:58.421538Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-17T00:39:58.421638Z	    relatedBrands: null,
2025-09-17T00:39:58.421732Z	    slug: '99999',
2025-09-17T00:39:58.421833Z	    summary: '99999',
2025-09-17T00:39:58.421936Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:58.422033Z	    title: '99999',
2025-09-17T00:39:58.422129Z	    viewCount: 0
2025-09-17T00:39:58.422241Z	  }
2025-09-17T00:39:58.422377Z	}
2025-09-17T00:39:58.422496Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-17T00:39:58.422608Z	Fetching products with query: 
2025-09-17T00:39:58.422714Z	    {
2025-09-17T00:39:58.422901Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.423037Z	        
2025-09-17T00:39:58.423174Z	    _id,
2025-09-17T00:39:58.423308Z	    _type,
2025-09-17T00:39:58.423411Z	    partNumber,
2025-09-17T00:39:58.423507Z	    "slug": slug.current,
2025-09-17T00:39:58.423602Z	    title,
2025-09-17T00:39:58.42371Z	    shortDescription,
2025-09-17T00:39:58.423803Z	    image,
2025-09-17T00:39:58.423897Z	    brand->{
2025-09-17T00:39:58.42401Z	      name,
2025-09-17T00:39:58.424111Z	      "slug": slug.current,
2025-09-17T00:39:58.424215Z	      logo
2025-09-17T00:39:58.424355Z	    },
2025-09-17T00:39:58.42447Z	    category->{
2025-09-17T00:39:58.424772Z	      name,
2025-09-17T00:39:58.425047Z	      "slug": slug.current
2025-09-17T00:39:58.425179Z	    },
2025-09-17T00:39:58.425564Z	    pricing{
2025-09-17T00:39:58.425818Z	      currency,
2025-09-17T00:39:58.426055Z	      tiers[]{
2025-09-17T00:39:58.426455Z	        quantity,
2025-09-17T00:39:58.426727Z	        price,
2025-09-17T00:39:58.426972Z	        unit
2025-09-17T00:39:58.427289Z	      },
2025-09-17T00:39:58.427577Z	      moq,
2025-09-17T00:39:58.427695Z	      leadTime,
2025-09-17T00:39:58.427761Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.427834Z	      "price": tiers[0].price,
2025-09-17T00:39:58.427892Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.427949Z	    },
2025-09-17T00:39:58.42801Z	    inventory{
2025-09-17T00:39:58.428067Z	      quantity,
2025-09-17T00:39:58.428122Z	      status,
2025-09-17T00:39:58.428287Z	      warehouse,
2025-09-17T00:39:58.428686Z	      lastUpdated,
2025-09-17T00:39:58.428864Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.429069Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.42925Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.429394Z	    },
2025-09-17T00:39:58.429512Z	    isActive,
2025-09-17T00:39:58.429643Z	    isFeatured,
2025-09-17T00:39:58.429767Z	    isNew,
2025-09-17T00:39:58.429876Z	    _createdAt,
2025-09-17T00:39:58.429992Z	    _updatedAt
2025-09-17T00:39:58.430102Z	  
2025-09-17T00:39:58.430205Z	      },
2025-09-17T00:39:58.431614Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-17T00:39:58.432Z	    }
2025-09-17T00:39:58.432358Z	  
2025-09-17T00:39:58.43361Z	Query parameters: {
2025-09-17T00:39:58.433757Z	  limit: 8,
2025-09-17T00:39:58.433868Z	  offset: 0,
2025-09-17T00:39:58.43424Z	  category: undefined,
2025-09-17T00:39:58.434483Z	  brand: 'sanrex',
2025-09-17T00:39:58.434762Z	  featured: undefined
2025-09-17T00:39:58.434918Z	}
2025-09-17T00:39:58.435132Z	Fetching solutions with query: 
2025-09-17T00:39:58.435282Z	    {
2025-09-17T00:39:58.435407Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.435519Z	        
2025-09-17T00:39:58.435616Z	    _id,
2025-09-17T00:39:58.435733Z	    title,
2025-09-17T00:39:58.435827Z	    "slug": slug.current,
2025-09-17T00:39:58.435929Z	    summary,
2025-09-17T00:39:58.436025Z	    description,
2025-09-17T00:39:58.436116Z	    coverImage,
2025-09-17T00:39:58.436236Z	    primaryBrand->{
2025-09-17T00:39:58.43637Z	      _id,
2025-09-17T00:39:58.43647Z	      name,
2025-09-17T00:39:58.43658Z	      "slug": slug.current,
2025-09-17T00:39:58.436691Z	      logo
2025-09-17T00:39:58.436809Z	    },
2025-09-17T00:39:58.436921Z	    relatedBrands[]->{
2025-09-17T00:39:58.437046Z	      _id,
2025-09-17T00:39:58.437176Z	      name,
2025-09-17T00:39:58.437308Z	      "slug": slug.current,
2025-09-17T00:39:58.437541Z	      logo
2025-09-17T00:39:58.437637Z	    },
2025-09-17T00:39:58.437732Z	    targetMarket,
2025-09-17T00:39:58.43783Z	    complexity,
2025-09-17T00:39:58.438028Z	    publishedAt,
2025-09-17T00:39:58.438158Z	    isPublished,
2025-09-17T00:39:58.438326Z	    isFeatured,
2025-09-17T00:39:58.43847Z	    viewCount,
2025-09-17T00:39:58.438601Z	    _createdAt,
2025-09-17T00:39:58.444732Z	    _updatedAt
2025-09-17T00:39:58.44482Z	  
2025-09-17T00:39:58.444881Z	      },
2025-09-17T00:39:58.444939Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-17T00:39:58.444996Z	    }
2025-09-17T00:39:58.44505Z	  
2025-09-17T00:39:58.445103Z	Query parameters: {
2025-09-17T00:39:58.445155Z	  limit: 4,
2025-09-17T00:39:58.445218Z	  offset: 0,
2025-09-17T00:39:58.445309Z	  targetMarket: undefined,
2025-09-17T00:39:58.445382Z	  brand: 'sanrex',
2025-09-17T00:39:58.445438Z	  featured: undefined
2025-09-17T00:39:58.445493Z	}
2025-09-17T00:39:58.445548Z	✅ [getBrandData] Found brand: Sanrex
2025-09-17T00:39:58.445608Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:58.445671Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.445729Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-17T00:39:58.445786Z	Fetching products with query: 
2025-09-17T00:39:58.445848Z	    {
2025-09-17T00:39:58.445902Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.445962Z	        
2025-09-17T00:39:58.446015Z	    _id,
2025-09-17T00:39:58.446069Z	    _type,
2025-09-17T00:39:58.446121Z	    partNumber,
2025-09-17T00:39:58.44618Z	    "slug": slug.current,
2025-09-17T00:39:58.446234Z	    title,
2025-09-17T00:39:58.48757Z	    shortDescription,
2025-09-17T00:39:58.487792Z	    image,
2025-09-17T00:39:58.487914Z	    brand->{
2025-09-17T00:39:58.48803Z	      name,
2025-09-17T00:39:58.488138Z	      "slug": slug.current,
2025-09-17T00:39:58.488247Z	      logo
2025-09-17T00:39:58.488382Z	    },
2025-09-17T00:39:58.488482Z	    category->{
2025-09-17T00:39:58.488592Z	      name,
2025-09-17T00:39:58.488709Z	      "slug": slug.current
2025-09-17T00:39:58.488812Z	    },
2025-09-17T00:39:58.4895Z	    pricing{
2025-09-17T00:39:58.490716Z	      currency,
2025-09-17T00:39:58.491236Z	      tiers[]{
2025-09-17T00:39:58.491403Z	        quantity,
2025-09-17T00:39:58.491524Z	        price,
2025-09-17T00:39:58.491634Z	        unit
2025-09-17T00:39:58.491789Z	      },
2025-09-17T00:39:58.49222Z	      moq,
2025-09-17T00:39:58.492378Z	      leadTime,
2025-09-17T00:39:58.492519Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.49266Z	      "price": tiers[0].price,
2025-09-17T00:39:58.492863Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.493032Z	    },
2025-09-17T00:39:58.493209Z	    inventory{
2025-09-17T00:39:58.49336Z	      quantity,
2025-09-17T00:39:58.493473Z	      status,
2025-09-17T00:39:58.493617Z	      warehouse,
2025-09-17T00:39:58.493735Z	      lastUpdated,
2025-09-17T00:39:58.493884Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.494099Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.494219Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.494363Z	    },
2025-09-17T00:39:58.494477Z	    isActive,
2025-09-17T00:39:58.494593Z	    isFeatured,
2025-09-17T00:39:58.494727Z	    isNew,
2025-09-17T00:39:58.494866Z	    _createdAt,
2025-09-17T00:39:58.494999Z	    _updatedAt
2025-09-17T00:39:58.495122Z	  
2025-09-17T00:39:58.495252Z	      },
2025-09-17T00:39:58.495393Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-17T00:39:58.495597Z	    }
2025-09-17T00:39:58.495743Z	  
2025-09-17T00:39:58.495932Z	Query parameters: {
2025-09-17T00:39:58.496091Z	  limit: 8,
2025-09-17T00:39:58.49622Z	  offset: 0,
2025-09-17T00:39:58.496447Z	  category: undefined,
2025-09-17T00:39:58.496592Z	  brand: 'sanrex',
2025-09-17T00:39:58.496697Z	  featured: undefined
2025-09-17T00:39:58.496804Z	}
2025-09-17T00:39:58.496949Z	Fetching solutions with query: 
2025-09-17T00:39:58.497133Z	    {
2025-09-17T00:39:58.498207Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.498452Z	        
2025-09-17T00:39:58.498614Z	    _id,
2025-09-17T00:39:58.49874Z	    title,
2025-09-17T00:39:58.498855Z	    "slug": slug.current,
2025-09-17T00:39:58.498967Z	    summary,
2025-09-17T00:39:58.499257Z	    description,
2025-09-17T00:39:58.499451Z	    coverImage,
2025-09-17T00:39:58.499635Z	    primaryBrand->{
2025-09-17T00:39:58.499797Z	      _id,
2025-09-17T00:39:58.499923Z	      name,
2025-09-17T00:39:58.50004Z	      "slug": slug.current,
2025-09-17T00:39:58.500152Z	      logo
2025-09-17T00:39:58.500279Z	    },
2025-09-17T00:39:58.5004Z	    relatedBrands[]->{
2025-09-17T00:39:58.500508Z	      _id,
2025-09-17T00:39:58.500628Z	      name,
2025-09-17T00:39:58.500753Z	      "slug": slug.current,
2025-09-17T00:39:58.500872Z	      logo
2025-09-17T00:39:58.500989Z	    },
2025-09-17T00:39:58.501099Z	    targetMarket,
2025-09-17T00:39:58.501244Z	    complexity,
2025-09-17T00:39:58.50139Z	    publishedAt,
2025-09-17T00:39:58.501496Z	    isPublished,
2025-09-17T00:39:58.501607Z	    isFeatured,
2025-09-17T00:39:58.501765Z	    viewCount,
2025-09-17T00:39:58.501883Z	    _createdAt,
2025-09-17T00:39:58.501993Z	    _updatedAt
2025-09-17T00:39:58.502096Z	  
2025-09-17T00:39:58.50219Z	      },
2025-09-17T00:39:58.502309Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-17T00:39:58.502422Z	    }
2025-09-17T00:39:58.502513Z	  
2025-09-17T00:39:58.502598Z	Query parameters: {
2025-09-17T00:39:58.502715Z	  limit: 4,
2025-09-17T00:39:58.502832Z	  offset: 0,
2025-09-17T00:39:58.502938Z	  targetMarket: undefined,
2025-09-17T00:39:58.503041Z	  brand: 'sanrex',
2025-09-17T00:39:58.503128Z	  featured: undefined
2025-09-17T00:39:58.503225Z	}
2025-09-17T00:39:58.503365Z	✅ [getBrandData] Found brand: Sanrex
2025-09-17T00:39:58.503496Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:58.50361Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.503744Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-17T00:39:58.503877Z	Fetching products with query: 
2025-09-17T00:39:58.503989Z	    {
2025-09-17T00:39:58.504096Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.504205Z	        
2025-09-17T00:39:58.504331Z	    _id,
2025-09-17T00:39:58.50452Z	    _type,
2025-09-17T00:39:58.504644Z	    partNumber,
2025-09-17T00:39:58.504766Z	    "slug": slug.current,
2025-09-17T00:39:58.504873Z	    title,
2025-09-17T00:39:58.504973Z	    shortDescription,
2025-09-17T00:39:58.505069Z	    image,
2025-09-17T00:39:58.505166Z	    brand->{
2025-09-17T00:39:58.505282Z	      name,
2025-09-17T00:39:58.5054Z	      "slug": slug.current,
2025-09-17T00:39:58.505531Z	      logo
2025-09-17T00:39:58.505676Z	    },
2025-09-17T00:39:58.505778Z	    category->{
2025-09-17T00:39:58.505881Z	      name,
2025-09-17T00:39:58.505987Z	      "slug": slug.current
2025-09-17T00:39:58.506084Z	    },
2025-09-17T00:39:58.506176Z	    pricing{
2025-09-17T00:39:58.506309Z	      currency,
2025-09-17T00:39:58.50651Z	      tiers[]{
2025-09-17T00:39:58.506749Z	        quantity,
2025-09-17T00:39:58.506967Z	        price,
2025-09-17T00:39:58.507338Z	        unit
2025-09-17T00:39:58.507473Z	      },
2025-09-17T00:39:58.507584Z	      moq,
2025-09-17T00:39:58.507682Z	      leadTime,
2025-09-17T00:39:58.507786Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.507909Z	      "price": tiers[0].price,
2025-09-17T00:39:58.508031Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.508156Z	    },
2025-09-17T00:39:58.508253Z	    inventory{
2025-09-17T00:39:58.50837Z	      quantity,
2025-09-17T00:39:58.508458Z	      status,
2025-09-17T00:39:58.50855Z	      warehouse,
2025-09-17T00:39:58.508638Z	      lastUpdated,
2025-09-17T00:39:58.508726Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.50881Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.5089Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.509021Z	    },
2025-09-17T00:39:58.509114Z	    isActive,
2025-09-17T00:39:58.509207Z	    isFeatured,
2025-09-17T00:39:58.509331Z	    isNew,
2025-09-17T00:39:58.509432Z	    _createdAt,
2025-09-17T00:39:58.50952Z	    _updatedAt
2025-09-17T00:39:58.509613Z	  
2025-09-17T00:39:58.509701Z	      },
2025-09-17T00:39:58.509789Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-17T00:39:58.509889Z	    }
2025-09-17T00:39:58.510019Z	  
2025-09-17T00:39:58.510112Z	Query parameters: {
2025-09-17T00:39:58.510215Z	  limit: 8,
2025-09-17T00:39:58.510449Z	  offset: 0,
2025-09-17T00:39:58.51068Z	  category: undefined,
2025-09-17T00:39:58.510881Z	  brand: 'epcos',
2025-09-17T00:39:58.51106Z	  featured: undefined
2025-09-17T00:39:58.511347Z	}
2025-09-17T00:39:58.5115Z	Fetching solutions with query: 
2025-09-17T00:39:58.51244Z	    {
2025-09-17T00:39:58.512845Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.513233Z	        
2025-09-17T00:39:58.513422Z	    _id,
2025-09-17T00:39:58.513683Z	    title,
2025-09-17T00:39:58.513848Z	    "slug": slug.current,
2025-09-17T00:39:58.51411Z	    summary,
2025-09-17T00:39:58.514408Z	    description,
2025-09-17T00:39:58.514569Z	    coverImage,
2025-09-17T00:39:58.514748Z	    primaryBrand->{
2025-09-17T00:39:58.514911Z	      _id,
2025-09-17T00:39:58.515078Z	      name,
2025-09-17T00:39:58.515228Z	      "slug": slug.current,
2025-09-17T00:39:58.515396Z	      logo
2025-09-17T00:39:58.515556Z	    },
2025-09-17T00:39:58.515732Z	    relatedBrands[]->{
2025-09-17T00:39:58.515954Z	      _id,
2025-09-17T00:39:58.51634Z	      name,
2025-09-17T00:39:58.516488Z	      "slug": slug.current,
2025-09-17T00:39:58.51702Z	      logo
2025-09-17T00:39:58.517173Z	    },
2025-09-17T00:39:58.517303Z	    targetMarket,
2025-09-17T00:39:58.517419Z	    complexity,
2025-09-17T00:39:58.517881Z	    publishedAt,
2025-09-17T00:39:58.518163Z	    isPublished,
2025-09-17T00:39:58.518623Z	    isFeatured,
2025-09-17T00:39:58.518794Z	    viewCount,
2025-09-17T00:39:58.518941Z	    _createdAt,
2025-09-17T00:39:58.519072Z	    _updatedAt
2025-09-17T00:39:58.519199Z	  
2025-09-17T00:39:58.519968Z	      },
2025-09-17T00:39:58.5201Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-17T00:39:58.520209Z	    }
2025-09-17T00:39:58.520344Z	  
2025-09-17T00:39:58.520468Z	Query parameters: {
2025-09-17T00:39:58.520573Z	  limit: 4,
2025-09-17T00:39:58.520672Z	  offset: 0,
2025-09-17T00:39:58.52078Z	  targetMarket: undefined,
2025-09-17T00:39:58.520891Z	  brand: 'epcos',
2025-09-17T00:39:58.521016Z	  featured: undefined
2025-09-17T00:39:58.521129Z	}
2025-09-17T00:39:58.521232Z	✅ [getBrandData] Found brand: Epcos
2025-09-17T00:39:58.521368Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:58.521512Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.521715Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-17T00:39:58.52191Z	Fetching products with query: 
2025-09-17T00:39:58.522078Z	    {
2025-09-17T00:39:58.522196Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.522408Z	        
2025-09-17T00:39:58.522544Z	    _id,
2025-09-17T00:39:58.522661Z	    _type,
2025-09-17T00:39:58.522772Z	    partNumber,
2025-09-17T00:39:58.522884Z	    "slug": slug.current,
2025-09-17T00:39:58.523008Z	    title,
2025-09-17T00:39:58.523161Z	    shortDescription,
2025-09-17T00:39:58.523263Z	    image,
2025-09-17T00:39:58.523399Z	    brand->{
2025-09-17T00:39:58.523517Z	      name,
2025-09-17T00:39:58.523626Z	      "slug": slug.current,
2025-09-17T00:39:58.523775Z	      logo
2025-09-17T00:39:58.523984Z	    },
2025-09-17T00:39:58.524114Z	    category->{
2025-09-17T00:39:58.524243Z	      name,
2025-09-17T00:39:58.524791Z	      "slug": slug.current
2025-09-17T00:39:58.524946Z	    },
2025-09-17T00:39:58.525652Z	    pricing{
2025-09-17T00:39:58.525746Z	      currency,
2025-09-17T00:39:58.525805Z	      tiers[]{
2025-09-17T00:39:58.525898Z	        quantity,
2025-09-17T00:39:58.525963Z	        price,
2025-09-17T00:39:58.526017Z	        unit
2025-09-17T00:39:58.526074Z	      },
2025-09-17T00:39:58.526455Z	      moq,
2025-09-17T00:39:58.526765Z	      leadTime,
2025-09-17T00:39:58.527245Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.527722Z	      "price": tiers[0].price,
2025-09-17T00:39:58.52784Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.527937Z	    },
2025-09-17T00:39:58.528026Z	    inventory{
2025-09-17T00:39:58.52812Z	      quantity,
2025-09-17T00:39:58.52821Z	      status,
2025-09-17T00:39:58.528721Z	      warehouse,
2025-09-17T00:39:58.528856Z	      lastUpdated,
2025-09-17T00:39:58.528956Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.529046Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.529131Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.529216Z	    },
2025-09-17T00:39:58.529744Z	    isActive,
2025-09-17T00:39:58.530642Z	    isFeatured,
2025-09-17T00:39:58.530963Z	    isNew,
2025-09-17T00:39:58.531353Z	    _createdAt,
2025-09-17T00:39:58.531752Z	    _updatedAt
2025-09-17T00:39:58.531997Z	  
2025-09-17T00:39:58.532298Z	      },
2025-09-17T00:39:58.532809Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-17T00:39:58.533488Z	    }
2025-09-17T00:39:58.533844Z	  
2025-09-17T00:39:58.534323Z	Query parameters: {
2025-09-17T00:39:58.534452Z	  limit: 8,
2025-09-17T00:39:58.534805Z	  offset: 0,
2025-09-17T00:39:58.534922Z	  category: undefined,
2025-09-17T00:39:58.535025Z	  brand: 'epcos',
2025-09-17T00:39:58.535362Z	  featured: undefined
2025-09-17T00:39:58.535496Z	}
2025-09-17T00:39:58.535591Z	Fetching solutions with query: 
2025-09-17T00:39:58.535689Z	    {
2025-09-17T00:39:58.535787Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.535882Z	        
2025-09-17T00:39:58.535983Z	    _id,
2025-09-17T00:39:58.536382Z	    title,
2025-09-17T00:39:58.536517Z	    "slug": slug.current,
2025-09-17T00:39:58.536624Z	    summary,
2025-09-17T00:39:58.536728Z	    description,
2025-09-17T00:39:58.536826Z	    coverImage,
2025-09-17T00:39:58.536941Z	    primaryBrand->{
2025-09-17T00:39:58.537032Z	      _id,
2025-09-17T00:39:58.537131Z	      name,
2025-09-17T00:39:58.537223Z	      "slug": slug.current,
2025-09-17T00:39:58.537329Z	      logo
2025-09-17T00:39:58.537416Z	    },
2025-09-17T00:39:58.537497Z	    relatedBrands[]->{
2025-09-17T00:39:58.537581Z	      _id,
2025-09-17T00:39:58.537661Z	      name,
2025-09-17T00:39:58.537745Z	      "slug": slug.current,
2025-09-17T00:39:58.537841Z	      logo
2025-09-17T00:39:58.537929Z	    },
2025-09-17T00:39:58.538009Z	    targetMarket,
2025-09-17T00:39:58.538088Z	    complexity,
2025-09-17T00:39:58.538164Z	    publishedAt,
2025-09-17T00:39:58.538666Z	    isPublished,
2025-09-17T00:39:58.538965Z	    isFeatured,
2025-09-17T00:39:58.539092Z	    viewCount,
2025-09-17T00:39:58.539387Z	    _createdAt,
2025-09-17T00:39:58.539488Z	    _updatedAt
2025-09-17T00:39:58.539969Z	  
2025-09-17T00:39:58.540482Z	      },
2025-09-17T00:39:58.540627Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-17T00:39:58.540847Z	    }
2025-09-17T00:39:58.541032Z	  
2025-09-17T00:39:58.541203Z	Query parameters: {
2025-09-17T00:39:58.541381Z	  limit: 4,
2025-09-17T00:39:58.541552Z	  offset: 0,
2025-09-17T00:39:58.541729Z	  targetMarket: undefined,
2025-09-17T00:39:58.541896Z	  brand: 'epcos',
2025-09-17T00:39:58.542065Z	  featured: undefined
2025-09-17T00:39:58.542228Z	}
2025-09-17T00:39:58.542404Z	✅ [getBrandData] Found brand: Epcos
2025-09-17T00:39:58.54253Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:58.542729Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.54288Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-17T00:39:58.54303Z	Fetching products with query: 
2025-09-17T00:39:58.543197Z	    {
2025-09-17T00:39:58.543384Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.543555Z	        
2025-09-17T00:39:58.543755Z	    _id,
2025-09-17T00:39:58.543924Z	    _type,
2025-09-17T00:39:58.544038Z	    partNumber,
2025-09-17T00:39:58.544146Z	    "slug": slug.current,
2025-09-17T00:39:58.544254Z	    title,
2025-09-17T00:39:58.544405Z	    shortDescription,
2025-09-17T00:39:58.544538Z	    image,
2025-09-17T00:39:58.544647Z	    brand->{
2025-09-17T00:39:58.544771Z	      name,
2025-09-17T00:39:58.544877Z	      "slug": slug.current,
2025-09-17T00:39:58.544999Z	      logo
2025-09-17T00:39:58.545117Z	    },
2025-09-17T00:39:58.545231Z	    category->{
2025-09-17T00:39:58.54535Z	      name,
2025-09-17T00:39:58.545435Z	      "slug": slug.current
2025-09-17T00:39:58.545492Z	    },
2025-09-17T00:39:58.545547Z	    pricing{
2025-09-17T00:39:58.5456Z	      currency,
2025-09-17T00:39:58.545664Z	      tiers[]{
2025-09-17T00:39:58.54572Z	        quantity,
2025-09-17T00:39:58.545773Z	        price,
2025-09-17T00:39:58.545826Z	        unit
2025-09-17T00:39:58.545879Z	      },
2025-09-17T00:39:58.545935Z	      moq,
2025-09-17T00:39:58.54599Z	      leadTime,
2025-09-17T00:39:58.546043Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.5461Z	      "price": tiers[0].price,
2025-09-17T00:39:58.546154Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.546214Z	    },
2025-09-17T00:39:58.546289Z	    inventory{
2025-09-17T00:39:58.54637Z	      quantity,
2025-09-17T00:39:58.546425Z	      status,
2025-09-17T00:39:58.546478Z	      warehouse,
2025-09-17T00:39:58.546531Z	      lastUpdated,
2025-09-17T00:39:58.546587Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.546641Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.546703Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.546769Z	    },
2025-09-17T00:39:58.546826Z	    isActive,
2025-09-17T00:39:58.546879Z	    isFeatured,
2025-09-17T00:39:58.546937Z	    isNew,
2025-09-17T00:39:58.54699Z	    _createdAt,
2025-09-17T00:39:58.547045Z	    _updatedAt
2025-09-17T00:39:58.547097Z	  
2025-09-17T00:39:58.54715Z	      },
2025-09-17T00:39:58.547202Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-17T00:39:58.547261Z	    }
2025-09-17T00:39:58.547346Z	  
2025-09-17T00:39:58.547405Z	Query parameters: {
2025-09-17T00:39:58.547459Z	  limit: 8,
2025-09-17T00:39:58.547511Z	  offset: 0,
2025-09-17T00:39:58.547563Z	  category: undefined,
2025-09-17T00:39:58.547624Z	  brand: 'sanrex',
2025-09-17T00:39:58.547685Z	  featured: undefined
2025-09-17T00:39:58.547741Z	}
2025-09-17T00:39:58.547795Z	Fetching solutions with query: 
2025-09-17T00:39:58.547848Z	    {
2025-09-17T00:39:58.547903Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.547961Z	        
2025-09-17T00:39:58.548013Z	    _id,
2025-09-17T00:39:58.548066Z	    title,
2025-09-17T00:39:58.548119Z	    "slug": slug.current,
2025-09-17T00:39:58.548171Z	    summary,
2025-09-17T00:39:58.548224Z	    description,
2025-09-17T00:39:58.587466Z	    coverImage,
2025-09-17T00:39:58.587707Z	    primaryBrand->{
2025-09-17T00:39:58.587843Z	      _id,
2025-09-17T00:39:58.587955Z	      name,
2025-09-17T00:39:58.588063Z	      "slug": slug.current,
2025-09-17T00:39:58.588176Z	      logo
2025-09-17T00:39:58.588286Z	    },
2025-09-17T00:39:58.588386Z	    relatedBrands[]->{
2025-09-17T00:39:58.588525Z	      _id,
2025-09-17T00:39:58.588706Z	      name,
2025-09-17T00:39:58.588841Z	      "slug": slug.current,
2025-09-17T00:39:58.588961Z	      logo
2025-09-17T00:39:58.589366Z	    },
2025-09-17T00:39:58.589695Z	    targetMarket,
2025-09-17T00:39:58.589843Z	    complexity,
2025-09-17T00:39:58.590189Z	    publishedAt,
2025-09-17T00:39:58.590336Z	    isPublished,
2025-09-17T00:39:58.590472Z	    isFeatured,
2025-09-17T00:39:58.590653Z	    viewCount,
2025-09-17T00:39:58.590743Z	    _createdAt,
2025-09-17T00:39:58.590874Z	    _updatedAt
2025-09-17T00:39:58.591043Z	  
2025-09-17T00:39:58.591157Z	      },
2025-09-17T00:39:58.591244Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-17T00:39:58.591367Z	    }
2025-09-17T00:39:58.591459Z	  
2025-09-17T00:39:58.591549Z	Query parameters: {
2025-09-17T00:39:58.59164Z	  limit: 4,
2025-09-17T00:39:58.591831Z	  offset: 0,
2025-09-17T00:39:58.591965Z	  targetMarket: undefined,
2025-09-17T00:39:58.592203Z	  brand: 'sanrex',
2025-09-17T00:39:58.592356Z	  featured: undefined
2025-09-17T00:39:58.592545Z	}
2025-09-17T00:39:58.592809Z	✅ [getBrandData] Found brand: Sanrex
2025-09-17T00:39:58.593072Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:58.593343Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.593432Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-17T00:39:58.593781Z	Fetching products with query: 
2025-09-17T00:39:58.59409Z	    {
2025-09-17T00:39:58.594404Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.594722Z	        
2025-09-17T00:39:58.595024Z	    _id,
2025-09-17T00:39:58.595312Z	    _type,
2025-09-17T00:39:58.595602Z	    partNumber,
2025-09-17T00:39:58.595693Z	    "slug": slug.current,
2025-09-17T00:39:58.596014Z	    title,
2025-09-17T00:39:58.596096Z	    shortDescription,
2025-09-17T00:39:58.596392Z	    image,
2025-09-17T00:39:58.596702Z	    brand->{
2025-09-17T00:39:58.596782Z	      name,
2025-09-17T00:39:58.597061Z	      "slug": slug.current,
2025-09-17T00:39:58.59734Z	      logo
2025-09-17T00:39:58.597578Z	    },
2025-09-17T00:39:58.597746Z	    category->{
2025-09-17T00:39:58.59786Z	      name,
2025-09-17T00:39:58.597966Z	      "slug": slug.current
2025-09-17T00:39:58.598063Z	    },
2025-09-17T00:39:58.598167Z	    pricing{
2025-09-17T00:39:58.598382Z	      currency,
2025-09-17T00:39:58.598507Z	      tiers[]{
2025-09-17T00:39:58.598638Z	        quantity,
2025-09-17T00:39:58.598738Z	        price,
2025-09-17T00:39:58.598875Z	        unit
2025-09-17T00:39:58.599014Z	      },
2025-09-17T00:39:58.59916Z	      moq,
2025-09-17T00:39:58.599364Z	      leadTime,
2025-09-17T00:39:58.599535Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.59967Z	      "price": tiers[0].price,
2025-09-17T00:39:58.599789Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.599893Z	    },
2025-09-17T00:39:58.600023Z	    inventory{
2025-09-17T00:39:58.600123Z	      quantity,
2025-09-17T00:39:58.600219Z	      status,
2025-09-17T00:39:58.600347Z	      warehouse,
2025-09-17T00:39:58.600451Z	      lastUpdated,
2025-09-17T00:39:58.600564Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.600676Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.600786Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.600888Z	    },
2025-09-17T00:39:58.600993Z	    isActive,
2025-09-17T00:39:58.601104Z	    isFeatured,
2025-09-17T00:39:58.60121Z	    isNew,
2025-09-17T00:39:58.60132Z	    _createdAt,
2025-09-17T00:39:58.601424Z	    _updatedAt
2025-09-17T00:39:58.601515Z	  
2025-09-17T00:39:58.601606Z	      },
2025-09-17T00:39:58.601691Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-17T00:39:58.601789Z	    }
2025-09-17T00:39:58.60189Z	  
2025-09-17T00:39:58.602Z	Query parameters: {
2025-09-17T00:39:58.6021Z	  limit: 8,
2025-09-17T00:39:58.602204Z	  offset: 0,
2025-09-17T00:39:58.602323Z	  category: undefined,
2025-09-17T00:39:58.602432Z	  brand: 'sanrex',
2025-09-17T00:39:58.602529Z	  featured: undefined
2025-09-17T00:39:58.602618Z	}
2025-09-17T00:39:58.602705Z	Fetching solutions with query: 
2025-09-17T00:39:58.602795Z	    {
2025-09-17T00:39:58.602897Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.603012Z	        
2025-09-17T00:39:58.603114Z	    _id,
2025-09-17T00:39:58.603257Z	    title,
2025-09-17T00:39:58.603385Z	    "slug": slug.current,
2025-09-17T00:39:58.603508Z	    summary,
2025-09-17T00:39:58.60361Z	    description,
2025-09-17T00:39:58.603815Z	    coverImage,
2025-09-17T00:39:58.603988Z	    primaryBrand->{
2025-09-17T00:39:58.6041Z	      _id,
2025-09-17T00:39:58.604202Z	      name,
2025-09-17T00:39:58.604322Z	      "slug": slug.current,
2025-09-17T00:39:58.604414Z	      logo
2025-09-17T00:39:58.604477Z	    },
2025-09-17T00:39:58.604568Z	    relatedBrands[]->{
2025-09-17T00:39:58.604698Z	      _id,
2025-09-17T00:39:58.604798Z	      name,
2025-09-17T00:39:58.604887Z	      "slug": slug.current,
2025-09-17T00:39:58.604991Z	      logo
2025-09-17T00:39:58.605087Z	    },
2025-09-17T00:39:58.605191Z	    targetMarket,
2025-09-17T00:39:58.605307Z	    complexity,
2025-09-17T00:39:58.605427Z	    publishedAt,
2025-09-17T00:39:58.605535Z	    isPublished,
2025-09-17T00:39:58.605632Z	    isFeatured,
2025-09-17T00:39:58.605748Z	    viewCount,
2025-09-17T00:39:58.605858Z	    _createdAt,
2025-09-17T00:39:58.605959Z	    _updatedAt
2025-09-17T00:39:58.606067Z	  
2025-09-17T00:39:58.606186Z	      },
2025-09-17T00:39:58.606305Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-17T00:39:58.60641Z	    }
2025-09-17T00:39:58.606632Z	  
2025-09-17T00:39:58.606745Z	Query parameters: {
2025-09-17T00:39:58.607046Z	  limit: 4,
2025-09-17T00:39:58.607234Z	  offset: 0,
2025-09-17T00:39:58.607448Z	  targetMarket: undefined,
2025-09-17T00:39:58.607632Z	  brand: 'sanrex',
2025-09-17T00:39:58.60784Z	  featured: undefined
2025-09-17T00:39:58.607917Z	}
2025-09-17T00:39:58.607976Z	✅ [getBrandData] Found brand: Sanrex
2025-09-17T00:39:58.608035Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:58.608126Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.608416Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-17T00:39:58.608515Z	Fetching products with query: 
2025-09-17T00:39:58.608577Z	    {
2025-09-17T00:39:58.608857Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.608996Z	        
2025-09-17T00:39:58.609085Z	    _id,
2025-09-17T00:39:58.609171Z	    _type,
2025-09-17T00:39:58.609251Z	    partNumber,
2025-09-17T00:39:58.60937Z	    "slug": slug.current,
2025-09-17T00:39:58.609457Z	    title,
2025-09-17T00:39:58.609693Z	    shortDescription,
2025-09-17T00:39:58.609833Z	    image,
2025-09-17T00:39:58.609961Z	    brand->{
2025-09-17T00:39:58.610082Z	      name,
2025-09-17T00:39:58.610197Z	      "slug": slug.current,
2025-09-17T00:39:58.610348Z	      logo
2025-09-17T00:39:58.610484Z	    },
2025-09-17T00:39:58.610604Z	    category->{
2025-09-17T00:39:58.61074Z	      name,
2025-09-17T00:39:58.610847Z	      "slug": slug.current
2025-09-17T00:39:58.610958Z	    },
2025-09-17T00:39:58.611068Z	    pricing{
2025-09-17T00:39:58.611182Z	      currency,
2025-09-17T00:39:58.611324Z	      tiers[]{
2025-09-17T00:39:58.611442Z	        quantity,
2025-09-17T00:39:58.611553Z	        price,
2025-09-17T00:39:58.61165Z	        unit
2025-09-17T00:39:58.611762Z	      },
2025-09-17T00:39:58.611867Z	      moq,
2025-09-17T00:39:58.611973Z	      leadTime,
2025-09-17T00:39:58.612081Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.612202Z	      "price": tiers[0].price,
2025-09-17T00:39:58.612407Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.612544Z	    },
2025-09-17T00:39:58.612673Z	    inventory{
2025-09-17T00:39:58.61278Z	      quantity,
2025-09-17T00:39:58.612883Z	      status,
2025-09-17T00:39:58.612988Z	      warehouse,
2025-09-17T00:39:58.613091Z	      lastUpdated,
2025-09-17T00:39:58.613202Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.613334Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.613513Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.613619Z	    },
2025-09-17T00:39:58.613739Z	    isActive,
2025-09-17T00:39:58.613848Z	    isFeatured,
2025-09-17T00:39:58.613961Z	    isNew,
2025-09-17T00:39:58.614074Z	    _createdAt,
2025-09-17T00:39:58.614172Z	    _updatedAt
2025-09-17T00:39:58.614319Z	  
2025-09-17T00:39:58.614526Z	      },
2025-09-17T00:39:58.61469Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-17T00:39:58.614927Z	    }
2025-09-17T00:39:58.615145Z	  
2025-09-17T00:39:58.615321Z	Query parameters: {
2025-09-17T00:39:58.615455Z	  limit: 8,
2025-09-17T00:39:58.615584Z	  offset: 0,
2025-09-17T00:39:58.615736Z	  category: undefined,
2025-09-17T00:39:58.615873Z	  brand: 'epcos',
2025-09-17T00:39:58.616032Z	  featured: undefined
2025-09-17T00:39:58.616184Z	}
2025-09-17T00:39:58.616335Z	Fetching solutions with query: 
2025-09-17T00:39:58.616479Z	    {
2025-09-17T00:39:58.616618Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.616771Z	        
2025-09-17T00:39:58.616924Z	    _id,
2025-09-17T00:39:58.617084Z	    title,
2025-09-17T00:39:58.617218Z	    "slug": slug.current,
2025-09-17T00:39:58.617397Z	    summary,
2025-09-17T00:39:58.617516Z	    description,
2025-09-17T00:39:58.617631Z	    coverImage,
2025-09-17T00:39:58.617744Z	    primaryBrand->{
2025-09-17T00:39:58.617851Z	      _id,
2025-09-17T00:39:58.61795Z	      name,
2025-09-17T00:39:58.618091Z	      "slug": slug.current,
2025-09-17T00:39:58.618212Z	      logo
2025-09-17T00:39:58.618421Z	    },
2025-09-17T00:39:58.618721Z	    relatedBrands[]->{
2025-09-17T00:39:58.618871Z	      _id,
2025-09-17T00:39:58.61899Z	      name,
2025-09-17T00:39:58.619105Z	      "slug": slug.current,
2025-09-17T00:39:58.619215Z	      logo
2025-09-17T00:39:58.619345Z	    },
2025-09-17T00:39:58.619456Z	    targetMarket,
2025-09-17T00:39:58.619563Z	    complexity,
2025-09-17T00:39:58.619696Z	    publishedAt,
2025-09-17T00:39:58.619871Z	    isPublished,
2025-09-17T00:39:58.620011Z	    isFeatured,
2025-09-17T00:39:58.620137Z	    viewCount,
2025-09-17T00:39:58.620261Z	    _createdAt,
2025-09-17T00:39:58.620388Z	    _updatedAt
2025-09-17T00:39:58.620494Z	  
2025-09-17T00:39:58.620602Z	      },
2025-09-17T00:39:58.62071Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-17T00:39:58.620878Z	    }
2025-09-17T00:39:58.620987Z	  
2025-09-17T00:39:58.621099Z	Query parameters: {
2025-09-17T00:39:58.6212Z	  limit: 4,
2025-09-17T00:39:58.621594Z	  offset: 0,
2025-09-17T00:39:58.621733Z	  targetMarket: undefined,
2025-09-17T00:39:58.621842Z	  brand: 'epcos',
2025-09-17T00:39:58.621952Z	  featured: undefined
2025-09-17T00:39:58.622057Z	}
2025-09-17T00:39:58.622154Z	✅ [getBrandData] Found brand: Epcos
2025-09-17T00:39:58.622255Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:58.622385Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.622839Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-17T00:39:58.623024Z	Fetching products with query: 
2025-09-17T00:39:58.623154Z	    {
2025-09-17T00:39:58.623261Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.623396Z	        
2025-09-17T00:39:58.623505Z	    _id,
2025-09-17T00:39:58.623703Z	    _type,
2025-09-17T00:39:58.623821Z	    partNumber,
2025-09-17T00:39:58.623949Z	    "slug": slug.current,
2025-09-17T00:39:58.624064Z	    title,
2025-09-17T00:39:58.62418Z	    shortDescription,
2025-09-17T00:39:58.624312Z	    image,
2025-09-17T00:39:58.624426Z	    brand->{
2025-09-17T00:39:58.624536Z	      name,
2025-09-17T00:39:58.624652Z	      "slug": slug.current,
2025-09-17T00:39:58.624756Z	      logo
2025-09-17T00:39:58.624872Z	    },
2025-09-17T00:39:58.624984Z	    category->{
2025-09-17T00:39:58.625092Z	      name,
2025-09-17T00:39:58.625187Z	      "slug": slug.current
2025-09-17T00:39:58.625312Z	    },
2025-09-17T00:39:58.625449Z	    pricing{
2025-09-17T00:39:58.626832Z	      currency,
2025-09-17T00:39:58.627048Z	      tiers[]{
2025-09-17T00:39:58.628366Z	        quantity,
2025-09-17T00:39:58.629025Z	        price,
2025-09-17T00:39:58.629161Z	        unit
2025-09-17T00:39:58.629263Z	      },
2025-09-17T00:39:58.629415Z	      moq,
2025-09-17T00:39:58.629533Z	      leadTime,
2025-09-17T00:39:58.629641Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.629759Z	      "price": tiers[0].price,
2025-09-17T00:39:58.629862Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.629966Z	    },
2025-09-17T00:39:58.630073Z	    inventory{
2025-09-17T00:39:58.630173Z	      quantity,
2025-09-17T00:39:58.630448Z	      status,
2025-09-17T00:39:58.630564Z	      warehouse,
2025-09-17T00:39:58.630892Z	      lastUpdated,
2025-09-17T00:39:58.630977Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.631048Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.631113Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.631168Z	    },
2025-09-17T00:39:58.631222Z	    isActive,
2025-09-17T00:39:58.6313Z	    isFeatured,
2025-09-17T00:39:58.631381Z	    isNew,
2025-09-17T00:39:58.631469Z	    _createdAt,
2025-09-17T00:39:58.631687Z	    _updatedAt
2025-09-17T00:39:58.6318Z	  
2025-09-17T00:39:58.631895Z	      },
2025-09-17T00:39:58.632014Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-17T00:39:58.632327Z	    }
2025-09-17T00:39:58.632561Z	  
2025-09-17T00:39:58.632778Z	Query parameters: {
2025-09-17T00:39:58.632889Z	  limit: 8,
2025-09-17T00:39:58.633004Z	  offset: 0,
2025-09-17T00:39:58.633118Z	  category: undefined,
2025-09-17T00:39:58.633241Z	  brand: 'epcos',
2025-09-17T00:39:58.633376Z	  featured: undefined
2025-09-17T00:39:58.633495Z	}
2025-09-17T00:39:58.633601Z	Fetching solutions with query: 
2025-09-17T00:39:58.633702Z	    {
2025-09-17T00:39:58.633804Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.633909Z	        
2025-09-17T00:39:58.634037Z	    _id,
2025-09-17T00:39:58.634144Z	    title,
2025-09-17T00:39:58.634254Z	    "slug": slug.current,
2025-09-17T00:39:58.634382Z	    summary,
2025-09-17T00:39:58.63449Z	    description,
2025-09-17T00:39:58.634597Z	    coverImage,
2025-09-17T00:39:58.634692Z	    primaryBrand->{
2025-09-17T00:39:58.634785Z	      _id,
2025-09-17T00:39:58.634885Z	      name,
2025-09-17T00:39:58.635498Z	      "slug": slug.current,
2025-09-17T00:39:58.635697Z	      logo
2025-09-17T00:39:58.636Z	    },
2025-09-17T00:39:58.636155Z	    relatedBrands[]->{
2025-09-17T00:39:58.636318Z	      _id,
2025-09-17T00:39:58.636499Z	      name,
2025-09-17T00:39:58.636827Z	      "slug": slug.current,
2025-09-17T00:39:58.637044Z	      logo
2025-09-17T00:39:58.637246Z	    },
2025-09-17T00:39:58.637507Z	    targetMarket,
2025-09-17T00:39:58.637665Z	    complexity,
2025-09-17T00:39:58.637796Z	    publishedAt,
2025-09-17T00:39:58.63791Z	    isPublished,
2025-09-17T00:39:58.638022Z	    isFeatured,
2025-09-17T00:39:58.638148Z	    viewCount,
2025-09-17T00:39:58.638257Z	    _createdAt,
2025-09-17T00:39:58.638439Z	    _updatedAt
2025-09-17T00:39:58.638724Z	  
2025-09-17T00:39:58.639181Z	      },
2025-09-17T00:39:58.641251Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-17T00:39:58.641427Z	    }
2025-09-17T00:39:58.641545Z	  
2025-09-17T00:39:58.641656Z	Query parameters: {
2025-09-17T00:39:58.641754Z	  limit: 4,
2025-09-17T00:39:58.64185Z	  offset: 0,
2025-09-17T00:39:58.641946Z	  targetMarket: undefined,
2025-09-17T00:39:58.642052Z	  brand: 'epcos',
2025-09-17T00:39:58.642145Z	  featured: undefined
2025-09-17T00:39:58.642243Z	}
2025-09-17T00:39:58.64361Z	✅ [getBrandData] Found brand: Epcos
2025-09-17T00:39:58.643789Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:58.643969Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.645464Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-17T00:39:58.645601Z	Fetching products with query: 
2025-09-17T00:39:58.645708Z	    {
2025-09-17T00:39:58.645808Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.645905Z	        
2025-09-17T00:39:58.646032Z	    _id,
2025-09-17T00:39:58.646137Z	    _type,
2025-09-17T00:39:58.646233Z	    partNumber,
2025-09-17T00:39:58.646345Z	    "slug": slug.current,
2025-09-17T00:39:58.646433Z	    title,
2025-09-17T00:39:58.646525Z	    shortDescription,
2025-09-17T00:39:58.646627Z	    image,
2025-09-17T00:39:58.646725Z	    brand->{
2025-09-17T00:39:58.646819Z	      name,
2025-09-17T00:39:58.646914Z	      "slug": slug.current,
2025-09-17T00:39:58.647041Z	      logo
2025-09-17T00:39:58.647237Z	    },
2025-09-17T00:39:58.647367Z	    category->{
2025-09-17T00:39:58.647472Z	      name,
2025-09-17T00:39:58.647571Z	      "slug": slug.current
2025-09-17T00:39:58.64769Z	    },
2025-09-17T00:39:58.647844Z	    pricing{
2025-09-17T00:39:58.647959Z	      currency,
2025-09-17T00:39:58.64806Z	      tiers[]{
2025-09-17T00:39:58.648159Z	        quantity,
2025-09-17T00:39:58.648256Z	        price,
2025-09-17T00:39:58.648379Z	        unit
2025-09-17T00:39:58.648485Z	      },
2025-09-17T00:39:58.648599Z	      moq,
2025-09-17T00:39:58.648711Z	      leadTime,
2025-09-17T00:39:58.648823Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.649053Z	      "price": tiers[0].price,
2025-09-17T00:39:58.649202Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.64935Z	    },
2025-09-17T00:39:58.649476Z	    inventory{
2025-09-17T00:39:58.649658Z	      quantity,
2025-09-17T00:39:58.649746Z	      status,
2025-09-17T00:39:58.649808Z	      warehouse,
2025-09-17T00:39:58.649866Z	      lastUpdated,
2025-09-17T00:39:58.649922Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.649979Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.650036Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.65009Z	    },
2025-09-17T00:39:58.650143Z	    isActive,
2025-09-17T00:39:58.650198Z	    isFeatured,
2025-09-17T00:39:58.650251Z	    isNew,
2025-09-17T00:39:58.650343Z	    _createdAt,
2025-09-17T00:39:58.650405Z	    _updatedAt
2025-09-17T00:39:58.650677Z	  
2025-09-17T00:39:58.650785Z	      },
2025-09-17T00:39:58.650853Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-17T00:39:58.650918Z	    }
2025-09-17T00:39:58.650974Z	  
2025-09-17T00:39:58.651031Z	Query parameters: {
2025-09-17T00:39:58.651085Z	  limit: 8,
2025-09-17T00:39:58.651138Z	  offset: 0,
2025-09-17T00:39:58.65119Z	  category: undefined,
2025-09-17T00:39:58.651248Z	  brand: 'epcos',
2025-09-17T00:39:58.651327Z	  featured: undefined
2025-09-17T00:39:58.651382Z	}
2025-09-17T00:39:58.651434Z	Fetching solutions with query: 
2025-09-17T00:39:58.651487Z	    {
2025-09-17T00:39:58.65154Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.651607Z	        
2025-09-17T00:39:58.651664Z	    _id,
2025-09-17T00:39:58.651717Z	    title,
2025-09-17T00:39:58.651779Z	    "slug": slug.current,
2025-09-17T00:39:58.651833Z	    summary,
2025-09-17T00:39:58.651885Z	    description,
2025-09-17T00:39:58.651941Z	    coverImage,
2025-09-17T00:39:58.652004Z	    primaryBrand->{
2025-09-17T00:39:58.652057Z	      _id,
2025-09-17T00:39:58.652109Z	      name,
2025-09-17T00:39:58.652161Z	      "slug": slug.current,
2025-09-17T00:39:58.652219Z	      logo
2025-09-17T00:39:58.687402Z	    },
2025-09-17T00:39:58.687686Z	    relatedBrands[]->{
2025-09-17T00:39:58.687831Z	      _id,
2025-09-17T00:39:58.687933Z	      name,
2025-09-17T00:39:58.688044Z	      "slug": slug.current,
2025-09-17T00:39:58.68815Z	      logo
2025-09-17T00:39:58.688252Z	    },
2025-09-17T00:39:58.688391Z	    targetMarket,
2025-09-17T00:39:58.688497Z	    complexity,
2025-09-17T00:39:58.688599Z	    publishedAt,
2025-09-17T00:39:58.688697Z	    isPublished,
2025-09-17T00:39:58.68881Z	    isFeatured,
2025-09-17T00:39:58.688908Z	    viewCount,
2025-09-17T00:39:58.689004Z	    _createdAt,
2025-09-17T00:39:58.689097Z	    _updatedAt
2025-09-17T00:39:58.689185Z	  
2025-09-17T00:39:58.689295Z	      },
2025-09-17T00:39:58.689398Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-17T00:39:58.6895Z	    }
2025-09-17T00:39:58.689733Z	  
2025-09-17T00:39:58.690006Z	Query parameters: {
2025-09-17T00:39:58.690126Z	  limit: 4,
2025-09-17T00:39:58.690284Z	  offset: 0,
2025-09-17T00:39:58.69677Z	  targetMarket: undefined,
2025-09-17T00:39:58.699896Z	  brand: 'epcos',
2025-09-17T00:39:58.702414Z	  featured: undefined
2025-09-17T00:39:58.70265Z	}
2025-09-17T00:39:58.702848Z	✅ [getBrandData] Found brand: Epcos
2025-09-17T00:39:58.703008Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:58.703216Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.703569Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-17T00:39:58.703802Z	Fetching products with query: 
2025-09-17T00:39:58.704026Z	    {
2025-09-17T00:39:58.704184Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.704401Z	        
2025-09-17T00:39:58.704558Z	    _id,
2025-09-17T00:39:58.704833Z	    _type,
2025-09-17T00:39:58.704976Z	    partNumber,
2025-09-17T00:39:58.705168Z	    "slug": slug.current,
2025-09-17T00:39:58.705359Z	    title,
2025-09-17T00:39:58.705484Z	    shortDescription,
2025-09-17T00:39:58.705681Z	    image,
2025-09-17T00:39:58.705964Z	    brand->{
2025-09-17T00:39:58.706494Z	      name,
2025-09-17T00:39:58.706808Z	      "slug": slug.current,
2025-09-17T00:39:58.707064Z	      logo
2025-09-17T00:39:58.707304Z	    },
2025-09-17T00:39:58.707424Z	    category->{
2025-09-17T00:39:58.707612Z	      name,
2025-09-17T00:39:58.707814Z	      "slug": slug.current
2025-09-17T00:39:58.707997Z	    },
2025-09-17T00:39:58.708176Z	    pricing{
2025-09-17T00:39:58.708411Z	      currency,
2025-09-17T00:39:58.708765Z	      tiers[]{
2025-09-17T00:39:58.708901Z	        quantity,
2025-09-17T00:39:58.709016Z	        price,
2025-09-17T00:39:58.709133Z	        unit
2025-09-17T00:39:58.709302Z	      },
2025-09-17T00:39:58.709458Z	      moq,
2025-09-17T00:39:58.709569Z	      leadTime,
2025-09-17T00:39:58.709678Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.709781Z	      "price": tiers[0].price,
2025-09-17T00:39:58.709885Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.71001Z	    },
2025-09-17T00:39:58.710112Z	    inventory{
2025-09-17T00:39:58.710213Z	      quantity,
2025-09-17T00:39:58.710336Z	      status,
2025-09-17T00:39:58.7106Z	      warehouse,
2025-09-17T00:39:58.710824Z	      lastUpdated,
2025-09-17T00:39:58.710981Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.711101Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.711427Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.711582Z	    },
2025-09-17T00:39:58.711753Z	    isActive,
2025-09-17T00:39:58.711916Z	    isFeatured,
2025-09-17T00:39:58.712041Z	    isNew,
2025-09-17T00:39:58.712171Z	    _createdAt,
2025-09-17T00:39:58.712643Z	    _updatedAt
2025-09-17T00:39:58.717558Z	  
2025-09-17T00:39:58.717849Z	      },
2025-09-17T00:39:58.718119Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-17T00:39:58.718427Z	    }
2025-09-17T00:39:58.718682Z	  
2025-09-17T00:39:58.718939Z	Query parameters: {
2025-09-17T00:39:58.719195Z	  limit: 8,
2025-09-17T00:39:58.719448Z	  offset: 0,
2025-09-17T00:39:58.719589Z	  category: undefined,
2025-09-17T00:39:58.719848Z	  brand: 'epcos',
2025-09-17T00:39:58.719963Z	  featured: undefined
2025-09-17T00:39:58.720194Z	}
2025-09-17T00:39:58.720387Z	Fetching solutions with query: 
2025-09-17T00:39:58.720585Z	    {
2025-09-17T00:39:58.720793Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.720987Z	        
2025-09-17T00:39:58.721685Z	    _id,
2025-09-17T00:39:58.722227Z	    title,
2025-09-17T00:39:58.722425Z	    "slug": slug.current,
2025-09-17T00:39:58.722615Z	    summary,
2025-09-17T00:39:58.722883Z	    description,
2025-09-17T00:39:58.723065Z	    coverImage,
2025-09-17T00:39:58.723218Z	    primaryBrand->{
2025-09-17T00:39:58.723384Z	      _id,
2025-09-17T00:39:58.723533Z	      name,
2025-09-17T00:39:58.723698Z	      "slug": slug.current,
2025-09-17T00:39:58.723871Z	      logo
2025-09-17T00:39:58.724028Z	    },
2025-09-17T00:39:58.724188Z	    relatedBrands[]->{
2025-09-17T00:39:58.72436Z	      _id,
2025-09-17T00:39:58.724507Z	      name,
2025-09-17T00:39:58.724654Z	      "slug": slug.current,
2025-09-17T00:39:58.72485Z	      logo
2025-09-17T00:39:58.724983Z	    },
2025-09-17T00:39:58.725194Z	    targetMarket,
2025-09-17T00:39:58.725341Z	    complexity,
2025-09-17T00:39:58.725452Z	    publishedAt,
2025-09-17T00:39:58.727402Z	    isPublished,
2025-09-17T00:39:58.727561Z	    isFeatured,
2025-09-17T00:39:58.727725Z	    viewCount,
2025-09-17T00:39:58.72788Z	    _createdAt,
2025-09-17T00:39:58.728019Z	    _updatedAt
2025-09-17T00:39:58.728171Z	  
2025-09-17T00:39:58.72833Z	      },
2025-09-17T00:39:58.728829Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-17T00:39:58.728985Z	    }
2025-09-17T00:39:58.729148Z	  
2025-09-17T00:39:58.729345Z	Query parameters: {
2025-09-17T00:39:58.729519Z	  limit: 4,
2025-09-17T00:39:58.729714Z	  offset: 0,
2025-09-17T00:39:58.729888Z	  targetMarket: undefined,
2025-09-17T00:39:58.730068Z	  brand: 'epcos',
2025-09-17T00:39:58.730229Z	  featured: undefined
2025-09-17T00:39:58.730732Z	}
2025-09-17T00:39:58.730908Z	✅ [getBrandData] Found brand: Epcos
2025-09-17T00:39:58.731099Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:58.731276Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.731438Z	✅ [getBrandData] Found brand: ncc
2025-09-17T00:39:58.731604Z	✅ [getBrandData] Found brand: ncc
2025-09-17T00:39:58.731775Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:58.731927Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:58.732065Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.732209Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.732817Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-17T00:39:58.732984Z	Fetching products with query: 
2025-09-17T00:39:58.733305Z	    {
2025-09-17T00:39:58.733696Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.734328Z	        
2025-09-17T00:39:58.734505Z	    _id,
2025-09-17T00:39:58.734623Z	    _type,
2025-09-17T00:39:58.734724Z	    partNumber,
2025-09-17T00:39:58.734933Z	    "slug": slug.current,
2025-09-17T00:39:58.735052Z	    title,
2025-09-17T00:39:58.735221Z	    shortDescription,
2025-09-17T00:39:58.735444Z	    image,
2025-09-17T00:39:58.735793Z	    brand->{
2025-09-17T00:39:58.735923Z	      name,
2025-09-17T00:39:58.736041Z	      "slug": slug.current,
2025-09-17T00:39:58.736491Z	      logo
2025-09-17T00:39:58.737123Z	    },
2025-09-17T00:39:58.737296Z	    category->{
2025-09-17T00:39:58.737427Z	      name,
2025-09-17T00:39:58.73753Z	      "slug": slug.current
2025-09-17T00:39:58.73763Z	    },
2025-09-17T00:39:58.737733Z	    pricing{
2025-09-17T00:39:58.737832Z	      currency,
2025-09-17T00:39:58.737946Z	      tiers[]{
2025-09-17T00:39:58.738137Z	        quantity,
2025-09-17T00:39:58.73824Z	        price,
2025-09-17T00:39:58.73864Z	        unit
2025-09-17T00:39:58.73875Z	      },
2025-09-17T00:39:58.738975Z	      moq,
2025-09-17T00:39:58.739093Z	      leadTime,
2025-09-17T00:39:58.739275Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.739414Z	      "price": tiers[0].price,
2025-09-17T00:39:58.739616Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.739747Z	    },
2025-09-17T00:39:58.739848Z	    inventory{
2025-09-17T00:39:58.739982Z	      quantity,
2025-09-17T00:39:58.740221Z	      status,
2025-09-17T00:39:58.740398Z	      warehouse,
2025-09-17T00:39:58.740542Z	      lastUpdated,
2025-09-17T00:39:58.740715Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.740872Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.741044Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.741188Z	    },
2025-09-17T00:39:58.74132Z	    isActive,
2025-09-17T00:39:58.741431Z	    isFeatured,
2025-09-17T00:39:58.741539Z	    isNew,
2025-09-17T00:39:58.741646Z	    _createdAt,
2025-09-17T00:39:58.741748Z	    _updatedAt
2025-09-17T00:39:58.741859Z	  
2025-09-17T00:39:58.741958Z	      },
2025-09-17T00:39:58.742059Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-17T00:39:58.742181Z	    }
2025-09-17T00:39:58.742301Z	  
2025-09-17T00:39:58.742406Z	Query parameters: {
2025-09-17T00:39:58.742516Z	  limit: 8,
2025-09-17T00:39:58.742614Z	  offset: 0,
2025-09-17T00:39:58.742711Z	  category: undefined,
2025-09-17T00:39:58.742818Z	  brand: 'qualcomm',
2025-09-17T00:39:58.742922Z	  featured: undefined
2025-09-17T00:39:58.74302Z	}
2025-09-17T00:39:58.743298Z	Fetching solutions with query: 
2025-09-17T00:39:58.743696Z	    {
2025-09-17T00:39:58.743836Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.743988Z	        
2025-09-17T00:39:58.744111Z	    _id,
2025-09-17T00:39:58.744229Z	    title,
2025-09-17T00:39:58.744363Z	    "slug": slug.current,
2025-09-17T00:39:58.744482Z	    summary,
2025-09-17T00:39:58.744594Z	    description,
2025-09-17T00:39:58.744711Z	    coverImage,
2025-09-17T00:39:58.744838Z	    primaryBrand->{
2025-09-17T00:39:58.744945Z	      _id,
2025-09-17T00:39:58.74505Z	      name,
2025-09-17T00:39:58.745152Z	      "slug": slug.current,
2025-09-17T00:39:58.745255Z	      logo
2025-09-17T00:39:58.745384Z	    },
2025-09-17T00:39:58.745493Z	    relatedBrands[]->{
2025-09-17T00:39:58.745604Z	      _id,
2025-09-17T00:39:58.745683Z	      name,
2025-09-17T00:39:58.74574Z	      "slug": slug.current,
2025-09-17T00:39:58.745806Z	      logo
2025-09-17T00:39:58.74586Z	    },
2025-09-17T00:39:58.74592Z	    targetMarket,
2025-09-17T00:39:58.745977Z	    complexity,
2025-09-17T00:39:58.746046Z	    publishedAt,
2025-09-17T00:39:58.746103Z	    isPublished,
2025-09-17T00:39:58.746156Z	    isFeatured,
2025-09-17T00:39:58.74621Z	    viewCount,
2025-09-17T00:39:58.746285Z	    _createdAt,
2025-09-17T00:39:58.746414Z	    _updatedAt
2025-09-17T00:39:58.746485Z	  
2025-09-17T00:39:58.746539Z	      },
2025-09-17T00:39:58.746593Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-17T00:39:58.74665Z	    }
2025-09-17T00:39:58.746705Z	  
2025-09-17T00:39:58.746812Z	Query parameters: {
2025-09-17T00:39:58.74688Z	  limit: 4,
2025-09-17T00:39:58.746934Z	  offset: 0,
2025-09-17T00:39:58.746987Z	  targetMarket: undefined,
2025-09-17T00:39:58.747043Z	  brand: 'qualcomm',
2025-09-17T00:39:58.747131Z	  featured: undefined
2025-09-17T00:39:58.747191Z	}
2025-09-17T00:39:58.747245Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-17T00:39:58.747334Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:58.747397Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.747453Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-17T00:39:58.747686Z	Fetching products with query: 
2025-09-17T00:39:58.747848Z	    {
2025-09-17T00:39:58.747936Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.748Z	        
2025-09-17T00:39:58.748055Z	    _id,
2025-09-17T00:39:58.748115Z	    _type,
2025-09-17T00:39:58.751367Z	    partNumber,
2025-09-17T00:39:58.751505Z	    "slug": slug.current,
2025-09-17T00:39:58.751613Z	    title,
2025-09-17T00:39:58.751717Z	    shortDescription,
2025-09-17T00:39:58.751837Z	    image,
2025-09-17T00:39:58.751941Z	    brand->{
2025-09-17T00:39:58.752055Z	      name,
2025-09-17T00:39:58.752152Z	      "slug": slug.current,
2025-09-17T00:39:58.752249Z	      logo
2025-09-17T00:39:58.787683Z	    },
2025-09-17T00:39:58.787876Z	    category->{
2025-09-17T00:39:58.788962Z	      name,
2025-09-17T00:39:58.789353Z	      "slug": slug.current
2025-09-17T00:39:58.789504Z	    },
2025-09-17T00:39:58.789619Z	    pricing{
2025-09-17T00:39:58.789765Z	      currency,
2025-09-17T00:39:58.789902Z	      tiers[]{
2025-09-17T00:39:58.790043Z	        quantity,
2025-09-17T00:39:58.790155Z	        price,
2025-09-17T00:39:58.7911Z	        unit
2025-09-17T00:39:58.791308Z	      },
2025-09-17T00:39:58.791445Z	      moq,
2025-09-17T00:39:58.791572Z	      leadTime,
2025-09-17T00:39:58.791685Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.791796Z	      "price": tiers[0].price,
2025-09-17T00:39:58.791901Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.79201Z	    },
2025-09-17T00:39:58.792117Z	    inventory{
2025-09-17T00:39:58.792223Z	      quantity,
2025-09-17T00:39:58.792349Z	      status,
2025-09-17T00:39:58.792452Z	      warehouse,
2025-09-17T00:39:58.792573Z	      lastUpdated,
2025-09-17T00:39:58.792679Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.792791Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.793515Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.793642Z	    },
2025-09-17T00:39:58.793861Z	    isActive,
2025-09-17T00:39:58.794119Z	    isFeatured,
2025-09-17T00:39:58.79425Z	    isNew,
2025-09-17T00:39:58.794411Z	    _createdAt,
2025-09-17T00:39:58.794587Z	    _updatedAt
2025-09-17T00:39:58.794735Z	  
2025-09-17T00:39:58.794858Z	      },
2025-09-17T00:39:58.794971Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-17T00:39:58.795089Z	    }
2025-09-17T00:39:58.795237Z	  
2025-09-17T00:39:58.795408Z	Query parameters: {
2025-09-17T00:39:58.79553Z	  limit: 8,
2025-09-17T00:39:58.795643Z	  offset: 0,
2025-09-17T00:39:58.795744Z	  category: undefined,
2025-09-17T00:39:58.795849Z	  brand: 'qualcomm',
2025-09-17T00:39:58.795971Z	  featured: undefined
2025-09-17T00:39:58.79608Z	}
2025-09-17T00:39:58.796178Z	Fetching solutions with query: 
2025-09-17T00:39:58.796288Z	    {
2025-09-17T00:39:58.796411Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.796536Z	        
2025-09-17T00:39:58.796642Z	    _id,
2025-09-17T00:39:58.796759Z	    title,
2025-09-17T00:39:58.796887Z	    "slug": slug.current,
2025-09-17T00:39:58.797023Z	    summary,
2025-09-17T00:39:58.797125Z	    description,
2025-09-17T00:39:58.797238Z	    coverImage,
2025-09-17T00:39:58.797406Z	    primaryBrand->{
2025-09-17T00:39:58.797574Z	      _id,
2025-09-17T00:39:58.797699Z	      name,
2025-09-17T00:39:58.797854Z	      "slug": slug.current,
2025-09-17T00:39:58.797994Z	      logo
2025-09-17T00:39:58.79812Z	    },
2025-09-17T00:39:58.798229Z	    relatedBrands[]->{
2025-09-17T00:39:58.798352Z	      _id,
2025-09-17T00:39:58.798454Z	      name,
2025-09-17T00:39:58.798557Z	      "slug": slug.current,
2025-09-17T00:39:58.79869Z	      logo
2025-09-17T00:39:58.798845Z	    },
2025-09-17T00:39:58.798957Z	    targetMarket,
2025-09-17T00:39:58.799064Z	    complexity,
2025-09-17T00:39:58.799174Z	    publishedAt,
2025-09-17T00:39:58.799295Z	    isPublished,
2025-09-17T00:39:58.799421Z	    isFeatured,
2025-09-17T00:39:58.799531Z	    viewCount,
2025-09-17T00:39:58.799642Z	    _createdAt,
2025-09-17T00:39:58.799758Z	    _updatedAt
2025-09-17T00:39:58.799873Z	  
2025-09-17T00:39:58.799982Z	      },
2025-09-17T00:39:58.800089Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-17T00:39:58.800195Z	    }
2025-09-17T00:39:58.800318Z	  
2025-09-17T00:39:58.800432Z	Query parameters: {
2025-09-17T00:39:58.80054Z	  limit: 4,
2025-09-17T00:39:58.800662Z	  offset: 0,
2025-09-17T00:39:58.800777Z	  targetMarket: undefined,
2025-09-17T00:39:58.800893Z	  brand: 'qualcomm',
2025-09-17T00:39:58.801006Z	  featured: undefined
2025-09-17T00:39:58.801111Z	}
2025-09-17T00:39:58.80122Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-17T00:39:58.801359Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:58.801479Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.80159Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-17T00:39:58.801716Z	Fetching products with query: 
2025-09-17T00:39:58.801823Z	    {
2025-09-17T00:39:58.803089Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.803229Z	        
2025-09-17T00:39:58.803359Z	    _id,
2025-09-17T00:39:58.803468Z	    _type,
2025-09-17T00:39:58.80357Z	    partNumber,
2025-09-17T00:39:58.803699Z	    "slug": slug.current,
2025-09-17T00:39:58.803806Z	    title,
2025-09-17T00:39:58.803906Z	    shortDescription,
2025-09-17T00:39:58.804014Z	    image,
2025-09-17T00:39:58.804107Z	    brand->{
2025-09-17T00:39:58.804205Z	      name,
2025-09-17T00:39:58.804324Z	      "slug": slug.current,
2025-09-17T00:39:58.804425Z	      logo
2025-09-17T00:39:58.804544Z	    },
2025-09-17T00:39:58.804666Z	    category->{
2025-09-17T00:39:58.804775Z	      name,
2025-09-17T00:39:58.804877Z	      "slug": slug.current
2025-09-17T00:39:58.804985Z	    },
2025-09-17T00:39:58.805092Z	    pricing{
2025-09-17T00:39:58.805632Z	      currency,
2025-09-17T00:39:58.806971Z	      tiers[]{
2025-09-17T00:39:58.807128Z	        quantity,
2025-09-17T00:39:58.807251Z	        price,
2025-09-17T00:39:58.807394Z	        unit
2025-09-17T00:39:58.80751Z	      },
2025-09-17T00:39:58.807612Z	      moq,
2025-09-17T00:39:58.807721Z	      leadTime,
2025-09-17T00:39:58.807837Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.80797Z	      "price": tiers[0].price,
2025-09-17T00:39:58.808075Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.808179Z	    },
2025-09-17T00:39:58.812212Z	    inventory{
2025-09-17T00:39:58.812921Z	      quantity,
2025-09-17T00:39:58.813071Z	      status,
2025-09-17T00:39:58.813193Z	      warehouse,
2025-09-17T00:39:58.813327Z	      lastUpdated,
2025-09-17T00:39:58.813491Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.813623Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.813739Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.813839Z	    },
2025-09-17T00:39:58.813949Z	    isActive,
2025-09-17T00:39:58.814059Z	    isFeatured,
2025-09-17T00:39:58.814175Z	    isNew,
2025-09-17T00:39:58.814317Z	    _createdAt,
2025-09-17T00:39:58.814424Z	    _updatedAt
2025-09-17T00:39:58.814525Z	  
2025-09-17T00:39:58.81463Z	      },
2025-09-17T00:39:58.814733Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-17T00:39:58.814846Z	    }
2025-09-17T00:39:58.814958Z	  
2025-09-17T00:39:58.815372Z	Query parameters: {
2025-09-17T00:39:58.81551Z	  limit: 8,
2025-09-17T00:39:58.815638Z	  offset: 0,
2025-09-17T00:39:58.815753Z	  category: undefined,
2025-09-17T00:39:58.815863Z	  brand: 'ncc',
2025-09-17T00:39:58.815986Z	  featured: undefined
2025-09-17T00:39:58.816101Z	}
2025-09-17T00:39:58.816208Z	Fetching solutions with query: 
2025-09-17T00:39:58.816343Z	    {
2025-09-17T00:39:58.817376Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.817574Z	        
2025-09-17T00:39:58.817786Z	    _id,
2025-09-17T00:39:58.818Z	    title,
2025-09-17T00:39:58.818251Z	    "slug": slug.current,
2025-09-17T00:39:58.81855Z	    summary,
2025-09-17T00:39:58.818855Z	    description,
2025-09-17T00:39:58.819188Z	    coverImage,
2025-09-17T00:39:58.819438Z	    primaryBrand->{
2025-09-17T00:39:58.819574Z	      _id,
2025-09-17T00:39:58.819689Z	      name,
2025-09-17T00:39:58.81995Z	      "slug": slug.current,
2025-09-17T00:39:58.820079Z	      logo
2025-09-17T00:39:58.820176Z	    },
2025-09-17T00:39:58.820261Z	    relatedBrands[]->{
2025-09-17T00:39:58.820464Z	      _id,
2025-09-17T00:39:58.820615Z	      name,
2025-09-17T00:39:58.820758Z	      "slug": slug.current,
2025-09-17T00:39:58.820858Z	      logo
2025-09-17T00:39:58.821046Z	    },
2025-09-17T00:39:58.821146Z	    targetMarket,
2025-09-17T00:39:58.821237Z	    complexity,
2025-09-17T00:39:58.821358Z	    publishedAt,
2025-09-17T00:39:58.821455Z	    isPublished,
2025-09-17T00:39:58.821547Z	    isFeatured,
2025-09-17T00:39:58.821641Z	    viewCount,
2025-09-17T00:39:58.821734Z	    _createdAt,
2025-09-17T00:39:58.821827Z	    _updatedAt
2025-09-17T00:39:58.821921Z	  
2025-09-17T00:39:58.82203Z	      },
2025-09-17T00:39:58.822127Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-17T00:39:58.822226Z	    }
2025-09-17T00:39:58.82234Z	  
2025-09-17T00:39:58.822438Z	Query parameters: {
2025-09-17T00:39:58.822541Z	  limit: 4,
2025-09-17T00:39:58.82264Z	  offset: 0,
2025-09-17T00:39:58.822735Z	  targetMarket: undefined,
2025-09-17T00:39:58.822871Z	  brand: 'ncc',
2025-09-17T00:39:58.823052Z	  featured: undefined
2025-09-17T00:39:58.823167Z	}
2025-09-17T00:39:58.823342Z	✅ [getBrandData] Found brand: ncc
2025-09-17T00:39:58.82346Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:58.823554Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.823666Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-17T00:39:58.82378Z	Fetching products with query: 
2025-09-17T00:39:58.823885Z	    {
2025-09-17T00:39:58.823992Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.824082Z	        
2025-09-17T00:39:58.824165Z	    _id,
2025-09-17T00:39:58.824253Z	    _type,
2025-09-17T00:39:58.82436Z	    partNumber,
2025-09-17T00:39:58.824447Z	    "slug": slug.current,
2025-09-17T00:39:58.824538Z	    title,
2025-09-17T00:39:58.824707Z	    shortDescription,
2025-09-17T00:39:58.824809Z	    image,
2025-09-17T00:39:58.824905Z	    brand->{
2025-09-17T00:39:58.825013Z	      name,
2025-09-17T00:39:58.825112Z	      "slug": slug.current,
2025-09-17T00:39:58.825207Z	      logo
2025-09-17T00:39:58.825317Z	    },
2025-09-17T00:39:58.825422Z	    category->{
2025-09-17T00:39:58.825517Z	      name,
2025-09-17T00:39:58.825607Z	      "slug": slug.current
2025-09-17T00:39:58.825698Z	    },
2025-09-17T00:39:58.825789Z	    pricing{
2025-09-17T00:39:58.825897Z	      currency,
2025-09-17T00:39:58.826002Z	      tiers[]{
2025-09-17T00:39:58.826105Z	        quantity,
2025-09-17T00:39:58.826204Z	        price,
2025-09-17T00:39:58.826329Z	        unit
2025-09-17T00:39:58.826423Z	      },
2025-09-17T00:39:58.826513Z	      moq,
2025-09-17T00:39:58.826606Z	      leadTime,
2025-09-17T00:39:58.826701Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.826886Z	      "price": tiers[0].price,
2025-09-17T00:39:58.827041Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.827158Z	    },
2025-09-17T00:39:58.827286Z	    inventory{
2025-09-17T00:39:58.827542Z	      quantity,
2025-09-17T00:39:58.827726Z	      status,
2025-09-17T00:39:58.827896Z	      warehouse,
2025-09-17T00:39:58.82805Z	      lastUpdated,
2025-09-17T00:39:58.828197Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.828359Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.828515Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.828858Z	    },
2025-09-17T00:39:58.829089Z	    isActive,
2025-09-17T00:39:58.829245Z	    isFeatured,
2025-09-17T00:39:58.82937Z	    isNew,
2025-09-17T00:39:58.829463Z	    _createdAt,
2025-09-17T00:39:58.829547Z	    _updatedAt
2025-09-17T00:39:58.829724Z	  
2025-09-17T00:39:58.83016Z	      },
2025-09-17T00:39:58.830308Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-17T00:39:58.830429Z	    }
2025-09-17T00:39:58.830537Z	  
2025-09-17T00:39:58.830641Z	Query parameters: {
2025-09-17T00:39:58.830755Z	  limit: 8,
2025-09-17T00:39:58.830861Z	  offset: 0,
2025-09-17T00:39:58.830981Z	  category: undefined,
2025-09-17T00:39:58.8311Z	  brand: 'ncc',
2025-09-17T00:39:58.831212Z	  featured: undefined
2025-09-17T00:39:58.831353Z	}
2025-09-17T00:39:58.831472Z	Fetching solutions with query: 
2025-09-17T00:39:58.831584Z	    {
2025-09-17T00:39:58.831691Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.831801Z	        
2025-09-17T00:39:58.831906Z	    _id,
2025-09-17T00:39:58.832025Z	    title,
2025-09-17T00:39:58.832137Z	    "slug": slug.current,
2025-09-17T00:39:58.832239Z	    summary,
2025-09-17T00:39:58.832354Z	    description,
2025-09-17T00:39:58.832448Z	    coverImage,
2025-09-17T00:39:58.832574Z	    primaryBrand->{
2025-09-17T00:39:58.832681Z	      _id,
2025-09-17T00:39:58.833168Z	      name,
2025-09-17T00:39:58.833447Z	      "slug": slug.current,
2025-09-17T00:39:58.834137Z	      logo
2025-09-17T00:39:58.834263Z	    },
2025-09-17T00:39:58.834987Z	    relatedBrands[]->{
2025-09-17T00:39:58.838657Z	      _id,
2025-09-17T00:39:58.838752Z	      name,
2025-09-17T00:39:58.838873Z	      "slug": slug.current,
2025-09-17T00:39:58.83905Z	      logo
2025-09-17T00:39:58.839195Z	    },
2025-09-17T00:39:58.83934Z	    targetMarket,
2025-09-17T00:39:58.839457Z	    complexity,
2025-09-17T00:39:58.839655Z	    publishedAt,
2025-09-17T00:39:58.839787Z	    isPublished,
2025-09-17T00:39:58.839909Z	    isFeatured,
2025-09-17T00:39:58.840022Z	    viewCount,
2025-09-17T00:39:58.840129Z	    _createdAt,
2025-09-17T00:39:58.840235Z	    _updatedAt
2025-09-17T00:39:58.840368Z	  
2025-09-17T00:39:58.840473Z	      },
2025-09-17T00:39:58.840576Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-17T00:39:58.840686Z	    }
2025-09-17T00:39:58.840789Z	  
2025-09-17T00:39:58.840889Z	Query parameters: {
2025-09-17T00:39:58.841Z	  limit: 4,
2025-09-17T00:39:58.841097Z	  offset: 0,
2025-09-17T00:39:58.841194Z	  targetMarket: undefined,
2025-09-17T00:39:58.841314Z	  brand: 'ncc',
2025-09-17T00:39:58.841384Z	  featured: undefined
2025-09-17T00:39:58.841439Z	}
2025-09-17T00:39:58.841496Z	✅ [getBrandData] Found brand: ncc
2025-09-17T00:39:58.841559Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:58.841619Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.841678Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-17T00:39:58.841735Z	Fetching products with query: 
2025-09-17T00:39:58.841789Z	    {
2025-09-17T00:39:58.841843Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.841897Z	        
2025-09-17T00:39:58.841958Z	    _id,
2025-09-17T00:39:58.842011Z	    _type,
2025-09-17T00:39:58.842067Z	    partNumber,
2025-09-17T00:39:58.84212Z	    "slug": slug.current,
2025-09-17T00:39:58.842174Z	    title,
2025-09-17T00:39:58.842231Z	    shortDescription,
2025-09-17T00:39:58.842314Z	    image,
2025-09-17T00:39:58.842383Z	    brand->{
2025-09-17T00:39:58.842438Z	      name,
2025-09-17T00:39:58.842492Z	      "slug": slug.current,
2025-09-17T00:39:58.842546Z	      logo
2025-09-17T00:39:58.842599Z	    },
2025-09-17T00:39:58.842653Z	    category->{
2025-09-17T00:39:58.842709Z	      name,
2025-09-17T00:39:58.842761Z	      "slug": slug.current
2025-09-17T00:39:58.887365Z	    },
2025-09-17T00:39:58.88778Z	    pricing{
2025-09-17T00:39:58.887962Z	      currency,
2025-09-17T00:39:58.888122Z	      tiers[]{
2025-09-17T00:39:58.888385Z	        quantity,
2025-09-17T00:39:58.888509Z	        price,
2025-09-17T00:39:58.889819Z	        unit
2025-09-17T00:39:58.890338Z	      },
2025-09-17T00:39:58.89107Z	      moq,
2025-09-17T00:39:58.891321Z	      leadTime,
2025-09-17T00:39:58.891727Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.894757Z	      "price": tiers[0].price,
2025-09-17T00:39:58.894935Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.895065Z	    },
2025-09-17T00:39:58.895185Z	    inventory{
2025-09-17T00:39:58.895312Z	      quantity,
2025-09-17T00:39:58.895416Z	      status,
2025-09-17T00:39:58.895516Z	      warehouse,
2025-09-17T00:39:58.895614Z	      lastUpdated,
2025-09-17T00:39:58.895721Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.89582Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.895908Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.895993Z	    },
2025-09-17T00:39:58.896088Z	    isActive,
2025-09-17T00:39:58.896183Z	    isFeatured,
2025-09-17T00:39:58.897054Z	    isNew,
2025-09-17T00:39:58.897241Z	    _createdAt,
2025-09-17T00:39:58.89769Z	    _updatedAt
2025-09-17T00:39:58.897851Z	  
2025-09-17T00:39:58.897986Z	      },
2025-09-17T00:39:58.898119Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-17T00:39:58.898251Z	    }
2025-09-17T00:39:58.89864Z	  
2025-09-17T00:39:58.89878Z	Query parameters: {
2025-09-17T00:39:58.899071Z	  limit: 8,
2025-09-17T00:39:58.899193Z	  offset: 0,
2025-09-17T00:39:58.899362Z	  category: undefined,
2025-09-17T00:39:58.899485Z	  brand: 'mediatek',
2025-09-17T00:39:58.89955Z	  featured: undefined
2025-09-17T00:39:58.89968Z	}
2025-09-17T00:39:58.899812Z	Fetching solutions with query: 
2025-09-17T00:39:58.899919Z	    {
2025-09-17T00:39:58.900009Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.900098Z	        
2025-09-17T00:39:58.900252Z	    _id,
2025-09-17T00:39:58.900384Z	    title,
2025-09-17T00:39:58.900534Z	    "slug": slug.current,
2025-09-17T00:39:58.900677Z	    summary,
2025-09-17T00:39:58.900823Z	    description,
2025-09-17T00:39:58.900984Z	    coverImage,
2025-09-17T00:39:58.901161Z	    primaryBrand->{
2025-09-17T00:39:58.901286Z	      _id,
2025-09-17T00:39:58.901397Z	      name,
2025-09-17T00:39:58.901534Z	      "slug": slug.current,
2025-09-17T00:39:58.901649Z	      logo
2025-09-17T00:39:58.901781Z	    },
2025-09-17T00:39:58.901914Z	    relatedBrands[]->{
2025-09-17T00:39:58.902033Z	      _id,
2025-09-17T00:39:58.902158Z	      name,
2025-09-17T00:39:58.902382Z	      "slug": slug.current,
2025-09-17T00:39:58.902612Z	      logo
2025-09-17T00:39:58.902838Z	    },
2025-09-17T00:39:58.903Z	    targetMarket,
2025-09-17T00:39:58.904051Z	    complexity,
2025-09-17T00:39:58.904151Z	    publishedAt,
2025-09-17T00:39:58.904327Z	    isPublished,
2025-09-17T00:39:58.904408Z	    isFeatured,
2025-09-17T00:39:58.904469Z	    viewCount,
2025-09-17T00:39:58.904524Z	    _createdAt,
2025-09-17T00:39:58.904577Z	    _updatedAt
2025-09-17T00:39:58.904634Z	  
2025-09-17T00:39:58.904724Z	      },
2025-09-17T00:39:58.904788Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-17T00:39:58.904877Z	    }
2025-09-17T00:39:58.904955Z	  
2025-09-17T00:39:58.905087Z	Query parameters: {
2025-09-17T00:39:58.905251Z	  limit: 4,
2025-09-17T00:39:58.905404Z	  offset: 0,
2025-09-17T00:39:58.905513Z	  targetMarket: undefined,
2025-09-17T00:39:58.905619Z	  brand: 'mediatek',
2025-09-17T00:39:58.905726Z	  featured: undefined
2025-09-17T00:39:58.905851Z	}
2025-09-17T00:39:58.905959Z	✅ [getBrandData] Found brand: MediaTek
2025-09-17T00:39:58.906107Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:58.906413Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.906539Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-17T00:39:58.906725Z	Fetching products with query: 
2025-09-17T00:39:58.906865Z	    {
2025-09-17T00:39:58.907064Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.907213Z	        
2025-09-17T00:39:58.90738Z	    _id,
2025-09-17T00:39:58.907516Z	    _type,
2025-09-17T00:39:58.907624Z	    partNumber,
2025-09-17T00:39:58.907743Z	    "slug": slug.current,
2025-09-17T00:39:58.907876Z	    title,
2025-09-17T00:39:58.908111Z	    shortDescription,
2025-09-17T00:39:58.908346Z	    image,
2025-09-17T00:39:58.908754Z	    brand->{
2025-09-17T00:39:58.90896Z	      name,
2025-09-17T00:39:58.909167Z	      "slug": slug.current,
2025-09-17T00:39:58.90936Z	      logo
2025-09-17T00:39:58.909532Z	    },
2025-09-17T00:39:58.909766Z	    category->{
2025-09-17T00:39:58.909996Z	      name,
2025-09-17T00:39:58.910127Z	      "slug": slug.current
2025-09-17T00:39:58.910239Z	    },
2025-09-17T00:39:58.910393Z	    pricing{
2025-09-17T00:39:58.910501Z	      currency,
2025-09-17T00:39:58.910611Z	      tiers[]{
2025-09-17T00:39:58.910732Z	        quantity,
2025-09-17T00:39:58.91185Z	        price,
2025-09-17T00:39:58.91207Z	        unit
2025-09-17T00:39:58.912401Z	      },
2025-09-17T00:39:58.91274Z	      moq,
2025-09-17T00:39:58.912892Z	      leadTime,
2025-09-17T00:39:58.913121Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.913294Z	      "price": tiers[0].price,
2025-09-17T00:39:58.913427Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.913529Z	    },
2025-09-17T00:39:58.913824Z	    inventory{
2025-09-17T00:39:58.914282Z	      quantity,
2025-09-17T00:39:58.914496Z	      status,
2025-09-17T00:39:58.914658Z	      warehouse,
2025-09-17T00:39:58.914783Z	      lastUpdated,
2025-09-17T00:39:58.915119Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.915583Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.915724Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.91584Z	    },
2025-09-17T00:39:58.915944Z	    isActive,
2025-09-17T00:39:58.916064Z	    isFeatured,
2025-09-17T00:39:58.91618Z	    isNew,
2025-09-17T00:39:58.916312Z	    _createdAt,
2025-09-17T00:39:58.918447Z	    _updatedAt
2025-09-17T00:39:58.918589Z	  
2025-09-17T00:39:58.918678Z	      },
2025-09-17T00:39:58.919299Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-17T00:39:58.919434Z	    }
2025-09-17T00:39:58.919529Z	  
2025-09-17T00:39:58.919613Z	Query parameters: {
2025-09-17T00:39:58.919696Z	  limit: 8,
2025-09-17T00:39:58.919786Z	  offset: 0,
2025-09-17T00:39:58.919882Z	  category: undefined,
2025-09-17T00:39:58.919971Z	  brand: 'mediatek',
2025-09-17T00:39:58.920082Z	  featured: undefined
2025-09-17T00:39:58.920182Z	}
2025-09-17T00:39:58.920301Z	Fetching solutions with query: 
2025-09-17T00:39:58.920409Z	    {
2025-09-17T00:39:58.920511Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.920613Z	        
2025-09-17T00:39:58.920711Z	    _id,
2025-09-17T00:39:58.920811Z	    title,
2025-09-17T00:39:58.920941Z	    "slug": slug.current,
2025-09-17T00:39:58.921063Z	    summary,
2025-09-17T00:39:58.921161Z	    description,
2025-09-17T00:39:58.921255Z	    coverImage,
2025-09-17T00:39:58.921385Z	    primaryBrand->{
2025-09-17T00:39:58.921498Z	      _id,
2025-09-17T00:39:58.921591Z	      name,
2025-09-17T00:39:58.92168Z	      "slug": slug.current,
2025-09-17T00:39:58.921777Z	      logo
2025-09-17T00:39:58.921872Z	    },
2025-09-17T00:39:58.921966Z	    relatedBrands[]->{
2025-09-17T00:39:58.92207Z	      _id,
2025-09-17T00:39:58.922164Z	      name,
2025-09-17T00:39:58.922256Z	      "slug": slug.current,
2025-09-17T00:39:58.927411Z	      logo
2025-09-17T00:39:58.930303Z	    },
2025-09-17T00:39:58.930494Z	    targetMarket,
2025-09-17T00:39:58.930642Z	    complexity,
2025-09-17T00:39:58.930801Z	    publishedAt,
2025-09-17T00:39:58.930948Z	    isPublished,
2025-09-17T00:39:58.931089Z	    isFeatured,
2025-09-17T00:39:58.931234Z	    viewCount,
2025-09-17T00:39:58.931765Z	    _createdAt,
2025-09-17T00:39:58.931916Z	    _updatedAt
2025-09-17T00:39:58.932031Z	  
2025-09-17T00:39:58.93214Z	      },
2025-09-17T00:39:58.932235Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-17T00:39:58.932573Z	    }
2025-09-17T00:39:58.932751Z	  
2025-09-17T00:39:58.932905Z	Query parameters: {
2025-09-17T00:39:58.933069Z	  limit: 4,
2025-09-17T00:39:58.933207Z	  offset: 0,
2025-09-17T00:39:58.933359Z	  targetMarket: undefined,
2025-09-17T00:39:58.933483Z	  brand: 'mediatek',
2025-09-17T00:39:58.933609Z	  featured: undefined
2025-09-17T00:39:58.933717Z	}
2025-09-17T00:39:58.933852Z	✅ [getBrandData] Found brand: MediaTek
2025-09-17T00:39:58.933996Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:58.934134Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:58.934256Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-17T00:39:58.934408Z	Fetching products with query: 
2025-09-17T00:39:58.934544Z	    {
2025-09-17T00:39:58.934636Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:58.934727Z	        
2025-09-17T00:39:58.934816Z	    _id,
2025-09-17T00:39:58.934901Z	    _type,
2025-09-17T00:39:58.935046Z	    partNumber,
2025-09-17T00:39:58.935167Z	    "slug": slug.current,
2025-09-17T00:39:58.935383Z	    title,
2025-09-17T00:39:58.937494Z	    shortDescription,
2025-09-17T00:39:58.937596Z	    image,
2025-09-17T00:39:58.937682Z	    brand->{
2025-09-17T00:39:58.937765Z	      name,
2025-09-17T00:39:58.93785Z	      "slug": slug.current,
2025-09-17T00:39:58.937946Z	      logo
2025-09-17T00:39:58.938039Z	    },
2025-09-17T00:39:58.938166Z	    category->{
2025-09-17T00:39:58.938544Z	      name,
2025-09-17T00:39:58.938767Z	      "slug": slug.current
2025-09-17T00:39:58.939037Z	    },
2025-09-17T00:39:58.939169Z	    pricing{
2025-09-17T00:39:58.939327Z	      currency,
2025-09-17T00:39:58.939432Z	      tiers[]{
2025-09-17T00:39:58.939543Z	        quantity,
2025-09-17T00:39:58.939658Z	        price,
2025-09-17T00:39:58.939867Z	        unit
2025-09-17T00:39:58.939985Z	      },
2025-09-17T00:39:58.941336Z	      moq,
2025-09-17T00:39:58.941524Z	      leadTime,
2025-09-17T00:39:58.941725Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:58.94189Z	      "price": tiers[0].price,
2025-09-17T00:39:58.942066Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:58.942229Z	    },
2025-09-17T00:39:58.94238Z	    inventory{
2025-09-17T00:39:58.943329Z	      quantity,
2025-09-17T00:39:58.943617Z	      status,
2025-09-17T00:39:58.943753Z	      warehouse,
2025-09-17T00:39:58.943858Z	      lastUpdated,
2025-09-17T00:39:58.943967Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:58.944065Z	      "inStock": status == "in_stock",
2025-09-17T00:39:58.944157Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:58.944257Z	    },
2025-09-17T00:39:58.947687Z	    isActive,
2025-09-17T00:39:58.947971Z	    isFeatured,
2025-09-17T00:39:58.948088Z	    isNew,
2025-09-17T00:39:58.948178Z	    _createdAt,
2025-09-17T00:39:58.948264Z	    _updatedAt
2025-09-17T00:39:58.955691Z	  
2025-09-17T00:39:58.955793Z	      },
2025-09-17T00:39:58.955897Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-17T00:39:58.956013Z	    }
2025-09-17T00:39:58.956112Z	  
2025-09-17T00:39:58.956218Z	Query parameters: {
2025-09-17T00:39:58.956343Z	  limit: 8,
2025-09-17T00:39:58.956439Z	  offset: 0,
2025-09-17T00:39:58.956542Z	  category: undefined,
2025-09-17T00:39:58.956635Z	  brand: 'pi',
2025-09-17T00:39:58.956728Z	  featured: undefined
2025-09-17T00:39:58.956816Z	}
2025-09-17T00:39:58.956903Z	Fetching solutions with query: 
2025-09-17T00:39:58.956998Z	    {
2025-09-17T00:39:58.957088Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:58.957186Z	        
2025-09-17T00:39:58.960426Z	    _id,
2025-09-17T00:39:58.960575Z	    title,
2025-09-17T00:39:58.960833Z	    "slug": slug.current,
2025-09-17T00:39:58.960948Z	    summary,
2025-09-17T00:39:58.961048Z	    description,
2025-09-17T00:39:58.961151Z	    coverImage,
2025-09-17T00:39:58.961249Z	    primaryBrand->{
2025-09-17T00:39:58.989889Z	      _id,
2025-09-17T00:39:58.990842Z	      name,
2025-09-17T00:39:58.991308Z	      "slug": slug.current,
2025-09-17T00:39:58.991787Z	      logo
2025-09-17T00:39:58.992261Z	    },
2025-09-17T00:39:58.992815Z	    relatedBrands[]->{
2025-09-17T00:39:58.993252Z	      _id,
2025-09-17T00:39:58.9941Z	      name,
2025-09-17T00:39:58.994345Z	      "slug": slug.current,
2025-09-17T00:39:58.995459Z	      logo
2025-09-17T00:39:58.995579Z	    },
2025-09-17T00:39:58.995749Z	    targetMarket,
2025-09-17T00:39:58.99588Z	    complexity,
2025-09-17T00:39:58.996033Z	    publishedAt,
2025-09-17T00:39:58.996181Z	    isPublished,
2025-09-17T00:39:58.996348Z	    isFeatured,
2025-09-17T00:39:58.998394Z	    viewCount,
2025-09-17T00:39:58.998551Z	    _createdAt,
2025-09-17T00:39:58.998659Z	    _updatedAt
2025-09-17T00:39:58.998765Z	  
2025-09-17T00:39:58.998863Z	      },
2025-09-17T00:39:58.99897Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-17T00:39:58.999093Z	    }
2025-09-17T00:39:58.999188Z	  
2025-09-17T00:39:58.999666Z	Query parameters: {
2025-09-17T00:39:58.999821Z	  limit: 4,
2025-09-17T00:39:58.999938Z	  offset: 0,
2025-09-17T00:39:59.000047Z	  targetMarket: undefined,
2025-09-17T00:39:59.000158Z	  brand: 'pi',
2025-09-17T00:39:59.000259Z	  featured: undefined
2025-09-17T00:39:59.000378Z	}
2025-09-17T00:39:59.000478Z	✅ [getBrandData] Found brand: PI
2025-09-17T00:39:59.000579Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:59.000696Z	Solutions fetch result: { totalSolutions❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:59.000803Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:59.000905Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-17T00:39:59.001014Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:39:59.00111Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424)
2025-09-17T00:39:59.001207Z	    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-09-17T00:39:59.001324Z	    at runNextTicks (node:internal/process/task_queues:64:3)
2025-09-17T00:39:59.001421Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-17T00:39:59.002902Z	    at process.processTimers (node:internal/timers:512:7) {
2025-09-17T00:39:59.003063Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:39:59.003161Z	}
2025-09-17T00:39:59.003356Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:59.010774Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:59.010992Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-17T00:39:59.011118Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:39:59.011231Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424)
2025-09-17T00:39:59.011358Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-17T00:39:59.011802Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:39:59.012048Z	}
2025-09-17T00:39:59.012171Z	: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:59.012288Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-17T00:39:59.012397Z	Fetching products with query: 
2025-09-17T00:39:59.01249Z	    {
2025-09-17T00:39:59.012604Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:59.012709Z	        
2025-09-17T00:39:59.012801Z	    _id,
2025-09-17T00:39:59.012896Z	    _type,
2025-09-17T00:39:59.012994Z	    partNumber,
2025-09-17T00:39:59.013085Z	    "slug": slug.current,
2025-09-17T00:39:59.01318Z	    title,
2025-09-17T00:39:59.013289Z	    shortDescription,
2025-09-17T00:39:59.013452Z	    image,
2025-09-17T00:39:59.013634Z	    brand->{
2025-09-17T00:39:59.013743Z	      name,
2025-09-17T00:39:59.013851Z	      "slug": slug.current,
2025-09-17T00:39:59.013987Z	      logo
2025-09-17T00:39:59.014381Z	    },
2025-09-17T00:39:59.014553Z	    category->{
2025-09-17T00:39:59.014692Z	      name,
2025-09-17T00:39:59.015023Z	      "slug": slug.current
2025-09-17T00:39:59.01518Z	    },
2025-09-17T00:39:59.015367Z	    pricing{
2025-09-17T00:39:59.015533Z	      currency,
2025-09-17T00:39:59.015776Z	      tiers[]{
2025-09-17T00:39:59.016074Z	        quantity,
2025-09-17T00:39:59.016255Z	        price,
2025-09-17T00:39:59.016472Z	        unit
2025-09-17T00:39:59.016654Z	      },
2025-09-17T00:39:59.016851Z	      moq,
2025-09-17T00:39:59.017028Z	      leadTime,
2025-09-17T00:39:59.0172Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:59.017476Z	      "price": tiers[0].price,
2025-09-17T00:39:59.017604Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:59.017848Z	    },
2025-09-17T00:39:59.018013Z	    inventory{
2025-09-17T00:39:59.018193Z	      quantity,
2025-09-17T00:39:59.018308Z	      status,
2025-09-17T00:39:59.0184Z	      warehouse,
2025-09-17T00:39:59.018517Z	      lastUpdated,
2025-09-17T00:39:59.018609Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:59.018714Z	      "inStock": status == "in_stock",
2025-09-17T00:39:59.018806Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:59.018895Z	    },
2025-09-17T00:39:59.018983Z	    isActive,
2025-09-17T00:39:59.01909Z	    isFeatured,
2025-09-17T00:39:59.019193Z	    isNew,
2025-09-17T00:39:59.019373Z	    _createdAt,
2025-09-17T00:39:59.019568Z	    _updatedAt
2025-09-17T00:39:59.019692Z	  
2025-09-17T00:39:59.019826Z	      },
2025-09-17T00:39:59.020115Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-17T00:39:59.020256Z	    }
2025-09-17T00:39:59.020392Z	  
2025-09-17T00:39:59.020496Z	Query parameters: {
2025-09-17T00:39:59.020594Z	  limit: 8,
2025-09-17T00:39:59.020693Z	  offset: 0,
2025-09-17T00:39:59.020791Z	  category: undefined,
2025-09-17T00:39:59.020887Z	  brand: 'pi',
2025-09-17T00:39:59.020992Z	  featured: undefined
2025-09-17T00:39:59.021086Z	}
2025-09-17T00:39:59.021176Z	Fetching solutions with query: 
2025-09-17T00:39:59.02131Z	    {
2025-09-17T00:39:59.021466Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:59.021606Z	        
2025-09-17T00:39:59.021776Z	    _id,
2025-09-17T00:39:59.021963Z	    title,
2025-09-17T00:39:59.022139Z	    "slug": slug.current,
2025-09-17T00:39:59.022334Z	    summary,
2025-09-17T00:39:59.02251Z	    description,
2025-09-17T00:39:59.022669Z	    coverImage,
2025-09-17T00:39:59.022806Z	    primaryBrand->{
2025-09-17T00:39:59.022935Z	      _id,
2025-09-17T00:39:59.023059Z	      name,
2025-09-17T00:39:59.023225Z	      "slug": slug.current,
2025-09-17T00:39:59.02336Z	      logo
2025-09-17T00:39:59.02355Z	    },
2025-09-17T00:39:59.023716Z	    relatedBrands[]->{
2025-09-17T00:39:59.023834Z	      _id,
2025-09-17T00:39:59.023937Z	      name,
2025-09-17T00:39:59.024138Z	      "slug": slug.current,
2025-09-17T00:39:59.024376Z	      logo
2025-09-17T00:39:59.024545Z	    },
2025-09-17T00:39:59.024733Z	    targetMarket,
2025-09-17T00:39:59.024899Z	    complexity,
2025-09-17T00:39:59.025216Z	    publishedAt,
2025-09-17T00:39:59.025993Z	    isPublished,
2025-09-17T00:39:59.026379Z	    isFeatured,
2025-09-17T00:39:59.026725Z	    viewCount,
2025-09-17T00:39:59.026848Z	    _createdAt,
2025-09-17T00:39:59.026955Z	    _updatedAt
2025-09-17T00:39:59.027055Z	  
2025-09-17T00:39:59.027148Z	      },
2025-09-17T00:39:59.027249Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-17T00:39:59.027375Z	    }
2025-09-17T00:39:59.02747Z	  
2025-09-17T00:39:59.027557Z	Query parameters: {
2025-09-17T00:39:59.027649Z	  limit: 4,
2025-09-17T00:39:59.027756Z	  offset: 0,
2025-09-17T00:39:59.027853Z	  targetMarket: undefined,
2025-09-17T00:39:59.027949Z	  brand: 'pi',
2025-09-17T00:39:59.02804Z	  featured: undefined
2025-09-17T00:39:59.028129Z	}
2025-09-17T00:39:59.028221Z	✅ [getBrandData] Found brand: PI
2025-09-17T00:39:59.028343Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:59.028828Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:59.028968Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:59.029074Z	Fetching products with query: 
2025-09-17T00:39:59.029164Z	    {
2025-09-17T00:39:59.029252Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:59.029383Z	        
2025-09-17T00:39:59.029495Z	    _id,
2025-09-17T00:39:59.029603Z	    _type,
2025-09-17T00:39:59.029718Z	    partNumber,
2025-09-17T00:39:59.029816Z	    "slug": slug.current,
2025-09-17T00:39:59.029911Z	    title,
2025-09-17T00:39:59.030011Z	    shortDescription,
2025-09-17T00:39:59.030109Z	    image,
2025-09-17T00:39:59.030209Z	    brand->{
2025-09-17T00:39:59.030327Z	      name,
2025-09-17T00:39:59.030432Z	      "slug": slug.current,
2025-09-17T00:39:59.030527Z	      logo
2025-09-17T00:39:59.030655Z	    },
2025-09-17T00:39:59.030893Z	    category->{
2025-09-17T00:39:59.031009Z	      name,
2025-09-17T00:39:59.031168Z	      "slug": slug.current
2025-09-17T00:39:59.031346Z	    },
2025-09-17T00:39:59.031459Z	    pricing{
2025-09-17T00:39:59.031556Z	      currency,
2025-09-17T00:39:59.031645Z	      tiers[]{
2025-09-17T00:39:59.031744Z	        quantity,
2025-09-17T00:39:59.031835Z	        price,
2025-09-17T00:39:59.031923Z	        unit
2025-09-17T00:39:59.032044Z	      },
2025-09-17T00:39:59.032182Z	      moq,
2025-09-17T00:39:59.032309Z	      leadTime,
2025-09-17T00:39:59.032881Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:59.033367Z	      "price": tiers[0].price,
2025-09-17T00:39:59.03348Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:59.033656Z	    },
2025-09-17T00:39:59.033769Z	    inventory{
2025-09-17T00:39:59.033859Z	      quantity,
2025-09-17T00:39:59.033945Z	      status,
2025-09-17T00:39:59.034031Z	      warehouse,
2025-09-17T00:39:59.034116Z	      lastUpdated,
2025-09-17T00:39:59.034202Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:59.034317Z	      "inStock": status == "in_stock",
2025-09-17T00:39:59.03442Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:59.034513Z	    },
2025-09-17T00:39:59.034606Z	    isActive,
2025-09-17T00:39:59.034705Z	    isFeatured,
2025-09-17T00:39:59.034793Z	    isNew,
2025-09-17T00:39:59.034885Z	    _createdAt,
2025-09-17T00:39:59.034973Z	    _updatedAt
2025-09-17T00:39:59.035061Z	  
2025-09-17T00:39:59.035149Z	      },
2025-09-17T00:39:59.035233Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-17T00:39:59.035338Z	    }
2025-09-17T00:39:59.035798Z	  
2025-09-17T00:39:59.036098Z	Query parameters: {
2025-09-17T00:39:59.036701Z	  limit: 8,
2025-09-17T00:39:59.036876Z	  offset: 0,
2025-09-17T00:39:59.037003Z	  category: undefined,
2025-09-17T00:39:59.037116Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:39:59.037231Z	  featured: undefined
2025-09-17T00:39:59.037366Z	}
2025-09-17T00:39:59.037479Z	Fetching solutions with query: 
2025-09-17T00:39:59.037577Z	    {
2025-09-17T00:39:59.037682Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:59.0378Z	        
2025-09-17T00:39:59.037903Z	    _id,
2025-09-17T00:39:59.038017Z	    title,
2025-09-17T00:39:59.038128Z	    "slug": slug.current,
2025-09-17T00:39:59.038233Z	    summary,
2025-09-17T00:39:59.038377Z	    description,
2025-09-17T00:39:59.038471Z	    coverImage,
2025-09-17T00:39:59.038529Z	    primaryBrand->{
2025-09-17T00:39:59.038583Z	      _id,
2025-09-17T00:39:59.038639Z	      name,
2025-09-17T00:39:59.038714Z	      "slug": slug.current,
2025-09-17T00:39:59.038786Z	      logo
2025-09-17T00:39:59.038843Z	    },
2025-09-17T00:39:59.038903Z	    relatedBrands[]->{
2025-09-17T00:39:59.038967Z	      _id,
2025-09-17T00:39:59.03907Z	      name,
2025-09-17T00:39:59.039168Z	      "slug": slug.current,
2025-09-17T00:39:59.039232Z	      logo
2025-09-17T00:39:59.039316Z	    },
2025-09-17T00:39:59.03938Z	    targetMarket,
2025-09-17T00:39:59.039439Z	    complexity,
2025-09-17T00:39:59.039495Z	    publishedAt,
2025-09-17T00:39:59.03955Z	    isPublished,
2025-09-17T00:39:59.039602Z	    isFeatured,
2025-09-17T00:39:59.039655Z	    viewCount,
2025-09-17T00:39:59.039708Z	    _createdAt,
2025-09-17T00:39:59.03976Z	    _updatedAt
2025-09-17T00:39:59.039818Z	  
2025-09-17T00:39:59.039871Z	      },
2025-09-17T00:39:59.039924Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-17T00:39:59.039996Z	    }
2025-09-17T00:39:59.040051Z	  
2025-09-17T00:39:59.040105Z	Query parameters: {
2025-09-17T00:39:59.04016Z	  limit: 4,
2025-09-17T00:39:59.040213Z	  offset: 0,
2025-09-17T00:39:59.087387Z	  targetMarket: undefined,
2025-09-17T00:39:59.097352Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:39:59.097512Z	  featured: undefined
2025-09-17T00:39:59.097606Z	}
2025-09-17T00:39:59.097729Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:59.097847Z	Fetching products with query: 
2025-09-17T00:39:59.097971Z	    {
2025-09-17T00:39:59.098285Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:59.098427Z	        
2025-09-17T00:39:59.098571Z	    _id,
2025-09-17T00:39:59.099003Z	    _type,
2025-09-17T00:39:59.099349Z	    partNumber,
2025-09-17T00:39:59.099754Z	    "slug": slug.current,
2025-09-17T00:39:59.100189Z	    title,
2025-09-17T00:39:59.101687Z	    shortDescription,
2025-09-17T00:39:59.101833Z	    image,
2025-09-17T00:39:59.101939Z	    brand->{
2025-09-17T00:39:59.10203Z	      name,
2025-09-17T00:39:59.102121Z	      "slug": slug.current,
2025-09-17T00:39:59.102229Z	      logo
2025-09-17T00:39:59.102618Z	    },
2025-09-17T00:39:59.102793Z	    category->{
2025-09-17T00:39:59.102904Z	      name,
2025-09-17T00:39:59.103011Z	      "slug": slug.current
2025-09-17T00:39:59.103125Z	    },
2025-09-17T00:39:59.103315Z	    pricing{
2025-09-17T00:39:59.103434Z	      currency,
2025-09-17T00:39:59.103535Z	      tiers[]{
2025-09-17T00:39:59.103654Z	        quantity,
2025-09-17T00:39:59.103852Z	        price,
2025-09-17T00:39:59.103971Z	        unit
2025-09-17T00:39:59.104074Z	      },
2025-09-17T00:39:59.104206Z	      moq,
2025-09-17T00:39:59.104355Z	      leadTime,
2025-09-17T00:39:59.10448Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:59.104591Z	      "price": tiers[0].price,
2025-09-17T00:39:59.104746Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:59.104857Z	    },
2025-09-17T00:39:59.104957Z	    inventory{
2025-09-17T00:39:59.105057Z	      quantity,
2025-09-17T00:39:59.105155Z	      status,
2025-09-17T00:39:59.105252Z	      warehouse,
2025-09-17T00:39:59.105439Z	      lastUpdated,
2025-09-17T00:39:59.105563Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:59.105688Z	      "inStock": status == "in_stock",
2025-09-17T00:39:59.105799Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:59.105907Z	    },
2025-09-17T00:39:59.106012Z	    isActive,
2025-09-17T00:39:59.10611Z	    isFeatured,
2025-09-17T00:39:59.106209Z	    isNew,
2025-09-17T00:39:59.106766Z	    _createdAt,
2025-09-17T00:39:59.106913Z	    _updatedAt
2025-09-17T00:39:59.107023Z	  
2025-09-17T00:39:59.107126Z	      },
2025-09-17T00:39:59.107227Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-17T00:39:59.107362Z	    }
2025-09-17T00:39:59.107468Z	  
2025-09-17T00:39:59.107561Z	Query parameters: {
2025-09-17T00:39:59.107661Z	  limit: 8,
2025-09-17T00:39:59.107778Z	  offset: 0,
2025-09-17T00:39:59.107884Z	  category: undefined,
2025-09-17T00:39:59.107989Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:39:59.108095Z	  featured: undefined
2025-09-17T00:39:59.108203Z	}
2025-09-17T00:39:59.108327Z	Fetching solutions with query: 
2025-09-17T00:39:59.108449Z	    {
2025-09-17T00:39:59.108548Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:59.108689Z	        
2025-09-17T00:39:59.108794Z	    _id,
2025-09-17T00:39:59.108943Z	    title,
2025-09-17T00:39:59.10911Z	    "slug": slug.current,
2025-09-17T00:39:59.109249Z	    summary,
2025-09-17T00:39:59.109853Z	    description,
2025-09-17T00:39:59.10998Z	    coverImage,
2025-09-17T00:39:59.110094Z	    primaryBrand->{
2025-09-17T00:39:59.110196Z	      _id,
2025-09-17T00:39:59.110321Z	      name,
2025-09-17T00:39:59.11043Z	      "slug": slug.current,
2025-09-17T00:39:59.112629Z	      logo
2025-09-17T00:39:59.112795Z	    },
2025-09-17T00:39:59.112924Z	    relatedBrands[]->{
2025-09-17T00:39:59.113041Z	      _id,
2025-09-17T00:39:59.113145Z	      name,
2025-09-17T00:39:59.113258Z	      "slug": slug.current,
2025-09-17T00:39:59.113396Z	      logo
2025-09-17T00:39:59.113483Z	    },
2025-09-17T00:39:59.113584Z	    targetMarket,
2025-09-17T00:39:59.115684Z	    complexity,
2025-09-17T00:39:59.115815Z	    publishedAt,
2025-09-17T00:39:59.115909Z	    isPublished,
2025-09-17T00:39:59.115994Z	    isFeatured,
2025-09-17T00:39:59.116283Z	    viewCount,
2025-09-17T00:39:59.116422Z	    _createdAt,
2025-09-17T00:39:59.116533Z	    _updatedAt
2025-09-17T00:39:59.116626Z	  
2025-09-17T00:39:59.116718Z	      },
2025-09-17T00:39:59.11681Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-17T00:39:59.116901Z	    }
2025-09-17T00:39:59.116988Z	  
2025-09-17T00:39:59.117073Z	Query parameters: {
2025-09-17T00:39:59.117152Z	  limit: 4,
2025-09-17T00:39:59.117232Z	  offset: 0,
2025-09-17T00:39:59.11733Z	  targetMarket: undefined,
2025-09-17T00:39:59.117406Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:39:59.117483Z	  featured: undefined
2025-09-17T00:39:59.117555Z	}
2025-09-17T00:39:59.11763Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:59.117744Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:59.117834Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:59.11792Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:59.118003Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:59.118088Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:59.118173Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-17T00:39:59.118309Z	Fetching products with query: 
2025-09-17T00:39:59.123712Z	    {
2025-09-17T00:39:59.123929Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:59.124044Z	        
2025-09-17T00:39:59.124676Z	    _id,
2025-09-17T00:39:59.124896Z	    _type,
2025-09-17T00:39:59.125103Z	    partNumber,
2025-09-17T00:39:59.125289Z	    "slug": slug.current,
2025-09-17T00:39:59.125453Z	    title,
2025-09-17T00:39:59.125622Z	    shortDescription,
2025-09-17T00:39:59.126422Z	    image,
2025-09-17T00:39:59.126604Z	    brand->{
2025-09-17T00:39:59.126789Z	      name,
2025-09-17T00:39:59.127322Z	      "slug": slug.current,
2025-09-17T00:39:59.127605Z	      logo
2025-09-17T00:39:59.127786Z	    },
2025-09-17T00:39:59.127888Z	    category->{
2025-09-17T00:39:59.127986Z	      name,
2025-09-17T00:39:59.128074Z	      "slug": slug.current
2025-09-17T00:39:59.128156Z	    },
2025-09-17T00:39:59.128257Z	    pricing{
2025-09-17T00:39:59.128366Z	      currency,
2025-09-17T00:39:59.128451Z	      tiers[]{
2025-09-17T00:39:59.128553Z	        quantity,
2025-09-17T00:39:59.128645Z	        price,
2025-09-17T00:39:59.128743Z	        unit
2025-09-17T00:39:59.130237Z	      },
2025-09-17T00:39:59.130401Z	      moq,
2025-09-17T00:39:59.130508Z	      leadTime,
2025-09-17T00:39:59.130602Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:59.130699Z	      "price": tiers[0].price,
2025-09-17T00:39:59.130791Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:59.130884Z	    },
2025-09-17T00:39:59.130986Z	    inventory{
2025-09-17T00:39:59.131077Z	      quantity,
2025-09-17T00:39:59.131164Z	      status,
2025-09-17T00:39:59.131254Z	      warehouse,
2025-09-17T00:39:59.131365Z	      lastUpdated,
2025-09-17T00:39:59.131465Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:59.131563Z	      "inStock": status == "in_stock",
2025-09-17T00:39:59.131656Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:59.131758Z	    },
2025-09-17T00:39:59.131851Z	    isActive,
2025-09-17T00:39:59.132045Z	    isFeatured,
2025-09-17T00:39:59.132168Z	    isNew,
2025-09-17T00:39:59.132333Z	    _createdAt,
2025-09-17T00:39:59.132443Z	    _updatedAt
2025-09-17T00:39:59.132808Z	  
2025-09-17T00:39:59.133039Z	      },
2025-09-17T00:39:59.133195Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-17T00:39:59.133337Z	    }
2025-09-17T00:39:59.133513Z	  
2025-09-17T00:39:59.133646Z	Query parameters: {
2025-09-17T00:39:59.133806Z	  limit: 8,
2025-09-17T00:39:59.133959Z	  offset: 0,
2025-09-17T00:39:59.137764Z	  category: undefined,
2025-09-17T00:39:59.137947Z	  brand: 'cree',
2025-09-17T00:39:59.13805Z	  featured: undefined
2025-09-17T00:39:59.138142Z	}
2025-09-17T00:39:59.138236Z	Fetching solutions with query: 
2025-09-17T00:39:59.138407Z	    {
2025-09-17T00:39:59.138522Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:59.138639Z	        
2025-09-17T00:39:59.138823Z	    _id,
2025-09-17T00:39:59.138975Z	    title,
2025-09-17T00:39:59.139085Z	    "slug": slug.current,
2025-09-17T00:39:59.139184Z	    summary,
2025-09-17T00:39:59.139295Z	    description,
2025-09-17T00:39:59.139396Z	    coverImage,
2025-09-17T00:39:59.139492Z	    primaryBrand->{
2025-09-17T00:39:59.139585Z	      _id,
2025-09-17T00:39:59.139698Z	      name,
2025-09-17T00:39:59.139803Z	      "slug": slug.current,
2025-09-17T00:39:59.139908Z	      logo
2025-09-17T00:39:59.140007Z	    },
2025-09-17T00:39:59.140092Z	    relatedBrands[]->{
2025-09-17T00:39:59.140183Z	      _id,
2025-09-17T00:39:59.140299Z	      name,
2025-09-17T00:39:59.140423Z	      "slug": slug.current,
2025-09-17T00:39:59.140523Z	      logo
2025-09-17T00:39:59.140619Z	    },
2025-09-17T00:39:59.140721Z	    targetMarket,
2025-09-17T00:39:59.140824Z	    complexity,
2025-09-17T00:39:59.140932Z	    publishedAt,
2025-09-17T00:39:59.141066Z	    isPublished,
2025-09-17T00:39:59.141172Z	    isFeatured,
2025-09-17T00:39:59.141301Z	    viewCount,
2025-09-17T00:39:59.141407Z	    _createdAt,
2025-09-17T00:39:59.141503Z	    _updatedAt
2025-09-17T00:39:59.141599Z	  
2025-09-17T00:39:59.141692Z	      },
2025-09-17T00:39:59.141785Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-17T00:39:59.141996Z	    }
2025-09-17T00:39:59.142133Z	  
2025-09-17T00:39:59.142248Z	Query parameters: {
2025-09-17T00:39:59.142401Z	  limit: 4,
2025-09-17T00:39:59.142585Z	  offset: 0,
2025-09-17T00:39:59.142808Z	  targetMarket: undefined,
2025-09-17T00:39:59.142988Z	  brand: 'cree',
2025-09-17T00:39:59.143169Z	  featured: undefined
2025-09-17T00:39:59.143346Z	}
2025-09-17T00:39:59.143502Z	✅ [getBrandData] Found brand: CREE
2025-09-17T00:39:59.143661Z	Products fetch result: {
2025-09-17T00:39:59.143767Z	  totalProducts: 4,
2025-09-17T00:39:59.143942Z	  fetchedProducts: 4,
2025-09-17T00:39:59.144051Z	  firstProduct: {
2025-09-17T00:39:59.144146Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-17T00:39:59.144242Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-17T00:39:59.144354Z	    _type: 'product',
2025-09-17T00:39:59.144446Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-17T00:39:59.144535Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-17T00:39:59.144626Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:59.14473Z	    image: null,
2025-09-17T00:39:59.144823Z	    inventory: {
2025-09-17T00:39:59.144919Z	      inStock: true,
2025-09-17T00:39:59.145009Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-17T00:39:59.145108Z	      quantity: 0,
2025-09-17T00:39:59.145204Z	      status: 'in_stock',
2025-09-17T00:39:59.145454Z	      warehouse: null
2025-09-17T00:39:59.145575Z	    },
2025-09-17T00:39:59.145675Z	    isActive: true,
2025-09-17T00:39:59.145774Z	    isFeatured: false,
2025-09-17T00:39:59.145869Z	    isNew: false,
2025-09-17T00:39:59.145975Z	    partNumber: '11111',
2025-09-17T00:39:59.146078Z	    pricing: {
2025-09-17T00:39:59.146174Z	      currency: 'CNY',
2025-09-17T00:39:59.146284Z	      leadTime: null,
2025-09-17T00:39:59.146585Z	      moq: null,
2025-09-17T00:39:59.146876Z	      price: null,
2025-09-17T00:39:59.146998Z	      tiers: null
2025-09-17T00:39:59.147194Z	    },
2025-09-17T00:39:59.147336Z	    shortDescription: '11111',
2025-09-17T00:39:59.147446Z	    slug: 'sic mosfet',
2025-09-17T00:39:59.147536Z	    title: '111111'
2025-09-17T00:39:59.147655Z	  }
2025-09-17T00:39:59.147761Z	}
2025-09-17T00:39:59.147878Z	Solutions fetch result: {
2025-09-17T00:39:59.148006Z	  totalSolutions: 6,
2025-09-17T00:39:59.148113Z	  fetchedSolutions: 4,
2025-09-17T00:39:59.148211Z	  firstSolution: {
2025-09-17T00:39:59.148335Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-17T00:39:59.148428Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-17T00:39:59.148518Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-17T00:39:59.148611Z	    complexity: 'medium',
2025-09-17T00:39:59.148712Z	    coverImage: null,
2025-09-17T00:39:59.148817Z	    description: [ [Object] ],
2025-09-17T00:39:59.148925Z	    isFeatured: false,
2025-09-17T00:39:59.149018Z	    isPublished: true,
2025-09-17T00:39:59.149111Z	    primaryBrand: {
2025-09-17T00:39:59.149215Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:59.149333Z	      logo: null,
2025-09-17T00:39:59.149411Z	      name: 'CREE',
2025-09-17T00:39:59.149475Z	      slug: 'cree'
2025-09-17T00:39:59.149531Z	    },
2025-09-17T00:39:59.149585Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-17T00:39:59.149642Z	    relatedBrands: null,
2025-09-17T00:39:59.149699Z	    slug: '11111',
2025-09-17T00:39:59.149752Z	    summary: '11111',
2025-09-17T00:39:59.149804Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:59.149856Z	    title: '11111',
2025-09-17T00:39:59.149913Z	    viewCount: 0
2025-09-17T00:39:59.149977Z	  }
2025-09-17T00:39:59.150032Z	}
2025-09-17T00:39:59.150091Z	🔍 [getBrandData] Searching for brand with slug: cree
2025-09-17T00:39:59.15015Z	Fetching products with query: 
2025-09-17T00:39:59.150203Z	    {
2025-09-17T00:39:59.150257Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:59.150351Z	        
2025-09-17T00:39:59.150411Z	    _id,
2025-09-17T00:39:59.150495Z	    _type,
2025-09-17T00:39:59.150553Z	    partNumber,
2025-09-17T00:39:59.150606Z	    "slug": slug.current,
2025-09-17T00:39:59.15066Z	    title,
2025-09-17T00:39:59.150715Z	    shortDescription,
2025-09-17T00:39:59.150767Z	    image,
2025-09-17T00:39:59.150819Z	    brand->{
2025-09-17T00:39:59.150871Z	      name,
2025-09-17T00:39:59.150931Z	      "slug": slug.current,
2025-09-17T00:39:59.150985Z	      logo
2025-09-17T00:39:59.15104Z	    },
2025-09-17T00:39:59.151092Z	    category->{
2025-09-17T00:39:59.151144Z	      name,
2025-09-17T00:39:59.151197Z	      "slug": slug.current
2025-09-17T00:39:59.151255Z	    },
2025-09-17T00:39:59.151337Z	    pricing{
2025-09-17T00:39:59.151417Z	      currency,
2025-09-17T00:39:59.151494Z	      tiers[]{
2025-09-17T00:39:59.151606Z	        quantity,
2025-09-17T00:39:59.151667Z	        price,
2025-09-17T00:39:59.151721Z	        unit
2025-09-17T00:39:59.151773Z	      },
2025-09-17T00:39:59.151839Z	      moq,
2025-09-17T00:39:59.151894Z	      leadTime,
2025-09-17T00:39:59.151955Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:59.152015Z	      "price": tiers[0].price,
2025-09-17T00:39:59.152068Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:59.152121Z	    },
2025-09-17T00:39:59.152175Z	    inventory{
2025-09-17T00:39:59.152227Z	      quantity,
2025-09-17T00:39:59.152301Z	      status,
2025-09-17T00:39:59.152362Z	      warehouse,
2025-09-17T00:39:59.152417Z	      lastUpdated,
2025-09-17T00:39:59.15247Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:59.152537Z	      "inStock": status == "in_stock",
2025-09-17T00:39:59.152601Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:59.152657Z	    },
2025-09-17T00:39:59.152712Z	    isActive,
2025-09-17T00:39:59.152764Z	    isFeatured,
2025-09-17T00:39:59.152816Z	    isNew,
2025-09-17T00:39:59.152873Z	    _createdAt,
2025-09-17T00:39:59.152932Z	    _updatedAt
2025-09-17T00:39:59.152985Z	  
2025-09-17T00:39:59.153037Z	      },
2025-09-17T00:39:59.153089Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "cree"])
2025-09-17T00:39:59.153156Z	    }
2025-09-17T00:39:59.153211Z	  
2025-09-17T00:39:59.153265Z	Query parameters: {
2025-09-17T00:39:59.187639Z	  limit: 8,
2025-09-17T00:39:59.187767Z	  offset: 0,
2025-09-17T00:39:59.18787Z	  category: undefined,
2025-09-17T00:39:59.187979Z	  brand: 'cree',
2025-09-17T00:39:59.188094Z	  featured: undefined
2025-09-17T00:39:59.188203Z	}
2025-09-17T00:39:59.188327Z	Fetching solutions with query: 
2025-09-17T00:39:59.188425Z	    {
2025-09-17T00:39:59.188516Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:59.18861Z	        
2025-09-17T00:39:59.188704Z	    _id,
2025-09-17T00:39:59.188798Z	    title,
2025-09-17T00:39:59.188885Z	    "slug": slug.current,
2025-09-17T00:39:59.188996Z	    summary,
2025-09-17T00:39:59.189101Z	    description,
2025-09-17T00:39:59.189206Z	    coverImage,
2025-09-17T00:39:59.189321Z	    primaryBrand->{
2025-09-17T00:39:59.189414Z	      _id,
2025-09-17T00:39:59.189512Z	      name,
2025-09-17T00:39:59.189599Z	      "slug": slug.current,
2025-09-17T00:39:59.189687Z	      logo
2025-09-17T00:39:59.189777Z	    },
2025-09-17T00:39:59.189879Z	    relatedBrands[]->{
2025-09-17T00:39:59.18997Z	      _id,
2025-09-17T00:39:59.190051Z	      name,
2025-09-17T00:39:59.190111Z	      "slug": slug.current,
2025-09-17T00:39:59.190164Z	      logo
2025-09-17T00:39:59.190248Z	    },
2025-09-17T00:39:59.19036Z	    targetMarket,
2025-09-17T00:39:59.190466Z	    complexity,
2025-09-17T00:39:59.190656Z	    publishedAt,
2025-09-17T00:39:59.190736Z	    isPublished,
2025-09-17T00:39:59.190818Z	    isFeatured,
2025-09-17T00:39:59.190954Z	    viewCount,
2025-09-17T00:39:59.191144Z	    _createdAt,
2025-09-17T00:39:59.191251Z	    _updatedAt
2025-09-17T00:39:59.19137Z	  
2025-09-17T00:39:59.191511Z	      },
2025-09-17T00:39:59.191648Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("cree" in relatedBrands[]->slug.current || primaryBrand->slug.current == "cree")])
2025-09-17T00:39:59.191769Z	    }
2025-09-17T00:39:59.19188Z	  
2025-09-17T00:39:59.191995Z	Query parameters: {
2025-09-17T00:39:59.192157Z	  limit: 4,
2025-09-17T00:39:59.192331Z	  offset: 0,
2025-09-17T00:39:59.192412Z	  targetMarket: undefined,
2025-09-17T00:39:59.192491Z	  brand: 'cree',
2025-09-17T00:39:59.192634Z	  featured: undefined
2025-09-17T00:39:59.192785Z	}
2025-09-17T00:39:59.192892Z	✅ [getBrandData] Found brand: CREE
2025-09-17T00:39:59.193056Z	Products fetch result: {
2025-09-17T00:39:59.193193Z	  totalProducts: 4,
2025-09-17T00:39:59.193319Z	  fetchedProducts: 4,
2025-09-17T00:39:59.193457Z	  firstProduct: {
2025-09-17T00:39:59.193572Z	    _createdAt: '2025-09-14T13:03:01Z',
2025-09-17T00:39:59.193719Z	    _id: 'eac33791-573d-4a1a-aae2-73b4cd447abc',
2025-09-17T00:39:59.193887Z	    _type: 'product',
2025-09-17T00:39:59.194025Z	    _updatedAt: '2025-09-14T13:04:16Z',
2025-09-17T00:39:59.194147Z	    brand: { logo: null, name: 'CREE', slug: 'cree' },
2025-09-17T00:39:59.194257Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:39:59.194383Z	    image: null,
2025-09-17T00:39:59.19448Z	    inventory: {
2025-09-17T00:39:59.194592Z	      inStock: true,
2025-09-17T00:39:59.194688Z	      lastUpdated: '2025-09-14T13:02:58.264Z',
2025-09-17T00:39:59.194784Z	      quantity: 0,
2025-09-17T00:39:59.194891Z	      status: 'in_stock',
2025-09-17T00:39:59.195001Z	      warehouse: null
2025-09-17T00:39:59.195102Z	    },
2025-09-17T00:39:59.195203Z	    isActive: true,
2025-09-17T00:39:59.195483Z	    isFeatured: false,
2025-09-17T00:39:59.195607Z	    isNew: false,
2025-09-17T00:39:59.195711Z	    partNumber: '11111',
2025-09-17T00:39:59.195806Z	    pricing: {
2025-09-17T00:39:59.195909Z	      currency: 'CNY',
2025-09-17T00:39:59.196018Z	      leadTime: null,
2025-09-17T00:39:59.196086Z	      moq: null,
2025-09-17T00:39:59.196143Z	      price: null,
2025-09-17T00:39:59.196198Z	      tiers: null
2025-09-17T00:39:59.196253Z	    },
2025-09-17T00:39:59.196341Z	    shortDescription: '11111',
2025-09-17T00:39:59.196409Z	    slug: 'sic mosfet',
2025-09-17T00:39:59.196466Z	    title: '111111'
2025-09-17T00:39:59.196521Z	  }
2025-09-17T00:39:59.196576Z	}
2025-09-17T00:39:59.196637Z	Solutions fetch result: {
2025-09-17T00:39:59.196698Z	  totalSolutions: 6,
2025-09-17T00:39:59.19677Z	  fetchedSolutions: 4,
2025-09-17T00:39:59.196834Z	  firstSolution: {
2025-09-17T00:39:59.196895Z	    _createdAt: '2025-09-14T13:00:42Z',
2025-09-17T00:39:59.196964Z	    _id: 'ee14d323-2790-4cc5-985f-860cb36f2704',
2025-09-17T00:39:59.197037Z	    _updatedAt: '2025-09-14T13:01:23Z',
2025-09-17T00:39:59.197096Z	    complexity: 'medium',
2025-09-17T00:39:59.197158Z	    coverImage: null,
2025-09-17T00:39:59.197222Z	    description: [ [Object] ],
2025-09-17T00:39:59.1973Z	    isFeatured: false,
2025-09-17T00:39:59.197374Z	    isPublished: true,
2025-09-17T00:39:59.197432Z	    primaryBrand: {
2025-09-17T00:39:59.197488Z	      _id: 'a1d8e9bb-bad5-40f0-8596-af924e655f9d',
2025-09-17T00:39:59.197547Z	      logo: null,
2025-09-17T00:39:59.197602Z	      name: 'CREE',
2025-09-17T00:39:59.197661Z	      slug: 'cree'
2025-09-17T00:39:59.19772Z	    },
2025-09-17T00:39:59.197781Z	    publishedAt: '2025-09-14T13:00:40.311Z',
2025-09-17T00:39:59.197843Z	    relatedBrands: null,
2025-09-17T00:39:59.197906Z	    slug: '11111',
2025-09-17T00:39:59.197968Z	    summary: '11111',
2025-09-17T00:39:59.198025Z	    targetMarket: 'industrial-automation',
2025-09-17T00:39:59.198083Z	    title: '11111',
2025-09-17T00:39:59.19814Z	    viewCount: 0
2025-09-17T00:39:59.198204Z	  }
2025-09-17T00:39:59.198275Z	}
2025-09-17T00:39:59.198364Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-17T00:39:59.198451Z	Fetching products with query: 
2025-09-17T00:39:59.198512Z	    {
2025-09-17T00:39:59.198575Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:59.198638Z	        
2025-09-17T00:39:59.198701Z	    _id,
2025-09-17T00:39:59.198761Z	    _type,
2025-09-17T00:39:59.198816Z	    partNumber,
2025-09-17T00:39:59.198872Z	    "slug": slug.current,
2025-09-17T00:39:59.19894Z	    title,
2025-09-17T00:39:59.198999Z	    shortDescription,
2025-09-17T00:39:59.199056Z	    image,
2025-09-17T00:39:59.19911Z	    brand->{
2025-09-17T00:39:59.199164Z	      name,
2025-09-17T00:39:59.199219Z	      "slug": slug.current,
2025-09-17T00:39:59.199288Z	      logo
2025-09-17T00:39:59.199354Z	    },
2025-09-17T00:39:59.199411Z	    category->{
2025-09-17T00:39:59.199464Z	      name,
2025-09-17T00:39:59.199527Z	      "slug": slug.current
2025-09-17T00:39:59.199584Z	    },
2025-09-17T00:39:59.199673Z	    pricing{
2025-09-17T00:39:59.199874Z	      currency,
2025-09-17T00:39:59.200018Z	      tiers[]{
2025-09-17T00:39:59.20013Z	        quantity,
2025-09-17T00:39:59.200229Z	        price,
2025-09-17T00:39:59.200435Z	        unit
2025-09-17T00:39:59.200885Z	      },
2025-09-17T00:39:59.201308Z	      moq,
2025-09-17T00:39:59.201647Z	      leadTime,
2025-09-17T00:39:59.201858Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:59.202166Z	      "price": tiers[0].price,
2025-09-17T00:39:59.202381Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:59.202563Z	    },
2025-09-17T00:39:59.202697Z	    inventory{
2025-09-17T00:39:59.202933Z	      quantity,
2025-09-17T00:39:59.203015Z	      status,
2025-09-17T00:39:59.203195Z	      warehouse,
2025-09-17T00:39:59.203357Z	      lastUpdated,
2025-09-17T00:39:59.203471Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:59.203626Z	      "inStock": status == "in_stock",
2025-09-17T00:39:59.203889Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:59.203993Z	    },
2025-09-17T00:39:59.204113Z	    isActive,
2025-09-17T00:39:59.204189Z	    isFeatured,
2025-09-17T00:39:59.204255Z	    isNew,
2025-09-17T00:39:59.204358Z	    _createdAt,
2025-09-17T00:39:59.204419Z	    _updatedAt
2025-09-17T00:39:59.204476Z	  
2025-09-17T00:39:59.204531Z	      },
2025-09-17T00:39:59.204584Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-17T00:39:59.204646Z	    }
2025-09-17T00:39:59.204711Z	  
2025-09-17T00:39:59.204766Z	Query parameters: {
2025-09-17T00:39:59.204885Z	  limit: 8,
2025-09-17T00:39:59.205065Z	  offset: 0,
2025-09-17T00:39:59.205191Z	  category: undefined,
2025-09-17T00:39:59.205352Z	  brand: 'lem',
2025-09-17T00:39:59.205515Z	  featured: undefined
2025-09-17T00:39:59.20563Z	}
2025-09-17T00:39:59.205732Z	Fetching solutions with query: 
2025-09-17T00:39:59.205831Z	    {
2025-09-17T00:39:59.205932Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:59.206035Z	        
2025-09-17T00:39:59.206143Z	    _id,
2025-09-17T00:39:59.20623Z	    title,
2025-09-17T00:39:59.206332Z	    "slug": slug.current,
2025-09-17T00:39:59.206415Z	    summary,
2025-09-17T00:39:59.206513Z	    description,
2025-09-17T00:39:59.206601Z	    coverImage,
2025-09-17T00:39:59.206689Z	    primaryBrand->{
2025-09-17T00:39:59.206781Z	      _id,
2025-09-17T00:39:59.20687Z	      name,
2025-09-17T00:39:59.206968Z	      "slug": slug.current,
2025-09-17T00:39:59.207072Z	      logo
2025-09-17T00:39:59.207168Z	    },
2025-09-17T00:39:59.207277Z	    relatedBrands[]->{
2025-09-17T00:39:59.207379Z	      _id,
2025-09-17T00:39:59.207479Z	      name,
2025-09-17T00:39:59.207584Z	      "slug": slug.current,
2025-09-17T00:39:59.207688Z	      logo
2025-09-17T00:39:59.207791Z	    },
2025-09-17T00:39:59.207929Z	    targetMarket,
2025-09-17T00:39:59.208025Z	    complexity,
2025-09-17T00:39:59.208114Z	    publishedAt,
2025-09-17T00:39:59.208202Z	    isPublished,
2025-09-17T00:39:59.208315Z	    isFeatured,
2025-09-17T00:39:59.208463Z	    viewCount,
2025-09-17T00:39:59.208568Z	    _createdAt,
2025-09-17T00:39:59.208685Z	    _updatedAt
2025-09-17T00:39:59.2088Z	  
2025-09-17T00:39:59.208927Z	      },
2025-09-17T00:39:59.209028Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-17T00:39:59.209126Z	    }
2025-09-17T00:39:59.209219Z	  
2025-09-17T00:39:59.209329Z	Query parameters: {
2025-09-17T00:39:59.209432Z	  limit: 4,
2025-09-17T00:39:59.20952Z	  offset: 0,
2025-09-17T00:39:59.209629Z	  targetMarket: undefined,
2025-09-17T00:39:59.209731Z	  brand: 'lem',
2025-09-17T00:39:59.209831Z	  featured: undefined
2025-09-17T00:39:59.209946Z	}
2025-09-17T00:39:59.210036Z	✅ [getBrandData] Found brand: LEM
2025-09-17T00:39:59.210123Z	Products fetch result: {
2025-09-17T00:39:59.210209Z	  totalProducts: 3,
2025-09-17T00:39:59.210315Z	  fetchedProducts: 3,
2025-09-17T00:39:59.210592Z	  firstProduct: {
2025-09-17T00:39:59.210707Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-17T00:39:59.210802Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-17T00:39:59.210906Z	    _type: 'product',
2025-09-17T00:39:59.21103Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-17T00:39:59.21113Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-17T00:39:59.211231Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-17T00:39:59.211366Z	    image: null,
2025-09-17T00:39:59.211476Z	    inventory: {
2025-09-17T00:39:59.211577Z	      inStock: true,
2025-09-17T00:39:59.21169Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-17T00:39:59.211784Z	      quantity: 0,
2025-09-17T00:39:59.211874Z	      status: 'in_stock',
2025-09-17T00:39:59.211978Z	      warehouse: null
2025-09-17T00:39:59.212075Z	    },
2025-09-17T00:39:59.212179Z	    isActive: true,
2025-09-17T00:39:59.212302Z	    isFeatured: false,
2025-09-17T00:39:59.212398Z	    isNew: false,
2025-09-17T00:39:59.21249Z	    partNumber: 'la55-p',
2025-09-17T00:39:59.212601Z	    pricing: {
2025-09-17T00:39:59.212713Z	      currency: 'CNY',
2025-09-17T00:39:59.212816Z	      leadTime: null,
2025-09-17T00:39:59.21301Z	      moq: null,
2025-09-17T00:39:59.213182Z	      price: null,
2025-09-17T00:39:59.213309Z	      tiers: null
2025-09-17T00:39:59.213412Z	    },
2025-09-17T00:39:59.213523Z	    shortDescription: '电流传感器la55-p',
2025-09-17T00:39:59.213622Z	    slug: 'la55-p',
2025-09-17T00:39:59.213714Z	    title: '电流传感器la55-p'
2025-09-17T00:39:59.213835Z	  }
2025-09-17T00:39:59.213955Z	}
2025-09-17T00:39:59.214062Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:59.214171Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-17T00:39:59.214284Z	Fetching products with query: 
2025-09-17T00:39:59.214406Z	    {
2025-09-17T00:39:59.214519Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:59.214619Z	        
2025-09-17T00:39:59.21471Z	    _id,
2025-09-17T00:39:59.2148Z	    _type,
2025-09-17T00:39:59.214895Z	    partNumber,
2025-09-17T00:39:59.215002Z	    "slug": slug.current,
2025-09-17T00:39:59.215091Z	    title,
2025-09-17T00:39:59.215207Z	    shortDescription,
2025-09-17T00:39:59.215386Z	    image,
2025-09-17T00:39:59.215506Z	    brand->{
2025-09-17T00:39:59.215626Z	      name,
2025-09-17T00:39:59.215746Z	      "slug": slug.current,
2025-09-17T00:39:59.21585Z	      logo
2025-09-17T00:39:59.21597Z	    },
2025-09-17T00:39:59.216115Z	    category->{❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:59.216183Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:59.216239Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-17T00:39:59.216312Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:39:59.216373Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424)
2025-09-17T00:39:59.216465Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-17T00:39:59.216557Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:39:59.216644Z	}
2025-09-17T00:39:59.216766Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:59.216872Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:59.216984Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-17T00:39:59.217095Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:39:59.217347Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424)
2025-09-17T00:39:59.217496Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-17T00:39:59.217767Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:39:59.217859Z	}
2025-09-17T00:39:59.218012Z	
2025-09-17T00:39:59.218117Z	      name,
2025-09-17T00:39:59.218242Z	      "slug": slug.current
2025-09-17T00:39:59.218359Z	    },
2025-09-17T00:39:59.218473Z	    pricing{
2025-09-17T00:39:59.218585Z	      currency,
2025-09-17T00:39:59.218699Z	      tiers[]{
2025-09-17T00:39:59.21884Z	        quantity,
2025-09-17T00:39:59.218968Z	        price,
2025-09-17T00:39:59.219197Z	        unit
2025-09-17T00:39:59.219631Z	      },
2025-09-17T00:39:59.219759Z	      moq,
2025-09-17T00:39:59.219911Z	      leadTime,
2025-09-17T00:39:59.220207Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:59.220315Z	      "price": tiers[0].price,
2025-09-17T00:39:59.220423Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:59.220527Z	    },
2025-09-17T00:39:59.220631Z	    inventory{
2025-09-17T00:39:59.220745Z	      quantity,
2025-09-17T00:39:59.220904Z	      status,
2025-09-17T00:39:59.221017Z	      warehouse,
2025-09-17T00:39:59.221118Z	      lastUpdated,
2025-09-17T00:39:59.221214Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:59.221333Z	      "inStock": status == "in_stock",
2025-09-17T00:39:59.221431Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:59.221528Z	    },
2025-09-17T00:39:59.221647Z	    isActive,
2025-09-17T00:39:59.221742Z	    isFeatured,
2025-09-17T00:39:59.221832Z	    isNew,
2025-09-17T00:39:59.221915Z	    _createdAt,
2025-09-17T00:39:59.222012Z	    _updatedAt
2025-09-17T00:39:59.222106Z	  
2025-09-17T00:39:59.222179Z	      },
2025-09-17T00:39:59.222326Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-17T00:39:59.222436Z	    }
2025-09-17T00:39:59.222551Z	  
2025-09-17T00:39:59.222652Z	Query parameters: {
2025-09-17T00:39:59.222752Z	  limit: 8,
2025-09-17T00:39:59.222891Z	  offset: 0,
2025-09-17T00:39:59.223075Z	  category: undefined,
2025-09-17T00:39:59.223215Z	  brand: 'lem',
2025-09-17T00:39:59.223362Z	  featured: undefined
2025-09-17T00:39:59.223498Z	}
2025-09-17T00:39:59.223603Z	Fetching solutions with query: 
2025-09-17T00:39:59.223704Z	    {
2025-09-17T00:39:59.223817Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:59.223919Z	        
2025-09-17T00:39:59.22402Z	    _id,
2025-09-17T00:39:59.224096Z	    title,
2025-09-17T00:39:59.224174Z	    "slug": slug.current,
2025-09-17T00:39:59.22425Z	    summary,
2025-09-17T00:39:59.224342Z	    description,
2025-09-17T00:39:59.22441Z	    coverImage,
2025-09-17T00:39:59.224532Z	    primaryBrand->{
2025-09-17T00:39:59.224766Z	      _id,
2025-09-17T00:39:59.224874Z	      name,
2025-09-17T00:39:59.224935Z	      "slug": slug.current,
2025-09-17T00:39:59.224998Z	      logo
2025-09-17T00:39:59.225059Z	    },
2025-09-17T00:39:59.225114Z	    relatedBrands[]->{
2025-09-17T00:39:59.225167Z	      _id,
2025-09-17T00:39:59.225232Z	      name,
2025-09-17T00:39:59.225316Z	      "slug": slug.current,
2025-09-17T00:39:59.225394Z	      logo
2025-09-17T00:39:59.225508Z	    },
2025-09-17T00:39:59.225614Z	    targetMarket,
2025-09-17T00:39:59.225717Z	    complexity,
2025-09-17T00:39:59.225817Z	    publishedAt,
2025-09-17T00:39:59.225911Z	    isPublished,
2025-09-17T00:39:59.226058Z	    isFeatured,
2025-09-17T00:39:59.226185Z	    viewCount,
2025-09-17T00:39:59.226327Z	    _createdAt,
2025-09-17T00:39:59.226464Z	    _updatedAt
2025-09-17T00:39:59.226592Z	  
2025-09-17T00:39:59.226695Z	      },
2025-09-17T00:39:59.226802Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-17T00:39:59.226925Z	    }
2025-09-17T00:39:59.227056Z	  
2025-09-17T00:39:59.22717Z	Query parameters: {
2025-09-17T00:39:59.227303Z	  limit: 4,
2025-09-17T00:39:59.227398Z	  offset: 0,
2025-09-17T00:39:59.22753Z	  targetMarket: undefined,
2025-09-17T00:39:59.227678Z	  brand: 'lem',
2025-09-17T00:39:59.227794Z	  featured: undefined
2025-09-17T00:39:59.227916Z	}
2025-09-17T00:39:59.228021Z	✅ [getBrandData] Found brand: LEM
2025-09-17T00:39:59.228237Z	Products fetch result: {
2025-09-17T00:39:59.228462Z	  totalProducts: 3,
2025-09-17T00:39:59.22866Z	  fetchedProducts: 3,
2025-09-17T00:39:59.22875Z	  firstProduct: {
2025-09-17T00:39:59.228952Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-17T00:39:59.229037Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-17T00:39:59.229341Z	    _type: 'product',
2025-09-17T00:39:59.229421Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-17T00:39:59.229607Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-17T00:39:59.229818Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-17T00:39:59.230027Z	    image: null,
2025-09-17T00:39:59.230237Z	    inventory: {
2025-09-17T00:39:59.230453Z	      inStock: true,
2025-09-17T00:39:59.230615Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-17T00:39:59.230792Z	      quantity: 0,
2025-09-17T00:39:59.230922Z	      status: 'in_stock',
2025-09-17T00:39:59.23103Z	      warehouse: null
2025-09-17T00:39:59.231123Z	    },
2025-09-17T00:39:59.231315Z	    isActive: true,
2025-09-17T00:39:59.231448Z	    isFeatured: false,
2025-09-17T00:39:59.231648Z	    isNew: false,
2025-09-17T00:39:59.231772Z	    partNumber: 'la55-p',
2025-09-17T00:39:59.231956Z	    pricing: {
2025-09-17T00:39:59.232234Z	      currency: 'CNY',
2025-09-17T00:39:59.232432Z	      leadTime: null,
2025-09-17T00:39:59.232575Z	      moq: null,
2025-09-17T00:39:59.232696Z	      price: null,
2025-09-17T00:39:59.232806Z	      tiers: null
2025-09-17T00:39:59.2329Z	    },
2025-09-17T00:39:59.233004Z	    shortDescription: '电流传感器la55-p',
2025-09-17T00:39:59.233188Z	    slug: 'la55-p',
2025-09-17T00:39:59.233379Z	    title: '电流传感器la55-p'
2025-09-17T00:39:59.233572Z	  }
2025-09-17T00:39:59.233764Z	}
2025-09-17T00:39:59.233964Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:59.234136Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-17T00:39:59.234332Z	Fetching products with query: 
2025-09-17T00:39:59.234488Z	    {
2025-09-17T00:39:59.234654Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:59.23483Z	        
2025-09-17T00:39:59.235Z	    _id,
2025-09-17T00:39:59.23516Z	    _type,
2025-09-17T00:39:59.239941Z	    partNumber,
2025-09-17T00:39:59.240385Z	    "slug": slug.current,
2025-09-17T00:39:59.240714Z	    title,
2025-09-17T00:39:59.241055Z	    shortDescription,
2025-09-17T00:39:59.252799Z	    image,
2025-09-17T00:39:59.253041Z	    brand->{
2025-09-17T00:39:59.253169Z	      name,
2025-09-17T00:39:59.253301Z	      "slug": slug.current,
2025-09-17T00:39:59.253415Z	      logo
2025-09-17T00:39:59.25352Z	    },
2025-09-17T00:39:59.253624Z	    category->{
2025-09-17T00:39:59.253832Z	      name,
2025-09-17T00:39:59.25401Z	      "slug": slug.current
2025-09-17T00:39:59.254144Z	    },
2025-09-17T00:39:59.254308Z	    pricing{
2025-09-17T00:39:59.254505Z	      currency,
2025-09-17T00:39:59.254663Z	      tiers[]{
2025-09-17T00:39:59.254843Z	        quantity,
2025-09-17T00:39:59.255001Z	        price,
2025-09-17T00:39:59.255179Z	        unit
2025-09-17T00:39:59.255326Z	      },
2025-09-17T00:39:59.255435Z	      moq,
2025-09-17T00:39:59.255535Z	      leadTime,
2025-09-17T00:39:59.255641Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:59.255758Z	      "price": tiers[0].price,
2025-09-17T00:39:59.255974Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:59.256199Z	    },
2025-09-17T00:39:59.256374Z	    inventory{
2025-09-17T00:39:59.256482Z	      quantity,
2025-09-17T00:39:59.25675Z	      status,
2025-09-17T00:39:59.256914Z	      warehouse,
2025-09-17T00:39:59.257066Z	      lastUpdated,
2025-09-17T00:39:59.25722Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:59.257389Z	      "inStock": status == "in_stock",
2025-09-17T00:39:59.257499Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:59.257603Z	    },
2025-09-17T00:39:59.257715Z	    isActive,
2025-09-17T00:39:59.257827Z	    isFeatured,
2025-09-17T00:39:59.257938Z	    isNew,
2025-09-17T00:39:59.258041Z	    _createdAt,
2025-09-17T00:39:59.258142Z	    _updatedAt
2025-09-17T00:39:59.258242Z	  
2025-09-17T00:39:59.258372Z	      },
2025-09-17T00:39:59.258506Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-17T00:39:59.258676Z	    }
2025-09-17T00:39:59.25883Z	  
2025-09-17T00:39:59.258944Z	Query parameters: {
2025-09-17T00:39:59.259051Z	  limit: 8,
2025-09-17T00:39:59.259149Z	  offset: 0,
2025-09-17T00:39:59.259256Z	  category: undefined,
2025-09-17T00:39:59.260611Z	  brand: 'epcos',
2025-09-17T00:39:59.260783Z	  featured: undefined
2025-09-17T00:39:59.260895Z	}
2025-09-17T00:39:59.260994Z	Fetching solutions with query: 
2025-09-17T00:39:59.261093Z	    {
2025-09-17T00:39:59.261184Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:59.261319Z	        
2025-09-17T00:39:59.261429Z	    _id,
2025-09-17T00:39:59.261543Z	    title,
2025-09-17T00:39:59.26173Z	    "slug": slug.current,
2025-09-17T00:39:59.261834Z	    summary,
2025-09-17T00:39:59.261968Z	    description,
2025-09-17T00:39:59.262066Z	    coverImage,
2025-09-17T00:39:59.262151Z	    primaryBrand->{
2025-09-17T00:39:59.262234Z	      _id,
2025-09-17T00:39:59.26234Z	      name,
2025-09-17T00:39:59.262606Z	      "slug": slug.current,
2025-09-17T00:39:59.262725Z	      logo
2025-09-17T00:39:59.262819Z	    },
2025-09-17T00:39:59.262913Z	    relatedBrands[]->{
2025-09-17T00:39:59.263014Z	      _id,
2025-09-17T00:39:59.263127Z	      name,
2025-09-17T00:39:59.263229Z	      "slug": slug.current,
2025-09-17T00:39:59.263353Z	      logo
2025-09-17T00:39:59.263446Z	    },
2025-09-17T00:39:59.263534Z	    targetMarket,
2025-09-17T00:39:59.263645Z	    complexity,
2025-09-17T00:39:59.263756Z	    publishedAt,
2025-09-17T00:39:59.263861Z	    isPublished,
2025-09-17T00:39:59.263959Z	    isFeatured,
2025-09-17T00:39:59.264049Z	    viewCount,
2025-09-17T00:39:59.264128Z	    _createdAt,
2025-09-17T00:39:59.264211Z	    _updatedAt
2025-09-17T00:39:59.264328Z	  
2025-09-17T00:39:59.264434Z	      },
2025-09-17T00:39:59.264525Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-17T00:39:59.264616Z	    }
2025-09-17T00:39:59.264783Z	  
2025-09-17T00:39:59.264895Z	Query parameters: {
2025-09-17T00:39:59.264995Z	  limit: 4,
2025-09-17T00:39:59.265095Z	  offset: 0,
2025-09-17T00:39:59.265187Z	  targetMarket: undefined,
2025-09-17T00:39:59.265301Z	  brand: 'epcos',
2025-09-17T00:39:59.265592Z	  featured: undefined
2025-09-17T00:39:59.26578Z	}
2025-09-17T00:39:59.265893Z	✅ [getBrandData] Found brand: Epcos
2025-09-17T00:39:59.266003Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:59.266096Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:59.266207Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-17T00:39:59.266419Z	Fetching products with query: 
2025-09-17T00:39:59.266764Z	    {
2025-09-17T00:39:59.267332Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:59.267533Z	        
2025-09-17T00:39:59.267691Z	    _id,
2025-09-17T00:39:59.267814Z	    _type,
2025-09-17T00:39:59.267929Z	    partNumber,
2025-09-17T00:39:59.268058Z	    "slug": slug.current,
2025-09-17T00:39:59.268285Z	    title,
2025-09-17T00:39:59.268428Z	    shortDescription,
2025-09-17T00:39:59.268551Z	    image,
2025-09-17T00:39:59.268692Z	    brand->{
2025-09-17T00:39:59.268819Z	      name,
2025-09-17T00:39:59.268948Z	      "slug": slug.current,
2025-09-17T00:39:59.269371Z	      logo
2025-09-17T00:39:59.26958Z	    },
2025-09-17T00:39:59.269727Z	    category->{
2025-09-17T00:39:59.26983Z	      name,
2025-09-17T00:39:59.269893Z	      "slug": slug.current
2025-09-17T00:39:59.269952Z	    },
2025-09-17T00:39:59.270013Z	    pricing{
2025-09-17T00:39:59.270066Z	      currency,
2025-09-17T00:39:59.27012Z	      tiers[]{
2025-09-17T00:39:59.270197Z	        quantity,
2025-09-17T00:39:59.27063Z	        price,
2025-09-17T00:39:59.270706Z	        unit
2025-09-17T00:39:59.270766Z	      },
2025-09-17T00:39:59.27082Z	      moq,
2025-09-17T00:39:59.270873Z	      leadTime,
2025-09-17T00:39:59.270927Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:59.271049Z	      "price": tiers[0].price,
2025-09-17T00:39:59.271214Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:59.271334Z	    },
2025-09-17T00:39:59.271401Z	    inventory{
2025-09-17T00:39:59.271456Z	      quantity,
2025-09-17T00:39:59.27151Z	      status,
2025-09-17T00:39:59.271566Z	      warehouse,
2025-09-17T00:39:59.271627Z	      lastUpdated,
2025-09-17T00:39:59.271683Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:59.271739Z	      "inStock": status == "in_stock",
2025-09-17T00:39:59.271797Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:59.27185Z	    },
2025-09-17T00:39:59.271904Z	    isActive,
2025-09-17T00:39:59.271956Z	    isFeatured,
2025-09-17T00:39:59.272008Z	    isNew,
2025-09-17T00:39:59.272074Z	    _createdAt,
2025-09-17T00:39:59.272127Z	    _updatedAt
2025-09-17T00:39:59.272225Z	  
2025-09-17T00:39:59.272319Z	      },
2025-09-17T00:39:59.272381Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-17T00:39:59.272448Z	    }
2025-09-17T00:39:59.272503Z	  
2025-09-17T00:39:59.272571Z	Query parameters: {
2025-09-17T00:39:59.272626Z	  limit: 8,
2025-09-17T00:39:59.272687Z	  offset: 0,
2025-09-17T00:39:59.272741Z	  category: undefined,
2025-09-17T00:39:59.272799Z	  brand: 'epcos',
2025-09-17T00:39:59.272852Z	  featured: undefined
2025-09-17T00:39:59.272905Z	}
2025-09-17T00:39:59.272956Z	Fetching solutions with query: 
2025-09-17T00:39:59.27302Z	    {
2025-09-17T00:39:59.273075Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:59.273131Z	        
2025-09-17T00:39:59.273188Z	    _id,
2025-09-17T00:39:59.273241Z	    title,
2025-09-17T00:39:59.273394Z	    "slug": slug.current,
2025-09-17T00:39:59.27346Z	    summary,
2025-09-17T00:39:59.273527Z	    description,
2025-09-17T00:39:59.273583Z	    coverImage,
2025-09-17T00:39:59.273637Z	    primaryBrand->{
2025-09-17T00:39:59.27369Z	      _id,
2025-09-17T00:39:59.273743Z	      name,
2025-09-17T00:39:59.273801Z	      "slug": slug.current,
2025-09-17T00:39:59.273856Z	      logo
2025-09-17T00:39:59.273909Z	    },
2025-09-17T00:39:59.273961Z	    relatedBrands[]->{
2025-09-17T00:39:59.274019Z	      _id,
2025-09-17T00:39:59.274078Z	      name,
2025-09-17T00:39:59.274133Z	      "slug": slug.current,
2025-09-17T00:39:59.274186Z	      logo
2025-09-17T00:39:59.274239Z	    },
2025-09-17T00:39:59.288374Z	    targetMarket,
2025-09-17T00:39:59.288752Z	    complexity,
2025-09-17T00:39:59.28893Z	    publishedAt,
2025-09-17T00:39:59.290114Z	    isPublished,
2025-09-17T00:39:59.290291Z	    isFeatured,
2025-09-17T00:39:59.290926Z	    viewCount,
2025-09-17T00:39:59.291491Z	    _createdAt,
2025-09-17T00:39:59.291684Z	    _updatedAt
2025-09-17T00:39:59.291801Z	  
2025-09-17T00:39:59.291975Z	      },
2025-09-17T00:39:59.292144Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-17T00:39:59.292291Z	    }
2025-09-17T00:39:59.29242Z	  
2025-09-17T00:39:59.292544Z	Query parameters: {
2025-09-17T00:39:59.292651Z	  limit: 4,
2025-09-17T00:39:59.292752Z	  offset: 0,
2025-09-17T00:39:59.292859Z	  targetMarket: undefined,
2025-09-17T00:39:59.292989Z	  brand: 'epcos',
2025-09-17T00:39:59.293104Z	  featured: undefined
2025-09-17T00:39:59.293228Z	}
2025-09-17T00:39:59.293358Z	✅ [getBrandData] Found brand: Epcos
2025-09-17T00:39:59.293479Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:59.293593Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:59.293692Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-17T00:39:59.293803Z	Fetching products with query: 
2025-09-17T00:39:59.293905Z	    {
2025-09-17T00:39:59.294025Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:59.294131Z	        
2025-09-17T00:39:59.294228Z	    _id,
2025-09-17T00:39:59.294357Z	    _type,
2025-09-17T00:39:59.294468Z	    partNumber,
2025-09-17T00:39:59.294573Z	    "slug": slug.current,
2025-09-17T00:39:59.294669Z	    title,
2025-09-17T00:39:59.294767Z	    shortDescription,
2025-09-17T00:39:59.294875Z	    image,
2025-09-17T00:39:59.294994Z	    brand->{
2025-09-17T00:39:59.295104Z	      name,
2025-09-17T00:39:59.295264Z	      "slug": slug.current,
2025-09-17T00:39:59.295439Z	      logo
2025-09-17T00:39:59.295564Z	    },
2025-09-17T00:39:59.295765Z	    category->{
2025-09-17T00:39:59.295915Z	      name,
2025-09-17T00:39:59.296044Z	      "slug": slug.current
2025-09-17T00:39:59.296156Z	    },
2025-09-17T00:39:59.296264Z	    pricing{
2025-09-17T00:39:59.296404Z	      currency,
2025-09-17T00:39:59.29654Z	      tiers[]{
2025-09-17T00:39:59.296697Z	        quantity,
2025-09-17T00:39:59.297401Z	        price,
2025-09-17T00:39:59.297549Z	        unit
2025-09-17T00:39:59.297666Z	      },
2025-09-17T00:39:59.297776Z	      moq,
2025-09-17T00:39:59.297907Z	      leadTime,
2025-09-17T00:39:59.298243Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:59.298397Z	      "price": tiers[0].price,
2025-09-17T00:39:59.29851Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:59.298617Z	    },
2025-09-17T00:39:59.298749Z	    inventory{
2025-09-17T00:39:59.299104Z	      quantity,
2025-09-17T00:39:59.299213Z	      status,
2025-09-17T00:39:59.300719Z	      warehouse,
2025-09-17T00:39:59.300947Z	      lastUpdated,
2025-09-17T00:39:59.301171Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:59.301316Z	      "inStock": status == "in_stock",
2025-09-17T00:39:59.301661Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:59.302087Z	    },
2025-09-17T00:39:59.302857Z	    isActive,
2025-09-17T00:39:59.30302Z	    isFeatured,
2025-09-17T00:39:59.303148Z	    isNew,
2025-09-17T00:39:59.303281Z	    _createdAt,
2025-09-17T00:39:59.303406Z	    _updatedAt
2025-09-17T00:39:59.30351Z	  
2025-09-17T00:39:59.30379Z	      },
2025-09-17T00:39:59.304161Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-17T00:39:59.304298Z	    }
2025-09-17T00:39:59.304407Z	  
2025-09-17T00:39:59.304501Z	Query parameters: {
2025-09-17T00:39:59.3046Z	  limit: 8,
2025-09-17T00:39:59.304693Z	  offset: 0,
2025-09-17T00:39:59.304784Z	  category: undefined,
2025-09-17T00:39:59.304876Z	  brand: 'qualcomm',
2025-09-17T00:39:59.305014Z	  featured: undefined
2025-09-17T00:39:59.305173Z	}
2025-09-17T00:39:59.305713Z	Fetching solutions with query: 
2025-09-17T00:39:59.305932Z	    {
2025-09-17T00:39:59.306105Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:59.306307Z	        
2025-09-17T00:39:59.306475Z	    _id,
2025-09-17T00:39:59.306646Z	    title,
2025-09-17T00:39:59.306832Z	    "slug": slug.current,
2025-09-17T00:39:59.306997Z	    summary,
2025-09-17T00:39:59.307212Z	    description,
2025-09-17T00:39:59.307394Z	    coverImage,
2025-09-17T00:39:59.307573Z	    primaryBrand->{
2025-09-17T00:39:59.307747Z	      _id,
2025-09-17T00:39:59.307946Z	      name,
2025-09-17T00:39:59.30813Z	      "slug": slug.current,
2025-09-17T00:39:59.308307Z	      logo
2025-09-17T00:39:59.308472Z	    },
2025-09-17T00:39:59.308615Z	    relatedBrands[]->{
2025-09-17T00:39:59.30875Z	      _id,
2025-09-17T00:39:59.308889Z	      name,
2025-09-17T00:39:59.309026Z	      "slug": slug.current,
2025-09-17T00:39:59.309153Z	      logo
2025-09-17T00:39:59.309346Z	    },
2025-09-17T00:39:59.309504Z	    targetMarket,
2025-09-17T00:39:59.309638Z	    complexity,
2025-09-17T00:39:59.30981Z	    publishedAt,
2025-09-17T00:39:59.309968Z	    isPublished,
2025-09-17T00:39:59.310127Z	    isFeatured,
2025-09-17T00:39:59.310317Z	    viewCount,
2025-09-17T00:39:59.310489Z	    _createdAt,
2025-09-17T00:39:59.310634Z	    _updatedAt
2025-09-17T00:39:59.310781Z	  
2025-09-17T00:39:59.311352Z	      },
2025-09-17T00:39:59.311503Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-17T00:39:59.311618Z	    }
2025-09-17T00:39:59.311718Z	  
2025-09-17T00:39:59.311813Z	Query parameters: {
2025-09-17T00:39:59.311918Z	  limit: 4,
2025-09-17T00:39:59.312019Z	  offset: 0,
2025-09-17T00:39:59.312118Z	  targetMarket: undefined,
2025-09-17T00:39:59.312216Z	  brand: 'qualcomm',
2025-09-17T00:39:59.312341Z	  featured: undefined
2025-09-17T00:39:59.312456Z	}
2025-09-17T00:39:59.312577Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-17T00:39:59.312856Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:59.314302Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:59.31451Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-17T00:39:59.314681Z	Fetching products with query: 
2025-09-17T00:39:59.314809Z	    {
2025-09-17T00:39:59.314953Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:59.323698Z	        
2025-09-17T00:39:59.323847Z	    _id,
2025-09-17T00:39:59.323969Z	    _type,
2025-09-17T00:39:59.324062Z	    partNumber,
2025-09-17T00:39:59.324182Z	    "slug": slug.current,
2025-09-17T00:39:59.324421Z	    title,
2025-09-17T00:39:59.324573Z	    shortDescription,
2025-09-17T00:39:59.32472Z	    image,
2025-09-17T00:39:59.324884Z	    brand->{
2025-09-17T00:39:59.325017Z	      name,
2025-09-17T00:39:59.325965Z	      "slug": slug.current,
2025-09-17T00:39:59.326097Z	      logo
2025-09-17T00:39:59.326343Z	    },
2025-09-17T00:39:59.326602Z	    category->{
2025-09-17T00:39:59.326935Z	      name,
2025-09-17T00:39:59.327166Z	      "slug": slug.current
2025-09-17T00:39:59.327292Z	    },
2025-09-17T00:39:59.327536Z	    pricing{
2025-09-17T00:39:59.327657Z	      currency,
2025-09-17T00:39:59.32776Z	      tiers[]{
2025-09-17T00:39:59.327879Z	        quantity,
2025-09-17T00:39:59.328452Z	        price,
2025-09-17T00:39:59.328573Z	        unit
2025-09-17T00:39:59.328668Z	      },
2025-09-17T00:39:59.328769Z	      moq,
2025-09-17T00:39:59.328864Z	      leadTime,
2025-09-17T00:39:59.328973Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:59.329487Z	      "price": tiers[0].price,
2025-09-17T00:39:59.329928Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:59.330089Z	    },
2025-09-17T00:39:59.33021Z	    inventory{
2025-09-17T00:39:59.330342Z	      quantity,
2025-09-17T00:39:59.330463Z	      status,
2025-09-17T00:39:59.330564Z	      warehouse,
2025-09-17T00:39:59.330662Z	      lastUpdated,
2025-09-17T00:39:59.33081Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:59.330933Z	      "inStock": status == "in_stock",
2025-09-17T00:39:59.331041Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:59.331143Z	    },
2025-09-17T00:39:59.331246Z	    isActive,
2025-09-17T00:39:59.331448Z	    isFeatured,
2025-09-17T00:39:59.331567Z	    isNew,
2025-09-17T00:39:59.331706Z	    _createdAt,
2025-09-17T00:39:59.331814Z	    _updatedAt
2025-09-17T00:39:59.331914Z	  
2025-09-17T00:39:59.332008Z	      },
2025-09-17T00:39:59.332116Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-17T00:39:59.332237Z	    }
2025-09-17T00:39:59.333375Z	  
2025-09-17T00:39:59.333862Z	Query parameters: {
2025-09-17T00:39:59.337229Z	  limit: 8,
2025-09-17T00:39:59.337408Z	  offset: 0,
2025-09-17T00:39:59.337831Z	  category: undefined,
2025-09-17T00:39:59.337986Z	  brand: 'qualcomm',
2025-09-17T00:39:59.338109Z	  featured: undefined
2025-09-17T00:39:59.338213Z	}
2025-09-17T00:39:59.338529Z	Fetching solutions with query: 
2025-09-17T00:39:59.338653Z	    {
2025-09-17T00:39:59.338876Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:59.339103Z	        
2025-09-17T00:39:59.339222Z	    _id,
2025-09-17T00:39:59.339342Z	    title,
2025-09-17T00:39:59.339468Z	    "slug": slug.current,
2025-09-17T00:39:59.339575Z	    summary,
2025-09-17T00:39:59.339765Z	    description,
2025-09-17T00:39:59.340655Z	    coverImage,
2025-09-17T00:39:59.340784Z	    primaryBrand->{
2025-09-17T00:39:59.341371Z	      _id,
2025-09-17T00:39:59.341519Z	      name,
2025-09-17T00:39:59.341627Z	      "slug": slug.current,
2025-09-17T00:39:59.341745Z	      logo
2025-09-17T00:39:59.341857Z	    },
2025-09-17T00:39:59.341961Z	    relatedBrands[]->{
2025-09-17T00:39:59.34206Z	      _id,
2025-09-17T00:39:59.342172Z	      name,
2025-09-17T00:39:59.342282Z	      "slug": slug.current,
2025-09-17T00:39:59.342393Z	      logo
2025-09-17T00:39:59.342492Z	    },
2025-09-17T00:39:59.342588Z	    targetMarket,
2025-09-17T00:39:59.342695Z	    complexity,
2025-09-17T00:39:59.342793Z	    publishedAt,
2025-09-17T00:39:59.342887Z	    isPublished,
2025-09-17T00:39:59.342987Z	    isFeatured,
2025-09-17T00:39:59.343086Z	    viewCount,
2025-09-17T00:39:59.343177Z	    _createdAt,
2025-09-17T00:39:59.343259Z	    _updatedAt
2025-09-17T00:39:59.344063Z	  
2025-09-17T00:39:59.344366Z	      },
2025-09-17T00:39:59.344436Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-17T00:39:59.344496Z	    }
2025-09-17T00:39:59.34456Z	  
2025-09-17T00:39:59.344615Z	Query parameters: {
2025-09-17T00:39:59.344678Z	  limit: 4,
2025-09-17T00:39:59.344733Z	  offset: 0,
2025-09-17T00:39:59.344793Z	  targetMarket: undefined,
2025-09-17T00:39:59.344847Z	  brand: 'qualcomm',
2025-09-17T00:39:59.3449Z	  featured: undefined
2025-09-17T00:39:59.344952Z	}
2025-09-17T00:39:59.345007Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-17T00:39:59.345063Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:59.345513Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:59.345589Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-17T00:39:59.345649Z	Fetching products with query: 
2025-09-17T00:39:59.345713Z	    {
2025-09-17T00:39:59.34577Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:59.345828Z	        
2025-09-17T00:39:59.345882Z	    _id,
2025-09-17T00:39:59.345936Z	    _type,
2025-09-17T00:39:59.345989Z	    partNumber,
2025-09-17T00:39:59.346042Z	    "slug": slug.current,
2025-09-17T00:39:59.346097Z	    title,
2025-09-17T00:39:59.34615Z	    shortDescription,
2025-09-17T00:39:59.346209Z	    image,
2025-09-17T00:39:59.346263Z	    brand->{
2025-09-17T00:39:59.346353Z	      name,
2025-09-17T00:39:59.34641Z	      "slug": slug.current,
2025-09-17T00:39:59.346465Z	      logo
2025-09-17T00:39:59.346522Z	    },
2025-09-17T00:39:59.346575Z	    category->{
2025-09-17T00:39:59.346628Z	      name,
2025-09-17T00:39:59.346687Z	      "slug": slug.current
2025-09-17T00:39:59.34674Z	    },
2025-09-17T00:39:59.346794Z	    pricing{
2025-09-17T00:39:59.346846Z	      currency,
2025-09-17T00:39:59.346898Z	      tiers[]{
2025-09-17T00:39:59.34695Z	        quantity,
2025-09-17T00:39:59.347002Z	        price,
2025-09-17T00:39:59.347054Z	        unit
2025-09-17T00:39:59.347108Z	      },
2025-09-17T00:39:59.347159Z	      moq,
2025-09-17T00:39:59.347224Z	      leadTime,
2025-09-17T00:39:59.387502Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:59.387826Z	      "price": tiers[0].price,
2025-09-17T00:39:59.387963Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:59.388066Z	    },
2025-09-17T00:39:59.388193Z	    inventory{
2025-09-17T00:39:59.388351Z	      quantity,
2025-09-17T00:39:59.388466Z	      status,
2025-09-17T00:39:59.388571Z	      warehouse,
2025-09-17T00:39:59.388682Z	      lastUpdated,
2025-09-17T00:39:59.38879Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:59.38889Z	      "inStock": status == "in_stock",
2025-09-17T00:39:59.388998Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:59.389098Z	    },
2025-09-17T00:39:59.389195Z	    isActive,
2025-09-17T00:39:59.389313Z	    isFeatured,
2025-09-17T00:39:59.389406Z	    isNew,
2025-09-17T00:39:59.389495Z	    _createdAt,
2025-09-17T00:39:59.389591Z	    _updatedAt
2025-09-17T00:39:59.3897Z	  
2025-09-17T00:39:59.389798Z	      },
2025-09-17T00:39:59.389923Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-17T00:39:59.390045Z	    }
2025-09-17T00:39:59.39015Z	  
2025-09-17T00:39:59.390244Z	Query parameters: {
2025-09-17T00:39:59.390356Z	  limit: 8,
2025-09-17T00:39:59.390451Z	  offset: 0,
2025-09-17T00:39:59.390549Z	  category: undefined,
2025-09-17T00:39:59.390652Z	  brand: 'mediatek',
2025-09-17T00:39:59.390761Z	  featured: undefined
2025-09-17T00:39:59.390859Z	}
2025-09-17T00:39:59.390958Z	Fetching solutions with query: 
2025-09-17T00:39:59.391071Z	    {
2025-09-17T00:39:59.391178Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:59.3913Z	        
2025-09-17T00:39:59.391402Z	    _id,
2025-09-17T00:39:59.3915Z	    title,
2025-09-17T00:39:59.391606Z	    "slug": slug.current,
2025-09-17T00:39:59.391717Z	    summary,
2025-09-17T00:39:59.391817Z	    description,
2025-09-17T00:39:59.391912Z	    coverImage,
2025-09-17T00:39:59.392006Z	    primaryBrand->{
2025-09-17T00:39:59.392105Z	      _id,
2025-09-17T00:39:59.392204Z	      name,
2025-09-17T00:39:59.392318Z	      "slug": slug.current,
2025-09-17T00:39:59.392419Z	      logo
2025-09-17T00:39:59.39252Z	    },
2025-09-17T00:39:59.39264Z	    relatedBrands[]->{
2025-09-17T00:39:59.392771Z	      _id,
2025-09-17T00:39:59.392871Z	      name,
2025-09-17T00:39:59.392967Z	      "slug": slug.current,
2025-09-17T00:39:59.393063Z	      logo
2025-09-17T00:39:59.393152Z	    },
2025-09-17T00:39:59.393247Z	    targetMarket,
2025-09-17T00:39:59.393361Z	    complexity,
2025-09-17T00:39:59.393563Z	    publishedAt,
2025-09-17T00:39:59.393885Z	    isPublished,
2025-09-17T00:39:59.39425Z	    isFeatured,
2025-09-17T00:39:59.394393Z	    viewCount,
2025-09-17T00:39:59.394489Z	    _createdAt,
2025-09-17T00:39:59.394585Z	    _updatedAt
2025-09-17T00:39:59.394726Z	  
2025-09-17T00:39:59.394931Z	      },
2025-09-17T00:39:59.395079Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-17T00:39:59.395292Z	    }
2025-09-17T00:39:59.395464Z	  
2025-09-17T00:39:59.395596Z	Query parameters: {
2025-09-17T00:39:59.395758Z	  limit: 4,
2025-09-17T00:39:59.395898Z	  offset: 0,
2025-09-17T00:39:59.396074Z	  targetMarket: undefined,
2025-09-17T00:39:59.396248Z	  brand: 'mediatek',
2025-09-17T00:39:59.39638Z	  featured: undefined
2025-09-17T00:39:59.396486Z	}
2025-09-17T00:39:59.396589Z	✅ [getBrandData] Found brand: MediaTek
2025-09-17T00:39:59.39672Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:59.39683Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:59.396953Z	🔍 [getBrandData] Searching for brand with slug❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:59.397071Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:59.397201Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-17T00:39:59.397353Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:39:59.397688Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424) {
2025-09-17T00:39:59.397843Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:39:59.397954Z	}
2025-09-17T00:39:59.398048Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:59.398296Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:59.398482Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-17T00:39:59.398614Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:39:59.39873Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424) {
2025-09-17T00:39:59.398999Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:39:59.399171Z	}
2025-09-17T00:39:59.3994Z	: mediatek
2025-09-17T00:39:59.399554Z	Fetching products with query: 
2025-09-17T00:39:59.399683Z	    {
2025-09-17T00:39:59.399822Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:59.399971Z	        
2025-09-17T00:39:59.400122Z	    _id,
2025-09-17T00:39:59.400303Z	    _type,
2025-09-17T00:39:59.400394Z	    partNumber,
2025-09-17T00:39:59.400463Z	    "slug": slug.current,
2025-09-17T00:39:59.400576Z	    title,
2025-09-17T00:39:59.400675Z	    shortDescription,
2025-09-17T00:39:59.400775Z	    image,
2025-09-17T00:39:59.400904Z	    brand->{
2025-09-17T00:39:59.401033Z	      name,
2025-09-17T00:39:59.401138Z	      "slug": slug.current,
2025-09-17T00:39:59.401243Z	      logo
2025-09-17T00:39:59.401367Z	    },
2025-09-17T00:39:59.401468Z	    category->{
2025-09-17T00:39:59.401568Z	      name,
2025-09-17T00:39:59.401665Z	      "slug": slug.current
2025-09-17T00:39:59.401762Z	    },
2025-09-17T00:39:59.401857Z	    pricing{
2025-09-17T00:39:59.401963Z	      currency,
2025-09-17T00:39:59.40206Z	      tiers[]{
2025-09-17T00:39:59.402152Z	        quantity,
2025-09-17T00:39:59.402258Z	        price,
2025-09-17T00:39:59.402624Z	        unit
2025-09-17T00:39:59.402847Z	      },
2025-09-17T00:39:59.403043Z	      moq,
2025-09-17T00:39:59.403484Z	      leadTime,
2025-09-17T00:39:59.405241Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:59.405489Z	      "price": tiers[0].price,
2025-09-17T00:39:59.405607Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:59.405704Z	    },
2025-09-17T00:39:59.405947Z	    inventory{
2025-09-17T00:39:59.40619Z	      quantity,
2025-09-17T00:39:59.406364Z	      status,
2025-09-17T00:39:59.406491Z	      warehouse,
2025-09-17T00:39:59.406597Z	      lastUpdated,
2025-09-17T00:39:59.406858Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:59.40704Z	      "inStock": status == "in_stock",
2025-09-17T00:39:59.407227Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:59.407408Z	    },
2025-09-17T00:39:59.407528Z	    isActive,
2025-09-17T00:39:59.40781Z	    isFeatured,
2025-09-17T00:39:59.407972Z	    isNew,
2025-09-17T00:39:59.40812Z	    _createdAt,
2025-09-17T00:39:59.408301Z	    _updatedAt
2025-09-17T00:39:59.408469Z	  
2025-09-17T00:39:59.408644Z	      },
2025-09-17T00:39:59.408814Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-17T00:39:59.408934Z	    }
2025-09-17T00:39:59.409097Z	  
2025-09-17T00:39:59.409229Z	Query parameters: {
2025-09-17T00:39:59.409393Z	  limit: 8,
2025-09-17T00:39:59.409549Z	  offset: 0,
2025-09-17T00:39:59.409709Z	  category: undefined,
2025-09-17T00:39:59.409864Z	  brand: 'mediatek',
2025-09-17T00:39:59.410041Z	  featured: undefined
2025-09-17T00:39:59.410169Z	}
2025-09-17T00:39:59.410365Z	Fetching solutions with query: 
2025-09-17T00:39:59.410525Z	    {
2025-09-17T00:39:59.410661Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:59.410826Z	        
2025-09-17T00:39:59.410954Z	    _id,
2025-09-17T00:39:59.411079Z	    title,
2025-09-17T00:39:59.411204Z	    "slug": slug.current,
2025-09-17T00:39:59.411359Z	    summary,
2025-09-17T00:39:59.411477Z	    description,
2025-09-17T00:39:59.411585Z	    coverImage,
2025-09-17T00:39:59.411719Z	    primaryBrand->{
2025-09-17T00:39:59.411827Z	      _id,
2025-09-17T00:39:59.411937Z	      name,
2025-09-17T00:39:59.412041Z	      "slug": slug.current,
2025-09-17T00:39:59.412141Z	      logo
2025-09-17T00:39:59.412238Z	    },
2025-09-17T00:39:59.412356Z	    relatedBrands[]->{
2025-09-17T00:39:59.41246Z	      _id,
2025-09-17T00:39:59.412585Z	      name,
2025-09-17T00:39:59.412706Z	      "slug": slug.current,
2025-09-17T00:39:59.412812Z	      logo
2025-09-17T00:39:59.412921Z	    },
2025-09-17T00:39:59.413021Z	    targetMarket,
2025-09-17T00:39:59.413124Z	    complexity,
2025-09-17T00:39:59.41323Z	    publishedAt,
2025-09-17T00:39:59.413401Z	    isPublished,
2025-09-17T00:39:59.41352Z	    isFeatured,
2025-09-17T00:39:59.413625Z	    viewCount,
2025-09-17T00:39:59.413739Z	    _createdAt,
2025-09-17T00:39:59.413849Z	    _updatedAt
2025-09-17T00:39:59.413961Z	  
2025-09-17T00:39:59.414067Z	      },
2025-09-17T00:39:59.414187Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-17T00:39:59.414316Z	    }
2025-09-17T00:39:59.414423Z	  
2025-09-17T00:39:59.41453Z	Query parameters: {
2025-09-17T00:39:59.414625Z	  limit: 4,
2025-09-17T00:39:59.414735Z	  offset: 0,
2025-09-17T00:39:59.414844Z	  targetMarket: undefined,
2025-09-17T00:39:59.414949Z	  brand: 'mediatek',
2025-09-17T00:39:59.415054Z	  featured: undefined
2025-09-17T00:39:59.415158Z	}
2025-09-17T00:39:59.415253Z	✅ [getBrandData] Found brand: MediaTek
2025-09-17T00:39:59.415401Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:59.415511Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:59.415616Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-17T00:39:59.415727Z	Fetching products with query: 
2025-09-17T00:39:59.415835Z	    {
2025-09-17T00:39:59.415946Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:59.41605Z	        
2025-09-17T00:39:59.416155Z	    _id,
2025-09-17T00:39:59.416282Z	    _type,
2025-09-17T00:39:59.416394Z	    partNumber,
2025-09-17T00:39:59.416501Z	    "slug": slug.current,
2025-09-17T00:39:59.416617Z	    title,
2025-09-17T00:39:59.416738Z	    shortDescription,
2025-09-17T00:39:59.416846Z	    image,
2025-09-17T00:39:59.41695Z	    brand->{
2025-09-17T00:39:59.417053Z	      name,
2025-09-17T00:39:59.417155Z	      "slug": slug.current,
2025-09-17T00:39:59.417251Z	      logo
2025-09-17T00:39:59.417369Z	    },
2025-09-17T00:39:59.417464Z	    category->{
2025-09-17T00:39:59.417577Z	      name,
2025-09-17T00:39:59.417728Z	      "slug": slug.current
2025-09-17T00:39:59.417918Z	    },
2025-09-17T00:39:59.418057Z	    pricing{
2025-09-17T00:39:59.418184Z	      currency,
2025-09-17T00:39:59.418323Z	      tiers[]{
2025-09-17T00:39:59.420034Z	        quantity,
2025-09-17T00:39:59.420324Z	        price,
2025-09-17T00:39:59.42052Z	        unit
2025-09-17T00:39:59.421024Z	      },
2025-09-17T00:39:59.421513Z	      moq,
2025-09-17T00:39:59.422213Z	      leadTime,
2025-09-17T00:39:59.422518Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:59.422758Z	      "price": tiers[0].price,
2025-09-17T00:39:59.422955Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:59.423086Z	    },
2025-09-17T00:39:59.4232Z	    inventory{
2025-09-17T00:39:59.423347Z	      quantity,
2025-09-17T00:39:59.42346Z	      status,
2025-09-17T00:39:59.424384Z	      warehouse,
2025-09-17T00:39:59.424548Z	      lastUpdated,
2025-09-17T00:39:59.424779Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:59.424933Z	      "inStock": status == "in_stock",
2025-09-17T00:39:59.425073Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:59.425228Z	    },
2025-09-17T00:39:59.425388Z	    isActive,
2025-09-17T00:39:59.425542Z	    isFeatured,
2025-09-17T00:39:59.425689Z	    isNew,
2025-09-17T00:39:59.425852Z	    _createdAt,
2025-09-17T00:39:59.426009Z	    _updatedAt
2025-09-17T00:39:59.426159Z	  
2025-09-17T00:39:59.42632Z	      },
2025-09-17T00:39:59.426453Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-17T00:39:59.426636Z	    }
2025-09-17T00:39:59.426786Z	  
2025-09-17T00:39:59.426932Z	Query parameters: {
2025-09-17T00:39:59.42709Z	  limit: 8,
2025-09-17T00:39:59.42731Z	  offset: 0,
2025-09-17T00:39:59.427479Z	  category: undefined,
2025-09-17T00:39:59.427607Z	  brand: 'ncc',
2025-09-17T00:39:59.427721Z	  featured: undefined
2025-09-17T00:39:59.427834Z	}
2025-09-17T00:39:59.428453Z	Fetching solutions with query: 
2025-09-17T00:39:59.428823Z	    {
2025-09-17T00:39:59.429167Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:59.429384Z	        
2025-09-17T00:39:59.429561Z	    _id,
2025-09-17T00:39:59.42976Z	    title,
2025-09-17T00:39:59.430023Z	    "slug": slug.current,
2025-09-17T00:39:59.43032Z	    summary,
2025-09-17T00:39:59.430691Z	    description,
2025-09-17T00:39:59.430841Z	    coverImage,
2025-09-17T00:39:59.431129Z	    primaryBrand->{
2025-09-17T00:39:59.43162Z	      _id,
2025-09-17T00:39:59.432017Z	      name,
2025-09-17T00:39:59.432181Z	      "slug": slug.current,
2025-09-17T00:39:59.432313Z	      logo
2025-09-17T00:39:59.432419Z	    },
2025-09-17T00:39:59.432576Z	    relatedBrands[]->{
2025-09-17T00:39:59.432995Z	      _id,
2025-09-17T00:39:59.433236Z	      name,
2025-09-17T00:39:59.433489Z	      "slug": slug.current,
2025-09-17T00:39:59.433709Z	      logo
2025-09-17T00:39:59.433944Z	    },
2025-09-17T00:39:59.434159Z	    targetMarket,
2025-09-17T00:39:59.434362Z	    complexity,
2025-09-17T00:39:59.434495Z	    publishedAt,
2025-09-17T00:39:59.434605Z	    isPublished,
2025-09-17T00:39:59.434712Z	    isFeatured,
2025-09-17T00:39:59.434819Z	    viewCount,
2025-09-17T00:39:59.434919Z	    _createdAt,
2025-09-17T00:39:59.435022Z	    _updatedAt
2025-09-17T00:39:59.435196Z	  
2025-09-17T00:39:59.435376Z	      },
2025-09-17T00:39:59.435519Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-17T00:39:59.435823Z	    }
2025-09-17T00:39:59.436029Z	  
2025-09-17T00:39:59.436228Z	Query parameters: {
2025-09-17T00:39:59.43647Z	  limit: 4,
2025-09-17T00:39:59.436789Z	  offset: 0,
2025-09-17T00:39:59.437173Z	  targetMarket: undefined,
2025-09-17T00:39:59.437877Z	  brand: 'ncc',
2025-09-17T00:39:59.438093Z	  featured: undefined
2025-09-17T00:39:59.438251Z	}
2025-09-17T00:39:59.439437Z	✅ [getBrandData] Found brand: ncc
2025-09-17T00:39:59.439585Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:59.439939Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:59.44009Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-17T00:39:59.440215Z	Fetching products with query: 
2025-09-17T00:39:59.440345Z	    {
2025-09-17T00:39:59.440481Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:59.440969Z	        
2025-09-17T00:39:59.441093Z	    _id,
2025-09-17T00:39:59.441225Z	    _type,
2025-09-17T00:39:59.441378Z	    partNumber,
2025-09-17T00:39:59.44154Z	    "slug": slug.current,
2025-09-17T00:39:59.44171Z	    title,
2025-09-17T00:39:59.441858Z	    shortDescription,
2025-09-17T00:39:59.442109Z	    image,
2025-09-17T00:39:59.442638Z	    brand->{
2025-09-17T00:39:59.442869Z	      name,
2025-09-17T00:39:59.443047Z	      "slug": slug.current,
2025-09-17T00:39:59.443625Z	      logo
2025-09-17T00:39:59.443822Z	    },
2025-09-17T00:39:59.444143Z	    category->{
2025-09-17T00:39:59.444362Z	      name,
2025-09-17T00:39:59.444499Z	      "slug": slug.current
2025-09-17T00:39:59.444621Z	    },
2025-09-17T00:39:59.444749Z	    pricing{
2025-09-17T00:39:59.444875Z	      currency,
2025-09-17T00:39:59.445001Z	      tiers[]{
2025-09-17T00:39:59.44513Z	        quantity,
2025-09-17T00:39:59.44524Z	        price,
2025-09-17T00:39:59.445363Z	        unit
2025-09-17T00:39:59.445465Z	      },
2025-09-17T00:39:59.445567Z	      moq,
2025-09-17T00:39:59.445671Z	      leadTime,
2025-09-17T00:39:59.445778Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:59.445921Z	      "price": tiers[0].price,
2025-09-17T00:39:59.446043Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:59.44615Z	    },
2025-09-17T00:39:59.446235Z	    inventory{
2025-09-17T00:39:59.446326Z	      quantity,
2025-09-17T00:39:59.446427Z	      status,
2025-09-17T00:39:59.44658Z	      warehouse,
2025-09-17T00:39:59.446711Z	      lastUpdated,
2025-09-17T00:39:59.446836Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:59.446976Z	      "inStock": status == "in_stock",
2025-09-17T00:39:59.447108Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:59.447252Z	    },
2025-09-17T00:39:59.447381Z	    isActive,
2025-09-17T00:39:59.44749Z	    isFeatured,
2025-09-17T00:39:59.447603Z	    isNew,
2025-09-17T00:39:59.447729Z	    _createdAt,
2025-09-17T00:39:59.447834Z	    _updatedAt
2025-09-17T00:39:59.447936Z	  
2025-09-17T00:39:59.448038Z	      },
2025-09-17T00:39:59.448135Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-17T00:39:59.448242Z	    }
2025-09-17T00:39:59.44835Z	  
2025-09-17T00:39:59.448453Z	Query parameters: {
2025-09-17T00:39:59.448548Z	  limit: 8,
2025-09-17T00:39:59.448644Z	  offset: 0,
2025-09-17T00:39:59.448738Z	  category: undefined,
2025-09-17T00:39:59.44886Z	  brand: 'ncc',
2025-09-17T00:39:59.449064Z	  featured: undefined
2025-09-17T00:39:59.449143Z	}
2025-09-17T00:39:59.449208Z	Fetching solutions with query: 
2025-09-17T00:39:59.449358Z	    {
2025-09-17T00:39:59.449473Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:59.449569Z	        
2025-09-17T00:39:59.449628Z	    _id,
2025-09-17T00:39:59.449715Z	    title,
2025-09-17T00:39:59.449776Z	    "slug": slug.current,
2025-09-17T00:39:59.449831Z	    summary,
2025-09-17T00:39:59.44998Z	    description,
2025-09-17T00:39:59.450071Z	    coverImage,
2025-09-17T00:39:59.450168Z	    primaryBrand->{
2025-09-17T00:39:59.450263Z	      _id,
2025-09-17T00:39:59.450375Z	      name,
2025-09-17T00:39:59.450467Z	      "slug": slug.current,
2025-09-17T00:39:59.487617Z	      logo
2025-09-17T00:39:59.487971Z	    },
2025-09-17T00:39:59.488183Z	    relatedBrands[]->{
2025-09-17T00:39:59.488348Z	      _id,
2025-09-17T00:39:59.488735Z	      name,
2025-09-17T00:39:59.489063Z	      "slug": slug.current,
2025-09-17T00:39:59.489203Z	      logo
2025-09-17T00:39:59.489288Z	    },
2025-09-17T00:39:59.489402Z	    targetMarket,
2025-09-17T00:39:59.489585Z	    complexity,
2025-09-17T00:39:59.489762Z	    publishedAt,
2025-09-17T00:39:59.489884Z	    isPublished,
2025-09-17T00:39:59.489992Z	    isFeatured,
2025-09-17T00:39:59.490185Z	    viewCount,
2025-09-17T00:39:59.490407Z	    _createdAt,
2025-09-17T00:39:59.49055Z	    _updatedAt
2025-09-17T00:39:59.490719Z	  
2025-09-17T00:39:59.490852Z	      },
2025-09-17T00:39:59.490998Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-17T00:39:59.491118Z	    }
2025-09-17T00:39:59.491256Z	  
2025-09-17T00:39:59.491392Z	Query parameters: {
2025-09-17T00:39:59.491477Z	  limit: 4,
2025-09-17T00:39:59.491572Z	  offset: 0,
2025-09-17T00:39:59.491679Z	  targetMarket: undefined,
2025-09-17T00:39:59.491801Z	  brand: 'ncc',
2025-09-17T00:39:59.491924Z	  featured: undefined
2025-09-17T00:39:59.492133Z	}
2025-09-17T00:39:59.492369Z	✅ [getBrandData] Found brand: ncc
2025-09-17T00:39:59.492551Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:59.492782Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:59.493065Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-17T00:39:59.493218Z	Fetching products with query: 
2025-09-17T00:39:59.493354Z	    {
2025-09-17T00:39:59.493561Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:59.493787Z	        
2025-09-17T00:39:59.493912Z	    _id,
2025-09-17T00:39:59.494036Z	    _type,
2025-09-17T00:39:59.494146Z	    partNumber,
2025-09-17T00:39:59.49442Z	    "slug": slug.current,
2025-09-17T00:39:59.49455Z	    title,
2025-09-17T00:39:59.494637Z	    shortDescription,
2025-09-17T00:39:59.494725Z	    image,
2025-09-17T00:39:59.494848Z	    brand->{
2025-09-17T00:39:59.494938Z	      name,
2025-09-17T00:39:59.495036Z	      "slug": slug.current,
2025-09-17T00:39:59.495127Z	      logo
2025-09-17T00:39:59.495208Z	    },
2025-09-17T00:39:59.49532Z	    category->{
2025-09-17T00:39:59.495439Z	      name,
2025-09-17T00:39:59.495531Z	      "slug": slug.current
2025-09-17T00:39:59.49562Z	    },
2025-09-17T00:39:59.49571Z	    pricing{
2025-09-17T00:39:59.495817Z	      currency,
2025-09-17T00:39:59.495957Z	      tiers[]{
2025-09-17T00:39:59.496063Z	        quantity,
2025-09-17T00:39:59.49616Z	        price,
2025-09-17T00:39:59.496258Z	        unit
2025-09-17T00:39:59.496366Z	      },
2025-09-17T00:39:59.496451Z	      moq,
2025-09-17T00:39:59.496548Z	      leadTime,
2025-09-17T00:39:59.496666Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:59.496795Z	      "price": tiers[0].price,
2025-09-17T00:39:59.496924Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:59.497025Z	    },
2025-09-17T00:39:59.497127Z	    inventory{
2025-09-17T00:39:59.497246Z	      quantity,
2025-09-17T00:39:59.497374Z	      status,
2025-09-17T00:39:59.497483Z	      warehouse,
2025-09-17T00:39:59.497615Z	      lastUpdated,
2025-09-17T00:39:59.497703Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:59.497779Z	      "inStock": status == "in_stock",
2025-09-17T00:39:59.497885Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:59.497989Z	    },
2025-09-17T00:39:59.498085Z	    isActive,
2025-09-17T00:39:59.498192Z	    isFeatured,
2025-09-17T00:39:59.49831Z	    isNew,
2025-09-17T00:39:59.498414Z	    _createdAt,
2025-09-17T00:39:59.498506Z	    _updatedAt
2025-09-17T00:39:59.498598Z	  
2025-09-17T00:39:59.498694Z	      },
2025-09-17T00:39:59.498802Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-17T00:39:59.498963Z	    }
2025-09-17T00:39:59.499179Z	  
2025-09-17T00:39:59.499306Z	Query parameters: {
2025-09-17T00:39:59.499449Z	  limit: 8,
2025-09-17T00:39:59.499644Z	  offset: 0,
2025-09-17T00:39:59.499735Z	  category: undefined,
2025-09-17T00:39:59.499903Z	  brand: '英飞凌',
2025-09-17T00:39:59.500032Z	  featured: undefined
2025-09-17T00:39:59.500126Z	}
2025-09-17T00:39:59.500217Z	Fetching solutions with query: 
2025-09-17T00:39:59.500652Z	    {
2025-09-17T00:39:59.500762Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:59.501145Z	        
2025-09-17T00:39:59.501481Z	    _id,
2025-09-17T00:39:59.501883Z	    title,
2025-09-17T00:39:59.502104Z	    "slug": slug.current,
2025-09-17T00:39:59.50223Z	    summary,
2025-09-17T00:39:59.502421Z	    description,
2025-09-17T00:39:59.502606Z	    coverImage,
2025-09-17T00:39:59.502797Z	    primaryBrand->{
2025-09-17T00:39:59.502916Z	      _id,
2025-09-17T00:39:59.503107Z	      name,
2025-09-17T00:39:59.503299Z	      "slug": slug.current,
2025-09-17T00:39:59.503518Z	      logo
2025-09-17T00:39:59.503675Z	    },
2025-09-17T00:39:59.503783Z	    relatedBrands[]->{
2025-09-17T00:39:59.504053Z	      _id,
2025-09-17T00:39:59.504156Z	      name,
2025-09-17T00:39:59.504258Z	      "slug": slug.current,
2025-09-17T00:39:59.504391Z	      logo
2025-09-17T00:39:59.504537Z	    },
2025-09-17T00:39:59.504629Z	    targetMarket,
2025-09-17T00:39:59.504716Z	    complexity,
2025-09-17T00:39:59.504836Z	    publishedAt,
2025-09-17T00:39:59.504936Z	    isPublished,
2025-09-17T00:39:59.505051Z	    isFeatured,
2025-09-17T00:39:59.50515Z	    viewCount,
2025-09-17T00:39:59.505236Z	    _createdAt,
2025-09-17T00:39:59.505348Z	    _updatedAt
2025-09-17T00:39:59.505438Z	  
2025-09-17T00:39:59.505531Z	      },
2025-09-17T00:39:59.505632Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-17T00:39:59.505732Z	    }
2025-09-17T00:39:59.505837Z	  
2025-09-17T00:39:59.505978Z	Query parameters: {
2025-09-17T00:39:59.506428Z	  limit: 4,
2025-09-17T00:39:59.506562Z	  offset: 0,
2025-09-17T00:39:59.506652Z	  targetMarket: undefined,
2025-09-17T00:39:59.506747Z	  brand: '英飞凌',
2025-09-17T00:39:59.506837Z	  featured: undefined
2025-09-17T00:39:59.506975Z	}
2025-09-17T00:39:59.507147Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-17T00:39:59.509587Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:59.509714Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:59.509824Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-17T00:39:59.509926Z	Fetching products with query: 
2025-09-17T00:39:59.510043Z	    {
2025-09-17T00:39:59.510163Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:59.510309Z	        
2025-09-17T00:39:59.510431Z	    _id,
2025-09-17T00:39:59.51054Z	    _type,
2025-09-17T00:39:59.510648Z	    partNumber,
2025-09-17T00:39:59.510753Z	    "slug": slug.current,
2025-09-17T00:39:59.510856Z	    title,
2025-09-17T00:39:59.51096Z	    shortDescription,
2025-09-17T00:39:59.511077Z	    image,
2025-09-17T00:39:59.511178Z	    brand->{
2025-09-17T00:39:59.51224Z	      name,
2025-09-17T00:39:59.512419Z	      "slug": slug.current,
2025-09-17T00:39:59.512559Z	      logo
2025-09-17T00:39:59.512673Z	    },
2025-09-17T00:39:59.512773Z	    category->{
2025-09-17T00:39:59.512899Z	      name,
2025-09-17T00:39:59.513227Z	      "slug": slug.current
2025-09-17T00:39:59.513472Z	    },
2025-09-17T00:39:59.513608Z	    pricing{
2025-09-17T00:39:59.513721Z	      currency,
2025-09-17T00:39:59.513831Z	      tiers[]{
2025-09-17T00:39:59.513938Z	        quantity,
2025-09-17T00:39:59.514054Z	        price,
2025-09-17T00:39:59.51416Z	        unit
2025-09-17T00:39:59.514289Z	      },
2025-09-17T00:39:59.514487Z	      moq,
2025-09-17T00:39:59.515566Z	      leadTime,
2025-09-17T00:39:59.516572Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:59.516745Z	      "price": tiers[0].price,
2025-09-17T00:39:59.517151Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:59.517401Z	    },
2025-09-17T00:39:59.517545Z	    inventory{
2025-09-17T00:39:59.518081Z	      quantity,
2025-09-17T00:39:59.518211Z	      status,
2025-09-17T00:39:59.518421Z	      warehouse,
2025-09-17T00:39:59.520239Z	      lastUpdated,
2025-09-17T00:39:59.521434Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:59.522549Z	      "inStock": status == "in_stock",
2025-09-17T00:39:59.522894Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:59.525085Z	    },
2025-09-17T00:39:59.525318Z	    isActive,
2025-09-17T00:39:59.527081Z	    isFeatured,
2025-09-17T00:39:59.52722Z	    isNew,
2025-09-17T00:39:59.527353Z	    _createdAt,
2025-09-17T00:39:59.527464Z	    _updatedAt
2025-09-17T00:39:59.527566Z	  
2025-09-17T00:39:59.527659Z	      },
2025-09-17T00:39:59.527775Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-17T00:39:59.52789Z	    }
2025-09-17T00:39:59.527989Z	  
2025-09-17T00:39:59.528302Z	Query parameters: {
2025-09-17T00:39:59.529082Z	  limit: 8,
2025-09-17T00:39:59.530037Z	  offset: 0,
2025-09-17T00:39:59.53114Z	  category: undefined,
2025-09-17T00:39:59.531368Z	  brand: '英飞凌',
2025-09-17T00:39:59.531536Z	  featured: undefined
2025-09-17T00:39:59.532003Z	}
2025-09-17T00:39:59.532561Z	Fetching solutions with query: 
2025-09-17T00:39:59.533031Z	    {
2025-09-17T00:39:59.533548Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:59.534054Z	        
2025-09-17T00:39:59.53462Z	    _id,
2025-09-17T00:39:59.534772Z	    title,
2025-09-17T00:39:59.534966Z	    "slug": slug.current,
2025-09-17T00:39:59.535388Z	    summary,
2025-09-17T00:39:59.535554Z	    description,
2025-09-17T00:39:59.536262Z	    coverImage,
2025-09-17T00:39:59.53677Z	    primaryBrand->{
2025-09-17T00:39:59.536982Z	      _id,
2025-09-17T00:39:59.537666Z	      name,
2025-09-17T00:39:59.537891Z	      "slug": slug.current,
2025-09-17T00:39:59.538142Z	      logo
2025-09-17T00:39:59.538406Z	    },
2025-09-17T00:39:59.538659Z	    relatedBrands[]->{
2025-09-17T00:39:59.538816Z	      _id,
2025-09-17T00:39:59.538946Z	      name,
2025-09-17T00:39:59.539081Z	      "slug": slug.current,
2025-09-17T00:39:59.539315Z	      logo
2025-09-17T00:39:59.539807Z	    },
2025-09-17T00:39:59.540018Z	    targetMarket,
2025-09-17T00:39:59.540154Z	    complexity,
2025-09-17T00:39:59.540292Z	    publishedAt,
2025-09-17T00:39:59.540447Z	    isPublished,
2025-09-17T00:39:59.540563Z	    isFeatured,
2025-09-17T00:39:59.540672Z	    viewCount,
2025-09-17T00:39:59.540801Z	    _createdAt,
2025-09-17T00:39:59.540899Z	    _updatedAt
2025-09-17T00:39:59.541005Z	  
2025-09-17T00:39:59.541114Z	      },
2025-09-17T00:39:59.541244Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-17T00:39:59.54139Z	    }
2025-09-17T00:39:59.54152Z	  
2025-09-17T00:39:59.54164Z	Query parameters: {
2025-09-17T00:39:59.541777Z	  limit: 4,
2025-09-17T00:39:59.541895Z	  offset: 0,
2025-09-17T00:39:59.542012Z	  targetMarket: undefined,
2025-09-17T00:39:59.542131Z	  brand: '英飞凌',
2025-09-17T00:39:59.542249Z	  featured: undefined
2025-09-17T00:39:59.542372Z	}
2025-09-17T00:39:59.542486Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-17T00:39:59.542597Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:59.542717Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:59.542829Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-17T00:39:59.542936Z	Fetching products with query: 
2025-09-17T00:39:59.543035Z	    {
2025-09-17T00:39:59.54313Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:59.543219Z	        
2025-09-17T00:39:59.543329Z	    _id,
2025-09-17T00:39:59.543425Z	    _type,
2025-09-17T00:39:59.54354Z	    partNumber,
2025-09-17T00:39:59.543648Z	    "slug": slug.current,
2025-09-17T00:39:59.54377Z	    title,
2025-09-17T00:39:59.54387Z	    shortDescription,
2025-09-17T00:39:59.543961Z	    image,
2025-09-17T00:39:59.54407Z	    brand->{
2025-09-17T00:39:59.544179Z	      name,
2025-09-17T00:39:59.544344Z	      "slug": slug.current,
2025-09-17T00:39:59.544575Z	      logo
2025-09-17T00:39:59.544813Z	    },
2025-09-17T00:39:59.544939Z	    category->{
2025-09-17T00:39:59.545073Z	      name,
2025-09-17T00:39:59.545182Z	      "slug": slug.current
2025-09-17T00:39:59.545311Z	    },
2025-09-17T00:39:59.545424Z	    pricing{
2025-09-17T00:39:59.545534Z	      currency,
2025-09-17T00:39:59.545641Z	      tiers[]{
2025-09-17T00:39:59.545777Z	        quantity,
2025-09-17T00:39:59.545893Z	        price,
2025-09-17T00:39:59.546035Z	        unit
2025-09-17T00:39:59.546182Z	      },
2025-09-17T00:39:59.546531Z	      moq,
2025-09-17T00:39:59.546713Z	      leadTime,
2025-09-17T00:39:59.546876Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:59.547024Z	      "price": tiers[0].price,
2025-09-17T00:39:59.547654Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:59.547839Z	    },
2025-09-17T00:39:59.587389Z	    inventory{
2025-09-17T00:39:59.587698Z	      quantity,
2025-09-17T00:39:59.587953Z	      status,
2025-09-17T00:39:59.588133Z	      warehouse,
2025-09-17T00:39:59.588236Z	      lastUpdated,
2025-09-17T00:39:59.588354Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:59.588462Z	      "inStock": status == "in_stock",
2025-09-17T00:39:59.58857Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:59.588679Z	    },
2025-09-17T00:39:59.588771Z	    isActive,
2025-09-17T00:39:59.588874Z	    isFeatured,
2025-09-17T00:39:59.588967Z	    isNew,
2025-09-17T00:39:59.589096Z	    _createdAt,
2025-09-17T00:39:59.589352Z	    _updatedAt
2025-09-17T00:39:59.589474Z	  
2025-09-17T00:39:59.589604Z	      },
2025-09-17T00:39:59.589775Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-17T00:39:59.58989Z	    }
2025-09-17T00:39:59.590004Z	  
2025-09-17T00:39:59.590109Z	Query parameters: {
2025-09-17T00:39:59.590233Z	  limit: 8,
2025-09-17T00:39:59.590414Z	  offset: 0,
2025-09-17T00:39:59.590533Z	  category: undefined,
2025-09-17T00:39:59.590643Z	  brand: 'qualcomm',
2025-09-17T00:39:59.590789Z	  featured: undefined
2025-09-17T00:39:59.590898Z	}
2025-09-17T00:39:59.591009Z	Fetching solutions with query: 
2025-09-17T00:39:59.591107Z	    {
2025-09-17T00:39:59.591214Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:59.591337Z	        
2025-09-17T00:39:59.591442Z	    _id,
2025-09-17T00:39:59.59154Z	    title,
2025-09-17T00:39:59.591679Z	    "slug": slug.current,
2025-09-17T00:39:59.591854Z	    summary,
2025-09-17T00:39:59.591926Z	    description,
2025-09-17T00:39:59.592034Z	    coverImage,
2025-09-17T00:39:59.592117Z	    primaryBrand->{
2025-09-17T00:39:59.592279Z	      _id,
2025-09-17T00:39:59.592447Z	      name,
2025-09-17T00:39:59.592616Z	      "slug": slug.current,
2025-09-17T00:39:59.592754Z	      logo
2025-09-17T00:39:59.592927Z	    },
2025-09-17T00:39:59.593067Z	    relatedBrands[]->{
2025-09-17T00:39:59.593207Z	      _id,
2025-09-17T00:39:59.593331Z	      name,
2025-09-17T00:39:59.593848Z	      "slug": slug.current,
2025-09-17T00:39:59.593959Z	      logo
2025-09-17T00:39:59.594025Z	    },
2025-09-17T00:39:59.594082Z	    targetMarket,
2025-09-17T00:39:59.594145Z	    complexity,
2025-09-17T00:39:59.594321Z	    publishedAt,
2025-09-17T00:39:59.594541Z	    isPublished,
2025-09-17T00:39:59.594649Z	    isFeatured,
2025-09-17T00:39:59.594839Z	    viewCount,
2025-09-17T00:39:59.595013Z	    _createdAt,
2025-09-17T00:39:59.595136Z	    _updatedAt
2025-09-17T00:39:59.595254Z	  
2025-09-17T00:39:59.595399Z	      },
2025-09-17T00:39:59.59552Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-17T00:39:59.595669Z	    }
2025-09-17T00:39:59.595908Z	  
2025-09-17T00:39:59.596076Z	Query parameters: {
2025-09-17T00:39:59.596248Z	  limit: 4,
2025-09-17T00:39:59.596428Z	  offset: 0,
2025-09-17T00:39:59.596573Z	  targetMarket: undefined,
2025-09-17T00:39:59.596643Z	  brand: 'qualcomm',
2025-09-17T00:39:59.596748Z	  featured: undefined
2025-09-17T00:39:59.596922Z	}
2025-09-17T00:39:59.59708Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-17T00:39:59.597221Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:59.597374Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:59.597559Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-17T00:39:59.597806Z	Fetching products with query: 
2025-09-17T00:39:59.597938Z	    {
2025-09-17T00:39:59.598047Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:59.598155Z	        
2025-09-17T00:39:59.598613Z	    _id,
2025-09-17T00:39:59.598753Z	    _type,
2025-09-17T00:39:59.598881Z	    partNumber,
2025-09-17T00:39:59.599008Z	    "slug": slug.current,
2025-09-17T00:39:59.599128Z	    title,
2025-09-17T00:39:59.599232Z	    shortDescription,
2025-09-17T00:39:59.599367Z	    image,
2025-09-17T00:39:59.599483Z	    brand->{
2025-09-17T00:39:59.599618Z	      name,
2025-09-17T00:39:59.599729Z	      "slug": slug.current,
2025-09-17T00:39:59.599841Z	      logo
2025-09-17T00:39:59.59996Z	    },
2025-09-17T00:39:59.60008Z	    category->{
2025-09-17T00:39:59.600195Z	      name,
2025-09-17T00:39:59.600333Z	      "slug": slug.current
2025-09-17T00:39:59.600483Z	    },
2025-09-17T00:39:59.60059Z	    pricing{
2025-09-17T00:39:59.600754Z	      currency,
2025-09-17T00:39:59.600927Z	      tiers[]{
2025-09-17T00:39:59.601067Z	        quantity,
2025-09-17T00:39:59.601187Z	        price,
2025-09-17T00:39:59.601352Z	        unit
2025-09-17T00:39:59.601477Z	      },
2025-09-17T00:39:59.601586Z	      moq,
2025-09-17T00:39:59.601687Z	      leadTime,
2025-09-17T00:39:59.601787Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:59.601922Z	      "price": tiers[0].price,
2025-09-17T00:39:59.602158Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:59.602373Z	    },
2025-09-17T00:39:59.602546Z	    inventory{
2025-09-17T00:39:59.602714Z	      quantity,
2025-09-17T00:39:59.602855Z	      status,
2025-09-17T00:39:59.603026Z	      warehouse,
2025-09-17T00:39:59.603215Z	      lastUpdated,
2025-09-17T00:39:59.603356Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:59.603546Z	      "inStock": status == "in_stock",
2025-09-17T00:39:59.60367Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:59.603855Z	    },
2025-09-17T00:39:59.604032Z	    isActive,
2025-09-17T00:39:59.604214Z	    isFeatured,
2025-09-17T00:39:59.604367Z	    isNew,
2025-09-17T00:39:59.604558Z	    _createdAt,
2025-09-17T00:39:59.604733Z	    _updatedAt
2025-09-17T00:39:59.60493Z	  
2025-09-17T00:39:59.605061Z	      },
2025-09-17T00:39:59.605248Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-17T00:39:59.605426Z	    }
2025-09-17T00:39:59.605591Z	  
2025-09-17T00:39:59.605762Z	Query parameters: {
2025-09-17T00:39:59.605966Z	  limit: 8,
2025-09-17T00:39:59.606161Z	  offset: 0,
2025-09-17T00:39:59.606378Z	  category: undefined,
2025-09-17T00:39:59.606527Z	  brand: 'qualcomm',
2025-09-17T00:39:59.608178Z	  featured: undefined
2025-09-17T00:39:59.608353Z	}
2025-09-17T00:39:59.60854Z	Fetching solutions with query: 
2025-09-17T00:39:59.608729Z	    {
2025-09-17T00:39:59.608911Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:59.60904Z	        
2025-09-17T00:39:59.609195Z	    _id,
2025-09-17T00:39:59.609382Z	    title,
2025-09-17T00:39:59.609514Z	    "slug": slug.current,
2025-09-17T00:39:59.609657Z	    summary,
2025-09-17T00:39:59.609828Z	    description,
2025-09-17T00:39:59.609981Z	    coverImage,
2025-09-17T00:39:59.610172Z	    primaryBrand->{
2025-09-17T00:39:59.610316Z	      _id,
2025-09-17T00:39:59.610431Z	      name,
2025-09-17T00:39:59.610541Z	      "slug": slug.current,
2025-09-17T00:39:59.61065Z	      logo
2025-09-17T00:39:59.610768Z	    },
2025-09-17T00:39:59.610872Z	    relatedBrands[]->{
2025-09-17T00:39:59.61098Z	      _id,
2025-09-17T00:39:59.611101Z	      name,
2025-09-17T00:39:59.6112Z	      "slug": slug.current,
2025-09-17T00:39:59.611318Z	      logo
2025-09-17T00:39:59.611428Z	    },
2025-09-17T00:39:59.611532Z	    targetMarket,
2025-09-17T00:39:59.61165Z	    complexity,
2025-09-17T00:39:59.611775Z	    publishedAt,
2025-09-17T00:39:59.611892Z	    isPublished,
2025-09-17T00:39:59.611997Z	    isFeatured,
2025-09-17T00:39:59.612099Z	    viewCount,
2025-09-17T00:39:59.612199Z	    _createdAt,
2025-09-17T00:39:59.612318Z	    _updatedAt
2025-09-17T00:39:59.612428Z	  
2025-09-17T00:39:59.612546Z	      },
2025-09-17T00:39:59.612654Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-17T00:39:59.612792Z	    }
2025-09-17T00:39:59.612902Z	  
2025-09-17T00:39:59.613028Z	Query parameters: {
2025-09-17T00:39:59.613133Z	  limit: 4,
2025-09-17T00:39:59.613233Z	  offset: 0,
2025-09-17T00:39:59.613344Z	  targetMarket: undefined,
2025-09-17T00:39:59.613447Z	  brand: 'qualcomm',
2025-09-17T00:39:59.613543Z	  featured: undefined
2025-09-17T00:39:59.613637Z	}
2025-09-17T00:39:59.613759Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-17T00:39:59.613865Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:59.613967Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:59.614099Z	   Generating static pages (223/894) 
2025-09-17T00:39:59.614215Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-17T00:39:59.614367Z	Fetching products with query: 
2025-09-17T00:39:59.614494Z	    {
2025-09-17T00:39:59.614601Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:59.614721Z	        
2025-09-17T00:39:59.614823Z	    _id,
2025-09-17T00:39:59.614955Z	    _type,
2025-09-17T00:39:59.615051Z	    partNumber,
2025-09-17T00:39:59.615151Z	    "slug": slug.current,
2025-09-17T00:39:59.615253Z	    title,
2025-09-17T00:39:59.615422Z	    shortDescription,
2025-09-17T00:39:59.615536Z	    image,
2025-09-17T00:39:59.615639Z	    brand->{
2025-09-17T00:39:59.615751Z	      name,
2025-09-17T00:39:59.615847Z	      "slug": slug.current,
2025-09-17T00:39:59.615944Z	      logo
2025-09-17T00:39:59.616045Z	    },
2025-09-17T00:39:59.616142Z	    category->{
2025-09-17T00:39:59.616236Z	      name,
2025-09-17T00:39:59.616356Z	      "slug": slug.current
2025-09-17T00:39:59.61646Z	    },
2025-09-17T00:39:59.616561Z	    pricing{
2025-09-17T00:39:59.616663Z	      currency,
2025-09-17T00:39:59.616808Z	      tiers[]{
2025-09-17T00:39:59.616936Z	        quantity,
2025-09-17T00:39:59.617047Z	        price,
2025-09-17T00:39:59.617152Z	        unit
2025-09-17T00:39:59.618446Z	      },
2025-09-17T00:39:59.618585Z	      moq,
2025-09-17T00:39:59.61872Z	      leadTime,
2025-09-17T00:39:59.618831Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:59.618936Z	      "price": tiers[0].price,
2025-09-17T00:39:59.619037Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:59.619151Z	    },
2025-09-17T00:39:59.619251Z	    inventory{
2025-09-17T00:39:59.619369Z	      quantity,
2025-09-17T00:39:59.619465Z	      status,
2025-09-17T00:39:59.620046Z	      warehouse,
2025-09-17T00:39:59.620168Z	      lastUpdated,
2025-09-17T00:39:59.620285Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:59.620398Z	      "inStock": status == "in_stock",
2025-09-17T00:39:59.621353Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:59.621586Z	    },
2025-09-17T00:39:59.621728Z	    isActive,
2025-09-17T00:39:59.621887Z	    isFeatured,
2025-09-17T00:39:59.622029Z	    isNew,
2025-09-17T00:39:59.622153Z	    _createdAt,
2025-09-17T00:39:59.622344Z	    _updatedAt
2025-09-17T00:39:59.6225Z	  
2025-09-17T00:39:59.622637Z	      },
2025-09-17T00:39:59.622761Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-17T00:39:59.622923Z	    }
2025-09-17T00:39:59.623048Z	  
2025-09-17T00:39:59.623196Z	Query parameters: {
2025-09-17T00:39:59.623362Z	  limit: 8,
2025-09-17T00:39:59.623515Z	  offset: 0,
2025-09-17T00:39:59.623672Z	  category: undefined,
2025-09-17T00:39:59.623834Z	  brand: 'Electronicon',
2025-09-17T00:39:59.623983Z	  featured: undefined
2025-09-17T00:39:59.624135Z	}
2025-09-17T00:39:59.624258Z	Fetching solutions with query: 
2025-09-17T00:39:59.624402Z	    {
2025-09-17T00:39:59.624534Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:59.624654Z	        
2025-09-17T00:39:59.62478Z	    _id,
2025-09-17T00:39:59.624888Z	    title,
2025-09-17T00:39:59.624997Z	    "slug": slug.current,
2025-09-17T00:39:59.625117Z	    summary,
2025-09-17T00:39:59.625221Z	    description,
2025-09-17T00:39:59.625364Z	    coverImage,
2025-09-17T00:39:59.625503Z	    primaryBrand->{
2025-09-17T00:39:59.625636Z	      _id,
2025-09-17T00:39:59.625758Z	      name,
2025-09-17T00:39:59.625876Z	      "slug": slug.current,
2025-09-17T00:39:59.625987Z	      logo
2025-09-17T00:39:59.626081Z	    },
2025-09-17T00:39:59.62617Z	    relatedBrands[]->{
2025-09-17T00:39:59.626261Z	      _id,
2025-09-17T00:39:59.626381Z	      name,
2025-09-17T00:39:59.626488Z	      "slug": slug.current,
2025-09-17T00:39:59.626585Z	      logo
2025-09-17T00:39:59.626678Z	    },
2025-09-17T00:39:59.62683Z	    targetMarket,
2025-09-17T00:39:59.626908Z	    complexity,
2025-09-17T00:39:59.626972Z	    publishedAt,
2025-09-17T00:39:59.627028Z	    isPublished,
2025-09-17T00:39:59.627081Z	    isFeatured,
2025-09-17T00:39:59.627134Z	    viewCount,
2025-09-17T00:39:59.627191Z	    _createdAt,
2025-09-17T00:39:59.627676Z	    _updatedAt
2025-09-17T00:39:59.627889Z	  
2025-09-17T00:39:59.628028Z	      },
2025-09-17T00:39:59.628148Z	   ❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:59.628392Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:59.629882Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-17T00:39:59.63012Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:39:59.630307Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424)
2025-09-17T00:39:59.630563Z	    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-09-17T00:39:59.630782Z	    at runNextTicks (node:internal/process/task_queues:64:3)
2025-09-17T00:39:59.631016Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-17T00:39:59.631184Z	    at process.processTimers (node:internal/timers:512:7) {
2025-09-17T00:39:59.631342Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:39:59.631473Z	}
2025-09-17T00:39:59.631584Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:59.631709Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:59.631817Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-17T00:39:59.631923Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:39:59.632031Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424)
2025-09-17T00:39:59.632133Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-17T00:39:59.632231Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:39:59.632349Z	}
2025-09-17T00:39:59.632445Z	   "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-17T00:39:59.632571Z	    }
2025-09-17T00:39:59.632697Z	  
2025-09-17T00:39:59.632811Z	Query parameters: {
2025-09-17T00:39:59.632927Z	  limit: 4,
2025-09-17T00:39:59.633049Z	  offset: 0,
2025-09-17T00:39:59.633153Z	  targetMarket: undefined,
2025-09-17T00:39:59.63326Z	  brand: 'Electronicon',
2025-09-17T00:39:59.633414Z	  featured: undefined
2025-09-17T00:39:59.633502Z	}
2025-09-17T00:39:59.63359Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-17T00:39:59.633705Z	Fetching products with query: 
2025-09-17T00:39:59.633945Z	    {
2025-09-17T00:39:59.634082Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:59.634204Z	        
2025-09-17T00:39:59.634345Z	    _id,
2025-09-17T00:39:59.634456Z	    _type,
2025-09-17T00:39:59.63456Z	    partNumber,
2025-09-17T00:39:59.6347Z	    "slug": slug.current,
2025-09-17T00:39:59.634828Z	    title,
2025-09-17T00:39:59.634941Z	    shortDescription,
2025-09-17T00:39:59.63505Z	    image,
2025-09-17T00:39:59.635151Z	    brand->{
2025-09-17T00:39:59.63525Z	      name,
2025-09-17T00:39:59.635371Z	      "slug": slug.current,
2025-09-17T00:39:59.635488Z	      logo
2025-09-17T00:39:59.6356Z	    },
2025-09-17T00:39:59.635713Z	    category->{
2025-09-17T00:39:59.635816Z	      name,
2025-09-17T00:39:59.636032Z	      "slug": slug.current
2025-09-17T00:39:59.636148Z	    },
2025-09-17T00:39:59.636357Z	    pricing{
2025-09-17T00:39:59.636525Z	      currency,
2025-09-17T00:39:59.636664Z	      tiers[]{
2025-09-17T00:39:59.636914Z	        quantity,
2025-09-17T00:39:59.637185Z	        price,
2025-09-17T00:39:59.637565Z	        unit
2025-09-17T00:39:59.637781Z	      },
2025-09-17T00:39:59.637922Z	      moq,
2025-09-17T00:39:59.63803Z	      leadTime,
2025-09-17T00:39:59.638129Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:59.638226Z	      "price": tiers[0].price,
2025-09-17T00:39:59.638353Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:59.63846Z	    },
2025-09-17T00:39:59.63857Z	    inventory{
2025-09-17T00:39:59.63868Z	      quantity,
2025-09-17T00:39:59.638801Z	      status,
2025-09-17T00:39:59.638938Z	      warehouse,
2025-09-17T00:39:59.639071Z	      lastUpdated,
2025-09-17T00:39:59.639191Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:59.639343Z	      "inStock": status == "in_stock",
2025-09-17T00:39:59.639472Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:59.639593Z	    },
2025-09-17T00:39:59.639696Z	    isActive,
2025-09-17T00:39:59.639801Z	    isFeatured,
2025-09-17T00:39:59.63993Z	    isNew,
2025-09-17T00:39:59.640132Z	    _createdAt,
2025-09-17T00:39:59.640262Z	    _updatedAt
2025-09-17T00:39:59.640404Z	  
2025-09-17T00:39:59.640515Z	      },
2025-09-17T00:39:59.640636Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-17T00:39:59.640753Z	    }
2025-09-17T00:39:59.640877Z	  
2025-09-17T00:39:59.640999Z	Query parameters: {
2025-09-17T00:39:59.641125Z	  limit: 8,
2025-09-17T00:39:59.641241Z	  offset: 0,
2025-09-17T00:39:59.64137Z	  category: undefined,
2025-09-17T00:39:59.641491Z	  brand: 'Electronicon',
2025-09-17T00:39:59.641604Z	  featured: undefined
2025-09-17T00:39:59.641727Z	}
2025-09-17T00:39:59.641855Z	Fetching solutions with query: 
2025-09-17T00:39:59.641984Z	    {
2025-09-17T00:39:59.64211Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:59.642385Z	        
2025-09-17T00:39:59.64253Z	    _id,
2025-09-17T00:39:59.642656Z	    title,
2025-09-17T00:39:59.642778Z	    "slug": slug.current,
2025-09-17T00:39:59.642892Z	    summary,
2025-09-17T00:39:59.64302Z	    description,
2025-09-17T00:39:59.643089Z	    coverImage,
2025-09-17T00:39:59.643147Z	    primaryBrand->{
2025-09-17T00:39:59.643237Z	      _id,
2025-09-17T00:39:59.643347Z	      name,
2025-09-17T00:39:59.643436Z	      "slug": slug.current,
2025-09-17T00:39:59.643532Z	      logo
2025-09-17T00:39:59.643624Z	    },
2025-09-17T00:39:59.643734Z	    relatedBrands[]->{
2025-09-17T00:39:59.643839Z	      _id,
2025-09-17T00:39:59.643951Z	      name,
2025-09-17T00:39:59.64406Z	      "slug": slug.current,
2025-09-17T00:39:59.644177Z	      logo
2025-09-17T00:39:59.644325Z	    },
2025-09-17T00:39:59.644461Z	    targetMarket,
2025-09-17T00:39:59.644578Z	    complexity,
2025-09-17T00:39:59.644682Z	    publishedAt,
2025-09-17T00:39:59.64479Z	    isPublished,
2025-09-17T00:39:59.644894Z	    isFeatured,
2025-09-17T00:39:59.645028Z	    viewCount,
2025-09-17T00:39:59.645154Z	    _createdAt,
2025-09-17T00:39:59.645261Z	    _updatedAt
2025-09-17T00:39:59.645382Z	  
2025-09-17T00:39:59.64549Z	      },
2025-09-17T00:39:59.645598Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-17T00:39:59.645723Z	    }
2025-09-17T00:39:59.645833Z	  
2025-09-17T00:39:59.645964Z	Query parameters: {
2025-09-17T00:39:59.646087Z	  limit: 4,
2025-09-17T00:39:59.646196Z	  offset: 0,
2025-09-17T00:39:59.646313Z	  targetMarket: undefined,
2025-09-17T00:39:59.646412Z	  brand: 'Electronicon',
2025-09-17T00:39:59.646516Z	  featured: undefined
2025-09-17T00:39:59.646624Z	}
2025-09-17T00:39:59.646732Z	✅ [getBrandData] Found brand: Electronicon
2025-09-17T00:39:59.646849Z	✅ [getBrandData] Found brand: Electronicon
2025-09-17T00:39:59.647067Z	Products fetch result: {
2025-09-17T00:39:59.647188Z	  totalProducts: 2,
2025-09-17T00:39:59.647316Z	  fetchedProducts: 2,
2025-09-17T00:39:59.647399Z	  firstProduct: {
2025-09-17T00:39:59.647533Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-17T00:39:59.647691Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-17T00:39:59.647837Z	    _type: 'product',
2025-09-17T00:39:59.647922Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-17T00:39:59.648056Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-17T00:39:59.648239Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-17T00:39:59.64835Z	    image: null,
2025-09-17T00:39:59.648497Z	    inventory: {
2025-09-17T00:39:59.648625Z	      inStock: true,
2025-09-17T00:39:59.648725Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-17T00:39:59.648837Z	      quantity: 0,
2025-09-17T00:39:59.649078Z	      status: 'in_stock',
2025-09-17T00:39:59.649195Z	      warehouse: null
2025-09-17T00:39:59.64936Z	    },
2025-09-17T00:39:59.649493Z	    isActive: true,
2025-09-17T00:39:59.649632Z	    isFeatured: false,
2025-09-17T00:39:59.649784Z	    isNew: false,
2025-09-17T00:39:59.649895Z	    partNumber: '99999',
2025-09-17T00:39:59.649991Z	    pricing: {
2025-09-17T00:39:59.650084Z	      currency: 'CNY',
2025-09-17T00:39:59.650179Z	      leadTime: null,
2025-09-17T00:39:59.650329Z	      moq: null,
2025-09-17T00:39:59.650435Z	      price: null,
2025-09-17T00:39:59.650539Z	      tiers: null
2025-09-17T00:39:59.650646Z	    },
2025-09-17T00:39:59.650765Z	    shortDescription: null,
2025-09-17T00:39:59.650869Z	    slug: '99999',
2025-09-17T00:39:59.650974Z	    title: '99999'
2025-09-17T00:39:59.651088Z	  }
2025-09-17T00:39:59.651296Z	}
2025-09-17T00:39:59.651434Z	Products fetch result: {
2025-09-17T00:39:59.651563Z	  totalProducts: 2,
2025-09-17T00:39:59.651707Z	  fetchedProducts: 2,
2025-09-17T00:39:59.651839Z	  firstProduct: {
2025-09-17T00:39:59.651943Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-17T00:39:59.652089Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-17T00:39:59.652386Z	    _type: 'product',
2025-09-17T00:39:59.652465Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-17T00:39:59.652768Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-17T00:39:59.652873Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-17T00:39:59.653004Z	    image: null,
2025-09-17T00:39:59.653151Z	    inventory: {
2025-09-17T00:39:59.653305Z	      inStock: true,
2025-09-17T00:39:59.653417Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-17T00:39:59.653538Z	      quantity: 0,
2025-09-17T00:39:59.653658Z	      status: 'in_stock',
2025-09-17T00:39:59.653751Z	      warehouse: null
2025-09-17T00:39:59.653854Z	    },
2025-09-17T00:39:59.653951Z	    isActive: true,
2025-09-17T00:39:59.654047Z	    isFeatured: false,
2025-09-17T00:39:59.654134Z	    isNew: false,
2025-09-17T00:39:59.654308Z	    partNumber: '99999',
2025-09-17T00:39:59.654415Z	    pricing: {
2025-09-17T00:39:59.654539Z	      currency: 'CNY',
2025-09-17T00:39:59.654627Z	      leadTime: null,
2025-09-17T00:39:59.654752Z	      moq: null,
2025-09-17T00:39:59.654878Z	      price: null,
2025-09-17T00:39:59.655023Z	      tiers: null
2025-09-17T00:39:59.655123Z	    },
2025-09-17T00:39:59.65522Z	    shortDescription: null,
2025-09-17T00:39:59.655376Z	    slug: '99999',
2025-09-17T00:39:59.655494Z	    title: '99999'
2025-09-17T00:39:59.655653Z	  }
2025-09-17T00:39:59.655774Z	}
2025-09-17T00:39:59.655911Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:59.656047Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:59.656165Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-17T00:39:59.656246Z	Fetching products with query: 
2025-09-17T00:39:59.656385Z	    {
2025-09-17T00:39:59.656489Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:59.656593Z	        
2025-09-17T00:39:59.656696Z	    _id,
2025-09-17T00:39:59.656804Z	    _type,
2025-09-17T00:39:59.656882Z	    partNumber,
2025-09-17T00:39:59.657016Z	    "slug": slug.current,
2025-09-17T00:39:59.657108Z	    title,
2025-09-17T00:39:59.657207Z	    shortDescription,
2025-09-17T00:39:59.657292Z	    image,
2025-09-17T00:39:59.657499Z	    brand->{
2025-09-17T00:39:59.657635Z	      name,
2025-09-17T00:39:59.657719Z	      "slug": slug.current,
2025-09-17T00:39:59.657877Z	      logo
2025-09-17T00:39:59.658015Z	    },
2025-09-17T00:39:59.658193Z	    category->{
2025-09-17T00:39:59.658378Z	      name,
2025-09-17T00:39:59.658521Z	      "slug": slug.current
2025-09-17T00:39:59.658642Z	    },
2025-09-17T00:39:59.658753Z	    pricing{
2025-09-17T00:39:59.658836Z	      currency,
2025-09-17T00:39:59.659159Z	      tiers[]{
2025-09-17T00:39:59.659498Z	        quantity,
2025-09-17T00:39:59.659882Z	        price,
2025-09-17T00:39:59.660151Z	        unit
2025-09-17T00:39:59.660245Z	      },
2025-09-17T00:39:59.6604Z	      moq,
2025-09-17T00:39:59.66052Z	      leadTime,
2025-09-17T00:39:59.660641Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:59.66075Z	      "price": tiers[0].price,
2025-09-17T00:39:59.660874Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:59.66102Z	    },
2025-09-17T00:39:59.661129Z	    inventory{
2025-09-17T00:39:59.661241Z	      quantity,
2025-09-17T00:39:59.661355Z	      status,
2025-09-17T00:39:59.661422Z	      warehouse,
2025-09-17T00:39:59.661598Z	      lastUpdated,
2025-09-17T00:39:59.661784Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:59.668455Z	      "inStock": status == "in_stock",
2025-09-17T00:39:59.668587Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:59.668655Z	    },
2025-09-17T00:39:59.668723Z	    isActive,
2025-09-17T00:39:59.668779Z	    isFeatured,
2025-09-17T00:39:59.66884Z	    isNew,
2025-09-17T00:39:59.668905Z	    _createdAt,
2025-09-17T00:39:59.668975Z	    _updatedAt
2025-09-17T00:39:59.66903Z	  
2025-09-17T00:39:59.669085Z	      },
2025-09-17T00:39:59.669139Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-17T00:39:59.669194Z	    }
2025-09-17T00:39:59.669254Z	  
2025-09-17T00:39:59.688211Z	Query parameters: {
2025-09-17T00:39:59.688342Z	  limit: 8,
2025-09-17T00:39:59.688608Z	  offset: 0,
2025-09-17T00:39:59.688695Z	  category: undefined,
2025-09-17T00:39:59.688756Z	  brand: 'sanrex',
2025-09-17T00:39:59.688881Z	  featured: undefined
2025-09-17T00:39:59.689105Z	}
2025-09-17T00:39:59.689244Z	Fetching solutions with query: 
2025-09-17T00:39:59.689359Z	    {
2025-09-17T00:39:59.689464Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:59.689561Z	        
2025-09-17T00:39:59.689693Z	    _id,
2025-09-17T00:39:59.689798Z	    title,
2025-09-17T00:39:59.68989Z	    "slug": slug.current,
2025-09-17T00:39:59.690013Z	    summary,
2025-09-17T00:39:59.690127Z	    description,
2025-09-17T00:39:59.69045Z	    coverImage,
2025-09-17T00:39:59.690578Z	    primaryBrand->{
2025-09-17T00:39:59.690768Z	      _id,
2025-09-17T00:39:59.69088Z	      name,
2025-09-17T00:39:59.69113Z	      "slug": slug.current,
2025-09-17T00:39:59.691248Z	      logo
2025-09-17T00:39:59.69142Z	    },
2025-09-17T00:39:59.691557Z	    relatedBrands[]->{
2025-09-17T00:39:59.691677Z	      _id,
2025-09-17T00:39:59.691787Z	      name,
2025-09-17T00:39:59.691897Z	      "slug": slug.current,
2025-09-17T00:39:59.691993Z	      logo
2025-09-17T00:39:59.692102Z	    },
2025-09-17T00:39:59.692217Z	    targetMarket,
2025-09-17T00:39:59.692346Z	    complexity,
2025-09-17T00:39:59.692458Z	    publishedAt,
2025-09-17T00:39:59.692567Z	    isPublished,
2025-09-17T00:39:59.69269Z	    isFeatured,
2025-09-17T00:39:59.692797Z	    viewCount,
2025-09-17T00:39:59.692911Z	    _createdAt,
2025-09-17T00:39:59.693017Z	    _updatedAt
2025-09-17T00:39:59.693166Z	  
2025-09-17T00:39:59.693399Z	      },
2025-09-17T00:39:59.693519Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-17T00:39:59.693625Z	    }
2025-09-17T00:39:59.69389Z	  
2025-09-17T00:39:59.694024Z	Query parameters: {
2025-09-17T00:39:59.694207Z	  limit: 4,
2025-09-17T00:39:59.694417Z	  offset: 0,
2025-09-17T00:39:59.694508Z	  targetMarket: undefined,
2025-09-17T00:39:59.694677Z	  brand: 'sanrex',
2025-09-17T00:39:59.694765Z	  featured: undefined
2025-09-17T00:39:59.694895Z	}
2025-09-17T00:39:59.694999Z	✅ [getBrandData] Found brand: Sanrex
2025-09-17T00:39:59.695119Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:59.695218Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:59.695374Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-17T00:39:59.695496Z	Fetching products with query: 
2025-09-17T00:39:59.695596Z	    {
2025-09-17T00:39:59.695701Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:59.695804Z	        
2025-09-17T00:39:59.695974Z	    _id,
2025-09-17T00:39:59.696145Z	    _type,
2025-09-17T00:39:59.696239Z	    partNumber,
2025-09-17T00:39:59.696334Z	    "slug": slug.current,
2025-09-17T00:39:59.696405Z	    title,
2025-09-17T00:39:59.696464Z	    shortDescription,
2025-09-17T00:39:59.696757Z	    image,
2025-09-17T00:39:59.696846Z	    brand->{
2025-09-17T00:39:59.696928Z	      name,
2025-09-17T00:39:59.697164Z	      "slug": slug.current,
2025-09-17T00:39:59.697255Z	      logo
2025-09-17T00:39:59.697559Z	    },
2025-09-17T00:39:59.697673Z	    category->{
2025-09-17T00:39:59.697769Z	      name,
2025-09-17T00:39:59.697867Z	      "slug": slug.current
2025-09-17T00:39:59.697965Z	    },
2025-09-17T00:39:59.6981Z	    pricing{
2025-09-17T00:39:59.698212Z	      currency,
2025-09-17T00:39:59.698341Z	      tiers[]{
2025-09-17T00:39:59.69844Z	        quantity,
2025-09-17T00:39:59.69854Z	        price,
2025-09-17T00:39:59.698638Z	        unit
2025-09-17T00:39:59.700136Z	      },
2025-09-17T00:39:59.700306Z	      moq,
2025-09-17T00:39:59.700429Z	      leadTime,
2025-09-17T00:39:59.700533Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:59.700633Z	      "price": tiers[0].price,
2025-09-17T00:39:59.700728Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:59.700842Z	    },
2025-09-17T00:39:59.700951Z	    inventory{
2025-09-17T00:39:59.701048Z	      quantity,
2025-09-17T00:39:59.701136Z	      status,
2025-09-17T00:39:59.701244Z	      warehouse,
2025-09-17T00:39:59.70136Z	      lastUpdated,
2025-09-17T00:39:59.701457Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:59.701551Z	      "inStock": status == "in_stock",
2025-09-17T00:39:59.701641Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:59.701724Z	    },
2025-09-17T00:39:59.701827Z	    isActive,
2025-09-17T00:39:59.701917Z	    isFeatured,
2025-09-17T00:39:59.702001Z	    isNew,
2025-09-17T00:39:59.702113Z	    _createdAt,
2025-09-17T00:39:59.702216Z	    _updatedAt
2025-09-17T00:39:59.702335Z	  
2025-09-17T00:39:59.702435Z	      },
2025-09-17T00:39:59.70253Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-17T00:39:59.702632Z	    }
2025-09-17T00:39:59.702727Z	  
2025-09-17T00:39:59.702835Z	Query parameters: {
2025-09-17T00:39:59.702932Z	  limit: 8,
2025-09-17T00:39:59.703024Z	  offset: 0,
2025-09-17T00:39:59.703112Z	  category: undefined,
2025-09-17T00:39:59.703198Z	  brand: 'sanrex',
2025-09-17T00:39:59.703318Z	  featured: undefined
2025-09-17T00:39:59.703412Z	}
2025-09-17T00:39:59.703501Z	Fetching solutions with query: 
2025-09-17T00:39:59.703591Z	    {
2025-09-17T00:39:59.703684Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:59.703792Z	        
2025-09-17T00:39:59.703898Z	    _id,
2025-09-17T00:39:59.704012Z	    title,
2025-09-17T00:39:59.70412Z	    "slug": slug.current,
2025-09-17T00:39:59.704231Z	    summary,
2025-09-17T00:39:59.704365Z	    description,
2025-09-17T00:39:59.70447Z	    coverImage,
2025-09-17T00:39:59.704575Z	    primaryBrand->{
2025-09-17T00:39:59.704684Z	      _id,
2025-09-17T00:39:59.7048Z	      name,
2025-09-17T00:39:59.704904Z	      "slug": slug.current,
2025-09-17T00:39:59.705003Z	      logo
2025-09-17T00:39:59.705103Z	    },
2025-09-17T00:39:59.705198Z	    relatedBrands[]->{
2025-09-17T00:39:59.705339Z	      _id,
2025-09-17T00:39:59.705462Z	      name,
2025-09-17T00:39:59.705564Z	      "slug": slug.current,
2025-09-17T00:39:59.705665Z	      logo
2025-09-17T00:39:59.70578Z	    },
2025-09-17T00:39:59.705881Z	    targetMarket,
2025-09-17T00:39:59.705983Z	    complexity,
2025-09-17T00:39:59.706091Z	    publishedAt,
2025-09-17T00:39:59.706192Z	    isPublished,
2025-09-17T00:39:59.706317Z	    isFeatured,
2025-09-17T00:39:59.706429Z	    viewCount,
2025-09-17T00:39:59.706528Z	    _createdAt,
2025-09-17T00:39:59.70663Z	    _updatedAt
2025-09-17T00:39:59.706748Z	  
2025-09-17T00:39:59.706864Z	      },
2025-09-17T00:39:59.706972Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-17T00:39:59.707074Z	    }
2025-09-17T00:39:59.707181Z	  
2025-09-17T00:39:59.707308Z	Query parameters: {
2025-09-17T00:39:59.707413Z	  limit: 4,
2025-09-17T00:39:59.707516Z	  offset: 0,
2025-09-17T00:39:59.707623Z	  targetMarket: undefined,
2025-09-17T00:39:59.707731Z	  brand: 'sanrex',
2025-09-17T00:39:59.708644Z	  featured: undefined
2025-09-17T00:39:59.70892Z	}
2025-09-17T00:39:59.709137Z	✅ [getBrandData] Found brand: Sanrex
2025-09-17T00:39:59.709375Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:59.709597Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:59.70983Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-17T00:39:59.710883Z	Fetching products with query: 
2025-09-17T00:39:59.711026Z	    {
2025-09-17T00:39:59.711131Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:59.711246Z	        
2025-09-17T00:39:59.711386Z	    _id,
2025-09-17T00:39:59.711492Z	    _type,
2025-09-17T00:39:59.711591Z	    partNumber,
2025-09-17T00:39:59.711689Z	    "slug": slug.current,
2025-09-17T00:39:59.711813Z	    title,
2025-09-17T00:39:59.711932Z	    shortDescription,
2025-09-17T00:39:59.712036Z	    image,
2025-09-17T00:39:59.712141Z	    brand->{
2025-09-17T00:39:59.712247Z	      name,
2025-09-17T00:39:59.712374Z	      "slug": slug.current,
2025-09-17T00:39:59.712476Z	      logo
2025-09-17T00:39:59.712595Z	    },
2025-09-17T00:39:59.712716Z	    category->{
2025-09-17T00:39:59.712835Z	      name,
2025-09-17T00:39:59.71294Z	      "slug": slug.current
2025-09-17T00:39:59.713042Z	    },
2025-09-17T00:39:59.713142Z	    pricing{
2025-09-17T00:39:59.713234Z	      currency,
2025-09-17T00:39:59.713355Z	      tiers[]{
2025-09-17T00:39:59.713452Z	        quantity,
2025-09-17T00:39:59.713548Z	        price,
2025-09-17T00:39:59.713645Z	        unit
2025-09-17T00:39:59.713772Z	      },
2025-09-17T00:39:59.713881Z	      moq,
2025-09-17T00:39:59.713989Z	      leadTime,
2025-09-17T00:39:59.71411Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:59.714217Z	      "price": tiers[0].price,
2025-09-17T00:39:59.714337Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:59.714451Z	    },
2025-09-17T00:39:59.714547Z	    inventory{
2025-09-17T00:39:59.714652Z	      quantity,
2025-09-17T00:39:59.714765Z	      status,
2025-09-17T00:39:59.714867Z	      warehouse,
2025-09-17T00:39:59.714968Z	      lastUpdated,
2025-09-17T00:39:59.715075Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:59.715179Z	      "inStock": status == "in_stock",
2025-09-17T00:39:59.715313Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:59.715421Z	    },
2025-09-17T00:39:59.715526Z	    isActive,
2025-09-17T00:39:59.715627Z	    isFeatured,
2025-09-17T00:39:59.715732Z	    isNew,
2025-09-17T00:39:59.715858Z	    _createdAt,
2025-09-17T00:39:59.715972Z	    _updatedAt
2025-09-17T00:39:59.716069Z	  
2025-09-17T00:39:59.716161Z	      },
2025-09-17T00:39:59.71625Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-17T00:39:59.716363Z	    }
2025-09-17T00:39:59.716451Z	  
2025-09-17T00:39:59.716542Z	Query parameters: {
2025-09-17T00:39:59.716631Z	  limit: 8,
2025-09-17T00:39:59.716726Z	  offset: 0,
2025-09-17T00:39:59.716836Z	  category: undefined,
2025-09-17T00:39:59.716937Z	  brand: 'Electronicon',
2025-09-17T00:39:59.717046Z	  featured: undefined
2025-09-17T00:39:59.717147Z	}
2025-09-17T00:39:59.717248Z	Fetching solutions with query: 
2025-09-17T00:39:59.717379Z	    {
2025-09-17T00:39:59.717495Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:59.727729Z	        
2025-09-17T00:39:59.728316Z	    _id,
2025-09-17T00:39:59.728712Z	    title,
2025-09-17T00:39:59.729222Z	    "slug": slug.current,
2025-09-17T00:39:59.72978Z	    summary,
2025-09-17T00:39:59.730107Z	    description,
2025-09-17T00:39:59.730656Z	    coverImage,
2025-09-17T00:39:59.731006Z	    primaryBrand->{
2025-09-17T00:39:59.731341Z	      _id,
2025-09-17T00:39:59.731488Z	      name,
2025-09-17T00:39:59.731631Z	      "slug": slug.current,
2025-09-17T00:39:59.731758Z	      logo
2025-09-17T00:39:59.731886Z	    },
2025-09-17T00:39:59.732211Z	    relatedBrands[]->{
2025-09-17T00:39:59.732584Z	      _id,
2025-09-17T00:39:59.732755Z	      name,
2025-09-17T00:39:59.732872Z	      "slug": slug.current,
2025-09-17T00:39:59.732982Z	      logo
2025-09-17T00:39:59.733085Z	    },
2025-09-17T00:39:59.733203Z	    targetMarket,
2025-09-17T00:39:59.733336Z	    complexity,
2025-09-17T00:39:59.73346Z	    publishedAt,
2025-09-17T00:39:59.733584Z	    isPublished,
2025-09-17T00:39:59.7337Z	    isFeatured,
2025-09-17T00:39:59.733811Z	    viewCount,
2025-09-17T00:39:59.733911Z	    _createdAt,
2025-09-17T00:39:59.734025Z	    _updatedAt
2025-09-17T00:39:59.734231Z	  
2025-09-17T00:39:59.734404Z	      },
2025-09-17T00:39:59.734523Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-17T00:39:59.734688Z	    }
2025-09-17T00:39:59.734825Z	  
2025-09-17T00:39:59.73493Z	Query parameters: {
2025-09-17T00:39:59.735039Z	  limit: 4,
2025-09-17T00:39:59.735147Z	  offset: 0,
2025-09-17T00:39:59.735429Z	  targetMarket: undefined,
2025-09-17T00:39:59.735579Z	  brand: 'Electronicon',
2025-09-17T00:39:59.735684Z	  featured: undefined
2025-09-17T00:39:59.73578Z	}
2025-09-17T00:39:59.735932Z	✅ [getBrandData] Found brand: Electronicon
2025-09-17T00:39:59.736281Z	Products fetch result: {
2025-09-17T00:39:59.736492Z	  totalProducts: 2,
2025-09-17T00:39:59.736624Z	  fetchedProducts: 2,
2025-09-17T00:39:59.736747Z	  firstProduct: {
2025-09-17T00:39:59.736853Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-17T00:39:59.736977Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-17T00:39:59.737095Z	    _type: 'product',
2025-09-17T00:39:59.737195Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-17T00:39:59.737309Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-17T00:39:59.737418Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-17T00:39:59.737517Z	    image: null,
2025-09-17T00:39:59.73765Z	    inventory: {
2025-09-17T00:39:59.739329Z	      inStock: true,
2025-09-17T00:39:59.739586Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-17T00:39:59.74037Z	      quantity: 0,
2025-09-17T00:39:59.740552Z	      status: 'in_stock',
2025-09-17T00:39:59.740722Z	      warehouse: null
2025-09-17T00:39:59.740885Z	    },
2025-09-17T00:39:59.741047Z	    isActive: true,
2025-09-17T00:39:59.741476Z	    isFeatured: false,
2025-09-17T00:39:59.741645Z	    isNew: false,
2025-09-17T00:39:59.741925Z	    partNumber: '99999',
2025-09-17T00:39:59.742084Z	    pricing: {
2025-09-17T00:39:59.742192Z	      currency: 'CNY',
2025-09-17T00:39:59.742314Z	      leadTime: null,
2025-09-17T00:39:59.742554Z	      moq: null,
2025-09-17T00:39:59.742881Z	      price: null,
2025-09-17T00:39:59.743033Z	      tiers: null
2025-09-17T00:39:59.743312Z	    },
2025-09-17T00:39:59.743602Z	    shortDescription: null,
2025-09-17T00:39:59.743808Z	    slug: '99999',
2025-09-17T00:39:59.743979Z	    title: '99999'
2025-09-17T00:39:59.744133Z	  }
2025-09-17T00:39:59.744331Z	}
2025-09-17T00:39:59.744503Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:59.744662Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-17T00:39:59.744836Z	Fetching products with query: 
2025-09-17T00:39:59.745012Z	    {
2025-09-17T00:39:59.74515Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:59.745262Z	        
2025-09-17T00:39:59.745414Z	    _id,
2025-09-17T00:39:59.745541Z	    _type,
2025-09-17T00:39:59.745642Z	    partNumber,
2025-09-17T00:39:59.745753Z	    "slug": slug.current,
2025-09-17T00:39:59.745862Z	    title,
2025-09-17T00:39:59.745989Z	    shortDescription,
2025-09-17T00:39:59.746097Z	    image,
2025-09-17T00:39:59.746206Z	    brand->{
2025-09-17T00:39:59.746322Z	      name,
2025-09-17T00:39:59.746428Z	      "slug": slug.current,
2025-09-17T00:39:59.746525Z	      logo
2025-09-17T00:39:59.746615Z	    },
2025-09-17T00:39:59.746706Z	    category->{
2025-09-17T00:39:59.746796Z	      name,
2025-09-17T00:39:59.746881Z	      "slug": slug.current
2025-09-17T00:39:59.746984Z	    },
2025-09-17T00:39:59.747086Z	    pricing{
2025-09-17T00:39:59.747481Z	      currency,
2025-09-17T00:39:59.74761Z	      tiers[]{
2025-09-17T00:39:59.747712Z	        quantity,
2025-09-17T00:39:59.747812Z	        price,
2025-09-17T00:39:59.747908Z	        unit
2025-09-17T00:39:59.748018Z	      },
2025-09-17T00:39:59.748122Z	      moq,
2025-09-17T00:39:59.748218Z	      leadTime,
2025-09-17T00:39:59.748337Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:59.748445Z	      "price": tiers[0].price,
2025-09-17T00:39:59.748542Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:59.748633Z	    },
2025-09-17T00:39:59.748727Z	    inventory{
2025-09-17T00:39:59.748822Z	      quantity,
2025-09-17T00:39:59.748943Z	      status,
2025-09-17T00:39:59.749061Z	      warehouse,
2025-09-17T00:39:59.749165Z	      lastUpdated,
2025-09-17T00:39:59.749264Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:59.74941Z	      "inStock": status == "in_stock",
2025-09-17T00:39:59.749591Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:59.749758Z	    },
2025-09-17T00:39:59.749851Z	    isActive,
2025-09-17T00:39:59.750017Z	    isFeatured,
2025-09-17T00:39:59.750088Z	    isNew,
2025-09-17T00:39:59.750145Z	    _createdAt,
2025-09-17T00:39:59.7502Z	    _updatedAt
2025-09-17T00:39:59.750253Z	  
2025-09-17T00:39:59.787683Z	      },
2025-09-17T00:39:59.787834Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-17T00:39:59.788088Z	    }
2025-09-17T00:39:59.788284Z	  
2025-09-17T00:39:59.788527Z	Query parameters: {
2025-09-17T00:39:59.788709Z	  limit: 8,
2025-09-17T00:39:59.788849Z	  offset: 0,
2025-09-17T00:39:59.788993Z	  category: undefined,
2025-09-17T00:39:59.789123Z	  brand: 'Electronicon',
2025-09-17T00:39:59.789234Z	  featured: undefined
2025-09-17T00:39:59.789368Z	}
2025-09-17T00:39:59.789474Z	Fetching solutions with query: 
2025-09-17T00:39:59.789571Z	    {
2025-09-17T00:39:59.78967Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:59.789781Z	        
2025-09-17T00:39:59.789882Z	    _id,
2025-09-17T00:39:59.789999Z	    title,
2025-09-17T00:39:59.79011Z	    "slug": slug.current,
2025-09-17T00:39:59.79022Z	    summary,
2025-09-17T00:39:59.790345Z	    description,
2025-09-17T00:39:59.790453Z	    coverImage,
2025-09-17T00:39:59.79057Z	    primaryBrand->{
2025-09-17T00:39:59.790673Z	      _id,
2025-09-17T00:39:59.790774Z	      name,
2025-09-17T00:39:59.790875Z	      "slug": slug.current,
2025-09-17T00:39:59.790996Z	      logo
2025-09-17T00:39:59.791109Z	    },
2025-09-17T00:39:59.791211Z	    relatedBrands[]->{
2025-09-17T00:39:59.79135Z	      _id,
2025-09-17T00:39:59.791457Z	      name,
2025-09-17T00:39:59.791792Z	      "slug": slug.current,
2025-09-17T00:39:59.791993Z	      logo
2025-09-17T00:39:59.7921Z	    },
2025-09-17T00:39:59.792161Z	    targetMarket,
2025-09-17T00:39:59.792239Z	    complexity,
2025-09-17T00:39:59.792419Z	    publishedAt,
2025-09-17T00:39:59.79254Z	    isPublished,
2025-09-17T00:39:59.792648Z	    isFeatured,
2025-09-17T00:39:59.79276Z	    viewCount,
2025-09-17T00:39:59.792897Z	    _createdAt,
2025-09-17T00:39:59.793036Z	    _updatedAt
2025-09-17T00:39:59.793129Z	  
2025-09-17T00:39:59.79324Z	      },
2025-09-17T00:39:59.793375Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-17T00:39:59.793523Z	    }
2025-09-17T00:39:59.793623Z	  
2025-09-17T00:39:59.793952Z	Query parameters: {
2025-09-17T00:39:59.794323Z	  limit: 4,
2025-09-17T00:39:59.794448Z	  offset: 0,
2025-09-17T00:39:59.794579Z	  targetMarket: undefined,
2025-09-17T00:39:59.794699Z	  brand: 'Electronicon',
2025-09-17T00:39:59.794815Z	  featured: undefined
2025-09-17T00:39:59.794933Z	}
2025-09-17T00:39:59.795054Z	✅ [getBrandData] Found brand: Electronicon
2025-09-17T00:39:59.79519Z	Products fetch result: {
2025-09-17T00:39:59.795301Z	  totalProducts: 2,
2025-09-17T00:39:59.795406Z	  fetchedProducts: 2,
2025-09-17T00:39:59.795509Z	  firstProduct: {
2025-09-17T00:39:59.795624Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-17T00:39:59.795736Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-17T00:39:59.795869Z	    _type: 'product',
2025-09-17T00:39:59.796002Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-17T00:39:59.796148Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-17T00:39:59.796297Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-17T00:39:59.796433Z	    image: null,
2025-09-17T00:39:59.796585Z	    inventory: {
2025-09-17T00:39:59.796774Z	      inStock: true,
2025-09-17T00:39:59.796929Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-17T00:39:59.797055Z	      quantity: 0,
2025-09-17T00:39:59.797148Z	      status: 'in_stock',
2025-09-17T00:39:59.797332Z	      warehouse: null
2025-09-17T00:39:59.797442Z	    },
2025-09-17T00:39:59.797578Z	    isActive: true,
2025-09-17T00:39:59.797698Z	    isFeatured: false,
2025-09-17T00:39:59.797836Z	    isNew: false,
2025-09-17T00:39:59.797938Z	    partNumber: '99999',
2025-09-17T00:39:59.798032Z	    pricing: {
2025-09-17T00:39:59.798156Z	      currency: 'CNY',
2025-09-17T00:39:59.798328Z	      leadTime: null,
2025-09-17T00:39:59.798441Z	      moq: null,
2025-09-17T00:39:59.798591Z	      price: null,
2025-09-17T00:39:59.798822Z	      tiers: null
2025-09-17T00:39:59.798975Z	    },
2025-09-17T00:39:59.799138Z	    shortDescription: null,
2025-09-17T00:39:59.799408Z	    slug: '99999',
2025-09-17T00:39:59.799566Z	    title: '99999'
2025-09-17T00:39:59.799678Z	  }
2025-09-17T00:39:59.799829Z	}
2025-09-17T00:39:59.799918Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:59.80005Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-17T00:39:59.800188Z	Fetching products with query: 
2025-09-17T00:39:59.800333Z	    {
2025-09-17T00:39:59.800455Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:59.800561Z	        
2025-09-17T00:39:59.800655Z	    _id,
2025-09-17T00:39:59.800753Z	    _type,
2025-09-17T00:39:59.800858Z	    partNumber,
2025-09-17T00:39:59.800962Z	    "slug": slug.current,
2025-09-17T00:39:59.801052Z	    title,
2025-09-17T00:39:59.801113Z	    shortDescription,
2025-09-17T00:39:59.801298Z	    image,
2025-09-17T00:39:59.801381Z	    brand->{
2025-09-17T00:39:59.801516Z	      name,
2025-09-17T00:39:59.801619Z	      "slug": slug.current,
2025-09-17T00:39:59.801729Z	      logo
2025-09-17T00:39:59.801842Z	    },
2025-09-17T00:39:59.801996Z	    category->{
2025-09-17T00:39:59.8021Z	      name,
2025-09-17T00:39:59.802248Z	      "slug": slug.current
2025-09-17T00:39:59.802376Z	    },
2025-09-17T00:39:59.802485Z	    pricing{
2025-09-17T00:39:59.802605Z	      currency,
2025-09-17T00:39:59.802709Z	      tiers[]{
2025-09-17T00:39:59.802809Z	        quantity,
2025-09-17T00:39:59.802917Z	        price,
2025-09-17T00:39:59.803034Z	        unit
2025-09-17T00:39:59.803152Z	      },
2025-09-17T00:39:59.803259Z	      moq,
2025-09-17T00:39:59.80343Z	      leadTime,
2025-09-17T00:39:59.803541Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:59.803655Z	      "price": tiers[0].price,
2025-09-17T00:39:59.803758Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:59.803865Z	    },
2025-09-17T00:39:59.80424Z	    inventory{
2025-09-17T00:39:59.80447Z	      quantity,
2025-09-17T00:39:59.804598Z	      status,
2025-09-17T00:39:59.804805Z	      warehouse,
2025-09-17T00:39:59.805074Z	      lastUpdated,
2025-09-17T00:39:59.80541Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:59.805857Z	      "inStock": status == "in_stock",
2025-09-17T00:39:59.806183Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:59.806496Z	    },
2025-09-17T00:39:59.806809Z	    isActive,
2025-09-17T00:39:59.807109Z	    isFeatured,
2025-09-17T00:39:59.807433Z	    isNew,
2025-09-17T00:39:59.807584Z	    _createdAt,
2025-09-17T00:39:59.807693Z	    _updatedAt
2025-09-17T00:39:59.807802Z	  
2025-09-17T00:39:59.807906Z	      },
2025-09-17T00:39:59.808064Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-17T00:39:59.808232Z	    }
2025-09-17T00:39:59.808391Z	  
2025-09-17T00:39:59.80852Z	Query parameters: {
2025-09-17T00:39:59.808631Z	  limit: 8,
2025-09-17T00:39:59.808745Z	  offset: 0,
2025-09-17T00:39:59.808855Z	  category: undefined,
2025-09-17T00:39:59.808961Z	  brand: 'sanrex',
2025-09-17T00:39:59.809075Z	  featured: undefined
2025-09-17T00:39:59.809173Z	}
2025-09-17T00:39:59.809284Z	Fetching solutions with query: 
2025-09-17T00:39:59.809406Z	    {
2025-09-17T00:39:59.809507Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:59.80961Z	        
2025-09-17T00:39:59.809711Z	    _id,
2025-09-17T00:39:59.809809Z	    title,
2025-09-17T00:39:59.809909Z	    "slug": slug.current,
2025-09-17T00:39:59.81001Z	    summary,
2025-09-17T00:39:59.81013Z	    description,
2025-09-17T00:39:59.810239Z	    coverImage,
2025-09-17T00:39:59.810376Z	    primaryBrand->{
2025-09-17T00:39:59.810482Z	      _id,
2025-09-17T00:39:59.810585Z	      name,
2025-09-17T00:39:59.813195Z	      "slug": slug.current,
2025-09-17T00:39:59.819194Z	      logo
2025-09-17T00:39:59.819429Z	    },
2025-09-17T00:39:59.819572Z	    relatedBrands[]->{
2025-09-17T00:39:59.819685Z	      _id,
2025-09-17T00:39:59.819797Z	      name,
2025-09-17T00:39:59.819906Z	      "slug": slug.current,
2025-09-17T00:39:59.820032Z	      logo
2025-09-17T00:39:59.820144Z	    },
2025-09-17T00:39:59.820286Z	    targetMarket,
2025-09-17T00:39:59.820419Z	    complexity,
2025-09-17T00:39:59.820533Z	    publishedAt,
2025-09-17T00:39:59.820642Z	    isPublished,
2025-09-17T00:39:59.820748Z	    isFeatured,
2025-09-17T00:39:59.820851Z	    viewCount,
2025-09-17T00:39:59.820962Z	    _createdAt,
2025-09-17T00:39:59.821084Z	    _updatedAt
2025-09-17T00:39:59.821201Z	  
2025-09-17T00:39:59.821336Z	      },
2025-09-17T00:39:59.821448Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-17T00:39:59.821553Z	    }
2025-09-17T00:39:59.821649Z	  
2025-09-17T00:39:59.821749Z	Query parameters: {
2025-09-17T00:39:59.821848Z	  limit: 4,
2025-09-17T00:39:59.821961Z	  offset: 0,
2025-09-17T00:39:59.822078Z	  targetMarket: undefined,
2025-09-17T00:39:59.822192Z	  brand: 'sanrex',
2025-09-17T00:39:59.822321Z	  featured: undefined
2025-09-17T00:39:59.82244Z	}
2025-09-17T00:39:59.822555Z	✅ [getBrandData] Found brand: Sanrex
2025-09-17T00:39:59.822667Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:59.822774Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:59.822893Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-17T00:39:59.82302Z	Fetching products with query: 
2025-09-17T00:39:59.826417Z	    {
2025-09-17T00:39:59.826582Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:59.826712Z	        
2025-09-17T00:39:59.827803Z	    _id,
2025-09-17T00:39:59.827962Z	    _type,
2025-09-17T00:39:59.828066Z	    partNumber,
2025-09-17T00:39:59.828156Z	    "slug": slug.current,
2025-09-17T00:39:59.828247Z	    title,
2025-09-17T00:39:59.828359Z	    shortDescription,
2025-09-17T00:39:59.828454Z	    image,
2025-09-17T00:39:59.828545Z	    brand->{
2025-09-17T00:39:59.828636Z	      name,
2025-09-17T00:39:59.828738Z	      "slug": slug.current,
2025-09-17T00:39:59.828833Z	      logo
2025-09-17T00:39:59.828924Z	    },
2025-09-17T00:39:59.829028Z	    category->{
2025-09-17T00:39:59.829151Z	      name,
2025-09-17T00:39:59.829263Z	      "slug": slug.current
2025-09-17T00:39:59.829392Z	    },
2025-09-17T00:39:59.829508Z	    pricing{
2025-09-17T00:39:59.829625Z	      currency,
2025-09-17T00:39:59.829746Z	      tiers[]{
2025-09-17T00:39:59.829849Z	        quantity,
2025-09-17T00:39:59.83001Z	        price,
2025-09-17T00:39:59.830135Z	        unit
2025-09-17T00:39:59.830239Z	      },
2025-09-17T00:39:59.830385Z	      moq,
2025-09-17T00:39:59.830529Z	      leadTime,
2025-09-17T00:39:59.830746Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:59.830943Z	      "price": tiers[0].price,
2025-09-17T00:39:59.83135Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:59.831586Z	    },
2025-09-17T00:39:59.831719Z	    inventory{
2025-09-17T00:39:59.831828Z	      quantity,
2025-09-17T00:39:59.832415Z	      status,
2025-09-17T00:39:59.832588Z	      warehouse,
2025-09-17T00:39:59.832723Z	      lastUpdated,
2025-09-17T00:39:59.832876Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:59.833056Z	      "inStock": status == "in_stock",
2025-09-17T00:39:59.833218Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:59.833396Z	    },
2025-09-17T00:39:59.833525Z	    isActive,
2025-09-17T00:39:59.833935Z	    isFeatured,
2025-09-17T00:39:59.834095Z	    isNew,
2025-09-17T00:39:59.834204Z	    _createdAt,
2025-09-17T00:39:59.834329Z	    _updatedAt
2025-09-17T00:39:59.834436Z	  
2025-09-17T00:39:59.834528Z	      },
2025-09-17T00:39:59.834624Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-17T00:39:59.834753Z	    }
2025-09-17T00:39:59.834862Z	  
2025-09-17T00:39:59.834961Z	Query parameters: {
2025-09-17T00:39:59.835051Z	  limit: 8,
2025-09-17T00:39:59.835151Z	  offset: 0,
2025-09-17T00:39:59.835254Z	  category: undefined,
2025-09-17T00:39:59.835383Z	  brand: 'sanrex',
2025-09-17T00:39:59.835485Z	  featured: undefined
2025-09-17T00:39:59.835588Z	}
2025-09-17T00:39:59.835728Z	Fetching solutions with query: 
2025-09-17T00:39:59.835844Z	    {
2025-09-17T00:39:59.835953Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:59.836076Z	        
2025-09-17T00:39:59.836185Z	    _id,
2025-09-17T00:39:59.836471Z	    title,
2025-09-17T00:39:59.836605Z	    "slug": slug.current,
2025-09-17T00:39:59.836798Z	    summary,
2025-09-17T00:39:59.836968Z	    description,
2025-09-17T00:39:59.837118Z	    coverImage,
2025-09-17T00:39:59.837363Z	    primaryBrand->{
2025-09-17T00:39:59.837535Z	      _id,
2025-09-17T00:39:59.837861Z	      name,
2025-09-17T00:39:59.838056Z	      "slug": slug.current,
2025-09-17T00:39:59.838419Z	      logo
2025-09-17T00:39:59.838591Z	    },
2025-09-17T00:39:59.838719Z	    relatedBrands[]->{
2025-09-17T00:39:59.838829Z	      _id,
2025-09-17T00:39:59.838934Z	      name,
2025-09-17T00:39:59.839137Z	      "slug": slug.current,
2025-09-17T00:39:59.839475Z	      logo
2025-09-17T00:39:59.839774Z	    },
2025-09-17T00:39:59.839894Z	    targetMarket,
2025-09-17T00:39:59.840007Z	    complexity,
2025-09-17T00:39:59.840133Z	    publishedAt,
2025-09-17T00:39:59.840453Z	    isPublished,
2025-09-17T00:39:59.84084Z	    isFeatured,
2025-09-17T00:39:59.841197Z	    viewCount,
2025-09-17T00:39:59.841365Z	    _createdAt,
2025-09-17T00:39:59.841469Z	    _updatedAt
2025-09-17T00:39:59.841818Z	  
2025-09-17T00:39:59.842038Z	      },
2025-09-17T00:39:59.842212Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-17T00:39:59.842386Z	    }
2025-09-17T00:39:59.842505Z	  
2025-09-17T00:39:59.842725Z	Query parameters: {
2025-09-17T00:39:59.84308Z	  limit: 4,
2025-09-17T00:39:59.843243Z	  offset: 0,
2025-09-17T00:39:59.843655Z	  targetMarket: undefined,
2025-09-17T00:39:59.843767Z	  brand: 'sanrex',
2025-09-17T00:39:59.843862Z	  featured: undefined
2025-09-17T00:39:59.843967Z	}
2025-09-17T00:39:59.844074Z	✅ [getBrandData] Found brand: Sanrex
2025-09-17T00:39:59.844159Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:59.844406Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:59.844486Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-17T00:39:59.844694Z	Fetching products with query: 
2025-09-17T00:39:59.844797Z	    {
2025-09-17T00:39:59.844972Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:59.845103Z	        
2025-09-17T00:39:59.845248Z	    _id,
2025-09-17T00:39:59.845481Z	    _type,
2025-09-17T00:39:59.845719Z	    partNumber,
2025-09-17T00:39:59.845879Z	    "slug": slug.current,
2025-09-17T00:39:59.84609Z	    title,
2025-09-17T00:39:59.846204Z	    shortDescription,
2025-09-17T00:39:59.846447Z	    image,
2025-09-17T00:39:59.846596Z	    brand->{
2025-09-17T00:39:59.846724Z	      name,
2025-09-17T00:39:59.846839Z	      "slug": slug.current,
2025-09-17T00:39:59.846935Z	      logo
2025-09-17T00:39:59.847164Z	    },
2025-09-17T00:39:59.847278Z	    category->{
2025-09-17T00:39:59.847433Z	      name,
2025-09-17T00:39:59.847547Z	      "slug": slug.current
2025-09-17T00:39:59.84772Z	    },
2025-09-17T00:39:59.847989Z	    pricing{
2025-09-17T00:39:59.848183Z	      currency,
2025-09-17T00:39:59.848262Z	      tiers[]{
2025-09-17T00:39:59.848419Z	        quantity,
2025-09-17T00:39:59.848481Z	        price,
2025-09-17T00:39:59.848537Z	        unit
2025-09-17T00:39:59.848659Z	      },
2025-09-17T00:39:59.848842Z	      moq,
2025-09-17T00:39:59.848993Z	      leadTime,
2025-09-17T00:39:59.849129Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:59.849209Z	      "price": tiers[0].price,
2025-09-17T00:39:59.849398Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:59.849479Z	    },
2025-09-17T00:39:59.849604Z	    inventory{
2025-09-17T00:39:59.849719Z	      quantity,
2025-09-17T00:39:59.849894Z	      status,
2025-09-17T00:39:59.850147Z	      warehouse,
2025-09-17T00:39:59.850245Z	      lastUpdated,
2025-09-17T00:39:59.850349Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:59.850415Z	      "inStock": status == "in_stock",
2025-09-17T00:39:59.850471Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:59.850524Z	    },
2025-09-17T00:39:59.85058Z	    isActive,
2025-09-17T00:39:59.850633Z	    isFeatured,
2025-09-17T00:39:59.850685Z	    isNew,
2025-09-17T00:39:59.850738Z	    _createdAt,
2025-09-17T00:39:59.850797Z	    _updatedAt
2025-09-17T00:39:59.850851Z	  
2025-09-17T00:39:59.850905Z	      },
2025-09-17T00:39:59.850967Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-17T00:39:59.851028Z	    }
2025-09-17T00:39:59.851087Z	  
2025-09-17T00:39:59.851159Z	Query parameters: {
2025-09-17T00:39:59.851219Z	  limit: 8,
2025-09-17T00:39:59.851293Z	  offset: 0,
2025-09-17T00:39:59.851364Z	  category: undefined,
2025-09-17T00:39:59.851419Z	  brand: 'sanrex',
2025-09-17T00:39:59.851472Z	  featured: undefined
2025-09-17T00:39:59.851525Z	}
2025-09-17T00:39:59.851577Z	Fetching solutions with query: 
2025-09-17T00:39:59.851631Z	    {
2025-09-17T00:39:59.851684Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:59.851739Z	        
2025-09-17T00:39:59.851799Z	    _id,
2025-09-17T00:39:59.851852Z	    title,
2025-09-17T00:39:59.851905Z	    "slug": slug.current,
2025-09-17T00:39:59.851959Z	    summary,
2025-09-17T00:39:59.852013Z	    description,
2025-09-17T00:39:59.85207Z	    coverImage,
2025-09-17T00:39:59.852122Z	    primaryBrand->{
2025-09-17T00:39:59.852174Z	      _id,
2025-09-17T00:39:59.852226Z	      name,
2025-09-17T00:39:59.852334Z	      "slug": slug.current,
2025-09-17T00:39:59.852399Z	      logo
2025-09-17T00:39:59.852454Z	    },
2025-09-17T00:39:59.852507Z	    relatedBrands[]->{
2025-09-17T00:39:59.852573Z	      _id,
2025-09-17T00:39:59.852627Z	      name,
2025-09-17T00:39:59.852684Z	      "slug": slug.current,
2025-09-17T00:39:59.852737Z	      logo
2025-09-17T00:39:59.852797Z	    },
2025-09-17T00:39:59.852851Z	    targetMarket,
2025-09-17T00:39:59.852903Z	    complexity,
2025-09-17T00:39:59.852955Z	    publishedAt,
2025-09-17T00:39:59.853009Z	    isPublished,
2025-09-17T00:39:59.853064Z	    isFeatured,
2025-09-17T00:39:59.853118Z	    viewCount,
2025-09-17T00:39:59.853171Z	    _createdAt,
2025-09-17T00:39:59.853222Z	    _updatedAt
2025-09-17T00:39:59.853298Z	  
2025-09-17T00:39:59.853363Z	      },
2025-09-17T00:39:59.853417Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-17T00:39:59.853485Z	    }
2025-09-17T00:39:59.853541Z	  
2025-09-17T00:39:59.853599Z	Query parameters: {
2025-09-17T00:39:59.853664Z	  limit: 4,
2025-09-17T00:39:59.85372Z	  offset: 0,
2025-09-17T00:39:59.887428Z	  targetMarket: undefined,
2025-09-17T00:39:59.887704Z	  brand: 'sanrex',
2025-09-17T00:39:59.888074Z	  featured: undefined
2025-09-17T00:39:59.888186Z	}
2025-09-17T00:39:59.888333Z	✅ [getBrandData] Found brand: Sanrex
2025-09-17T00:39:59.888475Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:59.888744Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:59.888832Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-17T00:39:59.888916Z	Fetching products with query: 
2025-09-17T00:39:59.889015Z	    {
2025-09-17T00:39:59.88916Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:59.889307Z	        
2025-09-17T00:39:59.889404Z	    _id,
2025-09-17T00:39:59.889551Z	    _type,
2025-09-17T00:39:59.889676Z	    partNumber,
2025-09-17T00:39:59.889788Z	    "slug": slug.current,
2025-09-17T00:39:59.88989Z	    title,
2025-09-17T00:39:59.890015Z	    shortDescription,
2025-09-17T00:39:59.890148Z	    image,
2025-09-17T00:39:59.890441Z	    brand->{
2025-09-17T00:39:59.890567Z	      name,
2025-09-17T00:39:59.890757Z	      "slug": slug.current,
2025-09-17T00:39:59.890836Z	      logo
2025-09-17T00:39:59.891021Z	    },
2025-09-17T00:39:59.891232Z	    category->{
2025-09-17T00:39:59.891385Z	      name,
2025-09-17T00:39:59.891491Z	      "slug": slug.current
2025-09-17T00:39:59.891587Z	    },
2025-09-17T00:39:59.891692Z	    pricing{
2025-09-17T00:39:59.891797Z	      currency,
2025-09-17T00:39:59.891871Z	      tiers[]{
2025-09-17T00:39:59.891943Z	        quantity,
2025-09-17T00:39:59.892229Z	        price,
2025-09-17T00:39:59.892549Z	        unit
2025-09-17T00:39:59.892689Z	      },
2025-09-17T00:39:59.892984Z	      moq,
2025-09-17T00:39:59.893123Z	      leadTime,
2025-09-17T00:39:59.893322Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:59.893491Z	      "price": tiers[0].price,
2025-09-17T00:39:59.893607Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:59.89381Z	    },
2025-09-17T00:39:59.8939Z	    inventory{
2025-09-17T00:39:59.893961Z	      quantity,
2025-09-17T00:39:59.894136Z	      status,
2025-09-17T00:39:59.894212Z	      warehouse,
2025-09-17T00:39:59.894416Z	      lastUpdated,
2025-09-17T00:39:59.894521Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:59.894628Z	      "inStock": status == "in_stock",
2025-09-17T00:39:59.894724Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:59.895073Z	    },
2025-09-17T00:39:59.89515Z	    isActive,
2025-09-17T00:39:59.895209Z	    isFeatured,
2025-09-17T00:39:59.895452Z	    isNew,
2025-09-17T00:39:59.895541Z	    _createdAt,
2025-09-17T00:39:59.895778Z	    _updatedAt
2025-09-17T00:39:59.895973Z	  
2025-09-17T00:39:59.896034Z	      },
2025-09-17T00:39:59.896103Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-17T00:39:59.896399Z	    }
2025-09-17T00:39:59.896553Z	  
2025-09-17T00:39:59.896644Z	Query parameters: {
2025-09-17T00:39:59.896802Z	  limit: 8,
2025-09-17T00:39:59.896916Z	  offset: 0,
2025-09-17T00:39:59.897044Z	  category: undefined,
2025-09-17T00:39:59.897124Z	  brand: 'sanrex',
2025-09-17T00:39:59.897288Z	  featured: undefined
2025-09-17T00:39:59.8974Z	}
2025-09-17T00:39:59.897515Z	Fetching solutions with query: 
2025-09-17T00:39:59.897636Z	    {
2025-09-17T00:39:59.897749Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:59.897887Z	        
2025-09-17T00:39:59.898026Z	    _id,
2025-09-17T00:39:59.898102Z	    title,
2025-09-17T00:39:59.898235Z	    "slug": slug.current,
2025-09-17T00:39:59.898416Z	    summary,
2025-09-17T00:39:59.89849Z	    description,
2025-09-17T00:39:59.898546Z	    coverImage,
2025-09-17T00:39:59.898679Z	    primaryBrand->{
2025-09-17T00:39:59.898799Z	      _id,
2025-09-17T00:39:59.898907Z	      name,
2025-09-17T00:39:59.899076Z	      "slug": slug.current,
2025-09-17T00:39:59.899171Z	      logo
2025-09-17T00:39:59.899363Z	    },
2025-09-17T00:39:59.899447Z	    relatedBrands[]->{
2025-09-17T00:39:59.89955Z	      _id,
2025-09-17T00:39:59.899712Z	      name,
2025-09-17T00:39:59.899863Z	      "slug": slug.current,
2025-09-17T00:39:59.899992Z	      logo
2025-09-17T00:39:59.900137Z	    },
2025-09-17T00:39:59.90024Z	    targetMarket,
2025-09-17T00:39:59.900356Z	    complexity,
2025-09-17T00:39:59.900616Z	    publishedAt,
2025-09-17T00:39:59.900711Z	    isPublished,
2025-09-17T00:39:59.900802Z	    isFeatured,
2025-09-17T00:39:59.900923Z	    viewCount,
2025-09-17T00:39:59.901085Z	    _createdAt,
2025-09-17T00:39:59.901232Z	    _updatedAt
2025-09-17T00:39:59.901394Z	  
2025-09-17T00:39:59.901496Z	      },
2025-09-17T00:39:59.901637Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-17T00:39:59.90177Z	    }
2025-09-17T00:39:59.901904Z	  
2025-09-17T00:39:59.90206Z	Query parameters: {
2025-09-17T00:39:59.902183Z	  limit: 4,
2025-09-17T00:39:59.902335Z	  offset: 0,
2025-09-17T00:39:59.902494Z	  targetMarket: undefined,
2025-09-17T00:39:59.902641Z	  brand: 'sanrex',
2025-09-17T00:39:59.902802Z	  featured: undefined
2025-09-17T00:39:59.902938Z	}
2025-09-17T00:39:59.903042Z	✅ [getBrandData] Found brand: Sanrex
2025-09-17T00:39:59.903108Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:59.903323Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:59.903503Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:59.903678Z	Fetching products with query: 
2025-09-17T00:39:59.903799Z	    {
2025-09-17T00:39:59.903921Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:59.90402Z	        
2025-09-17T00:39:59.904204Z	    _id,
2025-09-17T00:39:59.904346Z	    _type,
2025-09-17T00:39:59.9045Z	    partNumber,
2025-09-17T00:39:59.9046Z	    "slug": slug.current,
2025-09-17T00:39:59.904741Z	    title,
2025-09-17T00:39:59.904824Z	    shortDescription,
2025-09-17T00:39:59.904992Z	    image,
2025-09-17T00:39:59.905205Z	    brand->{
2025-09-17T00:39:59.905385Z	      name,
2025-09-17T00:39:59.905776Z	      "slug": slug.current,
2025-09-17T00:39:59.906045Z	      logo
2025-09-17T00:39:59.906133Z	    },
2025-09-17T00:39:59.906435Z	    category->{
2025-09-17T00:39:59.906519Z	      name,
2025-09-17T00:39:59.906765Z	      "slug": slug.current
2025-09-17T00:39:59.906847Z	    },
2025-09-17T00:39:59.906967Z	    pricing{
2025-09-17T00:39:59.907066Z	      currency,
2025-09-17T00:39:59.907168Z	      tiers[]{
2025-09-17T00:39:59.907242Z	        quantity,
2025-09-17T00:39:59.907374Z	        price,
2025-09-17T00:39:59.907483Z	        unit
2025-09-17T00:39:59.907582Z	      },
2025-09-17T00:39:59.907677Z	      moq,
2025-09-17T00:39:59.907886Z	      leadTime,
2025-09-17T00:39:59.908043Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:59.908148Z	      "price": tiers[0].price,
2025-09-17T00:39:59.908254Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:59.908374Z	    },
2025-09-17T00:39:59.908474Z	    inventory{
2025-09-17T00:39:59.908585Z	      quantity,
2025-09-17T00:39:59.908688Z	      status,
2025-09-17T00:39:59.90902Z	      warehouse,
2025-09-17T00:39:59.9091Z	      lastUpdated,
2025-09-17T00:39:59.909189Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:59.909479Z	      "inStock": status == "in_stock",
2025-09-17T00:39:59.909558Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:59.909839Z	    },
2025-09-17T00:39:59.910054Z	    isActive,
2025-09-17T00:39:59.910293Z	    isFeatured,
2025-09-17T00:39:59.910547Z	    isNew,
2025-09-17T00:39:59.910633Z	    _createdAt,
2025-09-17T00:39:59.910706Z	    _updatedAt
2025-09-17T00:39:59.91102Z	  
2025-09-17T00:39:59.911088Z	      },
2025-09-17T00:39:59.911354Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-17T00:39:59.911455Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:59.911708Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:59.911782Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-17T00:39:59.912012Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:39:59.912163Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424)
2025-09-17T00:39:59.912257Z	    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-09-17T00:39:59.912428Z	    at runNextTicks (node:internal/process/task_queues:64:3)
2025-09-17T00:39:59.912512Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-17T00:39:59.912589Z	    at process.processTimers (node:internal/timers:512:7) {
2025-09-17T00:39:59.912973Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:39:59.913126Z	}
2025-09-17T00:39:59.913254Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:59.913407Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:59.91373Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-17T00:39:59.913923Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:39:59.914054Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424)
2025-09-17T00:39:59.914176Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-17T00:39:59.914323Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:39:59.91459Z	}
2025-09-17T00:39:59.914748Z	    }
2025-09-17T00:39:59.914903Z	  
2025-09-17T00:39:59.914986Z	Query parameters: {
2025-09-17T00:39:59.915048Z	  limit: 8,
2025-09-17T00:39:59.915205Z	  offset: 0,
2025-09-17T00:39:59.915314Z	  category: undefined,
2025-09-17T00:39:59.915391Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:39:59.915547Z	  featured: undefined
2025-09-17T00:39:59.915775Z	}
2025-09-17T00:39:59.91589Z	Fetching solutions with query: 
2025-09-17T00:39:59.916Z	    {
2025-09-17T00:39:59.916185Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:59.916329Z	        
2025-09-17T00:39:59.916498Z	    _id,
2025-09-17T00:39:59.916663Z	    title,
2025-09-17T00:39:59.916801Z	    "slug": slug.current,
2025-09-17T00:39:59.916888Z	    summary,
2025-09-17T00:39:59.916971Z	    description,
2025-09-17T00:39:59.9171Z	    coverImage,
2025-09-17T00:39:59.917258Z	    primaryBrand->{
2025-09-17T00:39:59.91738Z	      _id,
2025-09-17T00:39:59.917537Z	      name,
2025-09-17T00:39:59.917657Z	      "slug": slug.current,
2025-09-17T00:39:59.917801Z	      logo
2025-09-17T00:39:59.917878Z	    },
2025-09-17T00:39:59.918036Z	    relatedBrands[]->{
2025-09-17T00:39:59.918197Z	      _id,
2025-09-17T00:39:59.918313Z	      name,
2025-09-17T00:39:59.918509Z	      "slug": slug.current,
2025-09-17T00:39:59.918676Z	      logo
2025-09-17T00:39:59.918812Z	    },
2025-09-17T00:39:59.91893Z	    targetMarket,
2025-09-17T00:39:59.919025Z	    complexity,
2025-09-17T00:39:59.919129Z	    publishedAt,
2025-09-17T00:39:59.91925Z	    isPublished,
2025-09-17T00:39:59.919358Z	    isFeatured,
2025-09-17T00:39:59.919451Z	    viewCount,
2025-09-17T00:39:59.919575Z	    _createdAt,
2025-09-17T00:39:59.919711Z	    _updatedAt
2025-09-17T00:39:59.919832Z	  
2025-09-17T00:39:59.919964Z	      },
2025-09-17T00:39:59.920243Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-17T00:39:59.920395Z	    }
2025-09-17T00:39:59.920487Z	  
2025-09-17T00:39:59.920607Z	Query parameters: {
2025-09-17T00:39:59.920841Z	  limit: 4,
2025-09-17T00:39:59.921059Z	  offset: 0,
2025-09-17T00:39:59.921235Z	  targetMarket: undefined,
2025-09-17T00:39:59.921579Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:39:59.921719Z	  featured: undefined
2025-09-17T00:39:59.921832Z	}
2025-09-17T00:39:59.921933Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:59.922042Z	Fetching products with query: 
2025-09-17T00:39:59.922283Z	    {
2025-09-17T00:39:59.9224Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:59.922503Z	        
2025-09-17T00:39:59.922598Z	    _id,
2025-09-17T00:39:59.922688Z	    _type,
2025-09-17T00:39:59.922756Z	    partNumber,
2025-09-17T00:39:59.922824Z	    "slug": slug.current,
2025-09-17T00:39:59.923002Z	    title,
2025-09-17T00:39:59.923082Z	    shortDescription,
2025-09-17T00:39:59.923141Z	    image,
2025-09-17T00:39:59.923197Z	    brand->{
2025-09-17T00:39:59.923251Z	      name,
2025-09-17T00:39:59.923345Z	      "slug": slug.current,
2025-09-17T00:39:59.923472Z	      logo
2025-09-17T00:39:59.923554Z	    },
2025-09-17T00:39:59.92363Z	    category->{
2025-09-17T00:39:59.92371Z	      name,
2025-09-17T00:39:59.924065Z	      "slug": slug.current
2025-09-17T00:39:59.924247Z	    },
2025-09-17T00:39:59.924346Z	    pricing{
2025-09-17T00:39:59.924496Z	      currency,
2025-09-17T00:39:59.924598Z	      tiers[]{
2025-09-17T00:39:59.924743Z	        quantity,
2025-09-17T00:39:59.924819Z	        price,
2025-09-17T00:39:59.92493Z	        unit
2025-09-17T00:39:59.925081Z	      },
2025-09-17T00:39:59.925171Z	      moq,
2025-09-17T00:39:59.925404Z	      leadTime,
2025-09-17T00:39:59.925525Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:59.925797Z	      "price": tiers[0].price,
2025-09-17T00:39:59.925984Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:59.926375Z	    },
2025-09-17T00:39:59.926545Z	    inventory{
2025-09-17T00:39:59.926658Z	      quantity,
2025-09-17T00:39:59.926921Z	      status,
2025-09-17T00:39:59.92704Z	      warehouse,
2025-09-17T00:39:59.927183Z	      lastUpdated,
2025-09-17T00:39:59.927327Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:59.927659Z	      "inStock": status == "in_stock",
2025-09-17T00:39:59.927745Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:59.927872Z	    },
2025-09-17T00:39:59.928075Z	    isActive,
2025-09-17T00:39:59.928225Z	    isFeatured,
2025-09-17T00:39:59.928546Z	    isNew,
2025-09-17T00:39:59.928823Z	    _createdAt,
2025-09-17T00:39:59.929133Z	    _updatedAt
2025-09-17T00:39:59.929424Z	  
2025-09-17T00:39:59.929515Z	      },
2025-09-17T00:39:59.929762Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-17T00:39:59.929941Z	    }
2025-09-17T00:39:59.930078Z	  
2025-09-17T00:39:59.930192Z	Query parameters: {
2025-09-17T00:39:59.930346Z	  limit: 8,
2025-09-17T00:39:59.930462Z	  offset: 0,
2025-09-17T00:39:59.930567Z	  category: undefined,
2025-09-17T00:39:59.930676Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:39:59.930776Z	  featured: undefined
2025-09-17T00:39:59.930868Z	}
2025-09-17T00:39:59.930981Z	Fetching solutions with query: 
2025-09-17T00:39:59.931103Z	    {
2025-09-17T00:39:59.931398Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:59.931495Z	        
2025-09-17T00:39:59.931743Z	    _id,
2025-09-17T00:39:59.931849Z	    title,
2025-09-17T00:39:59.931959Z	    "slug": slug.current,
2025-09-17T00:39:59.932159Z	    summary,
2025-09-17T00:39:59.932231Z	    description,
2025-09-17T00:39:59.932327Z	    coverImage,
2025-09-17T00:39:59.932449Z	    primaryBrand->{
2025-09-17T00:39:59.932586Z	      _id,
2025-09-17T00:39:59.93269Z	      name,
2025-09-17T00:39:59.932796Z	      "slug": slug.current,
2025-09-17T00:39:59.932912Z	      logo
2025-09-17T00:39:59.933301Z	    },
2025-09-17T00:39:59.933458Z	    relatedBrands[]->{
2025-09-17T00:39:59.933574Z	      _id,
2025-09-17T00:39:59.933714Z	      name,
2025-09-17T00:39:59.933906Z	      "slug": slug.current,
2025-09-17T00:39:59.934214Z	      logo
2025-09-17T00:39:59.934361Z	    },
2025-09-17T00:39:59.9345Z	    targetMarket,
2025-09-17T00:39:59.934703Z	    complexity,
2025-09-17T00:39:59.934829Z	    publishedAt,
2025-09-17T00:39:59.934955Z	    isPublished,
2025-09-17T00:39:59.935169Z	    isFeatured,
2025-09-17T00:39:59.935332Z	    viewCount,
2025-09-17T00:39:59.93545Z	    _createdAt,
2025-09-17T00:39:59.935555Z	    _updatedAt
2025-09-17T00:39:59.935652Z	  
2025-09-17T00:39:59.935722Z	      },
2025-09-17T00:39:59.935786Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-17T00:39:59.935851Z	    }
2025-09-17T00:39:59.935943Z	  
2025-09-17T00:39:59.936113Z	Query parameters: {
2025-09-17T00:39:59.936225Z	  limit: 4,
2025-09-17T00:39:59.936378Z	  offset: 0,
2025-09-17T00:39:59.936495Z	  targetMarket: undefined,
2025-09-17T00:39:59.936593Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:39:59.936692Z	  featured: undefined
2025-09-17T00:39:59.93677Z	}
2025-09-17T00:39:59.93683Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:59.936893Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:39:59.93696Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:59.93702Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:59.937212Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:59.937327Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:59.937393Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-17T00:39:59.937484Z	Fetching products with query: 
2025-09-17T00:39:59.937649Z	    {
2025-09-17T00:39:59.937771Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:59.93788Z	        
2025-09-17T00:39:59.937986Z	    _id,
2025-09-17T00:39:59.938085Z	    _type,
2025-09-17T00:39:59.938187Z	    partNumber,
2025-09-17T00:39:59.938346Z	    "slug": slug.current,
2025-09-17T00:39:59.938443Z	    title,
2025-09-17T00:39:59.938642Z	    shortDescription,
2025-09-17T00:39:59.938857Z	    image,
2025-09-17T00:39:59.938945Z	    brand->{
2025-09-17T00:39:59.939017Z	      name,
2025-09-17T00:39:59.939104Z	      "slug": slug.current,
2025-09-17T00:39:59.939218Z	      logo
2025-09-17T00:39:59.939356Z	    },
2025-09-17T00:39:59.939483Z	    category->{
2025-09-17T00:39:59.939596Z	      name,
2025-09-17T00:39:59.939717Z	      "slug": slug.current
2025-09-17T00:39:59.939816Z	    },
2025-09-17T00:39:59.939915Z	    pricing{
2025-09-17T00:39:59.940066Z	      currency,
2025-09-17T00:39:59.94059Z	      tiers[]{
2025-09-17T00:39:59.940771Z	        quantity,
2025-09-17T00:39:59.94101Z	        price,
2025-09-17T00:39:59.941532Z	        unit
2025-09-17T00:39:59.941644Z	      },
2025-09-17T00:39:59.941739Z	      moq,
2025-09-17T00:39:59.941855Z	      leadTime,
2025-09-17T00:39:59.941972Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:59.942072Z	      "price": tiers[0].price,
2025-09-17T00:39:59.942218Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:59.942333Z	    },
2025-09-17T00:39:59.942438Z	    inventory{
2025-09-17T00:39:59.942553Z	      quantity,
2025-09-17T00:39:59.942693Z	      status,
2025-09-17T00:39:59.942955Z	      warehouse,
2025-09-17T00:39:59.94315Z	      lastUpdated,
2025-09-17T00:39:59.943343Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:59.943501Z	      "inStock": status == "in_stock",
2025-09-17T00:39:59.943645Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:59.943792Z	    },
2025-09-17T00:39:59.943923Z	    isActive,
2025-09-17T00:39:59.944035Z	    isFeatured,
2025-09-17T00:39:59.94416Z	    isNew,
2025-09-17T00:39:59.944294Z	    _createdAt,
2025-09-17T00:39:59.94444Z	    _updatedAt
2025-09-17T00:39:59.944583Z	  
2025-09-17T00:39:59.944732Z	      },
2025-09-17T00:39:59.944869Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-17T00:39:59.945017Z	    }
2025-09-17T00:39:59.945133Z	  
2025-09-17T00:39:59.945279Z	Query parameters: {
2025-09-17T00:39:59.945426Z	  limit: 8,
2025-09-17T00:39:59.945577Z	  offset: 0,
2025-09-17T00:39:59.945746Z	  category: undefined,
2025-09-17T00:39:59.945889Z	  brand: 'mediatek',
2025-09-17T00:39:59.946068Z	  featured: undefined
2025-09-17T00:39:59.946224Z	}
2025-09-17T00:39:59.946387Z	Fetching solutions with query: 
2025-09-17T00:39:59.946514Z	    {
2025-09-17T00:39:59.946625Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:59.94674Z	        
2025-09-17T00:39:59.946852Z	    _id,
2025-09-17T00:39:59.946956Z	    title,
2025-09-17T00:39:59.947067Z	    "slug": slug.current,
2025-09-17T00:39:59.947171Z	    summary,
2025-09-17T00:39:59.947293Z	    description,
2025-09-17T00:39:59.947403Z	    coverImage,
2025-09-17T00:39:59.947509Z	    primaryBrand->{
2025-09-17T00:39:59.94762Z	      _id,
2025-09-17T00:39:59.947732Z	      name,
2025-09-17T00:39:59.947841Z	      "slug": slug.current,
2025-09-17T00:39:59.947976Z	      logo
2025-09-17T00:39:59.948101Z	    },
2025-09-17T00:39:59.948215Z	    relatedBrands[]->{
2025-09-17T00:39:59.948364Z	      _id,
2025-09-17T00:39:59.948475Z	      name,
2025-09-17T00:39:59.948578Z	      "slug": slug.current,
2025-09-17T00:39:59.948695Z	      logo
2025-09-17T00:39:59.94884Z	    },
2025-09-17T00:39:59.949211Z	    targetMarket,
2025-09-17T00:39:59.950831Z	    complexity,
2025-09-17T00:39:59.950974Z	    publishedAt,
2025-09-17T00:39:59.951088Z	    isPublished,
2025-09-17T00:39:59.951199Z	    isFeatured,
2025-09-17T00:39:59.951335Z	    viewCount,
2025-09-17T00:39:59.951448Z	    _createdAt,
2025-09-17T00:39:59.951556Z	    _updatedAt
2025-09-17T00:39:59.951661Z	  
2025-09-17T00:39:59.951763Z	      },
2025-09-17T00:39:59.951888Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-17T00:39:59.951992Z	    }
2025-09-17T00:39:59.95211Z	  
2025-09-17T00:39:59.952243Z	Query parameters: {
2025-09-17T00:39:59.952427Z	  limit: 4,
2025-09-17T00:39:59.952554Z	  offset: 0,
2025-09-17T00:39:59.952659Z	  targetMarket: undefined,
2025-09-17T00:39:59.952817Z	  brand: 'mediatek',
2025-09-17T00:39:59.952942Z	  featured: undefined
2025-09-17T00:39:59.953057Z	}
2025-09-17T00:39:59.953162Z	✅ [getBrandData] Found brand: MediaTek
2025-09-17T00:39:59.953286Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:39:59.953405Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:39:59.953522Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-17T00:39:59.953642Z	Fetching products with query: 
2025-09-17T00:39:59.953749Z	    {
2025-09-17T00:39:59.954279Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"] | order(_createdAt desc) [0...8] {
2025-09-17T00:39:59.954416Z	        
2025-09-17T00:39:59.954533Z	    _id,
2025-09-17T00:39:59.954648Z	    _type,
2025-09-17T00:39:59.954757Z	    partNumber,
2025-09-17T00:39:59.954855Z	    "slug": slug.current,
2025-09-17T00:39:59.954995Z	    title,
2025-09-17T00:39:59.955107Z	    shortDescription,
2025-09-17T00:39:59.955211Z	    image,
2025-09-17T00:39:59.955343Z	    brand->{
2025-09-17T00:39:59.955456Z	      name,
2025-09-17T00:39:59.955562Z	      "slug": slug.current,
2025-09-17T00:39:59.955668Z	      logo
2025-09-17T00:39:59.95577Z	    },
2025-09-17T00:39:59.956981Z	    category->{
2025-09-17T00:39:59.957195Z	      name,
2025-09-17T00:39:59.957616Z	      "slug": slug.current
2025-09-17T00:39:59.957927Z	    },
2025-09-17T00:39:59.95807Z	    pricing{
2025-09-17T00:39:59.958441Z	      currency,
2025-09-17T00:39:59.958725Z	      tiers[]{
2025-09-17T00:39:59.959053Z	        quantity,
2025-09-17T00:39:59.959202Z	        price,
2025-09-17T00:39:59.959342Z	        unit
2025-09-17T00:39:59.959457Z	      },
2025-09-17T00:39:59.959588Z	      moq,
2025-09-17T00:39:59.959727Z	      leadTime,
2025-09-17T00:39:59.959841Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:39:59.95995Z	      "price": tiers[0].price,
2025-09-17T00:39:59.960059Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:39:59.960167Z	    },
2025-09-17T00:39:59.960282Z	    inventory{
2025-09-17T00:39:59.960754Z	      quantity,
2025-09-17T00:39:59.960933Z	      status,
2025-09-17T00:39:59.96149Z	      warehouse,
2025-09-17T00:39:59.961646Z	      lastUpdated,
2025-09-17T00:39:59.961772Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:39:59.961876Z	      "inStock": status == "in_stock",
2025-09-17T00:39:59.962079Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:39:59.96221Z	    },
2025-09-17T00:39:59.962384Z	    isActive,
2025-09-17T00:39:59.962494Z	    isFeatured,
2025-09-17T00:39:59.962824Z	    isNew,
2025-09-17T00:39:59.967675Z	    _createdAt,
2025-09-17T00:39:59.967806Z	    _updatedAt
2025-09-17T00:39:59.967906Z	  
2025-09-17T00:39:59.968011Z	      },
2025-09-17T00:39:59.968136Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "mediatek"])
2025-09-17T00:39:59.96828Z	    }
2025-09-17T00:39:59.968399Z	  
2025-09-17T00:39:59.968508Z	Query parameters: {
2025-09-17T00:39:59.968618Z	  limit: 8,
2025-09-17T00:39:59.968741Z	  offset: 0,
2025-09-17T00:39:59.968854Z	  category: undefined,
2025-09-17T00:39:59.968963Z	  brand: 'mediatek',
2025-09-17T00:39:59.969068Z	  featured: undefined
2025-09-17T00:39:59.969165Z	}
2025-09-17T00:39:59.995071Z	Fetching solutions with query: 
2025-09-17T00:39:59.995334Z	    {
2025-09-17T00:39:59.995516Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")] | order(publishedAt desc) [0...4] {
2025-09-17T00:39:59.996038Z	        
2025-09-17T00:39:59.996282Z	    _id,
2025-09-17T00:39:59.996486Z	    title,
2025-09-17T00:39:59.996846Z	    "slug": slug.current,
2025-09-17T00:39:59.997313Z	    summary,
2025-09-17T00:39:59.997504Z	    description,
2025-09-17T00:39:59.997717Z	    coverImage,
2025-09-17T00:39:59.998046Z	    primaryBrand->{
2025-09-17T00:39:59.998179Z	      _id,
2025-09-17T00:39:59.998318Z	      name,
2025-09-17T00:39:59.998495Z	      "slug": slug.current,
2025-09-17T00:39:59.998714Z	      logo
2025-09-17T00:39:59.998876Z	    },
2025-09-17T00:39:59.999059Z	    relatedBrands[]->{
2025-09-17T00:39:59.99922Z	      _id,
2025-09-17T00:39:59.999354Z	      name,
2025-09-17T00:39:59.999464Z	      "slug": slug.current,
2025-09-17T00:39:59.999705Z	      logo
2025-09-17T00:40:00.000069Z	    },
2025-09-17T00:40:00.000431Z	    targetMarket,
2025-09-17T00:40:00.000609Z	    complexity,
2025-09-17T00:40:00.000737Z	    publishedAt,
2025-09-17T00:40:00.000903Z	    isPublished,
2025-09-17T00:40:00.001056Z	    isFeatured,
2025-09-17T00:40:00.001206Z	    viewCount,
2025-09-17T00:40:00.001373Z	    _createdAt,
2025-09-17T00:40:00.00158Z	    _updatedAt
2025-09-17T00:40:00.001757Z	  
2025-09-17T00:40:00.001879Z	      },
2025-09-17T00:40:00.002009Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("mediatek" in relatedBrands[]->slug.current || primaryBrand->slug.current == "mediatek")])
2025-09-17T00:40:00.002138Z	    }
2025-09-17T00:40:00.002258Z	  
2025-09-17T00:40:00.002712Z	Query parameters: {
2025-09-17T00:40:00.003324Z	  limit: 4,
2025-09-17T00:40:00.003484Z	  offset: 0,
2025-09-17T00:40:00.004023Z	  targetMarket: undefined,
2025-09-17T00:40:00.004212Z	  brand: 'mediatek',
2025-09-17T00:40:00.004447Z	  featured: undefined
2025-09-17T00:40:00.004572Z	}
2025-09-17T00:40:00.004694Z	✅ [getBrandData] Found brand: MediaTek
2025-09-17T00:40:00.00485Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:40:00.004986Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:40:00.005084Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-17T00:40:00.005263Z	Fetching products with query: 
2025-09-17T00:40:00.005457Z	    {
2025-09-17T00:40:00.005602Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:00.005726Z	        
2025-09-17T00:40:00.005825Z	    _id,
2025-09-17T00:40:00.006044Z	    _type,
2025-09-17T00:40:00.00617Z	    partNumber,
2025-09-17T00:40:00.006337Z	    "slug": slug.current,
2025-09-17T00:40:00.00644Z	    title,
2025-09-17T00:40:00.006573Z	    shortDescription,
2025-09-17T00:40:00.006754Z	    image,
2025-09-17T00:40:00.006863Z	    brand->{
2025-09-17T00:40:00.006953Z	      name,
2025-09-17T00:40:00.007053Z	      "slug": slug.current,
2025-09-17T00:40:00.007147Z	      logo
2025-09-17T00:40:00.007251Z	    },
2025-09-17T00:40:00.007366Z	    category->{
2025-09-17T00:40:00.007464Z	      name,
2025-09-17T00:40:00.007558Z	      "slug": slug.current
2025-09-17T00:40:00.00767Z	    },
2025-09-17T00:40:00.00776Z	    pricing{
2025-09-17T00:40:00.007842Z	      currency,
2025-09-17T00:40:00.007921Z	      tiers[]{
2025-09-17T00:40:00.008025Z	        quantity,
2025-09-17T00:40:00.008174Z	        price,
2025-09-17T00:40:00.008305Z	        unit
2025-09-17T00:40:00.008415Z	      },
2025-09-17T00:40:00.008682Z	      moq,
2025-09-17T00:40:00.008819Z	      leadTime,
2025-09-17T00:40:00.008935Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:00.009261Z	      "price": tiers[0].price,
2025-09-17T00:40:00.009486Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:00.009758Z	    },
2025-09-17T00:40:00.00997Z	    inventory{
2025-09-17T00:40:00.010069Z	      quantity,
2025-09-17T00:40:00.010316Z	      status,
2025-09-17T00:40:00.010557Z	      warehouse,
2025-09-17T00:40:00.010706Z	      lastUpdated,
2025-09-17T00:40:00.011116Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:00.011372Z	      "inStock": status == "in_stock",
2025-09-17T00:40:00.011578Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:00.011802Z	    },
2025-09-17T00:40:00.011941Z	    isActive,
2025-09-17T00:40:00.012083Z	    isFeatured,
2025-09-17T00:40:00.012215Z	    isNew,
2025-09-17T00:40:00.012343Z	    _createdAt,
2025-09-17T00:40:00.012555Z	    _updatedAt
2025-09-17T00:40:00.012698Z	  
2025-09-17T00:40:00.012841Z	      },
2025-09-17T00:40:00.013077Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-17T00:40:00.013225Z	    }
2025-09-17T00:40:00.013353Z	  
2025-09-17T00:40:00.013465Z	Query parameters: {
2025-09-17T00:40:00.013562Z	  limit: 8,
2025-09-17T00:40:00.013657Z	  offset: 0,
2025-09-17T00:40:00.01389Z	  category: undefined,
2025-09-17T00:40:00.014022Z	  brand: '英飞凌',
2025-09-17T00:40:00.01414Z	  featured: undefined
2025-09-17T00:40:00.014254Z	}
2025-09-17T00:40:00.014431Z	Fetching solutions with query: 
2025-09-17T00:40:00.014727Z	    {
2025-09-17T00:40:00.014875Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:00.014998Z	        
2025-09-17T00:40:00.015173Z	    _id,
2025-09-17T00:40:00.015514Z	    title,
2025-09-17T00:40:00.015884Z	    "slug": slug.current,
2025-09-17T00:40:00.016231Z	    summary,
2025-09-17T00:40:00.016437Z	    description,
2025-09-17T00:40:00.016601Z	    coverImage,
2025-09-17T00:40:00.016722Z	    primaryBrand->{
2025-09-17T00:40:00.017002Z	      _id,
2025-09-17T00:40:00.017158Z	      name,
2025-09-17T00:40:00.01746Z	      "slug": slug.current,
2025-09-17T00:40:00.017796Z	      logo
2025-09-17T00:40:00.01788Z	    },
2025-09-17T00:40:00.018351Z	    relatedBrands[]->{
2025-09-17T00:40:00.018435Z	      _id,
2025-09-17T00:40:00.018719Z	      name,
2025-09-17T00:40:00.018818Z	      "slug": slug.current,
2025-09-17T00:40:00.019114Z	      logo
2025-09-17T00:40:00.019199Z	    },
2025-09-17T00:40:00.019488Z	   ❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:40:00.01979Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:40:00.020059Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-17T00:40:00.020413Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:40:00.02054Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424)
2025-09-17T00:40:00.020943Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-17T00:40:00.021143Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:40:00.021807Z	}
2025-09-17T00:40:00.021943Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:40:00.022338Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:40:00.022438Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-17T00:40:00.022554Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:40:00.022677Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424)
2025-09-17T00:40:00.022767Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-17T00:40:00.022914Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:40:00.023029Z	}
2025-09-17T00:40:00.023161Z	 targetMarket,
2025-09-17T00:40:00.023372Z	    complexity,
2025-09-17T00:40:00.023711Z	    publishedAt,
2025-09-17T00:40:00.024067Z	    isPublished,
2025-09-17T00:40:00.024201Z	    isFeatured,
2025-09-17T00:40:00.024393Z	    viewCount,
2025-09-17T00:40:00.024525Z	    _createdAt,
2025-09-17T00:40:00.024758Z	    _updatedAt
2025-09-17T00:40:00.0249Z	  
2025-09-17T00:40:00.025078Z	      },
2025-09-17T00:40:00.025169Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-17T00:40:00.025313Z	    }
2025-09-17T00:40:00.025404Z	  
2025-09-17T00:40:00.025514Z	Query parameters: {
2025-09-17T00:40:00.025695Z	  limit: 4,
2025-09-17T00:40:00.025809Z	  offset: 0,
2025-09-17T00:40:00.025968Z	  targetMarket: undefined,
2025-09-17T00:40:00.026144Z	  brand: '英飞凌',
2025-09-17T00:40:00.026307Z	  featured: undefined
2025-09-17T00:40:00.026457Z	}
2025-09-17T00:40:00.026589Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-17T00:40:00.026744Z	Fetching products with query: 
2025-09-17T00:40:00.026886Z	    {
2025-09-17T00:40:00.02702Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:00.027162Z	        
2025-09-17T00:40:00.027331Z	    _id,
2025-09-17T00:40:00.027462Z	    _type,
2025-09-17T00:40:00.027615Z	    partNumber,
2025-09-17T00:40:00.027767Z	    "slug": slug.current,
2025-09-17T00:40:00.027872Z	    title,
2025-09-17T00:40:00.028036Z	    shortDescription,
2025-09-17T00:40:00.028154Z	    image,
2025-09-17T00:40:00.028276Z	    brand->{
2025-09-17T00:40:00.02838Z	      name,
2025-09-17T00:40:00.028472Z	      "slug": slug.current,
2025-09-17T00:40:00.028588Z	      logo
2025-09-17T00:40:00.028748Z	    },
2025-09-17T00:40:00.02885Z	    category->{
2025-09-17T00:40:00.029001Z	      name,
2025-09-17T00:40:00.029221Z	      "slug": slug.current
2025-09-17T00:40:00.0294Z	    },
2025-09-17T00:40:00.029668Z	    pricing{
2025-09-17T00:40:00.029846Z	      currency,
2025-09-17T00:40:00.029986Z	      tiers[]{
2025-09-17T00:40:00.030168Z	        quantity,
2025-09-17T00:40:00.03025Z	        price,
2025-09-17T00:40:00.030424Z	        unit
2025-09-17T00:40:00.030518Z	      },
2025-09-17T00:40:00.030585Z	      moq,
2025-09-17T00:40:00.030643Z	      leadTime,
2025-09-17T00:40:00.030718Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:00.030777Z	      "price": tiers[0].price,
2025-09-17T00:40:00.030836Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:00.030891Z	    },
2025-09-17T00:40:00.030949Z	    inventory{
2025-09-17T00:40:00.031003Z	      quantity,
2025-09-17T00:40:00.031057Z	      status,
2025-09-17T00:40:00.03111Z	      warehouse,
2025-09-17T00:40:00.031162Z	      lastUpdated,
2025-09-17T00:40:00.031216Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:00.031304Z	      "inStock": status == "in_stock",
2025-09-17T00:40:00.031399Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:00.031465Z	    },
2025-09-17T00:40:00.03152Z	    isActive,
2025-09-17T00:40:00.031573Z	    isFeatured,
2025-09-17T00:40:00.031626Z	    isNew,
2025-09-17T00:40:00.031685Z	    _createdAt,
2025-09-17T00:40:00.031738Z	    _updatedAt
2025-09-17T00:40:00.031804Z	  
2025-09-17T00:40:00.031857Z	      },
2025-09-17T00:40:00.031916Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-17T00:40:00.03198Z	    }
2025-09-17T00:40:00.032035Z	  
2025-09-17T00:40:00.032132Z	Query parameters: {
2025-09-17T00:40:00.032252Z	  limit: 8,
2025-09-17T00:40:00.03236Z	  offset: 0,
2025-09-17T00:40:00.032417Z	  category: undefined,
2025-09-17T00:40:00.032472Z	  brand: '英飞凌',
2025-09-17T00:40:00.032539Z	  featured: undefined
2025-09-17T00:40:00.032634Z	}
2025-09-17T00:40:00.032738Z	Fetching solutions with query: 
2025-09-17T00:40:00.032871Z	    {
2025-09-17T00:40:00.032991Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:00.033132Z	        
2025-09-17T00:40:00.033277Z	    _id,
2025-09-17T00:40:00.033434Z	    title,
2025-09-17T00:40:00.033579Z	    "slug": slug.current,
2025-09-17T00:40:00.033737Z	    summary,
2025-09-17T00:40:00.033877Z	    description,
2025-09-17T00:40:00.034031Z	    coverImage,
2025-09-17T00:40:00.034169Z	    primaryBrand->{
2025-09-17T00:40:00.034361Z	      _id,
2025-09-17T00:40:00.034523Z	      name,
2025-09-17T00:40:00.03466Z	      "slug": slug.current,
2025-09-17T00:40:00.034806Z	      logo
2025-09-17T00:40:00.034958Z	    },
2025-09-17T00:40:00.035104Z	    relatedBrands[]->{
2025-09-17T00:40:00.03522Z	      _id,
2025-09-17T00:40:00.035359Z	      name,
2025-09-17T00:40:00.035489Z	      "slug": slug.current,
2025-09-17T00:40:00.03558Z	      logo
2025-09-17T00:40:00.035677Z	    },
2025-09-17T00:40:00.035764Z	    targetMarket,
2025-09-17T00:40:00.035887Z	    complexity,
2025-09-17T00:40:00.036027Z	    publishedAt,
2025-09-17T00:40:00.036153Z	    isPublished,
2025-09-17T00:40:00.036281Z	    isFeatured,
2025-09-17T00:40:00.036389Z	    viewCount,
2025-09-17T00:40:00.036494Z	    _createdAt,
2025-09-17T00:40:00.036589Z	    _updatedAt
2025-09-17T00:40:00.036701Z	  
2025-09-17T00:40:00.036856Z	      },
2025-09-17T00:40:00.03695Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-17T00:40:00.037051Z	    }
2025-09-17T00:40:00.037151Z	  
2025-09-17T00:40:00.037242Z	Query parameters: {
2025-09-17T00:40:00.037352Z	  limit: 4,
2025-09-17T00:40:00.037441Z	  offset: 0,
2025-09-17T00:40:00.037543Z	  targetMarket: undefined,
2025-09-17T00:40:00.037632Z	  brand: '英飞凌',
2025-09-17T00:40:00.037741Z	  featured: undefined
2025-09-17T00:40:00.037844Z	}
2025-09-17T00:40:00.03794Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-17T00:40:00.038039Z	✅ [getBrandData] Found brand: 英飞凌
2025-09-17T00:40:00.038131Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:40:00.038284Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:40:00.038408Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:40:00.038528Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:40:00.03864Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-17T00:40:00.038762Z	Fetching products with query: 
2025-09-17T00:40:00.038857Z	    {
2025-09-17T00:40:00.038949Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:00.039045Z	        
2025-09-17T00:40:00.039135Z	    _id,
2025-09-17T00:40:00.039223Z	    _type,
2025-09-17T00:40:00.039518Z	    partNumber,
2025-09-17T00:40:00.039736Z	    "slug": slug.current,
2025-09-17T00:40:00.040022Z	    title,
2025-09-17T00:40:00.040242Z	    shortDescription,
2025-09-17T00:40:00.040422Z	    image,
2025-09-17T00:40:00.040579Z	    brand->{
2025-09-17T00:40:00.040738Z	      name,
2025-09-17T00:40:00.040992Z	      "slug": slug.current,
2025-09-17T00:40:00.041308Z	      logo
2025-09-17T00:40:00.041486Z	    },
2025-09-17T00:40:00.041708Z	    category->{
2025-09-17T00:40:00.042238Z	      name,
2025-09-17T00:40:00.042524Z	      "slug": slug.current
2025-09-17T00:40:00.044316Z	    },
2025-09-17T00:40:00.044467Z	    pricing{
2025-09-17T00:40:00.046652Z	      currency,
2025-09-17T00:40:00.046817Z	      tiers[]{
2025-09-17T00:40:00.047065Z	        quantity,
2025-09-17T00:40:00.047685Z	        price,
2025-09-17T00:40:00.047884Z	        unit
2025-09-17T00:40:00.048023Z	      },
2025-09-17T00:40:00.048599Z	      moq,
2025-09-17T00:40:00.048712Z	      leadTime,
2025-09-17T00:40:00.049167Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:00.049324Z	      "price": tiers[0].price,
2025-09-17T00:40:00.049461Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:00.049582Z	    },
2025-09-17T00:40:00.049677Z	    inventory{
2025-09-17T00:40:00.091973Z	      quantity,
2025-09-17T00:40:00.092222Z	      status,
2025-09-17T00:40:00.09246Z	      warehouse,
2025-09-17T00:40:00.092836Z	      lastUpdated,
2025-09-17T00:40:00.092985Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:00.093762Z	      "inStock": status == "in_stock",
2025-09-17T00:40:00.094041Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:00.094301Z	    },
2025-09-17T00:40:00.094496Z	    isActive,
2025-09-17T00:40:00.094653Z	    isFeatured,
2025-09-17T00:40:00.09776Z	    isNew,
2025-09-17T00:40:00.097943Z	    _createdAt,
2025-09-17T00:40:00.098068Z	    _updatedAt
2025-09-17T00:40:00.098165Z	  
2025-09-17T00:40:00.098286Z	      },
2025-09-17T00:40:00.098402Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-17T00:40:00.09855Z	    }
2025-09-17T00:40:00.098985Z	  
2025-09-17T00:40:00.099145Z	Query parameters: {
2025-09-17T00:40:00.099657Z	  limit: 8,
2025-09-17T00:40:00.099793Z	  offset: 0,
2025-09-17T00:40:00.099895Z	  category: undefined,
2025-09-17T00:40:00.099993Z	  brand: 'pi',
2025-09-17T00:40:00.100098Z	  featured: undefined
2025-09-17T00:40:00.100192Z	}
2025-09-17T00:40:00.100314Z	Fetching solutions with query: 
2025-09-17T00:40:00.10044Z	    {
2025-09-17T00:40:00.100537Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:00.100623Z	        
2025-09-17T00:40:00.100713Z	    _id,
2025-09-17T00:40:00.100806Z	    title,
2025-09-17T00:40:00.100903Z	    "slug": slug.current,
2025-09-17T00:40:00.10101Z	    summary,
2025-09-17T00:40:00.101121Z	    description,
2025-09-17T00:40:00.10123Z	    coverImage,
2025-09-17T00:40:00.101382Z	    primaryBrand->{
2025-09-17T00:40:00.101502Z	      _id,
2025-09-17T00:40:00.101604Z	      name,
2025-09-17T00:40:00.1017Z	      "slug": slug.current,
2025-09-17T00:40:00.103123Z	      logo
2025-09-17T00:40:00.103315Z	    },
2025-09-17T00:40:00.10343Z	    relatedBrands[]->{
2025-09-17T00:40:00.103526Z	      _id,
2025-09-17T00:40:00.103621Z	      name,
2025-09-17T00:40:00.103713Z	      "slug": slug.current,
2025-09-17T00:40:00.1038Z	      logo
2025-09-17T00:40:00.103885Z	    },
2025-09-17T00:40:00.103983Z	    targetMarket,
2025-09-17T00:40:00.10407Z	    complexity,
2025-09-17T00:40:00.104159Z	    publishedAt,
2025-09-17T00:40:00.104244Z	    isPublished,
2025-09-17T00:40:00.10435Z	    isFeatured,
2025-09-17T00:40:00.10444Z	    viewCount,
2025-09-17T00:40:00.104535Z	    _createdAt,
2025-09-17T00:40:00.10464Z	    _updatedAt
2025-09-17T00:40:00.104739Z	  
2025-09-17T00:40:00.104829Z	      },
2025-09-17T00:40:00.104924Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-17T00:40:00.105022Z	    }
2025-09-17T00:40:00.105112Z	  
2025-09-17T00:40:00.105202Z	Query parameters: {
2025-09-17T00:40:00.105313Z	  limit: 4,
2025-09-17T00:40:00.105417Z	  offset: 0,
2025-09-17T00:40:00.105524Z	  targetMarket: undefined,
2025-09-17T00:40:00.105625Z	  brand: 'pi',
2025-09-17T00:40:00.105854Z	  featured: undefined
2025-09-17T00:40:00.106031Z	}
2025-09-17T00:40:00.106155Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-17T00:40:00.106289Z	Fetching products with query: 
2025-09-17T00:40:00.1064Z	    {
2025-09-17T00:40:00.106493Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:00.106585Z	        
2025-09-17T00:40:00.106675Z	    _id,
2025-09-17T00:40:00.10677Z	    _type,
2025-09-17T00:40:00.10686Z	    partNumber,
2025-09-17T00:40:00.106949Z	    "slug": slug.current,
2025-09-17T00:40:00.107051Z	    title,
2025-09-17T00:40:00.107148Z	    shortDescription,
2025-09-17T00:40:00.10724Z	    image,
2025-09-17T00:40:00.107359Z	    brand->{
2025-09-17T00:40:00.107451Z	      name,
2025-09-17T00:40:00.107535Z	      "slug": slug.current,
2025-09-17T00:40:00.107625Z	      logo
2025-09-17T00:40:00.10772Z	    },
2025-09-17T00:40:00.107824Z	    category->{
2025-09-17T00:40:00.10793Z	      name,
2025-09-17T00:40:00.108043Z	      "slug": slug.current
2025-09-17T00:40:00.108145Z	    },
2025-09-17T00:40:00.108457Z	    pricing{
2025-09-17T00:40:00.108613Z	      currency,
2025-09-17T00:40:00.108711Z	      tiers[]{
2025-09-17T00:40:00.108803Z	        quantity,
2025-09-17T00:40:00.108929Z	        price,
2025-09-17T00:40:00.109302Z	        unit
2025-09-17T00:40:00.109526Z	      },
2025-09-17T00:40:00.109666Z	      moq,
2025-09-17T00:40:00.110048Z	      leadTime,
2025-09-17T00:40:00.110363Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:00.110793Z	      "price": tiers[0].price,
2025-09-17T00:40:00.11136Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:00.11148Z	    },
2025-09-17T00:40:00.111578Z	    inventory{
2025-09-17T00:40:00.111677Z	      quantity,
2025-09-17T00:40:00.111777Z	      status,
2025-09-17T00:40:00.111873Z	      warehouse,
2025-09-17T00:40:00.111976Z	      lastUpdated,
2025-09-17T00:40:00.112092Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:00.116654Z	      "inStock": status == "in_stock",
2025-09-17T00:40:00.117155Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:00.117318Z	    },
2025-09-17T00:40:00.117565Z	    isActive,
2025-09-17T00:40:00.117808Z	    isFeatured,
2025-09-17T00:40:00.118347Z	    isNew,
2025-09-17T00:40:00.118718Z	    _createdAt,
2025-09-17T00:40:00.119297Z	    _updatedAt
2025-09-17T00:40:00.119862Z	  
2025-09-17T00:40:00.120481Z	      },
2025-09-17T00:40:00.121128Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-17T00:40:00.121838Z	    }
2025-09-17T00:40:00.123Z	  
2025-09-17T00:40:00.123205Z	Query parameters: {
2025-09-17T00:40:00.123442Z	  limit: 8,
2025-09-17T00:40:00.123599Z	  offset: 0,
2025-09-17T00:40:00.123727Z	  category: undefined,
2025-09-17T00:40:00.123913Z	  brand: 'pi',
2025-09-17T00:40:00.124046Z	  featured: undefined
2025-09-17T00:40:00.124153Z	}
2025-09-17T00:40:00.124262Z	Fetching solutions with query: 
2025-09-17T00:40:00.124512Z	    {
2025-09-17T00:40:00.124751Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:00.125076Z	        
2025-09-17T00:40:00.125226Z	    _id,
2025-09-17T00:40:00.125346Z	    title,
2025-09-17T00:40:00.125444Z	    "slug": slug.current,
2025-09-17T00:40:00.12554Z	    summary,
2025-09-17T00:40:00.125624Z	    description,
2025-09-17T00:40:00.125712Z	    coverImage,
2025-09-17T00:40:00.125805Z	    primaryBrand->{
2025-09-17T00:40:00.125894Z	      _id,
2025-09-17T00:40:00.125994Z	      name,
2025-09-17T00:40:00.126087Z	      "slug": slug.current,
2025-09-17T00:40:00.126179Z	      logo
2025-09-17T00:40:00.126283Z	    },
2025-09-17T00:40:00.126386Z	    relatedBrands[]->{
2025-09-17T00:40:00.126491Z	      _id,
2025-09-17T00:40:00.126583Z	      name,
2025-09-17T00:40:00.126682Z	      "slug": slug.current,
2025-09-17T00:40:00.126771Z	      logo
2025-09-17T00:40:00.126854Z	    },
2025-09-17T00:40:00.126976Z	    targetMarket,
2025-09-17T00:40:00.127356Z	    complexity,
2025-09-17T00:40:00.127527Z	    publishedAt,
2025-09-17T00:40:00.127701Z	    isPublished,
2025-09-17T00:40:00.128649Z	    isFeatured,
2025-09-17T00:40:00.128867Z	    viewCount,
2025-09-17T00:40:00.129199Z	    _createdAt,
2025-09-17T00:40:00.129364Z	    _updatedAt
2025-09-17T00:40:00.129618Z	  
2025-09-17T00:40:00.13094Z	      },
2025-09-17T00:40:00.131192Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-17T00:40:00.131462Z	    }
2025-09-17T00:40:00.131635Z	  
2025-09-17T00:40:00.131962Z	Query parameters: {
2025-09-17T00:40:00.132181Z	  limit: 4,
2025-09-17T00:40:00.13247Z	  offset: 0,
2025-09-17T00:40:00.132772Z	  targetMarket: undefined,
2025-09-17T00:40:00.133125Z	  brand: 'pi',
2025-09-17T00:40:00.133448Z	  featured: undefined
2025-09-17T00:40:00.133812Z	}
2025-09-17T00:40:00.133929Z	✅ [getBrandData] Found brand: PI
2025-09-17T00:40:00.134246Z	✅ [getBrandData] Found brand: PI
2025-09-17T00:40:00.134353Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:40:00.134441Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:40:00.134821Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:40:00.135202Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:40:00.135401Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-17T00:40:00.135752Z	Fetching products with query: 
2025-09-17T00:40:00.135883Z	    {
2025-09-17T00:40:00.13599Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:00.136228Z	        
2025-09-17T00:40:00.136371Z	    _id,
2025-09-17T00:40:00.136483Z	    _type,
2025-09-17T00:40:00.136586Z	    partNumber,
2025-09-17T00:40:00.136688Z	    "slug": slug.current,
2025-09-17T00:40:00.13679Z	    title,
2025-09-17T00:40:00.136893Z	    shortDescription,
2025-09-17T00:40:00.137003Z	    image,
2025-09-17T00:40:00.137099Z	    brand->{
2025-09-17T00:40:00.137189Z	      name,
2025-09-17T00:40:00.187495Z	      "slug": slug.current,
2025-09-17T00:40:00.188324Z	      logo
2025-09-17T00:40:00.188514Z	    },
2025-09-17T00:40:00.188726Z	    category->{
2025-09-17T00:40:00.1889Z	      name,
2025-09-17T00:40:00.189045Z	      "slug": slug.current
2025-09-17T00:40:00.18918Z	    },
2025-09-17T00:40:00.189335Z	    pricing{
2025-09-17T00:40:00.189462Z	      currency,
2025-09-17T00:40:00.189604Z	      tiers[]{
2025-09-17T00:40:00.189785Z	        quantity,
2025-09-17T00:40:00.189934Z	        price,
2025-09-17T00:40:00.190257Z	        unit
2025-09-17T00:40:00.19086Z	      },
2025-09-17T00:40:00.191026Z	      moq,
2025-09-17T00:40:00.19193Z	      leadTime,
2025-09-17T00:40:00.192275Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:00.192518Z	      "price": tiers[0].price,
2025-09-17T00:40:00.192715Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:00.192867Z	    },
2025-09-17T00:40:00.193022Z	    inventory{
2025-09-17T00:40:00.193165Z	      quantity,
2025-09-17T00:40:00.193374Z	      status,
2025-09-17T00:40:00.193514Z	      warehouse,
2025-09-17T00:40:00.19365Z	      lastUpdated,
2025-09-17T00:40:00.193916Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:00.194108Z	      "inStock": status == "in_stock",
2025-09-17T00:40:00.194245Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:00.194416Z	    },
2025-09-17T00:40:00.19454Z	    isActive,
2025-09-17T00:40:00.194689Z	    isFeatured,
2025-09-17T00:40:00.194827Z	    isNew,
2025-09-17T00:40:00.194933Z	    _createdAt,
2025-09-17T00:40:00.195103Z	    _updatedAt
2025-09-17T00:40:00.195298Z	  
2025-09-17T00:40:00.195388Z	      },
2025-09-17T00:40:00.195464Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-17T00:40:00.195582Z	    }
2025-09-17T00:40:00.195689Z	  
2025-09-17T00:40:00.195801Z	Query parameters: {
2025-09-17T00:40:00.196034Z	  limit: 8,
2025-09-17T00:40:00.196657Z	  offset: 0,
2025-09-17T00:40:00.196814Z	  category: undefined,
2025-09-17T00:40:00.196935Z	  brand: 'Electronicon',
2025-09-17T00:40:00.197057Z	  featured: undefined
2025-09-17T00:40:00.197187Z	}
2025-09-17T00:40:00.1977Z	Fetching solutions with query: 
2025-09-17T00:40:00.197826Z	    {
2025-09-17T00:40:00.197933Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:00.19805Z	        
2025-09-17T00:40:00.198163Z	    _id,
2025-09-17T00:40:00.19828Z	    title,
2025-09-17T00:40:00.1984Z	    "slug": slug.current,
2025-09-17T00:40:00.198514Z	    summary,
2025-09-17T00:40:00.198623Z	    description,
2025-09-17T00:40:00.19874Z	    coverImage,
2025-09-17T00:40:00.198852Z	    primaryBrand->{
2025-09-17T00:40:00.19896Z	      _id,
2025-09-17T00:40:00.199067Z	      name,
2025-09-17T00:40:00.199194Z	      "slug": slug.current,
2025-09-17T00:40:00.199316Z	      logo
2025-09-17T00:40:00.199422Z	    },
2025-09-17T00:40:00.199545Z	    relatedBrands[]->{
2025-09-17T00:40:00.199974Z	      _id,
2025-09-17T00:40:00.200294Z	      name,
2025-09-17T00:40:00.200457Z	      "slug": slug.current,
2025-09-17T00:40:00.200574Z	      logo
2025-09-17T00:40:00.200707Z	    },
2025-09-17T00:40:00.200994Z	    targetMarket,
2025-09-17T00:40:00.201155Z	    complexity,
2025-09-17T00:40:00.201285Z	    publishedAt,
2025-09-17T00:40:00.201411Z	    isPublished,
2025-09-17T00:40:00.201525Z	    isFeatured,
2025-09-17T00:40:00.201631Z	    viewCount,
2025-09-17T00:40:00.20174Z	    _createdAt,
2025-09-17T00:40:00.201845Z	    _updatedAt
2025-09-17T00:40:00.203224Z	  
2025-09-17T00:40:00.203421Z	      },
2025-09-17T00:40:00.203536Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-17T00:40:00.203646Z	    }
2025-09-17T00:40:00.203758Z	  
2025-09-17T00:40:00.203874Z	Query parameters: {
2025-09-17T00:40:00.203984Z	  limit: 4,
2025-09-17T00:40:00.204087Z	  offset: 0,
2025-09-17T00:40:00.204192Z	  targetMarket: undefined,
2025-09-17T00:40:00.204323Z	  brand: 'Electronicon',
2025-09-17T00:40:00.204445Z	  featured: undefined
2025-09-17T00:40:00.204556Z	}
2025-09-17T00:40:00.204679Z	✅ [getBrandData] Found brand: Electronicon
2025-09-17T00:40:00.204815Z	Products fetch result: {
2025-09-17T00:40:00.204935Z	  totalProducts: 2,
2025-09-17T00:40:00.205042Z	  fetchedProducts: 2,
2025-09-17T00:40:00.205147Z	  firstProduct: {
2025-09-17T00:40:00.205279Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-17T00:40:00.205401Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-17T00:40:00.205513Z	    _type: 'product',
2025-09-17T00:40:00.205619Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-17T00:40:00.205724Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-17T00:40:00.205848Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-17T00:40:00.205964Z	    image: null,
2025-09-17T00:40:00.206071Z	    inventory: {
2025-09-17T00:40:00.206175Z	      inStock: true,
2025-09-17T00:40:00.206763Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-17T00:40:00.208284Z	      quantity: 0,
2025-09-17T00:40:00.209991Z	      status: 'in_stock',
2025-09-17T00:40:00.210336Z	      warehouse: null
2025-09-17T00:40:00.210624Z	    },
2025-09-17T00:40:00.210776Z	    isActive: true,
2025-09-17T00:40:00.210955Z	    isFeatured: false,
2025-09-17T00:40:00.211089Z	    isNew: false,
2025-09-17T00:40:00.211275Z	    partNumber: '99999',
2025-09-17T00:40:00.211445Z	    pricing: {
2025-09-17T00:40:00.211624Z	      currency: 'CNY',
2025-09-17T00:40:00.211776Z	      leadTime: null,
2025-09-17T00:40:00.211932Z	      moq: null,
2025-09-17T00:40:00.212078Z	      price: null,
2025-09-17T00:40:00.212209Z	      tiers: null
2025-09-17T00:40:00.212466Z	    },
2025-09-17T00:40:00.213144Z	    shortDescription: null,
2025-09-17T00:40:00.21363Z	    slug: '99999',
2025-09-17T00:40:00.213803Z	    title: '99999'
2025-09-17T00:40:00.214428Z	  }
2025-09-17T00:40:00.214593Z	}
2025-09-17T00:40:00.214788Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:40:00.215196Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-17T00:40:00.215707Z	Fetching products with query: 
2025-09-17T00:40:00.215861Z	    {
2025-09-17T00:40:00.216077Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:00.216381Z	        
2025-09-17T00:40:00.216652Z	    _id,
2025-09-17T00:40:00.216984Z	    _type,
2025-09-17T00:40:00.217199Z	    partNumber,
2025-09-17T00:40:00.219126Z	    "slug": slug.current,
2025-09-17T00:40:00.219295Z	    title,
2025-09-17T00:40:00.219421Z	    shortDescription,
2025-09-17T00:40:00.219905Z	    image,
2025-09-17T00:40:00.220039Z	    brand->{
2025-09-17T00:40:00.220139Z	      name,
2025-09-17T00:40:00.22023Z	      "slug": slug.current,
2025-09-17T00:40:00.220371Z	      logo
2025-09-17T00:40:00.220669Z	    },
2025-09-17T00:40:00.220805Z	    category->{
2025-09-17T00:40:00.220931Z	      name,
2025-09-17T00:40:00.22108Z	      "slug": slug.current
2025-09-17T00:40:00.221251Z	    },
2025-09-17T00:40:00.221847Z	    pricing{
2025-09-17T00:40:00.223655Z	      currency,
2025-09-17T00:40:00.224065Z	      tiers[]{
2025-09-17T00:40:00.224208Z	        quantity,
2025-09-17T00:40:00.224486Z	        price,
2025-09-17T00:40:00.224737Z	        unit
2025-09-17T00:40:00.22493Z	      },
2025-09-17T00:40:00.22525Z	      moq,
2025-09-17T00:40:00.225393Z	      leadTime,
2025-09-17T00:40:00.225501Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:00.225608Z	      "price": tiers[0].price,
2025-09-17T00:40:00.225698Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:00.225789Z	    },
2025-09-17T00:40:00.225889Z	    inventory{
2025-09-17T00:40:00.226185Z	      quantity,
2025-09-17T00:40:00.226486Z	      status,
2025-09-17T00:40:00.226724Z	      warehouse,
2025-09-17T00:40:00.226961Z	      lastUpdated,
2025-09-17T00:40:00.227214Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:00.227489Z	      "inStock": status == "in_stock",
2025-09-17T00:40:00.227743Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:00.228028Z	    },
2025-09-17T00:40:00.228203Z	    isActive,
2025-09-17T00:40:00.228782Z	    isFeatured,
2025-09-17T00:40:00.229402Z	    isNew,
2025-09-17T00:40:00.229638Z	    _createdAt,
2025-09-17T00:40:00.229811Z	    _updatedAt
2025-09-17T00:40:00.230034Z	  
2025-09-17T00:40:00.230255Z	      },
2025-09-17T00:40:00.230499Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-17T00:40:00.230632Z	    }
2025-09-17T00:40:00.230752Z	  
2025-09-17T00:40:00.230881Z	Query parameters: {
2025-09-17T00:40:00.230981Z	  limit: 8,
2025-09-17T00:40:00.231078Z	  offset: 0,
2025-09-17T00:40:00.231176Z	  category: undefined,
2025-09-17T00:40:00.231367Z	  brand: 'Electronicon',
2025-09-17T00:40:00.231599Z	  featured: undefined
2025-09-17T00:40:00.231859Z	}
2025-09-17T00:40:00.232039Z	Fetching solutions with query: 
2025-09-17T00:40:00.232249Z	    {
2025-09-17T00:40:00.232433Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:00.232596Z	        
2025-09-17T00:40:00.232856Z	    _id,
2025-09-17T00:40:00.233176Z	    title,
2025-09-17T00:40:00.233476Z	    "slug": slug.current,
2025-09-17T00:40:00.233604Z	    summary,
2025-09-17T00:40:00.233958Z	    description,
2025-09-17T00:40:00.234213Z	    coverImage,
2025-09-17T00:40:00.234334Z	    primaryBrand->{
2025-09-17T00:40:00.234428Z	      _id,
2025-09-17T00:40:00.234514Z	      name,
2025-09-17T00:40:00.234594Z	      "slug": slug.current,
2025-09-17T00:40:00.234925Z	      logo
2025-09-17T00:40:00.235032Z	    },
2025-09-17T00:40:00.235156Z	    relatedBrands[]->{
2025-09-17T00:40:00.236013Z	      _id,
2025-09-17T00:40:00.236152Z	      name,
2025-09-17T00:40:00.236263Z	      "slug": slug.current,
2025-09-17T00:40:00.236706Z	      logo
2025-09-17T00:40:00.236826Z	    },
2025-09-17T00:40:00.236935Z	    targetMarket,
2025-09-17T00:40:00.237042Z	    complexity,
2025-09-17T00:40:00.237156Z	    publishedAt,
2025-09-17T00:40:00.237282Z	    isPublished,
2025-09-17T00:40:00.237388Z	    isFeatured,
2025-09-17T00:40:00.237487Z	    viewCount,
2025-09-17T00:40:00.237586Z	    _createdAt,
2025-09-17T00:40:00.237698Z	    _updatedAt
2025-09-17T00:40:00.237792Z	  
2025-09-17T00:40:00.237898Z	      },
2025-09-17T00:40:00.238012Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-17T00:40:00.238129Z	    }
2025-09-17T00:40:00.238242Z	  
2025-09-17T00:40:00.238367Z	Query parameters: {
2025-09-17T00:40:00.23847Z	  limit: 4,
2025-09-17T00:40:00.238575Z	  offset: 0,
2025-09-17T00:40:00.238679Z	  targetMarket: undefined,
2025-09-17T00:40:00.238779Z	  brand: 'Electronicon',
2025-09-17T00:40:00.238871Z	  featured: undefined
2025-09-17T00:40:00.238968Z	}
2025-09-17T00:40:00.239093Z	✅ [getBrandData] Found brand: Electronicon
2025-09-17T00:40:00.239203Z	Products fetch result: {
2025-09-17T00:40:00.239322Z	  totalProducts: 2,
2025-09-17T00:40:00.239434Z	  fetchedProducts: 2,
2025-09-17T00:40:00.239539Z	  firstProduct: {
2025-09-17T00:40:00.239644Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-17T00:40:00.239747Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-17T00:40:00.239861Z	    _type: 'product',
2025-09-17T00:40:00.239982Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-17T00:40:00.240098Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-17T00:40:00.240214Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-17T00:40:00.240344Z	    image: null,
2025-09-17T00:40:00.240451Z	    inventory: {
2025-09-17T00:40:00.240556Z	      inStock: true,
2025-09-17T00:40:00.240659Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-17T00:40:00.240761Z	      quantity: 0,
2025-09-17T00:40:00.240864Z	      status: 'in_stock',
2025-09-17T00:40:00.240965Z	      warehouse: null
2025-09-17T00:40:00.241076Z	    },
2025-09-17T00:40:00.241175Z	    isActive: true,
2025-09-17T00:40:00.241292Z	    isFeatured: false,
2025-09-17T00:40:00.241404Z	    isNew: false,
2025-09-17T00:40:00.241511Z	    partNumber: '99999',
2025-09-17T00:40:00.241615Z	    pricing: {
2025-09-17T00:40:00.241718Z	      currency: 'CNY',
2025-09-17T00:40:00.24182Z	      leadTime: null,
2025-09-17T00:40:00.241922Z	      moq: null,
2025-09-17T00:40:00.242039Z	      price: null,
2025-09-17T00:40:00.242154Z	      tiers: null
2025-09-17T00:40:00.24225Z	    },
2025-09-17T00:40:00.242365Z	    shortDescription: null,
2025-09-17T00:40:00.242426Z	    slug: '99999',
2025-09-17T00:40:00.242488Z	    title: '99999'
2025-09-17T00:40:00.242623Z	  }
2025-09-17T00:40:00.242728Z	}
2025-09-17T00:40:00.242791Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:40:00.24285Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-17T00:40:00.242907Z	Fetching products with query: 
2025-09-17T00:40:00.242961Z	    {
2025-09-17T00:40:00.24302Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:00.243076Z	        
2025-09-17T00:40:00.24313Z	    _id,
2025-09-17T00:40:00.243184Z	    _type,
2025-09-17T00:40:00.243394Z	    partNumber,
2025-09-17T00:40:00.243485Z	    "slug": slug.current,
2025-09-17T00:40:00.243544Z	    title,
2025-09-17T00:40:00.243598Z	    shortDescription,
2025-09-17T00:40:00.243651Z	    image,
2025-09-17T00:40:00.243706Z	    brand->{
2025-09-17T00:40:00.243814Z	      name,
2025-09-17T00:40:00.243879Z	      "slug": slug.current,
2025-09-17T00:40:00.243984Z	      logo
2025-09-17T00:40:00.244049Z	    },
2025-09-17T00:40:00.244103Z	    category->{
2025-09-17T00:40:00.244158Z	      name,
2025-09-17T00:40:00.244218Z	      "slug": slug.current
2025-09-17T00:40:00.244288Z	    },
2025-09-17T00:40:00.244359Z	    pricing{
2025-09-17T00:40:00.244414Z	      currency,
2025-09-17T00:40:00.244467Z	      tiers[]{
2025-09-17T00:40:00.244673Z	        quantity,
2025-09-17T00:40:00.244783Z	        price,
2025-09-17T00:40:00.244893Z	        unit
2025-09-17T00:40:00.244968Z	      },
2025-09-17T00:40:00.245097Z	      moq,
2025-09-17T00:40:00.245205Z	      leadTime,
2025-09-17T00:40:00.245316Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:00.245502Z	      "price": tiers[0].price,
2025-09-17T00:40:00.245626Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:00.245688Z	    },
2025-09-17T00:40:00.245743Z	    inventory{
2025-09-17T00:40:00.2458Z	      quantity,
2025-09-17T00:40:00.245866Z	      status,
2025-09-17T00:40:00.245935Z	      warehouse,
2025-09-17T00:40:00.245988Z	      lastUpdated,
2025-09-17T00:40:00.246056Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:00.246113Z	      "inStock": status == "in_stock",
2025-09-17T00:40:00.24617Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:00.246225Z	    },
2025-09-17T00:40:00.246302Z	    isActive,
2025-09-17T00:40:00.246363Z	    isFeatured,
2025-09-17T00:40:00.246416Z	    isNew,
2025-09-17T00:40:00.246468Z	    _createdAt,
2025-09-17T00:40:00.24652Z	    _updatedAt
2025-09-17T00:40:00.246575Z	  
2025-09-17T00:40:00.246627Z	      },
2025-09-17T00:40:00.24668Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-17T00:40:00.246737Z	    }
2025-09-17T00:40:00.246792Z	  
2025-09-17T00:40:00.246845Z	Query parameters: {
2025-09-17T00:40:00.246904Z	  limit: 8,
2025-09-17T00:40:00.246957Z	  offset: 0,
2025-09-17T00:40:00.247016Z	  category: undefined,
2025-09-17T00:40:00.24707Z	  brand: 'pi',
2025-09-17T00:40:00.247124Z	  featured: undefined
2025-09-17T00:40:00.247181Z	}
2025-09-17T00:40:00.247236Z	Fetching solutions with query: 
2025-09-17T00:40:00.287607Z	    {
2025-09-17T00:40:00.287938Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:00.288147Z	        
2025-09-17T00:40:00.28833Z	    _id,
2025-09-17T00:40:00.288496Z	    title,
2025-09-17T00:40:00.28865Z	    "slug": slug.current,
2025-09-17T00:40:00.288827Z	    summary,
2025-09-17T00:40:00.289003Z	    description,
2025-09-17T00:40:00.289167Z	    coverImage,
2025-09-17T00:40:00.289337Z	    primaryBrand->{
2025-09-17T00:40:00.289509Z	      _id,
2025-09-17T00:40:00.289673Z	      name,
2025-09-17T00:40:00.289836Z	      "slug": slug.current,
2025-09-17T00:40:00.290008Z	      logo
2025-09-17T00:40:00.290148Z	    },
2025-09-17T00:40:00.290295Z	    relatedBrands[]->{
2025-09-17T00:40:00.290507Z	      _id,
2025-09-17T00:40:00.290641Z	      name,
2025-09-17T00:40:00.290749Z	      "slug": slug.current,
2025-09-17T00:40:00.290992Z	      logo
2025-09-17T00:40:00.29112Z	    },
2025-09-17T00:40:00.291231Z	    targetMarket,
2025-09-17T00:40:00.291352Z	    complexity,
2025-09-17T00:40:00.291444Z	    publishedAt,
2025-09-17T00:40:00.291531Z	    isPublished,
2025-09-17T00:40:00.291617Z	    isFeatured,
2025-09-17T00:40:00.291783Z	    viewCount,
2025-09-17T00:40:00.291869Z	    _createdAt,
2025-09-17T00:40:00.291965Z	    _updatedAt
2025-09-17T00:40:00.292054Z	  
2025-09-17T00:40:00.292475Z	      },
2025-09-17T00:40:00.292825Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-17T00:40:00.292974Z	    }
2025-09-17T00:40:00.293075Z	  
2025-09-17T00:40:00.293165Z	Query parameters: {
2025-09-17T00:40:00.293247Z	  limit: 4,
2025-09-17T00:40:00.293953Z	  offset: 0,
2025-09-17T00:40:00.294111Z	  targetMarket: undefined,
2025-09-17T00:40:00.294222Z	  brand: 'pi',
2025-09-17T00:40:00.294344Z	  featured: undefined
2025-09-17T00:40:00.29445Z	}
2025-09-17T00:40:00.294566Z	✅ [getBrandData] Found brand: PI
2025-09-17T00:40:00.294688Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:40:00.294789Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:40:00.294873Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-17T00:40:00.294969Z	Fetching products with query: 
2025-09-17T00:40:00.295107Z	    {
2025-09-17T00:40:00.295218Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:00.295344Z	        
2025-09-17T00:40:00.295458Z	    _id,
2025-09-17T00:40:00.295561Z	    _type,
2025-09-17T00:40:00.295666Z	    partNumber,
2025-09-17T00:40:00.295805Z	    "slug": slug.current,
2025-09-17T00:40:00.295969Z	    title,
2025-09-17T00:40:00.296113Z	    shortDescription,
2025-09-17T00:40:00.296226Z	    image,
2025-09-17T00:40:00.296378Z	    brand->{
2025-09-17T00:40:00.296508Z	      name,
2025-09-17T00:40:00.29662Z	      "slug": slug.current,
2025-09-17T00:40:00.296989Z	      logo
2025-09-17T00:40:00.297085Z	    },
2025-09-17T00:40:00.297166Z	    category->{
2025-09-17T00:40:00.297244Z	      name,
2025-09-17T00:40:00.297419Z	      "slug": slug.current
2025-09-17T00:40:00.297571Z	    },
2025-09-17T00:40:00.297712Z	    pricing{
2025-09-17T00:40:00.297829Z	      currency,
2025-09-17T00:40:00.297948Z	      tiers[]{
2025-09-17T00:40:00.298063Z	        quantity,
2025-09-17T00:40:00.298207Z	        price,
2025-09-17T00:40:00.298361Z	        unit
2025-09-17T00:40:00.298501Z	      },
2025-09-17T00:40:00.29864Z	      moq,
2025-09-17T00:40:00.298783Z	      leadTime,
2025-09-17T00:40:00.298902Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:00.299038Z	      "price": tiers[0].price,
2025-09-17T00:40:00.299184Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:00.299342Z	    },
2025-09-17T00:40:00.299466Z	    inventory{
2025-09-17T00:40:00.2996Z	      quantity,
2025-09-17T00:40:00.299722Z	      status,
2025-09-17T00:40:00.299808Z	      warehouse,
2025-09-17T00:40:00.299915Z	      lastUpdated,
2025-09-17T00:40:00.300025Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:00.300139Z	      "inStock": status == "in_stock",
2025-09-17T00:40:00.300276Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:00.300404Z	    },
2025-09-17T00:40:00.300612Z	    isActive,
2025-09-17T00:40:00.300754Z	    isFeatured,
2025-09-17T00:40:00.300898Z	    isNew,
2025-09-17T00:40:00.301039Z	    _createdAt,
2025-09-17T00:40:00.301173Z	    _updatedAt
2025-09-17T00:40:00.30134Z	  
2025-09-17T00:40:00.301493Z	      },
2025-09-17T00:40:00.301643Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-17T00:40:00.301952Z	    }
2025-09-17T00:40:00.30247Z	  
2025-09-17T00:40:00.302813Z	Query parameters: {
2025-09-17T00:40:00.303074Z	  limit: 8,
2025-09-17T00:40:00.303202Z	  offset: 0,
2025-09-17T00:40:00.303323Z	  category: undefined,
2025-09-17T00:40:00.303433Z	  brand: 'pi',
2025-09-17T00:40:00.303526Z	  featured: undefined
2025-09-17T00:40:00.303615Z	}
2025-09-17T00:40:00.30372Z	Fetching solutions with query: 
2025-09-17T00:40:00.303808Z	    {
2025-09-17T00:40:00.30389Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:00.303986Z	        
2025-09-17T00:40:00.304076Z	    _id,
2025-09-17T00:40:00.304292Z	    title,
2025-09-17T00:40:00.304483Z	    "slug": slug.current,
2025-09-17T00:40:00.304671Z	    summary,
2025-09-17T00:40:00.304779Z	    description,
2025-09-17T00:40:00.304881Z	    coverImage,
2025-09-17T00:40:00.304977Z	    primaryBrand->{
2025-09-17T00:40:00.305072Z	      _id,
2025-09-17T00:40:00.305169Z	      name,
2025-09-17T00:40:00.305288Z	      "slug": slug.current,
2025-09-17T00:40:00.305398Z	      logo
2025-09-17T00:40:00.305507Z	    },
2025-09-17T00:40:00.305614Z	    relatedBrands[]->{
2025-09-17T00:40:00.305729Z	      _id,
2025-09-17T00:40:00.305903Z	      name,
2025-09-17T00:40:00.30604Z	      "slug": slug.current,
2025-09-17T00:40:00.306144Z	      logo
2025-09-17T00:40:00.30649Z	    },
2025-09-17T00:40:00.30665Z	    targetMarket,
2025-09-17T00:40:00.306845Z	    complexity,
2025-09-17T00:40:00.306969Z	    publishedAt,
2025-09-17T00:40:00.307187Z	    isPublished,
2025-09-17T00:40:00.307309Z	    isFeatured,
2025-09-17T00:40:00.307398Z	    viewCount,
2025-09-17T00:40:00.307477Z	    _createdAt,
2025-09-17T00:40:00.307572Z	    _updatedAt
2025-09-17T00:40:00.307712Z	  
2025-09-17T00:40:00.30781Z	      },
2025-09-17T00:40:00.3079Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-17T00:40:00.307988Z	    }
2025-09-17T00:40:00.308085Z	  
2025-09-17T00:40:00.30817Z	Query parameters: {
2025-09-17T00:40:00.308262Z	  limit: 4,
2025-09-17T00:40:00.308382Z	  offset: 0,
2025-09-17T00:40:00.308472Z	  targetMarket: undefined,
2025-09-17T00:40:00.308561Z	  brand: 'pi',
2025-09-17T00:40:00.308809Z	  featured: undefined
2025-09-17T00:40:00.308936Z	}
2025-09-17T00:40:00.309046Z	✅ [getBrandDa❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:40:00.309144Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:40:00.309228Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-17T00:40:00.309328Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:40:00.309414Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424) {
2025-09-17T00:40:00.309497Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:40:00.309581Z	}
2025-09-17T00:40:00.309675Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:40:00.30976Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:40:00.309846Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-17T00:40:00.309925Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:40:00.310013Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424) {
2025-09-17T00:40:00.31011Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:40:00.310193Z	}
2025-09-17T00:40:00.310362Z	ta] Found brand: PI
2025-09-17T00:40:00.310486Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:40:00.312322Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:40:00.312489Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-17T00:40:00.312611Z	Fetching products with query: 
2025-09-17T00:40:00.312703Z	    {
2025-09-17T00:40:00.312789Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:00.312874Z	        
2025-09-17T00:40:00.312955Z	    _id,
2025-09-17T00:40:00.313046Z	    _type,
2025-09-17T00:40:00.313146Z	    partNumber,
2025-09-17T00:40:00.313238Z	    "slug": slug.current,
2025-09-17T00:40:00.313349Z	    title,
2025-09-17T00:40:00.313437Z	    shortDescription,
2025-09-17T00:40:00.313528Z	    image,
2025-09-17T00:40:00.313614Z	    brand->{
2025-09-17T00:40:00.313708Z	      name,
2025-09-17T00:40:00.313797Z	      "slug": slug.current,
2025-09-17T00:40:00.313885Z	      logo
2025-09-17T00:40:00.31397Z	    },
2025-09-17T00:40:00.314059Z	    category->{
2025-09-17T00:40:00.314184Z	      name,
2025-09-17T00:40:00.314288Z	      "slug": slug.current
2025-09-17T00:40:00.314386Z	    },
2025-09-17T00:40:00.314474Z	    pricing{
2025-09-17T00:40:00.31456Z	      currency,
2025-09-17T00:40:00.314652Z	      tiers[]{
2025-09-17T00:40:00.314732Z	        quantity,
2025-09-17T00:40:00.314811Z	        price,
2025-09-17T00:40:00.314891Z	        unit
2025-09-17T00:40:00.314971Z	      },
2025-09-17T00:40:00.315976Z	      moq,
2025-09-17T00:40:00.316142Z	      leadTime,
2025-09-17T00:40:00.31631Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:00.316429Z	      "price": tiers[0].price,
2025-09-17T00:40:00.316529Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:00.316643Z	    },
2025-09-17T00:40:00.316765Z	    inventory{
2025-09-17T00:40:00.316941Z	      quantity,
2025-09-17T00:40:00.31705Z	      status,
2025-09-17T00:40:00.317151Z	      warehouse,
2025-09-17T00:40:00.317456Z	      lastUpdated,
2025-09-17T00:40:00.31759Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:00.317722Z	      "inStock": status == "in_stock",
2025-09-17T00:40:00.31784Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:00.317949Z	    },
2025-09-17T00:40:00.318054Z	    isActive,
2025-09-17T00:40:00.318156Z	    isFeatured,
2025-09-17T00:40:00.318252Z	    isNew,
2025-09-17T00:40:00.318422Z	    _createdAt,
2025-09-17T00:40:00.318528Z	    _updatedAt
2025-09-17T00:40:00.318633Z	  
2025-09-17T00:40:00.318751Z	      },
2025-09-17T00:40:00.318852Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-17T00:40:00.318954Z	    }
2025-09-17T00:40:00.319061Z	  
2025-09-17T00:40:00.31917Z	Query parameters: {
2025-09-17T00:40:00.319304Z	  limit: 8,
2025-09-17T00:40:00.319427Z	  offset: 0,
2025-09-17T00:40:00.319535Z	  category: undefined,
2025-09-17T00:40:00.319631Z	  brand: 'ncc',
2025-09-17T00:40:00.319749Z	  featured: undefined
2025-09-17T00:40:00.319851Z	}
2025-09-17T00:40:00.319951Z	Fetching solutions with query: 
2025-09-17T00:40:00.320051Z	    {
2025-09-17T00:40:00.320158Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:00.320263Z	        
2025-09-17T00:40:00.320393Z	    _id,
2025-09-17T00:40:00.3205Z	    title,
2025-09-17T00:40:00.320599Z	    "slug": slug.current,
2025-09-17T00:40:00.320701Z	    summary,
2025-09-17T00:40:00.320804Z	    description,
2025-09-17T00:40:00.320904Z	    coverImage,
2025-09-17T00:40:00.321004Z	    primaryBrand->{
2025-09-17T00:40:00.3211Z	      _id,
2025-09-17T00:40:00.321187Z	      name,
2025-09-17T00:40:00.322094Z	      "slug": slug.current,
2025-09-17T00:40:00.322258Z	      logo
2025-09-17T00:40:00.322428Z	    },
2025-09-17T00:40:00.32257Z	    relatedBrands[]->{
2025-09-17T00:40:00.322697Z	      _id,
2025-09-17T00:40:00.322809Z	      name,
2025-09-17T00:40:00.323024Z	      "slug": slug.current,
2025-09-17T00:40:00.323158Z	      logo
2025-09-17T00:40:00.323281Z	    },
2025-09-17T00:40:00.323393Z	    targetMarket,
2025-09-17T00:40:00.323872Z	    complexity,
2025-09-17T00:40:00.324002Z	    publishedAt,
2025-09-17T00:40:00.324124Z	    isPublished,
2025-09-17T00:40:00.324226Z	    isFeatured,
2025-09-17T00:40:00.324346Z	    viewCount,
2025-09-17T00:40:00.32446Z	    _createdAt,
2025-09-17T00:40:00.324552Z	    _updatedAt
2025-09-17T00:40:00.324648Z	  
2025-09-17T00:40:00.324766Z	      },
2025-09-17T00:40:00.324857Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-17T00:40:00.324984Z	    }
2025-09-17T00:40:00.3251Z	  
2025-09-17T00:40:00.325198Z	Query parameters: {
2025-09-17T00:40:00.325436Z	  limit: 4,
2025-09-17T00:40:00.325578Z	  offset: 0,
2025-09-17T00:40:00.325781Z	  targetMarket: undefined,
2025-09-17T00:40:00.326011Z	  brand: 'ncc',
2025-09-17T00:40:00.32622Z	  featured: undefined
2025-09-17T00:40:00.326485Z	}
2025-09-17T00:40:00.326596Z	✅ [getBrandData] Found brand: ncc
2025-09-17T00:40:00.326702Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:40:00.326924Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:40:00.327071Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-17T00:40:00.327228Z	Fetching products with query: 
2025-09-17T00:40:00.327387Z	    {
2025-09-17T00:40:00.32752Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:00.327683Z	        
2025-09-17T00:40:00.327793Z	    _id,
2025-09-17T00:40:00.327918Z	    _type,
2025-09-17T00:40:00.328049Z	    partNumber,
2025-09-17T00:40:00.32817Z	    "slug": slug.current,
2025-09-17T00:40:00.328328Z	    title,
2025-09-17T00:40:00.328446Z	    shortDescription,
2025-09-17T00:40:00.328598Z	    image,
2025-09-17T00:40:00.328746Z	    brand->{
2025-09-17T00:40:00.328875Z	      name,
2025-09-17T00:40:00.329022Z	      "slug": slug.current,
2025-09-17T00:40:00.32916Z	      logo
2025-09-17T00:40:00.329308Z	    },
2025-09-17T00:40:00.329442Z	    category->{
2025-09-17T00:40:00.329533Z	      name,
2025-09-17T00:40:00.329606Z	      "slug": slug.current
2025-09-17T00:40:00.329734Z	    },
2025-09-17T00:40:00.329866Z	    pricing{
2025-09-17T00:40:00.329941Z	      currency,
2025-09-17T00:40:00.330033Z	      tiers[]{
2025-09-17T00:40:00.330151Z	        quantity,
2025-09-17T00:40:00.330305Z	        price,
2025-09-17T00:40:00.330452Z	        unit
2025-09-17T00:40:00.330553Z	      },
2025-09-17T00:40:00.330691Z	      moq,
2025-09-17T00:40:00.33084Z	      leadTime,
2025-09-17T00:40:00.330957Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:00.331367Z	      "price": tiers[0].price,
2025-09-17T00:40:00.331729Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:00.332049Z	    },
2025-09-17T00:40:00.332218Z	    inventory{
2025-09-17T00:40:00.332403Z	      quantity,
2025-09-17T00:40:00.332517Z	      status,
2025-09-17T00:40:00.332649Z	      warehouse,
2025-09-17T00:40:00.332881Z	      lastUpdated,
2025-09-17T00:40:00.333178Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:00.333465Z	      "inStock": status == "in_stock",
2025-09-17T00:40:00.333846Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:00.334053Z	    },
2025-09-17T00:40:00.334201Z	    isActive,
2025-09-17T00:40:00.33443Z	    isFeatured,
2025-09-17T00:40:00.334628Z	    isNew,
2025-09-17T00:40:00.334758Z	    _createdAt,
2025-09-17T00:40:00.334992Z	    _updatedAt
2025-09-17T00:40:00.335251Z	  
2025-09-17T00:40:00.335539Z	      },
2025-09-17T00:40:00.335727Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-17T00:40:00.335844Z	    }
2025-09-17T00:40:00.337027Z	  
2025-09-17T00:40:00.337185Z	Query parameters: {
2025-09-17T00:40:00.337343Z	  limit: 8,
2025-09-17T00:40:00.337448Z	  offset: 0,
2025-09-17T00:40:00.337513Z	  category: undefined,
2025-09-17T00:40:00.33757Z	  brand: 'lem',
2025-09-17T00:40:00.33763Z	  featured: undefined
2025-09-17T00:40:00.337834Z	}
2025-09-17T00:40:00.337927Z	Fetching solutions with query: 
2025-09-17T00:40:00.338075Z	    {
2025-09-17T00:40:00.338197Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:00.3384Z	        
2025-09-17T00:40:00.338498Z	    _id,
2025-09-17T00:40:00.338655Z	    title,
2025-09-17T00:40:00.338781Z	    "slug": slug.current,
2025-09-17T00:40:00.338885Z	    summary,
2025-09-17T00:40:00.339Z	    description,
2025-09-17T00:40:00.339135Z	    coverImage,
2025-09-17T00:40:00.339239Z	    primaryBrand->{
2025-09-17T00:40:00.339347Z	      _id,
2025-09-17T00:40:00.339581Z	      name,
2025-09-17T00:40:00.339681Z	      "slug": slug.current,
2025-09-17T00:40:00.339799Z	      logo
2025-09-17T00:40:00.339958Z	    },
2025-09-17T00:40:00.340181Z	    relatedBrands[]->{
2025-09-17T00:40:00.340315Z	      _id,
2025-09-17T00:40:00.340519Z	      name,
2025-09-17T00:40:00.340802Z	      "slug": slug.current,
2025-09-17T00:40:00.340947Z	      logo
2025-09-17T00:40:00.341062Z	    },
2025-09-17T00:40:00.34123Z	    targetMarket,
2025-09-17T00:40:00.341384Z	    complexity,
2025-09-17T00:40:00.341579Z	    publishedAt,
2025-09-17T00:40:00.341686Z	    isPublished,
2025-09-17T00:40:00.341802Z	    isFeatured,
2025-09-17T00:40:00.341895Z	    viewCount,
2025-09-17T00:40:00.341991Z	    _createdAt,
2025-09-17T00:40:00.342098Z	    _updatedAt
2025-09-17T00:40:00.342198Z	  
2025-09-17T00:40:00.342332Z	      },
2025-09-17T00:40:00.342424Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-17T00:40:00.342509Z	    }
2025-09-17T00:40:00.342592Z	  
2025-09-17T00:40:00.342673Z	Query parameters: {
2025-09-17T00:40:00.342761Z	  limit: 4,
2025-09-17T00:40:00.342849Z	  offset: 0,
2025-09-17T00:40:00.34293Z	  targetMarket: undefined,
2025-09-17T00:40:00.343025Z	  brand: 'lem',
2025-09-17T00:40:00.343176Z	  featured: undefined
2025-09-17T00:40:00.343418Z	}
2025-09-17T00:40:00.343601Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-17T00:40:00.343719Z	Fetching products with query: 
2025-09-17T00:40:00.343865Z	    {
2025-09-17T00:40:00.34401Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:00.344144Z	        
2025-09-17T00:40:00.344295Z	    _id,
2025-09-17T00:40:00.344385Z	    _type,
2025-09-17T00:40:00.344555Z	    partNumber,
2025-09-17T00:40:00.344686Z	    "slug": slug.current,
2025-09-17T00:40:00.344811Z	    title,
2025-09-17T00:40:00.344944Z	    shortDescription,
2025-09-17T00:40:00.345168Z	    image,
2025-09-17T00:40:00.345361Z	    brand->{
2025-09-17T00:40:00.345478Z	      name,
2025-09-17T00:40:00.345578Z	      "slug": slug.current,
2025-09-17T00:40:00.345676Z	      logo
2025-09-17T00:40:00.345776Z	    },
2025-09-17T00:40:00.345869Z	    category->{
2025-09-17T00:40:00.345977Z	      name,
2025-09-17T00:40:00.346084Z	      "slug": slug.current
2025-09-17T00:40:00.346179Z	    },
2025-09-17T00:40:00.348322Z	    pricing{
2025-09-17T00:40:00.348468Z	      currency,
2025-09-17T00:40:00.348569Z	      tiers[]{
2025-09-17T00:40:00.348655Z	        quantity,
2025-09-17T00:40:00.348744Z	        price,
2025-09-17T00:40:00.348844Z	        unit
2025-09-17T00:40:00.348931Z	      },
2025-09-17T00:40:00.349019Z	      moq,
2025-09-17T00:40:00.349114Z	      leadTime,
2025-09-17T00:40:00.349197Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:00.387505Z	      "price": tiers[0].price,
2025-09-17T00:40:00.387745Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:00.387902Z	    },
2025-09-17T00:40:00.388006Z	    inventory{
2025-09-17T00:40:00.388102Z	      quantity,
2025-09-17T00:40:00.38819Z	      status,
2025-09-17T00:40:00.388329Z	      warehouse,
2025-09-17T00:40:00.388433Z	      lastUpdated,
2025-09-17T00:40:00.388528Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:00.388626Z	      "inStock": status == "in_stock",
2025-09-17T00:40:00.388722Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:00.388833Z	    },
2025-09-17T00:40:00.388932Z	    isActive,
2025-09-17T00:40:00.389036Z	    isFeatured,
2025-09-17T00:40:00.389126Z	    isNew,
2025-09-17T00:40:00.389218Z	    _createdAt,
2025-09-17T00:40:00.389325Z	    _updatedAt
2025-09-17T00:40:00.389422Z	  
2025-09-17T00:40:00.38959Z	      },
2025-09-17T00:40:00.389682Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-17T00:40:00.389792Z	    }
2025-09-17T00:40:00.389892Z	  
2025-09-17T00:40:00.389984Z	Query parameters: {
2025-09-17T00:40:00.390778Z	  limit: 8,
2025-09-17T00:40:00.391115Z	  offset: 0,
2025-09-17T00:40:00.391442Z	  category: undefined,
2025-09-17T00:40:00.391743Z	  brand: 'lem',
2025-09-17T00:40:00.391881Z	  featured: undefined
2025-09-17T00:40:00.391985Z	}
2025-09-17T00:40:00.392096Z	Fetching solutions with query: 
2025-09-17T00:40:00.392761Z	    {
2025-09-17T00:40:00.393192Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:00.393785Z	        
2025-09-17T00:40:00.394099Z	    _id,
2025-09-17T00:40:00.394214Z	    title,
2025-09-17T00:40:00.394342Z	    "slug": slug.current,
2025-09-17T00:40:00.394445Z	    summary,
2025-09-17T00:40:00.394702Z	    description,
2025-09-17T00:40:00.39485Z	    coverImage,
2025-09-17T00:40:00.395224Z	    primaryBrand->{
2025-09-17T00:40:00.395451Z	      _id,
2025-09-17T00:40:00.395603Z	      name,
2025-09-17T00:40:00.395744Z	      "slug": slug.current,
2025-09-17T00:40:00.395868Z	      logo
2025-09-17T00:40:00.39597Z	    },
2025-09-17T00:40:00.396068Z	    relatedBrands[]->{
2025-09-17T00:40:00.396204Z	      _id,
2025-09-17T00:40:00.396416Z	      name,
2025-09-17T00:40:00.396534Z	      "slug": slug.current,
2025-09-17T00:40:00.39664Z	      logo
2025-09-17T00:40:00.396766Z	    },
2025-09-17T00:40:00.396864Z	    targetMarket,
2025-09-17T00:40:00.396958Z	    complexity,
2025-09-17T00:40:00.397053Z	    publishedAt,
2025-09-17T00:40:00.397147Z	    isPublished,
2025-09-17T00:40:00.397238Z	    isFeatured,
2025-09-17T00:40:00.397373Z	    viewCount,
2025-09-17T00:40:00.397485Z	    _createdAt,
2025-09-17T00:40:00.397603Z	    _updatedAt
2025-09-17T00:40:00.397727Z	  
2025-09-17T00:40:00.397868Z	      },
2025-09-17T00:40:00.397978Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-17T00:40:00.398082Z	    }
2025-09-17T00:40:00.398185Z	  
2025-09-17T00:40:00.398307Z	Query parameters: {
2025-09-17T00:40:00.398424Z	  limit: 4,
2025-09-17T00:40:00.398542Z	  offset: 0,
2025-09-17T00:40:00.398646Z	  targetMarket: undefined,
2025-09-17T00:40:00.398766Z	  brand: 'lem',
2025-09-17T00:40:00.39887Z	  featured: undefined
2025-09-17T00:40:00.398978Z	}
2025-09-17T00:40:00.399081Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:40:00.399192Z	Fetching products with query: 
2025-09-17T00:40:00.4005Z	    {
2025-09-17T00:40:00.400692Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:00.400806Z	        
2025-09-17T00:40:00.400896Z	    _id,
2025-09-17T00:40:00.400979Z	    _type,
2025-09-17T00:40:00.401063Z	    partNumber,
2025-09-17T00:40:00.401249Z	    "slug": slug.current,
2025-09-17T00:40:00.401398Z	    title,
2025-09-17T00:40:00.40158Z	    shortDescription,
2025-09-17T00:40:00.401738Z	    image,
2025-09-17T00:40:00.401901Z	    brand->{
2025-09-17T00:40:00.402012Z	      name,
2025-09-17T00:40:00.402111Z	      "slug": slug.current,
2025-09-17T00:40:00.402219Z	      logo
2025-09-17T00:40:00.402387Z	    },
2025-09-17T00:40:00.402485Z	    category->{
2025-09-17T00:40:00.402605Z	      name,
2025-09-17T00:40:00.402777Z	      "slug": slug.current
2025-09-17T00:40:00.402948Z	    },
2025-09-17T00:40:00.403064Z	    pricing{
2025-09-17T00:40:00.403173Z	      currency,
2025-09-17T00:40:00.403295Z	      tiers[]{
2025-09-17T00:40:00.403409Z	        quantity,
2025-09-17T00:40:00.403515Z	        price,
2025-09-17T00:40:00.403613Z	        unit
2025-09-17T00:40:00.403726Z	      },
2025-09-17T00:40:00.403829Z	      moq,
2025-09-17T00:40:00.403932Z	      leadTime,
2025-09-17T00:40:00.404039Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:00.404148Z	      "price": tiers[0].price,
2025-09-17T00:40:00.404256Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:00.404401Z	    },
2025-09-17T00:40:00.404516Z	    inventory{
2025-09-17T00:40:00.404627Z	      quantity,
2025-09-17T00:40:00.404837Z	      status,
2025-09-17T00:40:00.404959Z	      warehouse,
2025-09-17T00:40:00.405069Z	      lastUpdated,
2025-09-17T00:40:00.405179Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:00.405367Z	      "inStock": status == "in_stock",
2025-09-17T00:40:00.405465Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:00.406185Z	    },
2025-09-17T00:40:00.406405Z	    isActive,
2025-09-17T00:40:00.406541Z	    isFeatured,
2025-09-17T00:40:00.406655Z	    isNew,
2025-09-17T00:40:00.406758Z	    _createdAt,
2025-09-17T00:40:00.406859Z	    _updatedAt
2025-09-17T00:40:00.40697Z	  
2025-09-17T00:40:00.407076Z	      },
2025-09-17T00:40:00.407179Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-17T00:40:00.407302Z	    }
2025-09-17T00:40:00.407399Z	  
2025-09-17T00:40:00.407498Z	Query parameters: {
2025-09-17T00:40:00.407594Z	  limit: 8,
2025-09-17T00:40:00.407691Z	  offset: 0,
2025-09-17T00:40:00.407796Z	  category: undefined,
2025-09-17T00:40:00.407922Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:40:00.40803Z	  featured: undefined
2025-09-17T00:40:00.408142Z	}
2025-09-17T00:40:00.40825Z	Fetching solutions with query: 
2025-09-17T00:40:00.408387Z	    {
2025-09-17T00:40:00.408502Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:00.408608Z	        
2025-09-17T00:40:00.408705Z	    _id,
2025-09-17T00:40:00.408812Z	    title,
2025-09-17T00:40:00.408925Z	    "slug": slug.current,
2025-09-17T00:40:00.409025Z	    summary,
2025-09-17T00:40:00.409121Z	    description,
2025-09-17T00:40:00.409447Z	    coverImage,
2025-09-17T00:40:00.4096Z	    primaryBrand->{
2025-09-17T00:40:00.409706Z	      _id,
2025-09-17T00:40:00.409928Z	      name,
2025-09-17T00:40:00.410151Z	      "slug": slug.current,
2025-09-17T00:40:00.41036Z	      logo
2025-09-17T00:40:00.4105Z	    },
2025-09-17T00:40:00.410644Z	    relatedBrands[]->{
2025-09-17T00:40:00.410897Z	      _id,
2025-09-17T00:40:00.411064Z	      name,
2025-09-17T00:40:00.411194Z	      "slug": slug.current,
2025-09-17T00:40:00.411332Z	      logo
2025-09-17T00:40:00.411443Z	    },
2025-09-17T00:40:00.411554Z	    targetMarket,
2025-09-17T00:40:00.41167Z	    complexity,
2025-09-17T00:40:00.411779Z	    publishedAt,
2025-09-17T00:40:00.411878Z	    isPublished,
2025-09-17T00:40:00.412006Z	    isFeatured,
2025-09-17T00:40:00.412124Z	    viewCount,
2025-09-17T00:40:00.412231Z	    _createdAt,
2025-09-17T00:40:00.41235Z	    _updatedAt
2025-09-17T00:40:00.41245Z	  
2025-09-17T00:40:00.412561Z	      },
2025-09-17T00:40:00.412746Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-17T00:40:00.412953Z	    }
2025-09-17T00:40:00.413076Z	  
2025-09-17T00:40:00.413196Z	Query parameters: {
2025-09-17T00:40:00.413354Z	  limit: 4,
2025-09-17T00:40:00.413514Z	  offset: 0,
2025-09-17T00:40:00.413639Z	  targetMarket: undefined,
2025-09-17T00:40:00.413743Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:40:00.413838Z	  featured: undefined
2025-09-17T00:40:00.413939Z	}
2025-09-17T00:40:00.414049Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-17T00:40:00.414154Z	Fetching products with query: 
2025-09-17T00:40:00.414256Z	    {
2025-09-17T00:40:00.414388Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:00.414485Z	        
2025-09-17T00:40:00.414585Z	    _id,
2025-09-17T00:40:00.414694Z	    _type,
2025-09-17T00:40:00.415406Z	    partNumber,
2025-09-17T00:40:00.415579Z	    "slug": slug.current,
2025-09-17T00:40:00.415721Z	    title,
2025-09-17T00:40:00.41585Z	    shortDescription,
2025-09-17T00:40:00.415968Z	    image,
2025-09-17T00:40:00.416086Z	    brand->{
2025-09-17T00:40:00.41619Z	      name,
2025-09-17T00:40:00.416314Z	      "slug": slug.current,
2025-09-17T00:40:00.416443Z	      logo
2025-09-17T00:40:00.416588Z	    },
2025-09-17T00:40:00.416789Z	    category->{
2025-09-17T00:40:00.417042Z	      name,
2025-09-17T00:40:00.417199Z	      "slug": slug.current
2025-09-17T00:40:00.417387Z	    },
2025-09-17T00:40:00.417575Z	    pricing{
2025-09-17T00:40:00.419386Z	      currency,
2025-09-17T00:40:00.419534Z	      tiers[]{
2025-09-17T00:40:00.419649Z	        quantity,
2025-09-17T00:40:00.419791Z	        price,
2025-09-17T00:40:00.419909Z	        unit
2025-09-17T00:40:00.4201Z	      },
2025-09-17T00:40:00.420515Z	      moq,
2025-09-17T00:40:00.42139Z	      leadTime,
2025-09-17T00:40:00.421539Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:00.421666Z	      "price": tiers[0].price,
2025-09-17T00:40:00.421777Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:00.421881Z	    },
2025-09-17T00:40:00.421984Z	    inventory{
2025-09-17T00:40:00.422154Z	      quantity,
2025-09-17T00:40:00.422399Z	      status,
2025-09-17T00:40:00.42266Z	      warehouse,
2025-09-17T00:40:00.423087Z	      lastUpdated,
2025-09-17T00:40:00.423258Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:00.423428Z	      "inStock": status == "in_stock",
2025-09-17T00:40:00.423541Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:00.423786Z	    },
2025-09-17T00:40:00.423911Z	    isActive,
2025-09-17T00:40:00.424069Z	    isFeatured,
2025-09-17T00:40:00.424235Z	    isNew,
2025-09-17T00:40:00.42443Z	    _createdAt,
2025-09-17T00:40:00.424628Z	    _updatedAt
2025-09-17T00:40:00.424758Z	  
2025-09-17T00:40:00.424856Z	      },
2025-09-17T00:40:00.424959Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-17T00:40:00.425079Z	    }
2025-09-17T00:40:00.425188Z	  
2025-09-17T00:40:00.425499Z	Query parameters: {
2025-09-17T00:40:00.425804Z	  limit: 8,
2025-09-17T00:40:00.425935Z	  offset: 0,
2025-09-17T00:40:00.42603Z	  category: undefined,
2025-09-17T00:40:00.426123Z	  brand: 'lem',
2025-09-17T00:40:00.426222Z	  featured: undefined
2025-09-17T00:40:00.426354Z	}
2025-09-17T00:40:00.426458Z	Fetching solutions with query: 
2025-09-17T00:40:00.426554Z	    {
2025-09-17T00:40:00.426722Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:00.42686Z	        
2025-09-17T00:40:00.426968Z	    _id,
2025-09-17T00:40:00.427063Z	    title,
2025-09-17T00:40:00.427156Z	    "slug": slug.current,
2025-09-17T00:40:00.427535Z	    summary,
2025-09-17T00:40:00.427672Z	    description,
2025-09-17T00:40:00.428086Z	    coverImage,
2025-09-17T00:40:00.428335Z	    primaryBrand->{
2025-09-17T00:40:00.428477Z	      _id,
2025-09-17T00:40:00.42871Z	      name,
2025-09-17T00:40:00.428896Z	      "slug": slug.current,
2025-09-17T00:40:00.429115Z	      logo
2025-09-17T00:40:00.429332Z	    },
2025-09-17T00:40:00.429611Z	    relatedBrands[]->{
2025-09-17T00:40:00.429845Z	      _id,
2025-09-17T00:40:00.430064Z	      name,
2025-09-17T00:40:00.430317Z	      "slug": slug.current,
2025-09-17T00:40:00.4305Z	      logo
2025-09-17T00:40:00.430683Z	    },
2025-09-17T00:40:00.430876Z	    targetMarket,
2025-09-17T00:40:00.431049Z	    complexity,
2025-09-17T00:40:00.431301Z	    publishedAt,
2025-09-17T00:40:00.431445Z	    isPublished,
2025-09-17T00:40:00.431563Z	    isFeatured,
2025-09-17T00:40:00.431705Z	    viewCount,
2025-09-17T00:40:00.431796Z	    _createdAt,
2025-09-17T00:40:00.431878Z	    _updatedAt
2025-09-17T00:40:00.431995Z	  
2025-09-17T00:40:00.432153Z	      },
2025-09-17T00:40:00.432403Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-17T00:40:00.432596Z	    }
2025-09-17T00:40:00.434818Z	  
2025-09-17T00:40:00.43499Z	Query parameters: {
2025-09-17T00:40:00.435109Z	  limit: 4,
2025-09-17T00:40:00.435212Z	  offset: 0,
2025-09-17T00:40:00.43534Z	  targetMarket: undefined,
2025-09-17T00:40:00.435447Z	  brand: 'lem',
2025-09-17T00:40:00.435593Z	  featured: undefined
2025-09-17T00:40:00.435717Z	}
2025-09-17T00:40:00.435827Z	✅ [getBrandData] Found brand: LEM
2025-09-17T00:40:00.435934Z	Products fetch result: {
2025-09-17T00:40:00.436036Z	  totalProducts: 3,
2025-09-17T00:40:00.436156Z	  fetchedProducts: 3,
2025-09-17T00:40:00.436262Z	  firstProduct: {
2025-09-17T00:40:00.436396Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-17T00:40:00.436524Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-17T00:40:00.436633Z	    _type: 'product',
2025-09-17T00:40:00.436758Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-17T00:40:00.436867Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-17T00:40:00.43697Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-17T00:40:00.437094Z	    image: null,
2025-09-17T00:40:00.4372Z	    inventory: {
2025-09-17T00:40:00.437325Z	      inStock: true,
2025-09-17T00:40:00.437451Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-17T00:40:00.437565Z	      quantity: 0,
2025-09-17T00:40:00.437689Z	      status: 'in_stock',
2025-09-17T00:40:00.437799Z	      warehouse: null
2025-09-17T00:40:00.438787Z	    },
2025-09-17T00:40:00.438947Z	    isActive: true,
2025-09-17T00:40:00.441319Z	    isFeatured: false,
2025-09-17T00:40:00.441433Z	    isNew: false,
2025-09-17T00:40:00.441499Z	    partNumber: 'la55-p',
2025-09-17T00:40:00.441556Z	    pricing: {
2025-09-17T00:40:00.441612Z	      currency: 'CNY',
2025-09-17T00:40:00.441668Z	      leadTime: null,
2025-09-17T00:40:00.441722Z	      moq: null,
2025-09-17T00:40:00.441787Z	      price: null,
2025-09-17T00:40:00.44184Z	      tiers: null
2025-09-17T00:40:00.441939Z	    },
2025-09-17T00:40:00.442001Z	    shortDescription: '电流传感器la55-p',
2025-09-17T00:40:00.442059Z	    slug: 'la55-p',
2025-09-17T00:40:00.442114Z	    title: '电流传感器la55-p'
2025-09-17T00:40:00.44218Z	  }
2025-09-17T00:40:00.442235Z	}
2025-09-17T00:40:00.442319Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:40:00.442381Z	🔍 [getBrandData] Searching for brand with slug: lem
2025-09-17T00:40:00.442438Z	Fetching products with query: 
2025-09-17T00:40:00.442491Z	    {
2025-09-17T00:40:00.442545Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:00.442599Z	        
2025-09-17T00:40:00.442653Z	    _id,
2025-09-17T00:40:00.442708Z	    _type,
2025-09-17T00:40:00.442761Z	    partNumber,
2025-09-17T00:40:00.442814Z	    "slug": slug.current,
2025-09-17T00:40:00.442867Z	    title,
2025-09-17T00:40:00.442925Z	    shortDescription,
2025-09-17T00:40:00.442978Z	    image,
2025-09-17T00:40:00.44303Z	    brand->{
2025-09-17T00:40:00.443082Z	      name,
2025-09-17T00:40:00.443133Z	      "slug": slug.current,
2025-09-17T00:40:00.443194Z	      logo
2025-09-17T00:40:00.443247Z	    },
2025-09-17T00:40:00.443328Z	    category->{
2025-09-17T00:40:00.443385Z	      name,
2025-09-17T00:40:00.443437Z	      "slug": slug.current
2025-09-17T00:40:00.44349Z	    },
2025-09-17T00:40:00.443549Z	    pricing{
2025-09-17T00:40:00.443605Z	      currency,
2025-09-17T00:40:00.443662Z	      tiers[]{
2025-09-17T00:40:00.443725Z	        quantity,
2025-09-17T00:40:00.44378Z	        price,
2025-09-17T00:40:00.443832Z	        unit
2025-09-17T00:40:00.443888Z	      },
2025-09-17T00:40:00.443948Z	      moq,
2025-09-17T00:40:00.444002Z	      leadTime,
2025-09-17T00:40:00.444056Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:00.444116Z	      "price": tiers[0].price,
2025-09-17T00:40:00.44417Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:00.444226Z	    },
2025-09-17T00:40:00.487445Z	    inventory{
2025-09-17T00:40:00.487679Z	      quantity,
2025-09-17T00:40:00.487807Z	      status,
2025-09-17T00:40:00.487924Z	      warehouse,
2025-09-17T00:40:00.488023Z	      lastUpdated,
2025-09-17T00:40:00.488127Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:00.488284Z	      "inStock": status == "in_stock",
2025-09-17T00:40:00.488441Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:00.48858Z	    },
2025-09-17T00:40:00.489085Z	    isActive,
2025-09-17T00:40:00.489341Z	    isFeatured,
2025-09-17T00:40:00.489757Z	    isNew,
2025-09-17T00:40:00.489927Z	    _createdAt,
2025-09-17T00:40:00.49009Z	    _updatedAt
2025-09-17T00:40:00.490231Z	  
2025-09-17T00:40:00.490365Z	      },
2025-09-17T00:40:00.490507Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "lem"])
2025-09-17T00:40:00.490712Z	    }
2025-09-17T00:40:00.490973Z	  
2025-09-17T00:40:00.491239Z	Query parameters: {
2025-09-17T00:40:00.491394Z	  limit: 8,
2025-09-17T00:40:00.491511Z	  offset: 0,
2025-09-17T00:40:00.491671Z	  category: undefined,
2025-09-17T00:40:00.492223Z	  brand: 'lem',
2025-09-17T00:40:00.492479Z	  featured: undefined
2025-09-17T00:40:00.492727Z	}
2025-09-17T00:40:00.493144Z	Fetching solutions with query: 
2025-09-17T00:40:00.493385Z	    {
2025-09-17T00:40:00.493687Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:00.494061Z	        
2025-09-17T00:40:00.494251Z	    _id,
2025-09-17T00:40:00.494488Z	    title,
2025-09-17T00:40:00.494853Z	    "slug": slug.current,
2025-09-17T00:40:00.49512Z	    summary,
2025-09-17T00:40:00.495353Z	    description,
2025-09-17T00:40:00.497286Z	    coverImage,
2025-09-17T00:40:00.497739Z	    primaryBrand->{
2025-09-17T00:40:00.498454Z	      _id,
2025-09-17T00:40:00.498627Z	      name,
2025-09-17T00:40:00.499133Z	      "slug": slug.current,
2025-09-17T00:40:00.499257Z	      logo
2025-09-17T00:40:00.499386Z	    },
2025-09-17T00:40:00.499479Z	    relatedBrands[]->{
2025-09-17T00:40:00.499566Z	      _id,
2025-09-17T00:40:00.499656Z	      name,
2025-09-17T00:40:00.499776Z	      "slug": slug.current,
2025-09-17T00:40:00.499872Z	      logo
2025-09-17T00:40:00.499972Z	    },
2025-09-17T00:40:00.500072Z	    targetMarket,
2025-09-17T00:40:00.50019Z	    complexity,
2025-09-17T00:40:00.500319Z	    publishedAt,
2025-09-17T00:40:00.500441Z	    isPublished,
2025-09-17T00:40:00.500539Z	    isFeatured,
2025-09-17T00:40:00.500638Z	    viewCount,
2025-09-17T00:40:00.500781Z	    _createdAt,
2025-09-17T00:40:00.50092Z	    _updatedAt
2025-09-17T00:40:00.501079Z	  
2025-09-17T00:40:00.501332Z	      },
2025-09-17T00:40:00.507534Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("lem" in relatedBrands[]->slug.current || primaryBrand->slug.current == "lem")])
2025-09-17T00:40:00.507685Z	    }
2025-09-17T00:40:00.5078Z	  
2025-09-17T00:40:00.509509Z	Query parameters: {
2025-09-17T00:40:00.509652Z	  limit: 4,
2025-09-17T00:40:00.509765Z	  offset: 0,
2025-09-17T00:40:00.509878Z	  targetMarket: undefined,
2025-09-17T00:40:00.509994Z	  brand: 'lem',
2025-09-17T00:40:00.510095Z	  featured: undefined
2025-09-17T00:40:00.510195Z	}
2025-09-17T00:40:00.510317Z	✅ [getBrandData] Found brand: LEM
2025-09-17T00:40:00.51043Z	Products fetch result: {
2025-09-17T00:40:00.510561Z	  totalProducts: 3,
2025-09-17T00:40:00.510666Z	  fetchedProducts: 3,
2025-09-17T00:40:00.510766Z	  firstProduct: {
2025-09-17T00:40:00.510859Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-17T00:40:00.510968Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-17T00:40:00.511077Z	    _type: 'product',
2025-09-17T00:40:00.511182Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-17T00:40:00.511321Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-17T00:40:00.511524Z	    category: { name: '传感器', slug: 'sensor' }❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:40:00.511669Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:40:00.51177Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-17T00:40:00.511863Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:40:00.511959Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424)
2025-09-17T00:40:00.512089Z	    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-09-17T00:40:00.512189Z	    at runNextTicks (node:internal/process/task_queues:64:3)
2025-09-17T00:40:00.512321Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-17T00:40:00.51243Z	    at process.processTimers (node:internal/timers:512:7) {
2025-09-17T00:40:00.512564Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:40:00.512676Z	}
2025-09-17T00:40:00.512775Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:40:00.512872Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:40:00.513064Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-17T00:40:00.51319Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:40:00.513327Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424)
2025-09-17T00:40:00.513456Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-17T00:40:00.513564Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:40:00.513669Z	}
2025-09-17T00:40:00.513755Z	,
2025-09-17T00:40:00.513836Z	    image: null,
2025-09-17T00:40:00.513922Z	    inventory: {
2025-09-17T00:40:00.513999Z	      inStock: true,
2025-09-17T00:40:00.51412Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-17T00:40:00.514333Z	      quantity: 0,
2025-09-17T00:40:00.514465Z	      status: 'in_stock',
2025-09-17T00:40:00.514581Z	      warehouse: null
2025-09-17T00:40:00.514688Z	    },
2025-09-17T00:40:00.514812Z	    isActive: true,
2025-09-17T00:40:00.514939Z	    isFeatured: false,
2025-09-17T00:40:00.515042Z	    isNew: false,
2025-09-17T00:40:00.515149Z	    partNumber: 'la55-p',
2025-09-17T00:40:00.515249Z	    pricing: {
2025-09-17T00:40:00.515371Z	      currency: 'CNY',
2025-09-17T00:40:00.515479Z	      leadTime: null,
2025-09-17T00:40:00.515585Z	      moq: null,
2025-09-17T00:40:00.515685Z	      price: null,
2025-09-17T00:40:00.515794Z	      tiers: null
2025-09-17T00:40:00.515896Z	    },
2025-09-17T00:40:00.515999Z	    shortDescription: '电流传感器la55-p',
2025-09-17T00:40:00.516106Z	    slug: 'la55-p',
2025-09-17T00:40:00.516219Z	    title: '电流传感器la55-p'
2025-09-17T00:40:00.516346Z	  }
2025-09-17T00:40:00.516523Z	}
2025-09-17T00:40:00.517176Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:40:00.517728Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-17T00:40:00.518322Z	Fetching products with query: 
2025-09-17T00:40:00.519721Z	    {
2025-09-17T00:40:00.520407Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:00.520672Z	        
2025-09-17T00:40:00.521256Z	    _id,
2025-09-17T00:40:00.526587Z	    _type,
2025-09-17T00:40:00.526722Z	    partNumber,
2025-09-17T00:40:00.526828Z	    "slug": slug.current,
2025-09-17T00:40:00.526943Z	    title,
2025-09-17T00:40:00.527068Z	    shortDescription,
2025-09-17T00:40:00.527171Z	    image,
2025-09-17T00:40:00.527409Z	    brand->{
2025-09-17T00:40:00.527601Z	      name,
2025-09-17T00:40:00.527782Z	      "slug": slug.current,
2025-09-17T00:40:00.528128Z	      logo
2025-09-17T00:40:00.528284Z	    },
2025-09-17T00:40:00.528512Z	    category->{
2025-09-17T00:40:00.528628Z	      name,
2025-09-17T00:40:00.528743Z	      "slug": slug.current
2025-09-17T00:40:00.529049Z	    },
2025-09-17T00:40:00.529183Z	    pricing{
2025-09-17T00:40:00.529313Z	      currency,
2025-09-17T00:40:00.537451Z	      tiers[]{
2025-09-17T00:40:00.537683Z	        quantity,
2025-09-17T00:40:00.537824Z	        price,
2025-09-17T00:40:00.537969Z	        unit
2025-09-17T00:40:00.538089Z	      },
2025-09-17T00:40:00.5382Z	      moq,
2025-09-17T00:40:00.539306Z	      leadTime,
2025-09-17T00:40:00.539457Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:00.539527Z	      "price": tiers[0].price,
2025-09-17T00:40:00.539585Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:00.539649Z	    },
2025-09-17T00:40:00.539715Z	    inventory{
2025-09-17T00:40:00.539768Z	      quantity,
2025-09-17T00:40:00.539824Z	      status,
2025-09-17T00:40:00.539877Z	      warehouse,
2025-09-17T00:40:00.539933Z	      lastUpdated,
2025-09-17T00:40:00.539987Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:00.540041Z	      "inStock": status == "in_stock",
2025-09-17T00:40:00.540094Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:00.540149Z	    },
2025-09-17T00:40:00.540201Z	    isActive,
2025-09-17T00:40:00.540253Z	    isFeatured,
2025-09-17T00:40:00.540344Z	    isNew,
2025-09-17T00:40:00.540408Z	    _createdAt,
2025-09-17T00:40:00.540468Z	    _updatedAt
2025-09-17T00:40:00.540525Z	  
2025-09-17T00:40:00.540578Z	      },
2025-09-17T00:40:00.540631Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-17T00:40:00.540698Z	    }
2025-09-17T00:40:00.540751Z	  
2025-09-17T00:40:00.540805Z	Query parameters: {
2025-09-17T00:40:00.540871Z	  limit: 8,
2025-09-17T00:40:00.541834Z	  offset: 0,
2025-09-17T00:40:00.542171Z	  category: undefined,
2025-09-17T00:40:00.542532Z	  brand: 'ixys',
2025-09-17T00:40:00.542625Z	  featured: undefined
2025-09-17T00:40:00.542691Z	}
2025-09-17T00:40:00.542747Z	Fetching solutions with query: 
2025-09-17T00:40:00.542801Z	    {
2025-09-17T00:40:00.542858Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:00.542916Z	        
2025-09-17T00:40:00.54297Z	    _id,
2025-09-17T00:40:00.543023Z	    title,
2025-09-17T00:40:00.543075Z	    "slug": slug.current,
2025-09-17T00:40:00.543127Z	    summary,
2025-09-17T00:40:00.543181Z	    description,
2025-09-17T00:40:00.543241Z	    coverImage,
2025-09-17T00:40:00.543326Z	    primaryBrand->{
2025-09-17T00:40:00.543451Z	      _id,
2025-09-17T00:40:00.543528Z	      name,
2025-09-17T00:40:00.587479Z	      "slug": slug.current,
2025-09-17T00:40:00.587716Z	      logo
2025-09-17T00:40:00.587822Z	    },
2025-09-17T00:40:00.587929Z	    relatedBrands[]->{
2025-09-17T00:40:00.588036Z	      _id,
2025-09-17T00:40:00.58813Z	      name,
2025-09-17T00:40:00.588213Z	      "slug": slug.current,
2025-09-17T00:40:00.588321Z	      logo
2025-09-17T00:40:00.58844Z	    },
2025-09-17T00:40:00.588537Z	    targetMarket,
2025-09-17T00:40:00.588625Z	    complexity,
2025-09-17T00:40:00.588712Z	    publishedAt,
2025-09-17T00:40:00.588804Z	    isPublished,
2025-09-17T00:40:00.588885Z	    isFeatured,
2025-09-17T00:40:00.588977Z	    viewCount,
2025-09-17T00:40:00.58906Z	    _createdAt,
2025-09-17T00:40:00.589139Z	    _updatedAt
2025-09-17T00:40:00.589218Z	  
2025-09-17T00:40:00.589318Z	      },
2025-09-17T00:40:00.589413Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-17T00:40:00.589501Z	    }
2025-09-17T00:40:00.589586Z	  
2025-09-17T00:40:00.589665Z	Query parameters: {
2025-09-17T00:40:00.589747Z	  limit: 4,
2025-09-17T00:40:00.589825Z	  offset: 0,
2025-09-17T00:40:00.589905Z	  targetMarket: undefined,
2025-09-17T00:40:00.590012Z	  brand: 'ixys',
2025-09-17T00:40:00.590107Z	  featured: undefined
2025-09-17T00:40:00.590194Z	}
2025-09-17T00:40:00.590526Z	✅ [getBrandData] Found brand: IXYS
2025-09-17T00:40:00.590714Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:40:00.590837Z	Solutions fetch result: {
2025-09-17T00:40:00.590946Z	  totalSolutions: 1,
2025-09-17T00:40:00.591071Z	  fetchedSolutions: 1,
2025-09-17T00:40:00.591178Z	  firstSolution: {
2025-09-17T00:40:00.591343Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-17T00:40:00.591492Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-17T00:40:00.591604Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-17T00:40:00.591718Z	    complexity: 'medium',
2025-09-17T00:40:00.592313Z	    coverImage: null,
2025-09-17T00:40:00.592503Z	    description: [ [Object] ],
2025-09-17T00:40:00.592691Z	    isFeatured: false,
2025-09-17T00:40:00.592893Z	    isPublished: true,
2025-09-17T00:40:00.593288Z	    primaryBrand: {
2025-09-17T00:40:00.593687Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:40:00.593964Z	      logo: null,
2025-09-17T00:40:00.594087Z	      name: 'IXYS',
2025-09-17T00:40:00.594723Z	      slug: 'ixys'
2025-09-17T00:40:00.595347Z	    },
2025-09-17T00:40:00.595512Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-17T00:40:00.595635Z	    relatedBrands: null,
2025-09-17T00:40:00.595765Z	    slug: '99999',
2025-09-17T00:40:00.595878Z	    summary: '99999',
2025-09-17T00:40:00.595984Z	    targetMarket: 'industrial-automation',
2025-09-17T00:40:00.59609Z	    title: '99999',
2025-09-17T00:40:00.596191Z	    viewCount: 0
2025-09-17T00:40:00.596317Z	  }
2025-09-17T00:40:00.596435Z	}
2025-09-17T00:40:00.596549Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-17T00:40:00.596676Z	Fetching products with query: 
2025-09-17T00:40:00.596799Z	    {
2025-09-17T00:40:00.596915Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:00.597046Z	        
2025-09-17T00:40:00.597157Z	    _id,
2025-09-17T00:40:00.597307Z	    _type,
2025-09-17T00:40:00.597435Z	    partNumber,
2025-09-17T00:40:00.597755Z	    "slug": slug.current,
2025-09-17T00:40:00.59796Z	    title,
2025-09-17T00:40:00.600402Z	    shortDescription,
2025-09-17T00:40:00.600533Z	    image,
2025-09-17T00:40:00.600666Z	    brand->{
2025-09-17T00:40:00.601029Z	      name,
2025-09-17T00:40:00.601154Z	      "slug": slug.current,
2025-09-17T00:40:00.601651Z	      logo
2025-09-17T00:40:00.601774Z	    },
2025-09-17T00:40:00.601875Z	    category->{
2025-09-17T00:40:00.601971Z	      name,
2025-09-17T00:40:00.602059Z	      "slug": slug.current
2025-09-17T00:40:00.602514Z	    },
2025-09-17T00:40:00.602884Z	    pricing{
2025-09-17T00:40:00.603206Z	      currency,
2025-09-17T00:40:00.603519Z	      tiers[]{
2025-09-17T00:40:00.603836Z	        quantity,
2025-09-17T00:40:00.605407Z	        price,
2025-09-17T00:40:00.605513Z	        unit
2025-09-17T00:40:00.605578Z	      },
2025-09-17T00:40:00.605635Z	      moq,
2025-09-17T00:40:00.605717Z	      leadTime,
2025-09-17T00:40:00.605827Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:00.605903Z	      "price": tiers[0].price,
2025-09-17T00:40:00.605967Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:00.606023Z	    },
2025-09-17T00:40:00.606077Z	    inventory{
2025-09-17T00:40:00.606133Z	      quantity,
2025-09-17T00:40:00.606186Z	      status,
2025-09-17T00:40:00.60624Z	      warehouse,
2025-09-17T00:40:00.606411Z	      lastUpdated,
2025-09-17T00:40:00.60686Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:00.607115Z	      "inStock": status == "in_stock",
2025-09-17T00:40:00.60735Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:00.607608Z	    },
2025-09-17T00:40:00.607823Z	    isActive,
2025-09-17T00:40:00.608118Z	    isFeatured,
2025-09-17T00:40:00.608343Z	    isNew,
2025-09-17T00:40:00.608485Z	    _createdAt,
2025-09-17T00:40:00.608601Z	    _updatedAt
2025-09-17T00:40:00.608678Z	  
2025-09-17T00:40:00.608739Z	      },
2025-09-17T00:40:00.608818Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-17T00:40:00.60897Z	    }
2025-09-17T00:40:00.609077Z	  
2025-09-17T00:40:00.6094Z	Query parameters: {
2025-09-17T00:40:00.609718Z	  limit: 8,
2025-09-17T00:40:00.60982Z	  offset: 0,
2025-09-17T00:40:00.610005Z	  category: undefined,
2025-09-17T00:40:00.610105Z	  brand: 'ixys',
2025-09-17T00:40:00.610198Z	  featured: undefined
2025-09-17T00:40:00.610331Z	}
2025-09-17T00:40:00.610428Z	Fetching solutions with query: 
2025-09-17T00:40:00.610548Z	    {
2025-09-17T00:40:00.610648Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:00.610776Z	        
2025-09-17T00:40:00.610863Z	    _id,
2025-09-17T00:40:00.610954Z	    title,
2025-09-17T00:40:00.611078Z	    "slug": slug.current,
2025-09-17T00:40:00.611173Z	    summary,
2025-09-17T00:40:00.61131Z	    description,
2025-09-17T00:40:00.611396Z	    coverImage,
2025-09-17T00:40:00.611507Z	    primaryBrand->{
2025-09-17T00:40:00.611605Z	      _id,
2025-09-17T00:40:00.6117Z	      name,
2025-09-17T00:40:00.611785Z	      "slug": slug.current,
2025-09-17T00:40:00.611888Z	      logo
2025-09-17T00:40:00.612Z	    },
2025-09-17T00:40:00.612119Z	    relatedBrands[]->{
2025-09-17T00:40:00.61221Z	      _id,
2025-09-17T00:40:00.612344Z	      name,
2025-09-17T00:40:00.612556Z	      "slug": slug.current,
2025-09-17T00:40:00.612685Z	      logo
2025-09-17T00:40:00.612752Z	    },
2025-09-17T00:40:00.612876Z	    targetMarket,
2025-09-17T00:40:00.612993Z	    complexity,
2025-09-17T00:40:00.613109Z	    publishedAt,
2025-09-17T00:40:00.613228Z	    isPublished,
2025-09-17T00:40:00.613368Z	    isFeatured,
2025-09-17T00:40:00.613526Z	    viewCount,
2025-09-17T00:40:00.613745Z	    _createdAt,
2025-09-17T00:40:00.613892Z	    _updatedAt
2025-09-17T00:40:00.614023Z	  
2025-09-17T00:40:00.614165Z	      },
2025-09-17T00:40:00.614309Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-17T00:40:00.614462Z	    }
2025-09-17T00:40:00.614586Z	  
2025-09-17T00:40:00.614728Z	Query parameters: {
2025-09-17T00:40:00.614889Z	  limit: 4,
2025-09-17T00:40:00.615109Z	  offset: 0,
2025-09-17T00:40:00.61526Z	  targetMarket: undefined,
2025-09-17T00:40:00.615413Z	  brand: 'ixys',
2025-09-17T00:40:00.615573Z	  featured: undefined
2025-09-17T00:40:00.615745Z	}
2025-09-17T00:40:00.615877Z	✅ [getBrandData] Found brand: IXYS
2025-09-17T00:40:00.615997Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:40:00.616125Z	Solutions fetch result: {
2025-09-17T00:40:00.61625Z	  totalSolutions: 1,
2025-09-17T00:40:00.616395Z	  fetchedSolutions: 1,
2025-09-17T00:40:00.616505Z	  firstSolution: {
2025-09-17T00:40:00.616605Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-17T00:40:00.616719Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-17T00:40:00.616826Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-17T00:40:00.616934Z	    complexity: 'medium',
2025-09-17T00:40:00.617036Z	    coverImage: null,
2025-09-17T00:40:00.617137Z	    description: [ [Object] ],
2025-09-17T00:40:00.617245Z	    isFeatured: false,
2025-09-17T00:40:00.61738Z	    isPublished: true,
2025-09-17T00:40:00.617499Z	    primaryBrand: {
2025-09-17T00:40:00.617607Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:40:00.617724Z	      logo: null,
2025-09-17T00:40:00.617827Z	      name: 'IXYS',
2025-09-17T00:40:00.61792Z	      slug: 'ixys'
2025-09-17T00:40:00.618037Z	    },
2025-09-17T00:40:00.618146Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-17T00:40:00.618325Z	    relatedBrands: null,
2025-09-17T00:40:00.618449Z	    slug: '99999',
2025-09-17T00:40:00.618559Z	    summary: '99999',
2025-09-17T00:40:00.618684Z	    targetMarket: 'industrial-automation',
2025-09-17T00:40:00.618813Z	    title: '99999',
2025-09-17T00:40:00.618934Z	    viewCount: 0
2025-09-17T00:40:00.61906Z	  }
2025-09-17T00:40:00.619179Z	}
2025-09-17T00:40:00.619309Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-17T00:40:00.619422Z	Fetching products with query: 
2025-09-17T00:40:00.619522Z	    {
2025-09-17T00:40:00.619629Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:00.619767Z	        
2025-09-17T00:40:00.62033Z	    _id,
2025-09-17T00:40:00.620838Z	    _type,
2025-09-17T00:40:00.620993Z	    partNumber,
2025-09-17T00:40:00.621313Z	    "slug": slug.current,
2025-09-17T00:40:00.62165Z	    title,
2025-09-17T00:40:00.622178Z	    shortDescription,
2025-09-17T00:40:00.622663Z	    image,
2025-09-17T00:40:00.623156Z	    brand->{
2025-09-17T00:40:00.623638Z	      name,
2025-09-17T00:40:00.623886Z	      "slug": slug.current,
2025-09-17T00:40:00.624088Z	      logo
2025-09-17T00:40:00.624242Z	    },
2025-09-17T00:40:00.624381Z	    category->{
2025-09-17T00:40:00.624502Z	      name,
2025-09-17T00:40:00.624618Z	      "slug": slug.current
2025-09-17T00:40:00.624738Z	    },
2025-09-17T00:40:00.624897Z	    pricing{
2025-09-17T00:40:00.625026Z	      currency,
2025-09-17T00:40:00.625149Z	      tiers[]{
2025-09-17T00:40:00.625301Z	        quantity,
2025-09-17T00:40:00.625408Z	        price,
2025-09-17T00:40:00.62552Z	        unit
2025-09-17T00:40:00.625629Z	      },
2025-09-17T00:40:00.625748Z	      moq,
2025-09-17T00:40:00.625856Z	      leadTime,
2025-09-17T00:40:00.625961Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:00.626071Z	      "price": tiers[0].price,
2025-09-17T00:40:00.626171Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:00.626288Z	    },
2025-09-17T00:40:00.626398Z	    inventory{
2025-09-17T00:40:00.6265Z	      quantity,
2025-09-17T00:40:00.627177Z	      status,
2025-09-17T00:40:00.627355Z	      warehouse,
2025-09-17T00:40:00.627585Z	      lastUpdated,
2025-09-17T00:40:00.627724Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:00.627863Z	      "inStock": status == "in_stock",
2025-09-17T00:40:00.627975Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:00.628083Z	    },
2025-09-17T00:40:00.628189Z	    isActive,
2025-09-17T00:40:00.628308Z	    isFeatured,
2025-09-17T00:40:00.628415Z	    isNew,
2025-09-17T00:40:00.628508Z	    _createdAt,
2025-09-17T00:40:00.628605Z	    _updatedAt
2025-09-17T00:40:00.628811Z	  
2025-09-17T00:40:00.629856Z	      },
2025-09-17T00:40:00.630194Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-17T00:40:00.6304Z	    }
2025-09-17T00:40:00.630598Z	  
2025-09-17T00:40:00.630883Z	Query parameters: {
2025-09-17T00:40:00.631132Z	  limit: 8,
2025-09-17T00:40:00.631495Z	  offset: 0,
2025-09-17T00:40:00.631874Z	  category: undefined,
2025-09-17T00:40:00.632114Z	  brand: 'Electronicon',
2025-09-17T00:40:00.632403Z	  featured: undefined
2025-09-17T00:40:00.632611Z	}
2025-09-17T00:40:00.632828Z	Fetching solutions with query: 
2025-09-17T00:40:00.63313Z	    {
2025-09-17T00:40:00.633398Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:00.633557Z	        
2025-09-17T00:40:00.633829Z	    _id,
2025-09-17T00:40:00.633963Z	    title,
2025-09-17T00:40:00.63412Z	    "slug": slug.current,
2025-09-17T00:40:00.634385Z	    summary,
2025-09-17T00:40:00.63465Z	    description,
2025-09-17T00:40:00.634989Z	    coverImage,
2025-09-17T00:40:00.635322Z	    primaryBrand->{
2025-09-17T00:40:00.635667Z	      _id,
2025-09-17T00:40:00.636006Z	      name,
2025-09-17T00:40:00.636356Z	      "slug": slug.current,
2025-09-17T00:40:00.636805Z	      logo
2025-09-17T00:40:00.637168Z	    },
2025-09-17T00:40:00.637597Z	    relatedBrands[]->{
2025-09-17T00:40:00.637928Z	      _id,
2025-09-17T00:40:00.638054Z	      name,
2025-09-17T00:40:00.638167Z	      "slug": slug.current,
2025-09-17T00:40:00.638292Z	      logo
2025-09-17T00:40:00.63842Z	    },
2025-09-17T00:40:00.638553Z	    targetMarket,
2025-09-17T00:40:00.638666Z	    complexity,
2025-09-17T00:40:00.638773Z	    publishedAt,
2025-09-17T00:40:00.638869Z	    isPublished,
2025-09-17T00:40:00.638985Z	    isFeatured,
2025-09-17T00:40:00.639102Z	    viewCount,
2025-09-17T00:40:00.639215Z	    _createdAt,
2025-09-17T00:40:00.639344Z	    _updatedAt
2025-09-17T00:40:00.639448Z	  
2025-09-17T00:40:00.639557Z	      },
2025-09-17T00:40:00.639664Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-17T00:40:00.639782Z	    }
2025-09-17T00:40:00.639888Z	  
2025-09-17T00:40:00.640036Z	Query parameters: {
2025-09-17T00:40:00.640143Z	  limit: 4,
2025-09-17T00:40:00.64024Z	  offset: 0,
2025-09-17T00:40:00.640356Z	  targetMarket: undefined,
2025-09-17T00:40:00.640457Z	  brand: 'Electronicon',
2025-09-17T00:40:00.640556Z	  featured: undefined
2025-09-17T00:40:00.640653Z	}
2025-09-17T00:40:00.64075Z	🔍 [getBrandData] Searching for brand with slug: Electronicon
2025-09-17T00:40:00.640844Z	Fetching products with query: 
2025-09-17T00:40:00.640949Z	    {
2025-09-17T00:40:00.641054Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:00.641151Z	        
2025-09-17T00:40:00.641238Z	    _id,
2025-09-17T00:40:00.641349Z	    _type,
2025-09-17T00:40:00.641438Z	    partNumber,
2025-09-17T00:40:00.641524Z	    "slug": slug.current,
2025-09-17T00:40:00.641613Z	    title,
2025-09-17T00:40:00.641704Z	    shortDescription,
2025-09-17T00:40:00.641795Z	    image,
2025-09-17T00:40:00.641895Z	    brand->{
2025-09-17T00:40:00.641997Z	      name,
2025-09-17T00:40:00.64209Z	      "slug": slug.current,
2025-09-17T00:40:00.642257Z	      logo
2025-09-17T00:40:00.642567Z	    },
2025-09-17T00:40:00.642728Z	    category->{
2025-09-17T00:40:00.643014Z	      name,
2025-09-17T00:40:00.643185Z	      "slug": slug.current
2025-09-17T00:40:00.643333Z	    },
2025-09-17T00:40:00.643447Z	    pricing{
2025-09-17T00:40:00.643829Z	      currency,
2025-09-17T00:40:00.644057Z	      tiers[]{
2025-09-17T00:40:00.644216Z	        quantity,
2025-09-17T00:40:00.644451Z	        price,
2025-09-17T00:40:00.644611Z	        unit
2025-09-17T00:40:00.644734Z	      },
2025-09-17T00:40:00.644838Z	      moq,
2025-09-17T00:40:00.644936Z	      leadTime,
2025-09-17T00:40:00.645035Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:00.645133Z	      "price": tiers[0].price,
2025-09-17T00:40:00.645225Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:00.645349Z	    },
2025-09-17T00:40:00.64546Z	    inventory{
2025-09-17T00:40:00.645581Z	      quantity,
2025-09-17T00:40:00.645707Z	      status,
2025-09-17T00:40:00.645822Z	      warehouse,
2025-09-17T00:40:00.645932Z	      lastUpdated,
2025-09-17T00:40:00.646045Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:00.646155Z	      "inStock": status == "in_stock",
2025-09-17T00:40:00.646256Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:00.646393Z	    },
2025-09-17T00:40:00.646503Z	    isActive,
2025-09-17T00:40:00.646645Z	    isFeatured,
2025-09-17T00:40:00.646876Z	    isNew,
2025-09-17T00:40:00.647019Z	    _createdAt,
2025-09-17T00:40:00.647189Z	    _updatedAt
2025-09-17T00:40:00.64736Z	  
2025-09-17T00:40:00.647495Z	      },
2025-09-17T00:40:00.647624Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "Electronicon"])
2025-09-17T00:40:00.647732Z	    }
2025-09-17T00:40:00.647798Z	  
2025-09-17T00:40:00.647856Z	Query parameters: {
2025-09-17T00:40:00.647917Z	  limit: 8,
2025-09-17T00:40:00.647972Z	  offset: 0,
2025-09-17T00:40:00.648026Z	  category: undefined,
2025-09-17T00:40:00.648081Z	  brand: 'Electronicon',
2025-09-17T00:40:00.648141Z	  featured: undefined
2025-09-17T00:40:00.648196Z	}
2025-09-17T00:40:00.648249Z	Fetching solutions with query: 
2025-09-17T00:40:00.648337Z	    {
2025-09-17T00:40:00.648397Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:00.648462Z	        
2025-09-17T00:40:00.648516Z	    _id,
2025-09-17T00:40:00.648569Z	    title,
2025-09-17T00:40:00.648621Z	    "slug": slug.current,
2025-09-17T00:40:00.648677Z	    summary,
2025-09-17T00:40:00.64873Z	    description,
2025-09-17T00:40:00.648786Z	    coverImage,
2025-09-17T00:40:00.648838Z	    primaryBrand->{
2025-09-17T00:40:00.64889Z	      _id,
2025-09-17T00:40:00.648954Z	      name,
2025-09-17T00:40:00.649014Z	      "slug": slug.current,
2025-09-17T00:40:00.649067Z	      logo
2025-09-17T00:40:00.649122Z	    },
2025-09-17T00:40:00.649175Z	    relatedBrands[]->{
2025-09-17T00:40:00.649228Z	      _id,
2025-09-17T00:40:00.687828Z	      name,
2025-09-17T00:40:00.688256Z	      "slug": slug.current,
2025-09-17T00:40:00.700213Z	      logo
2025-09-17T00:40:00.700997Z	    },
2025-09-17T00:40:00.701174Z	    targetMarket,
2025-09-17T00:40:00.701336Z	    complexity,
2025-09-17T00:40:00.701465Z	    publishedAt,
2025-09-17T00:40:00.701839Z	    isPublished,
2025-09-17T00:40:00.70224Z	    isFeatured,
2025-09-17T00:40:00.703637Z	    viewCount,
2025-09-17T00:40:00.703801Z	    _createdAt,
2025-09-17T00:40:00.703907Z	    _updatedAt
2025-09-17T00:40:00.704006Z	  
2025-09-17T00:40:00.704099Z	      },
2025-09-17T00:40:00.704198Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("Electronicon" in relatedBrands[]->slug.current || primaryBrand->slug.current == "Electronicon")])
2025-09-17T00:40:00.70431Z	    }
2025-09-17T00:40:00.704412Z	  
2025-09-17T00:40:00.704515Z	Query parameters: {
2025-09-17T00:40:00.704616Z	  limit: 4,
2025-09-17T00:40:00.70472Z	  offset: 0,
2025-09-17T00:40:00.704814Z	  targetMarket: undefined,
2025-09-17T00:40:00.704904Z	  brand: 'Electronicon',
2025-09-17T00:40:00.705016Z	  featured: undefined
2025-09-17T00:40:00.705112Z	}
2025-09-17T00:40:00.705208Z	Products fetch result: {
2025-09-17T00:40:00.705577Z	  totalProducts: 2,
2025-09-17T00:40:00.705736Z	  fetchedProducts: 2,
2025-09-17T00:40:00.705865Z	  firstProduct: {
2025-09-17T00:40:00.705972Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-17T00:40:00.706074Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-17T00:40:00.706168Z	    _type: 'product',
2025-09-17T00:40:00.706259Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-17T00:40:00.706381Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-17T00:40:00.706566Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-17T00:40:00.706902Z	    image: null,
2025-09-17T00:40:00.707044Z	    inventory: {
2025-09-17T00:40:00.707168Z	      inStock: true,
2025-09-17T00:40:00.707328Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-17T00:40:00.70748Z	      quantity: 0,
2025-09-17T00:40:00.707602Z	      status: 'in_stock',
2025-09-17T00:40:00.707759Z	      warehouse: null
2025-09-17T00:40:00.707888Z	    },
2025-09-17T00:40:00.707994Z	    isActive: true,
2025-09-17T00:40:00.708089Z	    isFeatured: false,
2025-09-17T00:40:00.708184Z	    isNew: false,
2025-09-17T00:40:00.708301Z	    partNumber: '99999',
2025-09-17T00:40:00.70842Z	    pricing: {
2025-09-17T00:40:00.70851Z	      currency: 'CNY',
2025-09-17T00:40:00.708597Z	      leadTime: null,
2025-09-17T00:40:00.708694Z	      moq: null,
2025-09-17T00:40:00.708863Z	      price: null,
2025-09-17T00:40:00.709323Z	      tiers: null
2025-09-17T00:40:00.709914Z	    },
2025-09-17T00:40:00.710044Z	    shortDescription: null,
2025-09-17T00:40:00.710221Z	    slug: '99999',
2025-09-17T00:40:00.710329Z	    title: '99999'
2025-09-17T00:40:00.710415Z	  }
2025-09-17T00:40:00.710516Z	}
2025-09-17T00:40:00.71065Z	Products fetch result: {
2025-09-17T00:40:00.710769Z	  totalProducts: 2,
2025-09-17T00:40:00.710889Z	  fetchedProducts: 2,
2025-09-17T00:40:00.711068Z	  firstProduct: {
2025-09-17T00:40:00.711178Z	    _createdAt: '2025-09-16T22:13:44Z',
2025-09-17T00:40:00.711345Z	    _id: '163d8624-deb8-42a1-944a-af946f4247bc',
2025-09-17T00:40:00.711465Z	    _type: 'product',
2025-09-17T00:40:00.711543Z	    _updatedAt: '2025-09-16T22:14:21Z',
2025-09-17T00:40:00.711647Z	    brand: { logo: null, name: 'Electronicon', slug: 'Electronicon' },
2025-09-17T00:40:00.711745Z	    category: { name: '电容', slug: 'capacitor' },
2025-09-17T00:40:00.711834Z	    image: null,
2025-09-17T00:40:00.711923Z	    inventory: {
2025-09-17T00:40:00.712011Z	      inStock: true,
2025-09-17T00:40:00.712328Z	      lastUpdated: '2025-09-16T22:13:40.823Z',
2025-09-17T00:40:00.712798Z	      quantity: 0,
2025-09-17T00:40:00.712924Z	      status: 'in_stock',
2025-09-17T00:40:00.713035Z	      warehouse: null
2025-09-17T00:40:00.718467Z	    },
2025-09-17T00:40:00.718601Z	    isActive: true,
2025-09-17T00:40:00.718717Z	    isFeatured: false,
2025-09-17T00:40:00.71882Z	    isNew: false,
2025-09-17T00:40:00.718981Z	    partNumber: '99999',
2025-09-17T00:40:00.71916Z	    pricing: {
2025-09-17T00:40:00.719313Z	      currency: 'CNY',
2025-09-17T00:40:00.71946Z	      leadTime: null,
2025-09-17T00:40:00.71958Z	      moq: null,
2025-09-17T00:40:00.719705Z	      price: null,
2025-09-17T00:40:00.719824Z	      tiers: null
2025-09-17T00:40:00.719922Z	    },
2025-09-17T00:40:00.720069Z	    shortDescription: null,
2025-09-17T00:40:00.720217Z	    slug: '99999',
2025-09-17T00:40:00.720485Z	    title: '99999'
2025-09-17T00:40:00.720615Z	  }
2025-09-17T00:40:00.720717Z	}
2025-09-17T00:40:00.720815Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:40:00.720919Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:40:00.721004Z	✅ [getBrandData] Found brand: Electronicon
2025-09-17T00:40:00.721123Z	✅ [getBrandData] Found brand: Electronicon
2025-09-17T00:40:00.721398Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-17T00:40:00.721527Z	Fetching products with query: 
2025-09-17T00:40:00.722588Z	    {
2025-09-17T00:40:00.72275Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:00.722862Z	        
2025-09-17T00:40:00.722977Z	    _id,
2025-09-17T00:40:00.723095Z	    _type,
2025-09-17T00:40:00.723195Z	    partNumber,
2025-09-17T00:40:00.72331Z	    "slug": slug.current,
2025-09-17T00:40:00.723422Z	    title,
2025-09-17T00:40:00.723523Z	    shortDescription,
2025-09-17T00:40:00.723633Z	    image,
2025-09-17T00:40:00.723766Z	    brand->{
2025-09-17T00:40:00.723876Z	      name,
2025-09-17T00:40:00.723981Z	      "slug": slug.current,
2025-09-17T00:40:00.724087Z	      logo
2025-09-17T00:40:00.72419Z	    },
2025-09-17T00:40:00.72431Z	    category->{
2025-09-17T00:40:00.724425Z	      name,
2025-09-17T00:40:00.724526Z	      "slug": slug.current
2025-09-17T00:40:00.724614Z	    },
2025-09-17T00:40:00.724714Z	    pricing{
2025-09-17T00:40:00.724814Z	      currency,
2025-09-17T00:40:00.724919Z	      tiers[]{
2025-09-17T00:40:00.725042Z	        quantity,
2025-09-17T00:40:00.725159Z	        price,
2025-09-17T00:40:00.725261Z	        unit
2025-09-17T00:40:00.725386Z	      },
2025-09-17T00:40:00.725491Z	      moq,
2025-09-17T00:40:00.72559Z	      leadTime,
2025-09-17T00:40:00.725693Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:00.7258Z	      "price": tiers[0].price,
2025-09-17T00:40:00.725924Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:00.725995Z	    },
2025-09-17T00:40:00.726079Z	    inventory{
2025-09-17T00:40:00.726172Z	      quantity,
2025-09-17T00:40:00.726234Z	      status,
2025-09-17T00:40:00.726611Z	      warehouse,
2025-09-17T00:40:00.72672Z	      lastUpdated,
2025-09-17T00:40:00.726829Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:00.726943Z	      "inStock": status == "in_stock",
2025-09-17T00:40:00.727042Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:00.727138Z	    },
2025-09-17T00:40:00.727234Z	    isActive,
2025-09-17T00:40:00.727342Z	    isFeatured,
2025-09-17T00:40:00.727433Z	    isNew,
2025-09-17T00:40:00.727582Z	    _createdAt,
2025-09-17T00:40:00.727748Z	    _updatedAt
2025-09-17T00:40:00.727867Z	  
2025-09-17T00:40:00.727966Z	      },
2025-09-17T00:40:00.728065Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-17T00:40:00.728169Z	    }
2025-09-17T00:40:00.728249Z	  
2025-09-17T00:40:00.728349Z	Query parameters: {
2025-09-17T00:40:00.728441Z	  limit: 8,
2025-09-17T00:40:00.728531Z	  offset: 0,
2025-09-17T00:40:00.728614Z	  category: undefined,
2025-09-17T00:40:00.728716Z	  brand: 'epcos',
2025-09-17T00:40:00.728805Z	  featured: undefined
2025-09-17T00:40:00.728894Z	}
2025-09-17T00:40:00.728988Z	Fetching solutions with query: 
2025-09-17T00:40:00.729084Z	    {
2025-09-17T00:40:00.729174Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:00.729289Z	        
2025-09-17T00:40:00.729383Z	    _id,
2025-09-17T00:40:00.729472Z	    title,
2025-09-17T00:40:00.729563Z	    "slug": slug.current,
2025-09-17T00:40:00.730633Z	    summary,
2025-09-17T00:40:00.73075Z	    description,
2025-09-17T00:40:00.730852Z	    coverImage,
2025-09-17T00:40:00.730955Z	    primaryBrand->{
2025-09-17T00:40:00.731047Z	      _id,
2025-09-17T00:40:00.735029Z	      name,
2025-09-17T00:40:00.735233Z	      "slug": slug.current,
2025-09-17T00:40:00.735436Z	      logo
2025-09-17T00:40:00.73556Z	    },
2025-09-17T00:40:00.735667Z	    relatedBrands[]->{
2025-09-17T00:40:00.735783Z	      _id,
2025-09-17T00:40:00.735884Z	      name,
2025-09-17T00:40:00.735985Z	      "slug": slug.current,
2025-09-17T00:40:00.736109Z	      logo
2025-09-17T00:40:00.736209Z	    },
2025-09-17T00:40:00.736367Z	    targetMarket,
2025-09-17T00:40:00.736486Z	    complexity,
2025-09-17T00:40:00.736587Z	    publishedAt,
2025-09-17T00:40:00.736691Z	    isPublished,
2025-09-17T00:40:00.736933Z	    isFeatured,
2025-09-17T00:40:00.737104Z	    viewCount,
2025-09-17T00:40:00.73728Z	    _createdAt,
2025-09-17T00:40:00.737418Z	    _updatedAt
2025-09-17T00:40:00.737567Z	  
2025-09-17T00:40:00.737652Z	      },
2025-09-17T00:40:00.737782Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-17T00:40:00.737952Z	    }
2025-09-17T00:40:00.742335Z	  
2025-09-17T00:40:00.742572Z	Query parameters: {
2025-09-17T00:40:00.742801Z	  limit: 4,
2025-09-17T00:40:00.772211Z	  offset: 0,
2025-09-17T00:40:00.772486Z	  targetMarket: undefined,
2025-09-17T00:40:00.772644Z	  brand: 'epcos',
2025-09-17T00:40:00.772772Z	  featured: undefined
2025-09-17T00:40:00.772888Z	}
2025-09-17T00:40:00.772996Z	✅ [getBrandData] Found brand: Epcos
2025-09-17T00:40:00.773119Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:40:00.773225Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:40:00.787543Z	🔍 [getBrandData] Searching for brand with slug: epcos
2025-09-17T00:40:00.787705Z	Fetching products with query: 
2025-09-17T00:40:00.787815Z	    {
2025-09-17T00:40:00.787917Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:00.788019Z	        
2025-09-17T00:40:00.788163Z	    _id,
2025-09-17T00:40:00.78844Z	    _type,
2025-09-17T00:40:00.78856Z	    partNumber,
2025-09-17T00:40:00.788666Z	    "slug": slug.current,
2025-09-17T00:40:00.788789Z	    title,
2025-09-17T00:40:00.788893Z	    shortDescription,
2025-09-17T00:40:00.788992Z	    image,
2025-09-17T00:40:00.789093Z	    brand->{
2025-09-17T00:40:00.789198Z	      name,
2025-09-17T00:40:00.790711Z	      "slug": slug.current,
2025-09-17T00:40:00.790867Z	      logo
2025-09-17T00:40:00.790976Z	    },
2025-09-17T00:40:00.791089Z	    category->{
2025-09-17T00:40:00.791191Z	      name,
2025-09-17T00:40:00.791317Z	      "slug": slug.current
2025-09-17T00:40:00.791424Z	    },
2025-09-17T00:40:00.791539Z	    pricing{
2025-09-17T00:40:00.791648Z	      currency,
2025-09-17T00:40:00.791744Z	      tiers[]{
2025-09-17T00:40:00.791859Z	        quantity,
2025-09-17T00:40:00.791964Z	        price,
2025-09-17T00:40:00.792064Z	        unit
2025-09-17T00:40:00.79216Z	      },
2025-09-17T00:40:00.792253Z	      moq,
2025-09-17T00:40:00.793039Z	      leadTime,
2025-09-17T00:40:00.793146Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:00.79324Z	      "price": tiers[0].price,
2025-09-17T00:40:00.793364Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:00.793451Z	    },
2025-09-17T00:40:00.793587Z	    inventory{
2025-09-17T00:40:00.793878Z	      quantity,
2025-09-17T00:40:00.794168Z	      status,
2025-09-17T00:40:00.794333Z	      warehouse,
2025-09-17T00:40:00.794462Z	      lastUpdated,
2025-09-17T00:40:00.795916Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:00.796129Z	      "inStock": status == "in_stock",
2025-09-17T00:40:00.79629Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:00.796453Z	    },
2025-09-17T00:40:00.796603Z	    isActive,
2025-09-17T00:40:00.796786Z	    isFeatured,
2025-09-17T00:40:00.796959Z	    isNew,
2025-09-17T00:40:00.797116Z	    _createdAt,
2025-09-17T00:40:00.797262Z	    _updatedAt
2025-09-17T00:40:00.797427Z	  
2025-09-17T00:40:00.797562Z	      },
2025-09-17T00:40:00.797725Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "epcos"])
2025-09-17T00:40:00.797912Z	    }
2025-09-17T00:40:00.79805Z	  
2025-09-17T00:40:00.798201Z	Query parameters: {
2025-09-17T00:40:00.798394Z	  limit: 8,
2025-09-17T00:40:00.798559Z	  offset: 0,
2025-09-17T00:40:00.798716Z	  category: undefined,
2025-09-17T00:40:00.798853Z	  brand: 'epcos',
2025-09-17T00:40:00.799006Z	  featured: undefined
2025-09-17T00:40:00.799164Z	}
2025-09-17T00:40:00.79933Z	Fetching solutions with query: 
2025-09-17T00:40:00.79949Z	    {
2025-09-17T00:40:00.799653Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:00.799854Z	        
2025-09-17T00:40:00.800011Z	    _id,
2025-09-17T00:40:00.800386Z	    title,
2025-09-17T00:40:00.801421Z	    "slug": slug.current,
2025-09-17T00:40:00.801609Z	    summary,
2025-09-17T00:40:00.801749Z	    description,
2025-09-17T00:40:00.804015Z	    coverImage,
2025-09-17T00:40:00.804165Z	    primaryBrand->{
2025-09-17T00:40:00.804315Z	      _id,
2025-09-17T00:40:00.804443Z	      name,
2025-09-17T00:40:00.804565Z	      "slug": slug.current,
2025-09-17T00:40:00.804694Z	      logo
2025-09-17T00:40:00.804813Z	    },
2025-09-17T00:40:00.804941Z	    relatedBrands[]->{
2025-09-17T00:40:00.805064Z	      _id,
2025-09-17T00:40:00.805184Z	      name,
2025-09-17T00:40:00.805325Z	      "slug": slug.current,
2025-09-17T00:40:00.805448Z	      logo
2025-09-17T00:40:00.80557Z	    },
2025-09-17T00:40:00.80567Z	    targetMarket,
2025-09-17T00:40:00.805781Z	    complexity,
2025-09-17T00:40:00.80588Z	    publishedAt,
2025-09-17T00:40:00.805975Z	    isPublished,
2025-09-17T00:40:00.806069Z	    isFeatured,
2025-09-17T00:40:00.806176Z	    viewCount,
2025-09-17T00:40:00.806292Z	    _createdAt,
2025-09-17T00:40:00.806401Z	    _updatedAt
2025-09-17T00:40:00.808626Z	  
2025-09-17T00:40:00.808919Z	      },
2025-09-17T00:40:00.809037Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("epcos" in relatedBrands[]->slug.current || primaryBrand->slug.current == "epcos")])
2025-09-17T00:40:00.809194Z	    }
2025-09-17T00:40:00.82308Z	  
2025-09-17T00:40:00.82321Z	Query parameters: {
2025-09-17T00:40:00.823807Z	  limit: 4,
2025-09-17T00:40:00.824535Z	  offset: 0,
2025-09-17T00:40:00.824745Z	  targetMarket: undefined,
2025-09-17T00:40:00.824895Z	  brand: 'epcos',
2025-09-17T00:40:00.825017Z	  featured: undefined
2025-09-17T00:40:00.825126Z	}
2025-09-17T00:40:00.825257Z	✅ [getBrandData] Found brand: Epcos
2025-09-17T00:40:00.825403Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:40:00.825514Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:40:00.825622Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-17T00:40:00.825742Z	Fetching products with query: 
2025-09-17T00:40:00.82584Z	    {
2025-09-17T00:40:00.825932Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:00.826028Z	        
2025-09-17T00:40:00.826118Z	    _id,
2025-09-17T00:40:00.826209Z	    _type,
2025-09-17T00:40:00.826341Z	    partNumber,
2025-09-17T00:40:00.826454Z	    "slug": slug.current,
2025-09-17T00:40:00.826553Z	    title,
2025-09-17T00:40:00.826655Z	    shortDescription,
2025-09-17T00:40:00.826758Z	    image,
2025-09-17T00:40:00.826848Z	    brand->{
2025-09-17T00:40:00.826954Z	      name,
2025-09-17T00:40:00.827057Z	      "slug": slug.current,
2025-09-17T00:40:00.827157Z	      logo
2025-09-17T00:40:00.827257Z	    },
2025-09-17T00:40:00.827372Z	    category->{
2025-09-17T00:40:00.827478Z	      name,
2025-09-17T00:40:00.827583Z	      "slug": slug.current
2025-09-17T00:40:00.827698Z	    },
2025-09-17T00:40:00.827815Z	    pricing{
2025-09-17T00:40:00.827924Z	      currency,
2025-09-17T00:40:00.828038Z	      tiers[]{
2025-09-17T00:40:00.828143Z	        quantity,
2025-09-17T00:40:00.82824Z	        price,
2025-09-17T00:40:00.828371Z	        unit
2025-09-17T00:40:00.828563Z	      },
2025-09-17T00:40:00.828735Z	      moq,
2025-09-17T00:40:00.828867Z	      leadTime,
2025-09-17T00:40:00.829022Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:00.829154Z	      "price": tiers[0].price,
2025-09-17T00:40:00.829257Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:00.829386Z	    },
2025-09-17T00:40:00.829492Z	    inventory{
2025-09-17T00:40:00.829701Z	      quantity,
2025-09-17T00:40:00.829827Z	      status,
2025-09-17T00:40:00.829932Z	      warehouse,
2025-09-17T00:40:00.830053Z	      lastUpdated,
2025-09-17T00:40:00.830158Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:00.830307Z	      "inStock": status == "in_stock",
2025-09-17T00:40:00.830422Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:00.830528Z	    },
2025-09-17T00:40:00.830634Z	    isActive,
2025-09-17T00:40:00.830757Z	    isFeatured,
2025-09-17T00:40:00.830865Z	    isNew,
2025-09-17T00:40:00.830986Z	    _createdAt,
2025-09-17T00:40:00.831099Z	    _updatedAt
2025-09-17T00:40:00.831201Z	  
2025-09-17T00:40:00.831315Z	      },
2025-09-17T00:40:00.831444Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-17T00:40:00.831811Z	    }
2025-09-17T00:40:00.832067Z	  
2025-09-17T00:40:00.832175Z	Query parameters: {
2025-09-17T00:40:00.832249Z	  limit: 8,
2025-09-17T00:40:00.832533Z	  offset: 0,
2025-09-17T00:40:00.832751Z	  category: undefined,
2025-09-17T00:40:00.833015Z	  brand: 'semikron',
2025-09-17T00:40:00.833218Z	  featured: undefined
2025-09-17T00:40:00.833529Z	}
2025-09-17T00:40:00.83383Z	Fetching solutions with query: 
2025-09-17T00:40:00.834114Z	    {
2025-09-17T00:40:00.834436Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:00.834705Z	        
2025-09-17T00:40:00.834836Z	    _id,
2025-09-17T00:40:00.834957Z	    title,
2025-09-17T00:40:00.835036Z	    "slug": slug.current,
2025-09-17T00:40:00.835124Z	    summary,
2025-09-17T00:40:00.835387Z	    description,
2025-09-17T00:40:00.835512Z	    coverImage,
2025-09-17T00:40:00.835628Z	    primaryBrand->{
2025-09-17T00:40:00.835744Z	      _id,
2025-09-17T00:40:00.835871Z	      name,
2025-09-17T00:40:00.835983Z	      "slug": slug.current,
2025-09-17T00:40:00.836093Z	      logo
2025-09-17T00:40:00.836202Z	    },
2025-09-17T00:40:00.83633Z	    relatedBrands[]->{
2025-09-17T00:40:00.836448Z	      _id,
2025-09-17T00:40:00.836563Z	      name,
2025-09-17T00:40:00.836679Z	      "slug": slug.current,
2025-09-17T00:40:00.836799Z	      logo
2025-09-17T00:40:00.836917Z	    },
2025-09-17T00:40:00.837023Z	    targetMarket,
2025-09-17T00:40:00.837173Z	    complexity,
2025-09-17T00:40:00.837341Z	    publishedAt,
2025-09-17T00:40:00.837515Z	    isPublished,
2025-09-17T00:40:00.837664Z	    isFeatured,
2025-09-17T00:40:00.837869Z	    viewCount,
2025-09-17T00:40:00.838105Z	    _createdAt,
2025-09-17T00:40:00.838232Z	    _updatedAt
2025-09-17T00:40:00.838435Z	  
2025-09-17T00:40:00.838607Z	      },
2025-09-17T00:40:00.838776Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-17T00:40:00.838948Z	    }
2025-09-17T00:40:00.839122Z	  
2025-09-17T00:40:00.839311Z	Query parameters: {
2025-09-17T00:40:00.839584Z	  limit: 4,
2025-09-17T00:40:00.841066Z	  offset: 0,
2025-09-17T00:40:00.841155Z	  targetMarket: undefined,
2025-09-17T00:40:00.841215Z	  brand: 'semikron',
2025-09-17T00:40:00.841301Z	  featured: undefined
2025-09-17T00:40:00.84137Z	}
2025-09-17T00:40:00.841427Z	✅ [getBrandData] Found brand: Semikron
2025-09-17T00:40:00.84149Z	Products fetch result: {
2025-09-17T00:40:00.841547Z	  totalProducts: 1,
2025-09-17T00:40:00.8416Z	  fetchedProducts: 1,
2025-09-17T00:40:00.841653Z	  firstProduct: {
2025-09-17T00:40:00.841719Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-17T00:40:00.841779Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-17T00:40:00.841833Z	    _type: 'product',
2025-09-17T00:40:00.841887Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-17T00:40:00.850297Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-17T00:40:00.8505Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:40:00.850725Z	    image: null,
2025-09-17T00:40:00.850866Z	    inventory: {
2025-09-17T00:40:00.850982Z	      inStock: true,
2025-09-17T00:40:00.851083Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-17T00:40:00.851186Z	      quantity: 0,
2025-09-17T00:40:00.851305Z	      status: 'in_stock',
2025-09-17T00:40:00.851402Z	      warehouse: null
2025-09-17T00:40:00.851491Z	    },
2025-09-17T00:40:00.851588Z	    isActive: true,
2025-09-17T00:40:00.851714Z	    isFeatured: false,
2025-09-17T00:40:00.851822Z	    isNew: false,
2025-09-17T00:40:00.851915Z	    partNumber: 'SKKT106/16E',
2025-09-17T00:40:00.852004Z	    pricing: {
2025-09-17T00:40:00.852094Z	      currency: 'CNY',
2025-09-17T00:40:00.852188Z	      leadTime: null,
2025-09-17T00:40:00.85232Z	      moq: null,
2025-09-17T00:40:00.852429Z	      price: null,
2025-09-17T00:40:00.852561Z	      tiers: null
2025-09-17T00:40:00.853195Z	    },
2025-09-17T00:40:00.853331Z	    shortDescription: 'SKKT106/16E',
2025-09-17T00:40:00.853396Z	    slug: 'SKKT106/16E',
2025-09-17T00:40:00.853453Z	    title: 'SKKT106/16E'
2025-09-17T00:40:00.853511Z	  }
2025-09-17T00:40:00.853567Z	}
2025-09-17T00:40:00.853621Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:40:00.853677Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-17T00:40:00.853734Z	Fetching products with query: 
2025-09-17T00:40:00.853788Z	    {
2025-09-17T00:40:00.853851Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:00.853909Z	        
2025-09-17T00:40:00.853962Z	    _id,
2025-09-17T00:40:00.854023Z	    _type,
2025-09-17T00:40:00.854077Z	    partNumber,
2025-09-17T00:40:00.854136Z	    "slug": slug.current,
2025-09-17T00:40:00.854191Z	    title,
2025-09-17T00:40:00.854244Z	    shortDescription,
2025-09-17T00:40:00.854311Z	    image,
2025-09-17T00:40:00.854365Z	    brand->{
2025-09-17T00:40:00.854422Z	      name,
2025-09-17T00:40:00.854476Z	      "slug": slug.current,
2025-09-17T00:40:00.854531Z	      logo
2025-09-17T00:40:00.854584Z	    },
2025-09-17T00:40:00.854636Z	    category->{
2025-09-17T00:40:00.85469Z	      name,
2025-09-17T00:40:00.854742Z	      "slug": slug.current
2025-09-17T00:40:00.854795Z	    },
2025-09-17T00:40:00.854852Z	    pricing{
2025-09-17T00:40:00.854906Z	      currency,
2025-09-17T00:40:00.854974Z	      tiers[]{
2025-09-17T00:40:00.855037Z	        quantity,
2025-09-17T00:40:00.855097Z	        price,
2025-09-17T00:40:00.855151Z	        unit
2025-09-17T00:40:00.855206Z	      },
2025-09-17T00:40:00.855259Z	      moq,
2025-09-17T00:40:00.858375Z	      leadTime,
2025-09-17T00:40:00.858536Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:00.858688Z	      "price": tiers[0].price,
2025-09-17T00:40:00.858818Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:00.85892Z	    },
2025-09-17T00:40:00.859026Z	    inventory{
2025-09-17T00:40:00.859137Z	      quantity,
2025-09-17T00:40:00.859243Z	      status,
2025-09-17T00:40:00.859365Z	      warehouse,
2025-09-17T00:40:00.859472Z	      lastUpdated,
2025-09-17T00:40:00.859577Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:00.85969Z	      "inStock": status == "in_stock",
2025-09-17T00:40:00.859798Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:00.8599Z	    },
2025-09-17T00:40:00.860004Z	    isActive,
2025-09-17T00:40:00.860108Z	    isFeatured,
2025-09-17T00:40:00.860209Z	    isNew,
2025-09-17T00:40:00.86034Z	    _createdAt,
2025-09-17T00:40:00.860453Z	    _updatedAt
2025-09-17T00:40:00.860553Z	  
2025-09-17T00:40:00.860661Z	      },
2025-09-17T00:40:00.860784Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-17T00:40:00.860887Z	    }
2025-09-17T00:40:00.860988Z	  
2025-09-17T00:40:00.861099Z	Query parameters: {
2025-09-17T00:40:00.861218Z	  limit: 8,
2025-09-17T00:40:00.861341Z	  offset: 0,
2025-09-17T00:40:00.861445Z	  category: undefined,
2025-09-17T00:40:00.861573Z	  brand: 'semikron',
2025-09-17T00:40:00.863409Z	  featured: undefined
2025-09-17T00:40:00.864373Z	}
2025-09-17T00:40:00.864528Z	Fetching solutions with query: 
2025-09-17T00:40:00.864644Z	    {
2025-09-17T00:40:00.864771Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:00.864889Z	        
2025-09-17T00:40:00.864989Z	    _id,
2025-09-17T00:40:00.865092Z	    title,
2025-09-17T00:40:00.86519Z	    "slug": slug.current,
2025-09-17T00:40:00.865331Z	    summary,
2025-09-17T00:40:00.865449Z	    description,
2025-09-17T00:40:00.865543Z	    coverImage,
2025-09-17T00:40:00.865656Z	    primaryBrand->{
2025-09-17T00:40:00.865767Z	      _id,
2025-09-17T00:40:00.865865Z	      name,
2025-09-17T00:40:00.865964Z	      "slug": slug.current,
2025-09-17T00:40:00.866068Z	      logo
2025-09-17T00:40:00.866174Z	    },
2025-09-17T00:40:00.866316Z	    relatedBrands[]->{
2025-09-17T00:40:00.866441Z	      _id,
2025-09-17T00:40:00.866569Z	      name,
2025-09-17T00:40:00.866688Z	      "slug": slug.current,
2025-09-17T00:40:00.866799Z	      logo
2025-09-17T00:40:00.866904Z	    },
2025-09-17T00:40:00.867006Z	    targetMarket,
2025-09-17T00:40:00.867116Z	    complexity,
2025-09-17T00:40:00.867222Z	    publishedAt,
2025-09-17T00:40:00.867463Z	    isPublished,
2025-09-17T00:40:00.867564Z	    isFeatured,
2025-09-17T00:40:00.867633Z	    viewCount,
2025-09-17T00:40:00.86858Z	    _createdAt,
2025-09-17T00:40:00.869705Z	    _updatedAt
2025-09-17T00:40:00.86985Z	  
2025-09-17T00:40:00.869968Z	      },
2025-09-17T00:40:00.870093Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-17T00:40:00.870214Z	    }
2025-09-17T00:40:00.870345Z	  
2025-09-17T00:40:00.870458Z	Query parameters: {
2025-09-17T00:40:00.870564Z	  limit: 4,
2025-09-17T00:40:00.870674Z	  offset: 0,
2025-09-17T00:40:00.870792Z	  targetMarket: undefined,
2025-09-17T00:40:00.870897Z	  brand: 'semikron',
2025-09-17T00:40:00.871007Z	  featured: undefined
2025-09-17T00:40:00.871111Z	}
2025-09-17T00:40:00.887399Z	✅ [getBrandData] Found brand: Semikron
2025-09-17T00:40:00.887714Z	Products fetch result: {
2025-09-17T00:40:00.888312Z	  totalProducts: 1,
2025-09-17T00:40:00.888454Z	  fetchedProducts: 1,
2025-09-17T00:40:00.888564Z	  firstProduct: {
2025-09-17T00:40:00.888662Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-17T00:40:00.888916Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-17T00:40:00.889108Z	    _type: 'product',
2025-09-17T00:40:00.889224Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-17T00:40:00.889381Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-17T00:40:00.889604Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:40:00.889799Z	    image: null,
2025-09-17T00:40:00.889953Z	    inventory: {
2025-09-17T00:40:00.890072Z	      inStock: true,
2025-09-17T00:40:00.890181Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-17T00:40:00.890307Z	      quantity: 0,
2025-09-17T00:40:00.890407Z	      status: 'in_stock',
2025-09-17T00:40:00.890504Z	      warehouse: null
2025-09-17T00:40:00.8906Z	    },
2025-09-17T00:40:00.890696Z	    isActive: true,
2025-09-17T00:40:00.890795Z	    isFeatured: false,
2025-09-17T00:40:00.890909Z	    isNew: false,
2025-09-17T00:40:00.891024Z	    partNumber: 'SKKT106/16E',
2025-09-17T00:40:00.891123Z	    pricing: {
2025-09-17T00:40:00.891223Z	      currency: 'CNY',
2025-09-17T00:40:00.891341Z	      leadTime: null,
2025-09-17T00:40:00.891444Z	      moq: null,
2025-09-17T00:40:00.891553Z	      price: null,
2025-09-17T00:40:00.89166Z	      tiers: null
2025-09-17T00:40:00.891758Z	    },
2025-09-17T00:40:00.891853Z	    shortDescription: 'SKKT106/16E',
2025-09-17T00:40:00.891986Z	    slug: 'SKKT106/16E',
2025-09-17T00:40:00.892099Z	    title: 'SKKT106/16E'
2025-09-17T00:40:00.892204Z	  }
2025-09-17T00:40:00.892334Z	}
2025-09-17T00:40:00.892449Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:40:00.892568Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-17T00:40:00.892672Z	Fetching products with query: 
2025-09-17T00:40:00.89277Z	    {
2025-09-17T00:40:00.892974Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:00.893379Z	        
2025-09-17T00:40:00.893545Z	    _id,
2025-09-17T00:40:00.893647Z	    _type,
2025-09-17T00:40:00.893738Z	    partNumber,
2025-09-17T00:40:00.893862Z	    "slug": slug.current,
2025-09-17T00:40:00.894002Z	    title,
2025-09-17T00:40:00.894106Z	    shortDescription,
2025-09-17T00:40:00.894194Z	    image,
2025-09-17T00:40:00.894326Z	    brand->{
2025-09-17T00:40:00.894891Z	      name,
2025-09-17T00:40:00.895335Z	      "slug": slug.current,
2025-09-17T00:40:00.895453Z	      logo
2025-09-17T00:40:00.895519Z	    },
2025-09-17T00:40:00.895609Z	    category->{
2025-09-17T00:40:00.895708Z	      name,
2025-09-17T00:40:00.895818Z	      "slug": slug.current
2025-09-17T00:40:00.896047Z	    },
2025-09-17T00:40:00.896337Z	    pricing{
2025-09-17T00:40:00.896438Z	      currency,
2025-09-17T00:40:00.896535Z	      tiers[]{
2025-09-17T00:40:00.89663Z	        quantity,
2025-09-17T00:40:00.896728Z	        price,
2025-09-17T00:40:00.896832Z	        unit
2025-09-17T00:40:00.897312Z	      },
2025-09-17T00:40:00.897438Z	      moq,
2025-09-17T00:40:00.897533Z	      leadTime,
2025-09-17T00:40:00.897629Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:00.897738Z	      "price": tiers[0].price,
2025-09-17T00:40:00.897847Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:00.902375Z	    },
2025-09-17T00:40:00.902481Z	    inventory{
2025-09-17T00:40:00.902544Z	      quantity,
2025-09-17T00:40:00.902603Z	      status,
2025-09-17T00:40:00.902659Z	      warehouse,
2025-09-17T00:40:00.902721Z	      lastUpdated,
2025-09-17T00:40:00.902788Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:00.902847Z	      "inStock": status == "in_stock",
2025-09-17T00:40:00.902902Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:00.902958Z	    },
2025-09-17T00:40:00.903013Z	    isActive,
2025-09-17T00:40:00.903069Z	    isFeatured,
2025-09-17T00:40:00.903129Z	    isNew,
2025-09-17T00:40:00.903186Z	    _createdAt,
2025-09-17T00:40:00.90324Z	    _updatedAt
2025-09-17T00:40:00.903328Z	  
2025-09-17T00:40:00.90339Z	      },
2025-09-17T00:40:00.903445Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-17T00:40:00.903515Z	    }
2025-09-17T00:40:00.903571Z	  
2025-09-17T00:40:00.903662Z	Query parameters: {
2025-09-17T00:40:00.903721Z	  limit: 8,
2025-09-17T00:40:00.903781Z	  offset: 0,
2025-09-17T00:40:00.903835Z	  category: undefined,
2025-09-17T00:40:00.903888Z	  brand: 'ixys',
2025-09-17T00:40:00.904928Z	  featured: undefined
2025-09-17T00:40:00.905079Z	}
2025-09-17T00:40:00.905187Z	Fetching solutions with query: 
2025-09-17T00:40:00.905877Z	    {
2025-09-17T00:40:00.905985Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:00.906051Z	        
2025-09-17T00:40:00.906111Z	    _id,
2025-09-17T00:40:00.906166Z	    title,
2025-09-17T00:40:00.906222Z	    "slug": slug.current,
2025-09-17T00:40:00.906416Z	    summary,
2025-09-17T00:40:00.906611Z	    description,
2025-09-17T00:40:00.906798Z	    coverImage,
2025-09-17T00:40:00.907073Z	    primaryBrand->{
2025-09-17T00:40:00.907247Z	      _id,
2025-09-17T00:40:00.907398Z	      name,
2025-09-17T00:40:00.907577Z	      "slug": slug.current,
2025-09-17T00:40:00.907754Z	      logo
2025-09-17T00:40:00.907906Z	    },
2025-09-17T00:40:00.908089Z	    relatedBrands[]->{
2025-09-17T00:40:00.908366Z	      _id,
2025-09-17T00:40:00.908494Z	      name,
2025-09-17T00:40:00.908598Z	      "slug": slug.current,
2025-09-17T00:40:00.90871Z	      logo
2025-09-17T00:40:00.908838Z	    },
2025-09-17T00:40:00.90896Z	    targetMarket,
2025-09-17T00:40:00.909069Z	    complexity,
2025-09-17T00:40:00.90918Z	    publishedAt,
2025-09-17T00:40:00.909302Z	    isPublished,
2025-09-17T00:40:00.909409Z	    isFeatured,
2025-09-17T00:40:00.909946Z	    viewCount,
2025-09-17T00:40:00.910134Z	    _createdAt,
2025-09-17T00:40:00.910251Z	    _updatedAt
2025-09-17T00:40:00.910375Z	  
2025-09-17T00:40:00.911037Z	      },
2025-09-17T00:40:00.911158Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-17T00:40:00.911284Z	    }
2025-09-17T00:40:00.911415Z	  
2025-09-17T00:40:00.911523Z	Query parameters: {
2025-09-17T00:40:00.911631Z	  limit: 4,
2025-09-17T00:40:00.911739Z	  offset: 0,
2025-09-17T00:40:00.911839Z	  targetMarket: undefined,
2025-09-17T00:40:00.91196Z	  brand: 'ixys',
2025-09-17T00:40:00.912065Z	  featured: undefined
2025-09-17T00:40:00.912161Z	}
2025-09-17T00:40:00.912257Z	✅ [getBrandData] Found brand: IXYS
2025-09-17T00:40:00.912423Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:40:00.912634Z	Solutions fetch result: {
2025-09-17T00:40:00.912755Z	  totalSolutions: 1,
2025-09-17T00:40:00.912885Z	  fetchedSolutions: 1,
2025-09-17T00:40:00.913097Z	  firstSolution: {
2025-09-17T00:40:00.913253Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-17T00:40:00.91443Z	    _id: 'e4682cee-1cd1-4018-97ce-06❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:40:00.915337Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:40:00.915735Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-17T00:40:00.916051Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:40:00.916217Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424)
2025-09-17T00:40:00.916453Z	    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-09-17T00:40:00.916609Z	    at runNextTicks (node:internal/process/task_queues:64:3)
2025-09-17T00:40:00.916734Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-17T00:40:00.916979Z	    at process.processTimers (node:internal/timers:512:7) {
2025-09-17T00:40:00.91721Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:40:00.917369Z	}
2025-09-17T00:40:00.917488Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:40:00.917611Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:40:00.917726Z	Error fetching brand data: Error: NEXT_NOT_FOUND
2025-09-17T00:40:00.917835Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:40:00.917964Z	    at m (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/page.js:1:3424)
2025-09-17T00:40:00.918107Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-17T00:40:00.91823Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:40:00.919364Z	}
2025-09-17T00:40:00.919566Z	50c7f700c9',
2025-09-17T00:40:00.919721Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-17T00:40:00.919882Z	    complexity: 'medium',
2025-09-17T00:40:00.92005Z	    coverImage: null,
2025-09-17T00:40:00.920178Z	    description: [ [Object] ],
2025-09-17T00:40:00.920319Z	    isFeatured: false,
2025-09-17T00:40:00.920886Z	    isPublished: true,
2025-09-17T00:40:00.921046Z	    primaryBrand: {
2025-09-17T00:40:00.921162Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:40:00.921332Z	      logo: null,
2025-09-17T00:40:00.92141Z	      name: 'IXYS',
2025-09-17T00:40:00.921467Z	      slug: 'ixys'
2025-09-17T00:40:00.921521Z	    },
2025-09-17T00:40:00.921574Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-17T00:40:00.921631Z	    relatedBrands: null,
2025-09-17T00:40:00.921693Z	    slug: '99999',
2025-09-17T00:40:00.921782Z	    summary: '99999',
2025-09-17T00:40:00.921954Z	    targetMarket: 'industrial-automation',
2025-09-17T00:40:00.922072Z	    title: '99999',
2025-09-17T00:40:00.922172Z	    viewCount: 0
2025-09-17T00:40:00.922305Z	  }
2025-09-17T00:40:00.922413Z	}
2025-09-17T00:40:00.922518Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-17T00:40:00.922618Z	Fetching products with query: 
2025-09-17T00:40:00.922727Z	    {
2025-09-17T00:40:00.922841Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:00.922959Z	        
2025-09-17T00:40:00.923068Z	    _id,
2025-09-17T00:40:00.923196Z	    _type,
2025-09-17T00:40:00.923305Z	    partNumber,
2025-09-17T00:40:00.923374Z	    "slug": slug.current,
2025-09-17T00:40:00.923435Z	    title,
2025-09-17T00:40:00.923491Z	    shortDescription,
2025-09-17T00:40:00.923544Z	    image,
2025-09-17T00:40:00.923599Z	    brand->{
2025-09-17T00:40:00.923652Z	      name,
2025-09-17T00:40:00.923714Z	      "slug": slug.current,
2025-09-17T00:40:00.923771Z	      logo
2025-09-17T00:40:00.923826Z	    },
2025-09-17T00:40:00.923882Z	    category->{
2025-09-17T00:40:00.925309Z	      name,
2025-09-17T00:40:00.925438Z	      "slug": slug.current
2025-09-17T00:40:00.925549Z	    },
2025-09-17T00:40:00.925654Z	    pricing{
2025-09-17T00:40:00.925758Z	      currency,
2025-09-17T00:40:00.925865Z	      tiers[]{
2025-09-17T00:40:00.926007Z	        quantity,
2025-09-17T00:40:00.926148Z	        price,
2025-09-17T00:40:00.926477Z	        unit
2025-09-17T00:40:00.926587Z	      },
2025-09-17T00:40:00.926682Z	      moq,
2025-09-17T00:40:00.926781Z	      leadTime,
2025-09-17T00:40:00.926882Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:00.927006Z	      "price": tiers[0].price,
2025-09-17T00:40:00.927151Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:00.927317Z	    },
2025-09-17T00:40:00.927496Z	    inventory{
2025-09-17T00:40:00.927622Z	      quantity,
2025-09-17T00:40:00.927742Z	      status,
2025-09-17T00:40:00.927859Z	      warehouse,
2025-09-17T00:40:00.927982Z	      lastUpdated,
2025-09-17T00:40:00.928091Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:00.92821Z	      "inStock": status == "in_stock",
2025-09-17T00:40:00.928453Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:00.929293Z	    },
2025-09-17T00:40:00.929446Z	    isActive,
2025-09-17T00:40:00.929573Z	    isFeatured,
2025-09-17T00:40:00.929697Z	    isNew,
2025-09-17T00:40:00.929813Z	    _createdAt,
2025-09-17T00:40:00.929931Z	    _updatedAt
2025-09-17T00:40:00.930049Z	  
2025-09-17T00:40:00.930165Z	      },
2025-09-17T00:40:00.930287Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-17T00:40:00.930422Z	    }
2025-09-17T00:40:00.930531Z	  
2025-09-17T00:40:00.93064Z	Query parameters: {
2025-09-17T00:40:00.93075Z	  limit: 8,
2025-09-17T00:40:00.930861Z	  offset: 0,
2025-09-17T00:40:00.930986Z	  category: undefined,
2025-09-17T00:40:00.931096Z	  brand: 'ixys',
2025-09-17T00:40:00.9312Z	  featured: undefined
2025-09-17T00:40:00.931333Z	}
2025-09-17T00:40:00.931444Z	Fetching solutions with query: 
2025-09-17T00:40:00.931552Z	    {
2025-09-17T00:40:00.93166Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:00.931778Z	        
2025-09-17T00:40:00.931882Z	    _id,
2025-09-17T00:40:00.93199Z	    title,
2025-09-17T00:40:00.93209Z	    "slug": slug.current,
2025-09-17T00:40:00.932192Z	    summary,
2025-09-17T00:40:00.932304Z	    description,
2025-09-17T00:40:00.932646Z	    coverImage,
2025-09-17T00:40:00.932832Z	    primaryBrand->{
2025-09-17T00:40:00.932964Z	      _id,
2025-09-17T00:40:00.933081Z	      name,
2025-09-17T00:40:00.933193Z	      "slug": slug.current,
2025-09-17T00:40:00.933325Z	      logo
2025-09-17T00:40:00.933437Z	    },
2025-09-17T00:40:00.933546Z	    relatedBrands[]->{
2025-09-17T00:40:00.933652Z	      _id,
2025-09-17T00:40:00.933784Z	      name,
2025-09-17T00:40:00.933889Z	      "slug": slug.current,
2025-09-17T00:40:00.934152Z	      logo
2025-09-17T00:40:00.934891Z	    },
2025-09-17T00:40:00.935045Z	    targetMarket,
2025-09-17T00:40:00.935228Z	    complexity,
2025-09-17T00:40:00.935385Z	    publishedAt,
2025-09-17T00:40:00.935499Z	    isPublished,
2025-09-17T00:40:00.935619Z	    isFeatured,
2025-09-17T00:40:00.935724Z	    viewCount,
2025-09-17T00:40:00.935831Z	    _createdAt,
2025-09-17T00:40:00.935941Z	    _updatedAt
2025-09-17T00:40:00.936047Z	  
2025-09-17T00:40:00.93615Z	      },
2025-09-17T00:40:00.936257Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-17T00:40:00.936382Z	    }
2025-09-17T00:40:00.936491Z	  
2025-09-17T00:40:00.936596Z	Query parameters: {
2025-09-17T00:40:00.936803Z	  limit: 4,
2025-09-17T00:40:00.941112Z	  offset: 0,
2025-09-17T00:40:00.941261Z	  targetMarket: undefined,
2025-09-17T00:40:00.941412Z	  brand: 'ixys',
2025-09-17T00:40:00.94153Z	  featured: undefined
2025-09-17T00:40:00.941638Z	}
2025-09-17T00:40:00.94176Z	✅ [getBrandData] Found brand: IXYS
2025-09-17T00:40:00.941871Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:40:00.941987Z	Solutions fetch result: {
2025-09-17T00:40:00.942097Z	  totalSolutions: 1,
2025-09-17T00:40:00.942208Z	  fetchedSolutions: 1,
2025-09-17T00:40:00.942335Z	  firstSolution: {
2025-09-17T00:40:00.94245Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-17T00:40:00.942571Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-17T00:40:00.942691Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-17T00:40:00.942803Z	    complexity: 'medium',
2025-09-17T00:40:00.942913Z	    coverImage: null,
2025-09-17T00:40:00.943014Z	    description: [ [Object] ],
2025-09-17T00:40:00.943128Z	    isFeatured: false,
2025-09-17T00:40:00.943236Z	    isPublished: true,
2025-09-17T00:40:00.943365Z	    primaryBrand: {
2025-09-17T00:40:00.943474Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:40:00.955416Z	      logo: null,
2025-09-17T00:40:00.955551Z	      name: 'IXYS',
2025-09-17T00:40:00.955615Z	      slug: 'ixys'
2025-09-17T00:40:00.955682Z	    },
2025-09-17T00:40:00.955739Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-17T00:40:00.955806Z	    relatedBrands: null,
2025-09-17T00:40:00.955862Z	    slug: '99999',
2025-09-17T00:40:00.955922Z	    summary: '99999',
2025-09-17T00:40:00.955977Z	    targetMarket: 'industrial-automation',
2025-09-17T00:40:00.95603Z	    title: '99999',
2025-09-17T00:40:00.956083Z	    viewCount: 0
2025-09-17T00:40:00.956135Z	  }
2025-09-17T00:40:00.956187Z	}
2025-09-17T00:40:00.956242Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-17T00:40:00.956346Z	Fetching products with query: 
2025-09-17T00:40:00.956411Z	    {
2025-09-17T00:40:00.956469Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:00.956527Z	        
2025-09-17T00:40:00.95658Z	    _id,
2025-09-17T00:40:00.956634Z	    _type,
2025-09-17T00:40:00.956694Z	    partNumber,
2025-09-17T00:40:00.956749Z	    "slug": slug.current,
2025-09-17T00:40:00.956804Z	    title,
2025-09-17T00:40:00.956858Z	    shortDescription,
2025-09-17T00:40:00.956913Z	    image,
2025-09-17T00:40:00.956968Z	    brand->{
2025-09-17T00:40:00.957026Z	      name,
2025-09-17T00:40:00.957079Z	      "slug": slug.current,
2025-09-17T00:40:00.957134Z	      logo
2025-09-17T00:40:00.957193Z	    },
2025-09-17T00:40:00.957261Z	    category->{
2025-09-17T00:40:00.95735Z	      name,
2025-09-17T00:40:00.957406Z	      "slug": slug.current
2025-09-17T00:40:00.957467Z	    },
2025-09-17T00:40:00.957522Z	    pricing{
2025-09-17T00:40:00.957578Z	      currency,
2025-09-17T00:40:00.957632Z	      tiers[]{
2025-09-17T00:40:00.957698Z	        quantity,
2025-09-17T00:40:00.957752Z	        price,
2025-09-17T00:40:00.957804Z	        unit
2025-09-17T00:40:00.957858Z	      },
2025-09-17T00:40:00.957911Z	      moq,
2025-09-17T00:40:00.957967Z	      leadTime,
2025-09-17T00:40:00.958021Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:00.958075Z	      "price": tiers[0].price,
2025-09-17T00:40:00.958127Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:00.958179Z	    },
2025-09-17T00:40:00.958231Z	    inventory{
2025-09-17T00:40:00.958303Z	      quantity,
2025-09-17T00:40:00.958364Z	      status,
2025-09-17T00:40:00.958417Z	      warehouse,
2025-09-17T00:40:00.95847Z	      lastUpdated,
2025-09-17T00:40:00.95854Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:00.958596Z	      "inStock": status == "in_stock",
2025-09-17T00:40:00.958648Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:00.958711Z	    },
2025-09-17T00:40:00.958765Z	    isActive,
2025-09-17T00:40:00.958818Z	    isFeatured,
2025-09-17T00:40:00.95887Z	    isNew,
2025-09-17T00:40:00.958922Z	    _createdAt,
2025-09-17T00:40:00.958979Z	    _updatedAt
2025-09-17T00:40:00.959032Z	  
2025-09-17T00:40:00.959084Z	      },
2025-09-17T00:40:00.959137Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-17T00:40:00.959195Z	    }
2025-09-17T00:40:00.959247Z	  
2025-09-17T00:40:00.965515Z	Query parameters: {
2025-09-17T00:40:00.965668Z	  limit: 8,
2025-09-17T00:40:00.965791Z	  offset: 0,
2025-09-17T00:40:00.965901Z	  category: undefined,
2025-09-17T00:40:00.966024Z	  brand: 'semikron',
2025-09-17T00:40:00.966144Z	  featured: undefined
2025-09-17T00:40:00.966258Z	}
2025-09-17T00:40:00.966393Z	Fetching solutions with query: 
2025-09-17T00:40:00.966501Z	    {
2025-09-17T00:40:00.966602Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:00.966701Z	        
2025-09-17T00:40:00.966806Z	    _id,
2025-09-17T00:40:00.966924Z	    title,
2025-09-17T00:40:00.967035Z	    "slug": slug.current,
2025-09-17T00:40:00.967133Z	    summary,
2025-09-17T00:40:00.967237Z	    description,
2025-09-17T00:40:00.969936Z	    coverImage,
2025-09-17T00:40:00.970088Z	    primaryBrand->{
2025-09-17T00:40:00.97021Z	      _id,
2025-09-17T00:40:00.970341Z	      name,
2025-09-17T00:40:00.970452Z	      "slug": slug.current,
2025-09-17T00:40:00.970553Z	      logo
2025-09-17T00:40:00.970663Z	    },
2025-09-17T00:40:00.970764Z	    relatedBrands[]->{
2025-09-17T00:40:00.970861Z	      _id,
2025-09-17T00:40:00.970958Z	      name,
2025-09-17T00:40:00.971059Z	      "slug": slug.current,
2025-09-17T00:40:00.971168Z	      logo
2025-09-17T00:40:00.971288Z	    },
2025-09-17T00:40:00.971402Z	    targetMarket,
2025-09-17T00:40:00.971502Z	    complexity,
2025-09-17T00:40:00.971601Z	    publishedAt,
2025-09-17T00:40:00.971709Z	    isPublished,
2025-09-17T00:40:00.9718Z	    isFeatured,
2025-09-17T00:40:00.971897Z	    viewCount,
2025-09-17T00:40:00.971991Z	    _createdAt,
2025-09-17T00:40:00.972086Z	    _updatedAt
2025-09-17T00:40:00.972185Z	  
2025-09-17T00:40:00.972313Z	      },
2025-09-17T00:40:00.972428Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-17T00:40:00.972567Z	    }
2025-09-17T00:40:00.972711Z	  
2025-09-17T00:40:00.972824Z	Query parameters: {
2025-09-17T00:40:00.972927Z	  limit: 4,
2025-09-17T00:40:00.973031Z	  offset: 0,
2025-09-17T00:40:00.973133Z	  targetMarket: undefined,
2025-09-17T00:40:00.973239Z	  brand: 'semikron',
2025-09-17T00:40:00.98759Z	  featured: undefined
2025-09-17T00:40:00.987761Z	}
2025-09-17T00:40:00.987886Z	✅ [getBrandData] Found brand: Semikron
2025-09-17T00:40:00.988025Z	Products fetch result: {
2025-09-17T00:40:00.988136Z	  totalProducts: 1,
2025-09-17T00:40:00.988247Z	  fetchedProducts: 1,
2025-09-17T00:40:00.988412Z	  firstProduct: {
2025-09-17T00:40:00.988548Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-17T00:40:00.988678Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-17T00:40:00.988789Z	    _type: 'product',
2025-09-17T00:40:00.988895Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-17T00:40:00.989008Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-17T00:40:00.989117Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:40:00.989223Z	    image: null,
2025-09-17T00:40:00.989344Z	    inventory: {
2025-09-17T00:40:00.989451Z	      inStock: true,
2025-09-17T00:40:00.989565Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-17T00:40:00.989663Z	      quantity: 0,
2025-09-17T00:40:00.99022Z	      status: 'in_stock',
2025-09-17T00:40:00.990398Z	      warehouse: null
2025-09-17T00:40:00.990526Z	    },
2025-09-17T00:40:00.990634Z	    isActive: true,
2025-09-17T00:40:00.990739Z	    isFeatured: false,
2025-09-17T00:40:00.990873Z	    isNew: false,
2025-09-17T00:40:00.991361Z	    partNumber: 'SKKT106/16E',
2025-09-17T00:40:00.991485Z	    pricing: {
2025-09-17T00:40:00.991596Z	      currency: 'CNY',
2025-09-17T00:40:00.991706Z	      leadTime: null,
2025-09-17T00:40:00.991811Z	      moq: null,
2025-09-17T00:40:00.991972Z	      price: null,
2025-09-17T00:40:00.992078Z	      tiers: null
2025-09-17T00:40:00.996807Z	    },
2025-09-17T00:40:00.997204Z	    shortDescription: 'SKKT106/16E',
2025-09-17T00:40:00.997389Z	    slug: 'SKKT106/16E',
2025-09-17T00:40:00.997503Z	    title: 'SKKT106/16E'
2025-09-17T00:40:00.997611Z	  }
2025-09-17T00:40:00.997711Z	}
2025-09-17T00:40:00.997812Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:40:00.998252Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-17T00:40:00.998426Z	Fetching products with query: 
2025-09-17T00:40:00.998542Z	    {
2025-09-17T00:40:00.998655Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:00.998757Z	        
2025-09-17T00:40:00.998853Z	    _id,
2025-09-17T00:40:00.999259Z	    _type,
2025-09-17T00:40:00.999413Z	    partNumber,
2025-09-17T00:40:00.999521Z	    "slug": slug.current,
2025-09-17T00:40:00.999648Z	    title,
2025-09-17T00:40:01.000032Z	    shortDescription,
2025-09-17T00:40:01.000167Z	    image,
2025-09-17T00:40:01.000292Z	    brand->{
2025-09-17T00:40:01.000404Z	      name,
2025-09-17T00:40:01.000773Z	      "slug": slug.current,
2025-09-17T00:40:01.00088Z	      logo
2025-09-17T00:40:01.000988Z	    },
2025-09-17T00:40:01.001081Z	    category->{
2025-09-17T00:40:01.00117Z	      name,
2025-09-17T00:40:01.001261Z	      "slug": slug.current
2025-09-17T00:40:01.001378Z	    },
2025-09-17T00:40:01.001478Z	    pricing{
2025-09-17T00:40:01.001577Z	      currency,
2025-09-17T00:40:01.001681Z	      tiers[]{
2025-09-17T00:40:01.001801Z	        quantity,
2025-09-17T00:40:01.001912Z	        price,
2025-09-17T00:40:01.002016Z	        unit
2025-09-17T00:40:01.00295Z	      },
2025-09-17T00:40:01.003108Z	      moq,
2025-09-17T00:40:01.003325Z	      leadTime,
2025-09-17T00:40:01.003687Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:01.003846Z	      "price": tiers[0].price,
2025-09-17T00:40:01.003969Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:01.004072Z	    },
2025-09-17T00:40:01.004173Z	    inventory{
2025-09-17T00:40:01.004288Z	      quantity,
2025-09-17T00:40:01.004396Z	      status,
2025-09-17T00:40:01.0045Z	      warehouse,
2025-09-17T00:40:01.004596Z	      lastUpdated,
2025-09-17T00:40:01.004738Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:01.004976Z	      "inStock": status == "in_stock",
2025-09-17T00:40:01.005114Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:01.005228Z	    },
2025-09-17T00:40:01.005359Z	    isActive,
2025-09-17T00:40:01.005469Z	    isFeatured,
2025-09-17T00:40:01.00557Z	    isNew,
2025-09-17T00:40:01.005668Z	    _createdAt,
2025-09-17T00:40:01.00579Z	    _updatedAt
2025-09-17T00:40:01.005897Z	  
2025-09-17T00:40:01.006019Z	      },
2025-09-17T00:40:01.006152Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-17T00:40:01.008318Z	    }
2025-09-17T00:40:01.008454Z	  
2025-09-17T00:40:01.009089Z	Query parameters: {
2025-09-17T00:40:01.009232Z	  limit: 8,
2025-09-17T00:40:01.009418Z	  offset: 0,
2025-09-17T00:40:01.009577Z	  category: undefined,
2025-09-17T00:40:01.011772Z	  brand: 'semikron',
2025-09-17T00:40:01.011937Z	  featured: undefined
2025-09-17T00:40:01.01205Z	}
2025-09-17T00:40:01.012146Z	Fetching solutions with query: 
2025-09-17T00:40:01.012251Z	    {
2025-09-17T00:40:01.012416Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:01.012571Z	        
2025-09-17T00:40:01.012692Z	    _id,
2025-09-17T00:40:01.012805Z	    title,
2025-09-17T00:40:01.012978Z	    "slug": slug.current,
2025-09-17T00:40:01.013164Z	    summary,
2025-09-17T00:40:01.013304Z	    description,
2025-09-17T00:40:01.013428Z	    coverImage,
2025-09-17T00:40:01.013546Z	    primaryBrand->{
2025-09-17T00:40:01.013646Z	      _id,
2025-09-17T00:40:01.013762Z	      name,
2025-09-17T00:40:01.013867Z	      "slug": slug.current,
2025-09-17T00:40:01.013969Z	      logo
2025-09-17T00:40:01.014072Z	    },
2025-09-17T00:40:01.014176Z	    relatedBrands[]->{
2025-09-17T00:40:01.014294Z	      _id,
2025-09-17T00:40:01.014406Z	      name,
2025-09-17T00:40:01.014512Z	      "slug": slug.current,
2025-09-17T00:40:01.01461Z	      logo
2025-09-17T00:40:01.01472Z	    },
2025-09-17T00:40:01.014827Z	    targetMarket,
2025-09-17T00:40:01.014933Z	    complexity,
2025-09-17T00:40:01.01504Z	    publishedAt,
2025-09-17T00:40:01.015142Z	    isPublished,
2025-09-17T00:40:01.01524Z	    isFeatured,
2025-09-17T00:40:01.015361Z	    viewCount,
2025-09-17T00:40:01.015461Z	    _createdAt,
2025-09-17T00:40:01.015558Z	    _updatedAt
2025-09-17T00:40:01.015678Z	  
2025-09-17T00:40:01.015789Z	      },
2025-09-17T00:40:01.015897Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-17T00:40:01.016014Z	    }
2025-09-17T00:40:01.016115Z	  
2025-09-17T00:40:01.016211Z	Query parameters: {
2025-09-17T00:40:01.02185Z	  limit: 4,
2025-09-17T00:40:01.022084Z	  offset: 0,
2025-09-17T00:40:01.022217Z	  targetMarket: undefined,
2025-09-17T00:40:01.023068Z	  brand: 'semikron',
2025-09-17T00:40:01.024322Z	  featured: undefined
2025-09-17T00:40:01.024477Z	}
2025-09-17T00:40:01.024621Z	✅ [getBrandData] Found brand: Semikron
2025-09-17T00:40:01.024768Z	Products fetch result: {
2025-09-17T00:40:01.024883Z	  totalProducts: 1,
2025-09-17T00:40:01.025955Z	  fetchedProducts: 1,
2025-09-17T00:40:01.026243Z	  firstProduct: {
2025-09-17T00:40:01.026416Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-17T00:40:01.026522Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-17T00:40:01.026628Z	    _type: 'product',
2025-09-17T00:40:01.026748Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-17T00:40:01.026846Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-17T00:40:01.026947Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:40:01.027045Z	    image: null,
2025-09-17T00:40:01.02714Z	    inventory: {
2025-09-17T00:40:01.027428Z	      inStock: true,
2025-09-17T00:40:01.02756Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-17T00:40:01.027683Z	      quantity: 0,
2025-09-17T00:40:01.027785Z	      status: 'in_stock',
2025-09-17T00:40:01.027875Z	      warehouse: null
2025-09-17T00:40:01.027964Z	    },
2025-09-17T00:40:01.028072Z	    isActive: true,
2025-09-17T00:40:01.028166Z	    isFeatured: false,
2025-09-17T00:40:01.02826Z	    isNew: false,
2025-09-17T00:40:01.028401Z	    partNumber: 'SKKT106/16E',
2025-09-17T00:40:01.028504Z	    pricing: {
2025-09-17T00:40:01.028596Z	      currency: 'CNY',
2025-09-17T00:40:01.028697Z	      leadTime: null,
2025-09-17T00:40:01.028781Z	      moq: null,
2025-09-17T00:40:01.028877Z	      price: null,
2025-09-17T00:40:01.028971Z	      tiers: null
2025-09-17T00:40:01.029067Z	    },
2025-09-17T00:40:01.029175Z	    shortDescription: 'SKKT106/16E',
2025-09-17T00:40:01.029336Z	    slug: 'SKKT106/16E',
2025-09-17T00:40:01.029435Z	    title: 'SKKT106/16E'
2025-09-17T00:40:01.029525Z	  }
2025-09-17T00:40:01.029615Z	}
2025-09-17T00:40:01.030084Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:40:01.030208Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:40:01.030468Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:40:01.030877Z	Error fetching brand solutions data: Error: NEXT_NOT_FOUND
2025-09-17T00:40:01.030995Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:40:01.031111Z	    at f (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/solutions/page.js:1:4481)
2025-09-17T00:40:01.031206Z	    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-09-17T00:40:01.031316Z	    at runNextTicks (node:internal/process/task_queues:64:3)
2025-09-17T00:40:01.031415Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-17T00:40:01.031509Z	    at process.processTimers (node:internal/timers:512:7) {
2025-09-17T00:40:01.031606Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:40:01.031704Z	}
2025-09-17T00:40:01.031793Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:40:01.031894Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:40:01.031993Z	Error fetching brand solutions data: Error: NEXT_NOT_FOUND
2025-09-17T00:40:01.032097Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:40:01.032198Z	    at f (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/solutions/page.js:1:4481)
2025-09-17T00:40:01.032327Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-17T00:40:01.032546Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:40:01.032715Z	}
2025-09-17T00:40:01.032858Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-17T00:40:01.032994Z	Fetching products with query: 
2025-09-17T00:40:01.033238Z	    {
2025-09-17T00:40:01.033395Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:01.033515Z	        
2025-09-17T00:40:01.03386Z	    _id,
2025-09-17T00:40:01.034005Z	    _type,
2025-09-17T00:40:01.034117Z	    partNumber,
2025-09-17T00:40:01.03422Z	    "slug": slug.current,
2025-09-17T00:40:01.034351Z	    title,
2025-09-17T00:40:01.034472Z	    shortDescription,
2025-09-17T00:40:01.034578Z	    image,
2025-09-17T00:40:01.034687Z	    brand->{
2025-09-17T00:40:01.034788Z	      name,
2025-09-17T00:40:01.034973Z	      "slug": slug.current,
2025-09-17T00:40:01.035137Z	      logo
2025-09-17T00:40:01.035251Z	    },
2025-09-17T00:40:01.035421Z	    category->{
2025-09-17T00:40:01.03555Z	      name,
2025-09-17T00:40:01.035722Z	      "slug": slug.current
2025-09-17T00:40:01.035867Z	    },
2025-09-17T00:40:01.03603Z	    pricing{
2025-09-17T00:40:01.036191Z	      currency,
2025-09-17T00:40:01.036326Z	      tiers[]{
2025-09-17T00:40:01.036446Z	        quantity,
2025-09-17T00:40:01.036553Z	        price,
2025-09-17T00:40:01.036645Z	        unit
2025-09-17T00:40:01.036758Z	      },
2025-09-17T00:40:01.036874Z	      moq,
2025-09-17T00:40:01.036979Z	      leadTime,
2025-09-17T00:40:01.037091Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:01.037197Z	      "price": tiers[0].price,
2025-09-17T00:40:01.037319Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:01.037433Z	    },
2025-09-17T00:40:01.037571Z	    inventory{
2025-09-17T00:40:01.037706Z	      quantity,
2025-09-17T00:40:01.037821Z	      status,
2025-09-17T00:40:01.037934Z	      warehouse,
2025-09-17T00:40:01.038044Z	      lastUpdated,
2025-09-17T00:40:01.038168Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:01.038293Z	      "inStock": status == "in_stock",
2025-09-17T00:40:01.038409Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:01.038523Z	    },
2025-09-17T00:40:01.038638Z	    isActive,
2025-09-17T00:40:01.038759Z	    isFeatured,
2025-09-17T00:40:01.038871Z	    isNew,
2025-09-17T00:40:01.038982Z	    _createdAt,
2025-09-17T00:40:01.039084Z	    _updatedAt
2025-09-17T00:40:01.039191Z	  
2025-09-17T00:40:01.03932Z	      },
2025-09-17T00:40:01.039443Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-17T00:40:01.039556Z	    }
2025-09-17T00:40:01.039667Z	  
2025-09-17T00:40:01.039782Z	Query parameters: {
2025-09-17T00:40:01.039891Z	  limit: 8,
2025-09-17T00:40:01.039999Z	  offset: 0,
2025-09-17T00:40:01.0401Z	  category: undefined,
2025-09-17T00:40:01.040219Z	  brand: 'ixys',
2025-09-17T00:40:01.040349Z	  featured: undefined
2025-09-17T00:40:01.040461Z	}
2025-09-17T00:40:01.040569Z	Fetching solutions with query: 
2025-09-17T00:40:01.040691Z	    {
2025-09-17T00:40:01.040809Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:01.040939Z	        
2025-09-17T00:40:01.041044Z	    _id,
2025-09-17T00:40:01.041176Z	    title,
2025-09-17T00:40:01.041303Z	    "slug": slug.current,
2025-09-17T00:40:01.041408Z	    summary,
2025-09-17T00:40:01.041508Z	    description,
2025-09-17T00:40:01.041609Z	    coverImage,
2025-09-17T00:40:01.041722Z	    primaryBrand->{
2025-09-17T00:40:01.041818Z	      _id,
2025-09-17T00:40:01.041917Z	      name,
2025-09-17T00:40:01.042058Z	      "slug": slug.current,
2025-09-17T00:40:01.042165Z	      logo
2025-09-17T00:40:01.042264Z	    },
2025-09-17T00:40:01.042406Z	    relatedBrands[]->{
2025-09-17T00:40:01.042514Z	      _id,
2025-09-17T00:40:01.042618Z	      name,
2025-09-17T00:40:01.042853Z	      "slug": slug.current,
2025-09-17T00:40:01.04299Z	      logo
2025-09-17T00:40:01.043147Z	    },
2025-09-17T00:40:01.043255Z	    targetMarket,
2025-09-17T00:40:01.043478Z	    complexity,
2025-09-17T00:40:01.043631Z	    publishedAt,
2025-09-17T00:40:01.043758Z	    isPublished,
2025-09-17T00:40:01.043866Z	    isFeatured,
2025-09-17T00:40:01.043974Z	    viewCount,
2025-09-17T00:40:01.044085Z	    _createdAt,
2025-09-17T00:40:01.044191Z	    _updatedAt
2025-09-17T00:40:01.044319Z	  
2025-09-17T00:40:01.044429Z	      },
2025-09-17T00:40:01.044535Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-17T00:40:01.044731Z	    }
2025-09-17T00:40:01.044907Z	  
2025-09-17T00:40:01.045076Z	Query parameters: {
2025-09-17T00:40:01.045285Z	  limit: 4,
2025-09-17T00:40:01.045515Z	  offset: 0,
2025-09-17T00:40:01.04574Z	  targetMarket: undefined,
2025-09-17T00:40:01.045943Z	  brand: 'ixys',
2025-09-17T00:40:01.046241Z	  featured: undefined
2025-09-17T00:40:01.046384Z	}
2025-09-17T00:40:01.046502Z	✅ [getBrandData] Found brand: IXYS
2025-09-17T00:40:01.046616Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:40:01.046734Z	Solutions fetch result: {
2025-09-17T00:40:01.046843Z	  totalSolutions: 1,
2025-09-17T00:40:01.046944Z	  fetchedSolutions: 1,
2025-09-17T00:40:01.047045Z	  firstSolution: {
2025-09-17T00:40:01.047143Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-17T00:40:01.04724Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-17T00:40:01.047362Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-17T00:40:01.047469Z	    complexity: 'medium',
2025-09-17T00:40:01.047571Z	    coverImage: null,
2025-09-17T00:40:01.047724Z	    description: [ [Object] ],
2025-09-17T00:40:01.047832Z	    isFeatured: false,
2025-09-17T00:40:01.047936Z	    isPublished: true,
2025-09-17T00:40:01.048042Z	    primaryBrand: {
2025-09-17T00:40:01.048141Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:40:01.048255Z	      logo: null,
2025-09-17T00:40:01.048384Z	      name: 'IXYS',
2025-09-17T00:40:01.04849Z	      slug: 'ixys'
2025-09-17T00:40:01.048604Z	    },
2025-09-17T00:40:01.048734Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-17T00:40:01.04885Z	    relatedBrands: null,
2025-09-17T00:40:01.048967Z	    slug: '99999',
2025-09-17T00:40:01.049068Z	    summary: '99999',
2025-09-17T00:40:01.04917Z	    targetMarket: 'industrial-automation',
2025-09-17T00:40:01.049289Z	    title: '99999',
2025-09-17T00:40:01.04941Z	    viewCount: 0
2025-09-17T00:40:01.049518Z	  }
2025-09-17T00:40:01.049685Z	}
2025-09-17T00:40:01.049803Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-17T00:40:01.049908Z	Fetching products with query: 
2025-09-17T00:40:01.050009Z	    {
2025-09-17T00:40:01.050109Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:01.050237Z	        
2025-09-17T00:40:01.050375Z	    _id,
2025-09-17T00:40:01.050488Z	    _type,
2025-09-17T00:40:01.050587Z	    partNumber,
2025-09-17T00:40:01.05071Z	    "slug": slug.current,
2025-09-17T00:40:01.050826Z	    title,
2025-09-17T00:40:01.050941Z	    shortDescription,
2025-09-17T00:40:01.051062Z	    image,
2025-09-17T00:40:01.051164Z	    brand->{
2025-09-17T00:40:01.051259Z	      name,
2025-09-17T00:40:01.051388Z	      "slug": slug.current,
2025-09-17T00:40:01.051486Z	      logo
2025-09-17T00:40:01.051578Z	    },
2025-09-17T00:40:01.051682Z	    category->{
2025-09-17T00:40:01.051779Z	      name,
2025-09-17T00:40:01.051873Z	      "slug": slug.current
2025-09-17T00:40:01.051967Z	    },
2025-09-17T00:40:01.052067Z	    pricing{
2025-09-17T00:40:01.05217Z	      currency,
2025-09-17T00:40:01.052285Z	      tiers[]{
2025-09-17T00:40:01.052389Z	        quantity,
2025-09-17T00:40:01.052486Z	        price,
2025-09-17T00:40:01.052598Z	        unit
2025-09-17T00:40:01.052705Z	      },
2025-09-17T00:40:01.052801Z	      moq,
2025-09-17T00:40:01.052895Z	      leadTime,
2025-09-17T00:40:01.052989Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:01.053086Z	      "price": tiers[0].price,
2025-09-17T00:40:01.053179Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:01.053303Z	    },
2025-09-17T00:40:01.053402Z	    inventory{
2025-09-17T00:40:01.053494Z	      quantity,
2025-09-17T00:40:01.053585Z	      status,
2025-09-17T00:40:01.053692Z	      warehouse,
2025-09-17T00:40:01.053789Z	      lastUpdated,
2025-09-17T00:40:01.053881Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:01.054007Z	      "inStock": status == "in_stock",
2025-09-17T00:40:01.054112Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:01.054213Z	    },
2025-09-17T00:40:01.05434Z	    isActive,
2025-09-17T00:40:01.054448Z	    isFeatured,
2025-09-17T00:40:01.054549Z	    isNew,
2025-09-17T00:40:01.054646Z	    _createdAt,
2025-09-17T00:40:01.054778Z	    _updatedAt
2025-09-17T00:40:01.054882Z	  
2025-09-17T00:40:01.055015Z	      },
2025-09-17T00:40:01.055111Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-17T00:40:01.05522Z	    }
2025-09-17T00:40:01.055335Z	  
2025-09-17T00:40:01.055443Z	Query parameters: {
2025-09-17T00:40:01.055547Z	  limit: 8,
2025-09-17T00:40:01.055647Z	  offset: 0,
2025-09-17T00:40:01.055765Z	  category: undefined,
2025-09-17T00:40:01.055865Z	  brand: 'ixys',
2025-09-17T00:40:01.055962Z	  featured: undefined
2025-09-17T00:40:01.05607Z	}
2025-09-17T00:40:01.056166Z	Fetching solutions with query: 
2025-09-17T00:40:01.056259Z	    {
2025-09-17T00:40:01.056382Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:01.056488Z	        
2025-09-17T00:40:01.056589Z	    _id,
2025-09-17T00:40:01.056703Z	    title,
2025-09-17T00:40:01.056799Z	    "slug": slug.current,
2025-09-17T00:40:01.056889Z	    summary,
2025-09-17T00:40:01.056985Z	    description,
2025-09-17T00:40:01.057077Z	    coverImage,
2025-09-17T00:40:01.057163Z	    primaryBrand->{
2025-09-17T00:40:01.057255Z	      _id,
2025-09-17T00:40:01.057398Z	      name,
2025-09-17T00:40:01.057491Z	      "slug": slug.current,
2025-09-17T00:40:01.057582Z	      logo
2025-09-17T00:40:01.05768Z	    },
2025-09-17T00:40:01.057773Z	    relatedBrands[]->{
2025-09-17T00:40:01.057865Z	      _id,
2025-09-17T00:40:01.057949Z	      name,
2025-09-17T00:40:01.05804Z	      "slug": slug.current,
2025-09-17T00:40:01.058137Z	      logo
2025-09-17T00:40:01.058225Z	    },
2025-09-17T00:40:01.058327Z	    targetMarket,
2025-09-17T00:40:01.058412Z	    complexity,
2025-09-17T00:40:01.05849Z	    publishedAt,
2025-09-17T00:40:01.058569Z	    isPublished,
2025-09-17T00:40:01.058649Z	    isFeatured,
2025-09-17T00:40:01.058739Z	    viewCount,
2025-09-17T00:40:01.058819Z	    _createdAt,
2025-09-17T00:40:01.0589Z	    _updatedAt
2025-09-17T00:40:01.05898Z	  
2025-09-17T00:40:01.059058Z	      },
2025-09-17T00:40:01.059136Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-17T00:40:01.05922Z	    }
2025-09-17T00:40:01.059322Z	  
2025-09-17T00:40:01.059414Z	Query parameters: {
2025-09-17T00:40:01.059502Z	  limit: 4,
2025-09-17T00:40:01.059588Z	  offset: 0,
2025-09-17T00:40:01.059685Z	  targetMarket: undefined,
2025-09-17T00:40:01.059767Z	  brand: 'ixys',
2025-09-17T00:40:01.059845Z	  featured: undefined
2025-09-17T00:40:01.05992Z	}
2025-09-17T00:40:01.060012Z	✅ [getBrandData] Found brand: IXYS
2025-09-17T00:40:01.060115Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:40:01.06021Z	Solutions fetch result: {
2025-09-17T00:40:01.060318Z	  totalSolutions: 1,
2025-09-17T00:40:01.06041Z	  fetchedSolutions: 1,
2025-09-17T00:40:01.060496Z	  firstSolution: {
2025-09-17T00:40:01.060587Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-17T00:40:01.060678Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-17T00:40:01.06076Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-17T00:40:01.060843Z	    complexity: 'medium',
2025-09-17T00:40:01.060921Z	    coverImage: null,
2025-09-17T00:40:01.061Z	    description: [ [Object] ],
2025-09-17T00:40:01.087482Z	    isFeatured: false,
2025-09-17T00:40:01.087857Z	    isPublished: true,
2025-09-17T00:40:01.08802Z	    primaryBrand: {
2025-09-17T00:40:01.088141Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:40:01.088241Z	      logo: null,
2025-09-17T00:40:01.088354Z	      name: 'IXYS',
2025-09-17T00:40:01.088444Z	      slug: 'ixys'
2025-09-17T00:40:01.088543Z	    },
2025-09-17T00:40:01.088624Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-17T00:40:01.088715Z	    relatedBrands: null,
2025-09-17T00:40:01.088818Z	    slug: '99999',
2025-09-17T00:40:01.088906Z	    summary: '99999',
2025-09-17T00:40:01.088975Z	    targetMarket: 'industrial-automation',
2025-09-17T00:40:01.089032Z	    title: '99999',
2025-09-17T00:40:01.089085Z	    viewCount: 0
2025-09-17T00:40:01.089138Z	  }
2025-09-17T00:40:01.089194Z	}
2025-09-17T00:40:01.089249Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-17T00:40:01.089604Z	Fetching products with query: 
2025-09-17T00:40:01.089784Z	    {
2025-09-17T00:40:01.089876Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:01.090026Z	        
2025-09-17T00:40:01.09026Z	    _id,
2025-09-17T00:40:01.090414Z	    _type,
2025-09-17T00:40:01.090517Z	    partNumber,
2025-09-17T00:40:01.09061Z	    "slug": slug.current,
2025-09-17T00:40:01.090719Z	    title,
2025-09-17T00:40:01.090829Z	    shortDescription,
2025-09-17T00:40:01.10345Z	    image,
2025-09-17T00:40:01.103572Z	    brand->{
2025-09-17T00:40:01.103635Z	      name,
2025-09-17T00:40:01.10374Z	      "slug": slug.current,
2025-09-17T00:40:01.103844Z	      logo
2025-09-17T00:40:01.103962Z	    },
2025-09-17T00:40:01.104079Z	    category->{
2025-09-17T00:40:01.10418Z	      name,
2025-09-17T00:40:01.10431Z	      "slug": slug.current
2025-09-17T00:40:01.104572Z	    },
2025-09-17T00:40:01.104704Z	    pricing{
2025-09-17T00:40:01.104819Z	      currency,
2025-09-17T00:40:01.104938Z	      tiers[]{
2025-09-17T00:40:01.105041Z	        quantity,
2025-09-17T00:40:01.105138Z	        price,
2025-09-17T00:40:01.105238Z	        unit
2025-09-17T00:40:01.105377Z	      },
2025-09-17T00:40:01.105514Z	      moq,
2025-09-17T00:40:01.105625Z	      leadTime,
2025-09-17T00:40:01.105742Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:01.105909Z	      "price": tiers[0].price,
2025-09-17T00:40:01.106042Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:01.106144Z	    },
2025-09-17T00:40:01.106291Z	    inventory{
2025-09-17T00:40:01.106395Z	      quantity,
2025-09-17T00:40:01.106494Z	      status,
2025-09-17T00:40:01.106586Z	      warehouse,
2025-09-17T00:40:01.106697Z	      lastUpdated,
2025-09-17T00:40:01.106813Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:01.107029Z	      "inStock": status == "in_stock",
2025-09-17T00:40:01.107112Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:01.107239Z	    },
2025-09-17T00:40:01.107504Z	    isActive,
2025-09-17T00:40:01.10766Z	    isFeatured,
2025-09-17T00:40:01.107783Z	    isNew,
2025-09-17T00:40:01.107886Z	    _createdAt,
2025-09-17T00:40:01.10798Z	    _updatedAt
2025-09-17T00:40:01.108071Z	  
2025-09-17T00:40:01.108175Z	      },
2025-09-17T00:40:01.108285Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-17T00:40:01.108395Z	    }
2025-09-17T00:40:01.108494Z	  
2025-09-17T00:40:01.108588Z	Query parameters: {
2025-09-17T00:40:01.108739Z	  limit: 8,
2025-09-17T00:40:01.108817Z	  offset: 0,
2025-09-17T00:40:01.10889Z	  category: undefined,
2025-09-17T00:40:01.108985Z	  brand: 'ncc',
2025-09-17T00:40:01.109077Z	  featured: undefined
2025-09-17T00:40:01.109169Z	}
2025-09-17T00:40:01.109291Z	Fetching solutions with query: 
2025-09-17T00:40:01.109474Z	    {
2025-09-17T00:40:01.109586Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:01.109695Z	        
2025-09-17T00:40:01.109789Z	    _id,
2025-09-17T00:40:01.110027Z	    title,
2025-09-17T00:40:01.110125Z	    "slug": slug.current,
2025-09-17T00:40:01.110214Z	    summary,
2025-09-17T00:40:01.110461Z	    description,
2025-09-17T00:40:01.110531Z	    coverImage,
2025-09-17T00:40:01.110634Z	    primaryBrand->{
2025-09-17T00:40:01.110734Z	      _id,
2025-09-17T00:40:01.110828Z	      name,
2025-09-17T00:40:01.110922Z	      "slug": slug.current,
2025-09-17T00:40:01.111066Z	      logo
2025-09-17T00:40:01.111169Z	    },
2025-09-17T00:40:01.111279Z	    relatedBrands[]->{
2025-09-17T00:40:01.111376Z	      _id,
2025-09-17T00:40:01.111446Z	      name,
2025-09-17T00:40:01.111503Z	      "slug": slug.current,
2025-09-17T00:40:01.111559Z	      logo
2025-09-17T00:40:01.111614Z	    },
2025-09-17T00:40:01.111674Z	    targetMarket,
2025-09-17T00:40:01.111802Z	    complexity,
2025-09-17T00:40:01.111882Z	    publishedAt,
2025-09-17T00:40:01.112011Z	    isPublished,
2025-09-17T00:40:01.112132Z	    isFeatured,
2025-09-17T00:40:01.112249Z	    viewCount,
2025-09-17T00:40:01.112447Z	    _createdAt,
2025-09-17T00:40:01.112629Z	    _updatedAt
2025-09-17T00:40:01.112741Z	  
2025-09-17T00:40:01.112817Z	      },
2025-09-17T00:40:01.112964Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-17T00:40:01.113121Z	    }
2025-09-17T00:40:01.113294Z	  
2025-09-17T00:40:01.113412Z	Query parameters: {
2025-09-17T00:40:01.113568Z	  limit: 4,
2025-09-17T00:40:01.113665Z	  offset: 0,
2025-09-17T00:40:01.113766Z	  targetMarket: undefined,
2025-09-17T00:40:01.114013Z	  brand: 'ncc',
2025-09-17T00:40:01.114109Z	  featured: undefined
2025-09-17T00:40:01.114199Z	}
2025-09-17T00:40:01.114294Z	✅ [getBrandData] Found brand: ncc
2025-09-17T00:40:01.11437Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:40:01.114428Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:40:01.114488Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-17T00:40:01.11457Z	Fetching products with query: 
2025-09-17T00:40:01.114656Z	    {
2025-09-17T00:40:01.114764Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:01.114874Z	        
2025-09-17T00:40:01.114986Z	    _id,
2025-09-17T00:40:01.115089Z	    _type,
2025-09-17T00:40:01.115191Z	    partNumber,
2025-09-17T00:40:01.115303Z	    "slug": slug.current,
2025-09-17T00:40:01.115392Z	    title,
2025-09-17T00:40:01.115481Z	    shortDescription,
2025-09-17T00:40:01.115596Z	    image,
2025-09-17T00:40:01.115818Z	    brand->{
2025-09-17T00:40:01.128436Z	      name,
2025-09-17T00:40:01.128556Z	      "slug": slug.current,
2025-09-17T00:40:01.128623Z	      logo
2025-09-17T00:40:01.128698Z	    },
2025-09-17T00:40:01.128757Z	    category->{
2025-09-17T00:40:01.128817Z	      name,
2025-09-17T00:40:01.128872Z	      "slug": slug.current
2025-09-17T00:40:01.128934Z	    },
2025-09-17T00:40:01.129153Z	    pricing{
2025-09-17T00:40:01.129309Z	      currency,
2025-09-17T00:40:01.129429Z	      tiers[]{
2025-09-17T00:40:01.129529Z	        quantity,
2025-09-17T00:40:01.129634Z	        price,
2025-09-17T00:40:01.129753Z	        unit
2025-09-17T00:40:01.129867Z	      },
2025-09-17T00:40:01.129995Z	      moq,
2025-09-17T00:40:01.130112Z	      leadTime,
2025-09-17T00:40:01.130229Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:01.130364Z	      "price": tiers[0].price,
2025-09-17T00:40:01.130498Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:01.130601Z	    },
2025-09-17T00:40:01.130698Z	    inventory{
2025-09-17T00:40:01.130796Z	      quantity,
2025-09-17T00:40:01.130893Z	      status,
2025-09-17T00:40:01.130999Z	      warehouse,
2025-09-17T00:40:01.131097Z	      lastUpdated,
2025-09-17T00:40:01.131196Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:01.131325Z	      "inStock": status == "in_stock",
2025-09-17T00:40:01.13143Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:01.131531Z	    },
2025-09-17T00:40:01.131628Z	    isActive,
2025-09-17T00:40:01.131725Z	    isFeatured,
2025-09-17T00:40:01.13182Z	    isNew,
2025-09-17T00:40:01.131917Z	    _createdAt,
2025-09-17T00:40:01.13203Z	    _updatedAt
2025-09-17T00:40:01.132134Z	  
2025-09-17T00:40:01.132252Z	      },
2025-09-17T00:40:01.132379Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-17T00:40:01.132489Z	    }
2025-09-17T00:40:01.1326Z	  
2025-09-17T00:40:01.132692Z	Query parameters: {
2025-09-17T00:40:01.132786Z	  limit: 8,
2025-09-17T00:40:01.132877Z	  offset: 0,
2025-09-17T00:40:01.132977Z	  category: undefined,
2025-09-17T00:40:01.133089Z	  brand: 'ncc',
2025-09-17T00:40:01.133189Z	  featured: undefined
2025-09-17T00:40:01.1333Z	}
2025-09-17T00:40:01.1334Z	Fetching solutions with query: 
2025-09-17T00:40:01.133495Z	    {
2025-09-17T00:40:01.13359Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:01.133697Z	        
2025-09-17T00:40:01.133795Z	    _id,
2025-09-17T00:40:01.133888Z	    title,
2025-09-17T00:40:01.133993Z	    "slug": slug.current,
2025-09-17T00:40:01.134083Z	    summary,
2025-09-17T00:40:01.13417Z	    description,
2025-09-17T00:40:01.134256Z	    coverImage,
2025-09-17T00:40:01.134366Z	    primaryBrand->{
2025-09-17T00:40:01.134472Z	      _id,
2025-09-17T00:40:01.134567Z	      name,
2025-09-17T00:40:01.134658Z	      "slug": slug.current,
2025-09-17T00:40:01.134753Z	      logo
2025-09-17T00:40:01.134845Z	    },
2025-09-17T00:40:01.134942Z	    relatedBrands[]->{
2025-09-17T00:40:01.135035Z	      _id,
2025-09-17T00:40:01.135134Z	      name,
2025-09-17T00:40:01.135226Z	      "slug": slug.current,
2025-09-17T00:40:01.135339Z	      logo
2025-09-17T00:40:01.135436Z	    },
2025-09-17T00:40:01.135527Z	    targetMarket,
2025-09-17T00:40:01.135618Z	    complexity,
2025-09-17T00:40:01.135721Z	    publishedAt,
2025-09-17T00:40:01.135829Z	    isPublished,
2025-09-17T00:40:01.135943Z	    isFeatured,
2025-09-17T00:40:01.136055Z	    viewCount,
2025-09-17T00:40:01.136159Z	    _createdAt,
2025-09-17T00:40:01.136293Z	    _updatedAt
2025-09-17T00:40:01.136409Z	  
2025-09-17T00:40:01.136514Z	      },
2025-09-17T00:40:01.136627Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-17T00:40:01.13674Z	    }
2025-09-17T00:40:01.136847Z	  
2025-09-17T00:40:01.136958Z	Query parameters: {
2025-09-17T00:40:01.137068Z	  limit: 4,
2025-09-17T00:40:01.13717Z	  offset: 0,
2025-09-17T00:40:01.137264Z	  targetMarket: undefined,
2025-09-17T00:40:01.137392Z	  brand: 'ncc',
2025-09-17T00:40:01.137499Z	  featured: undefined
2025-09-17T00:40:01.137611Z	}
2025-09-17T00:40:01.137726Z	✅ [getBrandData] Found brand: ncc
2025-09-17T00:40:01.137843Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:40:01.137958Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:40:01.13806Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-17T00:40:01.138161Z	Fetching products with query: 
2025-09-17T00:40:01.138282Z	    {
2025-09-17T00:40:01.1384Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:01.138505Z	        
2025-09-17T00:40:01.138605Z	    _id,
2025-09-17T00:40:01.138705Z	    _type,
2025-09-17T00:40:01.138805Z	    partNumber,
2025-09-17T00:40:01.138903Z	    "slug": slug.current,
2025-09-17T00:40:01.139019Z	    title,
2025-09-17T00:40:01.139127Z	    shortDescription,
2025-09-17T00:40:01.139226Z	    image,
2025-09-17T00:40:01.139355Z	    brand->{
2025-09-17T00:40:01.139464Z	      name,
2025-09-17T00:40:01.139568Z	      "slug": slug.current,
2025-09-17T00:40:01.139671Z	      logo
2025-09-17T00:40:01.13977Z	    },
2025-09-17T00:40:01.139883Z	    category->{
2025-09-17T00:40:01.139994Z	      name,
2025-09-17T00:40:01.140092Z	      "slug": slug.current
2025-09-17T00:40:01.140186Z	    },
2025-09-17T00:40:01.140305Z	    pricing{
2025-09-17T00:40:01.140413Z	      currency,
2025-09-17T00:40:01.140511Z	      tiers[]{
2025-09-17T00:40:01.140619Z	        quantity,
2025-09-17T00:40:01.140717Z	        price,
2025-09-17T00:40:01.140815Z	        unit
2025-09-17T00:40:01.140915Z	      },
2025-09-17T00:40:01.141022Z	      moq,
2025-09-17T00:40:01.141118Z	      leadTime,
2025-09-17T00:40:01.141216Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:01.141342Z	      "price": tiers[0].price,
2025-09-17T00:40:01.141441Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:01.141543Z	    },
2025-09-17T00:40:01.141639Z	    inventory{
2025-09-17T00:40:01.141735Z	      quantity,
2025-09-17T00:40:01.141832Z	      status,
2025-09-17T00:40:01.141935Z	      warehouse,
2025-09-17T00:40:01.142058Z	      lastUpdated,
2025-09-17T00:40:01.142176Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:01.142303Z	      "inStock": status == "in_stock",
2025-09-17T00:40:01.142404Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:01.142498Z	    },
2025-09-17T00:40:01.142591Z	    isActive,
2025-09-17T00:40:01.142682Z	    isFeatured,
2025-09-17T00:40:01.14278Z	    isNew,
2025-09-17T00:40:01.142877Z	    _createdAt,
2025-09-17T00:40:01.143002Z	    _updatedAt
2025-09-17T00:40:01.143109Z	  
2025-09-17T00:40:01.143213Z	      },
2025-09-17T00:40:01.143341Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-17T00:40:01.143475Z	    }
2025-09-17T00:40:01.143578Z	  
2025-09-17T00:40:01.143675Z	Query parameters: {
2025-09-17T00:40:01.143774Z	  limit: 8,
2025-09-17T00:40:01.143872Z	  offset: 0,
2025-09-17T00:40:01.143984Z	  category: undefined,
2025-09-17T00:40:01.144096Z	  brand: 'ixys',
2025-09-17T00:40:01.144205Z	  featured: undefined
2025-09-17T00:40:01.144331Z	}
2025-09-17T00:40:01.144442Z	Fetching solutions with query: 
2025-09-17T00:40:01.144551Z	    {
2025-09-17T00:40:01.14466Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:01.144772Z	        
2025-09-17T00:40:01.14492Z	    _id,
2025-09-17T00:40:01.145037Z	    title,
2025-09-17T00:40:01.145144Z	    "slug": slug.current,
2025-09-17T00:40:01.145245Z	    summary,
2025-09-17T00:40:01.145368Z	    description,
2025-09-17T00:40:01.145479Z	    coverImage,
2025-09-17T00:40:01.145577Z	    primaryBrand->{
2025-09-17T00:40:01.145657Z	      _id,
2025-09-17T00:40:01.145748Z	      name,
2025-09-17T00:40:01.145851Z	      "slug": slug.current,
2025-09-17T00:40:01.145969Z	      logo
2025-09-17T00:40:01.146081Z	    },
2025-09-17T00:40:01.146192Z	    relatedBrands[]->{
2025-09-17T00:40:01.146318Z	      _id,
2025-09-17T00:40:01.146429Z	      name,
2025-09-17T00:40:01.146532Z	      "slug": slug.current,
2025-09-17T00:40:01.146658Z	      logo
2025-09-17T00:40:01.146764Z	    },
2025-09-17T00:40:01.14688Z	    targetMarket,
2025-09-17T00:40:01.146999Z	    complexity,
2025-09-17T00:40:01.14711Z	    publishedAt,
2025-09-17T00:40:01.147218Z	    isPublished,
2025-09-17T00:40:01.147335Z	    isFeatured,
2025-09-17T00:40:01.147446Z	    viewCount,
2025-09-17T00:40:01.147559Z	    _createdAt,
2025-09-17T00:40:01.147661Z	    _updatedAt
2025-09-17T00:40:01.147771Z	  
2025-09-17T00:40:01.14789Z	      },
2025-09-17T00:40:01.148012Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-17T00:40:01.148149Z	    }
2025-09-17T00:40:01.148284Z	  
2025-09-17T00:40:01.148401Z	Query parameters: {
2025-09-17T00:40:01.148511Z	  limit: 4,
2025-09-17T00:40:01.148618Z	  offset: 0,
2025-09-17T00:40:01.148728Z	  targetMarket: undefined,
2025-09-17T00:40:01.148849Z	  brand: 'ixys',
2025-09-17T00:40:01.148972Z	  featured: undefined
2025-09-17T00:40:01.149079Z	}
2025-09-17T00:40:01.149183Z	✅ [getBrandData] Found brand: IXYS
2025-09-17T00:40:01.149359Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:40:01.149498Z	Solutions fetch result: {
2025-09-17T00:40:01.149612Z	  totalSolutions: 1,
2025-09-17T00:40:01.14971Z	  fetchedSolutions: 1,
2025-09-17T00:40:01.149807Z	  firstSolution: {
2025-09-17T00:40:01.149903Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-17T00:40:01.150011Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-17T00:40:01.150109Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-17T00:40:01.150206Z	    complexity: 'medium',
2025-09-17T00:40:01.150336Z	    coverImage: null,
2025-09-17T00:40:01.150445Z	    description: [ [Object] ],
2025-09-17T00:40:01.150546Z	    isFeatured: false,
2025-09-17T00:40:01.150643Z	    isPublished: true,
2025-09-17T00:40:01.150768Z	    primaryBrand: {
2025-09-17T00:40:01.150875Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:40:01.150994Z	      logo: null,
2025-09-17T00:40:01.151093Z	      name: 'IXYS',
2025-09-17T00:40:01.151203Z	      slug: 'ixys'
2025-09-17T00:40:01.151325Z	    },
2025-09-17T00:40:01.151435Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-17T00:40:01.15154Z	    relatedBrands: null,
2025-09-17T00:40:01.151644Z	    slug: '99999',
2025-09-17T00:40:01.151751Z	    summary: '99999',
2025-09-17T00:40:01.151861Z	    targetMarket: 'industrial-automation',
2025-09-17T00:40:01.151989Z	    title: '99999',
2025-09-17T00:40:01.152089Z	    viewCount: 0
2025-09-17T00:40:01.152196Z	  }
2025-09-17T00:40:01.152316Z	}
2025-09-17T00:40:01.152432Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-17T00:40:01.152553Z	Fetching products with query: 
2025-09-17T00:40:01.152655Z	    {
2025-09-17T00:40:01.152756Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:01.152858Z	        
2025-09-17T00:40:01.152964Z	    _id,
2025-09-17T00:40:01.153065Z	    _type,
2025-09-17T00:40:01.153166Z	    partNumber,
2025-09-17T00:40:01.153276Z	    "slug": slug.current,
2025-09-17T00:40:01.153386Z	    title,
2025-09-17T00:40:01.1535Z	    shortDescription,
2025-09-17T00:40:01.153601Z	    image,
2025-09-17T00:40:01.153713Z	    brand->{
2025-09-17T00:40:01.153818Z	      name,
2025-09-17T00:40:01.154076Z	      "slug": slug.current,
2025-09-17T00:40:01.154232Z	      logo
2025-09-17T00:40:01.154427Z	    },
2025-09-17T00:40:01.15456Z	    category->{
2025-09-17T00:40:01.154757Z	      name,
2025-09-17T00:40:01.154881Z	      "slug": slug.current
2025-09-17T00:40:01.155062Z	    },
2025-09-17T00:40:01.155181Z	    pricing{
2025-09-17T00:40:01.155337Z	      currency,
2025-09-17T00:40:01.155508Z	      tiers[]{
2025-09-17T00:40:01.15562Z	        quantity,
2025-09-17T00:40:01.155793Z	        price,
2025-09-17T00:40:01.155901Z	        unit
2025-09-17T00:40:01.156078Z	      },
2025-09-17T00:40:01.156234Z	      moq,
2025-09-17T00:40:01.156354Z	      leadTime,
2025-09-17T00:40:01.156455Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:01.15655Z	      "price": tiers[0].price,
2025-09-17T00:40:01.156643Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:01.156752Z	    },
2025-09-17T00:40:01.156848Z	    inventory{
2025-09-17T00:40:01.156946Z	      quantity,
2025-09-17T00:40:01.157033Z	      status,
2025-09-17T00:40:01.15712Z	      warehouse,
2025-09-17T00:40:01.157217Z	      lastUpdated,
2025-09-17T00:40:01.157417Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:01.157535Z	      "inStock": status == "in_stock",
2025-09-17T00:40:01.157635Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:01.157732Z	    },
2025-09-17T00:40:01.157828Z	    isActive,
2025-09-17T00:40:01.15795Z	    isFeatured,
2025-09-17T00:40:01.158049Z	    isNew,
2025-09-17T00:40:01.158145Z	    _createdAt,
2025-09-17T00:40:01.15824Z	    _updatedAt
2025-09-17T00:40:01.158348Z	  
2025-09-17T00:40:01.158444Z	      },
2025-09-17T00:40:01.158537Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-17T00:40:01.158634Z	    }
2025-09-17T00:40:01.158725Z	  
2025-09-17T00:40:01.158824Z	Query parameters: {
2025-09-17T00:40:01.158922Z	  limit: 8,
2025-09-17T00:40:01.159028Z	  offset: 0,
2025-09-17T00:40:01.159125Z	  category: undefined,
2025-09-17T00:40:01.159232Z	  brand: 'ixys',
2025-09-17T00:40:01.159348Z	  featured: undefined
2025-09-17T00:40:01.159448Z	}
2025-09-17T00:40:01.159537Z	Fetching solutions with query: 
2025-09-17T00:40:01.159624Z	    {
2025-09-17T00:40:01.159707Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:01.159813Z	        
2025-09-17T00:40:01.159918Z	    _id,
2025-09-17T00:40:01.16001Z	    title,
2025-09-17T00:40:01.160097Z	    "slug": slug.current,
2025-09-17T00:40:01.160196Z	    summary,
2025-09-17T00:40:01.160308Z	    description,
2025-09-17T00:40:01.160409Z	    coverImage,
2025-09-17T00:40:01.160506Z	    primaryBrand->{
2025-09-17T00:40:01.16064Z	      _id,
2025-09-17T00:40:01.160755Z	      name,
2025-09-17T00:40:01.160852Z	      "slug": slug.current,
2025-09-17T00:40:01.160919Z	      logo
2025-09-17T00:40:01.160976Z	    },
2025-09-17T00:40:01.16103Z	    relatedBrands[]->{
2025-09-17T00:40:01.161083Z	      _id,
2025-09-17T00:40:01.161136Z	      name,
2025-09-17T00:40:01.16119Z	      "slug": slug.current,
2025-09-17T00:40:01.161242Z	      logo
2025-09-17T00:40:01.161328Z	    },
2025-09-17T00:40:01.161388Z	    targetMarket,
2025-09-17T00:40:01.161442Z	    complexity,
2025-09-17T00:40:01.161495Z	    publishedAt,
2025-09-17T00:40:01.16157Z	    isPublished,
2025-09-17T00:40:01.161632Z	    isFeatured,
2025-09-17T00:40:01.161694Z	    viewCount,
2025-09-17T00:40:01.161749Z	    _createdAt,
2025-09-17T00:40:01.161803Z	    _updatedAt
2025-09-17T00:40:01.161856Z	  
2025-09-17T00:40:01.161916Z	      },
2025-09-17T00:40:01.161978Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-17T00:40:01.162034Z	    }
2025-09-17T00:40:01.162104Z	  
2025-09-17T00:40:01.162207Z	Query parameters: {
2025-09-17T00:40:01.162279Z	  limit: 4,
2025-09-17T00:40:01.162353Z	  offset: 0,
2025-09-17T00:40:01.162432Z	  targetMarket: undefined,
2025-09-17T00:40:01.162527Z	  brand: 'ixys',
2025-09-17T00:40:01.162588Z	  featured: undefined
2025-09-17T00:40:01.162642Z	}
2025-09-17T00:40:01.1627Z	✅ [getBrandData] Found brand: IXYS
2025-09-17T00:40:01.162758Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:40:01.162812Z	Solutions fetch result: {
2025-09-17T00:40:01.16291Z	  totalSolutions: 1,
2025-09-17T00:40:01.163013Z	  fetchedSolutions: 1,
2025-09-17T00:40:01.163157Z	  firstSolution: {
2025-09-17T00:40:01.163433Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-17T00:40:01.163614Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-17T00:40:01.163756Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-17T00:40:01.163869Z	    complexity: 'medium',
2025-09-17T00:40:01.164028Z	    coverImage: null,
2025-09-17T00:40:01.164137Z	    description: [ [Object] ],
2025-09-17T00:40:01.164265Z	    isFeatured: false,
2025-09-17T00:40:01.16437Z	    isPublished: true,
2025-09-17T00:40:01.164477Z	    primaryBrand: {
2025-09-17T00:40:01.164583Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:40:01.164694Z	      logo: null,
2025-09-17T00:40:01.1648Z	      name: 'IXYS',
2025-09-17T00:40:01.164903Z	      slug: 'ixys'
2025-09-17T00:40:01.16503Z	    },
2025-09-17T00:40:01.165147Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-17T00:40:01.165257Z	    relatedBrands: null,
2025-09-17T00:40:01.165384Z	    slug: '99999',
2025-09-17T00:40:01.16549Z	    summary: '99999',
2025-09-17T00:40:01.165594Z	    targetMarket: 'industrial-automation',
2025-09-17T00:40:01.165706Z	    title: '99999',
2025-09-17T00:40:01.165865Z	    viewCount: 0
2025-09-17T00:40:01.165987Z	  }
2025-09-17T00:40:01.166146Z	}
2025-09-17T00:40:01.166355Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-17T00:40:01.166495Z	Fetching products with query: 
2025-09-17T00:40:01.16656Z	    {
2025-09-17T00:40:01.166614Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:01.166673Z	        
2025-09-17T00:40:01.166727Z	    _id,
2025-09-17T00:40:01.166779Z	    _type,
2025-09-17T00:40:01.166842Z	    partNumber,
2025-09-17T00:40:01.166898Z	    "slug": slug.current,
2025-09-17T00:40:01.166958Z	    title,
2025-09-17T00:40:01.167011Z	    shortDescription,
2025-09-17T00:40:01.167066Z	    image,
2025-09-17T00:40:01.167118Z	    brand->{
2025-09-17T00:40:01.167171Z	      name,
2025-09-17T00:40:01.167224Z	      "slug": slug.current,
2025-09-17T00:40:01.167299Z	      logo
2025-09-17T00:40:01.167361Z	    },
2025-09-17T00:40:01.167414Z	    category->{
2025-09-17T00:40:01.167472Z	      name,
2025-09-17T00:40:01.167525Z	      "slug": slug.current
2025-09-17T00:40:01.16758Z	    },
2025-09-17T00:40:01.167633Z	    pricing{
2025-09-17T00:40:01.167688Z	      currency,
2025-09-17T00:40:01.167741Z	      tiers[]{
2025-09-17T00:40:01.167797Z	        quantity,
2025-09-17T00:40:01.16785Z	        price,
2025-09-17T00:40:01.167903Z	        unit
2025-09-17T00:40:01.167963Z	      },
2025-09-17T00:40:01.168017Z	      moq,
2025-09-17T00:40:01.168069Z	      leadTime,
2025-09-17T00:40:01.168121Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:01.168175Z	      "price": tiers[0].price,
2025-09-17T00:40:01.168229Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:01.168306Z	    },
2025-09-17T00:40:01.168366Z	    inventory{
2025-09-17T00:40:01.16842Z	      quantity,
2025-09-17T00:40:01.168474Z	      status,
2025-09-17T00:40:01.168526Z	      warehouse,
2025-09-17T00:40:01.16858Z	      lastUpdated,
2025-09-17T00:40:01.168633Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:01.16869Z	      "inStock": status == "in_stock",
2025-09-17T00:40:01.168748Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:01.168801Z	    },
2025-09-17T00:40:01.168853Z	    isActive,
2025-09-17T00:40:01.168912Z	    isFeatured,
2025-09-17T00:40:01.168966Z	    isNew,
2025-09-17T00:40:01.169019Z	    _createdAt,
2025-09-17T00:40:01.169077Z	    _updatedAt
2025-09-17T00:40:01.16913Z	  
2025-09-17T00:40:01.169183Z	      },
2025-09-17T00:40:01.169238Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-17T00:40:01.169327Z	    }
2025-09-17T00:40:01.169397Z	  
2025-09-17T00:40:01.169453Z	Query parameters: {
2025-09-17T00:40:01.169506Z	  limit: 8,
2025-09-17T00:40:01.169558Z	  offset: 0,
2025-09-17T00:40:01.169612Z	  category: undefined,
2025-09-17T00:40:01.169666Z	  brand: 'semikron',
2025-09-17T00:40:01.16972Z	  featured: undefined
2025-09-17T00:40:01.169772Z	}
2025-09-17T00:40:01.169824Z	Fetching solutions with query: 
2025-09-17T00:40:01.169876Z	    {
2025-09-17T00:40:01.169937Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:01.169998Z	        
2025-09-17T00:40:01.170051Z	    _id,
2025-09-17T00:40:01.170103Z	    title,
2025-09-17T00:40:01.170156Z	    "slug": slug.current,
2025-09-17T00:40:01.170209Z	    summary,
2025-09-17T00:40:01.170263Z	    description,
2025-09-17T00:40:01.170343Z	    coverImage,
2025-09-17T00:40:01.170405Z	    primaryBrand->{
2025-09-17T00:40:01.170459Z	      _id,
2025-09-17T00:40:01.170511Z	      name,
2025-09-17T00:40:01.170562Z	      "slug": slug.current,
2025-09-17T00:40:01.170616Z	      logo
2025-09-17T00:40:01.17067Z	    },
2025-09-17T00:40:01.170722Z	    relatedBrands[]->{
2025-09-17T00:40:01.170774Z	      _id,
2025-09-17T00:40:01.170825Z	      name,
2025-09-17T00:40:01.170876Z	      "slug": slug.current,
2025-09-17T00:40:01.170936Z	      logo
2025-09-17T00:40:01.170989Z	    },
2025-09-17T00:40:01.171041Z	    targetMarket,
2025-09-17T00:40:01.171093Z	    complexity,
2025-09-17T00:40:01.171152Z	    publishedAt,
2025-09-17T00:40:01.171206Z	    isPublished,
2025-09-17T00:40:01.171258Z	    isFeatured,
2025-09-17T00:40:01.171342Z	    viewCount,
2025-09-17T00:40:01.171398Z	    _createdAt,
2025-09-17T00:40:01.171451Z	    _updatedAt
2025-09-17T00:40:01.171503Z	  
2025-09-17T00:40:01.171557Z	      },
2025-09-17T00:40:01.171612Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-17T00:40:01.171674Z	    }
2025-09-17T00:40:01.171728Z	  
2025-09-17T00:40:01.171781Z	Query parameters: {
2025-09-17T00:40:01.171835Z	  limit: 4,
2025-09-17T00:40:01.171887Z	  offset: 0,
2025-09-17T00:40:01.171948Z	  targetMarket: undefined,
2025-09-17T00:40:01.172001Z	  brand: 'semikron',
2025-09-17T00:40:01.172055Z	  featured: undefined
2025-09-17T00:40:01.172107Z	}
2025-09-17T00:40:01.172169Z	✅ [getBrandData] Found brand: Semikron
2025-09-17T00:40:01.172224Z	Products fetch result: {
2025-09-17T00:40:01.172294Z	  totalProducts: 1,
2025-09-17T00:40:01.172389Z	  fetchedProducts: 1,
2025-09-17T00:40:01.172447Z	  firstProduct: {
2025-09-17T00:40:01.172501Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-17T00:40:01.172567Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-17T00:40:01.172649Z	    _type: 'product',
2025-09-17T00:40:01.172714Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-17T00:40:01.172768Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-17T00:40:01.172823Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:40:01.172916Z	    image: null,
2025-09-17T00:40:01.173003Z	    inventory: {
2025-09-17T00:40:01.173092Z	      inStock: true,
2025-09-17T00:40:01.173195Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-17T00:40:01.173324Z	      quantity: 0,
2025-09-17T00:40:01.173441Z	      status: 'in_stock',
2025-09-17T00:40:01.173538Z	      warehouse: null
2025-09-17T00:40:01.173595Z	    },
2025-09-17T00:40:01.173648Z	    isActive: true,
2025-09-17T00:40:01.173729Z	    isFeatured: false,
2025-09-17T00:40:01.173791Z	    isNew: false,
2025-09-17T00:40:01.17385Z	    partNumber: 'SKKT106/16E',
2025-09-17T00:40:01.173911Z	    pricing: {
2025-09-17T00:40:01.173966Z	      currency: 'CNY',
2025-09-17T00:40:01.174028Z	      leadTime❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:40:01.174086Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:40:01.17414Z	Error fetching brand solutions data: Error: NEXT_NOT_FOUND
2025-09-17T00:40:01.174194Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:40:01.174247Z	    at f (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/solutions/page.js:1:4481)
2025-09-17T00:40:01.174329Z	    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-09-17T00:40:01.174387Z	    at runNextTicks (node:internal/process/task_queues:64:3)
2025-09-17T00:40:01.174442Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-17T00:40:01.174495Z	    at process.processTimers (node:internal/timers:512:7) {
2025-09-17T00:40:01.174547Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:40:01.174599Z	}
2025-09-17T00:40:01.174652Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:40:01.174714Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:40:01.17477Z	Error fetching brand solutions data: Error: NEXT_NOT_FOUND
2025-09-17T00:40:01.174822Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:40:01.174874Z	    at f (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/solutions/page.js:1:4481)
2025-09-17T00:40:01.174932Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-17T00:40:01.174985Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:40:01.175037Z	}
2025-09-17T00:40:01.175091Z	: null,
2025-09-17T00:40:01.175143Z	      moq: null,
2025-09-17T00:40:01.175204Z	      price: null,
2025-09-17T00:40:01.175256Z	      tiers: null
2025-09-17T00:40:01.175342Z	    },
2025-09-17T00:40:01.175403Z	    shortDescription: 'SKKT106/16E',
2025-09-17T00:40:01.17546Z	    slug: 'SKKT106/16E',
2025-09-17T00:40:01.175512Z	    title: 'SKKT106/16E'
2025-09-17T00:40:01.175566Z	  }
2025-09-17T00:40:01.175627Z	}
2025-09-17T00:40:01.175684Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:40:01.175743Z	🔍 [getBrandData] Searching for brand with slug: semikron
2025-09-17T00:40:01.1758Z	Fetching products with query: 
2025-09-17T00:40:01.175853Z	    {
2025-09-17T00:40:01.175912Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:01.175968Z	        
2025-09-17T00:40:01.176026Z	    _id,
2025-09-17T00:40:01.176083Z	    _type,
2025-09-17T00:40:01.176138Z	    partNumber,
2025-09-17T00:40:01.17619Z	    "slug": slug.current,
2025-09-17T00:40:01.176246Z	    title,
2025-09-17T00:40:01.176312Z	    shortDescription,
2025-09-17T00:40:01.176366Z	    image,
2025-09-17T00:40:01.176422Z	    brand->{
2025-09-17T00:40:01.176477Z	      name,
2025-09-17T00:40:01.176529Z	      "slug": slug.current,
2025-09-17T00:40:01.176581Z	      logo
2025-09-17T00:40:01.176632Z	    },
2025-09-17T00:40:01.176688Z	    category->{
2025-09-17T00:40:01.17674Z	      name,
2025-09-17T00:40:01.176792Z	      "slug": slug.current
2025-09-17T00:40:01.176844Z	    },
2025-09-17T00:40:01.176895Z	    pricing{
2025-09-17T00:40:01.176955Z	      currency,
2025-09-17T00:40:01.177008Z	      tiers[]{
2025-09-17T00:40:01.17706Z	        quantity,
2025-09-17T00:40:01.177113Z	        price,
2025-09-17T00:40:01.177164Z	        unit
2025-09-17T00:40:01.177215Z	      },
2025-09-17T00:40:01.17728Z	      moq,
2025-09-17T00:40:01.177337Z	      leadTime,
2025-09-17T00:40:01.177391Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:01.177446Z	      "price": tiers[0].price,
2025-09-17T00:40:01.177498Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:01.17755Z	    },
2025-09-17T00:40:01.177601Z	    inventory{
2025-09-17T00:40:01.177659Z	      quantity,
2025-09-17T00:40:01.177711Z	      status,
2025-09-17T00:40:01.177764Z	      warehouse,
2025-09-17T00:40:01.177816Z	      lastUpdated,
2025-09-17T00:40:01.177869Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:01.177929Z	      "inStock": status == "in_stock",
2025-09-17T00:40:01.177983Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:01.178034Z	    },
2025-09-17T00:40:01.178088Z	    isActive,
2025-09-17T00:40:01.17814Z	    isFeatured,
2025-09-17T00:40:01.178193Z	    isNew,
2025-09-17T00:40:01.178246Z	    _createdAt,
2025-09-17T00:40:01.178311Z	    _updatedAt
2025-09-17T00:40:01.178365Z	  
2025-09-17T00:40:01.178419Z	      },
2025-09-17T00:40:01.178471Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "semikron"])
2025-09-17T00:40:01.178534Z	    }
2025-09-17T00:40:01.178596Z	  
2025-09-17T00:40:01.17865Z	Query parameters: {
2025-09-17T00:40:01.178704Z	  limit: 8,
2025-09-17T00:40:01.178759Z	  offset: 0,
2025-09-17T00:40:01.178813Z	  category: undefined,
2025-09-17T00:40:01.178867Z	  brand: 'semikron',
2025-09-17T00:40:01.17893Z	  featured: undefined
2025-09-17T00:40:01.178985Z	}
2025-09-17T00:40:01.179047Z	Fetching solutions with query: 
2025-09-17T00:40:01.1791Z	    {
2025-09-17T00:40:01.179153Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:01.179214Z	        
2025-09-17T00:40:01.17928Z	    _id,
2025-09-17T00:40:01.180252Z	    title,
2025-09-17T00:40:01.18039Z	    "slug": slug.current,
2025-09-17T00:40:01.180594Z	    summary,
2025-09-17T00:40:01.180705Z	    description,
2025-09-17T00:40:01.180896Z	    coverImage,
2025-09-17T00:40:01.181008Z	    primaryBrand->{
2025-09-17T00:40:01.181208Z	      _id,
2025-09-17T00:40:01.181414Z	      name,
2025-09-17T00:40:01.181618Z	      "slug": slug.current,
2025-09-17T00:40:01.181733Z	      logo
2025-09-17T00:40:01.181826Z	    },
2025-09-17T00:40:01.181931Z	    relatedBrands[]->{
2025-09-17T00:40:01.182024Z	      _id,
2025-09-17T00:40:01.182116Z	      name,
2025-09-17T00:40:01.182249Z	      "slug": slug.current,
2025-09-17T00:40:01.182388Z	      logo
2025-09-17T00:40:01.182505Z	    },
2025-09-17T00:40:01.182607Z	    targetMarket,
2025-09-17T00:40:01.182722Z	    complexity,
2025-09-17T00:40:01.182968Z	    publishedAt,
2025-09-17T00:40:01.183111Z	    isPublished,
2025-09-17T00:40:01.18322Z	    isFeatured,
2025-09-17T00:40:01.183359Z	    viewCount,
2025-09-17T00:40:01.183462Z	    _createdAt,
2025-09-17T00:40:01.183567Z	    _updatedAt
2025-09-17T00:40:01.183685Z	  
2025-09-17T00:40:01.183802Z	      },
2025-09-17T00:40:01.183912Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("semikron" in relatedBrands[]->slug.current || primaryBrand->slug.current == "semikron")])
2025-09-17T00:40:01.184011Z	    }
2025-09-17T00:40:01.184106Z	  
2025-09-17T00:40:01.1842Z	Query parameters: {
2025-09-17T00:40:01.184302Z	  limit: 4,
2025-09-17T00:40:01.184401Z	  offset: 0,
2025-09-17T00:40:01.18449Z	  targetMarket: undefined,
2025-09-17T00:40:01.184574Z	  brand: 'semikron',
2025-09-17T00:40:01.184668Z	  featured: undefined
2025-09-17T00:40:01.184765Z	}
2025-09-17T00:40:01.18486Z	✅ [getBrandData] Found brand: Semikron
2025-09-17T00:40:01.184974Z	Products fetch result: {
2025-09-17T00:40:01.185066Z	  totalProducts: 1,
2025-09-17T00:40:01.185155Z	  fetchedProducts: 1,
2025-09-17T00:40:01.185241Z	  firstProduct: {
2025-09-17T00:40:01.185342Z	    _createdAt: '2025-09-09T12:09:45Z',
2025-09-17T00:40:01.185432Z	    _id: '86f432e0-c8f3-4b01-8755-257a8db0dff1',
2025-09-17T00:40:01.185538Z	    _type: 'product',
2025-09-17T00:40:01.185646Z	    _updatedAt: '2025-09-09T18:25:17Z',
2025-09-17T00:40:01.185739Z	    brand: { logo: null, name: 'Semikron', slug: 'semikron' },
2025-09-17T00:40:01.185829Z	    category: { name: '功率半导体', slug: 'Power Semiconductor' },
2025-09-17T00:40:01.185933Z	    image: null,
2025-09-17T00:40:01.186053Z	    inventory: {
2025-09-17T00:40:01.186154Z	      inStock: true,
2025-09-17T00:40:01.186274Z	      lastUpdated: '2025-09-09T12:08:57.552Z',
2025-09-17T00:40:01.186378Z	      quantity: 0,
2025-09-17T00:40:01.186484Z	      status: 'in_stock',
2025-09-17T00:40:01.186581Z	      warehouse: null
2025-09-17T00:40:01.18668Z	    },
2025-09-17T00:40:01.186781Z	    isActive: true,
2025-09-17T00:40:01.186878Z	    isFeatured: false,
2025-09-17T00:40:01.186996Z	    isNew: false,
2025-09-17T00:40:01.18709Z	    partNumber: 'SKKT106/16E',
2025-09-17T00:40:01.187183Z	    pricing: {
2025-09-17T00:40:01.187281Z	      currency: 'CNY',
2025-09-17T00:40:01.187421Z	      leadTime: null,
2025-09-17T00:40:01.187624Z	      moq: null,
2025-09-17T00:40:01.18775Z	      price: null,
2025-09-17T00:40:01.187861Z	      tiers: null
2025-09-17T00:40:01.188029Z	    },
2025-09-17T00:40:01.188186Z	    shortDescription: 'SKKT106/16E',
2025-09-17T00:40:01.188304Z	    slug: 'SKKT106/16E',
2025-09-17T00:40:01.188406Z	    title: 'SKKT106/16E'
2025-09-17T00:40:01.188639Z	  }
2025-09-17T00:40:01.188854Z	}
2025-09-17T00:40:01.188956Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:40:01.18906Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:40:01.189239Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:40:01.189379Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:40:01.189545Z	🔍 [getBrandData] Searching for brand with slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:40:01.189673Z	Fetching products with query: 
2025-09-17T00:40:01.1898Z	    {
2025-09-17T00:40:01.189907Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:01.190042Z	        
2025-09-17T00:40:01.190156Z	    _id,
2025-09-17T00:40:01.190256Z	    _type,
2025-09-17T00:40:01.190389Z	    partNumber,
2025-09-17T00:40:01.190522Z	    "slug": slug.current,
2025-09-17T00:40:01.190632Z	    title,
2025-09-17T00:40:01.190799Z	    shortDescription,
2025-09-17T00:40:01.190959Z	    image,
2025-09-17T00:40:01.191105Z	    brand->{
2025-09-17T00:40:01.191291Z	      name,
2025-09-17T00:40:01.191443Z	      "slug": slug.current,
2025-09-17T00:40:01.191585Z	      logo
2025-09-17T00:40:01.191725Z	    },
2025-09-17T00:40:01.191826Z	    category->{
2025-09-17T00:40:01.191984Z	      name,
2025-09-17T00:40:01.192095Z	      "slug": slug.current
2025-09-17T00:40:01.192306Z	    },
2025-09-17T00:40:01.192459Z	    pricing{
2025-09-17T00:40:01.192543Z	      currency,
2025-09-17T00:40:01.192802Z	      tiers[]{
2025-09-17T00:40:01.192997Z	        quantity,
2025-09-17T00:40:01.193174Z	        price,
2025-09-17T00:40:01.193255Z	        unit
2025-09-17T00:40:01.193403Z	      },
2025-09-17T00:40:01.193549Z	      moq,
2025-09-17T00:40:01.193684Z	      leadTime,
2025-09-17T00:40:01.193783Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:01.193879Z	      "price": tiers[0].price,
2025-09-17T00:40:01.194081Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:01.194212Z	    },
2025-09-17T00:40:01.194388Z	    inventory{
2025-09-17T00:40:01.194525Z	      quantity,
2025-09-17T00:40:01.194684Z	      status,
2025-09-17T00:40:01.194838Z	      warehouse,
2025-09-17T00:40:01.195015Z	      lastUpdated,
2025-09-17T00:40:01.195171Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:01.195337Z	      "inStock": status == "in_stock",
2025-09-17T00:40:01.19544Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:01.195533Z	    },
2025-09-17T00:40:01.195815Z	    isActive,
2025-09-17T00:40:01.196013Z	    isFeatured,
2025-09-17T00:40:01.196329Z	    isNew,
2025-09-17T00:40:01.196513Z	    _createdAt,
2025-09-17T00:40:01.196754Z	    _updatedAt
2025-09-17T00:40:01.196996Z	  
2025-09-17T00:40:01.19714Z	      },
2025-09-17T00:40:01.197318Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C"])
2025-09-17T00:40:01.197522Z	    }
2025-09-17T00:40:01.197658Z	  
2025-09-17T00:40:01.197783Z	Query parameters: {
2025-09-17T00:40:01.197908Z	  limit: 8,
2025-09-17T00:40:01.198115Z	  offset: 0,
2025-09-17T00:40:01.198221Z	  category: undefined,
2025-09-17T00:40:01.198359Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:40:01.198573Z	  featured: undefined
2025-09-17T00:40:01.198725Z	}
2025-09-17T00:40:01.198881Z	Fetching solutions with query: 
2025-09-17T00:40:01.199033Z	    {
2025-09-17T00:40:01.199194Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:01.199332Z	        
2025-09-17T00:40:01.199444Z	    _id,
2025-09-17T00:40:01.199591Z	    title,
2025-09-17T00:40:01.199749Z	    "slug": slug.current,
2025-09-17T00:40:01.199869Z	    summary,
2025-09-17T00:40:01.200019Z	    description,
2025-09-17T00:40:01.200154Z	    coverImage,
2025-09-17T00:40:01.200256Z	    primaryBrand->{
2025-09-17T00:40:01.200468Z	      _id,
2025-09-17T00:40:01.2006Z	      name,
2025-09-17T00:40:01.200713Z	      "slug": slug.current,
2025-09-17T00:40:01.200872Z	      logo
2025-09-17T00:40:01.200989Z	    },
2025-09-17T00:40:01.201105Z	    relatedBrands[]->{
2025-09-17T00:40:01.201183Z	      _id,
2025-09-17T00:40:01.201375Z	      name,
2025-09-17T00:40:01.201507Z	      "slug": slug.current,
2025-09-17T00:40:01.201605Z	      logo
2025-09-17T00:40:01.201753Z	    },
2025-09-17T00:40:01.201827Z	    targetMarket,
2025-09-17T00:40:01.202054Z	    complexity,
2025-09-17T00:40:01.202241Z	    publishedAt,
2025-09-17T00:40:01.202362Z	    isPublished,
2025-09-17T00:40:01.202526Z	    isFeatured,
2025-09-17T00:40:01.202664Z	    viewCount,
2025-09-17T00:40:01.202771Z	    _createdAt,
2025-09-17T00:40:01.202908Z	    _updatedAt
2025-09-17T00:40:01.203069Z	  
2025-09-17T00:40:01.203184Z	      },
2025-09-17T00:40:01.203344Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("%E8%8B%B1%E9%A3%9E%E5%87%8C" in relatedBrands[]->slug.current || primaryBrand->slug.current == "%E8%8B%B1%E9%A3%9E%E5%87%8C")])
2025-09-17T00:40:01.203507Z	    }
2025-09-17T00:40:01.203675Z	  
2025-09-17T00:40:01.203776Z	Query parameters: {
2025-09-17T00:40:01.203956Z	  limit: 4,
2025-09-17T00:40:01.204067Z	  offset: 0,
2025-09-17T00:40:01.204183Z	  targetMarket: undefined,
2025-09-17T00:40:01.204302Z	  brand: '%E8%8B%B1%E9%A3%9E%E5%87%8C',
2025-09-17T00:40:01.204405Z	  featured: undefined
2025-09-17T00:40:01.204494Z	}
2025-09-17T00:40:01.204601Z	🔍 [getBrandData] No exact match found, trying relaxed search for: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:40:01.204713Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:40:01.204797Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:40:01.204893Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-17T00:40:01.20501Z	Fetching products with query: 
2025-09-17T00:40:01.205106Z	    {
2025-09-17T00:40:01.205209Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:01.205318Z	        
2025-09-17T00:40:01.205422Z	    _id,
2025-09-17T00:40:01.205494Z	    _type,
2025-09-17T00:40:01.205583Z	    partNumber,
2025-09-17T00:40:01.205671Z	    "slug": slug.current,
2025-09-17T00:40:01.205768Z	    title,
2025-09-17T00:40:01.205855Z	    shortDescription,
2025-09-17T00:40:01.205976Z	    image,
2025-09-17T00:40:01.206112Z	    brand->{
2025-09-17T00:40:01.206229Z	      name,
2025-09-17T00:40:01.206349Z	      "slug": slug.current,
2025-09-17T00:40:01.206412Z	      logo
2025-09-17T00:40:01.206497Z	    },
2025-09-17T00:40:01.206607Z	    category->{
2025-09-17T00:40:01.206811Z	      name,
2025-09-17T00:40:01.206891Z	      "slug": slug.current
2025-09-17T00:40:01.206954Z	    },
2025-09-17T00:40:01.207212Z	    pricing{
2025-09-17T00:40:01.207403Z	      currency,
2025-09-17T00:40:01.207487Z	      tiers[]{
2025-09-17T00:40:01.207674Z	        quantity,
2025-09-17T00:40:01.207859Z	        price,
2025-09-17T00:40:01.20795Z	        unit
2025-09-17T00:40:01.208114Z	      },
2025-09-17T00:40:01.208231Z	      moq,
2025-09-17T00:40:01.208505Z	      leadTime,
2025-09-17T00:40:01.208648Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:01.208763Z	      "price": tiers[0].price,
2025-09-17T00:40:01.208888Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:01.209054Z	    },
2025-09-17T00:40:01.209175Z	    inventory{
2025-09-17T00:40:01.209346Z	      quantity,
2025-09-17T00:40:01.209475Z	      status,
2025-09-17T00:40:01.209622Z	      warehouse,
2025-09-17T00:40:01.209743Z	      lastUpdated,
2025-09-17T00:40:01.209864Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:01.210055Z	      "inStock": status == "in_stock",
2025-09-17T00:40:01.210176Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:01.21032Z	    },
2025-09-17T00:40:01.210445Z	    isActive,
2025-09-17T00:40:01.210546Z	    isFeatured,
2025-09-17T00:40:01.210649Z	    isNew,
2025-09-17T00:40:01.210752Z	    _createdAt,
2025-09-17T00:40:01.210842Z	    _updatedAt
2025-09-17T00:40:01.210971Z	  
2025-09-17T00:40:01.211105Z	      },
2025-09-17T00:40:01.211228Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-17T00:40:01.211511Z	    }
2025-09-17T00:40:01.21164Z	  
2025-09-17T00:40:01.211743Z	Query parameters: {
2025-09-17T00:40:01.211863Z	  limit: 8,
2025-09-17T00:40:01.212026Z	  offset: 0,
2025-09-17T00:40:01.212162Z	  category: undefined,
2025-09-17T00:40:01.212262Z	  brand: 'sanrex',
2025-09-17T00:40:01.212419Z	  featured: undefined
2025-09-17T00:40:01.212537Z	}
2025-09-17T00:40:01.212637Z	Fetching solutions with query: 
2025-09-17T00:40:01.212729Z	    {
2025-09-17T00:40:01.212804Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:01.212866Z	        
2025-09-17T00:40:01.212957Z	    _id,
2025-09-17T00:40:01.213059Z	    title,
2025-09-17T00:40:01.213158Z	    "slug": slug.current,
2025-09-17T00:40:01.213249Z	    summary,
2025-09-17T00:40:01.213361Z	    description,
2025-09-17T00:40:01.213466Z	    coverImage,
2025-09-17T00:40:01.213567Z	    primaryBrand->{
2025-09-17T00:40:01.21368Z	      _id,
2025-09-17T00:40:01.21378Z	      name,
2025-09-17T00:40:01.213871Z	      "slug": slug.current,
2025-09-17T00:40:01.213967Z	      logo
2025-09-17T00:40:01.214068Z	    },
2025-09-17T00:40:01.214185Z	    relatedBrands[]->{
2025-09-17T00:40:01.214303Z	      _id,
2025-09-17T00:40:01.214398Z	      name,
2025-09-17T00:40:01.214499Z	      "slug": slug.current,
2025-09-17T00:40:01.2146Z	      logo
2025-09-17T00:40:01.214707Z	    },
2025-09-17T00:40:01.214803Z	    targetMarket,
2025-09-17T00:40:01.214895Z	    complexity,
2025-09-17T00:40:01.214993Z	    publishedAt,
2025-09-17T00:40:01.215091Z	    isPublished,
2025-09-17T00:40:01.215185Z	    isFeatured,
2025-09-17T00:40:01.215298Z	    viewCount,
2025-09-17T00:40:01.2154Z	    _createdAt,
2025-09-17T00:40:01.215491Z	    _updatedAt
2025-09-17T00:40:01.215579Z	  
2025-09-17T00:40:01.215688Z	      },
2025-09-17T00:40:01.21579Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-17T00:40:01.215873Z	    }
2025-09-17T00:40:01.215975Z	  
2025-09-17T00:40:01.216082Z	Query parameters: {
2025-09-17T00:40:01.216183Z	  limit: 4,
2025-09-17T00:40:01.216295Z	  offset: 0,
2025-09-17T00:40:01.216397Z	  targetMarket: undefined,
2025-09-17T00:40:01.216494Z	  brand: 'sanrex',
2025-09-17T00:40:01.216583Z	  featured: undefined
2025-09-17T00:40:01.216682Z	}
2025-09-17T00:40:01.216784Z	✅ [getBrandData] Found brand: Sanrex
2025-09-17T00:40:01.216904Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:40:01.217011Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:40:01.217096Z	🔍 [getBrandData] Searching for brand with slug: sanrex
2025-09-17T00:40:01.217161Z	Fetching products with query: 
2025-09-17T00:40:01.217239Z	    {
2025-09-17T00:40:01.217341Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:01.217404Z	        
2025-09-17T00:40:01.217598Z	    _id,
2025-09-17T00:40:01.217665Z	    _type,
2025-09-17T00:40:01.217723Z	    partNumber,
2025-09-17T00:40:01.217778Z	    "slug": slug.current,
2025-09-17T00:40:01.217851Z	    title,
2025-09-17T00:40:01.21794Z	    shortDescription,
2025-09-17T00:40:01.218032Z	    image,
2025-09-17T00:40:01.218122Z	    brand->{
2025-09-17T00:40:01.218219Z	      name,
2025-09-17T00:40:01.21833Z	      "slug": slug.current,
2025-09-17T00:40:01.218424Z	      logo
2025-09-17T00:40:01.218513Z	    },
2025-09-17T00:40:01.218601Z	    category->{
2025-09-17T00:40:01.218659Z	      name,
2025-09-17T00:40:01.218716Z	      "slug": slug.current
2025-09-17T00:40:01.218771Z	    },
2025-09-17T00:40:01.218826Z	    pricing{
2025-09-17T00:40:01.218886Z	      currency,
2025-09-17T00:40:01.218962Z	      tiers[]{
2025-09-17T00:40:01.21902Z	        quantity,
2025-09-17T00:40:01.219074Z	        price,
2025-09-17T00:40:01.219138Z	        unit
2025-09-17T00:40:01.219193Z	      },
2025-09-17T00:40:01.219246Z	      moq,
2025-09-17T00:40:01.219326Z	      leadTime,
2025-09-17T00:40:01.219384Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:01.21944Z	      "price": tiers[0].price,
2025-09-17T00:40:01.219495Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:01.219554Z	    },
2025-09-17T00:40:01.219607Z	    inventory{
2025-09-17T00:40:01.21966Z	      quantity,
2025-09-17T00:40:01.219716Z	      status,
2025-09-17T00:40:01.219769Z	      warehouse,
2025-09-17T00:40:01.219824Z	      lastUpdated,
2025-09-17T00:40:01.21989Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:01.219959Z	      "inStock": status == "in_stock",
2025-09-17T00:40:01.220014Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:01.220066Z	    },
2025-09-17T00:40:01.220119Z	    isActive,
2025-09-17T00:40:01.220174Z	    isFeatured,
2025-09-17T00:40:01.220234Z	    isNew,
2025-09-17T00:40:01.220311Z	    _createdAt,
2025-09-17T00:40:01.220368Z	    _updatedAt
2025-09-17T00:40:01.220423Z	  
2025-09-17T00:40:01.220477Z	      },
2025-09-17T00:40:01.220531Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "sanrex"])
2025-09-17T00:40:01.220591Z	    }
2025-09-17T00:40:01.220644Z	  
2025-09-17T00:40:01.220701Z	Query parameters: {
2025-09-17T00:40:01.220754Z	  limit: 8,
2025-09-17T00:40:01.220806Z	  offset: 0,
2025-09-17T00:40:01.220859Z	  category: undefined,
2025-09-17T00:40:01.220916Z	  brand: 'sanrex',
2025-09-17T00:40:01.220977Z	  featured: undefined
2025-09-17T00:40:01.22103Z	}
2025-09-17T00:40:01.221083Z	Fetching solutions with query: 
2025-09-17T00:40:01.221136Z	    {
2025-09-17T00:40:01.22119Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:01.221244Z	        
2025-09-17T00:40:01.221325Z	    _id,
2025-09-17T00:40:01.221382Z	    title,
2025-09-17T00:40:01.221435Z	    "slug": slug.current,
2025-09-17T00:40:01.221487Z	    summary,
2025-09-17T00:40:01.221546Z	    description,
2025-09-17T00:40:01.221601Z	    coverImage,
2025-09-17T00:40:01.221655Z	    primaryBrand->{
2025-09-17T00:40:01.221711Z	      _id,
2025-09-17T00:40:01.221764Z	      name,
2025-09-17T00:40:01.221816Z	      "slug": slug.current,
2025-09-17T00:40:01.22187Z	      logo
2025-09-17T00:40:01.221922Z	    },
2025-09-17T00:40:01.221983Z	    relatedBrands[]->{
2025-09-17T00:40:01.222126Z	      _id,
2025-09-17T00:40:01.222567Z	      name,
2025-09-17T00:40:01.222688Z	      "slug": slug.current,
2025-09-17T00:40:01.222925Z	      logo
2025-09-17T00:40:01.223051Z	    },
2025-09-17T00:40:01.223156Z	    targetMarket,
2025-09-17T00:40:01.223221Z	    complexity,
2025-09-17T00:40:01.223317Z	    publishedAt,
2025-09-17T00:40:01.223409Z	    isPublished,
2025-09-17T00:40:01.223858Z	    isFeatured,
2025-09-17T00:40:01.223942Z	    viewCount,
2025-09-17T00:40:01.224209Z	    _createdAt,
2025-09-17T00:40:01.224473Z	    _updatedAt
2025-09-17T00:40:01.224715Z	  
2025-09-17T00:40:01.22497Z	      },
2025-09-17T00:40:01.22515Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("sanrex" in relatedBrands[]->slug.current || primaryBrand->slug.current == "sanrex")])
2025-09-17T00:40:01.225258Z	    }
2025-09-17T00:40:01.22548Z	  
2025-09-17T00:40:01.225595Z	Query parameters: {
2025-09-17T00:40:01.225663Z	  limit: 4,
2025-09-17T00:40:01.225821Z	  offset: 0,
2025-09-17T00:40:01.225901Z	  targetMarket: undefined,
2025-09-17T00:40:01.226031Z	  brand: 'sanrex',
2025-09-17T00:40:01.226137Z	  featured: undefined
2025-09-17T00:40:01.226314Z	}
2025-09-17T00:40:01.226417Z	🔍 [getBrandData] Searching for brand with slug: qualcomm
2025-09-17T00:40:01.226553Z	Fetching products with query: 
2025-09-17T00:40:01.226614Z	    {
2025-09-17T00:40:01.226797Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:01.226881Z	        
2025-09-17T00:40:01.226941Z	    _id,
2025-09-17T00:40:01.226997Z	    _type,
2025-09-17T00:40:01.227051Z	    partNumber,
2025-09-17T00:40:01.227106Z	    "slug": slug.current,
2025-09-17T00:40:01.227158Z	    title,
2025-09-17T00:40:01.227212Z	    shortDescription,
2025-09-17T00:40:01.227276Z	    image,
2025-09-17T00:40:01.227353Z	    brand->{
2025-09-17T00:40:01.22741Z	      name,
2025-09-17T00:40:01.22747Z	      "slug": slug.current,
2025-09-17T00:40:01.227693Z	      logo
2025-09-17T00:40:01.227837Z	    },
2025-09-17T00:40:01.227991Z	    category->{
2025-09-17T00:40:01.228073Z	      name,
2025-09-17T00:40:01.22825Z	      "slug": slug.current
2025-09-17T00:40:01.228361Z	    },
2025-09-17T00:40:01.228521Z	    pricing{
2025-09-17T00:40:01.228815Z	      currency,
2025-09-17T00:40:01.229025Z	      tiers[]{
2025-09-17T00:40:01.229173Z	        quantity,
2025-09-17T00:40:01.229332Z	        price,
2025-09-17T00:40:01.229506Z	        unit
2025-09-17T00:40:01.229638Z	      },
2025-09-17T00:40:01.229793Z	      moq,
2025-09-17T00:40:01.229939Z	      leadTime,
2025-09-17T00:40:01.230075Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:01.230196Z	      "price": tiers[0].price,
2025-09-17T00:40:01.230369Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:01.230481Z	    },
2025-09-17T00:40:01.230654Z	    inventory{
2025-09-17T00:40:01.230795Z	      quantity,
2025-09-17T00:40:01.231016Z	      status,
2025-09-17T00:40:01.231096Z	      warehouse,
2025-09-17T00:40:01.231157Z	      lastUpdated,
2025-09-17T00:40:01.231514Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:01.23172Z	      "inStock": status == "in_stock",
2025-09-17T00:40:01.231894Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:01.232137Z	    },
2025-09-17T00:40:01.232241Z	    isActive,
2025-09-17T00:40:01.232767Z	    isFeatured,
2025-09-17T00:40:01.233025Z	    isNew,
2025-09-17T00:40:01.233106Z	    _createdAt,
2025-09-17T00:40:01.233391Z	    _updatedAt
2025-09-17T00:40:01.233647Z	  
2025-09-17T00:40:01.233811Z	      },
2025-09-17T00:40:01.233971Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "qualcomm"])
2025-09-17T00:40:01.234074Z	    }
2025-09-17T00:40:01.234158Z	  
2025-09-17T00:40:01.234258Z	Query parameters: {
2025-09-17T00:40:01.234419Z	  limit: 8,
2025-09-17T00:40:01.234675Z	  offset: 0,
2025-09-17T00:40:01.234809Z	  category: undefined,
2025-09-17T00:40:01.234904Z	  brand: 'qualcomm',
2025-09-17T00:40:01.235003Z	  featured: undefined
2025-09-17T00:40:01.235098Z	}
2025-09-17T00:40:01.235197Z	Fetching solutions with query: 
2025-09-17T00:40:01.235309Z	    {
2025-09-17T00:40:01.235403Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:01.235499Z	        
2025-09-17T00:40:01.235598Z	    _id,
2025-09-17T00:40:01.235691Z	    title,
2025-09-17T00:40:01.235792Z	    "slug": slug.current,
2025-09-17T00:40:01.235879Z	    summary,
2025-09-17T00:40:01.235965Z	    description,
2025-09-17T00:40:01.236045Z	    coverImage,
2025-09-17T00:40:01.236128Z	    primaryBrand->{
2025-09-17T00:40:01.236217Z	      _id,
2025-09-17T00:40:01.236322Z	      name,
2025-09-17T00:40:01.236426Z	      "slug": slug.current,
2025-09-17T00:40:01.23653Z	      logo
2025-09-17T00:40:01.236616Z	    },
2025-09-17T00:40:01.236701Z	    relatedBrands[]->{
2025-09-17T00:40:01.236797Z	      _id,
2025-09-17T00:40:01.236882Z	      name,
2025-09-17T00:40:01.236972Z	      "slug": slug.current,
2025-09-17T00:40:01.237063Z	      logo
2025-09-17T00:40:01.237162Z	    },
2025-09-17T00:40:01.237254Z	    targetMarket,
2025-09-17T00:40:01.237361Z	    complexity,
2025-09-17T00:40:01.237492Z	    publishedAt,
2025-09-17T00:40:01.237603Z	    isPublished,
2025-09-17T00:40:01.237698Z	    isFeatured,
2025-09-17T00:40:01.237929Z	    viewCount,
2025-09-17T00:40:01.238072Z	    _createdAt,
2025-09-17T00:40:01.238175Z	    _updatedAt
2025-09-17T00:40:01.238281Z	  
2025-09-17T00:40:01.238392Z	      },
2025-09-17T00:40:01.238486Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("qualcomm" in relatedBrands[]->slug.current || primaryBrand->slug.current == "qualcomm")])
2025-09-17T00:40:01.238595Z	    }
2025-09-17T00:40:01.238709Z	  
2025-09-17T00:40:01.238804Z	Query parameters: {
2025-09-17T00:40:01.238897Z	  limit: 4,
2025-09-17T00:40:01.238983Z	  offset: 0,
2025-09-17T00:40:01.239071Z	  targetMarket: undefined,
2025-09-17T00:40:01.239161Z	  brand: 'qualcomm',
2025-09-17T00:40:01.239249Z	  featured: undefined
2025-09-17T00:40:01.23936Z	}
2025-09-17T00:40:01.239463Z	✅ [getBrandData] Found brand: Qualcomm
2025-09-17T00:40:01.239578Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:40:01.239694Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:40:01.23979Z	🔍 [getBrandData] Searching for brand with slug: mediatek
2025-09-17T00:40:01.239895Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-17T00:40:01.239987Z	Fetching products with query: 
2025-09-17T00:40:01.240063Z	    {
2025-09-17T00:40:01.24012Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:01.240177Z	        
2025-09-17T00:40:01.240232Z	    _id,
2025-09-17T00:40:01.240315Z	    _type,
2025-09-17T00:40:01.240406Z	    partNumber,
2025-09-17T00:40:01.2405Z	    "slug": slug.current,
2025-09-17T00:40:01.240586Z	    title,
2025-09-17T00:40:01.240689Z	    shortDescription,
2025-09-17T00:40:01.240779Z	    image,
2025-09-17T00:40:01.240859Z	    brand->{
2025-09-17T00:40:01.24094Z	      name,
2025-09-17T00:40:01.241022Z	      "slug": slug.current,
2025-09-17T00:40:01.241113Z	      logo
2025-09-17T00:40:01.241208Z	    },
2025-09-17T00:40:01.241323Z	    category->{
2025-09-17T00:40:01.241422Z	      name,
2025-09-17T00:40:01.241519Z	      "slug": slug.current
2025-09-17T00:40:01.241889Z	    },
2025-09-17T00:40:01.242029Z	    pricing{
2025-09-17T00:40:01.2422Z	      currency,
2025-09-17T00:40:01.242302Z	      tiers[]{
2025-09-17T00:40:01.242463Z	        quantity,
2025-09-17T00:40:01.242668Z	        price,
2025-09-17T00:40:01.242804Z	        unit
2025-09-17T00:40:01.242888Z	      },
2025-09-17T00:40:01.242979Z	      moq,
2025-09-17T00:40:01.243142Z	      leadTime,
2025-09-17T00:40:01.243309Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:01.243389Z	      "price": tiers[0].price,
2025-09-17T00:40:01.243644Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:01.243911Z	    },
2025-09-17T00:40:01.244128Z	    inventory{
2025-09-17T00:40:01.244223Z	      quantity,
2025-09-17T00:40:01.244488Z	      status,
2025-09-17T00:40:01.244563Z	      warehouse,
2025-09-17T00:40:01.244625Z	      lastUpdated,
2025-09-17T00:40:01.244941Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:01.245027Z	      "inStock": status == "in_stock",
2025-09-17T00:40:01.245104Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:01.245341Z	    },
2025-09-17T00:40:01.245642Z	    isActive,
2025-09-17T00:40:01.24574Z	    isFeatured,
2025-09-17T00:40:01.245807Z	    isNew,
2025-09-17T00:40:01.245982Z	    _createdAt,
2025-09-17T00:40:01.246096Z	    _updatedAt
2025-09-17T00:40:01.246238Z	  
2025-09-17T00:40:01.246348Z	      },
2025-09-17T00:40:01.246435Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-17T00:40:01.246588Z	    }
2025-09-17T00:40:01.246836Z	  
2025-09-17T00:40:01.246925Z	Query parameters: {
2025-09-17T00:40:01.24699Z	  limit: 8,
2025-09-17T00:40:01.247045Z	  offset: 0,
2025-09-17T00:40:01.247204Z	  category: undefined,
2025-09-17T00:40:01.247745Z	  brand: 'pi',
2025-09-17T00:40:01.247825Z	  featured: undefined
2025-09-17T00:40:01.247884Z	}
2025-09-17T00:40:01.247944Z	Fetching solutions with query: 
2025-09-17T00:40:01.24801Z	    {
2025-09-17T00:40:01.248073Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:01.248136Z	        
2025-09-17T00:40:01.248201Z	    _id,
2025-09-17T00:40:01.248256Z	    title,
2025-09-17T00:40:01.248342Z	    "slug": slug.current,
2025-09-17T00:40:01.248409Z	    summary,
2025-09-17T00:40:01.248465Z	    description,
2025-09-17T00:40:01.248532Z	    coverImage,
2025-09-17T00:40:01.248595Z	    primaryBrand->{
2025-09-17T00:40:01.248651Z	      _id,
2025-09-17T00:40:01.248725Z	      name,
2025-09-17T00:40:01.248779Z	      "slug": slug.current,
2025-09-17T00:40:01.248834Z	      logo
2025-09-17T00:40:01.248896Z	    },
2025-09-17T00:40:01.248956Z	    relatedBrands[]->{
2025-09-17T00:40:01.249019Z	      _id,
2025-09-17T00:40:01.24908Z	      name,
2025-09-17T00:40:01.249142Z	      "slug": slug.current,
2025-09-17T00:40:01.249198Z	      logo
2025-09-17T00:40:01.249253Z	    },
2025-09-17T00:40:01.249325Z	    targetMarket,
2025-09-17T00:40:01.249386Z	    complexity,
2025-09-17T00:40:01.249442Z	    publishedAt,
2025-09-17T00:40:01.249497Z	    isPublished,
2025-09-17T00:40:01.249553Z	    isFeatured,
2025-09-17T00:40:01.249615Z	    viewCount,
2025-09-17T00:40:01.249684Z	    _createdAt,
2025-09-17T00:40:01.249747Z	    _updatedAt
2025-09-17T00:40:01.249804Z	  
2025-09-17T00:40:01.249871Z	      },
2025-09-17T00:40:01.249931Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("pi" in relatedBrands[]->slug.current || primaryBrand->slug.current == "pi")])
2025-09-17T00:40:01.249992Z	    }
2025-09-17T00:40:01.250058Z	  
2025-09-17T00:40:01.250118Z	Query parameters: {
2025-09-17T00:40:01.250184Z	  limit: 4,
2025-09-17T00:40:01.250246Z	  offset: 0,
2025-09-17T00:40:01.250315Z	  targetMarket: undefined,
2025-09-17T00:40:01.250376Z	  brand: 'pi',
2025-09-17T00:40:01.250446Z	  featured: undefined
2025-09-17T00:40:01.250505Z	}
2025-09-17T00:40:01.250575Z	✅ [getBrandData] Found brand: PI
2025-09-17T00:40:01.250639Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:40:01.250761Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:40:01.250841Z	🔍 [getBrandData] Searching for brand with slug: pi
2025-09-17T00:40:01.250905Z	Fetching products with query: 
2025-09-17T00:40:01.250964Z	    {
2025-09-17T00:40:01.25102Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:01.251599Z	        
2025-09-17T00:40:01.251686Z	    _id,
2025-09-17T00:40:01.251925Z	    _type,
2025-09-17T00:40:01.25201Z	    partNumber,
2025-09-17T00:40:01.252079Z	    "slug": slug.current,
2025-09-17T00:40:01.252319Z	    title,
2025-09-17T00:40:01.252445Z	    shortDescription,
2025-09-17T00:40:01.25259Z	    image,
2025-09-17T00:40:01.252751Z	    brand->{
2025-09-17T00:40:01.252934Z	      name,
2025-09-17T00:40:01.253077Z	      "slug": slug.current,
2025-09-17T00:40:01.253226Z	      logo
2025-09-17T00:40:01.253377Z	    },
2025-09-17T00:40:01.253547Z	    category->{
2025-09-17T00:40:01.253635Z	      name,
2025-09-17T00:40:01.25377Z	      "slug": slug.current
2025-09-17T00:40:01.253887Z	    },
2025-09-17T00:40:01.254079Z	    pricing{
2025-09-17T00:40:01.254226Z	      currency,
2025-09-17T00:40:01.254385Z	      tiers[]{
2025-09-17T00:40:01.254531Z	        quantity,
2025-09-17T00:40:01.25469Z	        price,
2025-09-17T00:40:01.254843Z	        unit
2025-09-17T00:40:01.254999Z	      },
2025-09-17T00:40:01.255162Z	      moq,
2025-09-17T00:40:01.255264Z	      leadTime,
2025-09-17T00:40:01.255431Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:01.255525Z	      "price": tiers[0].price,
2025-09-17T00:40:01.255719Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:01.255817Z	    },
2025-09-17T00:40:01.255942Z	    inventory{
2025-09-17T00:40:01.256113Z	      quantity,
2025-09-17T00:40:01.256213Z	      status,
2025-09-17T00:40:01.256425Z	      warehouse,
2025-09-17T00:40:01.256586Z	      lastUpdated,
2025-09-17T00:40:01.256807Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:01.256914Z	      "inStock": status == "in_stock",
2025-09-17T00:40:01.257022Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:01.257118Z	    },
2025-09-17T00:40:01.257283Z	    isActive,
2025-09-17T00:40:01.257452Z	    isFeatured,
2025-09-17T00:40:01.257584Z	    isNew,
2025-09-17T00:40:01.257729Z	    _createdAt,
2025-09-17T00:40:01.257998Z	    _updatedAt
2025-09-17T00:40:01.258084Z	  
2025-09-17T00:40:01.258207Z	      },
2025-09-17T00:40:01.258318Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "pi"])
2025-09-17T00:40:01.258433Z	    }
2025-09-17T00:40:01.258539Z	  
2025-09-17T00:40:01.258641Z	Query parameters: {
2025-09-17T00:40:01.258752Z	  limit: 8,
2025-09-17T00:40:01.258862Z	  offset: 0,
2025-09-17T00:40:01.258954Z	  category: undefined,
2025-09-17T00:40:01.259075Z	  brand: 'pi',
2025-09-17T00:40:01.259157Z	  featured: undefined
2025-09-17T00:40:01.259371Z	}
2025-09-17T00:40:01.259482Z	🔍 [getBrandData] Searching for brand with slug: ncc
2025-09-17T00:40:01.259596Z	Fetching products with query: 
2025-09-17T00:40:01.259775Z	    {
2025-09-17T00:40:01.259885Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:01.259986Z	        
2025-09-17T00:40:01.260136Z	    _id,
2025-09-17T00:40:01.260281Z	    _type,
2025-09-17T00:40:01.260426Z	    partNumber,
2025-09-17T00:40:01.260527Z	    "slug": slug.current,
2025-09-17T00:40:01.260719Z	    title,
2025-09-17T00:40:01.260834Z	    shortDescription,
2025-09-17T00:40:01.261031Z	    image,
2025-09-17T00:40:01.26116Z	    brand->{
2025-09-17T00:40:01.261311Z	      name,
2025-09-17T00:40:01.261414Z	      "slug": slug.current,
2025-09-17T00:40:01.261523Z	      logo
2025-09-17T00:40:01.261643Z	    },
2025-09-17T00:40:01.261748Z	    category->{
2025-09-17T00:40:01.261894Z	      name,
2025-09-17T00:40:01.262078Z	      "slug": slug.current
2025-09-17T00:40:01.262222Z	    },
2025-09-17T00:40:01.262417Z	    pricing{
2025-09-17T00:40:01.26255Z	      currency,
2025-09-17T00:40:01.262855Z	      tiers[]{
2025-09-17T00:40:01.263027Z	        quantity,
2025-09-17T00:40:01.263117Z	        price,
2025-09-17T00:40:01.263639Z	        unit
2025-09-17T00:40:01.263828Z	      },
2025-09-17T00:40:01.264131Z	      moq,
2025-09-17T00:40:01.264261Z	      leadTime,
2025-09-17T00:40:01.264664Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:01.264745Z	      "price": tiers[0].price,
2025-09-17T00:40:01.265011Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:01.265092Z	    },
2025-09-17T00:40:01.265212Z	    inventory{
2025-09-17T00:40:01.265391Z	      quantity,
2025-09-17T00:40:01.265724Z	      status,
2025-09-17T00:40:01.265984Z	      warehouse,
2025-09-17T00:40:01.266228Z	      lastUpdated,
2025-09-17T00:40:01.266391Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:01.266667Z	      "inStock": status == "in_stock",
2025-09-17T00:40:01.266746Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:01.266969Z	    },
2025-09-17T00:40:01.267046Z	    isActive,
2025-09-17T00:40:01.267105Z	    isFeatured,
2025-09-17T00:40:01.267363Z	    isNew,
2025-09-17T00:40:01.267449Z	    _createdAt,
2025-09-17T00:40:01.267584Z	    _updatedAt
2025-09-17T00:40:01.267665Z	  
2025-09-17T00:40:01.267897Z	      },
2025-09-17T00:40:01.267988Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ncc"])
2025-09-17T00:40:01.268142Z	    }
2025-09-17T00:40:01.2683Z	  
2025-09-17T00:40:01.268439Z	Query parameters: {
2025-09-17T00:40:01.268521Z	  limit: 8,
2025-09-17T00:40:01.268653Z	  offset: 0,
2025-09-17T00:40:01.268793Z	  category: undefined,
2025-09-17T00:40:01.26896Z	  brand: 'ncc',
2025-09-17T00:40:01.269071Z	  featured: undefined
2025-09-17T00:40:01.269438Z	}
2025-09-17T00:40:01.269526Z	Fetching solutions with query: 
2025-09-17T00:40:01.269674Z	    {
2025-09-17T00:40:01.269764Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:01.270017Z	        
2025-09-17T00:40:01.270103Z	    _id,
2025-09-17T00:40:01.270215Z	    title,
2025-09-17T00:40:01.270704Z	    "slug": slug.current,
2025-09-17T00:40:01.270805Z	    summary,
2025-09-17T00:40:01.271063Z	    description,
2025-09-17T00:40:01.271146Z	    coverImage,
2025-09-17T00:40:01.271401Z	    primaryBrand->{
2025-09-17T00:40:01.271646Z	      _id,
2025-09-17T00:40:01.271737Z	      name,
2025-09-17T00:40:01.271885Z	      "slug": slug.current,
2025-09-17T00:40:01.272027Z	      logo
2025-09-17T00:40:01.272105Z	    },
2025-09-17T00:40:01.272235Z	    relatedBrands[]->{
2025-09-17T00:40:01.272386Z	      _id,
2025-09-17T00:40:01.272464Z	      name,
2025-09-17T00:40:01.272711Z	      "slug": slug.current,
2025-09-17T00:40:01.272988Z	      logo
2025-09-17T00:40:01.273091Z	    },
2025-09-17T00:40:01.273231Z	    targetMarket,
2025-09-17T00:40:01.273415Z	    complexity,
2025-09-17T00:40:01.273517Z	    publishedAt,
2025-09-17T00:40:01.273915Z	    isPublished,
2025-09-17T00:40:01.274044Z	    isFeatured,
2025-09-17T00:40:01.274144Z	    viewCount,
2025-09-17T00:40:01.274246Z	    _createdAt,
2025-09-17T00:40:01.274367Z	    _updatedAt
2025-09-17T00:40:01.274464Z	  
2025-09-17T00:40:01.274574Z	      },
2025-09-17T00:40:01.27471Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ncc" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ncc")])
2025-09-17T00:40:01.274808Z	    }
2025-09-17T00:40:01.27492Z	  
2025-09-17T00:40:01.275019Z	Query parameters: {
2025-09-17T00:40:01.275141Z	  limit: 4,
2025-09-17T00:40:01.275211Z	  offset: 0,
2025-09-17T00:40:01.275284Z	  targetMarket: undefined,
2025-09-17T00:40:01.275376Z	  brand: 'ncc',
2025-09-17T00:40:01.27546Z	  featured: undefined
2025-09-17T00:40:01.275559Z	}
2025-09-17T00:40:01.275652Z	✅ [getBrandData] Found brand: LEM
2025-09-17T00:40:01.275761Z	✅ [getBrandData] Found brand: LEM
2025-09-17T00:40:01.275868Z	Products fetch result: {
2025-09-17T00:40:01.275977Z	  totalProducts: 3,
2025-09-17T00:40:01.276051Z	  fetchedProducts: 3,
2025-09-17T00:40:01.276129Z	  firstProduct: {
2025-09-17T00:40:01.27625Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-17T00:40:01.276362Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-17T00:40:01.276464Z	    _type: 'product',
2025-09-17T00:40:01.276555Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-17T00:40:01.27666Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-17T00:40:01.276733Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-17T00:40:01.276806Z	    image: null,
2025-09-17T00:40:01.276902Z	    inventory: {
2025-09-17T00:40:01.277011Z	      inStock: true,
2025-09-17T00:40:01.277121Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-17T00:40:01.277221Z	      quantity: 0,
2025-09-17T00:40:01.277331Z	      status: 'in_stock',
2025-09-17T00:40:01.277435Z	      warehouse: null
2025-09-17T00:40:01.277535Z	    },
2025-09-17T00:40:01.277633Z	    isActive: true,
2025-09-17T00:40:01.277736Z	    isFeatured: false,
2025-09-17T00:40:01.277843Z	    isNew: false,
2025-09-17T00:40:01.277939Z	    partNumber: 'la55-p',
2025-09-17T00:40:01.278029Z	    pricing: {
2025-09-17T00:40:01.278114Z	      currency: 'CNY',
2025-09-17T00:40:01.278216Z	      leadTime: null,
2025-09-17T00:40:01.278335Z	      moq: null,
2025-09-17T00:40:01.278447Z	      price: null,
2025-09-17T00:40:01.278548Z	      tiers: null
2025-09-17T00:40:01.278674Z	    },
2025-09-17T00:40:01.278775Z	    shortDescription: '电流传感器la55-p',
2025-09-17T00:40:01.278876Z	    slug: 'la55-p',
2025-09-17T00:40:01.27897Z	    title: '电流传感器la55-p'
2025-09-17T00:40:01.279071Z	  }
2025-09-17T00:40:01.279162Z	}
2025-09-17T00:40:01.279325Z	Products fetch result: {
2025-09-17T00:40:01.279404Z	  totalProducts: 3,
2025-09-17T00:40:01.279628Z	  fetchedProducts: 3,
2025-09-17T00:40:01.279807Z	  firstProduct: {
2025-09-17T00:40:01.279933Z	    _createdAt: '2025-09-10T11:02:28Z',
2025-09-17T00:40:01.280068Z	    _id: '46fd4bea-4492-45f2-a216-8af2a89f8aa2',
2025-09-17T00:40:01.280221Z	    _type: 'product',
2025-09-17T00:40:01.280386Z	    _updatedAt: '2025-09-10T11:03:44Z',
2025-09-17T00:40:01.280527Z	    brand: { logo: null, name: 'LEM', slug: 'lem' },
2025-09-17T00:40:01.280703Z	    category: { name: '传感器', slug: 'sensor' },
2025-09-17T00:40:01.28086Z	    image: null,
2025-09-17T00:40:01.280997Z	    inventory: {
2025-09-17T00:40:01.28113Z	      inStock: true,
2025-09-17T00:40:01.281261Z	      lastUpdated: '2025-09-10T11:02:15.065Z',
2025-09-17T00:40:01.281419Z	      quantity: 0,
2025-09-17T00:40:01.281554Z	      status: 'in_stock',
2025-09-17T00:40:01.281627Z	      warehouse: null
2025-09-17T00:40:01.281755Z	    },
2025-09-17T00:40:01.281835Z	    isActive: true,
2025-09-17T00:40:01.281968Z	    isFeatured: false,
2025-09-17T00:40:01.282043Z	    isNew: false,
2025-09-17T00:40:01.282098Z	    partNumber: 'la55-p',
2025-09-17T00:40:01.282217Z	    pricing: {
2025-09-17T00:40:01.282373Z	      currency: 'CNY',
2025-09-17T00:40:01.282517Z	      leadTime: null,
2025-09-17T00:40:01.282588Z	      moq: null,
2025-09-17T00:40:01.282722Z	      price: null,
2025-09-17T00:40:01.282841Z	      tiers: null
2025-09-17T00:40:01.282985Z	    },
2025-09-17T00:40:01.283185Z	    shortDescription: '电流传感器la55-p',
2025-09-17T00:40:01.283343Z	    slug: 'la55-p',
2025-09-17T00:40:01.2835Z	    title: '电流传感器la55-p'
2025-09-17T00:40:01.283627Z	  }
2025-09-17T00:40:01.283786Z	}
2025-09-17T00:40:01.283902Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:40:01.284011Z	Solutions fetch result: { totalSolutions: 0, fetchedSolutions: 0, firstSolution: null }
2025-09-17T00:40:01.284154Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-17T00:40:01.284385Z	Fetching products with query: 
2025-09-17T00:40:01.284537Z	    {
2025-09-17T00:40:01.284731Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:01.284984Z	        
2025-09-17T00:40:01.285081Z	    _id,
2025-09-17T00:40:01.285316Z	    _type,
2025-09-17T00:40:01.285484Z	    partNumber,
2025-09-17T00:40:01.285592Z	    "slug": slug.current,
2025-09-17T00:40:01.285699Z	    title,
2025-09-17T00:40:01.285809Z	    shortDescription,
2025-09-17T00:40:01.285914Z	    image,
2025-09-17T00:40:01.286021Z	    brand->{
2025-09-17T00:40:01.286118Z	      name,
2025-09-17T00:40:01.28622Z	      "slug": slug.current,
2025-09-17T00:40:01.286352Z	      logo
2025-09-17T00:40:01.286456Z	    },
2025-09-17T00:40:01.286564Z	    category->{
2025-09-17T00:40:01.286667Z	      name,
2025-09-17T00:40:01.286767Z	      "slug": slug.current
2025-09-17T00:40:01.28686Z	    },
2025-09-17T00:40:01.286968Z	    pricing{
2025-09-17T00:40:01.287074Z	      currency,
2025-09-17T00:40:01.287185Z	      tiers[]{
2025-09-17T00:40:01.287316Z	        quantity,
2025-09-17T00:40:01.287421Z	        price,
2025-09-17T00:40:01.287517Z	        unit
2025-09-17T00:40:01.287619Z	      },
2025-09-17T00:40:01.287716Z	      moq,
2025-09-17T00:40:01.287805Z	      leadTime,
2025-09-17T00:40:01.287885Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:01.288004Z	      "price": tiers[0].price,
2025-09-17T00:40:01.288121Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:01.28823Z	    },
2025-09-17T00:40:01.28835Z	    inventory{
2025-09-17T00:40:01.288452Z	      quantity,
2025-09-17T00:40:01.288586Z	      status,
2025-09-17T00:40:01.288728Z	      warehouse,
2025-09-17T00:40:01.28881Z	      lastUpdated,
2025-09-17T00:40:01.288868Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:01.289052Z	      "inStock": status == "in_stock",
2025-09-17T00:40:01.289193Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:01.289335Z	    },
2025-09-17T00:40:01.289436Z	    isActive,
2025-09-17T00:40:01.289539Z	    isFeatured,
2025-09-17T00:40:01.289641Z	    isNew,
2025-09-17T00:40:01.289731Z	    _createdAt,
2025-09-17T00:40:01.289841Z	    _updatedAt
2025-09-17T00:40:01.289949Z	  
2025-09-17T00:40:01.290048Z	      },
2025-09-17T00:40:01.290204Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-17T00:40:01.290348Z	    }
2025-09-17T00:40:01.290475Z	  
2025-09-17T00:40:01.290604Z	Query parameters: {
2025-09-17T00:40:01.290742Z	  limit: 8,
2025-09-17T00:40:01.290841Z	  offset: 0,
2025-09-17T00:40:01.29097Z	  category: undefined,
2025-09-17T00:40:01.291136Z	  brand: 'ixys',
2025-09-17T00:40:01.291212Z	  featured: undefined
2025-09-17T00:40:01.291407Z	}
2025-09-17T00:40:01.291562Z	Fetching solutions with query: 
2025-09-17T00:40:01.291807Z	    {
2025-09-17T00:40:01.292Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("i❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:40:01.292153Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:40:01.292227Z	Error fetching brand solutions data: Error: NEXT_NOT_FOUND
2025-09-17T00:40:01.292372Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:40:01.292518Z	    at f (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/solutions/page.js:1:4481)
2025-09-17T00:40:01.292707Z	    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2025-09-17T00:40:01.292883Z	    at runNextTicks (node:internal/process/task_queues:64:3)
2025-09-17T00:40:01.292972Z	    at listOnTimeout (node:internal/timers:538:9)
2025-09-17T00:40:01.2931Z	    at process.processTimers (node:internal/timers:512:7) {
2025-09-17T00:40:01.293225Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:40:01.293374Z	}
2025-09-17T00:40:01.293505Z	❌ [getBrandData] Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:40:01.293584Z	Brand not found for slug: %E8%8B%B1%E9%A3%9E%E5%87%8C
2025-09-17T00:40:01.293699Z	Error fetching brand solutions data: Error: NEXT_NOT_FOUND
2025-09-17T00:40:01.293803Z	    at n (/opt/buildhome/repo/.next/server/chunks/662.js:1:14229)
2025-09-17T00:40:01.293895Z	    at f (/opt/buildhome/repo/.next/server/app/[locale]/brands/[slug]/solutions/page.js:1:4481)
2025-09-17T00:40:01.294026Z	    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
2025-09-17T00:40:01.294139Z	  digest: 'NEXT_NOT_FOUND'
2025-09-17T00:40:01.294232Z	}
2025-09-17T00:40:01.294361Z	xys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:01.294466Z	        
2025-09-17T00:40:01.294558Z	    _id,
2025-09-17T00:40:01.294684Z	    title,
2025-09-17T00:40:01.294756Z	    "slug": slug.current,
2025-09-17T00:40:01.294847Z	    summary,
2025-09-17T00:40:01.294953Z	    description,
2025-09-17T00:40:01.295058Z	    coverImage,
2025-09-17T00:40:01.295164Z	    primaryBrand->{
2025-09-17T00:40:01.295261Z	      _id,
2025-09-17T00:40:01.295388Z	      name,
2025-09-17T00:40:01.295503Z	      "slug": slug.current,
2025-09-17T00:40:01.295614Z	      logo
2025-09-17T00:40:01.295714Z	    },
2025-09-17T00:40:01.29593Z	    relatedBrands[]->{
2025-09-17T00:40:01.296075Z	      _id,
2025-09-17T00:40:01.296219Z	      name,
2025-09-17T00:40:01.296371Z	      "slug": slug.current,
2025-09-17T00:40:01.29651Z	      logo
2025-09-17T00:40:01.296593Z	    },
2025-09-17T00:40:01.296736Z	    targetMarket,
2025-09-17T00:40:01.29685Z	    complexity,
2025-09-17T00:40:01.296941Z	    publishedAt,
2025-09-17T00:40:01.29703Z	    isPublished,
2025-09-17T00:40:01.29711Z	    isFeatured,
2025-09-17T00:40:01.297191Z	    viewCount,
2025-09-17T00:40:01.297297Z	    _createdAt,
2025-09-17T00:40:01.297405Z	    _updatedAt
2025-09-17T00:40:01.297501Z	  
2025-09-17T00:40:01.297591Z	      },
2025-09-17T00:40:01.297691Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-17T00:40:01.2978Z	    }
2025-09-17T00:40:01.297903Z	  
2025-09-17T00:40:01.297996Z	Query parameters: {
2025-09-17T00:40:01.298082Z	  limit: 4,
2025-09-17T00:40:01.298165Z	  offset: 0,
2025-09-17T00:40:01.298248Z	  targetMarket: undefined,
2025-09-17T00:40:01.298355Z	  brand: 'ixys',
2025-09-17T00:40:01.298447Z	  featured: undefined
2025-09-17T00:40:01.29854Z	}
2025-09-17T00:40:01.298634Z	✅ [getBrandData] Found brand: IXYS
2025-09-17T00:40:01.298733Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:40:01.298819Z	Solutions fetch result: {
2025-09-17T00:40:01.298902Z	  totalSolutions: 1,
2025-09-17T00:40:01.29899Z	  fetchedSolutions: 1,
2025-09-17T00:40:01.299082Z	  firstSolution: {
2025-09-17T00:40:01.2994Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-17T00:40:01.299545Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-17T00:40:01.299828Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-17T00:40:01.299943Z	    complexity: 'medium',
2025-09-17T00:40:01.300047Z	    coverImage: null,
2025-09-17T00:40:01.30014Z	    description: [ [Object] ],
2025-09-17T00:40:01.300294Z	    isFeatured: false,
2025-09-17T00:40:01.300408Z	    isPublished: true,
2025-09-17T00:40:01.300552Z	    primaryBrand: {
2025-09-17T00:40:01.300727Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:40:01.300895Z	      logo: null,
2025-09-17T00:40:01.300997Z	      name: 'IXYS',
2025-09-17T00:40:01.301108Z	      slug: 'ixys'
2025-09-17T00:40:01.301221Z	    },
2025-09-17T00:40:01.301335Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-17T00:40:01.301481Z	    relatedBrands: null,
2025-09-17T00:40:01.301588Z	    slug: '99999',
2025-09-17T00:40:01.301919Z	    summary: '99999',
2025-09-17T00:40:01.302061Z	    targetMarket: 'industrial-automation',
2025-09-17T00:40:01.302223Z	    title: '99999',
2025-09-17T00:40:01.302376Z	    viewCount: 0
2025-09-17T00:40:01.302751Z	  }
2025-09-17T00:40:01.303052Z	}
2025-09-17T00:40:01.303162Z	🔍 [getBrandData] Searching for brand with slug: ixys
2025-09-17T00:40:01.303286Z	Fetching products with query: 
2025-09-17T00:40:01.303412Z	    {
2025-09-17T00:40:01.3035Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:01.303635Z	        
2025-09-17T00:40:01.303784Z	    _id,
2025-09-17T00:40:01.303896Z	    _type,
2025-09-17T00:40:01.304005Z	    partNumber,
2025-09-17T00:40:01.304171Z	    "slug": slug.current,
2025-09-17T00:40:01.3043Z	    title,
2025-09-17T00:40:01.304449Z	    shortDescription,
2025-09-17T00:40:01.304521Z	    image,
2025-09-17T00:40:01.304583Z	    brand->{
2025-09-17T00:40:01.304717Z	      name,
2025-09-17T00:40:01.304846Z	      "slug": slug.current,
2025-09-17T00:40:01.305018Z	      logo
2025-09-17T00:40:01.305092Z	    },
2025-09-17T00:40:01.305231Z	    category->{
2025-09-17T00:40:01.30534Z	      name,
2025-09-17T00:40:01.30544Z	      "slug": slug.current
2025-09-17T00:40:01.305552Z	    },
2025-09-17T00:40:01.305673Z	    pricing{
2025-09-17T00:40:01.305799Z	      currency,
2025-09-17T00:40:01.305943Z	      tiers[]{
2025-09-17T00:40:01.30603Z	        quantity,
2025-09-17T00:40:01.306123Z	        price,
2025-09-17T00:40:01.306254Z	        unit
2025-09-17T00:40:01.306436Z	      },
2025-09-17T00:40:01.306518Z	      moq,
2025-09-17T00:40:01.306598Z	      leadTime,
2025-09-17T00:40:01.30672Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:01.306879Z	      "price": tiers[0].price,
2025-09-17T00:40:01.306981Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:01.30709Z	    },
2025-09-17T00:40:01.307251Z	    inventory{
2025-09-17T00:40:01.307365Z	      quantity,
2025-09-17T00:40:01.307466Z	      status,
2025-09-17T00:40:01.307562Z	      warehouse,
2025-09-17T00:40:01.307657Z	      lastUpdated,
2025-09-17T00:40:01.307796Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:01.307909Z	      "inStock": status == "in_stock",
2025-09-17T00:40:01.308006Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:01.308099Z	    },
2025-09-17T00:40:01.308198Z	    isActive,
2025-09-17T00:40:01.308312Z	    isFeatured,
2025-09-17T00:40:01.308457Z	    isNew,
2025-09-17T00:40:01.308568Z	    _createdAt,
2025-09-17T00:40:01.308691Z	    _updatedAt
2025-09-17T00:40:01.308816Z	  
2025-09-17T00:40:01.308977Z	      },
2025-09-17T00:40:01.309082Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "ixys"])
2025-09-17T00:40:01.309157Z	    }
2025-09-17T00:40:01.309358Z	  
2025-09-17T00:40:01.309556Z	Query parameters: {
2025-09-17T00:40:01.309722Z	  limit: 8,
2025-09-17T00:40:01.309837Z	  offset: 0,
2025-09-17T00:40:01.309949Z	  category: undefined,
2025-09-17T00:40:01.310067Z	  brand: 'ixys',
2025-09-17T00:40:01.310169Z	  featured: undefined
2025-09-17T00:40:01.310288Z	}
2025-09-17T00:40:01.310395Z	Fetching solutions with query: 
2025-09-17T00:40:01.310498Z	    {
2025-09-17T00:40:01.31062Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:01.310728Z	        
2025-09-17T00:40:01.310823Z	    _id,
2025-09-17T00:40:01.310917Z	    title,
2025-09-17T00:40:01.311014Z	    "slug": slug.current,
2025-09-17T00:40:01.311115Z	    summary,
2025-09-17T00:40:01.311217Z	    description,
2025-09-17T00:40:01.311334Z	    coverImage,
2025-09-17T00:40:01.311436Z	    primaryBrand->{
2025-09-17T00:40:01.311535Z	      _id,
2025-09-17T00:40:01.311632Z	      name,
2025-09-17T00:40:01.311721Z	      "slug": slug.current,
2025-09-17T00:40:01.311808Z	      logo
2025-09-17T00:40:01.311907Z	    },
2025-09-17T00:40:01.312016Z	    relatedBrands[]->{
2025-09-17T00:40:01.312117Z	      _id,
2025-09-17T00:40:01.31222Z	      name,
2025-09-17T00:40:01.312343Z	      "slug": slug.current,
2025-09-17T00:40:01.312447Z	      logo
2025-09-17T00:40:01.312561Z	    },
2025-09-17T00:40:01.312658Z	    targetMarket,
2025-09-17T00:40:01.31275Z	    complexity,
2025-09-17T00:40:01.312848Z	    publishedAt,
2025-09-17T00:40:01.31295Z	    isPublished,
2025-09-17T00:40:01.313038Z	    isFeatured,
2025-09-17T00:40:01.313133Z	    viewCount,
2025-09-17T00:40:01.313219Z	    _createdAt,
2025-09-17T00:40:01.313332Z	    _updatedAt
2025-09-17T00:40:01.31343Z	  
2025-09-17T00:40:01.313526Z	      },
2025-09-17T00:40:01.313619Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("ixys" in relatedBrands[]->slug.current || primaryBrand->slug.current == "ixys")])
2025-09-17T00:40:01.313716Z	    }
2025-09-17T00:40:01.31381Z	  
2025-09-17T00:40:01.313926Z	Query parameters: {
2025-09-17T00:40:01.314015Z	  limit: 4,
2025-09-17T00:40:01.314119Z	  offset: 0,
2025-09-17T00:40:01.314209Z	  targetMarket: undefined,
2025-09-17T00:40:01.314343Z	  brand: 'ixys',
2025-09-17T00:40:01.31445Z	  featured: undefined
2025-09-17T00:40:01.314551Z	}
2025-09-17T00:40:01.314776Z	✅ [getBrandData] Found brand: IXYS
2025-09-17T00:40:01.314908Z	Products fetch result: { totalProducts: 0, fetchedProducts: 0, firstProduct: null }
2025-09-17T00:40:01.315015Z	Solutions fetch result: {
2025-09-17T00:40:01.315121Z	  totalSolutions: 1,
2025-09-17T00:40:01.315223Z	  fetchedSolutions: 1,
2025-09-17T00:40:01.315337Z	  firstSolution: {
2025-09-17T00:40:01.315434Z	    _createdAt: '2025-09-15T10:06:14Z',
2025-09-17T00:40:01.315523Z	    _id: 'e4682cee-1cd1-4018-97ce-0650c7f700c9',
2025-09-17T00:40:01.315612Z	    _updatedAt: '2025-09-15T10:07:20Z',
2025-09-17T00:40:01.3157Z	    complexity: 'medium',
2025-09-17T00:40:01.315787Z	    coverImage: null,
2025-09-17T00:40:01.315873Z	    description: [ [Object] ],
2025-09-17T00:40:01.315978Z	    isFeatured: false,
2025-09-17T00:40:01.316064Z	    isPublished: true,
2025-09-17T00:40:01.316153Z	    primaryBrand: {
2025-09-17T00:40:01.316263Z	      _id: '41db78b7-772e-4324-8263-4897a6ae684f',
2025-09-17T00:40:01.316375Z	      logo: null,
2025-09-17T00:40:01.316481Z	      name: 'IXYS',
2025-09-17T00:40:01.316581Z	      slug: 'ixys'
2025-09-17T00:40:01.316705Z	    },
2025-09-17T00:40:01.316812Z	    publishedAt: '2025-09-15T10:05:59.500Z',
2025-09-17T00:40:01.316927Z	    relatedBrands: null,
2025-09-17T00:40:01.31703Z	    slug: '99999',
2025-09-17T00:40:01.317125Z	    summary: '99999',
2025-09-17T00:40:01.317229Z	    targetMarket: 'industrial-automation',
2025-09-17T00:40:01.317343Z	    title: '99999',
2025-09-17T00:40:01.317441Z	    viewCount: 0
2025-09-17T00:40:01.317545Z	  }
2025-09-17T00:40:01.317645Z	}
2025-09-17T00:40:01.317752Z	🔍 [getBrandData] Searching for brand with slug: 英飞凌
2025-09-17T00:40:01.317858Z	Fetching products with query: 
2025-09-17T00:40:01.317964Z	    {
2025-09-17T00:40:01.318063Z	      "products": *[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"] | order(_createdAt desc) [0...8] {
2025-09-17T00:40:01.318188Z	        
2025-09-17T00:40:01.318305Z	    _id,
2025-09-17T00:40:01.318416Z	    _type,
2025-09-17T00:40:01.318515Z	    partNumber,
2025-09-17T00:40:01.318625Z	    "slug": slug.current,
2025-09-17T00:40:01.318723Z	    title,
2025-09-17T00:40:01.318827Z	    shortDescription,
2025-09-17T00:40:01.318937Z	    image,
2025-09-17T00:40:01.319038Z	    brand->{
2025-09-17T00:40:01.319136Z	      name,
2025-09-17T00:40:01.319243Z	      "slug": slug.current,
2025-09-17T00:40:01.31936Z	      logo
2025-09-17T00:40:01.319462Z	    },
2025-09-17T00:40:01.319551Z	    category->{
2025-09-17T00:40:01.319664Z	      name,
2025-09-17T00:40:01.319758Z	      "slug": slug.current
2025-09-17T00:40:01.319845Z	    },
2025-09-17T00:40:01.319952Z	    pricing{
2025-09-17T00:40:01.320051Z	      currency,
2025-09-17T00:40:01.32015Z	      tiers[]{
2025-09-17T00:40:01.320243Z	        quantity,
2025-09-17T00:40:01.320352Z	        price,
2025-09-17T00:40:01.320448Z	        unit
2025-09-17T00:40:01.320539Z	      },
2025-09-17T00:40:01.320637Z	      moq,
2025-09-17T00:40:01.320733Z	      leadTime,
2025-09-17T00:40:01.320843Z	      // 兼容字段：提取第一个价格作为默认价格
2025-09-17T00:40:01.320951Z	      "price": tiers[0].price,
2025-09-17T00:40:01.321038Z	      "currency": coalesce(currency, "CNY")
2025-09-17T00:40:01.321132Z	    },
2025-09-17T00:40:01.321229Z	    inventory{
2025-09-17T00:40:01.321342Z	      quantity,
2025-09-17T00:40:01.321447Z	      status,
2025-09-17T00:40:01.321557Z	      warehouse,
2025-09-17T00:40:01.321658Z	      lastUpdated,
2025-09-17T00:40:01.321762Z	      // 兼容字段：转换状态为布尔值
2025-09-17T00:40:01.321867Z	      "inStock": status == "in_stock",
2025-09-17T00:40:01.321976Z	      "quantity": coalesce(quantity, 0)
2025-09-17T00:40:01.322107Z	    },
2025-09-17T00:40:01.322219Z	    isActive,
2025-09-17T00:40:01.322336Z	    isFeatured,
2025-09-17T00:40:01.322435Z	    isNew,
2025-09-17T00:40:01.322533Z	    _createdAt,
2025-09-17T00:40:01.322629Z	    _updatedAt
2025-09-17T00:40:01.322719Z	  
2025-09-17T00:40:01.322809Z	      },
2025-09-17T00:40:01.322912Z	      "total": count(*[_type == "product" && isActive == true && !(_id in path("drafts.**")) && brand->slug.current == "英飞凌"])
2025-09-17T00:40:01.323016Z	    }
2025-09-17T00:40:01.323113Z	  
2025-09-17T00:40:01.32321Z	Query parameters: {
2025-09-17T00:40:01.323328Z	  limit: 8,
2025-09-17T00:40:01.323431Z	  offset: 0,
2025-09-17T00:40:01.323533Z	  category: undefined,
2025-09-17T00:40:01.323635Z	  brand: '英飞凌',
2025-09-17T00:40:01.32374Z	  featured: undefined
2025-09-17T00:40:01.323843Z	}
2025-09-17T00:40:01.324076Z	Fetching solutions with query: 
2025-09-17T00:40:01.324379Z	    {
2025-09-17T00:40:01.324486Z	      "solutions": *[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")] | order(publishedAt desc) [0...4] {
2025-09-17T00:40:01.324799Z	        
2025-09-17T00:40:01.324937Z	    _id,
2025-09-17T00:40:01.325066Z	    title,
2025-09-17T00:40:01.325176Z	    "slug": slug.current,
2025-09-17T00:40:01.325413Z	    summary,
2025-09-17T00:40:01.325506Z	    description,
2025-09-17T00:40:01.325566Z	    coverImage,
2025-09-17T00:40:01.325744Z	    primaryBrand->{
2025-09-17T00:40:01.325816Z	      _id,
2025-09-17T00:40:01.326048Z	      name,
2025-09-17T00:40:01.326339Z	      "slug": slug.current,
2025-09-17T00:40:01.326428Z	      logo
2025-09-17T00:40:01.326661Z	    },
2025-09-17T00:40:01.326893Z	    relatedBrands[]->{
2025-09-17T00:40:01.326993Z	      _id,
2025-09-17T00:40:01.327243Z	      name,
2025-09-17T00:40:01.327396Z	      "slug": slug.current,
2025-09-17T00:40:01.327521Z	      logo
2025-09-17T00:40:01.327653Z	    },
2025-09-17T00:40:01.3278Z	    targetMarket,
2025-09-17T00:40:01.32794Z	    complexity,
2025-09-17T00:40:01.32808Z	    publishedAt,
2025-09-17T00:40:01.32824Z	    isPublished,
2025-09-17T00:40:01.328405Z	    isFeatured,
2025-09-17T00:40:01.328523Z	    viewCount,
2025-09-17T00:40:01.32866Z	    _createdAt,
2025-09-17T00:40:01.3288Z	    _updatedAt
2025-09-17T00:40:01.32898Z	  
2025-09-17T00:40:01.329136Z	      },
2025-09-17T00:40:01.329325Z	      "total": count(*[_type == "solution" && (isPublished == true || !defined(isPublished)) && ("英飞凌" in relatedBrands[]->slug.current || primaryBrand->slug.current == "英飞凌")])
2025-09-17T00:40:01.329432Z	    }
2025-09-17T00:40:01.329509Z	  
2025-09-17T00:40:01.329575Z	Query parameters: {
2025-09-17T00:40:01.329633Z	  limit: 4,
2025-09-17T00:40:01.329698Z	  offset: 0,
2025-09-17T00:40:01.329756Z	  targetMarket: undefined,
2025-09-17T00:40:01.32981Z	  brand: '英飞凌',
2025-09-17T00:40:01.329865Z	  featured: undefined
2025-09-17T00:40:01.329919Z	}
2025-09-17T00:40:07.467258Z	Failed: an internal error occurred. If this continues, contact support: https://cfl.re/3WgEyrH